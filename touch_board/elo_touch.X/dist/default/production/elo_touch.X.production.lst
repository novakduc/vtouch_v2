

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Sep 15 14:33:50 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1,inline
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1,inline
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=4,class=CODE,delta=1
    95                           	psect	text77,global,reloc=4,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=4,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=4,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=4,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1
   111                           	psect	text93,global,reloc=4,class=CODE,delta=1
   112                           	psect	text94,global,reloc=2,class=CODE,delta=1
   113                           	psect	text95,global,reloc=4,class=CODE,delta=1
   114                           	psect	text96,global,reloc=2,class=CODE,delta=1
   115                           	psect	text97,global,reloc=2,class=CODE,delta=1
   116                           	psect	text98,global,reloc=2,class=CODE,delta=1
   117                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   118                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   121  0000                     
   122                           ; Version 2.10
   123                           ; Generated 31/07/2019 GMT
   124                           ; 
   125                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   126                           ; All rights reserved.
   127                           ; 
   128                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   129                           ; 
   130                           ; Redistribution and use in source and binary forms, with or without modification, are
   131                           ; permitted provided that the following conditions are met:
   132                           ; 
   133                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   134                           ;        conditions and the following disclaimer.
   135                           ; 
   136                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   137                           ;        of conditions and the following disclaimer in the documentation and/or other
   138                           ;        materials provided with the distribution.
   139                           ; 
   140                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   141                           ;        software without specific prior written permission.
   142                           ; 
   143                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   144                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   145                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   146                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   147                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   148                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   149                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   150                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   151                           ; 
   152                           ; 
   153                           ; Code-generator required, PIC18F47K42 Definitions
   154                           ; 
   155                           ; SFR Addresses
   156  0000                     
   157                           	psect	idataBANK0
   158  0054F2                     __pidataBANK0:
   159                           	opt callstack 0
   160                           
   161                           ;initializer for led_lightshow@LED_UP
   162  0054F2  01                 	db	1
   163                           
   164                           ;initializer for led_lightshow@cylon
   165  0054F3  FF                 	db	255
   166                           
   167                           	psect	idataBANK1
   168  004D74                     __pidataBANK1:
   169                           	opt callstack 0
   170                           
   171                           ;initializer for stoa@F1139
   172  004D74  28                 	db	40
   173  004D75  6E                 	db	110
   174  004D76  75                 	db	117
   175  004D77  6C                 	db	108
   176  004D78  6C                 	db	108
   177  004D79  29                 	db	41
   178  004D7A  00                 	db	0
   179                           
   180                           ;initializer for _sounds
   181  004D7B  AF                 	db	low (_IO+6)
   182  004D7C  01                 	db	high (_IO+6)
   183                           
   184                           ;initializer for _switches
   185  004D7D  A9                 	db	low _IO
   186  004D7E  01                 	db	high _IO
   187                           
   188                           ;initializer for _IO
   189  004D7F  00                 	db	0
   190  004D80  00                 	db	0
   191  004D81  00                 	db	0
   192  004D82  00                 	db	0
   193  004D83  00                 	db	0
   194  004D84  00                 	db	0
   195  004D85  00                 	db	0
   196  004D86  00                 	db	0
   197  004D87  00                 	db	0
   198  004D88  00                 	db	0
   199  004D89  00                 	db	0
   200  004D8A  00                 	db	0
   201  004D8B  00                 	db	0
   202  004D8C  00                 	db	0
   203  004D8D  00                 	db	0
   204  004D8E  02                 	db	2
   205  004D8F  00                 	db	0
   206  004D90  00                 	db	0
   207  004D91  00                 	db	0
   208  004D92  00                 	db	0
   209  004D93  32                 	db	50
   210  004D94  00                 	db	0
   211  004D95  00                 	db	0
   212  004D96  0000               	dw	0
   213  004D98  0000               	dw	0
   214  004D9A  000A               	dw	10
   215  004D9C  0000               	dw	0
   216  004D9E  0000               	dw	0
   217  004DA0  01                 	db	1
   218  004DA1  00                 	db	0
   219  004DA2  00                 	db	0
   220  004DA3  01                 	db	1
   221  004DA4  01                 	db	1
   222  004DA5  01                 	db	1
   223  004DA6  00                 	db	0
   224  004DA7  00                 	db	0
   225                           
   226                           ;initializer for _otto_b1
   227  004DA8  0190               	dw	400
   228  004DAA  0E74               	dw	3700
   229  004DAC  0000               	dw	0
   230  004DAE  0000               	dw	0
   231  004DB0  0000               	dw	0
   232  004DB2  0000               	dw	0
   233  004DB4  FF00               	dw	65280
   234  0000                     _IVTADL	set	14493
   235  0000                     _IVTADH	set	14494
   236  0000                     _IVTADU	set	14495
   237  0000                     _PIR2bits	set	14754
   238  0000                     _PIE8bits	set	14744
   239  0000                     _PIR8bits	set	14760
   240  0000                     _PIE9bits	set	14745
   241  0000                     _PIR9bits	set	14761
   242  0000                     _PIR4bits	set	14756
   243  0000                     _PIE6bits	set	14742
   244  0000                     _PIE3bits	set	14739
   245  0000                     _IPR8bits	set	14728
   246  0000                     _IPR9bits	set	14729
   247  0000                     _IPR3bits	set	14723
   248  0000                     _IPR6bits	set	14726
   249  0000                     _PMD7	set	14791
   250  0000                     _PMD6	set	14790
   251  0000                     _PMD5	set	14789
   252  0000                     _PMD4	set	14788
   253  0000                     _PMD3	set	14787
   254  0000                     _PMD2	set	14786
   255  0000                     _PMD1	set	14785
   256  0000                     _PMD0	set	14784
   257  0000                     _OSCTUNE	set	14814
   258  0000                     _OSCFRQ	set	14815
   259  0000                     _OSCEN	set	14813
   260  0000                     _OSCCON3	set	14811
   261  0000                     _OSCCON1	set	14809
   262  0000                     _PLLR	set	118496
   263  0000                     _SPI1SDIPPS	set	15071
   264  0000                     _U1RXPPS	set	15077
   265  0000                     _RC6PPS	set	14870
   266  0000                     _RC5PPS	set	14869
   267  0000                     _RD1PPS	set	14873
   268  0000                     _RC3PPS	set	14867
   269  0000                     _RB6PPS	set	14862
   270  0000                     _SPI1SCKPPS	set	15070
   271  0000                     _U2RXPPS	set	15080
   272  0000                     _SLRCONE	set	14979
   273  0000                     _SLRCOND	set	14963
   274  0000                     _SLRCONC	set	14947
   275  0000                     _SLRCONB	set	14931
   276  0000                     _SLRCONA	set	14915
   277  0000                     _ODCOND	set	14962
   278  0000                     _ODCONC	set	14946
   279  0000                     _ODCONB	set	14930
   280  0000                     _ODCONA	set	14914
   281  0000                     _ODCONE	set	14978
   282  0000                     _RD1I2C	set	14971
   283  0000                     _RD0I2C	set	14970
   284  0000                     _RC4I2C	set	14955
   285  0000                     _RC3I2C	set	14954
   286  0000                     _RB2I2C	set	14939
   287  0000                     _RB1I2C	set	14938
   288  0000                     _WPUC	set	14945
   289  0000                     _WPUA	set	14913
   290  0000                     _WPUB	set	14929
   291  0000                     _WPUE	set	14977
   292  0000                     _WPUD	set	14961
   293  0000                     _ANSELA	set	14912
   294  0000                     _ANSELE	set	14976
   295  0000                     _ANSELB	set	14928
   296  0000                     _ANSELC	set	14944
   297  0000                     _ANSELD	set	14960
   298  0000                     _SPI1RXB	set	15632
   299  0000                     _SPI1TXB	set	15633
   300  0000                     _SPI1TCNTL	set	15634
   301  0000                     _SPI1CON0	set	15636
   302  0000                     _SPI1CLK	set	15644
   303  0000                     _SPI1BAUD	set	15641
   304  0000                     _SPI1CON2	set	15638
   305  0000                     _SPI1CON1	set	15637
   306  0000                     _U2RXB	set	15824
   307  0000                     _U2TXB	set	15826
   308  0000                     _U2ERRIRbits	set	15841
   309  0000                     _U2ERRIE	set	15842
   310  0000                     _U2ERRIR	set	15841
   311  0000                     _U2UIR	set	15840
   312  0000                     _U2FIFO	set	15839
   313  0000                     _U2BRGH	set	15838
   314  0000                     _U2BRGL	set	15837
   315  0000                     _U2CON2	set	15836
   316  0000                     _U2CON1	set	15835
   317  0000                     _U2CON0	set	15834
   318  0000                     _U2P3L	set	15832
   319  0000                     _U2P2L	set	15830
   320  0000                     _U2P1L	set	15828
   321  0000                     _U1RXB	set	15848
   322  0000                     _U1TXB	set	15850
   323  0000                     _U1ERRIRbits	set	15865
   324  0000                     _U1ERRIE	set	15866
   325  0000                     _U1ERRIR	set	15865
   326  0000                     _U1UIR	set	15864
   327  0000                     _U1FIFO	set	15863
   328  0000                     _U1BRGH	set	15862
   329  0000                     _U1BRGL	set	15861
   330  0000                     _U1CON2	set	15860
   331  0000                     _U1CON1	set	15859
   332  0000                     _U1CON0	set	15858
   333  0000                     _U1P3H	set	15857
   334  0000                     _U1P3L	set	15856
   335  0000                     _U1P2H	set	15855
   336  0000                     _U1P2L	set	15854
   337  0000                     _U1P1H	set	15853
   338  0000                     _U1P1L	set	15852
   339  0000                     _FVRCON	set	16065
   340  0000                     _ADRESL	set	16111
   341  0000                     _ADRESH	set	16112
   342  0000                     _ADCON0bits	set	16120
   343  0000                     _ADCON0	set	16120
   344  0000                     _ADCLK	set	16127
   345  0000                     _ADACT	set	16126
   346  0000                     _ADREF	set	16125
   347  0000                     _ADSTAT	set	16124
   348  0000                     _ADCON3	set	16123
   349  0000                     _ADCON2	set	16122
   350  0000                     _ADCON1	set	16121
   351  0000                     _ADPREH	set	16119
   352  0000                     _ADPREL	set	16118
   353  0000                     _ADCAP	set	16117
   354  0000                     _ADACQH	set	16116
   355  0000                     _ADACQL	set	16115
   356  0000                     _ADPCH	set	16113
   357  0000                     _ADRPT	set	16108
   358  0000                     _ADACCU	set	16106
   359  0000                     _ADSTPTH	set	16101
   360  0000                     _ADSTPTL	set	16100
   361  0000                     _ADUTHH	set	16097
   362  0000                     _ADUTHL	set	16096
   363  0000                     _ADLTHH	set	16095
   364  0000                     _ADLTHL	set	16094
   365  0000                     _CCPTMRS1bits	set	16223
   366  0000                     _LATCbits	set	16316
   367  0000                     _LATEbits	set	16318
   368  0000                     _T5CONbits	set	16282
   369  0000                     _T5CON	set	16282
   370  0000                     _TMR5L	set	16280
   371  0000                     _TMR5H	set	16281
   372  0000                     _T5CLK	set	16285
   373  0000                     _T5GATE	set	16284
   374  0000                     _T5GCON	set	16283
   375  0000                     _T6CON	set	16276
   376  0000                     _T6TMR	set	16274
   377  0000                     _T6PR	set	16275
   378  0000                     _T6RST	set	16279
   379  0000                     _T6HLT	set	16277
   380  0000                     _T6CLKCON	set	16278
   381  0000                     _PWM8DCL	set	16224
   382  0000                     _PWM8DCH	set	16225
   383  0000                     _PWM8CON	set	16226
   384  0000                     _T2CON	set	16300
   385  0000                     _T2TMR	set	16298
   386  0000                     _T2PR	set	16299
   387  0000                     _T2RST	set	16303
   388  0000                     _T2HLT	set	16301
   389  0000                     _T2CLKCON	set	16302
   390  0000                     _IVTLOCKbits	set	16340
   391  0000                     _IVTLOCK	set	16340
   392  0000                     _INTCON0bits	set	16338
   393  0000                     _TRISD	set	16325
   394  0000                     _TRISC	set	16324
   395  0000                     _TRISB	set	16323
   396  0000                     _TRISA	set	16322
   397  0000                     _TRISE	set	16326
   398  0000                     _LATC	set	16316
   399  0000                     _LATB	set	16315
   400  0000                     _LATA	set	16314
   401  0000                     _LATD	set	16317
   402  0000                     _LATE	set	16318
   403  0000                     _GIE	set	130711
   404                           
   405                           	psect	smallconst
   406  002000                     __psmallconst:
   407                           	opt callstack 0
   408  002000  00                 	db	0
   409  002001                     STR_1:
   410                           
   411                           ; BSR set to: 1
   412  002001  20                 	db	32
   413  002002  48                 	db	72	;'H'
   414  002003  20                 	db	32
   415  002004  25                 	db	37
   416  002005  69                 	db	105	;'i'
   417  002006  2C                 	db	44
   418  002007  20                 	db	32
   419  002008  4D                 	db	77	;'M'
   420  002009  20                 	db	32
   421  00200A  25                 	db	37
   422  00200B  69                 	db	105	;'i'
   423  00200C  20                 	db	32
   424  00200D  20                 	db	32
   425  00200E  20                 	db	32
   426  00200F  20                 	db	32
   427  002010  20                 	db	32
   428  002011  00                 	db	0
   429  002012                     STR_2:
   430                           
   431                           ; BSR set to: 1
   432  002012  20                 	db	32
   433  002013  53                 	db	83	;'S'
   434  002014  63                 	db	99	;'c'
   435  002015  6F                 	db	111	;'o'
   436  002016  72                 	db	114	;'r'
   437  002017  65                 	db	101	;'e'
   438  002018  20                 	db	32
   439  002019  25                 	db	37
   440  00201A  69                 	db	105	;'i'
   441  00201B  20                 	db	32
   442  00201C  25                 	db	37
   443  00201D  69                 	db	105	;'i'
   444  00201E  20                 	db	32
   445  00201F  20                 	db	32
   446  002020  20                 	db	32
   447  002021  20                 	db	32
   448  002022  00                 	db	0
   449  002023                     STR_3:
   450                           
   451                           ; BSR set to: 1
   452  002023  53                 	db	83	;'S'
   453  002024  57                 	db	87	;'W'
   454  002025  20                 	db	32
   455  002026  25                 	db	37
   456  002027  73                 	db	115	;'s'
   457  002028  20                 	db	32
   458  002029  50                 	db	80	;'P'
   459  00202A  6C                 	db	108	;'l'
   460  00202B  61                 	db	97	;'a'
   461  00202C  79                 	db	121	;'y'
   462  00202D  21                 	db	33
   463  00202E  00                 	db	0
   464  00202F                     STR_4:
   465                           
   466                           ; BSR set to: 1
   467  00202F  31                 	db	49	;'1'
   468  002030  2E                 	db	46
   469  002031  30                 	db	48	;'0'
   470  002032  32                 	db	50	;'2'
   471  002033  00                 	db	0
   472  002034                     STR_16:
   473                           
   474                           ; BSR set to: 1
   475  002034  52                 	db	82	;'R'
   476  002035  30                 	db	48	;'0'
   477  002036  0D                 	db	13
   478  002037  00                 	db	0
   479  002038                     STR_8:
   480                           
   481                           ; BSR set to: 1
   482  002038  54                 	db	84	;'T'
   483  002039  32                 	db	50	;'2'
   484  00203A  0D                 	db	13
   485  00203B  00                 	db	0
   486  00203C                     STR_10:
   487                           
   488                           ; BSR set to: 1
   489  00203C  43                 	db	67	;'C'
   490  00203D  34                 	db	52	;'4'
   491  00203E  0D                 	db	13
   492  00203F  00                 	db	0
   493  002040                     STR_12:
   494                           
   495                           ; BSR set to: 1
   496  002040  46                 	db	70	;'F'
   497  002041  34                 	db	52	;'4'
   498  002042  0D                 	db	13
   499  002043  00                 	db	0
   500  002044                     STR_14:
   501                           
   502                           ; BSR set to: 1
   503  002044  4D                 	db	77	;'M'
   504  002045  34                 	db	52	;'4'
   505  002046  0D                 	db	13
   506  002047  00                 	db	0
   507  002048                     STR_6:
   508                           
   509                           ; BSR set to: 1
   510  002048  58                 	db	88	;'X'
   511  002049  51                 	db	81	;'Q'
   512  00204A  0D                 	db	13
   513  00204B  00                 	db	0
   514  00204C                     STR_5:
   515                           
   516                           ; BSR set to: 1
   517  00204C  25                 	db	37
   518  00204D  73                 	db	115	;'s'
   519  00204E  00                 	db	0
   520  0000                     
   521                           ; #config settings
   522  00204F  00                 	db	0	; dummy byte at the end
   523  0000                     
   524                           	psect	cinit
   525  0049A2                     __pcinit:
   526                           	opt callstack 0
   527  0049A2                     start_initialization:
   528                           	opt callstack 0
   529  0049A2                     __initialization:
   530                           	opt callstack 0
   531                           
   532                           ; Initialize objects allocated to BANK1 (66 bytes)
   533                           ; load TBLPTR registers with __pidataBANK1
   534  0049A2  0E74               	movlw	low __pidataBANK1
   535  0049A4  6EF6               	movwf	tblptrl,c
   536  0049A6  0E4D               	movlw	high __pidataBANK1
   537  0049A8  6EF7               	movwf	tblptrh,c
   538  0049AA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   539  0049AC  6EF8               	movwf	tblptru,c
   540  0049AE  EE00  F19E         	lfsr	0,__pdataBANK1
   541  0049B2  EE10 F042          	lfsr	1,66
   542  0049B6                     copy_data0:
   543  0049B6  0009               	tblrd		*+
   544  0049B8  006F FFD7 FFEE     	movff	tablat,postinc0
   545  0049BE  50E5               	movf	postdec1,w,c
   546  0049C0  50E1               	movf	fsr1l,w,c
   547  0049C2  E1F9               	bnz	copy_data0
   548                           
   549                           ; Initialize objects allocated to BANK0 (2 bytes)
   550                           ; load TBLPTR registers with __pidataBANK0
   551  0049C4  0EF2               	movlw	low __pidataBANK0
   552  0049C6  6EF6               	movwf	tblptrl,c
   553  0049C8  0E54               	movlw	high __pidataBANK0
   554  0049CA  6EF7               	movwf	tblptrh,c
   555  0049CC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   556  0049CE  6EF8               	movwf	tblptru,c
   557  0049D0  0009               	tblrd		*+	;fetch initializer
   558  0049D2  006F FFD4  F0AC    	movff	tablat,__pdataBANK0
   559  0049D8  0009               	tblrd		*+	;fetch initializer
   560  0049DA  006F FFD4  F0AD    	movff	tablat,__pdataBANK0+1
   561                           
   562                           ; Clear objects allocated to BANK2 (32 bytes)
   563  0049E0  EE00  F280         	lfsr	0,__pbssBANK2
   564  0049E4  0E20               	movlw	32
   565  0049E6                     clear_0:
   566  0049E6  6AEE               	clrf	postinc0,c
   567  0049E8  06E8               	decf	wreg,f,c
   568  0049EA  E1FD               	bnz	clear_0
   569                           
   570                           ; Clear objects allocated to BANK1 (158 bytes)
   571  0049EC  EE00  F100         	lfsr	0,__pbssBANK1
   572  0049F0  0E9E               	movlw	158
   573  0049F2                     clear_1:
   574  0049F2  6AEE               	clrf	postinc0,c
   575  0049F4  06E8               	decf	wreg,f,c
   576  0049F6  E1FD               	bnz	clear_1
   577                           
   578                           ; Clear objects allocated to BANK0 (14 bytes)
   579  0049F8  EE00  F09E         	lfsr	0,__pbssBANK0
   580  0049FC  0E0E               	movlw	14
   581  0049FE                     clear_2:
   582  0049FE  6AEE               	clrf	postinc0,c
   583  004A00  06E8               	decf	wreg,f,c
   584  004A02  E1FD               	bnz	clear_2
   585                           
   586                           ; Clear objects allocated to COMRAM (5 bytes)
   587  004A04  6A5A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   588  004A06  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   589  004A08  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   590  004A0A  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   591  004A0C  6A56               	clrf	__pbssCOMRAM& (0+255),c
   592                           
   593                           ;
   594                           ; Setup IVTBASE
   595                           ;
   596  004A0E  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   597  004A10  6ED5               	movwf	213,c
   598  004A12  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   599  004A14  6ED6               	movwf	214,c
   600  004A16  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   601  004A18  6ED7               	movwf	215,c
   602  004A1A                     end_of_initialization:
   603                           	opt callstack 0
   604  004A1A                     __end_of__initialization:
   605                           	opt callstack 0
   606  004A1A  0100               	movlb	0
   607  004A1C  EF28  F010         	goto	_main	;jump to C main() function
   608                           
   609                           	psect	bssCOMRAM
   610  000056                     __pbssCOMRAM:
   611                           	opt callstack 0
   612  000056                     _flags:
   613                           	opt callstack 0
   614  000056                     	ds	2
   615  000058                     _uart2RxTail:
   616                           	opt callstack 0
   617  000058                     	ds	1
   618  000059                     _uart2RxHead:
   619                           	opt callstack 0
   620  000059                     	ds	1
   621  00005A                     _uart1RxHead:
   622                           	opt callstack 0
   623  00005A                     	ds	1
   624                           
   625                           	psect	bssBANK0
   626  00009E                     __pbssBANK0:
   627                           	opt callstack 0
   628  00009E                     _prec:
   629                           	opt callstack 0
   630  00009E                     	ds	2
   631  0000A0                     led_lightshow@alive_led:
   632                           	opt callstack 0
   633  0000A0                     	ds	2
   634  0000A2                     Digital232_RW@x:
   635                           	opt callstack 0
   636  0000A2                     	ds	1
   637  0000A3                     _uart2RxCount:
   638                           	opt callstack 0
   639  0000A3                     	ds	1
   640  0000A4                     _uart2TxBufferRemaining:
   641                           	opt callstack 0
   642  0000A4                     	ds	1
   643  0000A5                     _uart2TxTail:
   644                           	opt callstack 0
   645  0000A5                     	ds	1
   646  0000A6                     _uart2TxHead:
   647                           	opt callstack 0
   648  0000A6                     	ds	1
   649  0000A7                     _uart1RxCount:
   650                           	opt callstack 0
   651  0000A7                     	ds	1
   652  0000A8                     _uart1RxTail:
   653                           	opt callstack 0
   654  0000A8                     	ds	1
   655  0000A9                     _uart1TxBufferRemaining:
   656                           	opt callstack 0
   657  0000A9                     	ds	1
   658  0000AA                     _uart1TxTail:
   659                           	opt callstack 0
   660  0000AA                     	ds	1
   661  0000AB                     _uart1TxHead:
   662                           	opt callstack 0
   663  0000AB                     	ds	1
   664                           
   665                           	psect	dataBANK0
   666  0000AC                     __pdataBANK0:
   667                           	opt callstack 0
   668  0000AC                     led_lightshow@LED_UP:
   669                           	opt callstack 0
   670  0000AC                     	ds	1
   671  0000AD                     led_lightshow@cylon:
   672                           	opt callstack 0
   673  0000AD                     	ds	1
   674                           
   675                           	psect	bssBANK1
   676  000100                     __pbssBANK1:
   677                           	opt callstack 0
   678  000100                     lp_filter@smooth:
   679                           	opt callstack 0
   680  000100                     	ds	32
   681  000120                     _tickCount:
   682                           	opt callstack 0
   683  000120                     	ds	18
   684  000132                     _uart2RxStatusBuffer:
   685                           	opt callstack 0
   686  000132                     	ds	8
   687  00013A                     _uart2RxBuffer:
   688                           	opt callstack 0
   689  00013A                     	ds	8
   690  000142                     _uart2TxBuffer:
   691                           	opt callstack 0
   692  000142                     	ds	8
   693  00014A                     _uart1RxStatusBuffer:
   694                           	opt callstack 0
   695  00014A                     	ds	8
   696  000152                     _uart1RxBuffer:
   697                           	opt callstack 0
   698  000152                     	ds	8
   699  00015A                     _uart1TxBuffer:
   700                           	opt callstack 0
   701  00015A                     	ds	8
   702  000162                     wdtdelay@dcount:
   703                           	opt callstack 0
   704  000162                     	ds	4
   705  000166                     _TMR5_InterruptHandler:
   706                           	opt callstack 0
   707  000166                     	ds	3
   708  000169                     _TMR6_InterruptHandler:
   709                           	opt callstack 0
   710  000169                     	ds	3
   711  00016C                     _UART2_ErrorHandler:
   712                           	opt callstack 0
   713  00016C                     	ds	3
   714  00016F                     _UART2_OverrunErrorHandler:
   715                           	opt callstack 0
   716  00016F                     	ds	3
   717  000172                     _UART2_FramingErrorHandler:
   718                           	opt callstack 0
   719  000172                     	ds	3
   720  000175                     _UART1_ErrorHandler:
   721                           	opt callstack 0
   722  000175                     	ds	3
   723  000178                     _UART1_OverrunErrorHandler:
   724                           	opt callstack 0
   725  000178                     	ds	3
   726  00017B                     _UART1_FramingErrorHandler:
   727                           	opt callstack 0
   728  00017B                     	ds	3
   729  00017E                     _UART1_TxInterruptHandler:
   730                           	opt callstack 0
   731  00017E                     	ds	3
   732  000181                     _UART1_RxInterruptHandler:
   733                           	opt callstack 0
   734  000181                     	ds	3
   735  000184                     _UART2_TxInterruptHandler:
   736                           	opt callstack 0
   737  000184                     	ds	3
   738  000187                     _UART2_RxInterruptHandler:
   739                           	opt callstack 0
   740  000187                     	ds	3
   741  00018A                     _nout:
   742                           	opt callstack 0
   743  00018A                     	ds	2
   744  00018C                     _width:
   745                           	opt callstack 0
   746  00018C                     	ds	2
   747  00018E                     led_lightshow@j:
   748                           	opt callstack 0
   749  00018E                     	ds	2
   750  000190                     TMR5_ISR@CountCallBack:
   751                           	opt callstack 0
   752  000190                     	ds	2
   753  000192                     _timer5ReloadVal:
   754                           	opt callstack 0
   755  000192                     	ds	2
   756  000194                     _uart2RxLastError:
   757                           	opt callstack 0
   758  000194                     	ds	1
   759  000195                     _uart1RxLastError:
   760                           	opt callstack 0
   761  000195                     	ds	1
   762  000196                     _seed:
   763                           	opt callstack 0
   764  000196                     	ds	8
   765                           
   766                           	psect	dataBANK1
   767  00019E                     __pdataBANK1:
   768                           	opt callstack 0
   769  00019E                     stoa@F1139:
   770                           	opt callstack 0
   771  00019E                     	ds	7
   772  0001A5                     _sounds:
   773                           	opt callstack 0
   774  0001A5                     	ds	2
   775  0001A7                     _switches:
   776                           	opt callstack 0
   777  0001A7                     	ds	2
   778  0001A9                     _IO:
   779                           	opt callstack 0
   780  0001A9                     	ds	41
   781  0001D2                     _otto_b1:
   782                           	opt callstack 0
   783  0001D2                     	ds	14
   784                           
   785                           	psect	bssBANK2
   786  000280                     __pbssBANK2:
   787                           	opt callstack 0
   788  000280                     _dbuf:
   789                           	opt callstack 0
   790  000280                     	ds	32
   791                           
   792                           	psect	cstackBANK2
   793  000200                     __pcstackBANK2:
   794                           	opt callstack 0
   795  000200                     work_sw@buffer:
   796                           	opt callstack 0
   797                           
   798                           ; 128 bytes @ 0x0
   799  000200                     	ds	128
   800                           
   801                           	psect	cstackBANK0
   802  000060                     __pcstackBANK0:
   803                           	opt callstack 0
   804  000060                     ?_vfprintf:
   805                           	opt callstack 0
   806  000060                     ?_lp_filter:
   807                           	opt callstack 0
   808  000060                     vfprintf@fp:
   809                           	opt callstack 0
   810  000060                     lp_filter@new:
   811                           	opt callstack 0
   812                           
   813                           ; 4 bytes @ 0x0
   814  000060                     	ds	2
   815  000062                     vfprintf@fmt:
   816                           	opt callstack 0
   817                           
   818                           ; 1 bytes @ 0x2
   819  000062                     	ds	1
   820  000063                     vfprintf@ap:
   821                           	opt callstack 0
   822                           
   823                           ; 1 bytes @ 0x3
   824  000063                     	ds	1
   825  000064                     ?_sprintf:
   826                           	opt callstack 0
   827  000064                     ?_printf:
   828                           	opt callstack 0
   829  000064                     printf@fmt:
   830                           	opt callstack 0
   831  000064                     lp_filter@bn:
   832                           	opt callstack 0
   833  000064                     sprintf@s:
   834                           	opt callstack 0
   835                           
   836                           ; 2 bytes @ 0x4
   837  000064                     	ds	2
   838  000066                     sprintf@fmt:
   839                           	opt callstack 0
   840  000066                     lp_filter@slow:
   841                           	opt callstack 0
   842                           
   843                           ; 2 bytes @ 0x6
   844  000066                     	ds	2
   845  000068                     _lp_filter$3690:
   846                           	opt callstack 0
   847                           
   848                           ; 4 bytes @ 0x8
   849  000068                     	ds	1
   850  000069                     printf@ap:
   851                           	opt callstack 0
   852                           
   853                           ; 1 bytes @ 0x9
   854  000069                     	ds	3
   855  00006C                     lp_filter@lp_speed:
   856                           	opt callstack 0
   857                           
   858                           ; 4 bytes @ 0xC
   859  00006C                     	ds	1
   860  00006D                     sprintf@ap:
   861                           	opt callstack 0
   862                           
   863                           ; 1 bytes @ 0xD
   864  00006D                     	ds	1
   865  00006E                     sprintf@f:
   866                           	opt callstack 0
   867                           
   868                           ; 6 bytes @ 0xE
   869  00006E                     	ds	2
   870  000070                     lp_filter@lp_x:
   871                           	opt callstack 0
   872                           
   873                           ; 4 bytes @ 0x10
   874  000070                     	ds	4
   875  000074                     ?___fltol:
   876                           	opt callstack 0
   877  000074                     ___fltol@f1:
   878                           	opt callstack 0
   879                           
   880                           ; 4 bytes @ 0x14
   881  000074                     	ds	4
   882  000078                     ___fltol@sign1:
   883                           	opt callstack 0
   884                           
   885                           ; 1 bytes @ 0x18
   886  000078                     	ds	1
   887  000079                     ___fltol@exp1:
   888                           	opt callstack 0
   889                           
   890                           ; 1 bytes @ 0x19
   891  000079                     	ds	1
   892  00007A                     calc_pot@value:
   893                           	opt callstack 0
   894                           
   895                           ; 2 bytes @ 0x1A
   896  00007A                     	ds	2
   897  00007C                     ??_calc_pot:
   898                           
   899                           ; 1 bytes @ 0x1C
   900  00007C                     	ds	2
   901  00007E                     ??_Digital232_RW:
   902                           
   903                           ; 1 bytes @ 0x1E
   904  00007E                     	ds	2
   905  000080                     Digital232_RW@i:
   906                           	opt callstack 0
   907                           
   908                           ; 1 bytes @ 0x20
   909  000080                     	ds	1
   910  000081                     Digital232_RW@j:
   911                           	opt callstack 0
   912                           
   913                           ; 1 bytes @ 0x21
   914  000081                     	ds	1
   915  000082                     ??_main:
   916                           
   917                           ; 1 bytes @ 0x22
   918  000082                     	ds	2
   919  000084                     main@buffer:
   920                           	opt callstack 0
   921                           
   922                           ; 24 bytes @ 0x24
   923  000084                     	ds	25
   924  00009D                     main@y:
   925                           	opt callstack 0
   926                           
   927                           ; 1 bytes @ 0x3D
   928  00009D                     	ds	1
   929                           
   930                           	psect	cstackCOMRAM
   931  000001                     __pcstackCOMRAM:
   932                           	opt callstack 0
   933  000001                     
   934                           ; 1 bytes @ 0x0
   935  000001                     	ds	2
   936  000003                     TMR6_DefaultInterruptHandler@i:
   937                           	opt callstack 0
   938                           
   939                           ; 1 bytes @ 0x2
   940  000003                     	ds	1
   941  000004                     ??_TMR5_DefaultInterruptHandler:
   942  000004                     TMR5_WriteTimer@timerVal:
   943                           	opt callstack 0
   944                           
   945                           ; 2 bytes @ 0x3
   946  000004                     	ds	1
   947  000005                     
   948                           ; 1 bytes @ 0x4
   949  000005                     	ds	1
   950  000006                     ?_strlen:
   951                           	opt callstack 0
   952  000006                     ?_ADCC_GetConversionResult:
   953                           	opt callstack 0
   954  000006                     ?___awdiv:
   955                           	opt callstack 0
   956  000006                     ?___fladd:
   957                           	opt callstack 0
   958  000006                     ?___xxtofl:
   959                           	opt callstack 0
   960  000006                     ?___omul:
   961                           	opt callstack 0
   962  000006                     ?___aodiv:
   963                           	opt callstack 0
   964  000006                     ?___aomod:
   965                           	opt callstack 0
   966  000006                     INTERRUPT_Initialize@state:
   967                           	opt callstack 0
   968  000006                     UART2_Read@readValue:
   969                           	opt callstack 0
   970  000006                     UART2_Write@txData:
   971                           	opt callstack 0
   972  000006                     ADCC_StartConversion@channel:
   973                           	opt callstack 0
   974  000006                     SPI1_Exchange8bit@data:
   975                           	opt callstack 0
   976  000006                     PWM8_LoadDutyValue@dutyValue:
   977                           	opt callstack 0
   978  000006                     once@once_flag:
   979                           	opt callstack 0
   980  000006                     StartTimer@count:
   981                           	opt callstack 0
   982  000006                     ___awdiv@dividend:
   983                           	opt callstack 0
   984  000006                     srand@s:
   985                           	opt callstack 0
   986  000006                     strlen@s:
   987                           	opt callstack 0
   988  000006                     UART1_SetFramingErrorHandler@interruptHandler:
   989                           	opt callstack 0
   990  000006                     UART1_SetOverrunErrorHandler@interruptHandler:
   991                           	opt callstack 0
   992  000006                     UART1_SetErrorHandler@interruptHandler:
   993                           	opt callstack 0
   994  000006                     UART1_SetRxInterruptHandler@InterruptHandler:
   995                           	opt callstack 0
   996  000006                     UART1_SetTxInterruptHandler@InterruptHandler:
   997                           	opt callstack 0
   998  000006                     UART2_SetFramingErrorHandler@interruptHandler:
   999                           	opt callstack 0
  1000  000006                     UART2_SetOverrunErrorHandler@interruptHandler:
  1001                           	opt callstack 0
  1002  000006                     UART2_SetErrorHandler@interruptHandler:
  1003                           	opt callstack 0
  1004  000006                     UART2_SetRxInterruptHandler@InterruptHandler:
  1005                           	opt callstack 0
  1006  000006                     UART2_SetTxInterruptHandler@InterruptHandler:
  1007                           	opt callstack 0
  1008  000006                     TMR6_SetInterruptHandler@InterruptHandler:
  1009                           	opt callstack 0
  1010  000006                     TMR5_SetInterruptHandler@InterruptHandler:
  1011                           	opt callstack 0
  1012  000006                     wdtdelay@delay:
  1013                           	opt callstack 0
  1014  000006                     ___fladd@b:
  1015                           	opt callstack 0
  1016  000006                     ___xxtofl@val:
  1017                           	opt callstack 0
  1018  000006                     ___omul@multiplier:
  1019                           	opt callstack 0
  1020  000006                     ___aodiv@dividend:
  1021                           	opt callstack 0
  1022  000006                     ___aomod@dividend:
  1023                           	opt callstack 0
  1024                           
  1025                           ; 8 bytes @ 0x5
  1026  000006                     	ds	1
  1027  000007                     putch@txData:
  1028                           	opt callstack 0
  1029                           
  1030                           ; 1 bytes @ 0x6
  1031  000007                     	ds	1
  1032  000008                     ??_StartTimer:
  1033  000008                     ??_srand:
  1034  000008                     ??_PWM8_LoadDutyValue:
  1035  000008                     ??_ADCC_GetConversionResult:
  1036  000008                     TimerDone@timer:
  1037                           	opt callstack 0
  1038  000008                     ___awdiv@divisor:
  1039                           	opt callstack 0
  1040  000008                     fputc@c:
  1041                           	opt callstack 0
  1042  000008                     strlen@a:
  1043                           	opt callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x7
  1046  000008                     	ds	1
  1047  000009                     ??_TMR5_Initialize:
  1048  000009                     
  1049                           ; 1 bytes @ 0x8
  1050  000009                     	ds	1
  1051  00000A                     ??___xxtofl:
  1052  00000A                     StartTimer@timer:
  1053                           	opt callstack 0
  1054  00000A                     send_lcd_cmd@cmd:
  1055                           	opt callstack 0
  1056  00000A                     send_lcd_cmd_long@cmd:
  1057                           	opt callstack 0
  1058  00000A                     ___awdiv@counter:
  1059                           	opt callstack 0
  1060  00000A                     eaDogM_WriteString@strPtr:
  1061                           	opt callstack 0
  1062  00000A                     fputc@fp:
  1063                           	opt callstack 0
  1064  00000A                     ___fladd@a:
  1065                           	opt callstack 0
  1066                           
  1067                           ; 4 bytes @ 0x9
  1068  00000A                     	ds	1
  1069  00000B                     eaDogM_WriteCommand@cmd:
  1070                           	opt callstack 0
  1071  00000B                     ___awdiv@sign:
  1072                           	opt callstack 0
  1073  00000B                     WaitMs@numMilliseconds:
  1074                           	opt callstack 0
  1075                           
  1076                           ; 2 bytes @ 0xA
  1077  00000B                     	ds	1
  1078  00000C                     ??_fputc:
  1079  00000C                     eaDogM_WriteString@i:
  1080                           	opt callstack 0
  1081  00000C                     ___awdiv@quotient:
  1082                           	opt callstack 0
  1083                           
  1084                           ; 2 bytes @ 0xB
  1085  00000C                     	ds	1
  1086  00000D                     eaDogM_WriteString@bytesWritten:
  1087                           	opt callstack 0
  1088                           
  1089                           ; 1 bytes @ 0xC
  1090  00000D                     	ds	1
  1091  00000E                     ??___fladd:
  1092  00000E                     eaDogM_WriteStringAtPos@c:
  1093                           	opt callstack 0
  1094  00000E                     ___xxtofl@sign:
  1095                           	opt callstack 0
  1096  00000E                     led_lightshow@speed:
  1097                           	opt callstack 0
  1098  00000E                     ___omul@multiplicand:
  1099                           	opt callstack 0
  1100  00000E                     ___aodiv@divisor:
  1101                           	opt callstack 0
  1102  00000E                     ___aomod@divisor:
  1103                           	opt callstack 0
  1104                           
  1105                           ; 8 bytes @ 0xD
  1106  00000E                     	ds	1
  1107  00000F                     ___xxtofl@exp:
  1108                           	opt callstack 0
  1109  00000F                     eaDogM_WriteStringAtPos@strPtr:
  1110                           	opt callstack 0
  1111                           
  1112                           ; 2 bytes @ 0xE
  1113  00000F                     	ds	1
  1114  000010                     ??_led_lightshow:
  1115  000010                     ___xxtofl@arg:
  1116                           	opt callstack 0
  1117                           
  1118                           ; 4 bytes @ 0xF
  1119  000010                     	ds	1
  1120  000011                     ?_stoa:
  1121                           	opt callstack 0
  1122  000011                     eaDogM_WriteStringAtPos@r:
  1123                           	opt callstack 0
  1124  000011                     stoa@fp:
  1125                           	opt callstack 0
  1126  000011                     fputs@s:
  1127                           	opt callstack 0
  1128                           
  1129                           ; 2 bytes @ 0x10
  1130  000011                     	ds	1
  1131  000012                     led_lightshow@seq:
  1132                           	opt callstack 0
  1133  000012                     ___fladd@signs:
  1134                           	opt callstack 0
  1135                           
  1136                           ; 1 bytes @ 0x11
  1137  000012                     	ds	1
  1138  000013                     ___fladd@aexp:
  1139                           	opt callstack 0
  1140  000013                     stoa@s:
  1141                           	opt callstack 0
  1142  000013                     fputs@fp:
  1143                           	opt callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x12
  1146  000013                     	ds	1
  1147  000014                     ___fladd@bexp:
  1148                           	opt callstack 0
  1149                           
  1150                           ; 1 bytes @ 0x13
  1151  000014                     	ds	1
  1152  000015                     ??_stoa:
  1153  000015                     ___fladd@grs:
  1154                           	opt callstack 0
  1155  000015                     fputs@c:
  1156                           	opt callstack 0
  1157                           
  1158                           ; 1 bytes @ 0x14
  1159  000015                     	ds	1
  1160  000016                     ?___flmul:
  1161                           	opt callstack 0
  1162  000016                     ___aodiv@counter:
  1163                           	opt callstack 0
  1164  000016                     ___aomod@counter:
  1165                           	opt callstack 0
  1166  000016                     fputs@i:
  1167                           	opt callstack 0
  1168  000016                     ___flmul@b:
  1169                           	opt callstack 0
  1170  000016                     stoa@nuls:
  1171                           	opt callstack 0
  1172  000016                     ___omul@product:
  1173                           	opt callstack 0
  1174                           
  1175                           ; 8 bytes @ 0x15
  1176  000016                     	ds	1
  1177  000017                     ___aodiv@sign:
  1178                           	opt callstack 0
  1179  000017                     ___aomod@sign:
  1180                           	opt callstack 0
  1181                           
  1182                           ; 1 bytes @ 0x16
  1183  000017                     	ds	1
  1184  000018                     ?_abs:
  1185                           	opt callstack 0
  1186  000018                     ?_pad:
  1187                           	opt callstack 0
  1188  000018                     pad@fp:
  1189                           	opt callstack 0
  1190  000018                     abs@a:
  1191                           	opt callstack 0
  1192  000018                     ___aodiv@quotient:
  1193                           	opt callstack 0
  1194                           
  1195                           ; 8 bytes @ 0x17
  1196  000018                     	ds	2
  1197  00001A                     ??_abs:
  1198  00001A                     pad@buf:
  1199                           	opt callstack 0
  1200  00001A                     ___flmul@a:
  1201                           	opt callstack 0
  1202                           
  1203                           ; 4 bytes @ 0x19
  1204  00001A                     	ds	2
  1205  00001C                     pad@p:
  1206                           	opt callstack 0
  1207                           
  1208                           ; 2 bytes @ 0x1B
  1209  00001C                     	ds	1
  1210  00001D                     stoa@i:
  1211                           	opt callstack 0
  1212                           
  1213                           ; 2 bytes @ 0x1C
  1214  00001D                     	ds	1
  1215  00001E                     ??___flmul:
  1216  00001E                     ??_pad:
  1217  00001E                     ?_rand:
  1218                           	opt callstack 0
  1219                           
  1220                           ; 2 bytes @ 0x1D
  1221  00001E                     	ds	1
  1222  00001F                     pad@i:
  1223                           	opt callstack 0
  1224  00001F                     stoa@w:
  1225                           	opt callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x1E
  1228  00001F                     	ds	1
  1229  000020                     ??_rand:
  1230                           
  1231                           ; 1 bytes @ 0x1F
  1232  000020                     	ds	1
  1233  000021                     pad@w:
  1234                           	opt callstack 0
  1235  000021                     stoa@cp:
  1236                           	opt callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x20
  1239  000021                     	ds	1
  1240  000022                     ___flmul@sign:
  1241                           	opt callstack 0
  1242                           
  1243                           ; 1 bytes @ 0x21
  1244  000022                     	ds	1
  1245  000023                     ?_dtoa:
  1246                           	opt callstack 0
  1247  000023                     ___flmul@aexp:
  1248                           	opt callstack 0
  1249  000023                     dtoa@fp:
  1250                           	opt callstack 0
  1251  000023                     stoa@p:
  1252                           	opt callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x22
  1255  000023                     	ds	1
  1256  000024                     ___flmul@bexp:
  1257                           	opt callstack 0
  1258                           
  1259                           ; 1 bytes @ 0x23
  1260  000024                     	ds	1
  1261  000025                     stoa@l:
  1262                           	opt callstack 0
  1263  000025                     ___flmul@grs:
  1264                           	opt callstack 0
  1265  000025                     dtoa@d:
  1266                           	opt callstack 0
  1267                           
  1268                           ; 8 bytes @ 0x24
  1269  000025                     	ds	4
  1270  000029                     ___flmul@prod:
  1271                           	opt callstack 0
  1272                           
  1273                           ; 4 bytes @ 0x28
  1274  000029                     	ds	4
  1275  00002D                     ??_dtoa:
  1276  00002D                     ___flmul@temp:
  1277                           	opt callstack 0
  1278                           
  1279                           ; 2 bytes @ 0x2C
  1280  00002D                     	ds	2
  1281  00002F                     ?___flsub:
  1282                           	opt callstack 0
  1283  00002F                     ___flsub@b:
  1284                           	opt callstack 0
  1285                           
  1286                           ; 4 bytes @ 0x2E
  1287  00002F                     	ds	4
  1288  000033                     ___flsub@a:
  1289                           	opt callstack 0
  1290                           
  1291                           ; 4 bytes @ 0x32
  1292  000033                     	ds	2
  1293  000035                     _dtoa$2719:
  1294                           	opt callstack 0
  1295                           
  1296                           ; 2 bytes @ 0x34
  1297  000035                     	ds	2
  1298  000037                     ?___fldiv:
  1299                           	opt callstack 0
  1300  000037                     dtoa@p:
  1301                           	opt callstack 0
  1302  000037                     ___fldiv@b:
  1303                           	opt callstack 0
  1304                           
  1305                           ; 4 bytes @ 0x36
  1306  000037                     	ds	2
  1307  000039                     dtoa@w:
  1308                           	opt callstack 0
  1309                           
  1310                           ; 2 bytes @ 0x38
  1311  000039                     	ds	2
  1312  00003B                     dtoa@s:
  1313                           	opt callstack 0
  1314  00003B                     ___fldiv@a:
  1315                           	opt callstack 0
  1316                           
  1317                           ; 4 bytes @ 0x3A
  1318  00003B                     	ds	2
  1319  00003D                     dtoa@n:
  1320                           	opt callstack 0
  1321                           
  1322                           ; 8 bytes @ 0x3C
  1323  00003D                     	ds	2
  1324  00003F                     ??___fldiv:
  1325                           
  1326                           ; 1 bytes @ 0x3E
  1327  00003F                     	ds	4
  1328  000043                     ___fldiv@rem:
  1329                           	opt callstack 0
  1330                           
  1331                           ; 4 bytes @ 0x42
  1332  000043                     	ds	2
  1333  000045                     dtoa@i:
  1334                           	opt callstack 0
  1335                           
  1336                           ; 2 bytes @ 0x44
  1337  000045                     	ds	2
  1338  000047                     ?_vfpfcnvrt:
  1339                           	opt callstack 0
  1340  000047                     ___fldiv@sign:
  1341                           	opt callstack 0
  1342  000047                     vfpfcnvrt@fp:
  1343                           	opt callstack 0
  1344                           
  1345                           ; 2 bytes @ 0x46
  1346  000047                     	ds	1
  1347  000048                     ___fldiv@new_exp:
  1348                           	opt callstack 0
  1349                           
  1350                           ; 2 bytes @ 0x47
  1351  000048                     	ds	1
  1352  000049                     vfpfcnvrt@fmt:
  1353                           	opt callstack 0
  1354                           
  1355                           ; 1 bytes @ 0x48
  1356  000049                     	ds	1
  1357  00004A                     vfpfcnvrt@ap:
  1358                           	opt callstack 0
  1359  00004A                     ___fldiv@grs:
  1360                           	opt callstack 0
  1361                           
  1362                           ; 4 bytes @ 0x49
  1363  00004A                     	ds	1
  1364  00004B                     vfpfcnvrt@ll:
  1365                           	opt callstack 0
  1366                           
  1367                           ; 8 bytes @ 0x4A
  1368  00004B                     	ds	3
  1369  00004E                     ___fldiv@bexp:
  1370                           	opt callstack 0
  1371                           
  1372                           ; 1 bytes @ 0x4D
  1373  00004E                     	ds	1
  1374  00004F                     ___fldiv@aexp:
  1375                           	opt callstack 0
  1376                           
  1377                           ; 1 bytes @ 0x4E
  1378  00004F                     	ds	1
  1379  000050                     ??_lp_filter:
  1380                           
  1381                           ; 1 bytes @ 0x4F
  1382  000050                     	ds	2
  1383  000052                     ??___fltol:
  1384                           
  1385                           ; 1 bytes @ 0x51
  1386  000052                     	ds	1
  1387  000053                     vfpfcnvrt@cp:
  1388                           	opt callstack 0
  1389                           
  1390                           ; 2 bytes @ 0x52
  1391  000053                     	ds	2
  1392  000055                     vfprintf@cfmt:
  1393                           	opt callstack 0
  1394                           
  1395                           ; 1 bytes @ 0x54
  1396  000055                     	ds	1
  1397  000056                     
  1398                           ; 1 bytes @ 0x55
  1399 ;;
  1400 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1401 ;;
  1402 ;; *************** function _main *****************
  1403 ;; Defined at:
  1404 ;;		line 101 in file "main.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;		None
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  buffer         24   36[BANK0 ] unsigned char [24]
  1409 ;;  y               1   61[BANK0 ] unsigned char 
  1410 ;;  x               1    0        unsigned char 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      void 
  1413 ;; Registers used:
  1414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 3F/1
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1421 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1422 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1423 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1424 ;;Total ram usage:       28 bytes
  1425 ;; Hardware stack levels required when called:   14
  1426 ;; This function calls:
  1427 ;;		_Digital232_RW
  1428 ;;		_Digital232_init
  1429 ;;		_SYSTEM_Initialize
  1430 ;;		_StartTimer
  1431 ;;		_TimerDone
  1432 ;;		___awdiv
  1433 ;;		___fldiv
  1434 ;;		___xxtofl
  1435 ;;		_eaDogM_WriteCommand
  1436 ;;		_eaDogM_WriteStringAtPos
  1437 ;;		_init_display
  1438 ;;		_led_lightshow
  1439 ;;		_once
  1440 ;;		_rand
  1441 ;;		_sprintf
  1442 ;;		_srand
  1443 ;;		_work_sw
  1444 ;; This function is called by:
  1445 ;;		Startup code after reset
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           	psect	text0
  1450  002050                     __ptext0:
  1451                           	opt callstack 0
  1452  002050                     _main:
  1453                           	opt callstack 17
  1454                           
  1455                           ;incstack = 0
  1456  002050  0E00               	movlw	0
  1457  002052  0100               	movlb	0	; () banked
  1458  002054  6F9D               	movwf	main@y& (0+255),b
  1459                           
  1460                           ; BSR set to: 0
  1461                           ;main.c: 104:  char buffer[24];;main.c: 106:  SYSTEM_Initialize();
  1462  002056  ECC8  F027         	call	_SYSTEM_Initialize	;wreg free
  1463                           
  1464                           ; BSR set to: 61
  1465                           ;main.c: 113:  (INTCON0bits.GIEH = 1);
  1466  00205A  8ED2               	bsf	210,7,c	;volatile
  1467                           
  1468                           ; BSR set to: 61
  1469                           ;main.c: 116:  (INTCON0bits.GIEL = 1);
  1470  00205C  8CD2               	bsf	210,6,c	;volatile
  1471                           
  1472                           ; BSR set to: 61
  1473                           ;main.c: 124:  IO.input_ok = 0;
  1474  00205E  0E00               	movlw	0
  1475  002060  0101               	movlb	1	; () banked
  1476  002062  6FB3               	movwf	(_IO+10)& (0+255),b
  1477                           
  1478                           ; BSR set to: 1
  1479                           ;main.c: 125:  IO.output_ok = 0;
  1480  002064  0E00               	movlw	0
  1481  002066  6FB4               	movwf	(_IO+11)& (0+255),b
  1482                           
  1483                           ; BSR set to: 1
  1484                           ;main.c: 126:  IO.d232 = D232_IDLE;
  1485  002068  0E00               	movlw	0
  1486  00206A  6FB6               	movwf	(_IO+13)& (0+255),b
  1487                           
  1488                           ; BSR set to: 1
  1489                           ;main.c: 127:  IO.io = IO_IDLE;
  1490  00206C  0E00               	movlw	0
  1491  00206E  6FB5               	movwf	(_IO+12)& (0+255),b
  1492                           
  1493                           ; BSR set to: 1
  1494                           ;main.c: 129:  init_display();
  1495  002070  EC10  F025         	call	_init_display	;wreg free
  1496                           
  1497                           ; BSR set to: 1
  1498                           ;main.c: 130:  eaDogM_WriteCommand(0b00001100);
  1499  002074  0E0C               	movlw	12
  1500  002076  EC62  F02A         	call	_eaDogM_WriteCommand
  1501                           
  1502                           ; BSR set to: 1
  1503                           ;main.c: 131:  srand(99);
  1504  00207A  0E00               	movlw	0
  1505  00207C  6E07               	movwf	(srand@s+1)^0,c
  1506  00207E  0E63               	movlw	99
  1507  002080  6E06               	movwf	srand@s^0,c
  1508  002082  ECAD  F027         	call	_srand	;wreg free
  1509                           
  1510                           ; BSR set to: 1
  1511                           ;main.c: 133:  StartTimer(TMR_INIT, 1000);
  1512  002086  0E03               	movlw	3
  1513  002088  6E07               	movwf	(StartTimer@count+1)^0,c
  1514  00208A  0EE8               	movlw	232
  1515  00208C  6E06               	movwf	StartTimer@count^0,c
  1516  00208E  0E01               	movlw	1
  1517  002090  ECFF  F027         	call	_StartTimer
  1518                           
  1519                           ;main.c: 134:  Digital232_init();
  1520  002094  ECC6  F020         	call	_Digital232_init	;wreg free
  1521                           
  1522                           ;main.c: 135:  sprintf(buffer, "SW %s Play!", "1.02");
  1523  002098  0E84               	movlw	low main@buffer
  1524  00209A  0100               	movlb	0	; () banked
  1525  00209C  6F64               	movwf	sprintf@s& (0+255),b
  1526  00209E  6B65               	clrf	(sprintf@s+1)& (0+255),b
  1527  0020A0  0E23               	movlw	low STR_3
  1528  0020A2  6F66               	movwf	sprintf@fmt& (0+255),b
  1529  0020A4  0E2F               	movlw	low STR_4
  1530  0020A6  6F67               	movwf	(?_sprintf+3)& (0+255),b
  1531  0020A8  5167               	movf	(?_sprintf+3)& (0+255),w,b
  1532  0020AA  A4D8               	btfss	status,2,c
  1533  0020AC  0E20               	movlw	high __smallconst
  1534  0020AE  6F68               	movwf	(?_sprintf+4)& (0+255),b
  1535  0020B0  EC50  F026         	call	_sprintf	;wreg free
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;main.c: 136:  eaDogM_WriteStringAtPos(0, 0, buffer);
  1539  0020B4  0E00               	movlw	0
  1540  0020B6  6E0E               	movwf	eaDogM_WriteStringAtPos@c^0,c
  1541  0020B8  0E84               	movlw	low main@buffer
  1542  0020BA  6E0F               	movwf	eaDogM_WriteStringAtPos@strPtr^0,c
  1543  0020BC  6A10               	clrf	(eaDogM_WriteStringAtPos@strPtr+1)^0,c
  1544  0020BE  0E00               	movlw	0
  1545  0020C0  EC42  F029         	call	_eaDogM_WriteStringAtPos
  1546                           
  1547                           ;main.c: 138:  otto_b1.range = otto_b1.span - otto_b1.offset;
  1548  0020C4  0101               	movlb	1	; () banked
  1549  0020C6  51D2               	movf	_otto_b1& (0+255),w,b
  1550  0020C8  5DD4               	subwf	(_otto_b1+2)& (0+255),w,b
  1551  0020CA  6FD6               	movwf	(_otto_b1+4)& (0+255),b
  1552  0020CC  51D3               	movf	(_otto_b1+1)& (0+255),w,b
  1553  0020CE  59D5               	subwfb	(_otto_b1+3)& (0+255),w,b
  1554  0020D0  6FD7               	movwf	(_otto_b1+5)& (0+255),b
  1555                           
  1556                           ; BSR set to: 1
  1557                           ;main.c: 139:  otto_b1.scalar = 255.0 / (float) otto_b1.range;
  1558  0020D2  0E00               	movlw	0
  1559  0020D4  6E37               	movwf	___fldiv@b^0,c
  1560  0020D6  0E00               	movlw	0
  1561  0020D8  6E38               	movwf	(___fldiv@b+1)^0,c
  1562  0020DA  0E7F               	movlw	127
  1563  0020DC  6E39               	movwf	(___fldiv@b+2)^0,c
  1564  0020DE  0E43               	movlw	67
  1565  0020E0  6E3A               	movwf	(___fldiv@b+3)^0,c
  1566  0020E2  EE20  F1D6         	lfsr	2,_otto_b1+4
  1567  0020E6  006F FF78  F006    	movff	postinc2,___xxtofl@val
  1568  0020EC  006F FF74  F007    	movff	postdec2,___xxtofl@val+1
  1569  0020F2  0E00               	movlw	0
  1570  0020F4  BE07               	btfsc	(___xxtofl@val+1)^0,7,c
  1571  0020F6  0EFF               	movlw	-1
  1572  0020F8  6E08               	movwf	(___xxtofl@val+2)^0,c
  1573  0020FA  6E09               	movwf	(___xxtofl@val+3)^0,c
  1574  0020FC  0E01               	movlw	1
  1575  0020FE  ECAD  F01D         	call	___xxtofl
  1576  002102  0060  F018  F03B   	movff	?___xxtofl,___fldiv@a
  1577  002108  0060  F01C  F03C   	movff	?___xxtofl+1,___fldiv@a+1
  1578  00210E  0060  F020  F03D   	movff	?___xxtofl+2,___fldiv@a+2
  1579  002114  0060  F024  F03E   	movff	?___xxtofl+3,___fldiv@a+3
  1580  00211A  EC7E  F019         	call	___fldiv	;wreg free
  1581  00211E  0060  F0DC  F1D8   	movff	?___fldiv,_otto_b1+6
  1582  002124  0060  F0E0  F1D9   	movff	?___fldiv+1,_otto_b1+7
  1583  00212A  0060  F0E4  F1DA   	movff	?___fldiv+2,_otto_b1+8
  1584  002130  0060  F0E8  F1DB   	movff	?___fldiv+3,_otto_b1+9
  1585                           
  1586                           ;main.c: 140:  otto_b1.zero = (int16_t) (255.0 / 0.50);
  1587  002136  0E01               	movlw	1
  1588  002138  0101               	movlb	1	; () banked
  1589  00213A  6FDD               	movwf	(_otto_b1+11)& (0+255),b
  1590  00213C  0EFE               	movlw	254
  1591  00213E  6FDC               	movwf	(_otto_b1+10)& (0+255),b
  1592  002140                     l7760:
  1593                           
  1594                           ;main.c: 144:   work_sw();
  1595  002140  EC44  F024         	call	_work_sw	;wreg free
  1596                           
  1597                           ;main.c: 145:   if (Digital232_RW() && switches->detonator)
  1598  002144  ECD4  F01A         	call	_Digital232_RW	;wreg free
  1599  002148  0900               	iorlw	0
  1600  00214A  A4D8               	btfss	status,2,c
  1601                           
  1602                           ; BSR set to: 1
  1603  00214C  A3A9               	btfss	_IO& (0+255),1,b
  1604  00214E  D007               	goto	l7768
  1605                           
  1606                           ; BSR set to: 1
  1607                           ;main.c: 146:    led_lightshow(IO.seq_value, 1);
  1608  002150  0E00               	movlw	0
  1609  002152  6E0F               	movwf	(led_lightshow@speed+1)^0,c
  1610  002154  0E01               	movlw	1
  1611  002156  6E0E               	movwf	led_lightshow@speed^0,c
  1612  002158  51BA               	movf	(_IO+17)& (0+255),w,b
  1613  00215A  EC76  F015         	call	_led_lightshow
  1614  00215E                     l7768:
  1615                           
  1616                           ;main.c: 148:   if (!switches->detonator) {
  1617  00215E  0101               	movlb	1	; () banked
  1618  002160  B3A9               	btfsc	_IO& (0+255),1,b
  1619  002162  D0C4               	goto	l7824
  1620                           
  1621                           ; BSR set to: 1
  1622                           ;main.c: 149:    IO.outbytes[1] = IO.outbytes[1] | 0x02;
  1623  002164  51AF               	movf	(_IO+6)& (0+255),w,b
  1624  002166  0902               	iorlw	2
  1625  002168  6FAF               	movwf	(_IO+6)& (0+255),b
  1626                           
  1627                           ; BSR set to: 1
  1628                           ;main.c: 150:    if (IO.outbytes[2]&0b00000001) {
  1629  00216A  A1B0               	btfss	(_IO+7)& (0+255),0,b
  1630  00216C  D040               	goto	l7790
  1631                           
  1632                           ; BSR set to: 1
  1633                           ;main.c: 151:     if (TimerDone(TMR_EXTRA)) {
  1634  00216E  0E04               	movlw	4
  1635  002170  ECB2  F028         	call	_TimerDone
  1636  002174  0900               	iorlw	0
  1637  002176  B4D8               	btfsc	status,2,c
  1638  002178  D03A               	goto	l7790
  1639                           
  1640                           ;main.c: 152:      IO.outbytes[1] = IO.outbytes[1] | 0x04;
  1641  00217A  0101               	movlb	1	; () banked
  1642  00217C  51AF               	movf	(_IO+6)& (0+255),w,b
  1643  00217E  0904               	iorlw	4
  1644  002180  6FAF               	movwf	(_IO+6)& (0+255),b
  1645                           
  1646                           ; BSR set to: 1
  1647                           ;main.c: 153:      if (once(&IO.f1))
  1648  002182  0ECD               	movlw	low (_IO+36)
  1649  002184  6E06               	movwf	once@once_flag^0,c
  1650  002186  0E01               	movlw	high (_IO+36)
  1651  002188  6E07               	movwf	(once@once_flag+1)^0,c
  1652  00218A  EC77  F028         	call	_once	;wreg free
  1653  00218E  0900               	iorlw	0
  1654  002190  B4D8               	btfsc	status,2,c
  1655  002192  D002               	goto	l7782
  1656                           
  1657                           ;main.c: 154:       IO.hits++;
  1658  002194  0101               	movlb	1	; () banked
  1659  002196  2BBB               	incf	(_IO+18)& (0+255),f,b
  1660  002198                     l7782:
  1661                           
  1662                           ;main.c: 155:      if (IO.speed_update && IO.speed-- < 2) {
  1663  002198  0101               	movlb	1	; () banked
  1664  00219A  51CA               	movf	(_IO+33)& (0+255),w,b
  1665  00219C  B4D8               	btfsc	status,2,c
  1666  00219E  D024               	goto	l1078
  1667                           
  1668                           ; BSR set to: 1
  1669  0021A0  51C4               	movf	(_IO+27)& (0+255),w,b
  1670  0021A2  0100               	movlb	0	; () banked
  1671  0021A4  6F82               	movwf	??_main& (0+255),b
  1672  0021A6  0101               	movlb	1	; () banked
  1673  0021A8  51C5               	movf	(_IO+28)& (0+255),w,b
  1674  0021AA  0100               	movlb	0	; () banked
  1675  0021AC  6F83               	movwf	(??_main+1)& (0+255),b
  1676  0021AE  0E01               	movlw	1
  1677  0021B0  0101               	movlb	1	; () banked
  1678  0021B2  5FC4               	subwf	(_IO+27)& (0+255),f,b
  1679  0021B4  0E00               	movlw	0
  1680  0021B6  5BC5               	subwfb	(_IO+28)& (0+255),f,b
  1681  0021B8  0100               	movlb	0	; () banked
  1682  0021BA  5183               	movf	(??_main+1)& (0+255),w,b
  1683  0021BC  E115               	bnz	l1078
  1684  0021BE  0E02               	movlw	2
  1685  0021C0  5D82               	subwf	??_main& (0+255),w,b
  1686  0021C2  B0D8               	btfsc	status,0,c
  1687  0021C4  D011               	goto	l1078
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;main.c: 156:       IO.speed = 10;
  1691  0021C6  0E00               	movlw	0
  1692  0021C8  0101               	movlb	1	; () banked
  1693  0021CA  6FC5               	movwf	(_IO+28)& (0+255),b
  1694  0021CC  0E0A               	movlw	10
  1695  0021CE  6FC4               	movwf	(_IO+27)& (0+255),b
  1696                           
  1697                           ;main.c: 157:       IO.sequence_done = 1;
  1698  0021D0  0E01               	movlw	1
  1699  0021D2  6FCB               	movwf	(_IO+34)& (0+255),b
  1700                           
  1701                           ;main.c: 158:       IO.seq_value = 2;
  1702  0021D4  0E02               	movlw	2
  1703  0021D6  6FBA               	movwf	(_IO+17)& (0+255),b
  1704                           
  1705                           ;main.c: 159:       IO.slower = 0;
  1706  0021D8  0E00               	movlw	0
  1707  0021DA  6FC7               	movwf	(_IO+30)& (0+255),b
  1708  0021DC  0E00               	movlw	0
  1709  0021DE  6FC6               	movwf	(_IO+29)& (0+255),b
  1710                           
  1711                           ; BSR set to: 1
  1712                           ;main.c: 160:       IO.stats = IO.score;
  1713  0021E0  C1BD  F1BE         	movff	_IO+20,_IO+21
  1714                           
  1715                           ;main.c: 161:       IO.win = 1;
  1716  0021E4  0E01               	movlw	1
  1717  0021E6  6FCC               	movwf	(_IO+35)& (0+255),b
  1718  0021E8                     l1078:
  1719                           
  1720                           ;main.c: 163:      IO.speed_update = 0;
  1721  0021E8  0E00               	movlw	0
  1722  0021EA  0101               	movlb	1	; () banked
  1723  0021EC  6FCA               	movwf	(_IO+33)& (0+255),b
  1724  0021EE                     l7790:
  1725                           
  1726                           ;main.c: 167:    if (IO.outbytes[2]&0b10000000) {
  1727  0021EE  0101               	movlb	1	; () banked
  1728  0021F0  AFB0               	btfss	(_IO+7)& (0+255),7,b
  1729  0021F2  D040               	goto	l7808
  1730                           
  1731                           ; BSR set to: 1
  1732                           ;main.c: 168:     if (TimerDone(TMR_EXTRA)) {
  1733  0021F4  0E04               	movlw	4
  1734  0021F6  ECB2  F028         	call	_TimerDone
  1735  0021FA  0900               	iorlw	0
  1736  0021FC  B4D8               	btfsc	status,2,c
  1737  0021FE  D03A               	goto	l7808
  1738                           
  1739                           ;main.c: 169:      IO.outbytes[1] = IO.outbytes[1] | 0x01;
  1740  002200  0101               	movlb	1	; () banked
  1741  002202  51AF               	movf	(_IO+6)& (0+255),w,b
  1742  002204  0901               	iorlw	1
  1743  002206  6FAF               	movwf	(_IO+6)& (0+255),b
  1744                           
  1745                           ; BSR set to: 1
  1746                           ;main.c: 170:      if (once(&IO.f2))
  1747  002208  0ECE               	movlw	low (_IO+37)
  1748  00220A  6E06               	movwf	once@once_flag^0,c
  1749  00220C  0E01               	movlw	high (_IO+37)
  1750  00220E  6E07               	movwf	(once@once_flag+1)^0,c
  1751  002210  EC77  F028         	call	_once	;wreg free
  1752  002214  0900               	iorlw	0
  1753  002216  B4D8               	btfsc	status,2,c
  1754  002218  D002               	goto	l7800
  1755                           
  1756                           ;main.c: 171:       IO.hits++;
  1757  00221A  0101               	movlb	1	; () banked
  1758  00221C  2BBB               	incf	(_IO+18)& (0+255),f,b
  1759  00221E                     l7800:
  1760                           
  1761                           ;main.c: 172:      if (IO.speed_update && IO.speed-- < 2) {
  1762  00221E  0101               	movlb	1	; () banked
  1763  002220  51CA               	movf	(_IO+33)& (0+255),w,b
  1764  002222  B4D8               	btfsc	status,2,c
  1765  002224  D024               	goto	l1082
  1766                           
  1767                           ; BSR set to: 1
  1768  002226  51C4               	movf	(_IO+27)& (0+255),w,b
  1769  002228  0100               	movlb	0	; () banked
  1770  00222A  6F82               	movwf	??_main& (0+255),b
  1771  00222C  0101               	movlb	1	; () banked
  1772  00222E  51C5               	movf	(_IO+28)& (0+255),w,b
  1773  002230  0100               	movlb	0	; () banked
  1774  002232  6F83               	movwf	(??_main+1)& (0+255),b
  1775  002234  0E01               	movlw	1
  1776  002236  0101               	movlb	1	; () banked
  1777  002238  5FC4               	subwf	(_IO+27)& (0+255),f,b
  1778  00223A  0E00               	movlw	0
  1779  00223C  5BC5               	subwfb	(_IO+28)& (0+255),f,b
  1780  00223E  0100               	movlb	0	; () banked
  1781  002240  5183               	movf	(??_main+1)& (0+255),w,b
  1782  002242  E115               	bnz	l1082
  1783  002244  0E02               	movlw	2
  1784  002246  5D82               	subwf	??_main& (0+255),w,b
  1785  002248  B0D8               	btfsc	status,0,c
  1786  00224A  D011               	goto	l1082
  1787                           
  1788                           ; BSR set to: 0
  1789                           ;main.c: 173:       IO.speed = 10;
  1790  00224C  0E00               	movlw	0
  1791  00224E  0101               	movlb	1	; () banked
  1792  002250  6FC5               	movwf	(_IO+28)& (0+255),b
  1793  002252  0E0A               	movlw	10
  1794  002254  6FC4               	movwf	(_IO+27)& (0+255),b
  1795                           
  1796                           ;main.c: 174:       IO.sequence_done = 1;
  1797  002256  0E01               	movlw	1
  1798  002258  6FCB               	movwf	(_IO+34)& (0+255),b
  1799                           
  1800                           ;main.c: 175:       IO.seq_value = 2;
  1801  00225A  0E02               	movlw	2
  1802  00225C  6FBA               	movwf	(_IO+17)& (0+255),b
  1803                           
  1804                           ;main.c: 176:       IO.slower = 0;
  1805  00225E  0E00               	movlw	0
  1806  002260  6FC7               	movwf	(_IO+30)& (0+255),b
  1807  002262  0E00               	movlw	0
  1808  002264  6FC6               	movwf	(_IO+29)& (0+255),b
  1809                           
  1810                           ; BSR set to: 1
  1811                           ;main.c: 177:       IO.stats = IO.score;
  1812  002266  C1BD  F1BE         	movff	_IO+20,_IO+21
  1813                           
  1814                           ;main.c: 178:       IO.win = 1;
  1815  00226A  0E01               	movlw	1
  1816  00226C  6FCC               	movwf	(_IO+35)& (0+255),b
  1817  00226E                     l1082:
  1818                           
  1819                           ;main.c: 180:      IO.speed_update = 0;
  1820  00226E  0E00               	movlw	0
  1821  002270  0101               	movlb	1	; () banked
  1822  002272  6FCA               	movwf	(_IO+33)& (0+255),b
  1823  002274                     l7808:
  1824                           
  1825                           ;main.c: 184:    if (IO.outbytes[2]&0b01111110) {
  1826  002274  0060  F6C0  F082   	movff	_IO+7,??_main
  1827  00227A  0E7E               	movlw	126
  1828  00227C  0100               	movlb	0	; () banked
  1829  00227E  1782               	andwf	??_main& (0+255),f,b
  1830  002280  B4D8               	btfsc	status,2,c
  1831  002282  D75E               	goto	l7760
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;main.c: 185:     if (TimerDone(TMR_EXTRA_MISS)) {
  1835  002284  0E05               	movlw	5
  1836  002286  ECB2  F028         	call	_TimerDone
  1837  00228A  0900               	iorlw	0
  1838  00228C  B4D8               	btfsc	status,2,c
  1839  00228E  D758               	goto	l7760
  1840                           
  1841                           ;main.c: 186:      if (once(&IO.f3)) {
  1842  002290  0ECF               	movlw	low (_IO+38)
  1843  002292  6E06               	movwf	once@once_flag^0,c
  1844  002294  0E01               	movlw	high (_IO+38)
  1845  002296  6E07               	movwf	(once@once_flag+1)^0,c
  1846  002298  EC77  F028         	call	_once	;wreg free
  1847  00229C  0900               	iorlw	0
  1848  00229E  B4D8               	btfsc	status,2,c
  1849  0022A0  D74F               	goto	l7760
  1850                           
  1851                           ;main.c: 187:       IO.misses++;
  1852  0022A2  0101               	movlb	1	; () banked
  1853  0022A4  2BBC               	incf	(_IO+19)& (0+255),f,b
  1854                           
  1855                           ; BSR set to: 1
  1856                           ;main.c: 188:       if (IO.speed_update && (IO.misses++ > 26)) {
  1857  0022A6  51CA               	movf	(_IO+33)& (0+255),w,b
  1858  0022A8  B4D8               	btfsc	status,2,c
  1859  0022AA  D74A               	goto	l7760
  1860                           
  1861                           ; BSR set to: 1
  1862  0022AC  EE20  F1BC         	lfsr	2,_IO+19
  1863  0022B0  006F FF7C  F082    	movff	indf2,??_main
  1864  0022B6  0E01               	movlw	1
  1865  0022B8  26DF               	addwf	indf2,f,c
  1866  0022BA  0E1A               	movlw	26
  1867  0022BC  0100               	movlb	0	; () banked
  1868  0022BE  6582               	cpfsgt	??_main& (0+255),b
  1869  0022C0  D73F               	goto	l7760
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;main.c: 189:        if (IO.score-- < 10)
  1873  0022C2  EE20  F1BD         	lfsr	2,_IO+20
  1874  0022C6  006F FF7C  F082    	movff	indf2,??_main
  1875  0022CC  0E01               	movlw	1
  1876  0022CE  5EDF               	subwf	indf2,f,c
  1877  0022D0  0E0A               	movlw	10
  1878  0022D2  6182               	cpfslt	??_main& (0+255),b
  1879  0022D4  D003               	goto	l1087
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;main.c: 190:         IO.score = 10;
  1883  0022D6  0E0A               	movlw	10
  1884  0022D8  0101               	movlb	1	; () banked
  1885  0022DA  6FBD               	movwf	(_IO+20)& (0+255),b
  1886  0022DC                     l1087:
  1887                           
  1888                           ;main.c: 191:        IO.slower = 10;
  1889  0022DC  0E00               	movlw	0
  1890  0022DE  0101               	movlb	1	; () banked
  1891  0022E0  6FC7               	movwf	(_IO+30)& (0+255),b
  1892  0022E2  0E0A               	movlw	10
  1893  0022E4  6FC6               	movwf	(_IO+29)& (0+255),b
  1894                           
  1895                           ;main.c: 192:        IO.speed_update = 0;
  1896  0022E6  0E00               	movlw	0
  1897  0022E8  6FCA               	movwf	(_IO+33)& (0+255),b
  1898                           
  1899                           ;main.c: 197:   } else {
  1900                           
  1901                           ;main.c: 196:    }
  1902  0022EA  D72A               	goto	l7760
  1903  0022EC                     l7824:
  1904                           
  1905                           ; BSR set to: 1
  1906                           ;main.c: 198:    StartTimer(TMR_EXTRA, 500);
  1907  0022EC  0E01               	movlw	1
  1908  0022EE  6E07               	movwf	(StartTimer@count+1)^0,c
  1909  0022F0  0EF4               	movlw	244
  1910  0022F2  6E06               	movwf	StartTimer@count^0,c
  1911  0022F4  0E04               	movlw	4
  1912  0022F6  ECFF  F027         	call	_StartTimer
  1913                           
  1914                           ;main.c: 199:    StartTimer(TMR_EXTRA_MISS, 25);
  1915  0022FA  0E00               	movlw	0
  1916  0022FC  6E07               	movwf	(StartTimer@count+1)^0,c
  1917  0022FE  0E19               	movlw	25
  1918  002300  6E06               	movwf	StartTimer@count^0,c
  1919  002302  0E05               	movlw	5
  1920  002304  ECFF  F027         	call	_StartTimer
  1921                           
  1922                           ;main.c: 200:    if (IO.seq_value == 0) {
  1923  002308  0101               	movlb	1	; () banked
  1924  00230A  51BA               	movf	(_IO+17)& (0+255),w,b
  1925  00230C  A4D8               	btfss	status,2,c
  1926  00230E  D009               	goto	l1089
  1927                           
  1928                           ; BSR set to: 1
  1929                           ;main.c: 201:     IO.outbytes[1] = IO.outbytes[1] & (~0x02);
  1930  002310  51AF               	movf	(_IO+6)& (0+255),w,b
  1931  002312  0BFD               	andlw	253
  1932  002314  6FAF               	movwf	(_IO+6)& (0+255),b
  1933                           
  1934                           ;main.c: 202:     IO.outbytes[1] = IO.outbytes[1] & (~0x04);
  1935  002316  51AF               	movf	(_IO+6)& (0+255),w,b
  1936  002318  0BFB               	andlw	251
  1937  00231A  6FAF               	movwf	(_IO+6)& (0+255),b
  1938                           
  1939                           ;main.c: 203:     IO.outbytes[1] = IO.outbytes[1] & (~0x01);
  1940  00231C  51AF               	movf	(_IO+6)& (0+255),w,b
  1941  00231E  0BFE               	andlw	254
  1942  002320  6FAF               	movwf	(_IO+6)& (0+255),b
  1943  002322                     l1089:
  1944                           
  1945                           ; BSR set to: 1
  1946                           ;main.c: 206:    if (IO.seq_value == 3 && TimerDone(TMR_BAL)) {
  1947  002322  0E03               	movlw	3
  1948  002324  19BA               	xorwf	(_IO+17)& (0+255),w,b
  1949  002326  A4D8               	btfss	status,2,c
  1950  002328  D037               	goto	l7844
  1951                           
  1952                           ; BSR set to: 1
  1953  00232A  0E07               	movlw	7
  1954  00232C  ECB2  F028         	call	_TimerDone
  1955  002330  0900               	iorlw	0
  1956  002332  B4D8               	btfsc	status,2,c
  1957  002334  D031               	goto	l7844
  1958                           
  1959                           ;main.c: 207:     IO.outbytes[1] = IO.outbytes[1] & (~0x02);
  1960  002336  0101               	movlb	1	; () banked
  1961  002338  51AF               	movf	(_IO+6)& (0+255),w,b
  1962  00233A  0BFD               	andlw	253
  1963  00233C  6FAF               	movwf	(_IO+6)& (0+255),b
  1964                           
  1965                           ;main.c: 208:     IO.outbytes[1] = IO.outbytes[1] & (~0x04);
  1966  00233E  51AF               	movf	(_IO+6)& (0+255),w,b
  1967  002340  0BFB               	andlw	251
  1968  002342  6FAF               	movwf	(_IO+6)& (0+255),b
  1969                           
  1970                           ;main.c: 209:     IO.outbytes[1] = IO.outbytes[1] & (~0x01);
  1971  002344  51AF               	movf	(_IO+6)& (0+255),w,b
  1972  002346  0BFE               	andlw	254
  1973  002348  6FAF               	movwf	(_IO+6)& (0+255),b
  1974                           
  1975                           ; BSR set to: 1
  1976                           ;main.c: 213:     srand(IO.clock);
  1977  00234A  0060  F720  F006   	movff	_IO+31,srand@s
  1978  002350  0060  F724  F007   	movff	_IO+32,srand@s+1
  1979  002356  ECAD  F027         	call	_srand	;wreg free
  1980                           
  1981                           ; BSR set to: 1
  1982                           ;main.c: 214:     if (IO.rnd_count++ > 64) {
  1983  00235A  EE20  F1BF         	lfsr	2,_IO+22
  1984  00235E  006F FF7C  F082    	movff	indf2,??_main
  1985  002364  0E01               	movlw	1
  1986  002366  26DF               	addwf	indf2,f,c
  1987  002368  0E40               	movlw	64
  1988  00236A  0100               	movlb	0	; () banked
  1989  00236C  6582               	cpfsgt	??_main& (0+255),b
  1990  00236E  D014               	goto	l7844
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;main.c: 215:      IO.rnd = rand();
  1994  002370  EC3F  F020         	call	_rand	;wreg free
  1995  002374  501E               	movf	?_rand^0,w,c
  1996  002376  6FD1               	movwf	(_IO+40)& (0+255),b
  1997                           
  1998                           ; BSR set to: 1
  1999                           ;main.c: 216:      IO.rnd = IO.rnd / 4;
  2000  002378  51D1               	movf	(_IO+40)& (0+255),w,b
  2001  00237A  6E06               	movwf	___awdiv@dividend^0,c
  2002  00237C  6A07               	clrf	(___awdiv@dividend+1)^0,c
  2003  00237E  BE06               	btfsc	___awdiv@dividend^0,7,c
  2004  002380  0607               	decf	(___awdiv@dividend+1)^0,f,c
  2005  002382  0E00               	movlw	0
  2006  002384  6E09               	movwf	(___awdiv@divisor+1)^0,c
  2007  002386  0E04               	movlw	4
  2008  002388  6E08               	movwf	___awdiv@divisor^0,c
  2009  00238A  EC8D  F024         	call	___awdiv	;wreg free
  2010  00238E  5006               	movf	?___awdiv^0,w,c
  2011  002390  0101               	movlb	1	; () banked
  2012  002392  6FD1               	movwf	(_IO+40)& (0+255),b
  2013                           
  2014                           ; BSR set to: 1
  2015                           ;main.c: 217:      IO.rnd_count = 0;
  2016  002394  0E00               	movlw	0
  2017  002396  6FBF               	movwf	(_IO+22)& (0+255),b
  2018  002398                     l7844:
  2019                           
  2020                           ;main.c: 220:    IO.speed_update = 1;
  2021  002398  0E01               	movlw	1
  2022  00239A  0101               	movlb	1	; () banked
  2023  00239C  6FCA               	movwf	(_IO+33)& (0+255),b
  2024                           
  2025                           ; BSR set to: 1
  2026                           ;main.c: 221:    IO.f1 = 1;
  2027  00239E  0E01               	movlw	1
  2028  0023A0  6FCD               	movwf	(_IO+36)& (0+255),b
  2029                           
  2030                           ; BSR set to: 1
  2031                           ;main.c: 222:    IO.f2 = 1;
  2032  0023A2  0E01               	movlw	1
  2033  0023A4  6FCE               	movwf	(_IO+37)& (0+255),b
  2034                           
  2035                           ; BSR set to: 1
  2036                           ;main.c: 223:    IO.f3 = 1;
  2037  0023A6  0E01               	movlw	1
  2038  0023A8  6FCF               	movwf	(_IO+38)& (0+255),b
  2039                           
  2040                           ; BSR set to: 1
  2041                           ;main.c: 224:    if (TimerDone(TMR_SEQ)) {
  2042  0023AA  0E06               	movlw	6
  2043  0023AC  ECB2  F028         	call	_TimerDone
  2044  0023B0  0900               	iorlw	0
  2045  0023B2  B4D8               	btfsc	status,2,c
  2046  0023B4  D6C5               	goto	l7760
  2047                           
  2048                           ;main.c: 225:     if ((otto_b1.result > 0) && (IO.seq_value == 0))
  2049  0023B6  0101               	movlb	1	; () banked
  2050  0023B8  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  2051  0023BA  D016               	goto	l1093
  2052  0023BC  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  2053  0023BE  E103               	bnz	u8560
  2054  0023C0  05DE               	decf	(_otto_b1+12)& (0+255),w,b
  2055  0023C2  A0D8               	btfss	status,0,c
  2056  0023C4  D011               	goto	l1093
  2057  0023C6                     u8560:
  2058                           
  2059                           ; BSR set to: 1
  2060  0023C6  51BA               	movf	(_IO+17)& (0+255),w,b
  2061  0023C8  A4D8               	btfss	status,2,c
  2062  0023CA  D00E               	goto	l1093
  2063                           
  2064                           ; BSR set to: 1
  2065                           ;main.c: 226:     {;main.c: 227:      IO.seq_current = 3;
  2066  0023CC  0E00               	movlw	0
  2067  0023CE  6FC3               	movwf	(_IO+26)& (0+255),b
  2068  0023D0  0E03               	movlw	3
  2069  0023D2  6FC2               	movwf	(_IO+25)& (0+255),b
  2070                           
  2071                           ; BSR set to: 1
  2072                           ;main.c: 228:      StartTimer(TMR_CHANGE, 30000);
  2073  0023D4  0E75               	movlw	117
  2074  0023D6  6E07               	movwf	(StartTimer@count+1)^0,c
  2075  0023D8  0E30               	movlw	48
  2076  0023DA  6E06               	movwf	StartTimer@count^0,c
  2077  0023DC  0E08               	movlw	8
  2078  0023DE  ECFF  F027         	call	_StartTimer
  2079                           
  2080                           ;main.c: 229:      IO.win = 1;
  2081  0023E2  0E01               	movlw	1
  2082  0023E4  0101               	movlb	1	; () banked
  2083  0023E6  6FCC               	movwf	(_IO+35)& (0+255),b
  2084  0023E8                     l1093:
  2085                           
  2086                           ; BSR set to: 1
  2087                           ;main.c: 231:     if (TimerDone(TMR_CHANGE))
  2088  0023E8  0E08               	movlw	8
  2089  0023EA  ECB2  F028         	call	_TimerDone
  2090  0023EE  0900               	iorlw	0
  2091  0023F0  B4D8               	btfsc	status,2,c
  2092  0023F2  D007               	goto	l7866
  2093                           
  2094                           ;main.c: 232:     {;main.c: 233:      IO.seq_current = 0;
  2095  0023F4  0E00               	movlw	0
  2096  0023F6  0101               	movlb	1	; () banked
  2097  0023F8  6FC3               	movwf	(_IO+26)& (0+255),b
  2098  0023FA  0E00               	movlw	0
  2099  0023FC  6FC2               	movwf	(_IO+25)& (0+255),b
  2100                           
  2101                           ;main.c: 234:      IO.win = 1;
  2102  0023FE  0E01               	movlw	1
  2103  002400  6FCC               	movwf	(_IO+35)& (0+255),b
  2104  002402                     l7866:
  2105                           
  2106                           ;main.c: 237:     IO.seq_value = IO.seq_current;
  2107  002402  C1C2  F1BA         	movff	_IO+25,_IO+17
  2108                           
  2109                           ;main.c: 238:     if (IO.win) {
  2110  002406  0101               	movlb	1	; () banked
  2111  002408  51CC               	movf	(_IO+35)& (0+255),w,b
  2112  00240A  B4D8               	btfsc	status,2,c
  2113  00240C  D699               	goto	l7760
  2114                           
  2115                           ; BSR set to: 1
  2116                           ;main.c: 239:      IO.win = 0;
  2117  00240E  0E00               	movlw	0
  2118  002410  6FCC               	movwf	(_IO+35)& (0+255),b
  2119                           
  2120                           ;main.c: 240:      IO.hits = 0;
  2121  002412  0E00               	movlw	0
  2122  002414  6FBB               	movwf	(_IO+18)& (0+255),b
  2123                           
  2124                           ;main.c: 241:      IO.misses = 0;
  2125  002416  0E00               	movlw	0
  2126  002418  6FBC               	movwf	(_IO+19)& (0+255),b
  2127                           
  2128                           ;main.c: 242:      IO.score = 50;
  2129  00241A  0E32               	movlw	50
  2130  00241C  6FBD               	movwf	(_IO+20)& (0+255),b
  2131  00241E  D690               	goto	l7760
  2132  002420                     __end_of_main:
  2133                           	opt callstack 0
  2134                           
  2135 ;; *************** function _work_sw *****************
  2136 ;; Defined at:
  2137 ;;		line 84 in file "main.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;		None
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;  buffer        128    0[BANK2 ] unsigned char [64][2]
  2142 ;; Return value:  Size  Location     Type
  2143 ;;                  1    wreg      void 
  2144 ;; Registers used:
  2145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/1
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2152 ;;      Locals:         0       0       0     128       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2154 ;;      Totals:         0       0       0     128       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2155 ;;Total ram usage:      128 bytes
  2156 ;; Hardware stack levels used:    1
  2157 ;; Hardware stack levels required when called:   13
  2158 ;; This function calls:
  2159 ;;		_StartTimer
  2160 ;;		_TimerDone
  2161 ;;		_eaDogM_WriteStringAtPos
  2162 ;;		_sprintf
  2163 ;; This function is called by:
  2164 ;;		_main
  2165 ;; This function uses a non-reentrant model
  2166 ;;
  2167                           
  2168                           	psect	text1
  2169  004888                     __ptext1:
  2170                           	opt callstack 0
  2171  004888                     _work_sw:
  2172                           	opt callstack 17
  2173                           
  2174                           ;main.c: 86:  char buffer[2][64];;main.c: 87:  if (TimerDone(TMR_INIT)) {
  2175                           
  2176                           ; BSR set to: 1
  2177                           ;incstack = 0
  2178  004888  0E01               	movlw	1
  2179  00488A  ECB2  F028         	call	_TimerDone
  2180  00488E  0900               	iorlw	0
  2181  004890  B4D8               	btfsc	status,2,c
  2182  004892  0012               	return	
  2183                           
  2184                           ;main.c: 88:   IO.clock++;
  2185  004894  0101               	movlb	1	; () banked
  2186  004896  4BC8               	infsnz	(_IO+31)& (0+255),f,b
  2187  004898  2BC9               	incf	(_IO+32)& (0+255),f,b
  2188                           
  2189                           ; BSR set to: 1
  2190                           ;main.c: 89:   sprintf(buffer[0], " H %i, M %i     ", IO.hits, IO.misses);
  2191  00489A  0E00               	movlw	low work_sw@buffer
  2192  00489C  0100               	movlb	0	; () banked
  2193  00489E  6F64               	movwf	sprintf@s& (0+255),b
  2194  0048A0  0E02               	movlw	high work_sw@buffer
  2195  0048A2  6F65               	movwf	(sprintf@s+1)& (0+255),b
  2196  0048A4  0E01               	movlw	low STR_1
  2197  0048A6  6F66               	movwf	sprintf@fmt& (0+255),b
  2198  0048A8  0060  F6EC  F067   	movff	_IO+18,?_sprintf+3
  2199  0048AE  6B68               	clrf	(?_sprintf+4)& (0+255),b
  2200  0048B0  0060  F6F0  F069   	movff	_IO+19,?_sprintf+5
  2201  0048B6  6B6A               	clrf	(?_sprintf+6)& (0+255),b
  2202  0048B8  EC50  F026         	call	_sprintf	;wreg free
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;main.c: 90:   sprintf(buffer[1], " Score %i %i    ", IO.score, otto_b1.result);
  2206  0048BC  0E40               	movlw	low (work_sw@buffer+64)
  2207  0048BE  6F64               	movwf	sprintf@s& (0+255),b
  2208  0048C0  0E02               	movlw	high (work_sw@buffer+64)
  2209  0048C2  6F65               	movwf	(sprintf@s+1)& (0+255),b
  2210  0048C4  0E12               	movlw	low STR_2
  2211  0048C6  6F66               	movwf	sprintf@fmt& (0+255),b
  2212  0048C8  0060  F6F4  F067   	movff	_IO+20,?_sprintf+3
  2213  0048CE  6B68               	clrf	(?_sprintf+4)& (0+255),b
  2214  0048D0  0060  F778  F069   	movff	_otto_b1+12,?_sprintf+5
  2215  0048D6  0060  F77C  F06A   	movff	_otto_b1+13,?_sprintf+6
  2216  0048DC  EC50  F026         	call	_sprintf	;wreg free
  2217                           
  2218                           ; BSR set to: 0
  2219                           ;main.c: 91:   buffer[1][16] = 0;
  2220  0048E0  0E00               	movlw	0
  2221  0048E2  0102               	movlb	2	; () banked
  2222  0048E4  6F50               	movwf	(work_sw@buffer+80)& (0+255),b
  2223                           
  2224                           ; BSR set to: 2
  2225                           ;main.c: 92:   eaDogM_WriteStringAtPos(1, 0, buffer[0]);
  2226  0048E6  0E00               	movlw	0
  2227  0048E8  6E0E               	movwf	eaDogM_WriteStringAtPos@c^0,c
  2228  0048EA  0E00               	movlw	low work_sw@buffer
  2229  0048EC  6E0F               	movwf	eaDogM_WriteStringAtPos@strPtr^0,c
  2230  0048EE  0E02               	movlw	high work_sw@buffer
  2231  0048F0  6E10               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)^0,c
  2232  0048F2  0E01               	movlw	1
  2233  0048F4  EC42  F029         	call	_eaDogM_WriteStringAtPos
  2234                           
  2235                           ;main.c: 93:   eaDogM_WriteStringAtPos(2, 0, buffer[1]);
  2236  0048F8  0E00               	movlw	0
  2237  0048FA  6E0E               	movwf	eaDogM_WriteStringAtPos@c^0,c
  2238  0048FC  0E40               	movlw	low (work_sw@buffer+64)
  2239  0048FE  6E0F               	movwf	eaDogM_WriteStringAtPos@strPtr^0,c
  2240  004900  0E02               	movlw	high (work_sw@buffer+64)
  2241  004902  6E10               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)^0,c
  2242  004904  0E02               	movlw	2
  2243  004906  EC42  F029         	call	_eaDogM_WriteStringAtPos
  2244                           
  2245                           ;main.c: 94:   StartTimer(TMR_INIT, 500);
  2246  00490A  0E01               	movlw	1
  2247  00490C  6E07               	movwf	(StartTimer@count+1)^0,c
  2248  00490E  0EF4               	movlw	244
  2249  004910  6E06               	movwf	StartTimer@count^0,c
  2250  004912  0E01               	movlw	1
  2251  004914  ECFF  F027         	call	_StartTimer
  2252  004918  0012               	return		;funcret
  2253  00491A                     __end_of_work_sw:
  2254                           	opt callstack 0
  2255                           
  2256 ;; *************** function _sprintf *****************
  2257 ;; Defined at:
  2258 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  s               2    4[BANK0 ] PTR unsigned char 
  2261 ;;		 -> main@buffer(24), work_sw@buffer(128), 
  2262 ;;  fmt             1    6[BANK0 ] PTR const unsigned char 
  2263 ;;		 -> STR_3(12), STR_2(17), STR_1(17), 
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;  f               6   14[BANK0 ] struct _IO_FILE
  2266 ;;  ret             2    0        int 
  2267 ;;  ap              1   13[BANK0 ] PTR void [1]
  2268 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  2    4[BANK0 ] int 
  2271 ;; Registers used:
  2272 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2273 ;; Tracked objects:
  2274 ;;		On entry : 3F/0
  2275 ;;		On exit  : 3F/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2278 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2279 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2281 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2282 ;;Total ram usage:       16 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; Hardware stack levels required when called:   12
  2285 ;; This function calls:
  2286 ;;		_vfprintf
  2287 ;; This function is called by:
  2288 ;;		_work_sw
  2289 ;;		_main
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293                           	psect	text2
  2294  004CA0                     __ptext2:
  2295                           	opt callstack 0
  2296  004CA0                     _sprintf:
  2297                           	opt callstack 17
  2298                           
  2299                           ; BSR set to: 0
  2300                           
  2301                           ;incstack = 0
  2302  004CA0  0E67               	movlw	low (?_sprintf+3)
  2303  004CA2  6F6D               	movwf	sprintf@ap& (0+255),b
  2304  004CA4  0060  F190  F06E   	movff	sprintf@s,sprintf@f
  2305  004CAA  0060  F194  F06F   	movff	sprintf@s+1,sprintf@f+1
  2306                           
  2307                           ; BSR set to: 0
  2308  004CB0  0E00               	movlw	0
  2309  004CB2  6F71               	movwf	(sprintf@f+3)& (0+255),b
  2310  004CB4  0E00               	movlw	0
  2311  004CB6  6F70               	movwf	(sprintf@f+2)& (0+255),b
  2312                           
  2313                           ; BSR set to: 0
  2314  004CB8  0E00               	movlw	0
  2315  004CBA  6F73               	movwf	(sprintf@f+5)& (0+255),b
  2316  004CBC  0E00               	movlw	0
  2317  004CBE  6F72               	movwf	(sprintf@f+4)& (0+255),b
  2318                           
  2319                           ; BSR set to: 0
  2320  004CC0  0E6E               	movlw	low sprintf@f
  2321  004CC2  6F60               	movwf	vfprintf@fp& (0+255),b
  2322  004CC4  6B61               	clrf	(vfprintf@fp+1)& (0+255),b
  2323  004CC6  0060  F198  F062   	movff	sprintf@fmt,vfprintf@fmt
  2324  004CCC  0E6D               	movlw	low sprintf@ap
  2325  004CCE  6F63               	movwf	vfprintf@ap& (0+255),b
  2326  004CD0  ECD4  F025         	call	_vfprintf	;wreg free
  2327                           
  2328                           ; BSR set to: 1
  2329  004CD4  0100               	movlb	0	; () banked
  2330  004CD6  5170               	movf	(sprintf@f+2)& (0+255),w,b
  2331  004CD8  2564               	addwf	sprintf@s& (0+255),w,b
  2332  004CDA  6ED9               	movwf	fsr2l,c
  2333  004CDC  5171               	movf	(sprintf@f+3)& (0+255),w,b
  2334  004CDE  2165               	addwfc	(sprintf@s+1)& (0+255),w,b
  2335  004CE0  6EDA               	movwf	fsr2h,c
  2336  004CE2  0E00               	movlw	0
  2337  004CE4  6EDF               	movwf	indf2,c
  2338                           
  2339                           ; BSR set to: 0
  2340  004CE6  0012               	return		;funcret
  2341  004CE8                     __end_of_sprintf:
  2342                           	opt callstack 0
  2343                           
  2344 ;; *************** function _eaDogM_WriteStringAtPos *****************
  2345 ;; Defined at:
  2346 ;;		line 122 in file "eadog.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;  r               1    wreg     const unsigned char 
  2349 ;;  c               1   13[COMRAM] const unsigned char 
  2350 ;;  strPtr          2   14[COMRAM] PTR unsigned char 
  2351 ;;		 -> main@buffer(24), work_sw@buffer(128), 
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;  r               1   16[COMRAM] const unsigned char 
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  1    wreg      void 
  2356 ;; Registers used:
  2357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2363 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2364 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2366 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2367 ;;Total ram usage:        4 bytes
  2368 ;; Hardware stack levels used:    1
  2369 ;; Hardware stack levels required when called:    6
  2370 ;; This function calls:
  2371 ;;		_eaDogM_WriteString
  2372 ;;		_send_lcd_cmd
  2373 ;; This function is called by:
  2374 ;;		_work_sw
  2375 ;;		_main
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           	psect	text3
  2380  005284                     __ptext3:
  2381                           	opt callstack 0
  2382  005284                     _eaDogM_WriteStringAtPos:
  2383                           	opt callstack 23
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;incstack = 0
  2387                           ;eaDogM_WriteStringAtPos@r stored from wreg
  2388  005284  6E11               	movwf	eaDogM_WriteStringAtPos@r^0,c
  2389                           
  2390                           ;eadog.c: 122: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 123: {;eadog.c: 124:  send_lcd_cmd((0b10000000 + (r * 16) + c));
  2391  005286  5011               	movf	eaDogM_WriteStringAtPos@r^0,w,c
  2392  005288  0D10               	mullw	16
  2393  00528A  50F3               	movf	243,w,c
  2394  00528C  240E               	addwf	eaDogM_WriteStringAtPos@c^0,w,c
  2395  00528E  0F80               	addlw	128
  2396  005290  EC75  F027         	call	_send_lcd_cmd
  2397                           
  2398                           ; BSR set to: 1
  2399                           ;eadog.c: 125:  eaDogM_WriteString(strPtr);
  2400  005294  0060  F03C  F00A   	movff	eaDogM_WriteStringAtPos@strPtr,eaDogM_WriteString@strPtr
  2401  00529A  0060  F040  F00B   	movff	eaDogM_WriteStringAtPos@strPtr+1,eaDogM_WriteString@strPtr+1
  2402  0052A0  EC44  F025         	call	_eaDogM_WriteString	;wreg free
  2403  0052A4  0012               	return		;funcret
  2404  0052A6                     __end_of_eaDogM_WriteStringAtPos:
  2405                           	opt callstack 0
  2406                           
  2407 ;; *************** function _eaDogM_WriteString *****************
  2408 ;; Defined at:
  2409 ;;		line 106 in file "eadog.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  strPtr          2    9[COMRAM] PTR unsigned char 
  2412 ;;		 -> main@buffer(24), work_sw@buffer(128), 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  bytesWritten    1   12[COMRAM] unsigned char 
  2415 ;;  i               1   11[COMRAM] unsigned char 
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  1    wreg      void 
  2418 ;; Registers used:
  2419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2420 ;; Tracked objects:
  2421 ;;		On entry : 3F/1
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2425 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2426 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2428 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2429 ;;Total ram usage:        4 bytes
  2430 ;; Hardware stack levels used:    1
  2431 ;; Hardware stack levels required when called:    5
  2432 ;; This function calls:
  2433 ;;		_SPI1_Exchange8bit
  2434 ;;		_strlen
  2435 ;;		_wdtdelay
  2436 ;; This function is called by:
  2437 ;;		_eaDogM_WriteStringAtPos
  2438 ;; This function uses a non-reentrant model
  2439 ;;
  2440                           
  2441                           	psect	text4
  2442  004A88                     __ptext4:
  2443                           	opt callstack 0
  2444  004A88                     _eaDogM_WriteString:
  2445                           	opt callstack 23
  2446                           
  2447                           ; BSR set to: 1
  2448                           ;eadog.c: 106: void eaDogM_WriteString(char *strPtr);eadog.c: 107: {;eadog.c: 108:  uint
      +                          8_t i = strlen(strPtr);
  2449                           
  2450                           ;incstack = 0
  2451  004A88  0060  F028  F006   	movff	eaDogM_WriteString@strPtr,strlen@s
  2452  004A8E  0060  F02C  F007   	movff	eaDogM_WriteString@strPtr+1,strlen@s+1
  2453  004A94  EC02  F026         	call	_strlen	;wreg free
  2454  004A98  5006               	movf	?_strlen^0,w,c
  2455  004A9A  6E0C               	movwf	eaDogM_WriteString@i^0,c
  2456                           
  2457                           ;eadog.c: 109:  uint8_t bytesWritten = 0;
  2458  004A9C  0E00               	movlw	0
  2459  004A9E  6E0D               	movwf	eaDogM_WriteString@bytesWritten^0,c
  2460  004AA0  82BC               	bsf	188,1,c	;volatile
  2461  004AA2  94BC               	bcf	188,2,c	;volatile
  2462                           
  2463                           ;eadog.c: 113:  if (i > 64) strPtr[64] = 0;
  2464  004AA4  0E40               	movlw	64
  2465  004AA6  640C               	cpfsgt	eaDogM_WriteString@i^0,c
  2466  004AA8  D01D               	goto	l6976
  2467  004AAA  EE20 F040          	lfsr	2,64
  2468  004AAE  500A               	movf	eaDogM_WriteString@strPtr^0,w,c
  2469  004AB0  26D9               	addwf	fsr2l,f,c
  2470  004AB2  500B               	movf	(eaDogM_WriteString@strPtr+1)^0,w,c
  2471  004AB4  22DA               	addwfc	fsr2h,f,c
  2472  004AB6  0E00               	movlw	0
  2473  004AB8  6EDF               	movwf	indf2,c
  2474  004ABA  D014               	goto	l6976
  2475  004ABC                     l6970:
  2476                           
  2477                           ;eadog.c: 116:   wdtdelay(9);
  2478  004ABC  0E09               	movlw	9
  2479  004ABE  6E06               	movwf	wdtdelay@delay^0,c
  2480  004AC0  0E00               	movlw	0
  2481  004AC2  6E07               	movwf	(wdtdelay@delay+1)^0,c
  2482  004AC4  0E00               	movlw	0
  2483  004AC6  6E08               	movwf	(wdtdelay@delay+2)^0,c
  2484  004AC8  0E00               	movlw	0
  2485  004ACA  6E09               	movwf	(wdtdelay@delay+3)^0,c
  2486  004ACC  EC58  F027         	call	_wdtdelay	;wreg free
  2487                           
  2488                           ; BSR set to: 1
  2489                           ;eadog.c: 117:   SPI1_Exchange8bit(strPtr[bytesWritten]);
  2490  004AD0  500D               	movf	eaDogM_WriteString@bytesWritten^0,w,c
  2491  004AD2  240A               	addwf	eaDogM_WriteString@strPtr^0,w,c
  2492  004AD4  6ED9               	movwf	fsr2l,c
  2493  004AD6  0E00               	movlw	0
  2494  004AD8  200B               	addwfc	(eaDogM_WriteString@strPtr+1)^0,w,c
  2495  004ADA  6EDA               	movwf	fsr2h,c
  2496  004ADC  50DF               	movf	indf2,w,c
  2497  004ADE  EC9F  F029         	call	_SPI1_Exchange8bit
  2498                           
  2499                           ; BSR set to: 61
  2500                           ;eadog.c: 118:   bytesWritten++;
  2501  004AE2  2A0D               	incf	eaDogM_WriteString@bytesWritten^0,f,c
  2502  004AE4                     l6976:
  2503                           
  2504                           ;eadog.c: 115:  while (bytesWritten < i) {
  2505  004AE4  500C               	movf	eaDogM_WriteString@i^0,w,c
  2506  004AE6  5C0D               	subwf	eaDogM_WriteString@bytesWritten^0,w,c
  2507  004AE8  B0D8               	btfsc	status,0,c
  2508  004AEA  0012               	return	
  2509  004AEC  D7E7               	goto	l6970
  2510  004AEE                     __end_of_eaDogM_WriteString:
  2511                           	opt callstack 0
  2512                           
  2513 ;; *************** function _srand *****************
  2514 ;; Defined at:
  2515 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;  s               2    5[COMRAM] unsigned int 
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;		None
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  1    wreg      void 
  2522 ;; Registers used:
  2523 ;;		wreg, status,2, status,0
  2524 ;; Tracked objects:
  2525 ;;		On entry : 3F/1
  2526 ;;		On exit  : 3F/1
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2529 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2531 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2532 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2533 ;;Total ram usage:        6 bytes
  2534 ;; Hardware stack levels used:    1
  2535 ;; Hardware stack levels required when called:    4
  2536 ;; This function calls:
  2537 ;;		Nothing
  2538 ;; This function is called by:
  2539 ;;		_main
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           	psect	text5
  2544  004F5A                     __ptext5:
  2545                           	opt callstack 0
  2546  004F5A                     _srand:
  2547                           	opt callstack 26
  2548                           
  2549                           ; BSR set to: 1
  2550                           
  2551                           ;incstack = 0
  2552  004F5A  0EFF               	movlw	255
  2553  004F5C  6E08               	movwf	??_srand^0,c
  2554  004F5E  0EFF               	movlw	255
  2555  004F60  6E09               	movwf	(??_srand+1)^0,c
  2556  004F62  0060  F018  F00A   	movff	srand@s,??_srand+2
  2557  004F68  0060  F01C  F00B   	movff	srand@s+1,??_srand+3
  2558  004F6E  5008               	movf	??_srand^0,w,c
  2559  004F70  260A               	addwf	(??_srand+2)^0,f,c
  2560  004F72  5009               	movf	(??_srand+1)^0,w,c
  2561  004F74  220B               	addwfc	(??_srand+3)^0,f,c
  2562  004F76  0060  F028  F196   	movff	??_srand+2,_seed
  2563  004F7C  0060  F02C  F197   	movff	??_srand+3,_seed+1
  2564  004F82  6B98               	clrf	(_seed+2)& (0+255),b
  2565  004F84  6B99               	clrf	(_seed+3)& (0+255),b
  2566  004F86  6B9A               	clrf	(_seed+4)& (0+255),b
  2567  004F88  6B9B               	clrf	(_seed+5)& (0+255),b
  2568  004F8A  6B9C               	clrf	(_seed+6)& (0+255),b
  2569  004F8C  6B9D               	clrf	(_seed+7)& (0+255),b
  2570                           
  2571                           ; BSR set to: 1
  2572  004F8E  0012               	return		;funcret
  2573  004F90                     __end_of_srand:
  2574                           	opt callstack 0
  2575                           
  2576 ;; *************** function _rand *****************
  2577 ;; Defined at:
  2578 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;		None
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;		None
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  2   29[COMRAM] int 
  2585 ;; Registers used:
  2586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2587 ;; Tracked objects:
  2588 ;;		On entry : 3F/0
  2589 ;;		On exit  : 3F/1
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2592 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2594 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2595 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2596 ;;Total ram usage:       10 bytes
  2597 ;; Hardware stack levels used:    1
  2598 ;; Hardware stack levels required when called:    5
  2599 ;; This function calls:
  2600 ;;		___omul
  2601 ;; This function is called by:
  2602 ;;		_main
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           	psect	text6
  2607  00407E                     __ptext6:
  2608                           	opt callstack 0
  2609  00407E                     _rand:
  2610                           	opt callstack 25
  2611                           
  2612                           ; BSR set to: 0
  2613                           
  2614                           ; BSR set to: 1
  2615                           ;incstack = 0
  2616  00407E  0060  F658  F006   	movff	_seed,___omul@multiplier
  2617  004084  0060  F65C  F007   	movff	_seed+1,___omul@multiplier+1
  2618  00408A  0060  F660  F008   	movff	_seed+2,___omul@multiplier+2
  2619  004090  0060  F664  F009   	movff	_seed+3,___omul@multiplier+3
  2620  004096  0060  F668  F00A   	movff	_seed+4,___omul@multiplier+4
  2621  00409C  0060  F66C  F00B   	movff	_seed+5,___omul@multiplier+5
  2622  0040A2  0060  F670  F00C   	movff	_seed+6,___omul@multiplier+6
  2623  0040A8  0060  F674  F00D   	movff	_seed+7,___omul@multiplier+7
  2624  0040AE  0E2D               	movlw	45
  2625  0040B0  6E0E               	movwf	___omul@multiplicand^0,c
  2626  0040B2  0E7F               	movlw	127
  2627  0040B4  6E0F               	movwf	(___omul@multiplicand+1)^0,c
  2628  0040B6  0E95               	movlw	149
  2629  0040B8  6E10               	movwf	(___omul@multiplicand+2)^0,c
  2630  0040BA  0E4C               	movlw	76
  2631  0040BC  6E11               	movwf	(___omul@multiplicand+3)^0,c
  2632  0040BE  0E2D               	movlw	45
  2633  0040C0  6E12               	movwf	(___omul@multiplicand+4)^0,c
  2634  0040C2  0EF4               	movlw	244
  2635  0040C4  6E13               	movwf	(___omul@multiplicand+5)^0,c
  2636  0040C6  0E51               	movlw	81
  2637  0040C8  6E14               	movwf	(___omul@multiplicand+6)^0,c
  2638  0040CA  0E58               	movlw	88
  2639  0040CC  6E15               	movwf	(___omul@multiplicand+7)^0,c
  2640  0040CE  ECF7  F023         	call	___omul	;wreg free
  2641  0040D2  0060  F018  F020   	movff	?___omul,??_rand
  2642  0040D8  0060  F01C  F021   	movff	?___omul+1,??_rand+1
  2643  0040DE  0060  F020  F022   	movff	?___omul+2,??_rand+2
  2644  0040E4  0060  F024  F023   	movff	?___omul+3,??_rand+3
  2645  0040EA  0060  F028  F024   	movff	?___omul+4,??_rand+4
  2646  0040F0  0060  F02C  F025   	movff	?___omul+5,??_rand+5
  2647  0040F6  0060  F030  F026   	movff	?___omul+6,??_rand+6
  2648  0040FC  0060  F034  F027   	movff	?___omul+7,??_rand+7
  2649  004102  0E01               	movlw	1
  2650  004104  2420               	addwf	??_rand^0,w,c
  2651  004106  0101               	movlb	1	; () banked
  2652  004108  6F96               	movwf	_seed& (0+255),b
  2653  00410A  0E00               	movlw	0
  2654  00410C  2021               	addwfc	(??_rand+1)^0,w,c
  2655  00410E  6F97               	movwf	(_seed+1)& (0+255),b
  2656  004110  0E00               	movlw	0
  2657  004112  2022               	addwfc	(??_rand+2)^0,w,c
  2658  004114  6F98               	movwf	(_seed+2)& (0+255),b
  2659  004116  0E00               	movlw	0
  2660  004118  2023               	addwfc	(??_rand+3)^0,w,c
  2661  00411A  6F99               	movwf	(_seed+3)& (0+255),b
  2662  00411C  0E00               	movlw	0
  2663  00411E  2024               	addwfc	(??_rand+4)^0,w,c
  2664  004120  6F9A               	movwf	(_seed+4)& (0+255),b
  2665  004122  0E00               	movlw	0
  2666  004124  2025               	addwfc	(??_rand+5)^0,w,c
  2667  004126  6F9B               	movwf	(_seed+5)& (0+255),b
  2668  004128  0E00               	movlw	0
  2669  00412A  2026               	addwfc	(??_rand+6)^0,w,c
  2670  00412C  6F9C               	movwf	(_seed+6)& (0+255),b
  2671  00412E  0E00               	movlw	0
  2672  004130  2027               	addwfc	(??_rand+7)^0,w,c
  2673  004132  6F9D               	movwf	(_seed+7)& (0+255),b
  2674                           
  2675                           ; BSR set to: 1
  2676  004134  0060  F658  F020   	movff	_seed,??_rand
  2677  00413A  0060  F65C  F021   	movff	_seed+1,??_rand+1
  2678  004140  0060  F660  F022   	movff	_seed+2,??_rand+2
  2679  004146  0060  F664  F023   	movff	_seed+3,??_rand+3
  2680  00414C  0060  F668  F024   	movff	_seed+4,??_rand+4
  2681  004152  0060  F66C  F025   	movff	_seed+5,??_rand+5
  2682  004158  0060  F670  F026   	movff	_seed+6,??_rand+6
  2683  00415E  0060  F674  F027   	movff	_seed+7,??_rand+7
  2684  004164  0E32               	movlw	50
  2685  004166  D009               	goto	u8310
  2686  004168                     u8315:
  2687  004168  90D8               	bcf	status,0,c
  2688  00416A  3227               	rrcf	(??_rand+7)^0,f,c
  2689  00416C  3226               	rrcf	(??_rand+6)^0,f,c
  2690  00416E  3225               	rrcf	(??_rand+5)^0,f,c
  2691  004170  3224               	rrcf	(??_rand+4)^0,f,c
  2692  004172  3223               	rrcf	(??_rand+3)^0,f,c
  2693  004174  3222               	rrcf	(??_rand+2)^0,f,c
  2694  004176  3221               	rrcf	(??_rand+1)^0,f,c
  2695  004178  3220               	rrcf	??_rand^0,f,c
  2696  00417A                     u8310:
  2697  00417A  2EE8               	decfsz	wreg,f,c
  2698  00417C  D7F5               	goto	u8315
  2699  00417E  0060  F080  F01E   	movff	??_rand,?_rand
  2700  004184  0060  F088  F01F   	movff	??_rand+2,?_rand+1
  2701                           
  2702                           ; BSR set to: 1
  2703  00418A  0012               	return		;funcret
  2704  00418C                     __end_of_rand:
  2705                           	opt callstack 0
  2706                           
  2707 ;; *************** function ___omul *****************
  2708 ;; Defined at:
  2709 ;;		line 91 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul64.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;  multiplier      8    5[COMRAM] unsigned long long 
  2712 ;;  multiplicand    8   13[COMRAM] unsigned long long 
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;  product         8   21[COMRAM] unsigned long long 
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  8    5[COMRAM] unsigned long long 
  2717 ;; Registers used:
  2718 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2719 ;; Tracked objects:
  2720 ;;		On entry : 3F/0
  2721 ;;		On exit  : 3F/0
  2722 ;;		Unchanged: 3F/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2724 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2725 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2727 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2728 ;;Total ram usage:       24 bytes
  2729 ;; Hardware stack levels used:    1
  2730 ;; Hardware stack levels required when called:    4
  2731 ;; This function calls:
  2732 ;;		Nothing
  2733 ;; This function is called by:
  2734 ;;		_rand
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text7
  2739  0047EE                     __ptext7:
  2740                           	opt callstack 0
  2741  0047EE                     ___omul:
  2742                           	opt callstack 25
  2743                           
  2744                           ; BSR set to: 0
  2745                           
  2746                           ; BSR set to: 1
  2747                           ;incstack = 0
  2748  0047EE  EE20  F016         	lfsr	2,___omul@product
  2749  0047F2  0E07               	movlw	7
  2750  0047F4                     u7701:
  2751  0047F4  6ADE               	clrf	postinc2,c
  2752  0047F6  06E8               	decf	wreg,f,c
  2753  0047F8  E2FD               	bc	u7701
  2754  0047FA                     l7328:
  2755                           
  2756                           ; BSR set to: 0
  2757  0047FA  A006               	btfss	___omul@multiplier^0,0,c
  2758  0047FC  D010               	goto	l7332
  2759                           
  2760                           ; BSR set to: 0
  2761  0047FE  500E               	movf	___omul@multiplicand^0,w,c
  2762  004800  2616               	addwf	___omul@product^0,f,c
  2763  004802  500F               	movf	(___omul@multiplicand+1)^0,w,c
  2764  004804  2217               	addwfc	(___omul@product+1)^0,f,c
  2765  004806  5010               	movf	(___omul@multiplicand+2)^0,w,c
  2766  004808  2218               	addwfc	(___omul@product+2)^0,f,c
  2767  00480A  5011               	movf	(___omul@multiplicand+3)^0,w,c
  2768  00480C  2219               	addwfc	(___omul@product+3)^0,f,c
  2769  00480E  5012               	movf	(___omul@multiplicand+4)^0,w,c
  2770  004810  221A               	addwfc	(___omul@product+4)^0,f,c
  2771  004812  5013               	movf	(___omul@multiplicand+5)^0,w,c
  2772  004814  221B               	addwfc	(___omul@product+5)^0,f,c
  2773  004816  5014               	movf	(___omul@multiplicand+6)^0,w,c
  2774  004818  221C               	addwfc	(___omul@product+6)^0,f,c
  2775  00481A  5015               	movf	(___omul@multiplicand+7)^0,w,c
  2776  00481C  221D               	addwfc	(___omul@product+7)^0,f,c
  2777  00481E                     l7332:
  2778                           
  2779                           ; BSR set to: 0
  2780  00481E  90D8               	bcf	status,0,c
  2781  004820  360E               	rlcf	___omul@multiplicand^0,f,c
  2782  004822  360F               	rlcf	(___omul@multiplicand+1)^0,f,c
  2783  004824  3610               	rlcf	(___omul@multiplicand+2)^0,f,c
  2784  004826  3611               	rlcf	(___omul@multiplicand+3)^0,f,c
  2785  004828  3612               	rlcf	(___omul@multiplicand+4)^0,f,c
  2786  00482A  3613               	rlcf	(___omul@multiplicand+5)^0,f,c
  2787  00482C  3614               	rlcf	(___omul@multiplicand+6)^0,f,c
  2788  00482E  3615               	rlcf	(___omul@multiplicand+7)^0,f,c
  2789                           
  2790                           ; BSR set to: 0
  2791  004830  90D8               	bcf	status,0,c
  2792  004832  320D               	rrcf	(___omul@multiplier+7)^0,f,c
  2793  004834  320C               	rrcf	(___omul@multiplier+6)^0,f,c
  2794  004836  320B               	rrcf	(___omul@multiplier+5)^0,f,c
  2795  004838  320A               	rrcf	(___omul@multiplier+4)^0,f,c
  2796  00483A  3209               	rrcf	(___omul@multiplier+3)^0,f,c
  2797  00483C  3208               	rrcf	(___omul@multiplier+2)^0,f,c
  2798  00483E  3207               	rrcf	(___omul@multiplier+1)^0,f,c
  2799  004840  3206               	rrcf	___omul@multiplier^0,f,c
  2800  004842  5006               	movf	___omul@multiplier^0,w,c
  2801  004844  1007               	iorwf	(___omul@multiplier+1)^0,w,c
  2802  004846  1008               	iorwf	(___omul@multiplier+2)^0,w,c
  2803  004848  1009               	iorwf	(___omul@multiplier+3)^0,w,c
  2804  00484A  100A               	iorwf	(___omul@multiplier+4)^0,w,c
  2805  00484C  100B               	iorwf	(___omul@multiplier+5)^0,w,c
  2806  00484E  100C               	iorwf	(___omul@multiplier+6)^0,w,c
  2807  004850  100D               	iorwf	(___omul@multiplier+7)^0,w,c
  2808  004852  A4D8               	btfss	status,2,c
  2809  004854  D7D2               	goto	l7328
  2810                           
  2811                           ; BSR set to: 0
  2812  004856  0060  F058  F006   	movff	___omul@product,?___omul
  2813  00485C  0060  F05C  F007   	movff	___omul@product+1,?___omul+1
  2814  004862  0060  F060  F008   	movff	___omul@product+2,?___omul+2
  2815  004868  0060  F064  F009   	movff	___omul@product+3,?___omul+3
  2816  00486E  0060  F068  F00A   	movff	___omul@product+4,?___omul+4
  2817  004874  0060  F06C  F00B   	movff	___omul@product+5,?___omul+5
  2818  00487A  0060  F070  F00C   	movff	___omul@product+6,?___omul+6
  2819  004880  0060  F074  F00D   	movff	___omul@product+7,?___omul+7
  2820                           
  2821                           ; BSR set to: 0
  2822  004886  0012               	return		;funcret
  2823  004888                     __end_of___omul:
  2824                           	opt callstack 0
  2825                           
  2826 ;; *************** function _once *****************
  2827 ;; Defined at:
  2828 ;;		line 284 in file "d232.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;  once_flag       2    5[COMRAM] PTR _Bool 
  2831 ;;		 -> IO(41), 
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      _Bool 
  2836 ;; Registers used:
  2837 ;;		wreg, fsr2l, fsr2h, status,2
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/1
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2843 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2846 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2847 ;;Total ram usage:        2 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:    4
  2850 ;; This function calls:
  2851 ;;		Nothing
  2852 ;; This function is called by:
  2853 ;;		_main
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           	psect	text8
  2858  0050EE                     __ptext8:
  2859                           	opt callstack 0
  2860  0050EE                     _once:
  2861                           	opt callstack 26
  2862                           
  2863                           ;d232.c: 284: _Bool once(_Bool *once_flag);d232.c: 285: {;d232.c: 286:  if (*once_flag) 
      +                          {
  2864                           
  2865                           ; BSR set to: 0
  2866                           ;incstack = 0
  2867  0050EE  0060  F01B  FFD9   	movff	once@once_flag,fsr2l
  2868  0050F4  0060  F01F  FFDA   	movff	once@once_flag+1,fsr2h
  2869  0050FA  50DF               	movf	indf2,w,c
  2870  0050FC  B4D8               	btfsc	status,2,c
  2871  0050FE  D00A               	goto	l7714
  2872                           
  2873                           ;d232.c: 287:   *once_flag = 0;
  2874  005100  0060  F01B  FFD9   	movff	once@once_flag,fsr2l
  2875  005106  0060  F01F  FFDA   	movff	once@once_flag+1,fsr2h
  2876  00510C  0E00               	movlw	0
  2877  00510E  6EDF               	movwf	indf2,c
  2878                           
  2879                           ;d232.c: 288:   return 1;
  2880  005110  0E01               	movlw	1
  2881  005112  0012               	return	
  2882  005114                     l7714:
  2883                           
  2884                           ;d232.c: 291:   return 0;
  2885  005114  0E00               	movlw	0
  2886  005116  0012               	return		;funcret
  2887  005118                     __end_of_once:
  2888                           	opt callstack 0
  2889                           
  2890 ;; *************** function _led_lightshow *****************
  2891 ;; Defined at:
  2892 ;;		line 175 in file "d232.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;  seq             1    wreg     unsigned char 
  2895 ;;  speed           2   13[COMRAM] unsigned short 
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;  seq             1   17[COMRAM] unsigned char 
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  1    wreg      void 
  2900 ;; Registers used:
  2901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2902 ;; Tracked objects:
  2903 ;;		On entry : 3F/1
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2907 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2908 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2909 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2910 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2911 ;;Total ram usage:        5 bytes
  2912 ;; Hardware stack levels used:    1
  2913 ;; Hardware stack levels required when called:    5
  2914 ;; This function calls:
  2915 ;;		_StartTimer
  2916 ;;		_TimerDone
  2917 ;;		___awdiv
  2918 ;; This function is called by:
  2919 ;;		_main
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           	psect	text9
  2924  002AEC                     __ptext9:
  2925                           	opt callstack 0
  2926  002AEC                     _led_lightshow:
  2927                           	opt callstack 25
  2928                           
  2929                           ;incstack = 0
  2930                           ;led_lightshow@seq stored from wreg
  2931  002AEC  6E12               	movwf	led_lightshow@seq^0,c
  2932                           
  2933                           ;d232.c: 175: void led_lightshow(uint8_t seq, uint16_t speed);d232.c: 176: {;d232.c: 177
      +                          :  static uint16_t j = 0;;d232.c: 178:  static uint8_t cylon = 0xff;;d232.c: 179:  stati
      +                          c int16_t alive_led = 0;;d232.c: 180:  static _Bool LED_UP = 1;;d232.c: 182:  if (seq ==
      +                           1) {
  2934  002AEE  0412               	decf	led_lightshow@seq^0,w,c
  2935  002AF0  A4D8               	btfss	status,2,c
  2936  002AF2  D003               	goto	l7578
  2937                           
  2938                           ;d232.c: 183:   IO.outbytes[2] = IO.inbytes[0];
  2939  002AF4  C1A9  F1B0         	movff	_IO,_IO+7
  2940                           
  2941                           ;d232.c: 184:   return;
  2942  002AF8  0012               	return	
  2943  002AFA                     l7578:
  2944                           
  2945                           ;d232.c: 187:  if (seq == 2) {
  2946  002AFA  0E02               	movlw	2
  2947  002AFC  1812               	xorwf	led_lightshow@seq^0,w,c
  2948  002AFE  A4D8               	btfss	status,2,c
  2949  002B00  D010               	goto	l7590
  2950                           
  2951                           ;d232.c: 188:   if (IO.sequence_done) {
  2952  002B02  0101               	movlb	1	; () banked
  2953  002B04  51CB               	movf	(_IO+34)& (0+255),w,b
  2954  002B06  B4D8               	btfsc	status,2,c
  2955  002B08  D009               	goto	l7586
  2956                           
  2957                           ; BSR set to: 1
  2958                           ;d232.c: 189:    IO.sequence_done = 0;
  2959  002B0A  0E00               	movlw	0
  2960  002B0C  6FCB               	movwf	(_IO+34)& (0+255),b
  2961                           
  2962                           ; BSR set to: 1
  2963                           ;d232.c: 190:    StartTimer(TMR_SEQ, 30000);
  2964  002B0E  0E75               	movlw	117
  2965  002B10  6E07               	movwf	(StartTimer@count+1)^0,c
  2966  002B12  0E30               	movlw	48
  2967  002B14  6E06               	movwf	StartTimer@count^0,c
  2968  002B16  0E06               	movlw	6
  2969  002B18  ECFF  F027         	call	_StartTimer
  2970  002B1C                     l7586:
  2971                           
  2972                           ;d232.c: 192:   IO.outbytes[2]++;
  2973  002B1C  0101               	movlb	1	; () banked
  2974  002B1E  2BB0               	incf	(_IO+7)& (0+255),f,b
  2975  002B20  0012               	return	
  2976  002B22                     l7590:
  2977                           
  2978                           ;d232.c: 196:  if (seq == 0) {
  2979  002B22  5012               	movf	led_lightshow@seq^0,w,c
  2980  002B24  A4D8               	btfss	status,2,c
  2981  002B26  D05A               	goto	l7618
  2982                           
  2983                           ;d232.c: 197:   if (j++ >= speed) {
  2984  002B28  0101               	movlb	1	; () banked
  2985  002B2A  518E               	movf	led_lightshow@j& (0+255),w,b
  2986  002B2C  6E10               	movwf	??_led_lightshow^0,c
  2987  002B2E  518F               	movf	(led_lightshow@j+1)& (0+255),w,b
  2988  002B30  6E11               	movwf	(??_led_lightshow+1)^0,c
  2989  002B32  4B8E               	infsnz	led_lightshow@j& (0+255),f,b
  2990  002B34  2B8F               	incf	(led_lightshow@j+1)& (0+255),f,b
  2991  002B36  500E               	movf	led_lightshow@speed^0,w,c
  2992  002B38  5C10               	subwf	??_led_lightshow^0,w,c
  2993  002B3A  500F               	movf	(led_lightshow@speed+1)^0,w,c
  2994  002B3C  5811               	subwfb	(??_led_lightshow+1)^0,w,c
  2995  002B3E  A0D8               	btfss	status,0,c
  2996  002B40  D04D               	goto	l7618
  2997                           
  2998                           ; BSR set to: 1
  2999                           ;d232.c: 201:     IO.outbytes[2] = cylon;
  3000  002B42  C0AD  F1B0         	movff	led_lightshow@cylon,_IO+7
  3001                           
  3002                           ; BSR set to: 1
  3003                           ;d232.c: 204:    if (LED_UP && (alive_led != 0)) {
  3004  002B46  0100               	movlb	0	; () banked
  3005  002B48  51AC               	movf	led_lightshow@LED_UP& (0+255),w,b
  3006  002B4A  B4D8               	btfsc	status,2,c
  3007  002B4C  D00C               	goto	l7604
  3008                           
  3009                           ; BSR set to: 0
  3010  002B4E  51A0               	movf	led_lightshow@alive_led& (0+255),w,b
  3011  002B50  11A1               	iorwf	(led_lightshow@alive_led+1)& (0+255),w,b
  3012  002B52  B4D8               	btfsc	status,2,c
  3013  002B54  D008               	goto	l7604
  3014                           
  3015                           ; BSR set to: 0
  3016                           ;d232.c: 205:     alive_led = alive_led * 2;
  3017  002B56  90D8               	bcf	status,0,c
  3018  002B58  35A0               	rlcf	led_lightshow@alive_led& (0+255),w,b
  3019  002B5A  6FA0               	movwf	led_lightshow@alive_led& (0+255),b
  3020  002B5C  35A1               	rlcf	(led_lightshow@alive_led+1)& (0+255),w,b
  3021  002B5E  6FA1               	movwf	(led_lightshow@alive_led+1)& (0+255),b
  3022                           
  3023                           ;d232.c: 206:     cylon = cylon << 1;
  3024  002B60  51AD               	movf	led_lightshow@cylon& (0+255),w,b
  3025  002B62  25AD               	addwf	led_lightshow@cylon& (0+255),w,b
  3026  002B64  D019               	goto	L1
  3027  002B66                     l7604:
  3028                           
  3029                           ; BSR set to: 0
  3030                           ;d232.c: 208:     if (alive_led != 0) alive_led = alive_led / 2;
  3031  002B66  51A0               	movf	led_lightshow@alive_led& (0+255),w,b
  3032  002B68  11A1               	iorwf	(led_lightshow@alive_led+1)& (0+255),w,b
  3033  002B6A  B4D8               	btfsc	status,2,c
  3034  002B6C  D012               	goto	l7608
  3035                           
  3036                           ; BSR set to: 0
  3037  002B6E  0060  F280  F006   	movff	led_lightshow@alive_led,___awdiv@dividend
  3038  002B74  0060  F284  F007   	movff	led_lightshow@alive_led+1,___awdiv@dividend+1
  3039  002B7A  0E00               	movlw	0
  3040  002B7C  6E09               	movwf	(___awdiv@divisor+1)^0,c
  3041  002B7E  0E02               	movlw	2
  3042  002B80  6E08               	movwf	___awdiv@divisor^0,c
  3043  002B82  EC8D  F024         	call	___awdiv	;wreg free
  3044  002B86  0060  F018  F0A0   	movff	?___awdiv,led_lightshow@alive_led
  3045  002B8C  0060  F01C  F0A1   	movff	?___awdiv+1,led_lightshow@alive_led+1
  3046  002B92                     l7608:
  3047                           
  3048                           ;d232.c: 209:     cylon = cylon >> 1;
  3049  002B92  0100               	movlb	0	; () banked
  3050  002B94  90D8               	bcf	status,0,c
  3051  002B96  31AD               	rrcf	led_lightshow@cylon& (0+255),w,b
  3052  002B98                     L1:
  3053  002B98  6FAD               	movwf	led_lightshow@cylon& (0+255),b
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;d232.c: 211:    if (alive_led < 2) {
  3057  002B9A  BFA1               	btfsc	(led_lightshow@alive_led+1)& (0+255),7,b
  3058  002B9C  D006               	goto	u8060
  3059  002B9E  51A1               	movf	(led_lightshow@alive_led+1)& (0+255),w,b
  3060  002BA0  E10A               	bnz	l7614
  3061  002BA2  0E02               	movlw	2
  3062  002BA4  5DA0               	subwf	led_lightshow@alive_led& (0+255),w,b
  3063  002BA6  B0D8               	btfsc	status,0,c
  3064  002BA8  D006               	goto	l7614
  3065  002BAA                     u8060:
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;d232.c: 212:     alive_led = 2;
  3069  002BAA  0E00               	movlw	0
  3070  002BAC  6FA1               	movwf	(led_lightshow@alive_led+1)& (0+255),b
  3071  002BAE  0E02               	movlw	2
  3072  002BB0  6FA0               	movwf	led_lightshow@alive_led& (0+255),b
  3073                           
  3074                           ;d232.c: 213:     LED_UP = 1;
  3075  002BB2  0E01               	movlw	1
  3076  002BB4  D00D               	goto	L2
  3077  002BB6                     l7614:
  3078                           
  3079                           ; BSR set to: 0
  3080                           ;d232.c: 215:     if (alive_led > 128) {
  3081  002BB6  BFA1               	btfsc	(led_lightshow@alive_led+1)& (0+255),7,b
  3082  002BB8  D00C               	goto	l1206
  3083  002BBA  51A1               	movf	(led_lightshow@alive_led+1)& (0+255),w,b
  3084  002BBC  E104               	bnz	u8070
  3085  002BBE  0E81               	movlw	129
  3086  002BC0  5DA0               	subwf	led_lightshow@alive_led& (0+255),w,b
  3087  002BC2  A0D8               	btfss	status,0,c
  3088  002BC4  D006               	goto	l1206
  3089  002BC6                     u8070:
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;d232.c: 216:      alive_led = 128;
  3093  002BC6  0E00               	movlw	0
  3094  002BC8  6FA1               	movwf	(led_lightshow@alive_led+1)& (0+255),b
  3095  002BCA  0E80               	movlw	128
  3096  002BCC  6FA0               	movwf	led_lightshow@alive_led& (0+255),b
  3097                           
  3098                           ;d232.c: 217:      LED_UP = 0;
  3099  002BCE  0E00               	movlw	0
  3100  002BD0                     L2:
  3101  002BD0  6FAC               	movwf	led_lightshow@LED_UP& (0+255),b
  3102  002BD2                     l1206:
  3103                           
  3104                           ; BSR set to: 0
  3105                           ;d232.c: 220:    j = 0;
  3106  002BD2  0E00               	movlw	0
  3107  002BD4  0101               	movlb	1	; () banked
  3108  002BD6  6F8F               	movwf	(led_lightshow@j+1)& (0+255),b
  3109  002BD8  0E00               	movlw	0
  3110  002BDA  6F8E               	movwf	led_lightshow@j& (0+255),b
  3111  002BDC                     l7618:
  3112                           
  3113                           ;d232.c: 224:  if (seq == 3) {
  3114  002BDC  0E03               	movlw	3
  3115  002BDE  1812               	xorwf	led_lightshow@seq^0,w,c
  3116  002BE0  A4D8               	btfss	status,2,c
  3117  002BE2  0012               	return	
  3118                           
  3119                           ;d232.c: 226:   if (otto_b1.result <= -120) {
  3120  002BE4  0101               	movlb	1	; () banked
  3121  002BE6  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  3122  002BE8  D00A               	goto	l7624
  3123  002BEA  0E89               	movlw	137
  3124  002BEC  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3125  002BEE  0EFF               	movlw	255
  3126  002BF0  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  3127  002BF2  B0D8               	btfsc	status,0,c
  3128  002BF4  D004               	goto	l7624
  3129                           
  3130                           ; BSR set to: 1
  3131                           ;d232.c: 227:    IO.outbytes[2] = 0b10000000;
  3132  002BF6  0E80               	movlw	128
  3133  002BF8  6FB0               	movwf	(_IO+7)& (0+255),b
  3134                           
  3135                           ;d232.c: 228:    IO.BAL = UP;
  3136  002BFA  0E00               	movlw	0
  3137  002BFC  6FB8               	movwf	(_IO+15)& (0+255),b
  3138  002BFE                     l7624:
  3139                           
  3140                           ; BSR set to: 1
  3141                           ;d232.c: 230:   if (otto_b1.result > -120 && otto_b1.result < -80) {
  3142  002BFE  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  3143  002C00  D006               	goto	u8100
  3144  002C02  0E89               	movlw	137
  3145  002C04  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3146  002C06  0EFF               	movlw	255
  3147  002C08  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  3148  002C0A  A0D8               	btfss	status,0,c
  3149  002C0C  D00C               	goto	l7630
  3150  002C0E                     u8100:
  3151                           
  3152                           ; BSR set to: 1
  3153  002C0E  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  3154  002C10  D00A               	goto	l7630
  3155  002C12  0EB0               	movlw	176
  3156  002C14  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3157  002C16  0EFF               	movlw	255
  3158  002C18  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  3159  002C1A  B0D8               	btfsc	status,0,c
  3160  002C1C  D004               	goto	l7630
  3161                           
  3162                           ; BSR set to: 1
  3163                           ;d232.c: 231:    IO.outbytes[2] = 0b01000000;
  3164  002C1E  0E40               	movlw	64
  3165  002C20  6FB0               	movwf	(_IO+7)& (0+255),b
  3166                           
  3167                           ;d232.c: 232:    IO.BAL = UP;
  3168  002C22  0E00               	movlw	0
  3169  002C24  6FB8               	movwf	(_IO+15)& (0+255),b
  3170  002C26                     l7630:
  3171                           
  3172                           ; BSR set to: 1
  3173                           ;d232.c: 234:   if (otto_b1.result >= -80 && otto_b1.result < -30) {
  3174  002C26  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  3175  002C28  D006               	goto	u8120
  3176  002C2A  0EB0               	movlw	176
  3177  002C2C  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3178  002C2E  0EFF               	movlw	255
  3179  002C30  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  3180  002C32  A0D8               	btfss	status,0,c
  3181  002C34  D00C               	goto	l7636
  3182  002C36                     u8120:
  3183                           
  3184                           ; BSR set to: 1
  3185  002C36  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  3186  002C38  D00A               	goto	l7636
  3187  002C3A  0EE2               	movlw	226
  3188  002C3C  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3189  002C3E  0EFF               	movlw	255
  3190  002C40  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  3191  002C42  B0D8               	btfsc	status,0,c
  3192  002C44  D004               	goto	l7636
  3193                           
  3194                           ; BSR set to: 1
  3195                           ;d232.c: 235:    IO.outbytes[2] = 0b00100000;
  3196  002C46  0E20               	movlw	32
  3197  002C48  6FB0               	movwf	(_IO+7)& (0+255),b
  3198                           
  3199                           ;d232.c: 236:    IO.BAL = UP;
  3200  002C4A  0E00               	movlw	0
  3201  002C4C  6FB8               	movwf	(_IO+15)& (0+255),b
  3202  002C4E                     l7636:
  3203                           
  3204                           ; BSR set to: 1
  3205                           ;d232.c: 238:   if (otto_b1.result >= -30 && otto_b1.result < -5) {
  3206  002C4E  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  3207  002C50  D006               	goto	u8140
  3208  002C52  0EE2               	movlw	226
  3209  002C54  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3210  002C56  0EFF               	movlw	255
  3211  002C58  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  3212  002C5A  A0D8               	btfss	status,0,c
  3213  002C5C  D01B               	goto	l7652
  3214  002C5E                     u8140:
  3215                           
  3216                           ; BSR set to: 1
  3217  002C5E  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  3218  002C60  D019               	goto	l7652
  3219  002C62  0EFB               	movlw	251
  3220  002C64  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3221  002C66  0EFF               	movlw	255
  3222  002C68  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  3223  002C6A  B0D8               	btfsc	status,0,c
  3224  002C6C  D013               	goto	l7652
  3225                           
  3226                           ; BSR set to: 1
  3227                           ;d232.c: 239:    if (IO.BAL != UP) {
  3228  002C6E  51B8               	movf	(_IO+15)& (0+255),w,b
  3229  002C70  B4D8               	btfsc	status,2,c
  3230  002C72  D00B               	goto	l7648
  3231                           
  3232                           ; BSR set to: 1
  3233                           ;d232.c: 240:     IO.outbytes[1] = IO.outbytes[1] | 0x01;
  3234  002C74  51AF               	movf	(_IO+6)& (0+255),w,b
  3235  002C76  0901               	iorlw	1
  3236  002C78  6FAF               	movwf	(_IO+6)& (0+255),b
  3237                           
  3238                           ; BSR set to: 1
  3239                           ;d232.c: 241:     IO.score--;
  3240  002C7A  07BD               	decf	(_IO+20)& (0+255),f,b
  3241                           
  3242                           ; BSR set to: 1
  3243                           ;d232.c: 242:     StartTimer(TMR_BAL, 500);
  3244  002C7C  0E01               	movlw	1
  3245  002C7E  6E07               	movwf	(StartTimer@count+1)^0,c
  3246  002C80  0EF4               	movlw	244
  3247  002C82  6E06               	movwf	StartTimer@count^0,c
  3248  002C84  0E07               	movlw	7
  3249  002C86  ECFF  F027         	call	_StartTimer
  3250  002C8A                     l7648:
  3251                           
  3252                           ;d232.c: 244:    IO.outbytes[2] = 0b00010000;
  3253  002C8A  0E10               	movlw	16
  3254  002C8C  0101               	movlb	1	; () banked
  3255  002C8E  6FB0               	movwf	(_IO+7)& (0+255),b
  3256                           
  3257                           ; BSR set to: 1
  3258                           ;d232.c: 245:    IO.BAL = UP;
  3259  002C90  0E00               	movlw	0
  3260  002C92  6FB8               	movwf	(_IO+15)& (0+255),b
  3261  002C94                     l7652:
  3262                           
  3263                           ; BSR set to: 1
  3264                           ;d232.c: 247:   if (otto_b1.result >= -5 && otto_b1.result <= 5) {
  3265  002C94  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  3266  002C96  D006               	goto	u8170
  3267  002C98  0EFB               	movlw	251
  3268  002C9A  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3269  002C9C  0EFF               	movlw	255
  3270  002C9E  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  3271  002CA0  A0D8               	btfss	status,0,c
  3272  002CA2  D025               	goto	l7672
  3273  002CA4                     u8170:
  3274                           
  3275                           ; BSR set to: 1
  3276  002CA4  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  3277  002CA6  D006               	goto	u8180
  3278  002CA8  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  3279  002CAA  E121               	bnz	l7672
  3280  002CAC  0E06               	movlw	6
  3281  002CAE  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3282  002CB0  B0D8               	btfsc	status,0,c
  3283  002CB2  D01D               	goto	l7672
  3284  002CB4                     u8180:
  3285                           
  3286                           ; BSR set to: 1
  3287                           ;d232.c: 248:    if (IO.BAL != ON) {
  3288  002CB4  05B8               	decf	(_IO+15)& (0+255),w,b
  3289  002CB6  B4D8               	btfsc	status,2,c
  3290  002CB8  D015               	goto	l7668
  3291                           
  3292                           ; BSR set to: 1
  3293                           ;d232.c: 249:     IO.outbytes[1] = IO.outbytes[1] | 0x02;
  3294  002CBA  51AF               	movf	(_IO+6)& (0+255),w,b
  3295  002CBC  0902               	iorlw	2
  3296  002CBE  6FAF               	movwf	(_IO+6)& (0+255),b
  3297                           
  3298                           ; BSR set to: 1
  3299                           ;d232.c: 251:     if (TimerDone(TMR_BAL)) {
  3300  002CC0  0E07               	movlw	7
  3301  002CC2  ECB2  F028         	call	_TimerDone
  3302  002CC6  0900               	iorlw	0
  3303  002CC8  B4D8               	btfsc	status,2,c
  3304  002CCA  D005               	goto	l7666
  3305                           
  3306                           ;d232.c: 252:      if (IO.score < 50)
  3307  002CCC  0E32               	movlw	50
  3308  002CCE  0101               	movlb	1	; () banked
  3309  002CD0  61BD               	cpfslt	(_IO+20)& (0+255),b
  3310  002CD2  D001               	goto	l7666
  3311                           
  3312                           ; BSR set to: 1
  3313                           ;d232.c: 253:       IO.score++;
  3314  002CD4  2BBD               	incf	(_IO+20)& (0+255),f,b
  3315  002CD6                     l7666:
  3316                           
  3317                           ;d232.c: 255:     StartTimer(TMR_BAL, 500);
  3318  002CD6  0E01               	movlw	1
  3319  002CD8  6E07               	movwf	(StartTimer@count+1)^0,c
  3320  002CDA  0EF4               	movlw	244
  3321  002CDC  6E06               	movwf	StartTimer@count^0,c
  3322  002CDE  0E07               	movlw	7
  3323  002CE0  ECFF  F027         	call	_StartTimer
  3324  002CE4                     l7668:
  3325                           
  3326                           ;d232.c: 257:    IO.outbytes[2] = 0b00000000;
  3327  002CE4  0E00               	movlw	0
  3328  002CE6  0101               	movlb	1	; () banked
  3329  002CE8  6FB0               	movwf	(_IO+7)& (0+255),b
  3330                           
  3331                           ; BSR set to: 1
  3332                           ;d232.c: 258:    IO.BAL = ON;
  3333  002CEA  0E01               	movlw	1
  3334  002CEC  6FB8               	movwf	(_IO+15)& (0+255),b
  3335  002CEE                     l7672:
  3336                           
  3337                           ; BSR set to: 1
  3338                           ;d232.c: 260:   if (otto_b1.result > 5 && otto_b1.result < 30) {
  3339  002CEE  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  3340  002CF0  D022               	goto	l7688
  3341  002CF2  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  3342  002CF4  E104               	bnz	u8220
  3343  002CF6  0E06               	movlw	6
  3344  002CF8  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3345  002CFA  A0D8               	btfss	status,0,c
  3346  002CFC  D01C               	goto	l7688
  3347  002CFE                     u8220:
  3348                           
  3349                           ; BSR set to: 1
  3350  002CFE  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  3351  002D00  D006               	goto	u8230
  3352  002D02  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  3353  002D04  E118               	bnz	l7688
  3354  002D06  0E1E               	movlw	30
  3355  002D08  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3356  002D0A  B0D8               	btfsc	status,0,c
  3357  002D0C  D014               	goto	l7688
  3358  002D0E                     u8230:
  3359                           
  3360                           ; BSR set to: 1
  3361                           ;d232.c: 261:    if (IO.BAL != DOWN) {
  3362  002D0E  0E02               	movlw	2
  3363  002D10  19B8               	xorwf	(_IO+15)& (0+255),w,b
  3364  002D12  B4D8               	btfsc	status,2,c
  3365  002D14  D00C               	goto	l7684
  3366                           
  3367                           ; BSR set to: 1
  3368                           ;d232.c: 262:     IO.outbytes[1] = IO.outbytes[1] | 0x04;
  3369  002D16  51AF               	movf	(_IO+6)& (0+255),w,b
  3370  002D18  0904               	iorlw	4
  3371  002D1A  6FAF               	movwf	(_IO+6)& (0+255),b
  3372                           
  3373                           ; BSR set to: 1
  3374                           ;d232.c: 263:     StartTimer(TMR_BAL, 500);
  3375  002D1C  0E01               	movlw	1
  3376  002D1E  6E07               	movwf	(StartTimer@count+1)^0,c
  3377  002D20  0EF4               	movlw	244
  3378  002D22  6E06               	movwf	StartTimer@count^0,c
  3379  002D24  0E07               	movlw	7
  3380  002D26  ECFF  F027         	call	_StartTimer
  3381                           
  3382                           ;d232.c: 264:     IO.score--;
  3383  002D2A  0101               	movlb	1	; () banked
  3384  002D2C  07BD               	decf	(_IO+20)& (0+255),f,b
  3385  002D2E                     l7684:
  3386                           
  3387                           ; BSR set to: 1
  3388                           ;d232.c: 266:    IO.outbytes[2] = 0b00001000;
  3389  002D2E  0E08               	movlw	8
  3390  002D30  6FB0               	movwf	(_IO+7)& (0+255),b
  3391                           
  3392                           ; BSR set to: 1
  3393                           ;d232.c: 267:    IO.BAL = DOWN;
  3394  002D32  0E02               	movlw	2
  3395  002D34  6FB8               	movwf	(_IO+15)& (0+255),b
  3396  002D36                     l7688:
  3397                           
  3398                           ; BSR set to: 1
  3399                           ;d232.c: 269:   if (otto_b1.result >= 30 && otto_b1.result < 80) {
  3400  002D36  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  3401  002D38  D012               	goto	l7694
  3402  002D3A  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  3403  002D3C  E104               	bnz	u8250
  3404  002D3E  0E1E               	movlw	30
  3405  002D40  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3406  002D42  A0D8               	btfss	status,0,c
  3407  002D44  D00C               	goto	l7694
  3408  002D46                     u8250:
  3409                           
  3410                           ; BSR set to: 1
  3411  002D46  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  3412  002D48  D006               	goto	u8260
  3413  002D4A  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  3414  002D4C  E108               	bnz	l7694
  3415  002D4E  0E50               	movlw	80
  3416  002D50  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3417  002D52  B0D8               	btfsc	status,0,c
  3418  002D54  D004               	goto	l7694
  3419  002D56                     u8260:
  3420                           
  3421                           ; BSR set to: 1
  3422                           ;d232.c: 270:    IO.outbytes[2] = 0b00000100;
  3423  002D56  0E04               	movlw	4
  3424  002D58  6FB0               	movwf	(_IO+7)& (0+255),b
  3425                           
  3426                           ;d232.c: 271:    IO.BAL = DOWN;
  3427  002D5A  0E02               	movlw	2
  3428  002D5C  6FB8               	movwf	(_IO+15)& (0+255),b
  3429  002D5E                     l7694:
  3430                           
  3431                           ; BSR set to: 1
  3432                           ;d232.c: 273:   if (otto_b1.result >= 80 && otto_b1.result < 120) {
  3433  002D5E  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  3434  002D60  D012               	goto	l7700
  3435  002D62  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  3436  002D64  E104               	bnz	u8270
  3437  002D66  0E50               	movlw	80
  3438  002D68  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3439  002D6A  A0D8               	btfss	status,0,c
  3440  002D6C  D00C               	goto	l7700
  3441  002D6E                     u8270:
  3442                           
  3443                           ; BSR set to: 1
  3444  002D6E  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  3445  002D70  D006               	goto	u8280
  3446  002D72  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  3447  002D74  E108               	bnz	l7700
  3448  002D76  0E78               	movlw	120
  3449  002D78  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3450  002D7A  B0D8               	btfsc	status,0,c
  3451  002D7C  D004               	goto	l7700
  3452  002D7E                     u8280:
  3453                           
  3454                           ; BSR set to: 1
  3455                           ;d232.c: 274:    IO.outbytes[2] = 0b00000010;
  3456  002D7E  0E02               	movlw	2
  3457  002D80  6FB0               	movwf	(_IO+7)& (0+255),b
  3458                           
  3459                           ;d232.c: 275:    IO.BAL = DOWN;
  3460  002D82  0E02               	movlw	2
  3461  002D84  6FB8               	movwf	(_IO+15)& (0+255),b
  3462  002D86                     l7700:
  3463                           
  3464                           ; BSR set to: 1
  3465                           ;d232.c: 277:   if (otto_b1.result >= 120) {
  3466  002D86  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  3467  002D88  0012               	return	
  3468  002D8A  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  3469  002D8C  E104               	bnz	u8290
  3470  002D8E  0E78               	movlw	120
  3471  002D90  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3472  002D92  A0D8               	btfss	status,0,c
  3473  002D94  0012               	return	
  3474  002D96                     u8290:
  3475                           
  3476                           ; BSR set to: 1
  3477                           ;d232.c: 278:    IO.outbytes[2] = 0b00000001;
  3478  002D96  0E01               	movlw	1
  3479  002D98  6FB0               	movwf	(_IO+7)& (0+255),b
  3480                           
  3481                           ;d232.c: 279:    IO.BAL = DOWN;
  3482  002D9A  0E02               	movlw	2
  3483  002D9C  6FB8               	movwf	(_IO+15)& (0+255),b
  3484  002D9E  0012               	return		;funcret
  3485  002DA0                     __end_of_led_lightshow:
  3486                           	opt callstack 0
  3487                           
  3488 ;; *************** function ___awdiv *****************
  3489 ;; Defined at:
  3490 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
  3491 ;; Parameters:    Size  Location     Type
  3492 ;;  dividend        2    5[COMRAM] int 
  3493 ;;  divisor         2    7[COMRAM] int 
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;  quotient        2   11[COMRAM] int 
  3496 ;;  sign            1   10[COMRAM] unsigned char 
  3497 ;;  counter         1    9[COMRAM] unsigned char 
  3498 ;; Return value:  Size  Location     Type
  3499 ;;                  2    5[COMRAM] int 
  3500 ;; Registers used:
  3501 ;;		wreg, status,2, status,0
  3502 ;; Tracked objects:
  3503 ;;		On entry : 3E/1
  3504 ;;		On exit  : 3E/0
  3505 ;;		Unchanged: 3E/0
  3506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3507 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3508 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3510 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3511 ;;Total ram usage:        8 bytes
  3512 ;; Hardware stack levels used:    1
  3513 ;; Hardware stack levels required when called:    4
  3514 ;; This function calls:
  3515 ;;		Nothing
  3516 ;; This function is called by:
  3517 ;;		_main
  3518 ;;		_led_lightshow
  3519 ;; This function uses a non-reentrant model
  3520 ;;
  3521                           
  3522                           	psect	text10
  3523  00491A                     __ptext10:
  3524                           	opt callstack 0
  3525  00491A                     ___awdiv:
  3526                           	opt callstack 25
  3527                           
  3528                           ;incstack = 0
  3529  00491A  0E00               	movlw	0
  3530  00491C  6E0B               	movwf	___awdiv@sign^0,c
  3531  00491E  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  3532  004920  D006               	goto	l7344
  3533  004922  6C08               	negf	___awdiv@divisor^0,c
  3534  004924  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  3535  004926  B0D8               	btfsc	status,0,c
  3536  004928  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  3537  00492A  0E01               	movlw	1
  3538  00492C  6E0B               	movwf	___awdiv@sign^0,c
  3539  00492E                     l7344:
  3540  00492E  AE07               	btfss	(___awdiv@dividend+1)^0,7,c
  3541  004930  D006               	goto	l7350
  3542  004932  6C06               	negf	___awdiv@dividend^0,c
  3543  004934  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  3544  004936  B0D8               	btfsc	status,0,c
  3545  004938  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  3546  00493A  0E01               	movlw	1
  3547  00493C  1A0B               	xorwf	___awdiv@sign^0,f,c
  3548  00493E                     l7350:
  3549  00493E  0E00               	movlw	0
  3550  004940  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  3551  004942  0E00               	movlw	0
  3552  004944  6E0C               	movwf	___awdiv@quotient^0,c
  3553  004946  5008               	movf	___awdiv@divisor^0,w,c
  3554  004948  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  3555  00494A  B4D8               	btfsc	status,2,c
  3556  00494C  D01C               	goto	l7372
  3557  00494E  0E01               	movlw	1
  3558  004950  6E0A               	movwf	___awdiv@counter^0,c
  3559  004952  D004               	goto	l7358
  3560  004954                     l7356:
  3561  004954  90D8               	bcf	status,0,c
  3562  004956  3608               	rlcf	___awdiv@divisor^0,f,c
  3563  004958  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  3564  00495A  2A0A               	incf	___awdiv@counter^0,f,c
  3565  00495C                     l7358:
  3566  00495C  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  3567  00495E  D7FA               	goto	l7356
  3568  004960                     u7760:
  3569  004960  90D8               	bcf	status,0,c
  3570  004962  360C               	rlcf	___awdiv@quotient^0,f,c
  3571  004964  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  3572  004966  5008               	movf	___awdiv@divisor^0,w,c
  3573  004968  5C06               	subwf	___awdiv@dividend^0,w,c
  3574  00496A  5009               	movf	(___awdiv@divisor+1)^0,w,c
  3575  00496C  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  3576  00496E  A0D8               	btfss	status,0,c
  3577  004970  D005               	goto	l7368
  3578  004972  5008               	movf	___awdiv@divisor^0,w,c
  3579  004974  5E06               	subwf	___awdiv@dividend^0,f,c
  3580  004976  5009               	movf	(___awdiv@divisor+1)^0,w,c
  3581  004978  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  3582  00497A  800C               	bsf	___awdiv@quotient^0,0,c
  3583  00497C                     l7368:
  3584  00497C  90D8               	bcf	status,0,c
  3585  00497E  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  3586  004980  3208               	rrcf	___awdiv@divisor^0,f,c
  3587  004982  2E0A               	decfsz	___awdiv@counter^0,f,c
  3588  004984  D7ED               	goto	u7760
  3589  004986                     l7372:
  3590  004986  500B               	movf	___awdiv@sign^0,w,c
  3591  004988  B4D8               	btfsc	status,2,c
  3592  00498A  D004               	goto	l7376
  3593  00498C  6C0C               	negf	___awdiv@quotient^0,c
  3594  00498E  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  3595  004990  B0D8               	btfsc	status,0,c
  3596  004992  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  3597  004994                     l7376:
  3598  004994  0060  F030  F006   	movff	___awdiv@quotient,?___awdiv
  3599  00499A  0060  F034  F007   	movff	___awdiv@quotient+1,?___awdiv+1
  3600  0049A0  0012               	return		;funcret
  3601  0049A2                     __end_of___awdiv:
  3602                           	opt callstack 0
  3603                           
  3604 ;; *************** function _init_display *****************
  3605 ;; Defined at:
  3606 ;;		line 27 in file "eadog.c"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;		None
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;		None
  3611 ;; Return value:  Size  Location     Type
  3612 ;;                  1    wreg      void 
  3613 ;; Registers used:
  3614 ;;		wreg, status,2, status,0, cstack
  3615 ;; Tracked objects:
  3616 ;;		On entry : 3F/1
  3617 ;;		On exit  : 3F/1
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3624 ;;Total ram usage:        0 bytes
  3625 ;; Hardware stack levels used:    1
  3626 ;; Hardware stack levels required when called:    6
  3627 ;; This function calls:
  3628 ;;		_send_lcd_cmd
  3629 ;;		_send_lcd_cmd_long
  3630 ;;		_wdtdelay
  3631 ;; This function is called by:
  3632 ;;		_main
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           	psect	text11
  3637  004A20                     __ptext11:
  3638                           	opt callstack 0
  3639  004A20                     _init_display:
  3640                           	opt callstack 24
  3641                           
  3642                           ; BSR set to: 1
  3643                           
  3644                           ;incstack = 0
  3645                           ;eadog.c: 29:  do { LATCbits.LATC2 = 1; } while(0);
  3646  004A20  84BC               	bsf	188,2,c	;volatile
  3647                           
  3648                           ; BSR set to: 1
  3649                           ;eadog.c: 30:  wdtdelay(350000);
  3650  004A22  0E30               	movlw	48
  3651  004A24  6E06               	movwf	wdtdelay@delay^0,c
  3652  004A26  0E57               	movlw	87
  3653  004A28  6E07               	movwf	(wdtdelay@delay+1)^0,c
  3654  004A2A  0E05               	movlw	5
  3655  004A2C  6E08               	movwf	(wdtdelay@delay+2)^0,c
  3656  004A2E  0E00               	movlw	0
  3657  004A30  6E09               	movwf	(wdtdelay@delay+3)^0,c
  3658  004A32  EC58  F027         	call	_wdtdelay	;wreg free
  3659                           
  3660                           ;eadog.c: 31:  send_lcd_cmd(0x39);
  3661  004A36  0E39               	movlw	57
  3662  004A38  EC75  F027         	call	_send_lcd_cmd
  3663                           
  3664                           ;eadog.c: 32:  send_lcd_cmd(0x1d);
  3665  004A3C  0E1D               	movlw	29
  3666  004A3E  EC75  F027         	call	_send_lcd_cmd
  3667                           
  3668                           ;eadog.c: 33:  send_lcd_cmd(0x50);
  3669  004A42  0E50               	movlw	80
  3670  004A44  EC75  F027         	call	_send_lcd_cmd
  3671                           
  3672                           ;eadog.c: 34:  send_lcd_cmd(0x6c);
  3673  004A48  0E6C               	movlw	108
  3674  004A4A  EC75  F027         	call	_send_lcd_cmd
  3675                           
  3676                           ;eadog.c: 35:  send_lcd_cmd(0x76);
  3677  004A4E  0E76               	movlw	118
  3678  004A50  EC75  F027         	call	_send_lcd_cmd
  3679                           
  3680                           ;eadog.c: 36:  send_lcd_cmd_long(0x38);
  3681  004A54  0E38               	movlw	56
  3682  004A56  ECA0  F028         	call	_send_lcd_cmd_long
  3683                           
  3684                           ;eadog.c: 37:  send_lcd_cmd(0x0f);
  3685  004A5A  0E0F               	movlw	15
  3686  004A5C  EC75  F027         	call	_send_lcd_cmd
  3687                           
  3688                           ;eadog.c: 38:  send_lcd_cmd_long(0x01);
  3689  004A60  0E01               	movlw	1
  3690  004A62  ECA0  F028         	call	_send_lcd_cmd_long
  3691                           
  3692                           ;eadog.c: 39:  send_lcd_cmd(0x02);
  3693  004A66  0E02               	movlw	2
  3694  004A68  EC75  F027         	call	_send_lcd_cmd
  3695                           
  3696                           ;eadog.c: 40:  send_lcd_cmd(0x06);
  3697  004A6C  0E06               	movlw	6
  3698  004A6E  EC75  F027         	call	_send_lcd_cmd
  3699                           
  3700                           ;eadog.c: 41:  wdtdelay(800);
  3701  004A72  0E20               	movlw	32
  3702  004A74  6E06               	movwf	wdtdelay@delay^0,c
  3703  004A76  0E03               	movlw	3
  3704  004A78  6E07               	movwf	(wdtdelay@delay+1)^0,c
  3705  004A7A  0E00               	movlw	0
  3706  004A7C  6E08               	movwf	(wdtdelay@delay+2)^0,c
  3707  004A7E  0E00               	movlw	0
  3708  004A80  6E09               	movwf	(wdtdelay@delay+3)^0,c
  3709  004A82  EC58  F027         	call	_wdtdelay	;wreg free
  3710                           
  3711                           ; BSR set to: 1
  3712  004A86  0012               	return		;funcret
  3713  004A88                     __end_of_init_display:
  3714                           	opt callstack 0
  3715                           
  3716 ;; *************** function _send_lcd_cmd_long *****************
  3717 ;; Defined at:
  3718 ;;		line 71 in file "eadog.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;  cmd             1    wreg     const unsigned char 
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;  cmd             1    9[COMRAM] const unsigned char 
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  1    wreg      void 
  3725 ;; Registers used:
  3726 ;;		wreg, status,2, status,0, cstack
  3727 ;; Tracked objects:
  3728 ;;		On entry : 3F/1
  3729 ;;		On exit  : 3F/1
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3733 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3735 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3736 ;;Total ram usage:        1 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:    5
  3739 ;; This function calls:
  3740 ;;		_SPI1_Exchange8bit
  3741 ;;		_wdtdelay
  3742 ;; This function is called by:
  3743 ;;		_init_display
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           	psect	text12
  3748  005140                     __ptext12:
  3749                           	opt callstack 0
  3750  005140                     _send_lcd_cmd_long:
  3751                           	opt callstack 24
  3752                           
  3753                           ; BSR set to: 1
  3754                           ;incstack = 0
  3755                           ;send_lcd_cmd_long@cmd stored from wreg
  3756  005140  6E0A               	movwf	send_lcd_cmd_long@cmd^0,c
  3757                           
  3758                           ;eadog.c: 71: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 72: {;eadog.c: 7
      +                          3:  do { LATCbits.LATC1 = 0; } while(0);
  3759  005142  92BC               	bcf	188,1,c	;volatile
  3760                           
  3761                           ;eadog.c: 74:  do { LATCbits.LATC2 = 0; } while(0);
  3762  005144  94BC               	bcf	188,2,c	;volatile
  3763                           
  3764                           ;eadog.c: 75:  SPI1_Exchange8bit(cmd);
  3765  005146  500A               	movf	send_lcd_cmd_long@cmd^0,w,c
  3766  005148  EC9F  F029         	call	_SPI1_Exchange8bit
  3767                           
  3768                           ; BSR set to: 61
  3769                           ;eadog.c: 76:  wdtdelay(800);
  3770  00514C  0E20               	movlw	32
  3771  00514E  6E06               	movwf	wdtdelay@delay^0,c
  3772  005150  0E03               	movlw	3
  3773  005152  6E07               	movwf	(wdtdelay@delay+1)^0,c
  3774  005154  0E00               	movlw	0
  3775  005156  6E08               	movwf	(wdtdelay@delay+2)^0,c
  3776  005158  0E00               	movlw	0
  3777  00515A  6E09               	movwf	(wdtdelay@delay+3)^0,c
  3778  00515C  EC58  F027         	call	_wdtdelay	;wreg free
  3779                           
  3780                           ; BSR set to: 1
  3781  005160  82BC               	bsf	188,1,c	;volatile
  3782                           
  3783                           ; BSR set to: 1
  3784  005162  0012               	return		;funcret
  3785  005164                     __end_of_send_lcd_cmd_long:
  3786                           	opt callstack 0
  3787                           
  3788 ;; *************** function _eaDogM_WriteCommand *****************
  3789 ;; Defined at:
  3790 ;;		line 85 in file "eadog.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;  cmd             1    wreg     const unsigned char 
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;  cmd             1   10[COMRAM] const unsigned char 
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  1    wreg      void 
  3797 ;; Registers used:
  3798 ;;		wreg, status,2, status,0, cstack
  3799 ;; Tracked objects:
  3800 ;;		On entry : 3F/1
  3801 ;;		On exit  : 3F/1
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3807 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3808 ;;Total ram usage:        1 bytes
  3809 ;; Hardware stack levels used:    1
  3810 ;; Hardware stack levels required when called:    6
  3811 ;; This function calls:
  3812 ;;		_send_lcd_cmd
  3813 ;; This function is called by:
  3814 ;;		_main
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818                           	psect	text13
  3819  0054C4                     __ptext13:
  3820                           	opt callstack 0
  3821  0054C4                     _eaDogM_WriteCommand:
  3822                           	opt callstack 24
  3823                           
  3824                           ; BSR set to: 1
  3825                           ;incstack = 0
  3826                           ;eaDogM_WriteCommand@cmd stored from wreg
  3827  0054C4  6E0B               	movwf	eaDogM_WriteCommand@cmd^0,c
  3828                           
  3829                           ;eadog.c: 85: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  s
      +                          end_lcd_cmd(cmd);
  3830  0054C6  500B               	movf	eaDogM_WriteCommand@cmd^0,w,c
  3831  0054C8  EC75  F027         	call	_send_lcd_cmd
  3832                           
  3833                           ; BSR set to: 1
  3834  0054CC  0012               	return		;funcret
  3835  0054CE                     __end_of_eaDogM_WriteCommand:
  3836                           	opt callstack 0
  3837                           
  3838 ;; *************** function _send_lcd_cmd *****************
  3839 ;; Defined at:
  3840 ;;		line 58 in file "eadog.c"
  3841 ;; Parameters:    Size  Location     Type
  3842 ;;  cmd             1    wreg     const unsigned char 
  3843 ;; Auto vars:     Size  Location     Type
  3844 ;;  cmd             1    9[COMRAM] const unsigned char 
  3845 ;; Return value:  Size  Location     Type
  3846 ;;                  1    wreg      void 
  3847 ;; Registers used:
  3848 ;;		wreg, status,2, status,0, cstack
  3849 ;; Tracked objects:
  3850 ;;		On entry : 0/0
  3851 ;;		On exit  : 3F/1
  3852 ;;		Unchanged: 0/0
  3853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3855 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3857 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3858 ;;Total ram usage:        1 bytes
  3859 ;; Hardware stack levels used:    1
  3860 ;; Hardware stack levels required when called:    5
  3861 ;; This function calls:
  3862 ;;		_SPI1_Exchange8bit
  3863 ;;		_wdtdelay
  3864 ;; This function is called by:
  3865 ;;		_init_display
  3866 ;;		_eaDogM_WriteCommand
  3867 ;;		_eaDogM_WriteStringAtPos
  3868 ;; This function uses a non-reentrant model
  3869 ;;
  3870                           
  3871                           	psect	text14
  3872  004EEA                     __ptext14:
  3873                           	opt callstack 0
  3874  004EEA                     _send_lcd_cmd:
  3875                           	opt callstack 23
  3876                           
  3877                           ; BSR set to: 1
  3878                           ;incstack = 0
  3879                           ;send_lcd_cmd@cmd stored from wreg
  3880  004EEA  6E0A               	movwf	send_lcd_cmd@cmd^0,c
  3881                           
  3882                           ;eadog.c: 58: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 59: {;eadog.c: 60:  d
      +                          o { LATCbits.LATC1 = 0; } while(0);
  3883  004EEC  92BC               	bcf	188,1,c	;volatile
  3884                           
  3885                           ;eadog.c: 61:  do { LATCbits.LATC2 = 0; } while(0);
  3886  004EEE  94BC               	bcf	188,2,c	;volatile
  3887                           
  3888                           ;eadog.c: 62:  wdtdelay(10);
  3889  004EF0  0E0A               	movlw	10
  3890  004EF2  6E06               	movwf	wdtdelay@delay^0,c
  3891  004EF4  0E00               	movlw	0
  3892  004EF6  6E07               	movwf	(wdtdelay@delay+1)^0,c
  3893  004EF8  0E00               	movlw	0
  3894  004EFA  6E08               	movwf	(wdtdelay@delay+2)^0,c
  3895  004EFC  0E00               	movlw	0
  3896  004EFE  6E09               	movwf	(wdtdelay@delay+3)^0,c
  3897  004F00  EC58  F027         	call	_wdtdelay	;wreg free
  3898                           
  3899                           ; BSR set to: 1
  3900                           ;eadog.c: 63:  SPI1_Exchange8bit(cmd);
  3901  004F04  500A               	movf	send_lcd_cmd@cmd^0,w,c
  3902  004F06  EC9F  F029         	call	_SPI1_Exchange8bit
  3903                           
  3904                           ; BSR set to: 61
  3905                           ;eadog.c: 64:  wdtdelay(10);
  3906  004F0A  0E0A               	movlw	10
  3907  004F0C  6E06               	movwf	wdtdelay@delay^0,c
  3908  004F0E  0E00               	movlw	0
  3909  004F10  6E07               	movwf	(wdtdelay@delay+1)^0,c
  3910  004F12  0E00               	movlw	0
  3911  004F14  6E08               	movwf	(wdtdelay@delay+2)^0,c
  3912  004F16  0E00               	movlw	0
  3913  004F18  6E09               	movwf	(wdtdelay@delay+3)^0,c
  3914  004F1A  EC58  F027         	call	_wdtdelay	;wreg free
  3915                           
  3916                           ; BSR set to: 1
  3917  004F1E  82BC               	bsf	188,1,c	;volatile
  3918                           
  3919                           ; BSR set to: 1
  3920  004F20  0012               	return		;funcret
  3921  004F22                     __end_of_send_lcd_cmd:
  3922                           	opt callstack 0
  3923                           
  3924 ;; *************** function _wdtdelay *****************
  3925 ;; Defined at:
  3926 ;;		line 14 in file "eadog.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;  delay           4    5[COMRAM] const unsigned long 
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;		None
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  1    wreg      void 
  3933 ;; Registers used:
  3934 ;;		wreg, status,2, status,0
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/1
  3937 ;;		On exit  : 3F/1
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3940 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3943 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3944 ;;Total ram usage:        4 bytes
  3945 ;; Hardware stack levels used:    1
  3946 ;; Hardware stack levels required when called:    4
  3947 ;; This function calls:
  3948 ;;		Nothing
  3949 ;; This function is called by:
  3950 ;;		_init_display
  3951 ;;		_send_lcd_cmd
  3952 ;;		_send_lcd_cmd_long
  3953 ;;		_eaDogM_WriteString
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           	psect	text15
  3958  004EB0                     __ptext15:
  3959                           	opt callstack 0
  3960  004EB0                     _wdtdelay:
  3961                           	opt callstack 23
  3962                           
  3963                           ;eadog.c: 14: void wdtdelay(const uint32_t delay);eadog.c: 15: {;eadog.c: 16:  static ui
      +                          nt32_t dcount;;eadog.c: 18:  for (dcount = 0; dcount <= delay; dcount++) {
  3964                           
  3965                           ; BSR set to: 1
  3966                           ;incstack = 0
  3967  004EB0  0E00               	movlw	0
  3968  004EB2  0101               	movlb	1	; () banked
  3969  004EB4  6F62               	movwf	wdtdelay@dcount& (0+255),b
  3970  004EB6  0E00               	movlw	0
  3971  004EB8  6F63               	movwf	(wdtdelay@dcount+1)& (0+255),b
  3972  004EBA  0E00               	movlw	0
  3973  004EBC  6F64               	movwf	(wdtdelay@dcount+2)& (0+255),b
  3974  004EBE  0E00               	movlw	0
  3975  004EC0  6F65               	movwf	(wdtdelay@dcount+3)& (0+255),b
  3976  004EC2                     l1265:
  3977                           
  3978                           ; BSR set to: 1
  3979                           ;eadog.c: 19:   __nop();
  3980  004EC2  F000               	nop	
  3981  004EC4  0004               	clrwdt		;# 
  3982                           
  3983                           ;eadog.c: 21:  };
  3984  004EC6  0E01               	movlw	1
  3985  004EC8  0101               	movlb	1	; () banked
  3986  004ECA  2762               	addwf	wdtdelay@dcount& (0+255),f,b
  3987  004ECC  0E00               	movlw	0
  3988  004ECE  2363               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  3989  004ED0  2364               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  3990  004ED2  2365               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  3991  004ED4  5162               	movf	wdtdelay@dcount& (0+255),w,b
  3992  004ED6  5C06               	subwf	wdtdelay@delay^0,w,c
  3993  004ED8  5163               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  3994  004EDA  5807               	subwfb	(wdtdelay@delay+1)^0,w,c
  3995  004EDC  5164               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  3996  004EDE  5808               	subwfb	(wdtdelay@delay+2)^0,w,c
  3997  004EE0  5165               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  3998  004EE2  5809               	subwfb	(wdtdelay@delay+3)^0,w,c
  3999  004EE4  A0D8               	btfss	status,0,c
  4000  004EE6  0012               	return	
  4001  004EE8  D7EC               	goto	l1265
  4002  004EEA                     __end_of_wdtdelay:
  4003                           	opt callstack 0
  4004                           
  4005 ;; *************** function _SPI1_Exchange8bit *****************
  4006 ;; Defined at:
  4007 ;;		line 79 in file "mcc_generated_files/spi1.c"
  4008 ;; Parameters:    Size  Location     Type
  4009 ;;  data            1    wreg     unsigned char 
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;  data            1    5[COMRAM] unsigned char 
  4012 ;; Return value:  Size  Location     Type
  4013 ;;                  1    wreg      unsigned char 
  4014 ;; Registers used:
  4015 ;;		wreg, status,2
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/1
  4018 ;;		On exit  : 3F/3D
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4022 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4024 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4025 ;;Total ram usage:        1 bytes
  4026 ;; Hardware stack levels used:    1
  4027 ;; Hardware stack levels required when called:    4
  4028 ;; This function calls:
  4029 ;;		Nothing
  4030 ;; This function is called by:
  4031 ;;		_send_lcd_cmd
  4032 ;;		_send_lcd_cmd_long
  4033 ;;		_eaDogM_WriteString
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           	psect	text16
  4038  00533E                     __ptext16:
  4039                           	opt callstack 0
  4040  00533E                     _SPI1_Exchange8bit:
  4041                           	opt callstack 23
  4042                           
  4043                           ; BSR set to: 1
  4044                           ;incstack = 0
  4045                           ;SPI1_Exchange8bit@data stored from wreg
  4046  00533E  6E06               	movwf	SPI1_Exchange8bit@data^0,c
  4047                           
  4048                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  4049  005340  0E01               	movlw	1
  4050  005342  013D               	movlb	61	; () banked
  4051  005344  6F12               	movwf	18,b	;volatile
  4052                           
  4053                           ; BSR set to: 61
  4054                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  4055  005346  0060  F01B  FD11   	movff	SPI1_Exchange8bit@data,15633	;volatile
  4056  00534C                     l989:
  4057                           
  4058                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  4059  00534C  0139               	movlb	57	; () banked
  4060  00534E  A9A2               	btfss	162,4,b	;volatile
  4061  005350  D7FD               	goto	l989
  4062                           
  4063                           ; BSR set to: 57
  4064                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  4065  005352  013D               	movlb	61	; () banked
  4066  005354  5110               	movf	16,w,b	;volatile
  4067                           
  4068                           ; BSR set to: 61
  4069  005356  0012               	return		;funcret
  4070  005358                     __end_of_SPI1_Exchange8bit:
  4071                           	opt callstack 0
  4072                           
  4073 ;; *************** function _SYSTEM_Initialize *****************
  4074 ;; Defined at:
  4075 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;		None
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;		None
  4080 ;; Return value:  Size  Location     Type
  4081 ;;                  1    wreg      void 
  4082 ;; Registers used:
  4083 ;;		wreg, status,2, status,0, cstack
  4084 ;; Tracked objects:
  4085 ;;		On entry : 3F/0
  4086 ;;		On exit  : 3F/3D
  4087 ;;		Unchanged: 0/0
  4088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4093 ;;Total ram usage:        0 bytes
  4094 ;; Hardware stack levels used:    1
  4095 ;; Hardware stack levels required when called:    6
  4096 ;; This function calls:
  4097 ;;		_ADCC_Initialize
  4098 ;;		_FVR_Initialize
  4099 ;;		_INTERRUPT_Initialize
  4100 ;;		_OSCILLATOR_Initialize
  4101 ;;		_PIN_MANAGER_Initialize
  4102 ;;		_PMD_Initialize
  4103 ;;		_PWM8_Initialize
  4104 ;;		_SPI1_Initialize
  4105 ;;		_TMR2_Initialize
  4106 ;;		_TMR5_Initialize
  4107 ;;		_TMR6_Initialize
  4108 ;;		_UART1_Initialize
  4109 ;;		_UART2_Initialize
  4110 ;; This function is called by:
  4111 ;;		_main
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           	psect	text17
  4116  004F90                     __ptext17:
  4117                           	opt callstack 0
  4118  004F90                     _SYSTEM_Initialize:
  4119                           	opt callstack 24
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  4123                           
  4124                           ; BSR set to: 61
  4125                           ;incstack = 0
  4126  004F90  EC74  F026         	call	_INTERRUPT_Initialize	;wreg free
  4127                           
  4128                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  4129  004F94  EC53  F029         	call	_PMD_Initialize	;wreg free
  4130                           
  4131                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4132  004F98  EC03  F023         	call	_PIN_MANAGER_Initialize	;wreg free
  4133                           
  4134                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4135  004F9C  EC83  F029         	call	_OSCILLATOR_Initialize	;wreg free
  4136                           
  4137                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  4138  004FA0  EC6C  F02A         	call	_FVR_Initialize	;wreg free
  4139                           
  4140                           ; BSR set to: 62
  4141                           ;mcc_generated_files/mcc.c: 57:     TMR6_Initialize();
  4142  004FA4  EC4A  F028         	call	_TMR6_Initialize	;wreg free
  4143                           
  4144                           ; BSR set to: 57
  4145                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
  4146  004FA8  ECA6  F025         	call	_ADCC_Initialize	;wreg free
  4147                           
  4148                           ;mcc_generated_files/mcc.c: 59:     TMR5_Initialize();
  4149  004FAC  EC2A  F026         	call	_TMR5_Initialize	;wreg free
  4150                           
  4151                           ; BSR set to: 57
  4152                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
  4153  004FB0  EC75  F029         	call	_TMR2_Initialize	;wreg free
  4154                           
  4155                           ; BSR set to: 57
  4156                           ;mcc_generated_files/mcc.c: 61:     PWM8_Initialize();
  4157  004FB4  ECC5  F029         	call	_PWM8_Initialize	;wreg free
  4158                           
  4159                           ;mcc_generated_files/mcc.c: 62:     UART2_Initialize();
  4160  004FB8  EC55  F022         	call	_UART2_Initialize	;wreg free
  4161                           
  4162                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
  4163  004FBC  ECA0  F021         	call	_UART1_Initialize	;wreg free
  4164                           
  4165                           ; BSR set to: 57
  4166                           ;mcc_generated_files/mcc.c: 64:     SPI1_Initialize();
  4167  004FC0  ECB9  F029         	call	_SPI1_Initialize	;wreg free
  4168                           
  4169                           ; BSR set to: 61
  4170  004FC4  0012               	return		;funcret
  4171  004FC6                     __end_of_SYSTEM_Initialize:
  4172                           	opt callstack 0
  4173                           
  4174 ;; *************** function _UART2_Initialize *****************
  4175 ;; Defined at:
  4176 ;;		line 87 in file "mcc_generated_files/uart2.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;		None
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;		None
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  1    wreg      void 
  4183 ;; Registers used:
  4184 ;;		wreg, status,2, status,0, cstack
  4185 ;; Tracked objects:
  4186 ;;		On entry : 3F/3F
  4187 ;;		On exit  : 3F/39
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4194 ;;Total ram usage:        0 bytes
  4195 ;; Hardware stack levels used:    1
  4196 ;; Hardware stack levels required when called:    5
  4197 ;; This function calls:
  4198 ;;		_UART2_SetErrorHandler
  4199 ;;		_UART2_SetFramingErrorHandler
  4200 ;;		_UART2_SetOverrunErrorHandler
  4201 ;;		_UART2_SetRxInterruptHandler
  4202 ;;		_UART2_SetTxInterruptHandler
  4203 ;; This function is called by:
  4204 ;;		_SYSTEM_Initialize
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           	psect	text18
  4209  0044AA                     __ptext18:
  4210                           	opt callstack 0
  4211  0044AA                     _UART2_Initialize:
  4212                           	opt callstack 24
  4213                           
  4214                           ; BSR set to: 63
  4215                           ;mcc_generated_files/uart2.c: 90:     PIE6bits.U2RXIE = 0;
  4216                           
  4217                           ; BSR set to: 61
  4218                           ;incstack = 0
  4219  0044AA  0139               	movlb	57	; () banked
  4220  0044AC  9596               	bcf	150,2,b	;volatile
  4221                           
  4222                           ; BSR set to: 57
  4223                           ;mcc_generated_files/uart2.c: 91:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
  4224  0044AE  0E50               	movlw	low _UART2_Receive_ISR
  4225  0044B0  6E06               	movwf	UART2_SetRxInterruptHandler@InterruptHandler^0,c
  4226  0044B2  0E47               	movlw	high _UART2_Receive_ISR
  4227  0044B4  6E07               	movwf	(UART2_SetRxInterruptHandler@InterruptHandler+1)^0,c
  4228  0044B6  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
  4229  0044B8  6E08               	movwf	(UART2_SetRxInterruptHandler@InterruptHandler+2)^0,c
  4230  0044BA  ECDB  F029         	call	_UART2_SetRxInterruptHandler	;wreg free
  4231                           
  4232                           ; BSR set to: 57
  4233                           ;mcc_generated_files/uart2.c: 92:     PIE6bits.U2TXIE = 0;
  4234  0044BE  9796               	bcf	150,3,b	;volatile
  4235                           
  4236                           ;mcc_generated_files/uart2.c: 93:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
  4237  0044C0  0E62               	movlw	low _UART2_Transmit_ISR
  4238  0044C2  6E06               	movwf	UART2_SetTxInterruptHandler@InterruptHandler^0,c
  4239  0044C4  0E50               	movlw	high _UART2_Transmit_ISR
  4240  0044C6  6E07               	movwf	(UART2_SetTxInterruptHandler@InterruptHandler+1)^0,c
  4241  0044C8  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
  4242  0044CA  6E08               	movwf	(UART2_SetTxInterruptHandler@InterruptHandler+2)^0,c
  4243  0044CC  ECD1  F029         	call	_UART2_SetTxInterruptHandler	;wreg free
  4244                           
  4245                           ; BSR set to: 57
  4246                           ;mcc_generated_files/uart2.c: 98:     U2P1L = 0x00;
  4247  0044D0  0E00               	movlw	0
  4248  0044D2  013D               	movlb	61	; () banked
  4249  0044D4  6FD4               	movwf	212,b	;volatile
  4250                           
  4251                           ; BSR set to: 61
  4252                           ;mcc_generated_files/uart2.c: 101:     U2P2L = 0x00;
  4253  0044D6  0E00               	movlw	0
  4254  0044D8  6FD6               	movwf	214,b	;volatile
  4255                           
  4256                           ; BSR set to: 61
  4257                           ;mcc_generated_files/uart2.c: 104:     U2P3L = 0x00;
  4258  0044DA  0E00               	movlw	0
  4259  0044DC  6FD8               	movwf	216,b	;volatile
  4260                           
  4261                           ; BSR set to: 61
  4262                           ;mcc_generated_files/uart2.c: 107:     U2CON0 = 0xB0;
  4263  0044DE  0EB0               	movlw	176
  4264  0044E0  6FDA               	movwf	218,b	;volatile
  4265                           
  4266                           ; BSR set to: 61
  4267                           ;mcc_generated_files/uart2.c: 110:     U2CON1 = 0x80;
  4268  0044E2  0E80               	movlw	128
  4269  0044E4  6FDB               	movwf	219,b	;volatile
  4270                           
  4271                           ; BSR set to: 61
  4272                           ;mcc_generated_files/uart2.c: 113:     U2CON2 = 0x00;
  4273  0044E6  0E00               	movlw	0
  4274  0044E8  6FDC               	movwf	220,b	;volatile
  4275                           
  4276                           ; BSR set to: 61
  4277                           ;mcc_generated_files/uart2.c: 116:     U2BRGL = 0x40;
  4278  0044EA  0E40               	movlw	64
  4279  0044EC  6FDD               	movwf	221,b	;volatile
  4280                           
  4281                           ; BSR set to: 61
  4282                           ;mcc_generated_files/uart2.c: 119:     U2BRGH = 0x03;
  4283  0044EE  0E03               	movlw	3
  4284  0044F0  6FDE               	movwf	222,b	;volatile
  4285                           
  4286                           ; BSR set to: 61
  4287                           ;mcc_generated_files/uart2.c: 122:     U2FIFO = 0x00;
  4288  0044F2  0E00               	movlw	0
  4289  0044F4  6FDF               	movwf	223,b	;volatile
  4290                           
  4291                           ; BSR set to: 61
  4292                           ;mcc_generated_files/uart2.c: 125:     U2UIR = 0x00;
  4293  0044F6  0E00               	movlw	0
  4294  0044F8  6FE0               	movwf	224,b	;volatile
  4295                           
  4296                           ; BSR set to: 61
  4297                           ;mcc_generated_files/uart2.c: 128:     U2ERRIR = 0x00;
  4298  0044FA  0E00               	movlw	0
  4299  0044FC  6FE1               	movwf	225,b	;volatile
  4300                           
  4301                           ; BSR set to: 61
  4302                           ;mcc_generated_files/uart2.c: 131:     U2ERRIE = 0x00;
  4303  0044FE  0E00               	movlw	0
  4304  004500  6FE2               	movwf	226,b	;volatile
  4305                           
  4306                           ;mcc_generated_files/uart2.c: 134:     UART2_SetFramingErrorHandler(UART2_DefaultFraming
      +                          ErrorHandler);
  4307  004502  0EFC               	movlw	low _UART2_DefaultFramingErrorHandler
  4308  004504  6E06               	movwf	UART2_SetFramingErrorHandler@interruptHandler^0,c
  4309  004506  0E54               	movlw	high _UART2_DefaultFramingErrorHandler
  4310  004508  6E07               	movwf	(UART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  4311  00450A  0E00               	movlw	low (_UART2_DefaultFramingErrorHandler shr (0+16))
  4312  00450C  6E08               	movwf	(UART2_SetFramingErrorHandler@interruptHandler+2)^0,c
  4313  00450E  ECEF  F029         	call	_UART2_SetFramingErrorHandler	;wreg free
  4314                           
  4315                           ;mcc_generated_files/uart2.c: 135:     UART2_SetOverrunErrorHandler(UART2_DefaultOverrun
      +                          ErrorHandler);
  4316  004512  0EFA               	movlw	low _UART2_DefaultOverrunErrorHandler
  4317  004514  6E06               	movwf	UART2_SetOverrunErrorHandler@interruptHandler^0,c
  4318  004516  0E54               	movlw	high _UART2_DefaultOverrunErrorHandler
  4319  004518  6E07               	movwf	(UART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  4320  00451A  0E00               	movlw	low (_UART2_DefaultOverrunErrorHandler shr (0+16))
  4321  00451C  6E08               	movwf	(UART2_SetOverrunErrorHandler@interruptHandler+2)^0,c
  4322  00451E  ECE5  F029         	call	_UART2_SetOverrunErrorHandler	;wreg free
  4323                           
  4324                           ;mcc_generated_files/uart2.c: 136:     UART2_SetErrorHandler(UART2_DefaultErrorHandler);
  4325  004522  0EEC               	movlw	low _UART2_DefaultErrorHandler
  4326  004524  6E06               	movwf	UART2_SetErrorHandler@interruptHandler^0,c
  4327  004526  0E54               	movlw	high _UART2_DefaultErrorHandler
  4328  004528  6E07               	movwf	(UART2_SetErrorHandler@interruptHandler+1)^0,c
  4329  00452A  0E00               	movlw	low (_UART2_DefaultErrorHandler shr (0+16))
  4330  00452C  6E08               	movwf	(UART2_SetErrorHandler@interruptHandler+2)^0,c
  4331  00452E  ECF9  F029         	call	_UART2_SetErrorHandler	;wreg free
  4332                           
  4333                           ; BSR set to: 61
  4334                           ;mcc_generated_files/uart2.c: 138:     uart2RxLastError.status = 0;
  4335  004532  0E00               	movlw	0
  4336  004534  0101               	movlb	1	; () banked
  4337  004536  6F94               	movwf	_uart2RxLastError& (0+255),b	;volatile
  4338                           
  4339                           ; BSR set to: 1
  4340                           ;mcc_generated_files/uart2.c: 141:     uart2TxHead = 0;
  4341  004538  0E00               	movlw	0
  4342  00453A  0100               	movlb	0	; () banked
  4343  00453C  6FA6               	movwf	_uart2TxHead& (0+255),b	;volatile
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;mcc_generated_files/uart2.c: 142:     uart2TxTail = 0;
  4347  00453E  0E00               	movlw	0
  4348  004540  6FA5               	movwf	_uart2TxTail& (0+255),b	;volatile
  4349                           
  4350                           ; BSR set to: 0
  4351                           ;mcc_generated_files/uart2.c: 143:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
  4352  004542  0E08               	movlw	8
  4353  004544  6FA4               	movwf	_uart2TxBufferRemaining& (0+255),b	;volatile
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;mcc_generated_files/uart2.c: 144:     uart2RxHead = 0;
  4357  004546  0E00               	movlw	0
  4358  004548  6E59               	movwf	_uart2RxHead^0,c	;volatile
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;mcc_generated_files/uart2.c: 145:     uart2RxTail = 0;
  4362  00454A  0E00               	movlw	0
  4363  00454C  6E58               	movwf	_uart2RxTail^0,c	;volatile
  4364                           
  4365                           ; BSR set to: 0
  4366                           ;mcc_generated_files/uart2.c: 146:     uart2RxCount = 0;
  4367  00454E  0E00               	movlw	0
  4368  004550  6FA3               	movwf	_uart2RxCount& (0+255),b	;volatile
  4369                           
  4370                           ; BSR set to: 0
  4371                           ;mcc_generated_files/uart2.c: 149:     PIE6bits.U2RXIE = 1;
  4372  004552  0139               	movlb	57	; () banked
  4373  004554  8596               	bsf	150,2,b	;volatile
  4374                           
  4375                           ; BSR set to: 57
  4376  004556  0012               	return		;funcret
  4377  004558                     __end_of_UART2_Initialize:
  4378                           	opt callstack 0
  4379                           
  4380 ;; *************** function _UART2_SetTxInterruptHandler *****************
  4381 ;; Defined at:
  4382 ;;		line 324 in file "mcc_generated_files/uart2.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  4385 ;;		 -> UART2_Transmit_ISR(1), 
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;		None
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  1    wreg      void 
  4390 ;; Registers used:
  4391 ;;		wreg, status,2, status,0
  4392 ;; Tracked objects:
  4393 ;;		On entry : 3F/39
  4394 ;;		On exit  : 3F/39
  4395 ;;		Unchanged: 3E/0
  4396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4397 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4400 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4401 ;;Total ram usage:        3 bytes
  4402 ;; Hardware stack levels used:    1
  4403 ;; Hardware stack levels required when called:    4
  4404 ;; This function calls:
  4405 ;;		Nothing
  4406 ;; This function is called by:
  4407 ;;		_UART2_Initialize
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           	psect	text19
  4412  0053A2                     __ptext19:
  4413                           	opt callstack 0
  4414  0053A2                     _UART2_SetTxInterruptHandler:
  4415                           	opt callstack 24
  4416                           
  4417                           ; BSR set to: 57
  4418                           ;mcc_generated_files/uart2.c: 325:     UART2_TxInterruptHandler = InterruptHandler;
  4419                           
  4420                           ; BSR set to: 57
  4421                           ;incstack = 0
  4422  0053A2  0060  F018  F184   	movff	UART2_SetTxInterruptHandler@InterruptHandler,_UART2_TxInterruptHandler
  4423  0053A8  0060  F01C  F185   	movff	UART2_SetTxInterruptHandler@InterruptHandler+1,_UART2_TxInterruptHandler+1
  4424  0053AE  0060  F020  F186   	movff	UART2_SetTxInterruptHandler@InterruptHandler+2,_UART2_TxInterruptHandler+2
  4425                           
  4426                           ; BSR set to: 57
  4427  0053B4  0012               	return		;funcret
  4428  0053B6                     __end_of_UART2_SetTxInterruptHandler:
  4429                           	opt callstack 0
  4430                           
  4431 ;; *************** function _UART2_SetRxInterruptHandler *****************
  4432 ;; Defined at:
  4433 ;;		line 320 in file "mcc_generated_files/uart2.c"
  4434 ;; Parameters:    Size  Location     Type
  4435 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  4436 ;;		 -> UART2_Receive_ISR(1), 
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;		None
  4439 ;; Return value:  Size  Location     Type
  4440 ;;                  1    wreg      void 
  4441 ;; Registers used:
  4442 ;;		wreg, status,2, status,0
  4443 ;; Tracked objects:
  4444 ;;		On entry : 3F/39
  4445 ;;		On exit  : 3F/39
  4446 ;;		Unchanged: 3E/0
  4447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4448 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4451 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4452 ;;Total ram usage:        3 bytes
  4453 ;; Hardware stack levels used:    1
  4454 ;; Hardware stack levels required when called:    4
  4455 ;; This function calls:
  4456 ;;		Nothing
  4457 ;; This function is called by:
  4458 ;;		_UART2_Initialize
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           	psect	text20
  4463  0053B6                     __ptext20:
  4464                           	opt callstack 0
  4465  0053B6                     _UART2_SetRxInterruptHandler:
  4466                           	opt callstack 24
  4467                           
  4468                           ; BSR set to: 57
  4469                           ;mcc_generated_files/uart2.c: 321:     UART2_RxInterruptHandler = InterruptHandler;
  4470                           
  4471                           ; BSR set to: 57
  4472                           ;incstack = 0
  4473  0053B6  0060  F018  F187   	movff	UART2_SetRxInterruptHandler@InterruptHandler,_UART2_RxInterruptHandler
  4474  0053BC  0060  F01C  F188   	movff	UART2_SetRxInterruptHandler@InterruptHandler+1,_UART2_RxInterruptHandler+1
  4475  0053C2  0060  F020  F189   	movff	UART2_SetRxInterruptHandler@InterruptHandler+2,_UART2_RxInterruptHandler+2
  4476                           
  4477                           ; BSR set to: 57
  4478  0053C8  0012               	return		;funcret
  4479  0053CA                     __end_of_UART2_SetRxInterruptHandler:
  4480                           	opt callstack 0
  4481                           
  4482 ;; *************** function _UART2_SetOverrunErrorHandler *****************
  4483 ;; Defined at:
  4484 ;;		line 310 in file "mcc_generated_files/uart2.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  4487 ;;		 -> UART2_DefaultOverrunErrorHandler(1), 
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;		None
  4490 ;; Return value:  Size  Location     Type
  4491 ;;                  1    wreg      void 
  4492 ;; Registers used:
  4493 ;;		wreg, status,2, status,0
  4494 ;; Tracked objects:
  4495 ;;		On entry : 3F/3D
  4496 ;;		On exit  : 3F/3D
  4497 ;;		Unchanged: 3E/0
  4498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4499 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4502 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4503 ;;Total ram usage:        3 bytes
  4504 ;; Hardware stack levels used:    1
  4505 ;; Hardware stack levels required when called:    4
  4506 ;; This function calls:
  4507 ;;		Nothing
  4508 ;; This function is called by:
  4509 ;;		_UART2_Initialize
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513                           	psect	text21
  4514  0053CA                     __ptext21:
  4515                           	opt callstack 0
  4516  0053CA                     _UART2_SetOverrunErrorHandler:
  4517                           	opt callstack 24
  4518                           
  4519                           ; BSR set to: 61
  4520                           ;mcc_generated_files/uart2.c: 311:     UART2_OverrunErrorHandler = interruptHandler;
  4521                           
  4522                           ; BSR set to: 57
  4523                           ;incstack = 0
  4524  0053CA  0060  F018  F16F   	movff	UART2_SetOverrunErrorHandler@interruptHandler,_UART2_OverrunErrorHandler
  4525  0053D0  0060  F01C  F170   	movff	UART2_SetOverrunErrorHandler@interruptHandler+1,_UART2_OverrunErrorHandler+1
  4526  0053D6  0060  F020  F171   	movff	UART2_SetOverrunErrorHandler@interruptHandler+2,_UART2_OverrunErrorHandler+2
  4527                           
  4528                           ; BSR set to: 61
  4529  0053DC  0012               	return		;funcret
  4530  0053DE                     __end_of_UART2_SetOverrunErrorHandler:
  4531                           	opt callstack 0
  4532                           
  4533 ;; *************** function _UART2_SetFramingErrorHandler *****************
  4534 ;; Defined at:
  4535 ;;		line 306 in file "mcc_generated_files/uart2.c"
  4536 ;; Parameters:    Size  Location     Type
  4537 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  4538 ;;		 -> UART2_DefaultFramingErrorHandler(1), 
  4539 ;; Auto vars:     Size  Location     Type
  4540 ;;		None
  4541 ;; Return value:  Size  Location     Type
  4542 ;;                  1    wreg      void 
  4543 ;; Registers used:
  4544 ;;		wreg, status,2, status,0
  4545 ;; Tracked objects:
  4546 ;;		On entry : 3F/3D
  4547 ;;		On exit  : 3F/3D
  4548 ;;		Unchanged: 3E/0
  4549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4550 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4553 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4554 ;;Total ram usage:        3 bytes
  4555 ;; Hardware stack levels used:    1
  4556 ;; Hardware stack levels required when called:    4
  4557 ;; This function calls:
  4558 ;;		Nothing
  4559 ;; This function is called by:
  4560 ;;		_UART2_Initialize
  4561 ;; This function uses a non-reentrant model
  4562 ;;
  4563                           
  4564                           	psect	text22
  4565  0053DE                     __ptext22:
  4566                           	opt callstack 0
  4567  0053DE                     _UART2_SetFramingErrorHandler:
  4568                           	opt callstack 24
  4569                           
  4570                           ; BSR set to: 61
  4571                           ;mcc_generated_files/uart2.c: 307:     UART2_FramingErrorHandler = interruptHandler;
  4572                           
  4573                           ; BSR set to: 61
  4574                           ;incstack = 0
  4575  0053DE  0060  F018  F172   	movff	UART2_SetFramingErrorHandler@interruptHandler,_UART2_FramingErrorHandler
  4576  0053E4  0060  F01C  F173   	movff	UART2_SetFramingErrorHandler@interruptHandler+1,_UART2_FramingErrorHandler+1
  4577  0053EA  0060  F020  F174   	movff	UART2_SetFramingErrorHandler@interruptHandler+2,_UART2_FramingErrorHandler+2
  4578                           
  4579                           ; BSR set to: 61
  4580  0053F0  0012               	return		;funcret
  4581  0053F2                     __end_of_UART2_SetFramingErrorHandler:
  4582                           	opt callstack 0
  4583                           
  4584 ;; *************** function _UART2_SetErrorHandler *****************
  4585 ;; Defined at:
  4586 ;;		line 314 in file "mcc_generated_files/uart2.c"
  4587 ;; Parameters:    Size  Location     Type
  4588 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  4589 ;;		 -> UART2_DefaultErrorHandler(1), 
  4590 ;; Auto vars:     Size  Location     Type
  4591 ;;		None
  4592 ;; Return value:  Size  Location     Type
  4593 ;;                  1    wreg      void 
  4594 ;; Registers used:
  4595 ;;		wreg, status,2, status,0
  4596 ;; Tracked objects:
  4597 ;;		On entry : 3F/3D
  4598 ;;		On exit  : 3F/3D
  4599 ;;		Unchanged: 3E/0
  4600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4601 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4604 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4605 ;;Total ram usage:        3 bytes
  4606 ;; Hardware stack levels used:    1
  4607 ;; Hardware stack levels required when called:    4
  4608 ;; This function calls:
  4609 ;;		Nothing
  4610 ;; This function is called by:
  4611 ;;		_UART2_Initialize
  4612 ;; This function uses a non-reentrant model
  4613 ;;
  4614                           
  4615                           	psect	text23
  4616  0053F2                     __ptext23:
  4617                           	opt callstack 0
  4618  0053F2                     _UART2_SetErrorHandler:
  4619                           	opt callstack 24
  4620                           
  4621                           ; BSR set to: 61
  4622                           ;mcc_generated_files/uart2.c: 315:     UART2_ErrorHandler = interruptHandler;
  4623                           
  4624                           ; BSR set to: 61
  4625                           ;incstack = 0
  4626  0053F2  0060  F018  F16C   	movff	UART2_SetErrorHandler@interruptHandler,_UART2_ErrorHandler
  4627  0053F8  0060  F01C  F16D   	movff	UART2_SetErrorHandler@interruptHandler+1,_UART2_ErrorHandler+1
  4628  0053FE  0060  F020  F16E   	movff	UART2_SetErrorHandler@interruptHandler+2,_UART2_ErrorHandler+2
  4629                           
  4630                           ; BSR set to: 61
  4631  005404  0012               	return		;funcret
  4632  005406                     __end_of_UART2_SetErrorHandler:
  4633                           	opt callstack 0
  4634                           
  4635 ;; *************** function _UART1_Initialize *****************
  4636 ;; Defined at:
  4637 ;;		line 87 in file "mcc_generated_files/uart1.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;		None
  4640 ;; Auto vars:     Size  Location     Type
  4641 ;;		None
  4642 ;; Return value:  Size  Location     Type
  4643 ;;                  1    wreg      void 
  4644 ;; Registers used:
  4645 ;;		wreg, status,2, status,0, cstack
  4646 ;; Tracked objects:
  4647 ;;		On entry : 3F/39
  4648 ;;		On exit  : 3F/39
  4649 ;;		Unchanged: 0/0
  4650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4655 ;;Total ram usage:        0 bytes
  4656 ;; Hardware stack levels used:    1
  4657 ;; Hardware stack levels required when called:    5
  4658 ;; This function calls:
  4659 ;;		_UART1_SetErrorHandler
  4660 ;;		_UART1_SetFramingErrorHandler
  4661 ;;		_UART1_SetOverrunErrorHandler
  4662 ;;		_UART1_SetRxInterruptHandler
  4663 ;;		_UART1_SetTxInterruptHandler
  4664 ;; This function is called by:
  4665 ;;		_SYSTEM_Initialize
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           	psect	text24
  4670  004340                     __ptext24:
  4671                           	opt callstack 0
  4672  004340                     _UART1_Initialize:
  4673                           	opt callstack 24
  4674                           
  4675                           ; BSR set to: 57
  4676                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
  4677                           
  4678                           ; BSR set to: 61
  4679                           ;incstack = 0
  4680  004340  9793               	bcf	147,3,b	;volatile
  4681                           
  4682                           ; BSR set to: 57
  4683                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  4684  004342  0EB2               	movlw	low _UART1_Receive_ISR
  4685  004344  6E06               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
  4686  004346  0E46               	movlw	high _UART1_Receive_ISR
  4687  004348  6E07               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
  4688  00434A  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
  4689  00434C  6E08               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+2)^0,c
  4690  00434E  EC0D  F02A         	call	_UART1_SetRxInterruptHandler	;wreg free
  4691                           
  4692                           ; BSR set to: 57
  4693                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
  4694  004352  9993               	bcf	147,4,b	;volatile
  4695                           
  4696                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  4697  004354  0E30               	movlw	low _UART1_Transmit_ISR
  4698  004356  6E06               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
  4699  004358  0E50               	movlw	high _UART1_Transmit_ISR
  4700  00435A  6E07               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
  4701  00435C  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
  4702  00435E  6E08               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+2)^0,c
  4703  004360  EC03  F02A         	call	_UART1_SetTxInterruptHandler	;wreg free
  4704                           
  4705                           ; BSR set to: 57
  4706                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
  4707  004364  0E00               	movlw	0
  4708  004366  013D               	movlb	61	; () banked
  4709  004368  6FEC               	movwf	236,b	;volatile
  4710                           
  4711                           ; BSR set to: 61
  4712                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
  4713  00436A  0E00               	movlw	0
  4714  00436C  6FED               	movwf	237,b	;volatile
  4715                           
  4716                           ; BSR set to: 61
  4717                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
  4718  00436E  0E00               	movlw	0
  4719  004370  6FEE               	movwf	238,b	;volatile
  4720                           
  4721                           ; BSR set to: 61
  4722                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
  4723  004372  0E00               	movlw	0
  4724  004374  6FEF               	movwf	239,b	;volatile
  4725                           
  4726                           ; BSR set to: 61
  4727                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
  4728  004376  0E00               	movlw	0
  4729  004378  6FF0               	movwf	240,b	;volatile
  4730                           
  4731                           ; BSR set to: 61
  4732                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
  4733  00437A  0E00               	movlw	0
  4734  00437C  6FF1               	movwf	241,b	;volatile
  4735                           
  4736                           ; BSR set to: 61
  4737                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0x90;
  4738  00437E  0E90               	movlw	144
  4739  004380  6FF2               	movwf	242,b	;volatile
  4740                           
  4741                           ; BSR set to: 61
  4742                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
  4743  004382  0E80               	movlw	128
  4744  004384  6FF3               	movwf	243,b	;volatile
  4745                           
  4746                           ; BSR set to: 61
  4747                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
  4748  004386  0E00               	movlw	0
  4749  004388  6FF4               	movwf	244,b	;volatile
  4750                           
  4751                           ; BSR set to: 61
  4752                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x40;
  4753  00438A  0E40               	movlw	64
  4754  00438C  6FF5               	movwf	245,b	;volatile
  4755                           
  4756                           ; BSR set to: 61
  4757                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x03;
  4758  00438E  0E03               	movlw	3
  4759  004390  6FF6               	movwf	246,b	;volatile
  4760                           
  4761                           ; BSR set to: 61
  4762                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
  4763  004392  0E00               	movlw	0
  4764  004394  6FF7               	movwf	247,b	;volatile
  4765                           
  4766                           ; BSR set to: 61
  4767                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
  4768  004396  0E00               	movlw	0
  4769  004398  6FF8               	movwf	248,b	;volatile
  4770                           
  4771                           ; BSR set to: 61
  4772                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
  4773  00439A  0E00               	movlw	0
  4774  00439C  6FF9               	movwf	249,b	;volatile
  4775                           
  4776                           ; BSR set to: 61
  4777                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
  4778  00439E  0E00               	movlw	0
  4779  0043A0  6FFA               	movwf	250,b	;volatile
  4780                           
  4781                           ; BSR set to: 61
  4782                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  4783  0043A2  0EF8               	movlw	low _UART1_DefaultFramingErrorHandler
  4784  0043A4  6E06               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  4785  0043A6  0E54               	movlw	high _UART1_DefaultFramingErrorHandler
  4786  0043A8  6E07               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  4787  0043AA  0E00               	movlw	low (_UART1_DefaultFramingErrorHandler shr (0+16))
  4788  0043AC  6E08               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+2)^0,c
  4789  0043AE  EC21  F02A         	call	_UART1_SetFramingErrorHandler	;wreg free
  4790                           
  4791                           ; BSR set to: 61
  4792                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  4793  0043B2  0EF6               	movlw	low _UART1_DefaultOverrunErrorHandler
  4794  0043B4  6E06               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  4795  0043B6  0E54               	movlw	high _UART1_DefaultOverrunErrorHandler
  4796  0043B8  6E07               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  4797  0043BA  0E00               	movlw	low (_UART1_DefaultOverrunErrorHandler shr (0+16))
  4798  0043BC  6E08               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+2)^0,c
  4799  0043BE  EC17  F02A         	call	_UART1_SetOverrunErrorHandler	;wreg free
  4800                           
  4801                           ; BSR set to: 61
  4802                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  4803  0043C2  0EE6               	movlw	low _UART1_DefaultErrorHandler
  4804  0043C4  6E06               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  4805  0043C6  0E54               	movlw	high _UART1_DefaultErrorHandler
  4806  0043C8  6E07               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  4807  0043CA  0E00               	movlw	low (_UART1_DefaultErrorHandler shr (0+16))
  4808  0043CC  6E08               	movwf	(UART1_SetErrorHandler@interruptHandler+2)^0,c
  4809  0043CE  EC2B  F02A         	call	_UART1_SetErrorHandler	;wreg free
  4810                           
  4811                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
  4812  0043D2  0E00               	movlw	0
  4813  0043D4  0101               	movlb	1	; () banked
  4814  0043D6  6F95               	movwf	_uart1RxLastError& (0+255),b	;volatile
  4815                           
  4816                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
  4817  0043D8  0E00               	movlw	0
  4818  0043DA  0100               	movlb	0	; () banked
  4819  0043DC  6FAB               	movwf	_uart1TxHead& (0+255),b	;volatile
  4820                           
  4821                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
  4822  0043DE  0E00               	movlw	0
  4823  0043E0  6FAA               	movwf	_uart1TxTail& (0+255),b	;volatile
  4824                           
  4825                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  4826  0043E2  0E08               	movlw	8
  4827  0043E4  6FA9               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
  4828                           
  4829                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
  4830  0043E6  0E00               	movlw	0
  4831  0043E8  6E5A               	movwf	_uart1RxHead^0,c	;volatile
  4832                           
  4833                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
  4834  0043EA  0E00               	movlw	0
  4835  0043EC  6FA8               	movwf	_uart1RxTail& (0+255),b	;volatile
  4836                           
  4837                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
  4838  0043EE  0E00               	movlw	0
  4839  0043F0  6FA7               	movwf	_uart1RxCount& (0+255),b	;volatile
  4840                           
  4841                           ; BSR set to: 0
  4842                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
  4843  0043F2  0139               	movlb	57	; () banked
  4844  0043F4  8793               	bsf	147,3,b	;volatile
  4845                           
  4846                           ; BSR set to: 57
  4847  0043F6  0012               	return		;funcret
  4848  0043F8                     __end_of_UART1_Initialize:
  4849                           	opt callstack 0
  4850                           
  4851 ;; *************** function _UART1_SetTxInterruptHandler *****************
  4852 ;; Defined at:
  4853 ;;		line 323 in file "mcc_generated_files/uart1.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  4856 ;;		 -> UART1_Transmit_ISR(1), 
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;		None
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  1    wreg      void 
  4861 ;; Registers used:
  4862 ;;		wreg, status,2, status,0
  4863 ;; Tracked objects:
  4864 ;;		On entry : 3F/39
  4865 ;;		On exit  : 3F/39
  4866 ;;		Unchanged: 3E/0
  4867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4868 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4871 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4872 ;;Total ram usage:        3 bytes
  4873 ;; Hardware stack levels used:    1
  4874 ;; Hardware stack levels required when called:    4
  4875 ;; This function calls:
  4876 ;;		Nothing
  4877 ;; This function is called by:
  4878 ;;		_UART1_Initialize
  4879 ;; This function uses a non-reentrant model
  4880 ;;
  4881                           
  4882                           	psect	text25
  4883  005406                     __ptext25:
  4884                           	opt callstack 0
  4885  005406                     _UART1_SetTxInterruptHandler:
  4886                           	opt callstack 24
  4887                           
  4888                           ; BSR set to: 57
  4889                           ;mcc_generated_files/uart1.c: 324:     UART1_TxInterruptHandler = InterruptHandler;
  4890                           
  4891                           ; BSR set to: 57
  4892                           ;incstack = 0
  4893  005406  0060  F018  F17E   	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  4894  00540C  0060  F01C  F17F   	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  4895  005412  0060  F020  F180   	movff	UART1_SetTxInterruptHandler@InterruptHandler+2,_UART1_TxInterruptHandler+2
  4896                           
  4897                           ; BSR set to: 57
  4898  005418  0012               	return		;funcret
  4899  00541A                     __end_of_UART1_SetTxInterruptHandler:
  4900                           	opt callstack 0
  4901                           
  4902 ;; *************** function _UART1_SetRxInterruptHandler *****************
  4903 ;; Defined at:
  4904 ;;		line 319 in file "mcc_generated_files/uart1.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  4907 ;;		 -> UART1_Receive_ISR(1), 
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;		None
  4910 ;; Return value:  Size  Location     Type
  4911 ;;                  1    wreg      void 
  4912 ;; Registers used:
  4913 ;;		wreg, status,2, status,0
  4914 ;; Tracked objects:
  4915 ;;		On entry : 3F/39
  4916 ;;		On exit  : 3F/39
  4917 ;;		Unchanged: 3E/0
  4918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4919 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4922 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4923 ;;Total ram usage:        3 bytes
  4924 ;; Hardware stack levels used:    1
  4925 ;; Hardware stack levels required when called:    4
  4926 ;; This function calls:
  4927 ;;		Nothing
  4928 ;; This function is called by:
  4929 ;;		_UART1_Initialize
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           	psect	text26
  4934  00541A                     __ptext26:
  4935                           	opt callstack 0
  4936  00541A                     _UART1_SetRxInterruptHandler:
  4937                           	opt callstack 24
  4938                           
  4939                           ; BSR set to: 57
  4940                           ;mcc_generated_files/uart1.c: 320:     UART1_RxInterruptHandler = InterruptHandler;
  4941                           
  4942                           ; BSR set to: 57
  4943                           ;incstack = 0
  4944  00541A  0060  F018  F181   	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  4945  005420  0060  F01C  F182   	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  4946  005426  0060  F020  F183   	movff	UART1_SetRxInterruptHandler@InterruptHandler+2,_UART1_RxInterruptHandler+2
  4947                           
  4948                           ; BSR set to: 57
  4949  00542C  0012               	return		;funcret
  4950  00542E                     __end_of_UART1_SetRxInterruptHandler:
  4951                           	opt callstack 0
  4952                           
  4953 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  4954 ;; Defined at:
  4955 ;;		line 309 in file "mcc_generated_files/uart1.c"
  4956 ;; Parameters:    Size  Location     Type
  4957 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  4958 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  4959 ;; Auto vars:     Size  Location     Type
  4960 ;;		None
  4961 ;; Return value:  Size  Location     Type
  4962 ;;                  1    wreg      void 
  4963 ;; Registers used:
  4964 ;;		wreg, status,2, status,0
  4965 ;; Tracked objects:
  4966 ;;		On entry : 3F/3D
  4967 ;;		On exit  : 3F/3D
  4968 ;;		Unchanged: 3E/0
  4969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4970 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4973 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4974 ;;Total ram usage:        3 bytes
  4975 ;; Hardware stack levels used:    1
  4976 ;; Hardware stack levels required when called:    4
  4977 ;; This function calls:
  4978 ;;		Nothing
  4979 ;; This function is called by:
  4980 ;;		_UART1_Initialize
  4981 ;; This function uses a non-reentrant model
  4982 ;;
  4983                           
  4984                           	psect	text27
  4985  00542E                     __ptext27:
  4986                           	opt callstack 0
  4987  00542E                     _UART1_SetOverrunErrorHandler:
  4988                           	opt callstack 24
  4989                           
  4990                           ; BSR set to: 61
  4991                           ;mcc_generated_files/uart1.c: 310:     UART1_OverrunErrorHandler = interruptHandler;
  4992                           
  4993                           ; BSR set to: 57
  4994                           ;incstack = 0
  4995  00542E  0060  F018  F178   	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  4996  005434  0060  F01C  F179   	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  4997  00543A  0060  F020  F17A   	movff	UART1_SetOverrunErrorHandler@interruptHandler+2,_UART1_OverrunErrorHandler+2
  4998                           
  4999                           ; BSR set to: 61
  5000  005440  0012               	return		;funcret
  5001  005442                     __end_of_UART1_SetOverrunErrorHandler:
  5002                           	opt callstack 0
  5003                           
  5004 ;; *************** function _UART1_SetFramingErrorHandler *****************
  5005 ;; Defined at:
  5006 ;;		line 305 in file "mcc_generated_files/uart1.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  5009 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;		None
  5012 ;; Return value:  Size  Location     Type
  5013 ;;                  1    wreg      void 
  5014 ;; Registers used:
  5015 ;;		wreg, status,2, status,0
  5016 ;; Tracked objects:
  5017 ;;		On entry : 3F/3D
  5018 ;;		On exit  : 3F/3D
  5019 ;;		Unchanged: 3E/0
  5020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5021 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5024 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5025 ;;Total ram usage:        3 bytes
  5026 ;; Hardware stack levels used:    1
  5027 ;; Hardware stack levels required when called:    4
  5028 ;; This function calls:
  5029 ;;		Nothing
  5030 ;; This function is called by:
  5031 ;;		_UART1_Initialize
  5032 ;; This function uses a non-reentrant model
  5033 ;;
  5034                           
  5035                           	psect	text28
  5036  005442                     __ptext28:
  5037                           	opt callstack 0
  5038  005442                     _UART1_SetFramingErrorHandler:
  5039                           	opt callstack 24
  5040                           
  5041                           ; BSR set to: 61
  5042                           ;mcc_generated_files/uart1.c: 306:     UART1_FramingErrorHandler = interruptHandler;
  5043                           
  5044                           ; BSR set to: 61
  5045                           ;incstack = 0
  5046  005442  0060  F018  F17B   	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  5047  005448  0060  F01C  F17C   	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  5048  00544E  0060  F020  F17D   	movff	UART1_SetFramingErrorHandler@interruptHandler+2,_UART1_FramingErrorHandler+2
  5049                           
  5050                           ; BSR set to: 61
  5051  005454  0012               	return		;funcret
  5052  005456                     __end_of_UART1_SetFramingErrorHandler:
  5053                           	opt callstack 0
  5054                           
  5055 ;; *************** function _UART1_SetErrorHandler *****************
  5056 ;; Defined at:
  5057 ;;		line 313 in file "mcc_generated_files/uart1.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  5060 ;;		 -> UART1_DefaultErrorHandler(1), 
  5061 ;; Auto vars:     Size  Location     Type
  5062 ;;		None
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  1    wreg      void 
  5065 ;; Registers used:
  5066 ;;		wreg, status,2, status,0
  5067 ;; Tracked objects:
  5068 ;;		On entry : 3F/3D
  5069 ;;		On exit  : 3F/3D
  5070 ;;		Unchanged: 3E/0
  5071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5072 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5075 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5076 ;;Total ram usage:        3 bytes
  5077 ;; Hardware stack levels used:    1
  5078 ;; Hardware stack levels required when called:    4
  5079 ;; This function calls:
  5080 ;;		Nothing
  5081 ;; This function is called by:
  5082 ;;		_UART1_Initialize
  5083 ;; This function uses a non-reentrant model
  5084 ;;
  5085                           
  5086                           	psect	text29
  5087  005456                     __ptext29:
  5088                           	opt callstack 0
  5089  005456                     _UART1_SetErrorHandler:
  5090                           	opt callstack 24
  5091                           
  5092                           ; BSR set to: 61
  5093                           ;mcc_generated_files/uart1.c: 314:     UART1_ErrorHandler = interruptHandler;
  5094                           
  5095                           ; BSR set to: 61
  5096                           ;incstack = 0
  5097  005456  0060  F018  F175   	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  5098  00545C  0060  F01C  F176   	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  5099  005462  0060  F020  F177   	movff	UART1_SetErrorHandler@interruptHandler+2,_UART1_ErrorHandler+2
  5100                           
  5101                           ; BSR set to: 61
  5102  005468  0012               	return		;funcret
  5103  00546A                     __end_of_UART1_SetErrorHandler:
  5104                           	opt callstack 0
  5105                           
  5106 ;; *************** function _TMR6_Initialize *****************
  5107 ;; Defined at:
  5108 ;;		line 67 in file "mcc_generated_files/tmr6.c"
  5109 ;; Parameters:    Size  Location     Type
  5110 ;;		None
  5111 ;; Auto vars:     Size  Location     Type
  5112 ;;		None
  5113 ;; Return value:  Size  Location     Type
  5114 ;;                  1    wreg      void 
  5115 ;; Registers used:
  5116 ;;		wreg, status,2, status,0, cstack
  5117 ;; Tracked objects:
  5118 ;;		On entry : 3F/3E
  5119 ;;		On exit  : 3F/39
  5120 ;;		Unchanged: 0/0
  5121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5126 ;;Total ram usage:        0 bytes
  5127 ;; Hardware stack levels used:    1
  5128 ;; Hardware stack levels required when called:    5
  5129 ;; This function calls:
  5130 ;;		_TMR6_SetInterruptHandler
  5131 ;; This function is called by:
  5132 ;;		_SYSTEM_Initialize
  5133 ;; This function uses a non-reentrant model
  5134 ;;
  5135                           
  5136                           	psect	text30
  5137  005094                     __ptext30:
  5138                           	opt callstack 0
  5139  005094                     _TMR6_Initialize:
  5140                           	opt callstack 24
  5141                           
  5142                           ; BSR set to: 62
  5143                           ;mcc_generated_files/tmr6.c: 72:  T6CLKCON = 0x01;
  5144                           
  5145                           ; BSR set to: 61
  5146                           ;incstack = 0
  5147  005094  0E01               	movlw	1
  5148  005096  6E96               	movwf	150,c	;volatile
  5149                           
  5150                           ;mcc_generated_files/tmr6.c: 75:  T6HLT = 0x00;
  5151  005098  0E00               	movlw	0
  5152  00509A  6E95               	movwf	149,c	;volatile
  5153                           
  5154                           ;mcc_generated_files/tmr6.c: 78:  T6RST = 0x00;
  5155  00509C  0E00               	movlw	0
  5156  00509E  6E97               	movwf	151,c	;volatile
  5157                           
  5158                           ;mcc_generated_files/tmr6.c: 81:  T6PR = 0x03;
  5159  0050A0  0E03               	movlw	3
  5160  0050A2  6E93               	movwf	147,c	;volatile
  5161                           
  5162                           ;mcc_generated_files/tmr6.c: 84:  T6TMR = 0x00;
  5163  0050A4  0E00               	movlw	0
  5164  0050A6  6E92               	movwf	146,c	;volatile
  5165                           
  5166                           ; BSR set to: 62
  5167                           ;mcc_generated_files/tmr6.c: 87:  PIR9bits.TMR6IF = 0;
  5168  0050A8  0139               	movlb	57	; () banked
  5169  0050AA  91A9               	bcf	169,0,b	;volatile
  5170                           
  5171                           ; BSR set to: 57
  5172                           ;mcc_generated_files/tmr6.c: 90:  PIE9bits.TMR6IE = 1;
  5173  0050AC  8199               	bsf	153,0,b	;volatile
  5174                           
  5175                           ; BSR set to: 57
  5176                           ;mcc_generated_files/tmr6.c: 93:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
  5177  0050AE  0E74               	movlw	low _TMR6_DefaultInterruptHandler
  5178  0050B0  6E06               	movwf	TMR6_SetInterruptHandler@InterruptHandler^0,c
  5179  0050B2  0E4E               	movlw	high _TMR6_DefaultInterruptHandler
  5180  0050B4  6E07               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)^0,c
  5181  0050B6  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
  5182  0050B8  6E08               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)^0,c
  5183  0050BA  EC35  F02A         	call	_TMR6_SetInterruptHandler	;wreg free
  5184                           
  5185                           ; BSR set to: 57
  5186                           ;mcc_generated_files/tmr6.c: 96:  T6CON = 0xFF;
  5187  0050BE  6894               	setf	148,c	;volatile
  5188                           
  5189                           ; BSR set to: 57
  5190  0050C0  0012               	return		;funcret
  5191  0050C2                     __end_of_TMR6_Initialize:
  5192                           	opt callstack 0
  5193                           
  5194 ;; *************** function _TMR6_SetInterruptHandler *****************
  5195 ;; Defined at:
  5196 ;;		line 179 in file "mcc_generated_files/tmr6.c"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  5199 ;;		 -> TMR6_DefaultInterruptHandler(1), 
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;		None
  5202 ;; Return value:  Size  Location     Type
  5203 ;;                  1    wreg      void 
  5204 ;; Registers used:
  5205 ;;		wreg, status,2, status,0
  5206 ;; Tracked objects:
  5207 ;;		On entry : 3F/39
  5208 ;;		On exit  : 3F/39
  5209 ;;		Unchanged: 3E/0
  5210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5211 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5214 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5215 ;;Total ram usage:        3 bytes
  5216 ;; Hardware stack levels used:    1
  5217 ;; Hardware stack levels required when called:    4
  5218 ;; This function calls:
  5219 ;;		Nothing
  5220 ;; This function is called by:
  5221 ;;		_TMR6_Initialize
  5222 ;; This function uses a non-reentrant model
  5223 ;;
  5224                           
  5225                           	psect	text31
  5226  00546A                     __ptext31:
  5227                           	opt callstack 0
  5228  00546A                     _TMR6_SetInterruptHandler:
  5229                           	opt callstack 24
  5230                           
  5231                           ; BSR set to: 57
  5232                           ;mcc_generated_files/tmr6.c: 179: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 180: {;mcc_generated_files/tmr6.c: 181:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
  5233                           
  5234                           ; BSR set to: 57
  5235                           ;incstack = 0
  5236  00546A  0060  F018  F169   	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
  5237  005470  0060  F01C  F16A   	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
  5238  005476  0060  F020  F16B   	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
  5239                           
  5240                           ; BSR set to: 57
  5241  00547C  0012               	return		;funcret
  5242  00547E                     __end_of_TMR6_SetInterruptHandler:
  5243                           	opt callstack 0
  5244                           
  5245 ;; *************** function _TMR5_Initialize *****************
  5246 ;; Defined at:
  5247 ;;		line 66 in file "mcc_generated_files/tmr5.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;		None
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;		None
  5252 ;; Return value:  Size  Location     Type
  5253 ;;                  1    wreg      void 
  5254 ;; Registers used:
  5255 ;;		wreg, status,2, status,0, cstack
  5256 ;; Tracked objects:
  5257 ;;		On entry : 3F/3E
  5258 ;;		On exit  : 3F/39
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5263 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5264 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5265 ;;Total ram usage:        2 bytes
  5266 ;; Hardware stack levels used:    1
  5267 ;; Hardware stack levels required when called:    5
  5268 ;; This function calls:
  5269 ;;		_TMR5_SetInterruptHandler
  5270 ;; This function is called by:
  5271 ;;		_SYSTEM_Initialize
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275                           	psect	text32
  5276  004C54                     __ptext32:
  5277                           	opt callstack 0
  5278  004C54                     _TMR5_Initialize:
  5279                           	opt callstack 24
  5280                           
  5281                           ; BSR set to: 62
  5282                           ;mcc_generated_files/tmr5.c: 71:     T5GCON = 0x00;
  5283                           
  5284                           ; BSR set to: 57
  5285                           ;incstack = 0
  5286  004C54  0E00               	movlw	0
  5287  004C56  6E9B               	movwf	155,c	;volatile
  5288                           
  5289                           ;mcc_generated_files/tmr5.c: 74:     T5GATE = 0x00;
  5290  004C58  0E00               	movlw	0
  5291  004C5A  6E9C               	movwf	156,c	;volatile
  5292                           
  5293                           ;mcc_generated_files/tmr5.c: 77:     T5CLK = 0x01;
  5294  004C5C  0E01               	movlw	1
  5295  004C5E  6E9D               	movwf	157,c	;volatile
  5296                           
  5297                           ;mcc_generated_files/tmr5.c: 80:     TMR5H = 0x63;
  5298  004C60  0E63               	movlw	99
  5299  004C62  6E99               	movwf	153,c	;volatile
  5300                           
  5301                           ;mcc_generated_files/tmr5.c: 83:     TMR5L = 0xC0;
  5302  004C64  0EC0               	movlw	192
  5303  004C66  6E98               	movwf	152,c	;volatile
  5304                           
  5305                           ; BSR set to: 62
  5306                           ;mcc_generated_files/tmr5.c: 86:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  5307  004C68  5098               	movf	152,w,c	;volatile
  5308  004C6A  006F FE64  F009    	movff	16281,??_TMR5_Initialize	;volatile
  5309  004C70  6A0A               	clrf	(??_TMR5_Initialize+1)^0,c
  5310  004C72  0060  F024  F00A   	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  5311  004C78  6A09               	clrf	??_TMR5_Initialize^0,c
  5312  004C7A  1009               	iorwf	??_TMR5_Initialize^0,w,c
  5313  004C7C  0101               	movlb	1	; () banked
  5314  004C7E  6F92               	movwf	_timer5ReloadVal& (0+255),b	;volatile
  5315  004C80  500A               	movf	(??_TMR5_Initialize+1)^0,w,c
  5316  004C82  6F93               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
  5317                           
  5318                           ; BSR set to: 1
  5319                           ;mcc_generated_files/tmr5.c: 89:     PIR8bits.TMR5IF = 0;
  5320  004C84  0139               	movlb	57	; () banked
  5321  004C86  9DA8               	bcf	168,6,b	;volatile
  5322                           
  5323                           ; BSR set to: 57
  5324                           ;mcc_generated_files/tmr5.c: 92:     PIE8bits.TMR5IE = 1;
  5325  004C88  8D98               	bsf	152,6,b	;volatile
  5326                           
  5327                           ; BSR set to: 57
  5328                           ;mcc_generated_files/tmr5.c: 95:     TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandl
      +                          er);
  5329  004C8A  0E58               	movlw	low _TMR5_DefaultInterruptHandler
  5330  004C8C  6E06               	movwf	TMR5_SetInterruptHandler@InterruptHandler^0,c
  5331  004C8E  0E53               	movlw	high _TMR5_DefaultInterruptHandler
  5332  004C90  6E07               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)^0,c
  5333  004C92  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
  5334  004C94  6E08               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)^0,c
  5335  004C96  EC3F  F02A         	call	_TMR5_SetInterruptHandler	;wreg free
  5336                           
  5337                           ; BSR set to: 57
  5338                           ;mcc_generated_files/tmr5.c: 98:     T5CON = 0x31;
  5339  004C9A  0E31               	movlw	49
  5340  004C9C  6E9A               	movwf	154,c	;volatile
  5341                           
  5342                           ; BSR set to: 57
  5343  004C9E  0012               	return		;funcret
  5344  004CA0                     __end_of_TMR5_Initialize:
  5345                           	opt callstack 0
  5346                           
  5347 ;; *************** function _TMR5_SetInterruptHandler *****************
  5348 ;; Defined at:
  5349 ;;		line 194 in file "mcc_generated_files/tmr5.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  5352 ;;		 -> TMR5_DefaultInterruptHandler(1), 
  5353 ;; Auto vars:     Size  Location     Type
  5354 ;;		None
  5355 ;; Return value:  Size  Location     Type
  5356 ;;                  1    wreg      void 
  5357 ;; Registers used:
  5358 ;;		wreg, status,2, status,0
  5359 ;; Tracked objects:
  5360 ;;		On entry : 3F/39
  5361 ;;		On exit  : 3F/39
  5362 ;;		Unchanged: 3E/0
  5363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5364 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5367 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5368 ;;Total ram usage:        3 bytes
  5369 ;; Hardware stack levels used:    1
  5370 ;; Hardware stack levels required when called:    4
  5371 ;; This function calls:
  5372 ;;		Nothing
  5373 ;; This function is called by:
  5374 ;;		_TMR5_Initialize
  5375 ;; This function uses a non-reentrant model
  5376 ;;
  5377                           
  5378                           	psect	text33
  5379  00547E                     __ptext33:
  5380                           	opt callstack 0
  5381  00547E                     _TMR5_SetInterruptHandler:
  5382                           	opt callstack 24
  5383                           
  5384                           ; BSR set to: 57
  5385                           ;mcc_generated_files/tmr5.c: 195:     TMR5_InterruptHandler = InterruptHandler;
  5386                           
  5387                           ; BSR set to: 57
  5388                           ;incstack = 0
  5389  00547E  0060  F018  F166   	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
  5390  005484  0060  F01C  F167   	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
  5391  00548A  0060  F020  F168   	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
  5392                           
  5393                           ; BSR set to: 57
  5394  005490  0012               	return		;funcret
  5395  005492                     __end_of_TMR5_SetInterruptHandler:
  5396                           	opt callstack 0
  5397                           
  5398 ;; *************** function _TMR2_Initialize *****************
  5399 ;; Defined at:
  5400 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  5401 ;; Parameters:    Size  Location     Type
  5402 ;;		None
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;		None
  5405 ;; Return value:  Size  Location     Type
  5406 ;;                  1    wreg      void 
  5407 ;; Registers used:
  5408 ;;		wreg, status,2
  5409 ;; Tracked objects:
  5410 ;;		On entry : 3F/39
  5411 ;;		On exit  : 3F/39
  5412 ;;		Unchanged: 0/0
  5413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5418 ;;Total ram usage:        0 bytes
  5419 ;; Hardware stack levels used:    1
  5420 ;; Hardware stack levels required when called:    4
  5421 ;; This function calls:
  5422 ;;		Nothing
  5423 ;; This function is called by:
  5424 ;;		_SYSTEM_Initialize
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428                           	psect	text34
  5429  0052EA                     __ptext34:
  5430                           	opt callstack 0
  5431  0052EA                     _TMR2_Initialize:
  5432                           	opt callstack 25
  5433                           
  5434                           ; BSR set to: 57
  5435                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
  5436                           
  5437                           ; BSR set to: 57
  5438                           ;incstack = 0
  5439  0052EA  0E01               	movlw	1
  5440  0052EC  6EAE               	movwf	174,c	;volatile
  5441                           
  5442                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  5443  0052EE  0E00               	movlw	0
  5444  0052F0  6EAD               	movwf	173,c	;volatile
  5445                           
  5446                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  5447  0052F2  0E00               	movlw	0
  5448  0052F4  6EAF               	movwf	175,c	;volatile
  5449                           
  5450                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
  5451  0052F6  0E63               	movlw	99
  5452  0052F8  6EAB               	movwf	171,c	;volatile
  5453                           
  5454                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  5455  0052FA  0E00               	movlw	0
  5456  0052FC  6EAA               	movwf	170,c	;volatile
  5457                           
  5458                           ; BSR set to: 57
  5459                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  5460  0052FE  95A4               	bcf	164,2,b	;volatile
  5461                           
  5462                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
  5463  005300  0EC0               	movlw	192
  5464  005302  6EAC               	movwf	172,c	;volatile
  5465                           
  5466                           ; BSR set to: 57
  5467  005304  0012               	return		;funcret
  5468  005306                     __end_of_TMR2_Initialize:
  5469                           	opt callstack 0
  5470                           
  5471 ;; *************** function _SPI1_Initialize *****************
  5472 ;; Defined at:
  5473 ;;		line 64 in file "mcc_generated_files/spi1.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;		None
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;		None
  5478 ;; Return value:  Size  Location     Type
  5479 ;;                  1    wreg      void 
  5480 ;; Registers used:
  5481 ;;		wreg, status,2
  5482 ;; Tracked objects:
  5483 ;;		On entry : 3F/39
  5484 ;;		On exit  : 3F/3D
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5491 ;;Total ram usage:        0 bytes
  5492 ;; Hardware stack levels used:    1
  5493 ;; Hardware stack levels required when called:    4
  5494 ;; This function calls:
  5495 ;;		Nothing
  5496 ;; This function is called by:
  5497 ;;		_SYSTEM_Initialize
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501                           	psect	text35
  5502  005372                     __ptext35:
  5503                           	opt callstack 0
  5504  005372                     _SPI1_Initialize:
  5505                           	opt callstack 25
  5506                           
  5507                           ; BSR set to: 57
  5508                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
  5509                           
  5510                           ; BSR set to: 57
  5511                           ;incstack = 0
  5512  005372  0E40               	movlw	64
  5513  005374  013D               	movlb	61	; () banked
  5514  005376  6F15               	movwf	21,b	;volatile
  5515                           
  5516                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
  5517  005378  0E03               	movlw	3
  5518  00537A  6F16               	movwf	22,b	;volatile
  5519                           
  5520                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x0F;
  5521  00537C  0E0F               	movlw	15
  5522  00537E  6F19               	movwf	25,b	;volatile
  5523                           
  5524                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
  5525  005380  0E00               	movlw	0
  5526  005382  6F1C               	movwf	28,b	;volatile
  5527                           
  5528                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x82;
  5529  005384  0E82               	movlw	130
  5530  005386  6F14               	movwf	20,b	;volatile
  5531                           
  5532                           ; BSR set to: 61
  5533  005388  0012               	return		;funcret
  5534  00538A                     __end_of_SPI1_Initialize:
  5535                           	opt callstack 0
  5536                           
  5537 ;; *************** function _PWM8_Initialize *****************
  5538 ;; Defined at:
  5539 ;;		line 58 in file "mcc_generated_files/pwm8.c"
  5540 ;; Parameters:    Size  Location     Type
  5541 ;;		None
  5542 ;; Auto vars:     Size  Location     Type
  5543 ;;		None
  5544 ;; Return value:  Size  Location     Type
  5545 ;;                  1    wreg      void 
  5546 ;; Registers used:
  5547 ;;		wreg, status,2
  5548 ;; Tracked objects:
  5549 ;;		On entry : 3F/39
  5550 ;;		On exit  : 3F/3F
  5551 ;;		Unchanged: 0/0
  5552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5557 ;;Total ram usage:        0 bytes
  5558 ;; Hardware stack levels used:    1
  5559 ;; Hardware stack levels required when called:    4
  5560 ;; This function calls:
  5561 ;;		Nothing
  5562 ;; This function is called by:
  5563 ;;		_SYSTEM_Initialize
  5564 ;; This function uses a non-reentrant model
  5565 ;;
  5566                           
  5567                           	psect	text36
  5568  00538A                     __ptext36:
  5569                           	opt callstack 0
  5570  00538A                     _PWM8_Initialize:
  5571                           	opt callstack 25
  5572                           
  5573                           ; BSR set to: 57
  5574                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
  5575                           
  5576                           ; BSR set to: 61
  5577                           ;incstack = 0
  5578  00538A  0E80               	movlw	128
  5579  00538C  6E62               	movwf	98,c	;volatile
  5580                           
  5581                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x31;
  5582  00538E  0E31               	movlw	49
  5583  005390  6E61               	movwf	97,c	;volatile
  5584                           
  5585                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0xC0;
  5586  005392  0EC0               	movlw	192
  5587  005394  6E60               	movwf	96,c	;volatile
  5588                           
  5589                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
  5590  005396  013F               	movlb	63	; () banked
  5591  005398  515F               	movf	95,w,b	;volatile
  5592  00539A  0B3F               	andlw	-193
  5593  00539C  0940               	iorlw	64
  5594  00539E  6F5F               	movwf	95,b	;volatile
  5595                           
  5596                           ; BSR set to: 63
  5597  0053A0  0012               	return		;funcret
  5598  0053A2                     __end_of_PWM8_Initialize:
  5599                           	opt callstack 0
  5600                           
  5601 ;; *************** function _PMD_Initialize *****************
  5602 ;; Defined at:
  5603 ;;		line 85 in file "mcc_generated_files/mcc.c"
  5604 ;; Parameters:    Size  Location     Type
  5605 ;;		None
  5606 ;; Auto vars:     Size  Location     Type
  5607 ;;		None
  5608 ;; Return value:  Size  Location     Type
  5609 ;;                  1    wreg      void 
  5610 ;; Registers used:
  5611 ;;		wreg, status,2
  5612 ;; Tracked objects:
  5613 ;;		On entry : 3F/39
  5614 ;;		On exit  : 3F/39
  5615 ;;		Unchanged: 0/0
  5616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5621 ;;Total ram usage:        0 bytes
  5622 ;; Hardware stack levels used:    1
  5623 ;; Hardware stack levels required when called:    4
  5624 ;; This function calls:
  5625 ;;		Nothing
  5626 ;; This function is called by:
  5627 ;;		_SYSTEM_Initialize
  5628 ;; This function uses a non-reentrant model
  5629 ;;
  5630                           
  5631                           	psect	text37
  5632  0052A6                     __ptext37:
  5633                           	opt callstack 0
  5634  0052A6                     _PMD_Initialize:
  5635                           	opt callstack 25
  5636                           
  5637                           ; BSR set to: 57
  5638                           ;mcc_generated_files/mcc.c: 88:     PMD0 = 0x00;
  5639                           
  5640                           ; BSR set to: 63
  5641                           ;incstack = 0
  5642  0052A6  0E00               	movlw	0
  5643  0052A8  6FC0               	movwf	192,b	;volatile
  5644                           
  5645                           ;mcc_generated_files/mcc.c: 90:     PMD1 = 0x00;
  5646  0052AA  0E00               	movlw	0
  5647  0052AC  6FC1               	movwf	193,b	;volatile
  5648                           
  5649                           ;mcc_generated_files/mcc.c: 92:     PMD2 = 0x00;
  5650  0052AE  0E00               	movlw	0
  5651  0052B0  6FC2               	movwf	194,b	;volatile
  5652                           
  5653                           ;mcc_generated_files/mcc.c: 94:     PMD3 = 0x00;
  5654  0052B2  0E00               	movlw	0
  5655  0052B4  6FC3               	movwf	195,b	;volatile
  5656                           
  5657                           ;mcc_generated_files/mcc.c: 96:     PMD4 = 0x00;
  5658  0052B6  0E00               	movlw	0
  5659  0052B8  6FC4               	movwf	196,b	;volatile
  5660                           
  5661                           ;mcc_generated_files/mcc.c: 98:     PMD5 = 0x00;
  5662  0052BA  0E00               	movlw	0
  5663  0052BC  6FC5               	movwf	197,b	;volatile
  5664                           
  5665                           ;mcc_generated_files/mcc.c: 100:     PMD6 = 0x00;
  5666  0052BE  0E00               	movlw	0
  5667  0052C0  6FC6               	movwf	198,b	;volatile
  5668                           
  5669                           ;mcc_generated_files/mcc.c: 102:     PMD7 = 0x00;
  5670  0052C2  0E00               	movlw	0
  5671  0052C4  6FC7               	movwf	199,b	;volatile
  5672                           
  5673                           ; BSR set to: 57
  5674  0052C6  0012               	return		;funcret
  5675  0052C8                     __end_of_PMD_Initialize:
  5676                           	opt callstack 0
  5677                           
  5678 ;; *************** function _PIN_MANAGER_Initialize *****************
  5679 ;; Defined at:
  5680 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5681 ;; Parameters:    Size  Location     Type
  5682 ;;		None
  5683 ;; Auto vars:     Size  Location     Type
  5684 ;;		None
  5685 ;; Return value:  Size  Location     Type
  5686 ;;                  1    wreg      void 
  5687 ;; Registers used:
  5688 ;;		wreg, status,2
  5689 ;; Tracked objects:
  5690 ;;		On entry : 3F/39
  5691 ;;		On exit  : 3F/3A
  5692 ;;		Unchanged: 0/0
  5693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5698 ;;Total ram usage:        0 bytes
  5699 ;; Hardware stack levels used:    1
  5700 ;; Hardware stack levels required when called:    4
  5701 ;; This function calls:
  5702 ;;		Nothing
  5703 ;; This function is called by:
  5704 ;;		_SYSTEM_Initialize
  5705 ;; This function uses a non-reentrant model
  5706 ;;
  5707                           
  5708                           	psect	text38
  5709  004606                     __ptext38:
  5710                           	opt callstack 0
  5711  004606                     _PIN_MANAGER_Initialize:
  5712                           	opt callstack 25
  5713                           
  5714                           ; BSR set to: 57
  5715                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x01;
  5716                           
  5717                           ; BSR set to: 57
  5718                           ;incstack = 0
  5719  004606  0E01               	movlw	1
  5720  004608  6EBE               	movwf	190,c	;volatile
  5721                           
  5722                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x02;
  5723  00460A  0E02               	movlw	2
  5724  00460C  6EBD               	movwf	189,c	;volatile
  5725                           
  5726                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  5727  00460E  0E00               	movlw	0
  5728  004610  6EBA               	movwf	186,c	;volatile
  5729                           
  5730                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  5731  004612  0E00               	movlw	0
  5732  004614  6EBB               	movwf	187,c	;volatile
  5733                           
  5734                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x06;
  5735  004616  0E06               	movlw	6
  5736  004618  6EBC               	movwf	188,c	;volatile
  5737                           
  5738                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x06;
  5739  00461A  0E06               	movlw	6
  5740  00461C  6EC6               	movwf	198,c	;volatile
  5741                           
  5742                           ; BSR set to: 57
  5743                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  5744  00461E  68C2               	setf	194,c	;volatile
  5745                           
  5746                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  5747  004620  0EBF               	movlw	191
  5748  004622  6EC3               	movwf	195,c	;volatile
  5749                           
  5750                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x91;
  5751  004624  0E91               	movlw	145
  5752  004626  6EC4               	movwf	196,c	;volatile
  5753                           
  5754                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFD;
  5755  004628  0EFD               	movlw	253
  5756  00462A  6EC5               	movwf	197,c	;volatile
  5757                           
  5758                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFD;
  5759  00462C  0EFD               	movlw	253
  5760  00462E  013A               	movlb	58	; () banked
  5761  004630  6F70               	movwf	112,b	;volatile
  5762                           
  5763                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
  5764  004632  0E00               	movlw	0
  5765  004634  6F60               	movwf	96,b	;volatile
  5766                           
  5767                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3F;
  5768  004636  0E3F               	movlw	63
  5769  004638  6F50               	movwf	80,b	;volatile
  5770                           
  5771                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x06;
  5772  00463A  0E06               	movlw	6
  5773  00463C  6F80               	movwf	128,b	;volatile
  5774                           
  5775                           ; BSR set to: 58
  5776                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  5777  00463E  6940               	setf	64,b	;volatile
  5778                           
  5779                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  5780  004640  0E00               	movlw	0
  5781  004642  6F71               	movwf	113,b	;volatile
  5782                           
  5783                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  5784  004644  0E00               	movlw	0
  5785  004646  6F81               	movwf	129,b	;volatile
  5786                           
  5787                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  5788  004648  0E00               	movlw	0
  5789  00464A  6F51               	movwf	81,b	;volatile
  5790                           
  5791                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  5792  00464C  0E00               	movlw	0
  5793  00464E  6F41               	movwf	65,b	;volatile
  5794                           
  5795                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  5796  004650  0E00               	movlw	0
  5797  004652  6F61               	movwf	97,b	;volatile
  5798                           
  5799                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  5800  004654  0E00               	movlw	0
  5801  004656  6F5A               	movwf	90,b	;volatile
  5802                           
  5803                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  5804  004658  0E00               	movlw	0
  5805  00465A  6F5B               	movwf	91,b	;volatile
  5806                           
  5807                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  5808  00465C  0E00               	movlw	0
  5809  00465E  6F6A               	movwf	106,b	;volatile
  5810                           
  5811                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  5812  004660  0E00               	movlw	0
  5813  004662  6F6B               	movwf	107,b	;volatile
  5814                           
  5815                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  5816  004664  0E00               	movlw	0
  5817  004666  6F7A               	movwf	122,b	;volatile
  5818                           
  5819                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  5820  004668  0E00               	movlw	0
  5821  00466A  6F7B               	movwf	123,b	;volatile
  5822                           
  5823                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  5824  00466C  0E00               	movlw	0
  5825  00466E  6F82               	movwf	130,b	;volatile
  5826                           
  5827                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  5828  004670  0E00               	movlw	0
  5829  004672  6F42               	movwf	66,b	;volatile
  5830                           
  5831                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
  5832  004674  0E00               	movlw	0
  5833  004676  6F52               	movwf	82,b	;volatile
  5834                           
  5835                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
  5836  004678  0E00               	movlw	0
  5837  00467A  6F62               	movwf	98,b	;volatile
  5838                           
  5839                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  5840  00467C  0E00               	movlw	0
  5841  00467E  6F72               	movwf	114,b	;volatile
  5842                           
  5843                           ; BSR set to: 58
  5844                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  5845  004680  6943               	setf	67,b	;volatile
  5846                           
  5847                           ; BSR set to: 58
  5848                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  5849  004682  6953               	setf	83,b	;volatile
  5850                           
  5851                           ; BSR set to: 58
  5852                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  5853  004684  6963               	setf	99,b	;volatile
  5854                           
  5855                           ; BSR set to: 58
  5856                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  5857  004686  6973               	setf	115,b	;volatile
  5858                           
  5859                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  5860  004688  0E07               	movlw	7
  5861  00468A  6F83               	movwf	131,b	;volatile
  5862                           
  5863                           ;mcc_generated_files/pin_manager.c: 128:     U2RXPPS = 0x0F;
  5864  00468C  0E0F               	movlw	15
  5865  00468E  6FE8               	movwf	232,b	;volatile
  5866                           
  5867                           ;mcc_generated_files/pin_manager.c: 129:     SPI1SCKPPS = 0x13;
  5868  004690  0E13               	movlw	19
  5869  004692  6FDE               	movwf	222,b	;volatile
  5870                           
  5871                           ;mcc_generated_files/pin_manager.c: 130:     RB6PPS = 0x16;
  5872  004694  0E16               	movlw	22
  5873  004696  6F0E               	movwf	14,b	;volatile
  5874                           
  5875                           ;mcc_generated_files/pin_manager.c: 131:     RC3PPS = 0x1E;
  5876  004698  0E1E               	movlw	30
  5877  00469A  6F13               	movwf	19,b	;volatile
  5878                           
  5879                           ;mcc_generated_files/pin_manager.c: 132:     RD1PPS = 0x10;
  5880  00469C  0E10               	movlw	16
  5881  00469E  6F19               	movwf	25,b	;volatile
  5882                           
  5883                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
  5884  0046A0  0E1F               	movlw	31
  5885  0046A2  6F15               	movwf	21,b	;volatile
  5886                           
  5887                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
  5888  0046A4  0E13               	movlw	19
  5889  0046A6  6F16               	movwf	22,b	;volatile
  5890                           
  5891                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
  5892  0046A8  0E17               	movlw	23
  5893  0046AA  6FE5               	movwf	229,b	;volatile
  5894                           
  5895                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
  5896  0046AC  0E14               	movlw	20
  5897  0046AE  6FDF               	movwf	223,b	;volatile
  5898                           
  5899                           ; BSR set to: 58
  5900  0046B0  0012               	return		;funcret
  5901  0046B2                     __end_of_PIN_MANAGER_Initialize:
  5902                           	opt callstack 0
  5903                           
  5904 ;; *************** function _OSCILLATOR_Initialize *****************
  5905 ;; Defined at:
  5906 ;;		line 67 in file "mcc_generated_files/mcc.c"
  5907 ;; Parameters:    Size  Location     Type
  5908 ;;		None
  5909 ;; Auto vars:     Size  Location     Type
  5910 ;;		None
  5911 ;; Return value:  Size  Location     Type
  5912 ;;                  1    wreg      void 
  5913 ;; Registers used:
  5914 ;;		wreg, status,2
  5915 ;; Tracked objects:
  5916 ;;		On entry : 3F/3A
  5917 ;;		On exit  : 3F/39
  5918 ;;		Unchanged: 0/0
  5919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5924 ;;Total ram usage:        0 bytes
  5925 ;; Hardware stack levels used:    1
  5926 ;; Hardware stack levels required when called:    4
  5927 ;; This function calls:
  5928 ;;		Nothing
  5929 ;; This function is called by:
  5930 ;;		_SYSTEM_Initialize
  5931 ;; This function uses a non-reentrant model
  5932 ;;
  5933                           
  5934                           	psect	text39
  5935  005306                     __ptext39:
  5936                           	opt callstack 0
  5937  005306                     _OSCILLATOR_Initialize:
  5938                           	opt callstack 25
  5939                           
  5940                           ; BSR set to: 58
  5941                           ;mcc_generated_files/mcc.c: 70:     OSCCON1 = 0x20;
  5942                           
  5943                           ; BSR set to: 58
  5944                           ;incstack = 0
  5945  005306  0E20               	movlw	32
  5946  005308  0139               	movlb	57	; () banked
  5947  00530A  6FD9               	movwf	217,b	;volatile
  5948                           
  5949                           ;mcc_generated_files/mcc.c: 72:     OSCCON3 = 0x00;
  5950  00530C  0E00               	movlw	0
  5951  00530E  6FDB               	movwf	219,b	;volatile
  5952                           
  5953                           ;mcc_generated_files/mcc.c: 74:     OSCEN = 0x00;
  5954  005310  0E00               	movlw	0
  5955  005312  6FDD               	movwf	221,b	;volatile
  5956                           
  5957                           ;mcc_generated_files/mcc.c: 76:     OSCFRQ = 0x08;
  5958  005314  0E08               	movlw	8
  5959  005316  6FDF               	movwf	223,b	;volatile
  5960                           
  5961                           ;mcc_generated_files/mcc.c: 78:     OSCTUNE = 0x00;
  5962  005318  0E00               	movlw	0
  5963  00531A  6FDE               	movwf	222,b	;volatile
  5964  00531C                     l68:
  5965                           
  5966                           ; BSR set to: 57
  5967                           ;mcc_generated_files/mcc.c: 80:     while(PLLR == 0)
  5968  00531C  B1DC               	btfsc	220,0,b	;volatile
  5969  00531E  0012               	return	
  5970  005320  D7FD               	goto	l68
  5971  005322                     __end_of_OSCILLATOR_Initialize:
  5972                           	opt callstack 0
  5973                           
  5974 ;; *************** function _INTERRUPT_Initialize *****************
  5975 ;; Defined at:
  5976 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5977 ;; Parameters:    Size  Location     Type
  5978 ;;		None
  5979 ;; Auto vars:     Size  Location     Type
  5980 ;;  state           1    5[COMRAM] _Bool 
  5981 ;; Return value:  Size  Location     Type
  5982 ;;                  1    wreg      void 
  5983 ;; Registers used:
  5984 ;;		wreg, status,2
  5985 ;; Tracked objects:
  5986 ;;		On entry : 3F/0
  5987 ;;		On exit  : 3F/39
  5988 ;;		Unchanged: 0/0
  5989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5991 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5993 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5994 ;;Total ram usage:        1 bytes
  5995 ;; Hardware stack levels used:    1
  5996 ;; Hardware stack levels required when called:    4
  5997 ;; This function calls:
  5998 ;;		Nothing
  5999 ;; This function is called by:
  6000 ;;		_SYSTEM_Initialize
  6001 ;; This function uses a non-reentrant model
  6002 ;;
  6003                           
  6004                           	psect	text40
  6005  004CE8                     __ptext40:
  6006                           	opt callstack 0
  6007  004CE8                     _INTERRUPT_Initialize:
  6008                           	opt callstack 25
  6009                           
  6010                           ; BSR set to: 0
  6011                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
  6012                           
  6013                           ; BSR set to: 57
  6014                           ;incstack = 0
  6015  004CE8  8AD2               	bsf	210,5,c	;volatile
  6016                           
  6017                           ; BSR set to: 0
  6018                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
  6019  004CEA  0E00               	movlw	0
  6020  004CEC  BED2               	btfsc	16338,7,c	;volatile
  6021  004CEE  0E01               	movlw	1
  6022  004CF0  6E06               	movwf	INTERRUPT_Initialize@state^0,c
  6023                           
  6024                           ; BSR set to: 0
  6025                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
  6026  004CF2  9ED2               	bcf	16338,7,c	;volatile
  6027                           
  6028                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
  6029  004CF4  0E55               	movlw	85
  6030  004CF6  6ED4               	movwf	212,c	;volatile
  6031                           
  6032                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
  6033  004CF8  0EAA               	movlw	170
  6034  004CFA  6ED4               	movwf	212,c	;volatile
  6035                           
  6036                           ; BSR set to: 0
  6037                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
  6038  004CFC  90D4               	bcf	212,0,c	;volatile
  6039                           
  6040                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
  6041  004CFE  0E00               	movlw	0
  6042  004D00  0138               	movlb	56	; () banked
  6043  004D02  6F9F               	movwf	159,b	;volatile
  6044                           
  6045                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
  6046  004D04  0E00               	movlw	0
  6047  004D06  6F9E               	movwf	158,b	;volatile
  6048                           
  6049                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
  6050  004D08  0E08               	movlw	8
  6051  004D0A  6F9D               	movwf	157,b	;volatile
  6052                           
  6053                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
  6054  004D0C  0E55               	movlw	85
  6055  004D0E  6ED4               	movwf	212,c	;volatile
  6056                           
  6057                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
  6058  004D10  0EAA               	movlw	170
  6059  004D12  6ED4               	movwf	212,c	;volatile
  6060                           
  6061                           ; BSR set to: 56
  6062                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
  6063  004D14  80D4               	bsf	212,0,c	;volatile
  6064                           
  6065                           ; BSR set to: 56
  6066                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
  6067  004D16  B006               	btfsc	INTERRUPT_Initialize@state^0,0,c
  6068  004D18  D002               	bra	u7615
  6069  004D1A  9ED2               	bcf	16338,7,c	;volatile
  6070  004D1C  D001               	bra	u7616
  6071  004D1E                     u7615:
  6072  004D1E  8ED2               	bsf	16338,7,c	;volatile
  6073  004D20                     u7616:
  6074                           
  6075                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR6bits.U2TXIP = 1;
  6076  004D20  0139               	movlb	57	; () banked
  6077  004D22  8786               	bsf	134,3,b	;volatile
  6078                           
  6079                           ; BSR set to: 57
  6080                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR6bits.U2RXIP = 1;
  6081  004D24  8586               	bsf	134,2,b	;volatile
  6082                           
  6083                           ; BSR set to: 57
  6084                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR3bits.U1TXIP = 1;
  6085  004D26  8983               	bsf	131,4,b	;volatile
  6086                           
  6087                           ; BSR set to: 57
  6088                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR3bits.U1RXIP = 1;
  6089  004D28  8783               	bsf	131,3,b	;volatile
  6090                           
  6091                           ; BSR set to: 57
  6092                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR9bits.TMR6IP = 1;
  6093  004D2A  8189               	bsf	137,0,b	;volatile
  6094                           
  6095                           ; BSR set to: 57
  6096                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR8bits.TMR5IP = 1;
  6097  004D2C  8D88               	bsf	136,6,b	;volatile
  6098                           
  6099                           ; BSR set to: 57
  6100  004D2E  0012               	return		;funcret
  6101  004D30                     __end_of_INTERRUPT_Initialize:
  6102                           	opt callstack 0
  6103                           
  6104 ;; *************** function _FVR_Initialize *****************
  6105 ;; Defined at:
  6106 ;;		line 58 in file "mcc_generated_files/fvr.c"
  6107 ;; Parameters:    Size  Location     Type
  6108 ;;		None
  6109 ;; Auto vars:     Size  Location     Type
  6110 ;;		None
  6111 ;; Return value:  Size  Location     Type
  6112 ;;                  1    wreg      void 
  6113 ;; Registers used:
  6114 ;;		wreg, status,2
  6115 ;; Tracked objects:
  6116 ;;		On entry : 3F/39
  6117 ;;		On exit  : 3F/3E
  6118 ;;		Unchanged: 0/0
  6119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6124 ;;Total ram usage:        0 bytes
  6125 ;; Hardware stack levels used:    1
  6126 ;; Hardware stack levels required when called:    4
  6127 ;; This function calls:
  6128 ;;		Nothing
  6129 ;; This function is called by:
  6130 ;;		_SYSTEM_Initialize
  6131 ;; This function uses a non-reentrant model
  6132 ;;
  6133                           
  6134                           	psect	text41
  6135  0054D8                     __ptext41:
  6136                           	opt callstack 0
  6137  0054D8                     _FVR_Initialize:
  6138                           	opt callstack 25
  6139                           
  6140                           ; BSR set to: 57
  6141                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAD;
  6142                           
  6143                           ; BSR set to: 57
  6144                           ;incstack = 0
  6145  0054D8  0EAD               	movlw	173
  6146  0054DA  013E               	movlb	62	; () banked
  6147  0054DC  6FC1               	movwf	193,b	;volatile
  6148                           
  6149                           ; BSR set to: 62
  6150  0054DE  0012               	return		;funcret
  6151  0054E0                     __end_of_FVR_Initialize:
  6152                           	opt callstack 0
  6153                           
  6154 ;; *************** function _ADCC_Initialize *****************
  6155 ;; Defined at:
  6156 ;;		line 62 in file "mcc_generated_files/adcc.c"
  6157 ;; Parameters:    Size  Location     Type
  6158 ;;		None
  6159 ;; Auto vars:     Size  Location     Type
  6160 ;;		None
  6161 ;; Return value:  Size  Location     Type
  6162 ;;                  1    wreg      void 
  6163 ;; Registers used:
  6164 ;;		wreg, status,2
  6165 ;; Tracked objects:
  6166 ;;		On entry : 3F/39
  6167 ;;		On exit  : 3F/3E
  6168 ;;		Unchanged: 0/0
  6169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6174 ;;Total ram usage:        0 bytes
  6175 ;; Hardware stack levels used:    1
  6176 ;; Hardware stack levels required when called:    4
  6177 ;; This function calls:
  6178 ;;		Nothing
  6179 ;; This function is called by:
  6180 ;;		_SYSTEM_Initialize
  6181 ;; This function uses a non-reentrant model
  6182 ;;
  6183                           
  6184                           	psect	text42
  6185  004B4C                     __ptext42:
  6186                           	opt callstack 0
  6187  004B4C                     _ADCC_Initialize:
  6188                           	opt callstack 25
  6189                           
  6190                           ; BSR set to: 57
  6191                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  6192                           
  6193                           ; BSR set to: 62
  6194                           ;incstack = 0
  6195  004B4C  0E00               	movlw	0
  6196  004B4E  013E               	movlb	62	; () banked
  6197  004B50  6FDE               	movwf	222,b	;volatile
  6198                           
  6199                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  6200  004B52  0E00               	movlw	0
  6201  004B54  6FDF               	movwf	223,b	;volatile
  6202                           
  6203                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  6204  004B56  0E00               	movlw	0
  6205  004B58  6FE0               	movwf	224,b	;volatile
  6206                           
  6207                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  6208  004B5A  0E00               	movlw	0
  6209  004B5C  6FE1               	movwf	225,b	;volatile
  6210                           
  6211                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  6212  004B5E  0E00               	movlw	0
  6213  004B60  6FE4               	movwf	228,b	;volatile
  6214                           
  6215                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  6216  004B62  0E00               	movlw	0
  6217  004B64  6FE5               	movwf	229,b	;volatile
  6218                           
  6219                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
  6220  004B66  0E00               	movlw	0
  6221  004B68  6FEA               	movwf	234,b	;volatile
  6222                           
  6223                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
  6224  004B6A  0E00               	movlw	0
  6225  004B6C  6FEC               	movwf	236,b	;volatile
  6226                           
  6227                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  6228  004B6E  0E00               	movlw	0
  6229  004B70  6FF1               	movwf	241,b	;volatile
  6230                           
  6231                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x00;
  6232  004B72  0E00               	movlw	0
  6233  004B74  6FF3               	movwf	243,b	;volatile
  6234                           
  6235                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x00;
  6236  004B76  0E00               	movlw	0
  6237  004B78  6FF4               	movwf	244,b	;volatile
  6238                           
  6239                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
  6240  004B7A  0E00               	movlw	0
  6241  004B7C  6FF5               	movwf	245,b	;volatile
  6242                           
  6243                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
  6244  004B7E  0E00               	movlw	0
  6245  004B80  6FF6               	movwf	246,b	;volatile
  6246                           
  6247                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
  6248  004B82  0E00               	movlw	0
  6249  004B84  6FF7               	movwf	247,b	;volatile
  6250                           
  6251                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
  6252  004B86  0E00               	movlw	0
  6253  004B88  6FF9               	movwf	249,b	;volatile
  6254                           
  6255                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0xF4;
  6256  004B8A  0EF4               	movlw	244
  6257  004B8C  6FFA               	movwf	250,b	;volatile
  6258                           
  6259                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x20;
  6260  004B8E  0E20               	movlw	32
  6261  004B90  6FFB               	movwf	251,b	;volatile
  6262                           
  6263                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
  6264  004B92  0E00               	movlw	0
  6265  004B94  6FFC               	movwf	252,b	;volatile
  6266                           
  6267                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
  6268  004B96  0E00               	movlw	0
  6269  004B98  6FFD               	movwf	253,b	;volatile
  6270                           
  6271                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
  6272  004B9A  0E00               	movlw	0
  6273  004B9C  6FFE               	movwf	254,b	;volatile
  6274                           
  6275                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x3F;
  6276  004B9E  0E3F               	movlw	63
  6277  004BA0  6FFF               	movwf	255,b	;volatile
  6278                           
  6279                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
  6280  004BA2  0E84               	movlw	132
  6281  004BA4  6FF8               	movwf	248,b	;volatile
  6282                           
  6283                           ; BSR set to: 62
  6284  004BA6  0012               	return		;funcret
  6285  004BA8                     __end_of_ADCC_Initialize:
  6286                           	opt callstack 0
  6287                           
  6288 ;; *************** function _Digital232_init *****************
  6289 ;; Defined at:
  6290 ;;		line 10 in file "d232.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;		None
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;		None
  6295 ;; Return value:  Size  Location     Type
  6296 ;;                  1    wreg      void 
  6297 ;; Registers used:
  6298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6299 ;; Tracked objects:
  6300 ;;		On entry : 0/1
  6301 ;;		On exit  : 0/0
  6302 ;;		Unchanged: 0/0
  6303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6308 ;;Total ram usage:        0 bytes
  6309 ;; Hardware stack levels used:    1
  6310 ;; Hardware stack levels required when called:   13
  6311 ;; This function calls:
  6312 ;;		_ADCC_StartConversion
  6313 ;;		_StartTimer
  6314 ;;		_UART2_Read
  6315 ;;		_UART2_is_rx_ready
  6316 ;;		_WaitMs
  6317 ;;		_printf
  6318 ;; This function is called by:
  6319 ;;		_main
  6320 ;; This function uses a non-reentrant model
  6321 ;;
  6322                           
  6323                           	psect	text43
  6324  00418C                     __ptext43:
  6325                           	opt callstack 0
  6326  00418C                     _Digital232_init:
  6327                           	opt callstack 17
  6328                           
  6329                           ;d232.c: 12:  printf("%s", "XQ\r");
  6330                           
  6331                           ; BSR set to: 62
  6332                           ;incstack = 0
  6333  00418C  0E4C               	movlw	low STR_5
  6334  00418E  0100               	movlb	0	; () banked
  6335  004190  6F64               	movwf	printf@fmt& (0+255),b
  6336  004192  0E48               	movlw	low STR_6
  6337  004194  6F65               	movwf	(?_printf+1)& (0+255),b
  6338  004196  5165               	movf	(?_printf+1)& (0+255),w,b
  6339  004198  A4D8               	btfss	status,2,c
  6340  00419A  0E20               	movlw	high __smallconst
  6341  00419C  6F66               	movwf	(?_printf+2)& (0+255),b
  6342  00419E  EC91  F029         	call	_printf	;wreg free
  6343                           
  6344                           ; BSR set to: 1
  6345                           ;d232.c: 13:  WaitMs(5);
  6346  0041A2  0E00               	movlw	0
  6347  0041A4  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  6348  0041A6  0E05               	movlw	5
  6349  0041A8  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  6350  0041AA  EC61  F028         	call	_WaitMs	;wreg free
  6351                           
  6352                           ;d232.c: 14:  printf("%s", "T2\r");
  6353  0041AE  0E4C               	movlw	low STR_5
  6354  0041B0  0100               	movlb	0	; () banked
  6355  0041B2  6F64               	movwf	printf@fmt& (0+255),b
  6356  0041B4  0E38               	movlw	low STR_8
  6357  0041B6  6F65               	movwf	(?_printf+1)& (0+255),b
  6358  0041B8  5165               	movf	(?_printf+1)& (0+255),w,b
  6359  0041BA  A4D8               	btfss	status,2,c
  6360  0041BC  0E20               	movlw	high __smallconst
  6361  0041BE  6F66               	movwf	(?_printf+2)& (0+255),b
  6362  0041C0  EC91  F029         	call	_printf	;wreg free
  6363                           
  6364                           ;d232.c: 15:  WaitMs(800);
  6365  0041C4  0E03               	movlw	3
  6366  0041C6  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  6367  0041C8  0E20               	movlw	32
  6368  0041CA  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  6369  0041CC  EC61  F028         	call	_WaitMs	;wreg free
  6370                           
  6371                           ;d232.c: 16:  printf("%s", "C4\r");
  6372  0041D0  0E4C               	movlw	low STR_5
  6373  0041D2  0100               	movlb	0	; () banked
  6374  0041D4  6F64               	movwf	printf@fmt& (0+255),b
  6375  0041D6  0E3C               	movlw	low STR_10
  6376  0041D8  6F65               	movwf	(?_printf+1)& (0+255),b
  6377  0041DA  5165               	movf	(?_printf+1)& (0+255),w,b
  6378  0041DC  A4D8               	btfss	status,2,c
  6379  0041DE  0E20               	movlw	high __smallconst
  6380  0041E0  6F66               	movwf	(?_printf+2)& (0+255),b
  6381  0041E2  EC91  F029         	call	_printf	;wreg free
  6382                           
  6383                           ; BSR set to: 1
  6384                           ;d232.c: 17:  WaitMs(5);
  6385  0041E6  0E00               	movlw	0
  6386  0041E8  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  6387  0041EA  0E05               	movlw	5
  6388  0041EC  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  6389  0041EE  EC61  F028         	call	_WaitMs	;wreg free
  6390                           
  6391                           ;d232.c: 18:  printf("%s", "F4\r");
  6392  0041F2  0E4C               	movlw	low STR_5
  6393  0041F4  0100               	movlb	0	; () banked
  6394  0041F6  6F64               	movwf	printf@fmt& (0+255),b
  6395  0041F8  0E40               	movlw	low STR_12
  6396  0041FA  6F65               	movwf	(?_printf+1)& (0+255),b
  6397  0041FC  5165               	movf	(?_printf+1)& (0+255),w,b
  6398  0041FE  A4D8               	btfss	status,2,c
  6399  004200  0E20               	movlw	high __smallconst
  6400  004202  6F66               	movwf	(?_printf+2)& (0+255),b
  6401  004204  EC91  F029         	call	_printf	;wreg free
  6402                           
  6403                           ; BSR set to: 1
  6404                           ;d232.c: 19:  WaitMs(5);
  6405  004208  0E00               	movlw	0
  6406  00420A  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  6407  00420C  0E05               	movlw	5
  6408  00420E  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  6409  004210  EC61  F028         	call	_WaitMs	;wreg free
  6410                           
  6411                           ;d232.c: 20:  printf("%s", "M4\r");
  6412  004214  0E4C               	movlw	low STR_5
  6413  004216  0100               	movlb	0	; () banked
  6414  004218  6F64               	movwf	printf@fmt& (0+255),b
  6415  00421A  0E44               	movlw	low STR_14
  6416  00421C  6F65               	movwf	(?_printf+1)& (0+255),b
  6417  00421E  5165               	movf	(?_printf+1)& (0+255),w,b
  6418  004220  A4D8               	btfss	status,2,c
  6419  004222  0E20               	movlw	high __smallconst
  6420  004224  6F66               	movwf	(?_printf+2)& (0+255),b
  6421  004226  EC91  F029         	call	_printf	;wreg free
  6422                           
  6423                           ;d232.c: 21:  WaitMs(5);
  6424  00422A  0E00               	movlw	0
  6425  00422C  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  6426  00422E  0E05               	movlw	5
  6427  004230  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  6428  004232  EC61  F028         	call	_WaitMs	;wreg free
  6429                           
  6430                           ;d232.c: 22:  IO.d232 = D232_INIT;
  6431  004236  0E01               	movlw	1
  6432  004238  0101               	movlb	1	; () banked
  6433  00423A  6FB6               	movwf	(_IO+13)& (0+255),b
  6434                           
  6435                           ; BSR set to: 1
  6436                           ;d232.c: 26:  if (UART2_is_rx_ready())
  6437  00423C  EC70  F02A         	call	_UART2_is_rx_ready	;wreg free
  6438  004240  0900               	iorlw	0
  6439  004242  A4D8               	btfss	status,2,c
  6440                           
  6441                           ; BSR set to: 0
  6442                           ;d232.c: 27:   UART2_Read();
  6443  004244  EC98  F026         	call	_UART2_Read	;wreg free
  6444                           
  6445                           ;d232.c: 28:  IO.io = IO_INIT;
  6446  004248  0E01               	movlw	1
  6447  00424A  0101               	movlb	1	; () banked
  6448  00424C  6FB5               	movwf	(_IO+12)& (0+255),b
  6449                           
  6450                           ; BSR set to: 1
  6451                           ;d232.c: 29:  IO.srq = S_IDLE;
  6452  00424E  0E00               	movlw	0
  6453  004250  6FB7               	movwf	(_IO+14)& (0+255),b
  6454                           
  6455                           ; BSR set to: 1
  6456                           ;d232.c: 30:  IO.srq_value = 0;
  6457  004252  0E00               	movlw	0
  6458  004254  6FB9               	movwf	(_IO+16)& (0+255),b
  6459                           
  6460                           ; BSR set to: 1
  6461                           ;d232.c: 31:  IO.button_value = 0;
  6462  004256  0E00               	movlw	0
  6463  004258  6FC1               	movwf	(_IO+24)& (0+255),b
  6464  00425A  0E00               	movlw	0
  6465  00425C  6FC0               	movwf	(_IO+23)& (0+255),b
  6466                           
  6467                           ; BSR set to: 1
  6468                           ;d232.c: 32:  ADCC_StartConversion(channel_VSS);
  6469  00425E  0E3B               	movlw	59
  6470  004260  EC53  F02A         	call	_ADCC_StartConversion
  6471                           
  6472                           ; BSR set to: 62
  6473                           ;d232.c: 33:  StartTimer(TMR_SPS, 10);
  6474  004264  0E00               	movlw	0
  6475  004266  6E07               	movwf	(StartTimer@count+1)^0,c
  6476  004268  0E0A               	movlw	10
  6477  00426A  6E06               	movwf	StartTimer@count^0,c
  6478  00426C  0E03               	movlw	3
  6479  00426E  ECFF  F027         	call	_StartTimer
  6480  004272  0012               	return		;funcret
  6481  004274                     __end_of_Digital232_init:
  6482                           	opt callstack 0
  6483                           
  6484 ;; *************** function _WaitMs *****************
  6485 ;; Defined at:
  6486 ;;		line 31 in file "timers.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;  numMilliseco    2   10[COMRAM] const unsigned short 
  6489 ;; Auto vars:     Size  Location     Type
  6490 ;;		None
  6491 ;; Return value:  Size  Location     Type
  6492 ;;                  1    wreg      void 
  6493 ;; Registers used:
  6494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6495 ;; Tracked objects:
  6496 ;;		On entry : 3F/1
  6497 ;;		On exit  : 0/0
  6498 ;;		Unchanged: 0/0
  6499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6500 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6503 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6504 ;;Total ram usage:        2 bytes
  6505 ;; Hardware stack levels used:    1
  6506 ;; Hardware stack levels required when called:    5
  6507 ;; This function calls:
  6508 ;;		_StartTimer
  6509 ;;		_TimerDone
  6510 ;; This function is called by:
  6511 ;;		_Digital232_init
  6512 ;; This function uses a non-reentrant model
  6513 ;;
  6514                           
  6515                           	psect	text44
  6516  0050C2                     __ptext44:
  6517                           	opt callstack 0
  6518  0050C2                     _WaitMs:
  6519                           	opt callstack 24
  6520                           
  6521                           ; BSR set to: 1
  6522                           ;timers.c: 31: void WaitMs(const uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  6523                           
  6524                           ;incstack = 0
  6525  0050C2  0060  F02C  F006   	movff	WaitMs@numMilliseconds,StartTimer@count
  6526  0050C8  0060  F030  F007   	movff	WaitMs@numMilliseconds+1,StartTimer@count+1
  6527  0050CE  0E00               	movlw	0
  6528  0050D0  ECFF  F027         	call	_StartTimer
  6529                           
  6530                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  6531  0050D4  D005               	goto	l7308
  6532  0050D6                     l1242:
  6533                           
  6534                           ;timers.c: 35:   __nop();
  6535  0050D6  F000               	nop	
  6536                           
  6537                           ;timers.c: 36:   __nop();
  6538  0050D8  F000               	nop	
  6539                           
  6540                           ;timers.c: 37:   __nop();
  6541  0050DA  F000               	nop	
  6542                           
  6543                           ;timers.c: 38:   __nop();
  6544  0050DC  F000               	nop	
  6545  0050DE  0004               	clrwdt		;# 
  6546  0050E0                     l7308:
  6547                           
  6548                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  6549  0050E0  0E00               	movlw	0
  6550  0050E2  ECB2  F028         	call	_TimerDone
  6551  0050E6  0900               	iorlw	0
  6552  0050E8  A4D8               	btfss	status,2,c
  6553  0050EA  0012               	return	
  6554  0050EC  D7F4               	goto	l1242
  6555  0050EE                     __end_of_WaitMs:
  6556                           	opt callstack 0
  6557                           
  6558 ;; *************** function _Digital232_RW *****************
  6559 ;; Defined at:
  6560 ;;		line 66 in file "d232.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;		None
  6563 ;; Auto vars:     Size  Location     Type
  6564 ;;  j               1   33[BANK0 ] unsigned char 
  6565 ;;  i               1   32[BANK0 ] unsigned char 
  6566 ;; Return value:  Size  Location     Type
  6567 ;;                  1    wreg      _Bool 
  6568 ;; Registers used:
  6569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6570 ;; Tracked objects:
  6571 ;;		On entry : 0/1
  6572 ;;		On exit  : 3F/1
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6576 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6577 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6578 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6579 ;;Total ram usage:        4 bytes
  6580 ;; Hardware stack levels used:    1
  6581 ;; Hardware stack levels required when called:   13
  6582 ;; This function calls:
  6583 ;;		_ADCC_GetConversionResult
  6584 ;;		_ADCC_IsConversionDone
  6585 ;;		_ADCC_StartConversion
  6586 ;;		_PWM8_LoadDutyValue
  6587 ;;		_StartTimer
  6588 ;;		_TimerDone
  6589 ;;		_UART2_Read
  6590 ;;		_UART2_Write
  6591 ;;		_UART2_is_rx_ready
  6592 ;;		_calc_pot
  6593 ;;		_printf
  6594 ;; This function is called by:
  6595 ;;		_main
  6596 ;; This function uses a non-reentrant model
  6597 ;;
  6598                           
  6599                           	psect	text45
  6600  0035A8                     __ptext45:
  6601                           	opt callstack 0
  6602  0035A8                     _Digital232_RW:
  6603                           	opt callstack 17
  6604                           
  6605                           ;incstack = 0
  6606  0035A8  0E00               	movlw	0
  6607  0035AA  0100               	movlb	0	; () banked
  6608  0035AC  6F81               	movwf	Digital232_RW@j& (0+255),b
  6609                           
  6610                           ; BSR set to: 0
  6611                           ;d232.c: 69:  static uint8_t x = 0;;d232.c: 72:  if (!TimerDone(TMR_SPS)) {
  6612  0035AE  0E03               	movlw	3
  6613  0035B0  ECB2  F028         	call	_TimerDone
  6614  0035B4  0900               	iorlw	0
  6615  0035B6  A4D8               	btfss	status,2,c
  6616  0035B8  D005               	goto	l7456
  6617                           
  6618                           ;d232.c: 73:   IO.io = IO_IDLE;
  6619  0035BA  0E00               	movlw	0
  6620  0035BC  0101               	movlb	1	; () banked
  6621  0035BE  6FB5               	movwf	(_IO+12)& (0+255),b
  6622                           
  6623                           ; BSR set to: 1
  6624                           ;d232.c: 74:   return 0;
  6625  0035C0  0E00               	movlw	0
  6626  0035C2  0012               	return	
  6627  0035C4                     l7456:
  6628                           
  6629                           ;d232.c: 77:  StartTimer(TMR_SPS, 10 + IO.speed + IO.slower);
  6630  0035C4  0101               	movlb	1	; () banked
  6631  0035C6  51C6               	movf	(_IO+29)& (0+255),w,b
  6632  0035C8  25C4               	addwf	(_IO+27)& (0+255),w,b
  6633  0035CA  0100               	movlb	0	; () banked
  6634  0035CC  6F7E               	movwf	??_Digital232_RW& (0+255),b
  6635  0035CE  0101               	movlb	1	; () banked
  6636  0035D0  51C7               	movf	(_IO+30)& (0+255),w,b
  6637  0035D2  21C5               	addwfc	(_IO+28)& (0+255),w,b
  6638  0035D4  0100               	movlb	0	; () banked
  6639  0035D6  6F7F               	movwf	(??_Digital232_RW+1)& (0+255),b
  6640  0035D8  0E0A               	movlw	10
  6641  0035DA  257E               	addwf	??_Digital232_RW& (0+255),w,b
  6642  0035DC  6E06               	movwf	StartTimer@count^0,c
  6643  0035DE  0E00               	movlw	0
  6644  0035E0  217F               	addwfc	(??_Digital232_RW+1)& (0+255),w,b
  6645  0035E2  6E07               	movwf	(StartTimer@count+1)^0,c
  6646  0035E4  0E03               	movlw	3
  6647  0035E6  ECFF  F027         	call	_StartTimer
  6648                           
  6649                           ;d232.c: 79:  ADCC_StartConversion(channel_ANA0);
  6650  0035EA  0E00               	movlw	0
  6651  0035EC  EC53  F02A         	call	_ADCC_StartConversion
  6652  0035F0                     l7460:
  6653                           
  6654                           ; BSR set to: 62
  6655  0035F0  EC5B  F02A         	call	_ADCC_IsConversionDone	;wreg free
  6656  0035F4  0900               	iorlw	0
  6657  0035F6  B4D8               	btfsc	status,2,c
  6658  0035F8  D7FB               	goto	l7460
  6659                           
  6660                           ; BSR set to: 62
  6661                           ;d232.c: 81:  IO.button_value = ADCC_GetConversionResult();
  6662  0035FA  EC49  F02A         	call	_ADCC_GetConversionResult	;wreg free
  6663  0035FE  0060  F018  F1C0   	movff	?_ADCC_GetConversionResult,_IO+23
  6664  003604  0060  F01C  F1C1   	movff	?_ADCC_GetConversionResult+1,_IO+24
  6665                           
  6666                           ; BSR set to: 62
  6667                           ;d232.c: 82:  calc_pot(IO.button_value);
  6668  00360A  0060  F700  F07A   	movff	_IO+23,calc_pot@value
  6669  003610  0060  F704  F07B   	movff	_IO+24,calc_pot@value+1
  6670  003616  ECA5  F01F         	call	_calc_pot	;wreg free
  6671                           
  6672                           ; BSR set to: 1
  6673                           ;d232.c: 87:  IO.srq = S_IDLE;
  6674  00361A  0E00               	movlw	0
  6675  00361C  6FB7               	movwf	(_IO+14)& (0+255),b
  6676                           
  6677                           ; BSR set to: 1
  6678                           ;d232.c: 89:  if (UART2_is_rx_ready()) {
  6679  00361E  EC70  F02A         	call	_UART2_is_rx_ready	;wreg free
  6680  003622  0900               	iorlw	0
  6681  003624  B4D8               	btfsc	status,2,c
  6682  003626  D040               	goto	l7494
  6683                           
  6684                           ; BSR set to: 0
  6685                           ;d232.c: 90:   j = UART2_Read();
  6686  003628  EC98  F026         	call	_UART2_Read	;wreg free
  6687  00362C  0100               	movlb	0	; () banked
  6688  00362E  6F81               	movwf	Digital232_RW@j& (0+255),b
  6689                           
  6690                           ;d232.c: 94:   switch (IO.srq) {
  6691  003630  D021               	goto	l7492
  6692  003632                     l7472:
  6693                           
  6694                           ; BSR set to: 0
  6695                           ;d232.c: 96:    if (j == 'S')
  6696  003632  0E53               	movlw	83
  6697  003634  1981               	xorwf	Digital232_RW@j& (0+255),w,b
  6698  003636  A4D8               	btfss	status,2,c
  6699  003638  D037               	goto	l7494
  6700                           
  6701                           ; BSR set to: 0
  6702                           ;d232.c: 97:     IO.srq = S_S;
  6703  00363A  0E01               	movlw	1
  6704  00363C  D018               	goto	L7
  6705  00363E                     l7476:
  6706                           
  6707                           ; BSR set to: 0
  6708                           ;d232.c: 100:    if (j == 'R')
  6709  00363E  0E52               	movlw	82
  6710  003640  1981               	xorwf	Digital232_RW@j& (0+255),w,b
  6711  003642  A4D8               	btfss	status,2,c
  6712  003644  D031               	goto	l7494
  6713                           
  6714                           ; BSR set to: 0
  6715                           ;d232.c: 101:     IO.srq = S_R;
  6716  003646  0E02               	movlw	2
  6717  003648  D012               	goto	L7
  6718  00364A                     l7480:
  6719                           
  6720                           ; BSR set to: 0
  6721                           ;d232.c: 104:    if (j == 'Q')
  6722  00364A  0E51               	movlw	81
  6723  00364C  1981               	xorwf	Digital232_RW@j& (0+255),w,b
  6724  00364E  A4D8               	btfss	status,2,c
  6725  003650  D02B               	goto	l7494
  6726                           
  6727                           ; BSR set to: 0
  6728                           ;d232.c: 105:     IO.srq = S_Q;
  6729  003652  0E03               	movlw	3
  6730  003654  D00C               	goto	L7
  6731  003656                     l7484:
  6732                           
  6733                           ; BSR set to: 0
  6734                           ;d232.c: 108:    if (j == ' ')
  6735  003656  0E20               	movlw	32
  6736  003658  1981               	xorwf	Digital232_RW@j& (0+255),w,b
  6737  00365A  A4D8               	btfss	status,2,c
  6738  00365C  D025               	goto	l7494
  6739                           
  6740                           ; BSR set to: 0
  6741                           ;d232.c: 109:     IO.srq = S_NUM;
  6742  00365E  0E04               	movlw	4
  6743  003660  D006               	goto	L7
  6744  003662                     l1166:
  6745                           
  6746                           ; BSR set to: 0
  6747                           ;d232.c: 112:    IO.srq_value = j;
  6748  003662  0060  F204  F1B9   	movff	Digital232_RW@j,_IO+16
  6749                           
  6750                           ; BSR set to: 0
  6751                           ;d232.c: 113:    IO.srq = S_UPDATE;
  6752  003668  0E05               	movlw	5
  6753  00366A  D001               	goto	L7
  6754  00366C                     l7490:
  6755                           
  6756                           ; BSR set to: 0
  6757                           ;d232.c: 116:    IO.srq = S_IDLE;
  6758  00366C  0E00               	movlw	0
  6759  00366E                     L7:
  6760  00366E  0101               	movlb	1	; () banked
  6761  003670  6FB7               	movwf	(_IO+14)& (0+255),b
  6762                           
  6763                           ;d232.c: 117:   }
  6764  003672  D01A               	goto	l7494
  6765  003674                     l7492:
  6766                           
  6767                           ; BSR set to: 0
  6768  003674  0101               	movlb	1	; () banked
  6769  003676  51B7               	movf	(_IO+14)& (0+255),w,b
  6770  003678  0100               	movlb	0	; () banked
  6771  00367A  6F7E               	movwf	??_Digital232_RW& (0+255),b
  6772  00367C  6B7F               	clrf	(??_Digital232_RW+1)& (0+255),b
  6773                           
  6774                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6775                           ; Switch size 1, requested type "simple"
  6776                           ; Number of cases is 1, Range of values is 0 to 0
  6777                           ; switch strategies available:
  6778                           ; Name         Instructions Cycles
  6779                           ; simple_byte            4     3 (average)
  6780                           ;	Chosen strategy is simple_byte
  6781  00367E  517F               	movf	(??_Digital232_RW+1)& (0+255),w,b
  6782  003680  0A00               	xorlw	0	; case 0
  6783  003682  A4D8               	btfss	status,2,c
  6784  003684  D7F3               	goto	l7490
  6785                           
  6786                           ; BSR set to: 0
  6787                           ; Switch size 1, requested type "simple"
  6788                           ; Number of cases is 5, Range of values is 0 to 4
  6789                           ; switch strategies available:
  6790                           ; Name         Instructions Cycles
  6791                           ; simple_byte           16     9 (average)
  6792                           ;	Chosen strategy is simple_byte
  6793  003686  517E               	movf	??_Digital232_RW& (0+255),w,b
  6794  003688  0A00               	xorlw	0	; case 0
  6795  00368A  B4D8               	btfsc	status,2,c
  6796  00368C  D7D2               	goto	l7472
  6797  00368E  0A01               	xorlw	1	; case 1
  6798  003690  B4D8               	btfsc	status,2,c
  6799  003692  D7D5               	goto	l7476
  6800  003694  0A03               	xorlw	3	; case 2
  6801  003696  B4D8               	btfsc	status,2,c
  6802  003698  D7D8               	goto	l7480
  6803  00369A  0A01               	xorlw	1	; case 3
  6804  00369C  B4D8               	btfsc	status,2,c
  6805  00369E  D7DB               	goto	l7484
  6806  0036A0  0A07               	xorlw	7	; case 4
  6807  0036A2  B4D8               	btfsc	status,2,c
  6808  0036A4  D7DE               	goto	l1166
  6809  0036A6  D7E2               	goto	l7490
  6810  0036A8                     l7494:
  6811                           
  6812                           ;d232.c: 120:  UART2_Write('D');
  6813  0036A8  0E44               	movlw	68
  6814  0036AA  ECDB  F026         	call	_UART2_Write
  6815                           
  6816                           ;d232.c: 121:  UART2_Write(IO.outbytes[4]);
  6817  0036AE  0101               	movlb	1	; () banked
  6818  0036B0  51B2               	movf	(_IO+9)& (0+255),w,b
  6819  0036B2  ECDB  F026         	call	_UART2_Write
  6820                           
  6821                           ;d232.c: 122:  UART2_Write(IO.outbytes[3]);
  6822  0036B6  0101               	movlb	1	; () banked
  6823  0036B8  51B1               	movf	(_IO+8)& (0+255),w,b
  6824  0036BA  ECDB  F026         	call	_UART2_Write
  6825                           
  6826                           ;d232.c: 123:  UART2_Write(IO.outbytes[2]);
  6827  0036BE  0101               	movlb	1	; () banked
  6828  0036C0  51B0               	movf	(_IO+7)& (0+255),w,b
  6829  0036C2  ECDB  F026         	call	_UART2_Write
  6830                           
  6831                           ;d232.c: 124:  UART2_Write(IO.outbytes[1]);
  6832  0036C6  0101               	movlb	1	; () banked
  6833  0036C8  51AF               	movf	(_IO+6)& (0+255),w,b
  6834  0036CA  ECDB  F026         	call	_UART2_Write
  6835                           
  6836                           ;d232.c: 125:  UART2_Write(IO.outbytes[0]);
  6837  0036CE  0101               	movlb	1	; () banked
  6838  0036D0  51AE               	movf	(_IO+5)& (0+255),w,b
  6839  0036D2  ECDB  F026         	call	_UART2_Write
  6840                           
  6841                           ;d232.c: 126:  UART2_Write('\r');
  6842  0036D6  0E0D               	movlw	13
  6843  0036D8  ECDB  F026         	call	_UART2_Write
  6844                           
  6845                           ; BSR set to: 57
  6846                           ;d232.c: 127:  printf("%s", "R0\r");
  6847  0036DC  0E4C               	movlw	low STR_5
  6848  0036DE  0100               	movlb	0	; () banked
  6849  0036E0  6F64               	movwf	printf@fmt& (0+255),b
  6850  0036E2  0E34               	movlw	low STR_16
  6851  0036E4  6F65               	movwf	(?_printf+1)& (0+255),b
  6852  0036E6  5165               	movf	(?_printf+1)& (0+255),w,b
  6853  0036E8  A4D8               	btfss	status,2,c
  6854  0036EA  0E20               	movlw	high __smallconst
  6855  0036EC  6F66               	movwf	(?_printf+2)& (0+255),b
  6856  0036EE  EC91  F029         	call	_printf	;wreg free
  6857                           
  6858                           ; BSR set to: 1
  6859                           ;d232.c: 128:  IO.output_ok = 1;
  6860  0036F2  0E01               	movlw	1
  6861  0036F4  6FB4               	movwf	(_IO+11)& (0+255),b
  6862                           
  6863                           ; BSR set to: 1
  6864                           ;d232.c: 129:  IO.io = IO_OUT;
  6865  0036F6  0E02               	movlw	2
  6866  0036F8  6FB5               	movwf	(_IO+12)& (0+255),b
  6867                           
  6868                           ; BSR set to: 1
  6869                           ;d232.c: 133:  StartTimer(TMR_RXTO, 250);
  6870  0036FA  0E00               	movlw	0
  6871  0036FC  6E07               	movwf	(StartTimer@count+1)^0,c
  6872  0036FE  0EFA               	movlw	250
  6873  003700  6E06               	movwf	StartTimer@count^0,c
  6874  003702  0E02               	movlw	2
  6875  003704  ECFF  F027         	call	_StartTimer
  6876                           
  6877                           ;d232.c: 134:  while (!UART2_is_rx_ready()) {
  6878  003708  D015               	goto	l7518
  6879  00370A                     l7504:
  6880                           
  6881                           ; BSR set to: 0
  6882                           ;d232.c: 135:   if (TimerDone(TMR_RXTO)) {
  6883  00370A  0E02               	movlw	2
  6884  00370C  ECB2  F028         	call	_TimerDone
  6885  003710  0900               	iorlw	0
  6886  003712  B4D8               	btfsc	status,2,c
  6887  003714  D00F               	goto	l7518
  6888                           
  6889                           ;d232.c: 136:    PWM8_LoadDutyValue(x++);
  6890  003716  0060  F288  F006   	movff	Digital232_RW@x,PWM8_LoadDutyValue@dutyValue
  6891  00371C  6A07               	clrf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  6892  00371E  EC91  F027         	call	_PWM8_LoadDutyValue	;wreg free
  6893  003722  0100               	movlb	0	; () banked
  6894  003724  2BA2               	incf	Digital232_RW@x& (0+255),f,b
  6895                           
  6896                           ; BSR set to: 0
  6897                           ;d232.c: 137:    if (x > 3)
  6898  003726  0E03               	movlw	3
  6899  003728  65A2               	cpfsgt	Digital232_RW@x& (0+255),b
  6900  00372A  D002               	goto	l1171
  6901                           
  6902                           ; BSR set to: 0
  6903                           ;d232.c: 138:     x = 0;
  6904  00372C  0E00               	movlw	0
  6905  00372E  6FA2               	movwf	Digital232_RW@x& (0+255),b
  6906  003730                     l1171:
  6907                           
  6908                           ; BSR set to: 0
  6909                           ;d232.c: 139:    IO.io = IO_FAIL;
  6910  003730  0E06               	movlw	6
  6911  003732  D744               	goto	L8
  6912  003734                     l7518:
  6913                           
  6914                           ;d232.c: 134:  while (!UART2_is_rx_ready()) {
  6915  003734  EC70  F02A         	call	_UART2_is_rx_ready	;wreg free
  6916  003738  0900               	iorlw	0
  6917  00373A  B4D8               	btfsc	status,2,c
  6918  00373C  D7E6               	goto	l7504
  6919                           
  6920                           ; BSR set to: 0
  6921                           ;d232.c: 147:  i = 0;
  6922  00373E  0E00               	movlw	0
  6923  003740  6F80               	movwf	Digital232_RW@i& (0+255),b
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;d232.c: 148:  StartTimer(TMR_RXTO, 250);
  6927  003742  0E00               	movlw	0
  6928  003744  6E07               	movwf	(StartTimer@count+1)^0,c
  6929  003746  0EFA               	movlw	250
  6930  003748  6E06               	movwf	StartTimer@count^0,c
  6931  00374A  0E02               	movlw	2
  6932  00374C  ECFF  F027         	call	_StartTimer
  6933                           
  6934                           ;d232.c: 149:  while (!TimerDone(TMR_RXTO) && (i < 6)) {
  6935  003750  D015               	goto	l7530
  6936  003752                     l7524:
  6937                           
  6938                           ; BSR set to: 0
  6939                           ;d232.c: 150:   if (UART2_is_rx_ready()) {
  6940  003752  EC70  F02A         	call	_UART2_is_rx_ready	;wreg free
  6941  003756  0900               	iorlw	0
  6942  003758  B4D8               	btfsc	status,2,c
  6943  00375A  D010               	goto	l7530
  6944                           
  6945                           ; BSR set to: 0
  6946                           ;d232.c: 151:    IO.inbytes[4 - i] = UART2_Read();
  6947  00375C  EC98  F026         	call	_UART2_Read	;wreg free
  6948  003760  0100               	movlb	0	; () banked
  6949  003762  6F7E               	movwf	??_Digital232_RW& (0+255),b
  6950  003764  5180               	movf	Digital232_RW@i& (0+255),w,b
  6951  003766  08AD               	sublw	low (_IO+4)
  6952  003768  6ED9               	movwf	fsr2l,c
  6953  00376A  0E00               	movlw	0
  6954  00376C  A0D8               	btfss	status,0,c
  6955  00376E  2AE8               	incf	wreg,f,c
  6956  003770  0801               	sublw	high (_IO+4)
  6957  003772  6EDA               	movwf	fsr2h,c
  6958  003774  0060  F1FB  FFDF   	movff	??_Digital232_RW,indf2
  6959                           
  6960                           ; BSR set to: 0
  6961                           ;d232.c: 152:    i++;
  6962  00377A  2B80               	incf	Digital232_RW@i& (0+255),f,b
  6963  00377C                     l7530:
  6964                           
  6965                           ;d232.c: 149:  while (!TimerDone(TMR_RXTO) && (i < 6)) {
  6966  00377C  0E02               	movlw	2
  6967  00377E  ECB2  F028         	call	_TimerDone
  6968  003782  0900               	iorlw	0
  6969  003784  A4D8               	btfss	status,2,c
  6970  003786  D004               	goto	u7930
  6971  003788  0E05               	movlw	5
  6972  00378A  0100               	movlb	0	; () banked
  6973  00378C  6580               	cpfsgt	Digital232_RW@i& (0+255),b
  6974  00378E  D7E1               	goto	l7524
  6975  003790                     u7930:
  6976                           
  6977                           ;d232.c: 155:  if (TimerDone(TMR_RXTO) || i < 6) {
  6978  003790  0E02               	movlw	2
  6979  003792  ECB2  F028         	call	_TimerDone
  6980  003796  0900               	iorlw	0
  6981  003798  A4D8               	btfss	status,2,c
  6982  00379A  D004               	goto	u7950
  6983  00379C  0E06               	movlw	6
  6984  00379E  0100               	movlb	0	; () banked
  6985  0037A0  6180               	cpfslt	Digital232_RW@i& (0+255),b
  6986  0037A2  D00A               	goto	l7550
  6987  0037A4                     u7950:
  6988                           
  6989                           ;d232.c: 156:   PWM8_LoadDutyValue(x++);
  6990  0037A4  0060  F288  F006   	movff	Digital232_RW@x,PWM8_LoadDutyValue@dutyValue
  6991  0037AA  6A07               	clrf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  6992  0037AC  EC91  F027         	call	_PWM8_LoadDutyValue	;wreg free
  6993  0037B0  0100               	movlb	0	; () banked
  6994  0037B2  2BA2               	incf	Digital232_RW@x& (0+255),f,b
  6995                           
  6996                           ; BSR set to: 0
  6997                           ;d232.c: 157:   if (x > 16)
  6998  0037B4  0E10               	movlw	16
  6999  0037B6  D7B8               	goto	L9
  7000  0037B8                     l7550:
  7001                           
  7002                           ; BSR set to: 0
  7003                           ;d232.c: 163:  if (UART2_is_rx_ready())
  7004  0037B8  EC70  F02A         	call	_UART2_is_rx_ready	;wreg free
  7005  0037BC  0900               	iorlw	0
  7006  0037BE  A4D8               	btfss	status,2,c
  7007                           
  7008                           ; BSR set to: 0
  7009                           ;d232.c: 164:   UART2_Read();
  7010  0037C0  EC98  F026         	call	_UART2_Read	;wreg free
  7011                           
  7012                           ;d232.c: 166:  IO.input_ok = 1;
  7013  0037C4  0E01               	movlw	1
  7014  0037C6  0101               	movlb	1	; () banked
  7015  0037C8  6FB3               	movwf	(_IO+10)& (0+255),b
  7016                           
  7017                           ; BSR set to: 1
  7018                           ;d232.c: 167:  IO.io = IO_IN;
  7019  0037CA  0E03               	movlw	3
  7020  0037CC  6FB5               	movwf	(_IO+12)& (0+255),b
  7021                           
  7022                           ; BSR set to: 1
  7023                           ;d232.c: 168:  IO.d232 = D232_OUT_IN;
  7024  0037CE  0E02               	movlw	2
  7025  0037D0  6FB6               	movwf	(_IO+13)& (0+255),b
  7026                           
  7027                           ; BSR set to: 1
  7028                           ;d232.c: 170:  PWM8_LoadDutyValue(199);
  7029  0037D2  0E00               	movlw	0
  7030  0037D4  6E07               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  7031  0037D6  0EC7               	movlw	199
  7032  0037D8  6E06               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  7033  0037DA  EC91  F027         	call	_PWM8_LoadDutyValue	;wreg free
  7034                           
  7035                           ;d232.c: 171:  IO.io = IO_UPDATE;
  7036  0037DE  0E05               	movlw	5
  7037  0037E0  0101               	movlb	1	; () banked
  7038  0037E2  6FB5               	movwf	(_IO+12)& (0+255),b
  7039                           
  7040                           ; BSR set to: 1
  7041                           ;d232.c: 172:  return 1;
  7042  0037E4  0E01               	movlw	1
  7043                           
  7044                           ; BSR set to: 1
  7045  0037E6  0012               	return		;funcret
  7046  0037E8                     __end_of_Digital232_RW:
  7047                           	opt callstack 0
  7048                           
  7049 ;; *************** function _printf *****************
  7050 ;; Defined at:
  7051 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  7052 ;; Parameters:    Size  Location     Type
  7053 ;;  fmt             1    4[BANK0 ] PTR const unsigned char 
  7054 ;;		 -> STR_15(3), STR_13(3), STR_11(3), STR_9(3), 
  7055 ;;		 -> STR_7(3), STR_5(3), 
  7056 ;; Auto vars:     Size  Location     Type
  7057 ;;  ret             2    0        int 
  7058 ;;  ap              1    9[BANK0 ] PTR void [1]
  7059 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7060 ;; Return value:  Size  Location     Type
  7061 ;;                  2    4[BANK0 ] int 
  7062 ;; Registers used:
  7063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7064 ;; Tracked objects:
  7065 ;;		On entry : 3F/0
  7066 ;;		On exit  : 3F/1
  7067 ;;		Unchanged: 0/0
  7068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7069 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7070 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7072 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7073 ;;Total ram usage:        6 bytes
  7074 ;; Hardware stack levels used:    1
  7075 ;; Hardware stack levels required when called:   12
  7076 ;; This function calls:
  7077 ;;		_vfprintf
  7078 ;; This function is called by:
  7079 ;;		_Digital232_init
  7080 ;;		_Digital232_RW
  7081 ;; This function uses a non-reentrant model
  7082 ;;
  7083                           
  7084                           	psect	text46
  7085  005322                     __ptext46:
  7086                           	opt callstack 0
  7087  005322                     _printf:
  7088                           	opt callstack 17
  7089                           
  7090                           ; BSR set to: 0
  7091                           
  7092                           ; BSR set to: 1
  7093                           ;incstack = 0
  7094  005322  0E65               	movlw	low (?_printf+1)
  7095  005324  6F69               	movwf	printf@ap& (0+255),b
  7096                           
  7097                           ; BSR set to: 0
  7098  005326  0E00               	movlw	0
  7099  005328  6F60               	movwf	vfprintf@fp& (0+255),b
  7100  00532A  0E00               	movlw	0
  7101  00532C  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  7102  00532E  0060  F190  F062   	movff	printf@fmt,vfprintf@fmt
  7103  005334  0E69               	movlw	low printf@ap
  7104  005336  6F63               	movwf	vfprintf@ap& (0+255),b
  7105  005338  ECD4  F025         	call	_vfprintf	;wreg free
  7106                           
  7107                           ; BSR set to: 1
  7108  00533C  0012               	return		;funcret
  7109  00533E                     __end_of_printf:
  7110                           	opt callstack 0
  7111                           
  7112 ;; *************** function _vfprintf *****************
  7113 ;; Defined at:
  7114 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7115 ;; Parameters:    Size  Location     Type
  7116 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7117 ;;		 -> sprintf@f(6), NULL(0), 
  7118 ;;  fmt             1    2[BANK0 ] PTR const unsigned char 
  7119 ;;		 -> STR_15(3), STR_13(3), STR_11(3), STR_9(3), 
  7120 ;;		 -> STR_7(3), STR_5(3), STR_3(12), STR_2(17), 
  7121 ;;		 -> STR_1(17), 
  7122 ;;  ap              1    3[BANK0 ] PTR PTR void 
  7123 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;  cfmt            1   84[COMRAM] PTR unsigned char 
  7126 ;;		 -> STR_15(3), STR_13(3), STR_11(3), STR_9(3), 
  7127 ;;		 -> STR_7(3), STR_5(3), STR_3(12), STR_2(17), 
  7128 ;;		 -> STR_1(17), 
  7129 ;; Return value:  Size  Location     Type
  7130 ;;                  2    0[BANK0 ] int 
  7131 ;; Registers used:
  7132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7133 ;; Tracked objects:
  7134 ;;		On entry : 3F/0
  7135 ;;		On exit  : 3F/1
  7136 ;;		Unchanged: 0/0
  7137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7138 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7139 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7141 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7142 ;;Total ram usage:        5 bytes
  7143 ;; Hardware stack levels used:    1
  7144 ;; Hardware stack levels required when called:   11
  7145 ;; This function calls:
  7146 ;;		_vfpfcnvrt
  7147 ;; This function is called by:
  7148 ;;		_sprintf
  7149 ;;		_printf
  7150 ;; This function uses a non-reentrant model
  7151 ;;
  7152                           
  7153                           	psect	text47
  7154  004BA8                     __ptext47:
  7155                           	opt callstack 0
  7156  004BA8                     _vfprintf:
  7157                           	opt callstack 17
  7158                           
  7159                           ; BSR set to: 0
  7160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  7161                           
  7162                           ; BSR set to: 1
  7163                           ;incstack = 0
  7164  004BA8  0060  F188  F055   	movff	vfprintf@fmt,vfprintf@cfmt
  7165                           
  7166                           ; BSR set to: 0
  7167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  7168  004BAE  0E00               	movlw	0
  7169  004BB0  0101               	movlb	1	; () banked
  7170  004BB2  6F8B               	movwf	(_nout+1)& (0+255),b
  7171  004BB4  0E00               	movlw	0
  7172  004BB6  6F8A               	movwf	_nout& (0+255),b
  7173                           
  7174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7175  004BB8  D012               	goto	l6984
  7176  004BBA                     l6982:
  7177                           
  7178                           ; BSR set to: 1
  7179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  7180  004BBA  0060  F180  F047   	movff	vfprintf@fp,vfpfcnvrt@fp
  7181  004BC0  0060  F184  F048   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7182  004BC6  0E55               	movlw	low vfprintf@cfmt
  7183  004BC8  6E49               	movwf	vfpfcnvrt@fmt^0,c
  7184  004BCA  0060  F18C  F04A   	movff	vfprintf@ap,vfpfcnvrt@ap
  7185  004BD0  ECF4  F01B         	call	_vfpfcnvrt	;wreg free
  7186  004BD4  5047               	movf	?_vfpfcnvrt^0,w,c
  7187  004BD6  0101               	movlb	1	; () banked
  7188  004BD8  278A               	addwf	_nout& (0+255),f,b
  7189  004BDA  5048               	movf	(?_vfpfcnvrt+1)^0,w,c
  7190  004BDC  238B               	addwfc	(_nout+1)& (0+255),f,b
  7191  004BDE                     l6984:
  7192                           
  7193                           ; BSR set to: 1
  7194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7195  004BDE  0060  F157  FFF6   	movff	vfprintf@cfmt,tblptrl
  7196  004BE4                     	if	1	;There is more than 1 active tblptr byte
  7197  004BE4  0E20               	movlw	high __smallconst
  7198  004BE6  6EF7               	movwf	tblptrh,c
  7199  004BE8                     	endif
  7200  004BE8                     	if	0	;tblptru may be non-zero
  7201  004BE8                     	endif
  7202  004BE8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7203  004BE8  0E00               	movlw	low (__smallconst shr (0+16))
  7204  004BEA  6EF8               	movwf	tblptru,c
  7205  004BEC                     	endif
  7206  004BEC  0008               	tblrd		*
  7207  004BEE  50F5               	movf	tablat,w,c
  7208  004BF0  0900               	iorlw	0
  7209  004BF2  A4D8               	btfss	status,2,c
  7210  004BF4  D7E2               	goto	l6982
  7211                           
  7212                           ; BSR set to: 1
  7213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  7214  004BF6  0060  F628  F060   	movff	_nout,?_vfprintf
  7215  004BFC  0060  F62C  F061   	movff	_nout+1,?_vfprintf+1
  7216                           
  7217                           ; BSR set to: 1
  7218  004C02  0012               	return		;funcret
  7219  004C04                     __end_of_vfprintf:
  7220                           	opt callstack 0
  7221                           
  7222 ;; *************** function _vfpfcnvrt *****************
  7223 ;; Defined at:
  7224 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7225 ;; Parameters:    Size  Location     Type
  7226 ;;  fp              2   70[COMRAM] PTR struct _IO_FILE
  7227 ;;		 -> sprintf@f(6), NULL(0), 
  7228 ;;  fmt             1   72[COMRAM] PTR PTR unsigned char 
  7229 ;;		 -> vfprintf@cfmt(1), 
  7230 ;;  ap              1   73[COMRAM] PTR PTR void 
  7231 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7232 ;; Auto vars:     Size  Location     Type
  7233 ;;  ll              8   74[COMRAM] long long 
  7234 ;;  llu             8    0        unsigned long long 
  7235 ;;  f               4    0        unsigned long long 
  7236 ;;  vp              3    0        PTR void 
  7237 ;;  ct              3    0        unsigned char [3]
  7238 ;;  cp              2   82[COMRAM] PTR unsigned char 
  7239 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(4), STR_14(4), 
  7240 ;;		 -> STR_12(4), STR_10(4), STR_8(4), STR_6(4), 
  7241 ;;		 -> STR_4(5), 
  7242 ;;  i               2    0        int 
  7243 ;;  done            2    0        int 
  7244 ;;  c               1    0        unsigned char 
  7245 ;; Return value:  Size  Location     Type
  7246 ;;                  2   70[COMRAM] int 
  7247 ;; Registers used:
  7248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7249 ;; Tracked objects:
  7250 ;;		On entry : 3E/1
  7251 ;;		On exit  : 0/0
  7252 ;;		Unchanged: 0/0
  7253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7254 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7255 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7257 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7258 ;;Total ram usage:       14 bytes
  7259 ;; Hardware stack levels used:    1
  7260 ;; Hardware stack levels required when called:   10
  7261 ;; This function calls:
  7262 ;;		_dtoa
  7263 ;;		_fputc
  7264 ;;		_stoa
  7265 ;; This function is called by:
  7266 ;;		_vfprintf
  7267 ;; This function uses a non-reentrant model
  7268 ;;
  7269                           
  7270                           	psect	text48
  7271  0037E8                     __ptext48:
  7272                           	opt callstack 0
  7273  0037E8                     _vfpfcnvrt:
  7274                           	opt callstack 17
  7275                           
  7276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  7277                           
  7278                           ; BSR set to: 1
  7279                           ;incstack = 0
  7280  0037E8  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7281  0037EA  6ED9               	movwf	fsr2l,c
  7282  0037EC  6ADA               	clrf	fsr2h,c
  7283  0037EE  006F FF7F FFF6     	movff	indf2,tblptrl
  7284  0037F4                     	if	1	;There is more than 1 active tblptr byte
  7285  0037F4  0E20               	movlw	high __smallconst
  7286  0037F6  6EF7               	movwf	tblptrh,c
  7287  0037F8                     	endif
  7288  0037F8                     	if	0	;tblptru may be non-zero
  7289  0037F8                     	endif
  7290  0037F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7291  0037F8  0E00               	movlw	low (__smallconst shr (0+16))
  7292  0037FA  6EF8               	movwf	tblptru,c
  7293  0037FC                     	endif
  7294  0037FC  0008               	tblrd		*
  7295  0037FE  50F5               	movf	tablat,w,c
  7296  003800  0A25               	xorlw	37
  7297  003802  A4D8               	btfss	status,2,c
  7298  003804  D0D5               	goto	l6604
  7299                           
  7300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  7301  003806  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7302  003808  6ED9               	movwf	fsr2l,c
  7303  00380A  6ADA               	clrf	fsr2h,c
  7304  00380C  2ADF               	incf	indf2,f,c
  7305                           
  7306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  7307  00380E  0E00               	movlw	0
  7308  003810  0101               	movlb	1	; () banked
  7309  003812  6F8D               	movwf	(_width+1)& (0+255),b
  7310  003814  0E00               	movlw	0
  7311  003816  6F8C               	movwf	_width& (0+255),b
  7312  003818  0060  F630  F056   	movff	_width,_flags
  7313  00381E  0060  F634  F057   	movff	_width+1,_flags+1
  7314                           
  7315                           ; BSR set to: 1
  7316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  7317  003824  0100               	movlb	0	; () banked
  7318  003826  699E               	setf	_prec& (0+255),b
  7319  003828  699F               	setf	(_prec+1)& (0+255),b
  7320                           
  7321                           ; BSR set to: 0
  7322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7323  00382A  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7324  00382C  6ED9               	movwf	fsr2l,c
  7325  00382E  6ADA               	clrf	fsr2h,c
  7326  003830  006F FF7F FFF6     	movff	indf2,tblptrl
  7327  003836                     	if	1	;There is more than 1 active tblptr byte
  7328  003836  0E20               	movlw	high __smallconst
  7329  003838  6EF7               	movwf	tblptrh,c
  7330  00383A                     	endif
  7331  00383A                     	if	0	;tblptru may be non-zero
  7332  00383A                     	endif
  7333  00383A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7334  00383A  0E00               	movlw	low (__smallconst shr (0+16))
  7335  00383C  6EF8               	movwf	tblptru,c
  7336  00383E                     	endif
  7337  00383E  0008               	tblrd		*
  7338  003840  50F5               	movf	tablat,w,c
  7339  003842  0A64               	xorlw	100
  7340  003844  B4D8               	btfsc	status,2,c
  7341  003846  D00F               	goto	u6930
  7342                           
  7343                           ; BSR set to: 0
  7344  003848  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7345  00384A  6ED9               	movwf	fsr2l,c
  7346  00384C  6ADA               	clrf	fsr2h,c
  7347  00384E  006F FF7F FFF6     	movff	indf2,tblptrl
  7348  003854                     	if	1	;There is more than 1 active tblptr byte
  7349  003854  0E20               	movlw	high __smallconst
  7350  003856  6EF7               	movwf	tblptrh,c
  7351  003858                     	endif
  7352  003858                     	if	0	;tblptru may be non-zero
  7353  003858                     	endif
  7354  003858                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7355  003858  0E00               	movlw	low (__smallconst shr (0+16))
  7356  00385A  6EF8               	movwf	tblptru,c
  7357  00385C                     	endif
  7358  00385C  0008               	tblrd		*
  7359  00385E  50F5               	movf	tablat,w,c
  7360  003860  0A69               	xorlw	105
  7361  003862  A4D8               	btfss	status,2,c
  7362  003864  D042               	goto	l6578
  7363  003866                     u6930:
  7364                           
  7365                           ; BSR set to: 0
  7366                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  7367  003866  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7368  003868  6ED9               	movwf	fsr2l,c
  7369  00386A  6ADA               	clrf	fsr2h,c
  7370  00386C  2ADF               	incf	indf2,f,c
  7371                           
  7372                           ; BSR set to: 0
  7373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7374  00386E  504A               	movf	vfpfcnvrt@ap^0,w,c
  7375  003870  6ED9               	movwf	fsr2l,c
  7376  003872  6ADA               	clrf	fsr2h,c
  7377  003874  50DF               	movf	indf2,w,c
  7378  003876  2ADF               	incf	indf2,f,c
  7379  003878  2ADF               	incf	indf2,f,c
  7380  00387A  6ED9               	movwf	fsr2l,c
  7381  00387C  6ADA               	clrf	fsr2h,c
  7382  00387E  006F FF78  F04B    	movff	postinc2,vfpfcnvrt@ll
  7383  003884  006F FF74  F04C    	movff	postdec2,vfpfcnvrt@ll+1
  7384  00388A  0E00               	movlw	0
  7385  00388C  BE4C               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  7386  00388E  0EFF               	movlw	-1
  7387  003890  6E4D               	movwf	(vfpfcnvrt@ll+2)^0,c
  7388  003892  6E4E               	movwf	(vfpfcnvrt@ll+3)^0,c
  7389  003894  6E4F               	movwf	(vfpfcnvrt@ll+4)^0,c
  7390  003896  6E50               	movwf	(vfpfcnvrt@ll+5)^0,c
  7391  003898  6E51               	movwf	(vfpfcnvrt@ll+6)^0,c
  7392  00389A  6E52               	movwf	(vfpfcnvrt@ll+7)^0,c
  7393                           
  7394                           ; BSR set to: 0
  7395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7396  00389C  0060  F11C  F023   	movff	vfpfcnvrt@fp,dtoa@fp
  7397  0038A2  0060  F120  F024   	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7398  0038A8  0060  F12C  F025   	movff	vfpfcnvrt@ll,dtoa@d
  7399  0038AE  0060  F130  F026   	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7400  0038B4  0060  F134  F027   	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7401  0038BA  0060  F138  F028   	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7402  0038C0  0060  F13C  F029   	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7403  0038C6  0060  F140  F02A   	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7404  0038CC  0060  F144  F02B   	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7405  0038D2  0060  F148  F02C   	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7406  0038D8  EC28  F018         	call	_dtoa	;wreg free
  7407  0038DC  0060  F08C  F047   	movff	?_dtoa,?_vfpfcnvrt
  7408  0038E2  0060  F090  F048   	movff	?_dtoa+1,?_vfpfcnvrt+1
  7409  0038E8  0012               	return	
  7410  0038EA                     l6578:
  7411                           
  7412                           ; BSR set to: 0
  7413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  7414  0038EA  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7415  0038EC  6ED9               	movwf	fsr2l,c
  7416  0038EE  6ADA               	clrf	fsr2h,c
  7417  0038F0  006F FF7F FFF6     	movff	indf2,tblptrl
  7418  0038F6                     	if	1	;There is more than 1 active tblptr byte
  7419  0038F6  0E20               	movlw	high __smallconst
  7420  0038F8  6EF7               	movwf	tblptrh,c
  7421  0038FA                     	endif
  7422  0038FA                     	if	0	;tblptru may be non-zero
  7423  0038FA                     	endif
  7424  0038FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7425  0038FA  0E00               	movlw	low (__smallconst shr (0+16))
  7426  0038FC  6EF8               	movwf	tblptru,c
  7427  0038FE                     	endif
  7428  0038FE  0008               	tblrd		*
  7429  003900  50F5               	movf	tablat,w,c
  7430  003902  0A73               	xorlw	115
  7431  003904  A4D8               	btfss	status,2,c
  7432  003906  D027               	goto	l6588
  7433                           
  7434                           ; BSR set to: 0
  7435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  7436  003908  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7437  00390A  6ED9               	movwf	fsr2l,c
  7438  00390C  6ADA               	clrf	fsr2h,c
  7439  00390E  2ADF               	incf	indf2,f,c
  7440                           
  7441                           ; BSR set to: 0
  7442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  7443  003910  504A               	movf	vfpfcnvrt@ap^0,w,c
  7444  003912  6ED9               	movwf	fsr2l,c
  7445  003914  6ADA               	clrf	fsr2h,c
  7446  003916  0E02               	movlw	2
  7447  003918  26DF               	addwf	indf2,f,c
  7448  00391A  5CDF               	subwf	indf2,w,c
  7449  00391C  6ED9               	movwf	fsr2l,c
  7450  00391E  6ADA               	clrf	fsr2h,c
  7451  003920  006F FF78  F053    	movff	postinc2,vfpfcnvrt@cp
  7452  003926  006F FF78  F054    	movff	postinc2,vfpfcnvrt@cp+1
  7453                           
  7454                           ; BSR set to: 0
  7455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  7456  00392C  0060  F11C  F011   	movff	vfpfcnvrt@fp,stoa@fp
  7457  003932  0060  F120  F012   	movff	vfpfcnvrt@fp+1,stoa@fp+1
  7458  003938  0060  F14C  F013   	movff	vfpfcnvrt@cp,stoa@s
  7459  00393E  0060  F150  F014   	movff	vfpfcnvrt@cp+1,stoa@s+1
  7460  003944  ECF3  F01C         	call	_stoa	;wreg free
  7461  003948  0060  F044  F047   	movff	?_stoa,?_vfpfcnvrt
  7462  00394E  0060  F048  F048   	movff	?_stoa+1,?_vfpfcnvrt+1
  7463  003954  0012               	return	
  7464  003956                     l6588:
  7465                           
  7466                           ; BSR set to: 0
  7467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  7468  003956  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7469  003958  6ED9               	movwf	fsr2l,c
  7470  00395A  6ADA               	clrf	fsr2h,c
  7471  00395C  006F FF7F FFF6     	movff	indf2,tblptrl
  7472  003962                     	if	1	;There is more than 1 active tblptr byte
  7473  003962  0E20               	movlw	high __smallconst
  7474  003964  6EF7               	movwf	tblptrh,c
  7475  003966                     	endif
  7476  003966                     	if	0	;tblptru may be non-zero
  7477  003966                     	endif
  7478  003966                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7479  003966  0E00               	movlw	low (__smallconst shr (0+16))
  7480  003968  6EF8               	movwf	tblptru,c
  7481  00396A                     	endif
  7482  00396A  0008               	tblrd		*
  7483  00396C  50F5               	movf	tablat,w,c
  7484  00396E  0A25               	xorlw	37
  7485  003970  A4D8               	btfss	status,2,c
  7486  003972  D015               	goto	l6598
  7487                           
  7488                           ; BSR set to: 0
  7489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  7490  003974  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7491  003976  6ED9               	movwf	fsr2l,c
  7492  003978  6ADA               	clrf	fsr2h,c
  7493  00397A  2ADF               	incf	indf2,f,c
  7494                           
  7495                           ; BSR set to: 0
  7496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  7497  00397C  0E00               	movlw	0
  7498  00397E  6E09               	movwf	(fputc@c+1)^0,c
  7499  003980  0E25               	movlw	37
  7500  003982  6E08               	movwf	fputc@c^0,c
  7501  003984  0060  F11C  F00A   	movff	vfpfcnvrt@fp,fputc@fp
  7502  00398A  0060  F120  F00B   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7503  003990  ECAC  F022         	call	_fputc	;wreg free
  7504  003994                     l6594:
  7505                           
  7506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  7507  003994  0E00               	movlw	0
  7508  003996  6E48               	movwf	(?_vfpfcnvrt+1)^0,c
  7509  003998  0E01               	movlw	1
  7510  00399A  6E47               	movwf	?_vfpfcnvrt^0,c
  7511  00399C  0012               	return	
  7512  00399E                     l6598:
  7513                           
  7514                           ; BSR set to: 0
  7515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  7516  00399E  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7517  0039A0  6ED9               	movwf	fsr2l,c
  7518  0039A2  6ADA               	clrf	fsr2h,c
  7519  0039A4  2ADF               	incf	indf2,f,c
  7520                           
  7521                           ; BSR set to: 0
  7522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  7523  0039A6  0E00               	movlw	0
  7524  0039A8  6E48               	movwf	(?_vfpfcnvrt+1)^0,c
  7525  0039AA  0E00               	movlw	0
  7526  0039AC  6E47               	movwf	?_vfpfcnvrt^0,c
  7527  0039AE  0012               	return	
  7528  0039B0                     l6604:
  7529                           
  7530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  7531  0039B0  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7532  0039B2  6ED9               	movwf	fsr2l,c
  7533  0039B4  6ADA               	clrf	fsr2h,c
  7534  0039B6  006F FF7F FFF6     	movff	indf2,tblptrl
  7535  0039BC                     	if	1	;There is more than 1 active tblptr byte
  7536  0039BC  0E20               	movlw	high __smallconst
  7537  0039BE  6EF7               	movwf	tblptrh,c
  7538  0039C0                     	endif
  7539  0039C0                     	if	0	;tblptru may be non-zero
  7540  0039C0                     	endif
  7541  0039C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7542  0039C0  0E00               	movlw	low (__smallconst shr (0+16))
  7543  0039C2  6EF8               	movwf	tblptru,c
  7544  0039C4                     	endif
  7545  0039C4  0008               	tblrd		*
  7546  0039C6  50F5               	movf	tablat,w,c
  7547  0039C8  6E08               	movwf	fputc@c^0,c
  7548  0039CA  6A09               	clrf	(fputc@c+1)^0,c
  7549  0039CC  0060  F11C  F00A   	movff	vfpfcnvrt@fp,fputc@fp
  7550  0039D2  0060  F120  F00B   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7551  0039D8  ECAC  F022         	call	_fputc	;wreg free
  7552                           
  7553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  7554  0039DC  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7555  0039DE  6ED9               	movwf	fsr2l,c
  7556  0039E0  6ADA               	clrf	fsr2h,c
  7557  0039E2  2ADF               	incf	indf2,f,c
  7558  0039E4  D7D7               	goto	l6594
  7559  0039E6                     __end_of_vfpfcnvrt:
  7560                           	opt callstack 0
  7561                           
  7562 ;; *************** function _stoa *****************
  7563 ;; Defined at:
  7564 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7565 ;; Parameters:    Size  Location     Type
  7566 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7567 ;;		 -> sprintf@f(6), NULL(0), 
  7568 ;;  s               2   18[COMRAM] PTR unsigned char 
  7569 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(4), STR_14(4), 
  7570 ;;		 -> STR_12(4), STR_10(4), STR_8(4), STR_6(4), 
  7571 ;;		 -> STR_4(5), 
  7572 ;; Auto vars:     Size  Location     Type
  7573 ;;  nuls            7   21[COMRAM] unsigned char [7]
  7574 ;;  l               2   36[COMRAM] int 
  7575 ;;  p               2   34[COMRAM] int 
  7576 ;;  cp              2   32[COMRAM] PTR unsigned char 
  7577 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), STR_16(4), 
  7578 ;;		 -> STR_14(4), STR_12(4), STR_10(4), STR_8(4), 
  7579 ;;		 -> STR_6(4), STR_4(5), 
  7580 ;;  w               2   30[COMRAM] int 
  7581 ;;  i               2   28[COMRAM] int 
  7582 ;; Return value:  Size  Location     Type
  7583 ;;                  2   16[COMRAM] int 
  7584 ;; Registers used:
  7585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7586 ;; Tracked objects:
  7587 ;;		On entry : 3F/0
  7588 ;;		On exit  : 0/0
  7589 ;;		Unchanged: 0/0
  7590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7591 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7592 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7593 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7594 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7595 ;;Total ram usage:       22 bytes
  7596 ;; Hardware stack levels used:    1
  7597 ;; Hardware stack levels required when called:    7
  7598 ;; This function calls:
  7599 ;;		_fputc
  7600 ;;		_strlen
  7601 ;; This function is called by:
  7602 ;;		_vfpfcnvrt
  7603 ;; This function uses a non-reentrant model
  7604 ;;
  7605                           
  7606                           	psect	text49
  7607  0039E6                     __ptext49:
  7608                           	opt callstack 0
  7609  0039E6                     _stoa:
  7610                           	opt callstack 19
  7611                           
  7612                           ; BSR set to: 0
  7613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7614                           
  7615                           ;incstack = 0
  7616  0039E6  EE20  F19E         	lfsr	2,stoa@F1139
  7617  0039EA  EE10  F016         	lfsr	1,stoa@nuls
  7618  0039EE  0E06               	movlw	6
  7619  0039F0                     u6401:
  7620  0039F0  006F FF6F FFE3     	movff	plusw2,plusw1
  7621  0039F6  06E8               	decf	wreg,f,c
  7622  0039F8  E2FB               	bc	u6401
  7623                           
  7624                           ; BSR set to: 0
  7625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  7626  0039FA  0060  F04C  F021   	movff	stoa@s,stoa@cp
  7627  003A00  0060  F050  F022   	movff	stoa@s+1,stoa@cp+1
  7628                           
  7629                           ; BSR set to: 0
  7630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  7631  003A06  5021               	movf	stoa@cp^0,w,c
  7632  003A08  1022               	iorwf	(stoa@cp+1)^0,w,c
  7633  003A0A  A4D8               	btfss	status,2,c
  7634  003A0C  D003               	goto	l6310
  7635                           
  7636                           ; BSR set to: 0
  7637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  7638  003A0E  0E16               	movlw	low stoa@nuls
  7639  003A10  6E21               	movwf	stoa@cp^0,c
  7640  003A12  6A22               	clrf	(stoa@cp+1)^0,c
  7641  003A14                     l6310:
  7642                           
  7643                           ; BSR set to: 0
  7644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  7645  003A14  0060  F084  F006   	movff	stoa@cp,strlen@s
  7646  003A1A  0060  F088  F007   	movff	stoa@cp+1,strlen@s+1
  7647  003A20  EC02  F026         	call	_strlen	;wreg free
  7648  003A24  0060  F018  F025   	movff	?_strlen,stoa@l
  7649  003A2A  0060  F01C  F026   	movff	?_strlen+1,stoa@l+1
  7650                           
  7651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  7652  003A30  0060  F278  F023   	movff	_prec,stoa@p
  7653  003A36  0060  F27C  F024   	movff	_prec+1,stoa@p+1
  7654                           
  7655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  7656  003A3C  BE24               	btfsc	(stoa@p+1)^0,7,c
  7657  003A3E  D010               	goto	l1398
  7658  003A40  5025               	movf	stoa@l^0,w,c
  7659  003A42  5C23               	subwf	stoa@p^0,w,c
  7660  003A44  5024               	movf	(stoa@p+1)^0,w,c
  7661  003A46  0A80               	xorlw	128
  7662  003A48  6E15               	movwf	??_stoa^0,c
  7663  003A4A  5026               	movf	(stoa@l+1)^0,w,c
  7664  003A4C  0A80               	xorlw	128
  7665  003A4E  5815               	subwfb	??_stoa^0,w,c
  7666  003A50  B0D8               	btfsc	status,0,c
  7667  003A52  D006               	goto	l1398
  7668  003A54  0060  F08C  F025   	movff	stoa@p,stoa@l
  7669  003A5A  0060  F090  F026   	movff	stoa@p+1,stoa@l+1
  7670  003A60                     l1398:
  7671                           
  7672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
  7673  003A60  0060  F094  F023   	movff	stoa@l,stoa@p
  7674  003A66  0060  F098  F024   	movff	stoa@l+1,stoa@p+1
  7675                           
  7676                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
  7677  003A6C  0060  F630  F01F   	movff	_width,stoa@w
  7678  003A72  0060  F634  F020   	movff	_width+1,stoa@w+1
  7679                           
  7680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  7681  003A78  A056               	btfss	_flags^0,0,c
  7682  003A7A  D00F               	goto	l6324
  7683  003A7C  D018               	goto	u6450
  7684  003A7E                     l6320:
  7685                           
  7686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  7687  003A7E  0E00               	movlw	0
  7688  003A80  6E09               	movwf	(fputc@c+1)^0,c
  7689  003A82  0E20               	movlw	32
  7690  003A84  6E08               	movwf	fputc@c^0,c
  7691  003A86  0060  F044  F00A   	movff	stoa@fp,fputc@fp
  7692  003A8C  0060  F048  F00B   	movff	stoa@fp+1,fputc@fp+1
  7693  003A92  ECAC  F022         	call	_fputc	;wreg free
  7694                           
  7695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
  7696  003A96  4A25               	infsnz	stoa@l^0,f,c
  7697  003A98  2A26               	incf	(stoa@l+1)^0,f,c
  7698  003A9A                     l6324:
  7699                           
  7700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  7701  003A9A  501F               	movf	stoa@w^0,w,c
  7702  003A9C  5C25               	subwf	stoa@l^0,w,c
  7703  003A9E  5026               	movf	(stoa@l+1)^0,w,c
  7704  003AA0  0A80               	xorlw	128
  7705  003AA2  6E15               	movwf	??_stoa^0,c
  7706  003AA4  5020               	movf	(stoa@w+1)^0,w,c
  7707  003AA6  0A80               	xorlw	128
  7708  003AA8  5815               	subwfb	??_stoa^0,w,c
  7709  003AAA  A0D8               	btfss	status,0,c
  7710  003AAC  D7E8               	goto	l6320
  7711  003AAE                     u6450:
  7712                           
  7713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  7714  003AAE  0E00               	movlw	0
  7715  003AB0  6E1E               	movwf	(stoa@i+1)^0,c
  7716  003AB2  0E00               	movlw	0
  7717  003AB4  6E1D               	movwf	stoa@i^0,c
  7718                           
  7719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  7720  003AB6  D025               	goto	l6334
  7721  003AB8                     l6328:
  7722                           
  7723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  7724  003AB8  0060  F087  FFF6   	movff	stoa@cp,tblptrl
  7725  003ABE  0060  F08B  FFF7   	movff	stoa@cp+1,tblptrh
  7726  003AC4  0E00               	movlw	low (__smallconst shr (0+16))
  7727  003AC6  6EF8               	movwf	tblptru,c
  7728  003AC8  0E1F               	movlw	(high __ramtop+-1)
  7729  003ACA  64F7               	cpfsgt	tblptrh,c
  7730  003ACC  D003               	bra	u6467
  7731  003ACE  0008               	tblrd		*
  7732  003AD0  50F5               	movf	tablat,w,c
  7733  003AD2  D007               	bra	u6460
  7734  003AD4                     u6467:
  7735  003AD4  006F FFDB FFE1     	movff	tblptrl,fsr1l
  7736  003ADA  006F FFDF FFE2     	movff	tblptrh,fsr1h
  7737  003AE0  50E7               	movf	indf1,w,c
  7738  003AE2                     u6460:
  7739  003AE2  6E15               	movwf	??_stoa^0,c
  7740  003AE4  5015               	movf	??_stoa^0,w,c
  7741  003AE6  6E08               	movwf	fputc@c^0,c
  7742  003AE8  6A09               	clrf	(fputc@c+1)^0,c
  7743  003AEA  0060  F044  F00A   	movff	stoa@fp,fputc@fp
  7744  003AF0  0060  F048  F00B   	movff	stoa@fp+1,fputc@fp+1
  7745  003AF6  ECAC  F022         	call	_fputc	;wreg free
  7746                           
  7747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  7748  003AFA  4A21               	infsnz	stoa@cp^0,f,c
  7749  003AFC  2A22               	incf	(stoa@cp+1)^0,f,c
  7750                           
  7751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
  7752  003AFE  4A1D               	infsnz	stoa@i^0,f,c
  7753  003B00  2A1E               	incf	(stoa@i+1)^0,f,c
  7754  003B02                     l6334:
  7755                           
  7756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  7757  003B02  5023               	movf	stoa@p^0,w,c
  7758  003B04  5C1D               	subwf	stoa@i^0,w,c
  7759  003B06  501E               	movf	(stoa@i+1)^0,w,c
  7760  003B08  0A80               	xorlw	128
  7761  003B0A  6E15               	movwf	??_stoa^0,c
  7762  003B0C  5024               	movf	(stoa@p+1)^0,w,c
  7763  003B0E  0A80               	xorlw	128
  7764  003B10  5815               	subwfb	??_stoa^0,w,c
  7765  003B12  A0D8               	btfss	status,0,c
  7766  003B14  D7D1               	goto	l6328
  7767                           
  7768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  7769  003B16  B056               	btfsc	_flags^0,0,c
  7770  003B18  D00F               	goto	l6342
  7771  003B1A  D018               	goto	u6490
  7772  003B1C                     l6338:
  7773                           
  7774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  7775  003B1C  0E00               	movlw	0
  7776  003B1E  6E09               	movwf	(fputc@c+1)^0,c
  7777  003B20  0E20               	movlw	32
  7778  003B22  6E08               	movwf	fputc@c^0,c
  7779  003B24  0060  F044  F00A   	movff	stoa@fp,fputc@fp
  7780  003B2A  0060  F048  F00B   	movff	stoa@fp+1,fputc@fp+1
  7781  003B30  ECAC  F022         	call	_fputc	;wreg free
  7782                           
  7783                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
  7784  003B34  4A25               	infsnz	stoa@l^0,f,c
  7785  003B36  2A26               	incf	(stoa@l+1)^0,f,c
  7786  003B38                     l6342:
  7787                           
  7788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  7789  003B38  501F               	movf	stoa@w^0,w,c
  7790  003B3A  5C25               	subwf	stoa@l^0,w,c
  7791  003B3C  5026               	movf	(stoa@l+1)^0,w,c
  7792  003B3E  0A80               	xorlw	128
  7793  003B40  6E15               	movwf	??_stoa^0,c
  7794  003B42  5020               	movf	(stoa@w+1)^0,w,c
  7795  003B44  0A80               	xorlw	128
  7796  003B46  5815               	subwfb	??_stoa^0,w,c
  7797  003B48  A0D8               	btfss	status,0,c
  7798  003B4A  D7E8               	goto	l6338
  7799  003B4C                     u6490:
  7800                           
  7801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
  7802                           
  7803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 586:     }
  7804  003B4C  0060  F094  F011   	movff	stoa@l,?_stoa
  7805  003B52  0060  F098  F012   	movff	stoa@l+1,?_stoa+1
  7806  003B58  0012               	return		;funcret
  7807  003B5A                     __end_of_stoa:
  7808                           	opt callstack 0
  7809                           
  7810 ;; *************** function _dtoa *****************
  7811 ;; Defined at:
  7812 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7813 ;; Parameters:    Size  Location     Type
  7814 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  7815 ;;		 -> sprintf@f(6), NULL(0), 
  7816 ;;  d               8   36[COMRAM] long long 
  7817 ;; Auto vars:     Size  Location     Type
  7818 ;;  n               8   60[COMRAM] long long 
  7819 ;;  i               2   68[COMRAM] int 
  7820 ;;  s               2   58[COMRAM] int 
  7821 ;;  w               2   56[COMRAM] int 
  7822 ;;  p               2   54[COMRAM] int 
  7823 ;; Return value:  Size  Location     Type
  7824 ;;                  2   34[COMRAM] int 
  7825 ;; Registers used:
  7826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7827 ;; Tracked objects:
  7828 ;;		On entry : 3F/0
  7829 ;;		On exit  : 0/0
  7830 ;;		Unchanged: 0/0
  7831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7832 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7833 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7834 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7835 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7836 ;;Total ram usage:       36 bytes
  7837 ;; Hardware stack levels used:    1
  7838 ;; Hardware stack levels required when called:    9
  7839 ;; This function calls:
  7840 ;;		___aodiv
  7841 ;;		___aomod
  7842 ;;		_abs
  7843 ;;		_pad
  7844 ;; This function is called by:
  7845 ;;		_vfpfcnvrt
  7846 ;; This function uses a non-reentrant model
  7847 ;;
  7848                           
  7849                           	psect	text50
  7850  003050                     __ptext50:
  7851                           	opt callstack 0
  7852  003050                     _dtoa:
  7853                           	opt callstack 17
  7854                           
  7855                           ; BSR set to: 0
  7856                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
  7857                           
  7858                           ;incstack = 0
  7859  003050  0060  F094  F03D   	movff	dtoa@d,dtoa@n
  7860  003056  0060  F098  F03E   	movff	dtoa@d+1,dtoa@n+1
  7861  00305C  0060  F09C  F03F   	movff	dtoa@d+2,dtoa@n+2
  7862  003062  0060  F0A0  F040   	movff	dtoa@d+3,dtoa@n+3
  7863  003068  0060  F0A4  F041   	movff	dtoa@d+4,dtoa@n+4
  7864  00306E  0060  F0A8  F042   	movff	dtoa@d+5,dtoa@n+5
  7865  003074  0060  F0AC  F043   	movff	dtoa@d+6,dtoa@n+6
  7866  00307A  0060  F0B0  F044   	movff	dtoa@d+7,dtoa@n+7
  7867                           
  7868                           ; BSR set to: 0
  7869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  7870  003080  AE44               	btfss	(dtoa@n+7)^0,7,c
  7871  003082  D002               	goto	u6250
  7872  003084  0E01               	movlw	1
  7873  003086  D001               	goto	u6260
  7874  003088                     u6250:
  7875  003088  0E00               	movlw	0
  7876  00308A                     u6260:
  7877  00308A  6E3B               	movwf	dtoa@s^0,c
  7878  00308C  6A3C               	clrf	(dtoa@s+1)^0,c
  7879                           
  7880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  7881  00308E  503B               	movf	dtoa@s^0,w,c
  7882  003090  103C               	iorwf	(dtoa@s+1)^0,w,c
  7883  003092  B4D8               	btfsc	status,2,c
  7884  003094  D010               	goto	l6246
  7885                           
  7886                           ; BSR set to: 0
  7887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  7888  003096  1E44               	comf	(dtoa@n+7)^0,f,c
  7889  003098  1E43               	comf	(dtoa@n+6)^0,f,c
  7890  00309A  1E42               	comf	(dtoa@n+5)^0,f,c
  7891  00309C  1E41               	comf	(dtoa@n+4)^0,f,c
  7892  00309E  1E40               	comf	(dtoa@n+3)^0,f,c
  7893  0030A0  1E3F               	comf	(dtoa@n+2)^0,f,c
  7894  0030A2  1E3E               	comf	(dtoa@n+1)^0,f,c
  7895  0030A4  6C3D               	negf	dtoa@n^0,c
  7896  0030A6  0E00               	movlw	0
  7897  0030A8  223E               	addwfc	(dtoa@n+1)^0,f,c
  7898  0030AA  223F               	addwfc	(dtoa@n+2)^0,f,c
  7899  0030AC  2240               	addwfc	(dtoa@n+3)^0,f,c
  7900  0030AE  2241               	addwfc	(dtoa@n+4)^0,f,c
  7901  0030B0  2242               	addwfc	(dtoa@n+5)^0,f,c
  7902  0030B2  2243               	addwfc	(dtoa@n+6)^0,f,c
  7903  0030B4  2244               	addwfc	(dtoa@n+7)^0,f,c
  7904  0030B6                     l6246:
  7905                           
  7906                           ; BSR set to: 0
  7907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  7908  0030B6  AF9F               	btfss	(_prec+1)& (0+255),7,b
  7909                           
  7910                           ; BSR set to: 0
  7911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  7912  0030B8  9256               	bcf	_flags^0,1,c
  7913                           
  7914                           ; BSR set to: 0
  7915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  7916  0030BA  BF9F               	btfsc	(_prec+1)& (0+255),7,b
  7917  0030BC  D005               	goto	u6290
  7918  0030BE  519F               	movf	(_prec+1)& (0+255),w,b
  7919  0030C0  E108               	bnz	l1369
  7920  0030C2  059E               	decf	_prec& (0+255),w,b
  7921  0030C4  B0D8               	btfsc	status,0,c
  7922  0030C6  D005               	goto	l1369
  7923  0030C8                     u6290:
  7924                           
  7925                           ; BSR set to: 0
  7926  0030C8  0E00               	movlw	0
  7927  0030CA  6E38               	movwf	(dtoa@p+1)^0,c
  7928  0030CC  0E01               	movlw	1
  7929  0030CE  6E37               	movwf	dtoa@p^0,c
  7930  0030D0  D006               	goto	l1371
  7931  0030D2                     l1369:
  7932                           
  7933                           ; BSR set to: 0
  7934  0030D2  0060  F278  F037   	movff	_prec,dtoa@p
  7935  0030D8  0060  F27C  F038   	movff	_prec+1,dtoa@p+1
  7936  0030DE                     l1371:
  7937                           
  7938                           ; BSR set to: 0
  7939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
  7940  0030DE  0060  F630  F039   	movff	_width,dtoa@w
  7941  0030E4  0060  F634  F03A   	movff	_width+1,dtoa@w+1
  7942                           
  7943                           ; BSR set to: 0
  7944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  7945  0030EA  503B               	movf	dtoa@s^0,w,c
  7946  0030EC  103C               	iorwf	(dtoa@s+1)^0,w,c
  7947  0030EE  A4D8               	btfss	status,2,c
  7948  0030F0  D002               	goto	u6310
  7949                           
  7950                           ; BSR set to: 0
  7951  0030F2  A456               	btfss	_flags^0,2,c
  7952  0030F4  D003               	goto	l6260
  7953  0030F6                     u6310:
  7954                           
  7955                           ; BSR set to: 0
  7956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
  7957  0030F6  0639               	decf	dtoa@w^0,f,c
  7958  0030F8  A0D8               	btfss	status,0,c
  7959  0030FA  063A               	decf	(dtoa@w+1)^0,f,c
  7960  0030FC                     l6260:
  7961                           
  7962                           ; BSR set to: 0
  7963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  7964  0030FC  0E00               	movlw	0
  7965  0030FE  6E46               	movwf	(dtoa@i+1)^0,c
  7966  003100  0E1F               	movlw	31
  7967  003102  6E45               	movwf	dtoa@i^0,c
  7968                           
  7969                           ; BSR set to: 0
  7970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  7971  003104  0E00               	movlw	0
  7972  003106  0102               	movlb	2	; () banked
  7973  003108  6F9F               	movwf	(_dbuf+31)& (0+255),b
  7974                           
  7975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7976  00310A  D09E               	goto	l6274
  7977  00310C                     l6264:
  7978                           
  7979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
  7980  00310C  0645               	decf	dtoa@i^0,f,c
  7981  00310E  A0D8               	btfss	status,0,c
  7982  003110  0646               	decf	(dtoa@i+1)^0,f,c
  7983                           
  7984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  7985  003112  0E80               	movlw	low _dbuf
  7986  003114  2445               	addwf	dtoa@i^0,w,c
  7987  003116  6ED9               	movwf	fsr2l,c
  7988  003118  0E02               	movlw	high _dbuf
  7989  00311A  2046               	addwfc	(dtoa@i+1)^0,w,c
  7990  00311C  6EDA               	movwf	fsr2h,c
  7991  00311E  0060  F0F4  F006   	movff	dtoa@n,___aomod@dividend
  7992  003124  0060  F0F8  F007   	movff	dtoa@n+1,___aomod@dividend+1
  7993  00312A  0060  F0FC  F008   	movff	dtoa@n+2,___aomod@dividend+2
  7994  003130  0060  F100  F009   	movff	dtoa@n+3,___aomod@dividend+3
  7995  003136  0060  F104  F00A   	movff	dtoa@n+4,___aomod@dividend+4
  7996  00313C  0060  F108  F00B   	movff	dtoa@n+5,___aomod@dividend+5
  7997  003142  0060  F10C  F00C   	movff	dtoa@n+6,___aomod@dividend+6
  7998  003148  0060  F110  F00D   	movff	dtoa@n+7,___aomod@dividend+7
  7999  00314E  0E0A               	movlw	10
  8000  003150  6E0E               	movwf	___aomod@divisor^0,c
  8001  003152  0E00               	movlw	0
  8002  003154  6E0F               	movwf	(___aomod@divisor+1)^0,c
  8003  003156  0E00               	movlw	0
  8004  003158  6E10               	movwf	(___aomod@divisor+2)^0,c
  8005  00315A  0E00               	movlw	0
  8006  00315C  6E11               	movwf	(___aomod@divisor+3)^0,c
  8007  00315E  0E00               	movlw	0
  8008  003160  6E12               	movwf	(___aomod@divisor+4)^0,c
  8009  003162  0E00               	movlw	0
  8010  003164  6E13               	movwf	(___aomod@divisor+5)^0,c
  8011  003166  0E00               	movlw	0
  8012  003168  6E14               	movwf	(___aomod@divisor+6)^0,c
  8013  00316A  0E00               	movlw	0
  8014  00316C  6E15               	movwf	(___aomod@divisor+7)^0,c
  8015  00316E  EC0B  F01F         	call	___aomod	;wreg free
  8016  003172  0060  F018  F02D   	movff	?___aomod,??_dtoa
  8017  003178  0060  F01C  F02E   	movff	?___aomod+1,??_dtoa+1
  8018  00317E  0060  F020  F02F   	movff	?___aomod+2,??_dtoa+2
  8019  003184  0060  F024  F030   	movff	?___aomod+3,??_dtoa+3
  8020  00318A  0060  F028  F031   	movff	?___aomod+4,??_dtoa+4
  8021  003190  0060  F02C  F032   	movff	?___aomod+5,??_dtoa+5
  8022  003196  0060  F030  F033   	movff	?___aomod+6,??_dtoa+6
  8023  00319C  0060  F034  F034   	movff	?___aomod+7,??_dtoa+7
  8024  0031A2  0060  F0B4  F018   	movff	??_dtoa,abs@a
  8025  0031A8  0060  F0BC  F019   	movff	??_dtoa+2,abs@a+1
  8026  0031AE  EC1B  F027         	call	_abs	;wreg free
  8027  0031B2  5018               	movf	?_abs^0,w,c
  8028  0031B4  0F30               	addlw	48
  8029  0031B6  6EDF               	movwf	indf2,c
  8030                           
  8031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
  8032  0031B8  0637               	decf	dtoa@p^0,f,c
  8033  0031BA  A0D8               	btfss	status,0,c
  8034  0031BC  0638               	decf	(dtoa@p+1)^0,f,c
  8035                           
  8036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
  8037  0031BE  0639               	decf	dtoa@w^0,f,c
  8038  0031C0  A0D8               	btfss	status,0,c
  8039  0031C2  063A               	decf	(dtoa@w+1)^0,f,c
  8040                           
  8041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  8042  0031C4  0060  F0F4  F006   	movff	dtoa@n,___aodiv@dividend
  8043  0031CA  0060  F0F8  F007   	movff	dtoa@n+1,___aodiv@dividend+1
  8044  0031D0  0060  F0FC  F008   	movff	dtoa@n+2,___aodiv@dividend+2
  8045  0031D6  0060  F100  F009   	movff	dtoa@n+3,___aodiv@dividend+3
  8046  0031DC  0060  F104  F00A   	movff	dtoa@n+4,___aodiv@dividend+4
  8047  0031E2  0060  F108  F00B   	movff	dtoa@n+5,___aodiv@dividend+5
  8048  0031E8  0060  F10C  F00C   	movff	dtoa@n+6,___aodiv@dividend+6
  8049  0031EE  0060  F110  F00D   	movff	dtoa@n+7,___aodiv@dividend+7
  8050  0031F4  0E0A               	movlw	10
  8051  0031F6  6E0E               	movwf	___aodiv@divisor^0,c
  8052  0031F8  0E00               	movlw	0
  8053  0031FA  6E0F               	movwf	(___aodiv@divisor+1)^0,c
  8054  0031FC  0E00               	movlw	0
  8055  0031FE  6E10               	movwf	(___aodiv@divisor+2)^0,c
  8056  003200  0E00               	movlw	0
  8057  003202  6E11               	movwf	(___aodiv@divisor+3)^0,c
  8058  003204  0E00               	movlw	0
  8059  003206  6E12               	movwf	(___aodiv@divisor+4)^0,c
  8060  003208  0E00               	movlw	0
  8061  00320A  6E13               	movwf	(___aodiv@divisor+5)^0,c
  8062  00320C  0E00               	movlw	0
  8063  00320E  6E14               	movwf	(___aodiv@divisor+6)^0,c
  8064  003210  0E00               	movlw	0
  8065  003212  6E15               	movwf	(___aodiv@divisor+7)^0,c
  8066  003214  EC5F  F01E         	call	___aodiv	;wreg free
  8067  003218  0060  F018  F03D   	movff	?___aodiv,dtoa@n
  8068  00321E  0060  F01C  F03E   	movff	?___aodiv+1,dtoa@n+1
  8069  003224  0060  F020  F03F   	movff	?___aodiv+2,dtoa@n+2
  8070  00322A  0060  F024  F040   	movff	?___aodiv+3,dtoa@n+3
  8071  003230  0060  F028  F041   	movff	?___aodiv+4,dtoa@n+4
  8072  003236  0060  F02C  F042   	movff	?___aodiv+5,dtoa@n+5
  8073  00323C  0060  F030  F043   	movff	?___aodiv+6,dtoa@n+6
  8074  003242  0060  F034  F044   	movff	?___aodiv+7,dtoa@n+7
  8075  003248                     l6274:
  8076                           
  8077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8078  003248  BE46               	btfsc	(dtoa@i+1)^0,7,c
  8079  00324A  D01F               	goto	u6360
  8080  00324C  5046               	movf	(dtoa@i+1)^0,w,c
  8081  00324E  E103               	bnz	u6320
  8082  003250  0445               	decf	dtoa@i^0,w,c
  8083  003252  A0D8               	btfss	status,0,c
  8084  003254  D01A               	goto	u6360
  8085  003256                     u6320:
  8086  003256  503D               	movf	dtoa@n^0,w,c
  8087  003258  103E               	iorwf	(dtoa@n+1)^0,w,c
  8088  00325A  103F               	iorwf	(dtoa@n+2)^0,w,c
  8089  00325C  1040               	iorwf	(dtoa@n+3)^0,w,c
  8090  00325E  1041               	iorwf	(dtoa@n+4)^0,w,c
  8091  003260  1042               	iorwf	(dtoa@n+5)^0,w,c
  8092  003262  1043               	iorwf	(dtoa@n+6)^0,w,c
  8093  003264  1044               	iorwf	(dtoa@n+7)^0,w,c
  8094  003266  A4D8               	btfss	status,2,c
  8095  003268  D751               	goto	l6264
  8096  00326A  BE38               	btfsc	(dtoa@p+1)^0,7,c
  8097  00326C  D005               	goto	u6340
  8098  00326E  5038               	movf	(dtoa@p+1)^0,w,c
  8099  003270  E102               	bnz	u6341
  8100  003272  0437               	decf	dtoa@p^0,w,c
  8101  003274  B0D8               	btfsc	status,0,c
  8102  003276                     u6341:
  8103  003276  D74A               	goto	l6264
  8104  003278                     u6340:
  8105  003278  BE3A               	btfsc	(dtoa@w+1)^0,7,c
  8106  00327A  D007               	goto	u6360
  8107  00327C  503A               	movf	(dtoa@w+1)^0,w,c
  8108  00327E  E103               	bnz	u6350
  8109  003280  0439               	decf	dtoa@w^0,w,c
  8110  003282  A0D8               	btfss	status,0,c
  8111  003284  D002               	goto	u6360
  8112  003286                     u6350:
  8113  003286  B256               	btfsc	_flags^0,1,c
  8114  003288  D741               	goto	l6264
  8115  00328A                     u6360:
  8116                           
  8117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  8118  00328A  503B               	movf	dtoa@s^0,w,c
  8119  00328C  103C               	iorwf	(dtoa@s+1)^0,w,c
  8120  00328E  A4D8               	btfss	status,2,c
  8121  003290  D002               	goto	u6380
  8122  003292  A456               	btfss	_flags^0,2,c
  8123  003294  D018               	goto	l6298
  8124  003296                     u6380:
  8125                           
  8126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
  8127  003296  0645               	decf	dtoa@i^0,f,c
  8128  003298  A0D8               	btfss	status,0,c
  8129  00329A  0646               	decf	(dtoa@i+1)^0,f,c
  8130                           
  8131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  8132  00329C  503B               	movf	dtoa@s^0,w,c
  8133  00329E  103C               	iorwf	(dtoa@s+1)^0,w,c
  8134  0032A0  A4D8               	btfss	status,2,c
  8135  0032A2  D004               	goto	l6294
  8136  0032A4  0E00               	movlw	0
  8137  0032A6  6E36               	movwf	(_dtoa$2719+1)^0,c
  8138  0032A8  0E2B               	movlw	43
  8139  0032AA  D003               	goto	L10
  8140  0032AC                     l6294:
  8141  0032AC  0E00               	movlw	0
  8142  0032AE  6E36               	movwf	(_dtoa$2719+1)^0,c
  8143  0032B0  0E2D               	movlw	45
  8144  0032B2                     L10:
  8145  0032B2  6E35               	movwf	_dtoa$2719^0,c
  8146  0032B4  0E80               	movlw	low _dbuf
  8147  0032B6  2445               	addwf	dtoa@i^0,w,c
  8148  0032B8  6ED9               	movwf	fsr2l,c
  8149  0032BA  0E02               	movlw	high _dbuf
  8150  0032BC  2046               	addwfc	(dtoa@i+1)^0,w,c
  8151  0032BE  6EDA               	movwf	fsr2h,c
  8152  0032C0  0060  F0D7  FFDF   	movff	_dtoa$2719,indf2
  8153  0032C6                     l6298:
  8154                           
  8155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  8156  0032C6  0060  F08C  F018   	movff	dtoa@fp,pad@fp
  8157  0032CC  0060  F090  F019   	movff	dtoa@fp+1,pad@fp+1
  8158  0032D2  0E80               	movlw	low _dbuf
  8159  0032D4  2445               	addwf	dtoa@i^0,w,c
  8160  0032D6  6E1A               	movwf	pad@buf^0,c
  8161  0032D8  0E02               	movlw	high _dbuf
  8162  0032DA  2046               	addwfc	(dtoa@i+1)^0,w,c
  8163  0032DC  6E1B               	movwf	(pad@buf+1)^0,c
  8164  0032DE  0060  F0E4  F01C   	movff	dtoa@w,pad@p
  8165  0032E4  0060  F0E8  F01D   	movff	dtoa@w+1,pad@p+1
  8166  0032EA  ECFC  F021         	call	_pad	;wreg free
  8167  0032EE  0060  F060  F023   	movff	?_pad,?_dtoa
  8168  0032F4  0060  F064  F024   	movff	?_pad+1,?_dtoa+1
  8169  0032FA  0012               	return		;funcret
  8170  0032FC                     __end_of_dtoa:
  8171                           	opt callstack 0
  8172                           
  8173 ;; *************** function _pad *****************
  8174 ;; Defined at:
  8175 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8176 ;; Parameters:    Size  Location     Type
  8177 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  8178 ;;		 -> sprintf@f(6), NULL(0), 
  8179 ;;  buf             2   25[COMRAM] PTR unsigned char 
  8180 ;;		 -> dbuf(32), 
  8181 ;;  p               2   27[COMRAM] int 
  8182 ;; Auto vars:     Size  Location     Type
  8183 ;;  w               2   32[COMRAM] int 
  8184 ;;  i               2   30[COMRAM] int 
  8185 ;; Return value:  Size  Location     Type
  8186 ;;                  2   23[COMRAM] int 
  8187 ;; Registers used:
  8188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8189 ;; Tracked objects:
  8190 ;;		On entry : 0/2
  8191 ;;		On exit  : 0/0
  8192 ;;		Unchanged: 0/0
  8193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8194 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8195 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8196 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8197 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8198 ;;Total ram usage:       11 bytes
  8199 ;; Hardware stack levels used:    1
  8200 ;; Hardware stack levels required when called:    8
  8201 ;; This function calls:
  8202 ;;		_fputc
  8203 ;;		_fputs
  8204 ;;		_strlen
  8205 ;; This function is called by:
  8206 ;;		_dtoa
  8207 ;; This function uses a non-reentrant model
  8208 ;;
  8209                           
  8210                           	psect	text51
  8211  0043F8                     __ptext51:
  8212                           	opt callstack 0
  8213  0043F8                     _pad:
  8214                           	opt callstack 17
  8215                           
  8216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  8217                           
  8218                           ;incstack = 0
  8219  0043F8  A056               	btfss	_flags^0,0,c
  8220  0043FA  D00E               	goto	l6138
  8221                           
  8222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  8223  0043FC  0060  F068  F011   	movff	pad@buf,fputs@s
  8224  004402  0060  F06C  F012   	movff	pad@buf+1,fputs@s+1
  8225  004408  0060  F060  F013   	movff	pad@fp,fputs@fp
  8226  00440E  0060  F064  F014   	movff	pad@fp+1,fputs@fp+1
  8227  004414  ECFC  F026         	call	_fputs	;wreg free
  8228  004418                     l6138:
  8229                           
  8230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  8231  004418  BE1D               	btfsc	(pad@p+1)^0,7,c
  8232  00441A  D007               	goto	l6142
  8233  00441C  0060  F070  F021   	movff	pad@p,pad@w
  8234  004422  0060  F074  F022   	movff	pad@p+1,pad@w+1
  8235  004428  D004               	goto	l1358
  8236  00442A                     l6142:
  8237  00442A  0E00               	movlw	0
  8238  00442C  6E22               	movwf	(pad@w+1)^0,c
  8239  00442E  0E00               	movlw	0
  8240  004430  6E21               	movwf	pad@w^0,c
  8241  004432                     l1358:
  8242                           
  8243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  8244  004432  0E00               	movlw	0
  8245  004434  6E20               	movwf	(pad@i+1)^0,c
  8246  004436  0E00               	movlw	0
  8247  004438  6E1F               	movwf	pad@i^0,c
  8248                           
  8249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  8250  00443A  D00E               	goto	l6148
  8251  00443C                     l6144:
  8252                           
  8253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  8254  00443C  0E00               	movlw	0
  8255  00443E  6E09               	movwf	(fputc@c+1)^0,c
  8256  004440  0E20               	movlw	32
  8257  004442  6E08               	movwf	fputc@c^0,c
  8258  004444  0060  F060  F00A   	movff	pad@fp,fputc@fp
  8259  00444A  0060  F064  F00B   	movff	pad@fp+1,fputc@fp+1
  8260  004450  ECAC  F022         	call	_fputc	;wreg free
  8261                           
  8262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
  8263  004454  4A1F               	infsnz	pad@i^0,f,c
  8264  004456  2A20               	incf	(pad@i+1)^0,f,c
  8265  004458                     l6148:
  8266                           
  8267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  8268  004458  5021               	movf	pad@w^0,w,c
  8269  00445A  5C1F               	subwf	pad@i^0,w,c
  8270  00445C  5020               	movf	(pad@i+1)^0,w,c
  8271  00445E  0A80               	xorlw	128
  8272  004460  6E1E               	movwf	??_pad^0,c
  8273  004462  5022               	movf	(pad@w+1)^0,w,c
  8274  004464  0A80               	xorlw	128
  8275  004466  581E               	subwfb	??_pad^0,w,c
  8276  004468  A0D8               	btfss	status,0,c
  8277  00446A  D7E8               	goto	l6144
  8278                           
  8279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  8280  00446C  B056               	btfsc	_flags^0,0,c
  8281  00446E  D00E               	goto	l6152
  8282                           
  8283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  8284  004470  0060  F068  F011   	movff	pad@buf,fputs@s
  8285  004476  0060  F06C  F012   	movff	pad@buf+1,fputs@s+1
  8286  00447C  0060  F060  F013   	movff	pad@fp,fputs@fp
  8287  004482  0060  F064  F014   	movff	pad@fp+1,fputs@fp+1
  8288  004488  ECFC  F026         	call	_fputs	;wreg free
  8289  00448C                     l6152:
  8290                           
  8291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  8292  00448C  0060  F068  F006   	movff	pad@buf,strlen@s
  8293  004492  0060  F06C  F007   	movff	pad@buf+1,strlen@s+1
  8294  004498  EC02  F026         	call	_strlen	;wreg free
  8295  00449C  5021               	movf	pad@w^0,w,c
  8296  00449E  2406               	addwf	?_strlen^0,w,c
  8297  0044A0  6E18               	movwf	?_pad^0,c
  8298  0044A2  5022               	movf	(pad@w+1)^0,w,c
  8299  0044A4  2007               	addwfc	(?_strlen+1)^0,w,c
  8300  0044A6  6E19               	movwf	(?_pad+1)^0,c
  8301  0044A8  0012               	return		;funcret
  8302  0044AA                     __end_of_pad:
  8303                           	opt callstack 0
  8304                           
  8305 ;; *************** function _strlen *****************
  8306 ;; Defined at:
  8307 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
  8308 ;; Parameters:    Size  Location     Type
  8309 ;;  s               2    5[COMRAM] PTR const unsigned char 
  8310 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  8311 ;;		 -> STR_16(4), STR_14(4), STR_12(4), STR_10(4), 
  8312 ;;		 -> STR_8(4), STR_6(4), STR_4(5), main@buffer(24), 
  8313 ;;		 -> work_sw@buffer(128), 
  8314 ;; Auto vars:     Size  Location     Type
  8315 ;;  a               2    7[COMRAM] PTR const unsigned char 
  8316 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  8317 ;;		 -> STR_16(4), STR_14(4), STR_12(4), STR_10(4), 
  8318 ;;		 -> STR_8(4), STR_6(4), STR_4(5), main@buffer(24), 
  8319 ;;		 -> work_sw@buffer(128), 
  8320 ;; Return value:  Size  Location     Type
  8321 ;;                  2    5[COMRAM] unsigned int 
  8322 ;; Registers used:
  8323 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8324 ;; Tracked objects:
  8325 ;;		On entry : 0/1
  8326 ;;		On exit  : 0/0
  8327 ;;		Unchanged: 0/0
  8328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8329 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8330 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8332 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8333 ;;Total ram usage:        4 bytes
  8334 ;; Hardware stack levels used:    1
  8335 ;; Hardware stack levels required when called:    4
  8336 ;; This function calls:
  8337 ;;		Nothing
  8338 ;; This function is called by:
  8339 ;;		_eaDogM_WriteString
  8340 ;;		_pad
  8341 ;;		_stoa
  8342 ;; This function uses a non-reentrant model
  8343 ;;
  8344                           
  8345                           	psect	text52
  8346  004C04                     __ptext52:
  8347                           	opt callstack 0
  8348  004C04                     _strlen:
  8349                           	opt callstack 21
  8350                           
  8351                           ;incstack = 0
  8352  004C04  0060  F018  F008   	movff	strlen@s,strlen@a
  8353  004C0A  0060  F01C  F009   	movff	strlen@s+1,strlen@a+1
  8354  004C10  D002               	goto	l6120
  8355  004C12                     l6118:
  8356  004C12  4A06               	infsnz	strlen@s^0,f,c
  8357  004C14  2A07               	incf	(strlen@s+1)^0,f,c
  8358  004C16                     l6120:
  8359  004C16  0060  F01B  FFF6   	movff	strlen@s,tblptrl
  8360  004C1C  0060  F01F  FFF7   	movff	strlen@s+1,tblptrh
  8361  004C22  0E00               	movlw	low (__smallconst shr (0+16))
  8362  004C24  6EF8               	movwf	tblptru,c
  8363  004C26  0E1F               	movlw	(high __ramtop+-1)
  8364  004C28  64F7               	cpfsgt	tblptrh,c
  8365  004C2A  D003               	bra	u6047
  8366  004C2C  0008               	tblrd		*
  8367  004C2E  50F5               	movf	tablat,w,c
  8368  004C30  D007               	bra	u6040
  8369  004C32                     u6047:
  8370  004C32  006F FFDB FFE1     	movff	tblptrl,fsr1l
  8371  004C38  006F FFDF FFE2     	movff	tblptrh,fsr1h
  8372  004C3E  50E7               	movf	indf1,w,c
  8373  004C40                     u6040:
  8374  004C40  0900               	iorlw	0
  8375  004C42  A4D8               	btfss	status,2,c
  8376  004C44  D7E6               	goto	l6118
  8377  004C46  5008               	movf	strlen@a^0,w,c
  8378  004C48  5C06               	subwf	strlen@s^0,w,c
  8379  004C4A  6E06               	movwf	?_strlen^0,c
  8380  004C4C  5009               	movf	(strlen@a+1)^0,w,c
  8381  004C4E  5807               	subwfb	(strlen@s+1)^0,w,c
  8382  004C50  6E07               	movwf	(?_strlen+1)^0,c
  8383  004C52  0012               	return		;funcret
  8384  004C54                     __end_of_strlen:
  8385                           	opt callstack 0
  8386                           
  8387 ;; *************** function _fputs *****************
  8388 ;; Defined at:
  8389 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
  8390 ;; Parameters:    Size  Location     Type
  8391 ;;  s               2   16[COMRAM] PTR const unsigned char 
  8392 ;;		 -> dbuf(32), 
  8393 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  8394 ;;		 -> sprintf@f(6), NULL(0), 
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;  i               2   21[COMRAM] int 
  8397 ;;  c               1   20[COMRAM] unsigned char 
  8398 ;; Return value:  Size  Location     Type
  8399 ;;                  2   16[COMRAM] int 
  8400 ;; Registers used:
  8401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8402 ;; Tracked objects:
  8403 ;;		On entry : 0/2
  8404 ;;		On exit  : 0/0
  8405 ;;		Unchanged: 0/0
  8406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8407 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8408 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8410 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8411 ;;Total ram usage:        7 bytes
  8412 ;; Hardware stack levels used:    1
  8413 ;; Hardware stack levels required when called:    7
  8414 ;; This function calls:
  8415 ;;		_fputc
  8416 ;; This function is called by:
  8417 ;;		_pad
  8418 ;; This function uses a non-reentrant model
  8419 ;;
  8420                           
  8421                           	psect	text53
  8422  004DF8                     __ptext53:
  8423                           	opt callstack 0
  8424  004DF8                     _fputs:
  8425                           	opt callstack 17
  8426                           
  8427                           ;incstack = 0
  8428  004DF8  0E00               	movlw	0
  8429  004DFA  6E17               	movwf	(fputs@i+1)^0,c
  8430  004DFC  0E00               	movlw	0
  8431  004DFE  6E16               	movwf	fputs@i^0,c
  8432  004E00  D00E               	goto	l6132
  8433  004E02                     l6128:
  8434  004E02  0060  F054  F008   	movff	fputs@c,fputc@c
  8435  004E08  6A09               	clrf	(fputc@c+1)^0,c
  8436  004E0A  0060  F04C  F00A   	movff	fputs@fp,fputc@fp
  8437  004E10  0060  F050  F00B   	movff	fputs@fp+1,fputc@fp+1
  8438  004E16  ECAC  F022         	call	_fputc	;wreg free
  8439  004E1A  4A16               	infsnz	fputs@i^0,f,c
  8440  004E1C  2A17               	incf	(fputs@i+1)^0,f,c
  8441  004E1E                     l6132:
  8442  004E1E  5016               	movf	fputs@i^0,w,c
  8443  004E20  2411               	addwf	fputs@s^0,w,c
  8444  004E22  6ED9               	movwf	fsr2l,c
  8445  004E24  5017               	movf	(fputs@i+1)^0,w,c
  8446  004E26  2012               	addwfc	(fputs@s+1)^0,w,c
  8447  004E28  6EDA               	movwf	fsr2h,c
  8448  004E2A  50DF               	movf	indf2,w,c
  8449  004E2C  6E15               	movwf	fputs@c^0,c
  8450  004E2E  5015               	movf	fputs@c^0,w,c
  8451  004E30  B4D8               	btfsc	status,2,c
  8452  004E32  0012               	return	
  8453  004E34  D7E6               	goto	l6128
  8454  004E36                     __end_of_fputs:
  8455                           	opt callstack 0
  8456                           
  8457 ;; *************** function _fputc *****************
  8458 ;; Defined at:
  8459 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
  8460 ;; Parameters:    Size  Location     Type
  8461 ;;  c               2    7[COMRAM] int 
  8462 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  8463 ;;		 -> sprintf@f(6), NULL(0), 
  8464 ;; Auto vars:     Size  Location     Type
  8465 ;;		None
  8466 ;; Return value:  Size  Location     Type
  8467 ;;                  2    7[COMRAM] int 
  8468 ;; Registers used:
  8469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8470 ;; Tracked objects:
  8471 ;;		On entry : 0/0
  8472 ;;		On exit  : 0/0
  8473 ;;		Unchanged: 0/0
  8474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8475 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8477 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8478 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8479 ;;Total ram usage:        9 bytes
  8480 ;; Hardware stack levels used:    1
  8481 ;; Hardware stack levels required when called:    6
  8482 ;; This function calls:
  8483 ;;		_putch
  8484 ;; This function is called by:
  8485 ;;		_pad
  8486 ;;		_stoa
  8487 ;;		_vfpfcnvrt
  8488 ;;		_fputs
  8489 ;; This function uses a non-reentrant model
  8490 ;;
  8491                           
  8492                           	psect	text54
  8493  004558                     __ptext54:
  8494                           	opt callstack 0
  8495  004558                     _fputc:
  8496                           	opt callstack 19
  8497                           
  8498                           ;incstack = 0
  8499  004558  500A               	movf	fputc@fp^0,w,c
  8500  00455A  100B               	iorwf	(fputc@fp+1)^0,w,c
  8501  00455C  B4D8               	btfsc	status,2,c
  8502  00455E  D004               	goto	u6010
  8503  004560  500A               	movf	fputc@fp^0,w,c
  8504  004562  100B               	iorwf	(fputc@fp+1)^0,w,c
  8505  004564  A4D8               	btfss	status,2,c
  8506  004566  D004               	goto	l6108
  8507  004568                     u6010:
  8508  004568  5008               	movf	fputc@c^0,w,c
  8509  00456A  EC67  F02A         	call	_putch
  8510  00456E  0012               	return	
  8511  004570                     l6108:
  8512  004570  EE20 F004          	lfsr	2,4
  8513  004574  500A               	movf	fputc@fp^0,w,c
  8514  004576  26D9               	addwf	fsr2l,f,c
  8515  004578  500B               	movf	(fputc@fp+1)^0,w,c
  8516  00457A  22DA               	addwfc	fsr2h,f,c
  8517  00457C  50DE               	movf	postinc2,w,c
  8518  00457E  10DE               	iorwf	postinc2,w,c
  8519  004580  B4D8               	btfsc	status,2,c
  8520  004582  D016               	goto	u6030
  8521  004584  EE20 F004          	lfsr	2,4
  8522  004588  500A               	movf	fputc@fp^0,w,c
  8523  00458A  26D9               	addwf	fsr2l,f,c
  8524  00458C  500B               	movf	(fputc@fp+1)^0,w,c
  8525  00458E  22DA               	addwfc	fsr2h,f,c
  8526  004590  EE10 F002          	lfsr	1,2
  8527  004594  500A               	movf	fputc@fp^0,w,c
  8528  004596  26E1               	addwf	fsr1l,f,c
  8529  004598  500B               	movf	(fputc@fp+1)^0,w,c
  8530  00459A  22E2               	addwfc	fsr1h,f,c
  8531  00459C  50DE               	movf	postinc2,w,c
  8532  00459E  5CE6               	subwf	postinc1,w,c
  8533  0045A0  50E6               	movf	postinc1,w,c
  8534  0045A2  0A80               	xorlw	128
  8535  0045A4  6E10               	movwf	(??_fputc+4)^0,c
  8536  0045A6  50DE               	movf	postinc2,w,c
  8537  0045A8  0A80               	xorlw	128
  8538  0045AA  5810               	subwfb	(??_fputc+4)^0,w,c
  8539  0045AC  B0D8               	btfsc	status,0,c
  8540  0045AE  0012               	return	
  8541  0045B0                     u6030:
  8542  0045B0  EE20 F002          	lfsr	2,2
  8543  0045B4  500A               	movf	fputc@fp^0,w,c
  8544  0045B6  26D9               	addwf	fsr2l,f,c
  8545  0045B8  500B               	movf	(fputc@fp+1)^0,w,c
  8546  0045BA  22DA               	addwfc	fsr2h,f,c
  8547  0045BC  006F FF78  F00C    	movff	postinc2,??_fputc
  8548  0045C2  006F FF74  F00D    	movff	postdec2,??_fputc+1
  8549  0045C8  0060  F02B  FFD9   	movff	fputc@fp,fsr2l
  8550  0045CE  0060  F02F  FFDA   	movff	fputc@fp+1,fsr2h
  8551  0045D4  006F FF78  F00E    	movff	postinc2,??_fputc+2
  8552  0045DA  006F FF74  F00F    	movff	postdec2,??_fputc+3
  8553  0045E0  500C               	movf	??_fputc^0,w,c
  8554  0045E2  240E               	addwf	(??_fputc+2)^0,w,c
  8555  0045E4  6ED9               	movwf	fsr2l,c
  8556  0045E6  500D               	movf	(??_fputc+1)^0,w,c
  8557  0045E8  200F               	addwfc	(??_fputc+3)^0,w,c
  8558  0045EA  6EDA               	movwf	fsr2h,c
  8559  0045EC  0060  F023  FFDF   	movff	fputc@c,indf2
  8560  0045F2  EE20 F002          	lfsr	2,2
  8561  0045F6  500A               	movf	fputc@fp^0,w,c
  8562  0045F8  26D9               	addwf	fsr2l,f,c
  8563  0045FA  500B               	movf	(fputc@fp+1)^0,w,c
  8564  0045FC  22DA               	addwfc	fsr2h,f,c
  8565  0045FE  2ADE               	incf	postinc2,f,c
  8566  004600  0E00               	movlw	0
  8567  004602  22DD               	addwfc	postdec2,f,c
  8568  004604  0012               	return		;funcret
  8569  004606                     __end_of_fputc:
  8570                           	opt callstack 0
  8571                           
  8572 ;; *************** function _putch *****************
  8573 ;; Defined at:
  8574 ;;		line 221 in file "mcc_generated_files/uart2.c"
  8575 ;; Parameters:    Size  Location     Type
  8576 ;;  txData          1    wreg     unsigned char 
  8577 ;; Auto vars:     Size  Location     Type
  8578 ;;  txData          1    6[COMRAM] unsigned char 
  8579 ;; Return value:  Size  Location     Type
  8580 ;;                  1    wreg      void 
  8581 ;; Registers used:
  8582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8583 ;; Tracked objects:
  8584 ;;		On entry : 0/0
  8585 ;;		On exit  : 3F/39
  8586 ;;		Unchanged: 0/0
  8587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8589 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8591 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8592 ;;Total ram usage:        1 bytes
  8593 ;; Hardware stack levels used:    1
  8594 ;; Hardware stack levels required when called:    5
  8595 ;; This function calls:
  8596 ;;		_UART2_Write
  8597 ;; This function is called by:
  8598 ;;		_fputc
  8599 ;; This function uses a non-reentrant model
  8600 ;;
  8601                           
  8602                           	psect	text55
  8603  0054CE                     __ptext55:
  8604                           	opt callstack 0
  8605  0054CE                     _putch:
  8606                           	opt callstack 19
  8607                           
  8608                           ;incstack = 0
  8609                           ;putch@txData stored from wreg
  8610  0054CE  6E07               	movwf	putch@txData^0,c
  8611                           
  8612                           ;mcc_generated_files/uart2.c: 221: void putch(char txData);mcc_generated_files/uart2.c: 
      +                          222: {;mcc_generated_files/uart2.c: 223:     UART2_Write(txData);
  8613  0054D0  5007               	movf	putch@txData^0,w,c
  8614  0054D2  ECDB  F026         	call	_UART2_Write
  8615                           
  8616                           ; BSR set to: 57
  8617  0054D6  0012               	return		;funcret
  8618  0054D8                     __end_of_putch:
  8619                           	opt callstack 0
  8620                           
  8621 ;; *************** function _UART2_Write *****************
  8622 ;; Defined at:
  8623 ;;		line 193 in file "mcc_generated_files/uart2.c"
  8624 ;; Parameters:    Size  Location     Type
  8625 ;;  txData          1    wreg     unsigned char 
  8626 ;; Auto vars:     Size  Location     Type
  8627 ;;  txData          1    5[COMRAM] unsigned char 
  8628 ;; Return value:  Size  Location     Type
  8629 ;;                  1    wreg      void 
  8630 ;; Registers used:
  8631 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8632 ;; Tracked objects:
  8633 ;;		On entry : 0/0
  8634 ;;		On exit  : 3F/39
  8635 ;;		Unchanged: 0/0
  8636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8638 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8640 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8641 ;;Total ram usage:        1 bytes
  8642 ;; Hardware stack levels used:    1
  8643 ;; Hardware stack levels required when called:    4
  8644 ;; This function calls:
  8645 ;;		Nothing
  8646 ;; This function is called by:
  8647 ;;		_putch
  8648 ;;		_Digital232_RW
  8649 ;; This function uses a non-reentrant model
  8650 ;;
  8651                           
  8652                           	psect	text56
  8653  004DB6                     __ptext56:
  8654                           	opt callstack 0
  8655  004DB6                     _UART2_Write:
  8656                           	opt callstack 19
  8657                           
  8658                           ; BSR set to: 57
  8659                           ;incstack = 0
  8660                           ;UART2_Write@txData stored from wreg
  8661  004DB6  6E06               	movwf	UART2_Write@txData^0,c
  8662  004DB8                     
  8663                           ;mcc_generated_files/uart2.c: 195:     while(0 == uart2TxBufferRemaining)
  8664                           
  8665                           ;mcc_generated_files/uart2.c: 193: void UART2_Write(uint8_t txData);mcc_generated_files/
      +                          uart2.c: 194: {;mcc_generated_files/uart2.c: 195:     while(0 == uart2TxBufferRemaining)
  8666  004DB8  0100               	movlb	0	; () banked
  8667  004DBA  51A4               	movf	_uart2TxBufferRemaining& (0+255),w,b	;volatile
  8668  004DBC  B4D8               	btfsc	status,2,c
  8669  004DBE  D7FC               	goto	l6082
  8670                           
  8671                           ; BSR set to: 0
  8672                           ;mcc_generated_files/uart2.c: 199:     if(0 == PIE6bits.U2TXIE)
  8673  004DC0  0139               	movlb	57	; () banked
  8674  004DC2  B796               	btfsc	150,3,b	;volatile
  8675  004DC4  D004               	goto	l494
  8676                           
  8677                           ; BSR set to: 57
  8678                           ;mcc_generated_files/uart2.c: 200:     {;mcc_generated_files/uart2.c: 201:         U2TXB
      +                           = txData;
  8679  004DC6  0060  F01B  FDD2   	movff	UART2_Write@txData,15826	;volatile
  8680                           
  8681                           ;mcc_generated_files/uart2.c: 202:     }
  8682  004DCC  D012               	goto	l6098
  8683  004DCE                     l494:
  8684                           
  8685                           ; BSR set to: 57
  8686                           ;mcc_generated_files/uart2.c: 204:     {;mcc_generated_files/uart2.c: 205:         PIE6b
      +                          its.U2TXIE = 0;
  8687  004DCE  9796               	bcf	150,3,b	;volatile
  8688                           
  8689                           ; BSR set to: 57
  8690                           ;mcc_generated_files/uart2.c: 206:         uart2TxBuffer[uart2TxHead++] = txData;
  8691  004DD0  0E42               	movlw	low _uart2TxBuffer
  8692  004DD2  0100               	movlb	0	; () banked
  8693  004DD4  25A6               	addwf	_uart2TxHead& (0+255),w,b	;volatile
  8694  004DD6  6ED9               	movwf	fsr2l,c
  8695  004DD8  6ADA               	clrf	fsr2h,c
  8696  004DDA  0E01               	movlw	high _uart2TxBuffer
  8697  004DDC  22DA               	addwfc	fsr2h,f,c
  8698  004DDE  0060  F01B  FFDF   	movff	UART2_Write@txData,indf2
  8699                           
  8700                           ; BSR set to: 0
  8701  004DE4  2BA6               	incf	_uart2TxHead& (0+255),f,b	;volatile
  8702                           
  8703                           ; BSR set to: 0
  8704                           ;mcc_generated_files/uart2.c: 207:         if(sizeof(uart2TxBuffer) <= uart2TxHead)
  8705  004DE6  0E07               	movlw	7
  8706  004DE8  65A6               	cpfsgt	_uart2TxHead& (0+255),b
  8707  004DEA  D002               	goto	l6096
  8708                           
  8709                           ; BSR set to: 0
  8710                           ;mcc_generated_files/uart2.c: 208:         {;mcc_generated_files/uart2.c: 209:          
      +                             uart2TxHead = 0;
  8711  004DEC  0E00               	movlw	0
  8712  004DEE  6FA6               	movwf	_uart2TxHead& (0+255),b	;volatile
  8713  004DF0                     l6096:
  8714                           
  8715                           ; BSR set to: 0
  8716                           ;mcc_generated_files/uart2.c: 211:         uart2TxBufferRemaining--;
  8717  004DF0  07A4               	decf	_uart2TxBufferRemaining& (0+255),f,b	;volatile
  8718  004DF2                     l6098:
  8719                           
  8720                           ;mcc_generated_files/uart2.c: 213:     PIE6bits.U2TXIE = 1;
  8721  004DF2  0139               	movlb	57	; () banked
  8722  004DF4  8796               	bsf	150,3,b	;volatile
  8723                           
  8724                           ; BSR set to: 57
  8725  004DF6  0012               	return		;funcret
  8726  004DF8                     __end_of_UART2_Write:
  8727                           	opt callstack 0
  8728                           
  8729 ;; *************** function _abs *****************
  8730 ;; Defined at:
  8731 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
  8732 ;; Parameters:    Size  Location     Type
  8733 ;;  a               2   23[COMRAM] int 
  8734 ;; Auto vars:     Size  Location     Type
  8735 ;;		None
  8736 ;; Return value:  Size  Location     Type
  8737 ;;                  2   23[COMRAM] int 
  8738 ;; Registers used:
  8739 ;;		wreg, status,2, status,0
  8740 ;; Tracked objects:
  8741 ;;		On entry : 0/2
  8742 ;;		On exit  : 0/0
  8743 ;;		Unchanged: 0/0
  8744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8745 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8747 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8748 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8749 ;;Total ram usage:        4 bytes
  8750 ;; Hardware stack levels used:    1
  8751 ;; Hardware stack levels required when called:    4
  8752 ;; This function calls:
  8753 ;;		Nothing
  8754 ;; This function is called by:
  8755 ;;		_dtoa
  8756 ;; This function uses a non-reentrant model
  8757 ;;
  8758                           
  8759                           	psect	text57
  8760  004E36                     __ptext57:
  8761                           	opt callstack 0
  8762  004E36                     _abs:
  8763                           	opt callstack 21
  8764                           
  8765                           ; BSR set to: 57
  8766                           ;incstack = 0
  8767  004E36  BE19               	btfsc	(abs@a+1)^0,7,c
  8768  004E38  D005               	goto	u6110
  8769  004E3A  5019               	movf	(abs@a+1)^0,w,c
  8770  004E3C  E114               	bnz	l2105
  8771  004E3E  0418               	decf	abs@a^0,w,c
  8772  004E40  B0D8               	btfsc	status,0,c
  8773  004E42  D011               	goto	l2105
  8774  004E44                     u6110:
  8775  004E44  0060  F060  F01A   	movff	abs@a,??_abs
  8776  004E4A  0060  F064  F01B   	movff	abs@a+1,??_abs+1
  8777  004E50  1E1A               	comf	??_abs^0,f,c
  8778  004E52  1E1B               	comf	(??_abs+1)^0,f,c
  8779  004E54  4A1A               	infsnz	??_abs^0,f,c
  8780  004E56  2A1B               	incf	(??_abs+1)^0,f,c
  8781  004E58  0060  F068  F018   	movff	??_abs,?_abs
  8782  004E5E  0060  F06C  F019   	movff	??_abs+1,?_abs+1
  8783  004E64  0012               	return	
  8784  004E66                     l2105:
  8785  004E66  0060  F060  F018   	movff	abs@a,?_abs
  8786  004E6C  0060  F064  F019   	movff	abs@a+1,?_abs+1
  8787  004E72  0012               	return		;funcret
  8788  004E74                     __end_of_abs:
  8789                           	opt callstack 0
  8790                           
  8791 ;; *************** function ___aomod *****************
  8792 ;; Defined at:
  8793 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
  8794 ;; Parameters:    Size  Location     Type
  8795 ;;  dividend        8    5[COMRAM] long long 
  8796 ;;  divisor         8   13[COMRAM] long long 
  8797 ;; Auto vars:     Size  Location     Type
  8798 ;;  sign            1   22[COMRAM] unsigned char 
  8799 ;;  counter         1   21[COMRAM] unsigned char 
  8800 ;; Return value:  Size  Location     Type
  8801 ;;                  8    5[COMRAM] long long 
  8802 ;; Registers used:
  8803 ;;		wreg, status,2, status,0
  8804 ;; Tracked objects:
  8805 ;;		On entry : 0/2
  8806 ;;		On exit  : 0/0
  8807 ;;		Unchanged: 0/0
  8808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8809 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8810 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8812 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8813 ;;Total ram usage:       18 bytes
  8814 ;; Hardware stack levels used:    1
  8815 ;; Hardware stack levels required when called:    4
  8816 ;; This function calls:
  8817 ;;		Nothing
  8818 ;; This function is called by:
  8819 ;;		_dtoa
  8820 ;; This function uses a non-reentrant model
  8821 ;;
  8822                           
  8823                           	psect	text58
  8824  003E16                     __ptext58:
  8825                           	opt callstack 0
  8826  003E16                     ___aomod:
  8827                           	opt callstack 21
  8828                           
  8829                           ;incstack = 0
  8830  003E16  0E00               	movlw	0
  8831  003E18  6E17               	movwf	___aomod@sign^0,c
  8832  003E1A  AE0D               	btfss	(___aomod@dividend+7)^0,7,c
  8833  003E1C  D012               	goto	l6212
  8834  003E1E  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  8835  003E20  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  8836  003E22  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  8837  003E24  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  8838  003E26  1E09               	comf	(___aomod@dividend+3)^0,f,c
  8839  003E28  1E08               	comf	(___aomod@dividend+2)^0,f,c
  8840  003E2A  1E07               	comf	(___aomod@dividend+1)^0,f,c
  8841  003E2C  6C06               	negf	___aomod@dividend^0,c
  8842  003E2E  0E00               	movlw	0
  8843  003E30  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  8844  003E32  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  8845  003E34  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  8846  003E36  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  8847  003E38  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  8848  003E3A  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  8849  003E3C  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  8850  003E3E  0E01               	movlw	1
  8851  003E40  6E17               	movwf	___aomod@sign^0,c
  8852  003E42                     l6212:
  8853  003E42  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  8854  003E44  D010               	goto	l6216
  8855  003E46  1E15               	comf	(___aomod@divisor+7)^0,f,c
  8856  003E48  1E14               	comf	(___aomod@divisor+6)^0,f,c
  8857  003E4A  1E13               	comf	(___aomod@divisor+5)^0,f,c
  8858  003E4C  1E12               	comf	(___aomod@divisor+4)^0,f,c
  8859  003E4E  1E11               	comf	(___aomod@divisor+3)^0,f,c
  8860  003E50  1E10               	comf	(___aomod@divisor+2)^0,f,c
  8861  003E52  1E0F               	comf	(___aomod@divisor+1)^0,f,c
  8862  003E54  6C0E               	negf	___aomod@divisor^0,c
  8863  003E56  0E00               	movlw	0
  8864  003E58  220F               	addwfc	(___aomod@divisor+1)^0,f,c
  8865  003E5A  2210               	addwfc	(___aomod@divisor+2)^0,f,c
  8866  003E5C  2211               	addwfc	(___aomod@divisor+3)^0,f,c
  8867  003E5E  2212               	addwfc	(___aomod@divisor+4)^0,f,c
  8868  003E60  2213               	addwfc	(___aomod@divisor+5)^0,f,c
  8869  003E62  2214               	addwfc	(___aomod@divisor+6)^0,f,c
  8870  003E64  2215               	addwfc	(___aomod@divisor+7)^0,f,c
  8871  003E66                     l6216:
  8872  003E66  500E               	movf	___aomod@divisor^0,w,c
  8873  003E68  100F               	iorwf	(___aomod@divisor+1)^0,w,c
  8874  003E6A  1010               	iorwf	(___aomod@divisor+2)^0,w,c
  8875  003E6C  1011               	iorwf	(___aomod@divisor+3)^0,w,c
  8876  003E6E  1012               	iorwf	(___aomod@divisor+4)^0,w,c
  8877  003E70  1013               	iorwf	(___aomod@divisor+5)^0,w,c
  8878  003E72  1014               	iorwf	(___aomod@divisor+6)^0,w,c
  8879  003E74  1015               	iorwf	(___aomod@divisor+7)^0,w,c
  8880  003E76  B4D8               	btfsc	status,2,c
  8881  003E78  D03C               	goto	l6232
  8882  003E7A  0E01               	movlw	1
  8883  003E7C  6E16               	movwf	___aomod@counter^0,c
  8884  003E7E  D00A               	goto	l6222
  8885  003E80                     l6220:
  8886  003E80  90D8               	bcf	status,0,c
  8887  003E82  360E               	rlcf	___aomod@divisor^0,f,c
  8888  003E84  360F               	rlcf	(___aomod@divisor+1)^0,f,c
  8889  003E86  3610               	rlcf	(___aomod@divisor+2)^0,f,c
  8890  003E88  3611               	rlcf	(___aomod@divisor+3)^0,f,c
  8891  003E8A  3612               	rlcf	(___aomod@divisor+4)^0,f,c
  8892  003E8C  3613               	rlcf	(___aomod@divisor+5)^0,f,c
  8893  003E8E  3614               	rlcf	(___aomod@divisor+6)^0,f,c
  8894  003E90  3615               	rlcf	(___aomod@divisor+7)^0,f,c
  8895  003E92  2A16               	incf	___aomod@counter^0,f,c
  8896  003E94                     l6222:
  8897  003E94  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  8898  003E96  D7F4               	goto	l6220
  8899  003E98                     u6220:
  8900  003E98  500E               	movf	___aomod@divisor^0,w,c
  8901  003E9A  5C06               	subwf	___aomod@dividend^0,w,c
  8902  003E9C  500F               	movf	(___aomod@divisor+1)^0,w,c
  8903  003E9E  5807               	subwfb	(___aomod@dividend+1)^0,w,c
  8904  003EA0  5010               	movf	(___aomod@divisor+2)^0,w,c
  8905  003EA2  5808               	subwfb	(___aomod@dividend+2)^0,w,c
  8906  003EA4  5011               	movf	(___aomod@divisor+3)^0,w,c
  8907  003EA6  5809               	subwfb	(___aomod@dividend+3)^0,w,c
  8908  003EA8  5012               	movf	(___aomod@divisor+4)^0,w,c
  8909  003EAA  580A               	subwfb	(___aomod@dividend+4)^0,w,c
  8910  003EAC  5013               	movf	(___aomod@divisor+5)^0,w,c
  8911  003EAE  580B               	subwfb	(___aomod@dividend+5)^0,w,c
  8912  003EB0  5014               	movf	(___aomod@divisor+6)^0,w,c
  8913  003EB2  580C               	subwfb	(___aomod@dividend+6)^0,w,c
  8914  003EB4  5015               	movf	(___aomod@divisor+7)^0,w,c
  8915  003EB6  580D               	subwfb	(___aomod@dividend+7)^0,w,c
  8916  003EB8  A0D8               	btfss	status,0,c
  8917  003EBA  D010               	goto	l6228
  8918  003EBC  500E               	movf	___aomod@divisor^0,w,c
  8919  003EBE  5E06               	subwf	___aomod@dividend^0,f,c
  8920  003EC0  500F               	movf	(___aomod@divisor+1)^0,w,c
  8921  003EC2  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
  8922  003EC4  5010               	movf	(___aomod@divisor+2)^0,w,c
  8923  003EC6  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
  8924  003EC8  5011               	movf	(___aomod@divisor+3)^0,w,c
  8925  003ECA  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
  8926  003ECC  5012               	movf	(___aomod@divisor+4)^0,w,c
  8927  003ECE  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
  8928  003ED0  5013               	movf	(___aomod@divisor+5)^0,w,c
  8929  003ED2  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
  8930  003ED4  5014               	movf	(___aomod@divisor+6)^0,w,c
  8931  003ED6  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
  8932  003ED8  5015               	movf	(___aomod@divisor+7)^0,w,c
  8933  003EDA  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
  8934  003EDC                     l6228:
  8935  003EDC  90D8               	bcf	status,0,c
  8936  003EDE  3215               	rrcf	(___aomod@divisor+7)^0,f,c
  8937  003EE0  3214               	rrcf	(___aomod@divisor+6)^0,f,c
  8938  003EE2  3213               	rrcf	(___aomod@divisor+5)^0,f,c
  8939  003EE4  3212               	rrcf	(___aomod@divisor+4)^0,f,c
  8940  003EE6  3211               	rrcf	(___aomod@divisor+3)^0,f,c
  8941  003EE8  3210               	rrcf	(___aomod@divisor+2)^0,f,c
  8942  003EEA  320F               	rrcf	(___aomod@divisor+1)^0,f,c
  8943  003EEC  320E               	rrcf	___aomod@divisor^0,f,c
  8944  003EEE  2E16               	decfsz	___aomod@counter^0,f,c
  8945  003EF0  D7D3               	goto	u6220
  8946  003EF2                     l6232:
  8947  003EF2  5017               	movf	___aomod@sign^0,w,c
  8948  003EF4  B4D8               	btfsc	status,2,c
  8949  003EF6  D010               	goto	l6236
  8950  003EF8  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  8951  003EFA  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  8952  003EFC  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  8953  003EFE  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  8954  003F00  1E09               	comf	(___aomod@dividend+3)^0,f,c
  8955  003F02  1E08               	comf	(___aomod@dividend+2)^0,f,c
  8956  003F04  1E07               	comf	(___aomod@dividend+1)^0,f,c
  8957  003F06  6C06               	negf	___aomod@dividend^0,c
  8958  003F08  0E00               	movlw	0
  8959  003F0A  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  8960  003F0C  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  8961  003F0E  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  8962  003F10  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  8963  003F12  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  8964  003F14  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  8965  003F16  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  8966  003F18                     l6236:
  8967  003F18  0060  F018  F006   	movff	___aomod@dividend,?___aomod
  8968  003F1E  0060  F01C  F007   	movff	___aomod@dividend+1,?___aomod+1
  8969  003F24  0060  F020  F008   	movff	___aomod@dividend+2,?___aomod+2
  8970  003F2A  0060  F024  F009   	movff	___aomod@dividend+3,?___aomod+3
  8971  003F30  0060  F028  F00A   	movff	___aomod@dividend+4,?___aomod+4
  8972  003F36  0060  F02C  F00B   	movff	___aomod@dividend+5,?___aomod+5
  8973  003F3C  0060  F030  F00C   	movff	___aomod@dividend+6,?___aomod+6
  8974  003F42  0060  F034  F00D   	movff	___aomod@dividend+7,?___aomod+7
  8975  003F48  0012               	return		;funcret
  8976  003F4A                     __end_of___aomod:
  8977                           	opt callstack 0
  8978                           
  8979 ;; *************** function ___aodiv *****************
  8980 ;; Defined at:
  8981 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
  8982 ;; Parameters:    Size  Location     Type
  8983 ;;  dividend        8    5[COMRAM] long long 
  8984 ;;  divisor         8   13[COMRAM] long long 
  8985 ;; Auto vars:     Size  Location     Type
  8986 ;;  quotient        8   23[COMRAM] long long 
  8987 ;;  sign            1   22[COMRAM] unsigned char 
  8988 ;;  counter         1   21[COMRAM] unsigned char 
  8989 ;; Return value:  Size  Location     Type
  8990 ;;                  8    5[COMRAM] long long 
  8991 ;; Registers used:
  8992 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8993 ;; Tracked objects:
  8994 ;;		On entry : 0/2
  8995 ;;		On exit  : 0/0
  8996 ;;		Unchanged: 0/0
  8997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8998 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8999 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9001 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9002 ;;Total ram usage:       26 bytes
  9003 ;; Hardware stack levels used:    1
  9004 ;; Hardware stack levels required when called:    4
  9005 ;; This function calls:
  9006 ;;		Nothing
  9007 ;; This function is called by:
  9008 ;;		_dtoa
  9009 ;; This function uses a non-reentrant model
  9010 ;;
  9011                           
  9012                           	psect	text59
  9013  003CBE                     __ptext59:
  9014                           	opt callstack 0
  9015  003CBE                     ___aodiv:
  9016                           	opt callstack 21
  9017                           
  9018                           ;incstack = 0
  9019  003CBE  0E00               	movlw	0
  9020  003CC0  6E17               	movwf	___aodiv@sign^0,c
  9021  003CC2  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  9022  003CC4  D012               	goto	l6168
  9023  003CC6  1E15               	comf	(___aodiv@divisor+7)^0,f,c
  9024  003CC8  1E14               	comf	(___aodiv@divisor+6)^0,f,c
  9025  003CCA  1E13               	comf	(___aodiv@divisor+5)^0,f,c
  9026  003CCC  1E12               	comf	(___aodiv@divisor+4)^0,f,c
  9027  003CCE  1E11               	comf	(___aodiv@divisor+3)^0,f,c
  9028  003CD0  1E10               	comf	(___aodiv@divisor+2)^0,f,c
  9029  003CD2  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
  9030  003CD4  6C0E               	negf	___aodiv@divisor^0,c
  9031  003CD6  0E00               	movlw	0
  9032  003CD8  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
  9033  003CDA  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
  9034  003CDC  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
  9035  003CDE  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
  9036  003CE0  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
  9037  003CE2  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
  9038  003CE4  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
  9039  003CE6  0E01               	movlw	1
  9040  003CE8  6E17               	movwf	___aodiv@sign^0,c
  9041  003CEA                     l6168:
  9042  003CEA  AE0D               	btfss	(___aodiv@dividend+7)^0,7,c
  9043  003CEC  D012               	goto	l6174
  9044  003CEE  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
  9045  003CF0  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
  9046  003CF2  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
  9047  003CF4  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
  9048  003CF6  1E09               	comf	(___aodiv@dividend+3)^0,f,c
  9049  003CF8  1E08               	comf	(___aodiv@dividend+2)^0,f,c
  9050  003CFA  1E07               	comf	(___aodiv@dividend+1)^0,f,c
  9051  003CFC  6C06               	negf	___aodiv@dividend^0,c
  9052  003CFE  0E00               	movlw	0
  9053  003D00  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
  9054  003D02  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
  9055  003D04  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
  9056  003D06  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
  9057  003D08  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
  9058  003D0A  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
  9059  003D0C  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
  9060  003D0E  0E01               	movlw	1
  9061  003D10  1A17               	xorwf	___aodiv@sign^0,f,c
  9062  003D12                     l6174:
  9063  003D12  EE20  F018         	lfsr	2,___aodiv@quotient
  9064  003D16  0E07               	movlw	7
  9065  003D18                     u6141:
  9066  003D18  6ADE               	clrf	postinc2,c
  9067  003D1A  06E8               	decf	wreg,f,c
  9068  003D1C  E2FD               	bc	u6141
  9069  003D1E  500E               	movf	___aodiv@divisor^0,w,c
  9070  003D20  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
  9071  003D22  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
  9072  003D24  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
  9073  003D26  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
  9074  003D28  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
  9075  003D2A  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
  9076  003D2C  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
  9077  003D2E  B4D8               	btfsc	status,2,c
  9078  003D30  D046               	goto	l6196
  9079  003D32  0E01               	movlw	1
  9080  003D34  6E16               	movwf	___aodiv@counter^0,c
  9081  003D36  D00A               	goto	l6182
  9082  003D38                     l6180:
  9083  003D38  90D8               	bcf	status,0,c
  9084  003D3A  360E               	rlcf	___aodiv@divisor^0,f,c
  9085  003D3C  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
  9086  003D3E  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
  9087  003D40  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
  9088  003D42  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
  9089  003D44  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
  9090  003D46  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
  9091  003D48  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
  9092  003D4A  2A16               	incf	___aodiv@counter^0,f,c
  9093  003D4C                     l6182:
  9094  003D4C  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  9095  003D4E  D7F4               	goto	l6180
  9096  003D50                     u6160:
  9097  003D50  90D8               	bcf	status,0,c
  9098  003D52  3618               	rlcf	___aodiv@quotient^0,f,c
  9099  003D54  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
  9100  003D56  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
  9101  003D58  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
  9102  003D5A  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
  9103  003D5C  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
  9104  003D5E  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
  9105  003D60  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
  9106  003D62  500E               	movf	___aodiv@divisor^0,w,c
  9107  003D64  5C06               	subwf	___aodiv@dividend^0,w,c
  9108  003D66  500F               	movf	(___aodiv@divisor+1)^0,w,c
  9109  003D68  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
  9110  003D6A  5010               	movf	(___aodiv@divisor+2)^0,w,c
  9111  003D6C  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
  9112  003D6E  5011               	movf	(___aodiv@divisor+3)^0,w,c
  9113  003D70  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
  9114  003D72  5012               	movf	(___aodiv@divisor+4)^0,w,c
  9115  003D74  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
  9116  003D76  5013               	movf	(___aodiv@divisor+5)^0,w,c
  9117  003D78  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
  9118  003D7A  5014               	movf	(___aodiv@divisor+6)^0,w,c
  9119  003D7C  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
  9120  003D7E  5015               	movf	(___aodiv@divisor+7)^0,w,c
  9121  003D80  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
  9122  003D82  A0D8               	btfss	status,0,c
  9123  003D84  D011               	goto	l6192
  9124  003D86  500E               	movf	___aodiv@divisor^0,w,c
  9125  003D88  5E06               	subwf	___aodiv@dividend^0,f,c
  9126  003D8A  500F               	movf	(___aodiv@divisor+1)^0,w,c
  9127  003D8C  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
  9128  003D8E  5010               	movf	(___aodiv@divisor+2)^0,w,c
  9129  003D90  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
  9130  003D92  5011               	movf	(___aodiv@divisor+3)^0,w,c
  9131  003D94  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
  9132  003D96  5012               	movf	(___aodiv@divisor+4)^0,w,c
  9133  003D98  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
  9134  003D9A  5013               	movf	(___aodiv@divisor+5)^0,w,c
  9135  003D9C  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
  9136  003D9E  5014               	movf	(___aodiv@divisor+6)^0,w,c
  9137  003DA0  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
  9138  003DA2  5015               	movf	(___aodiv@divisor+7)^0,w,c
  9139  003DA4  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
  9140  003DA6  8018               	bsf	___aodiv@quotient^0,0,c
  9141  003DA8                     l6192:
  9142  003DA8  90D8               	bcf	status,0,c
  9143  003DAA  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
  9144  003DAC  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
  9145  003DAE  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
  9146  003DB0  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
  9147  003DB2  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
  9148  003DB4  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
  9149  003DB6  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
  9150  003DB8  320E               	rrcf	___aodiv@divisor^0,f,c
  9151  003DBA  2E16               	decfsz	___aodiv@counter^0,f,c
  9152  003DBC  D7C9               	goto	u6160
  9153  003DBE                     l6196:
  9154  003DBE  5017               	movf	___aodiv@sign^0,w,c
  9155  003DC0  B4D8               	btfsc	status,2,c
  9156  003DC2  D010               	goto	l6200
  9157  003DC4  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
  9158  003DC6  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
  9159  003DC8  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
  9160  003DCA  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
  9161  003DCC  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
  9162  003DCE  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
  9163  003DD0  1E19               	comf	(___aodiv@quotient+1)^0,f,c
  9164  003DD2  6C18               	negf	___aodiv@quotient^0,c
  9165  003DD4  0E00               	movlw	0
  9166  003DD6  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
  9167  003DD8  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
  9168  003DDA  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
  9169  003DDC  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
  9170  003DDE  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
  9171  003DE0  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
  9172  003DE2  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
  9173  003DE4                     l6200:
  9174  003DE4  0060  F060  F006   	movff	___aodiv@quotient,?___aodiv
  9175  003DEA  0060  F064  F007   	movff	___aodiv@quotient+1,?___aodiv+1
  9176  003DF0  0060  F068  F008   	movff	___aodiv@quotient+2,?___aodiv+2
  9177  003DF6  0060  F06C  F009   	movff	___aodiv@quotient+3,?___aodiv+3
  9178  003DFC  0060  F070  F00A   	movff	___aodiv@quotient+4,?___aodiv+4
  9179  003E02  0060  F074  F00B   	movff	___aodiv@quotient+5,?___aodiv+5
  9180  003E08  0060  F078  F00C   	movff	___aodiv@quotient+6,?___aodiv+6
  9181  003E0E  0060  F07C  F00D   	movff	___aodiv@quotient+7,?___aodiv+7
  9182  003E14  0012               	return		;funcret
  9183  003E16                     __end_of___aodiv:
  9184                           	opt callstack 0
  9185                           
  9186 ;; *************** function _calc_pot *****************
  9187 ;; Defined at:
  9188 ;;		line 57 in file "d232.c"
  9189 ;; Parameters:    Size  Location     Type
  9190 ;;  value           2   26[BANK0 ] unsigned short 
  9191 ;; Auto vars:     Size  Location     Type
  9192 ;;		None
  9193 ;; Return value:  Size  Location     Type
  9194 ;;                  2   26[BANK0 ] short 
  9195 ;; Registers used:
  9196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9197 ;; Tracked objects:
  9198 ;;		On entry : 3F/3E
  9199 ;;		On exit  : 3F/1
  9200 ;;		Unchanged: 0/0
  9201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9202 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9204 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9205 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9206 ;;Total ram usage:        4 bytes
  9207 ;; Hardware stack levels used:    1
  9208 ;; Hardware stack levels required when called:    7
  9209 ;; This function calls:
  9210 ;;		___flmul
  9211 ;;		___fltol
  9212 ;;		___xxtofl
  9213 ;;		_lp_filter
  9214 ;; This function is called by:
  9215 ;;		_Digital232_RW
  9216 ;; This function uses a non-reentrant model
  9217 ;;
  9218                           
  9219                           	psect	text60
  9220  003F4A                     __ptext60:
  9221                           	opt callstack 0
  9222  003F4A                     _calc_pot:
  9223                           	opt callstack 22
  9224                           
  9225                           ; BSR set to: 62
  9226                           ;d232.c: 57: int16_t calc_pot(adc_result_t value);d232.c: 58: {;d232.c: 59:  if (value <
      +                           otto_b1.offset)
  9227                           
  9228                           ;incstack = 0
  9229  003F4A  0101               	movlb	1	; () banked
  9230  003F4C  51D2               	movf	_otto_b1& (0+255),w,b
  9231  003F4E  0100               	movlb	0	; () banked
  9232  003F50  5D7A               	subwf	calc_pot@value& (0+255),w,b
  9233  003F52  0101               	movlb	1	; () banked
  9234  003F54  51D3               	movf	(_otto_b1+1)& (0+255),w,b
  9235  003F56  0100               	movlb	0	; () banked
  9236  003F58  597B               	subwfb	(calc_pot@value+1)& (0+255),w,b
  9237  003F5A  B0D8               	btfsc	status,0,c
  9238  003F5C  D006               	goto	l7314
  9239                           
  9240                           ; BSR set to: 0
  9241                           ;d232.c: 60:   value = otto_b1.offset;
  9242  003F5E  0060  F748  F07A   	movff	_otto_b1,calc_pot@value
  9243  003F64  0060  F74C  F07B   	movff	_otto_b1+1,calc_pot@value+1
  9244  003F6A                     l7314:
  9245                           
  9246                           ; BSR set to: 0
  9247                           ;d232.c: 61:  otto_b1.result = (adc_result_t) ((float) (value - otto_b1.offset) * otto_b
      +                          1.scalar);
  9248  003F6A  0060  F760  F01A   	movff	_otto_b1+6,___flmul@a
  9249  003F70  0060  F764  F01B   	movff	_otto_b1+7,___flmul@a+1
  9250  003F76  0060  F768  F01C   	movff	_otto_b1+8,___flmul@a+2
  9251  003F7C  0060  F76C  F01D   	movff	_otto_b1+9,___flmul@a+3
  9252  003F82  0101               	movlb	1	; () banked
  9253  003F84  51D2               	movf	_otto_b1& (0+255),w,b
  9254  003F86  0100               	movlb	0	; () banked
  9255  003F88  5D7A               	subwf	calc_pot@value& (0+255),w,b
  9256  003F8A  6F7C               	movwf	??_calc_pot& (0+255),b
  9257  003F8C  0101               	movlb	1	; () banked
  9258  003F8E  51D3               	movf	(_otto_b1+1)& (0+255),w,b
  9259  003F90  0100               	movlb	0	; () banked
  9260  003F92  597B               	subwfb	(calc_pot@value+1)& (0+255),w,b
  9261  003F94  6F7D               	movwf	(??_calc_pot+1)& (0+255),b
  9262  003F96  0060  F1F0  F006   	movff	??_calc_pot,___xxtofl@val
  9263  003F9C  0060  F1F4  F007   	movff	??_calc_pot+1,___xxtofl@val+1
  9264  003FA2  6A08               	clrf	(___xxtofl@val+2)^0,c
  9265  003FA4  6A09               	clrf	(___xxtofl@val+3)^0,c
  9266  003FA6  0E00               	movlw	0
  9267  003FA8  ECAD  F01D         	call	___xxtofl
  9268  003FAC  0060  F018  F016   	movff	?___xxtofl,___flmul@b
  9269  003FB2  0060  F01C  F017   	movff	?___xxtofl+1,___flmul@b+1
  9270  003FB8  0060  F020  F018   	movff	?___xxtofl+2,___flmul@b+2
  9271  003FBE  0060  F024  F019   	movff	?___xxtofl+3,___flmul@b+3
  9272  003FC4  EC10  F012         	call	___flmul	;wreg free
  9273  003FC8  0060  F058  F074   	movff	?___flmul,___fltol@f1
  9274  003FCE  0060  F05C  F075   	movff	?___flmul+1,___fltol@f1+1
  9275  003FD4  0060  F060  F076   	movff	?___flmul+2,___fltol@f1+2
  9276  003FDA  0060  F064  F077   	movff	?___flmul+3,___fltol@f1+3
  9277  003FE0  EC3A  F021         	call	___fltol	;wreg free
  9278  003FE4  0060  F1D0  F1DE   	movff	?___fltol,_otto_b1+12
  9279  003FEA  0060  F1D4  F1DF   	movff	?___fltol+1,_otto_b1+13
  9280                           
  9281                           ; BSR set to: 0
  9282                           ;d232.c: 62:  otto_b1.result = -127 + otto_b1.result + (int8_t) lp_filter((float) IO.rnd
      +                          , 0, 1);
  9283  003FF0  0E00               	movlw	0
  9284  003FF2  6F67               	movwf	(lp_filter@slow+1)& (0+255),b
  9285  003FF4  0E01               	movlw	1
  9286  003FF6  6F66               	movwf	lp_filter@slow& (0+255),b
  9287  003FF8  0E00               	movlw	0
  9288  003FFA  6F65               	movwf	(lp_filter@bn+1)& (0+255),b
  9289  003FFC  0E00               	movlw	0
  9290  003FFE  6F64               	movwf	lp_filter@bn& (0+255),b
  9291  004000  0101               	movlb	1	; () banked
  9292  004002  51D1               	movf	(_IO+40)& (0+255),w,b
  9293  004004  6E06               	movwf	___xxtofl@val^0,c
  9294  004006  0E00               	movlw	0
  9295  004008  BE06               	btfsc	___xxtofl@val^0,7,c
  9296  00400A  0EFF               	movlw	-1
  9297  00400C  6E07               	movwf	(___xxtofl@val+1)^0,c
  9298  00400E  6E08               	movwf	(___xxtofl@val+2)^0,c
  9299  004010  6E09               	movwf	(___xxtofl@val+3)^0,c
  9300  004012  0E01               	movlw	1
  9301  004014  ECAD  F01D         	call	___xxtofl
  9302  004018  0060  F018  F060   	movff	?___xxtofl,lp_filter@new
  9303  00401E  0060  F01C  F061   	movff	?___xxtofl+1,lp_filter@new+1
  9304  004024  0060  F020  F062   	movff	?___xxtofl+2,lp_filter@new+2
  9305  00402A  0060  F024  F063   	movff	?___xxtofl+3,lp_filter@new+3
  9306  004030  ECD0  F016         	call	_lp_filter	;wreg free
  9307  004034  0060  F180  F074   	movff	?_lp_filter,___fltol@f1
  9308  00403A  0060  F184  F075   	movff	?_lp_filter+1,___fltol@f1+1
  9309  004040  0060  F188  F076   	movff	?_lp_filter+2,___fltol@f1+2
  9310  004046  0060  F18C  F077   	movff	?_lp_filter+3,___fltol@f1+3
  9311  00404C  EC3A  F021         	call	___fltol	;wreg free
  9312  004050  5174               	movf	?___fltol& (0+255),w,b
  9313  004052  6F7C               	movwf	??_calc_pot& (0+255),b
  9314  004054  6B7D               	clrf	(??_calc_pot+1)& (0+255),b
  9315  004056  BF7C               	btfsc	??_calc_pot& (0+255),7,b
  9316  004058  077D               	decf	(??_calc_pot+1)& (0+255),f,b
  9317  00405A  0101               	movlb	1	; () banked
  9318  00405C  51DE               	movf	(_otto_b1+12)& (0+255),w,b
  9319  00405E  0100               	movlb	0	; () banked
  9320  004060  277C               	addwf	??_calc_pot& (0+255),f,b
  9321  004062  0101               	movlb	1	; () banked
  9322  004064  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  9323  004066  0100               	movlb	0	; () banked
  9324  004068  237D               	addwfc	(??_calc_pot+1)& (0+255),f,b
  9325  00406A  0E81               	movlw	129
  9326  00406C  257C               	addwf	??_calc_pot& (0+255),w,b
  9327  00406E  0101               	movlb	1	; () banked
  9328  004070  6FDE               	movwf	(_otto_b1+12)& (0+255),b
  9329  004072  0EFF               	movlw	255
  9330  004074  0100               	movlb	0	; () banked
  9331  004076  217D               	addwfc	(??_calc_pot+1)& (0+255),w,b
  9332  004078  0101               	movlb	1	; () banked
  9333  00407A  6FDF               	movwf	(_otto_b1+13)& (0+255),b
  9334                           
  9335                           ; BSR set to: 1
  9336  00407C  0012               	return		;funcret
  9337  00407E                     __end_of_calc_pot:
  9338                           	opt callstack 0
  9339                           
  9340 ;; *************** function _lp_filter *****************
  9341 ;; Defined at:
  9342 ;;		line 36 in file "d232.c"
  9343 ;; Parameters:    Size  Location     Type
  9344 ;;  new             4    0[BANK0 ] float 
  9345 ;;  bn              2    4[BANK0 ] short 
  9346 ;;  slow            2    6[BANK0 ] short 
  9347 ;; Auto vars:     Size  Location     Type
  9348 ;;  lp_x            4   16[BANK0 ] float 
  9349 ;;  lp_speed        4   12[BANK0 ] float 
  9350 ;; Return value:  Size  Location     Type
  9351 ;;                  4    0[BANK0 ] float 
  9352 ;; Registers used:
  9353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9354 ;; Tracked objects:
  9355 ;;		On entry : 0/1
  9356 ;;		On exit  : 3F/0
  9357 ;;		Unchanged: 0/0
  9358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9359 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9360 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9361 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9362 ;;      Totals:         2      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9363 ;;Total ram usage:       22 bytes
  9364 ;; Hardware stack levels used:    1
  9365 ;; Hardware stack levels required when called:    6
  9366 ;; This function calls:
  9367 ;;		___fladd
  9368 ;;		___fldiv
  9369 ;;		___flmul
  9370 ;;		___flsub
  9371 ;; This function is called by:
  9372 ;;		_calc_pot
  9373 ;; This function uses a non-reentrant model
  9374 ;;
  9375                           
  9376                           	psect	text61
  9377  002DA0                     __ptext61:
  9378                           	opt callstack 0
  9379  002DA0                     _lp_filter:
  9380                           	opt callstack 22
  9381                           
  9382                           ;d232.c: 36: float lp_filter(float new, int16_t bn, int16_t slow);d232.c: 37: {;d232.c: 
      +                          38:  float lp_speed, lp_x;;d232.c: 39:  static float smooth[8];;d232.c: 41:  if (bn > 7)
  9383                           
  9384                           ; BSR set to: 1
  9385                           ;incstack = 0
  9386  002DA0  0100               	movlb	0	; () banked
  9387  002DA2  BF65               	btfsc	(lp_filter@bn+1)& (0+255),7,b
  9388  002DA4  D013               	goto	l6928
  9389  002DA6  5165               	movf	(lp_filter@bn+1)& (0+255),w,b
  9390  002DA8  E104               	bnz	u7380
  9391  002DAA  0E08               	movlw	8
  9392  002DAC  5D64               	subwf	lp_filter@bn& (0+255),w,b
  9393  002DAE  A0D8               	btfss	status,0,c
  9394  002DB0  D00D               	goto	l6928
  9395  002DB2                     u7380:
  9396                           
  9397                           ; BSR set to: 0
  9398                           ;d232.c: 42:   return new;
  9399  002DB2  0060  F180  F060   	movff	lp_filter@new,?_lp_filter
  9400  002DB8  0060  F184  F061   	movff	lp_filter@new+1,?_lp_filter+1
  9401  002DBE  0060  F188  F062   	movff	lp_filter@new+2,?_lp_filter+2
  9402  002DC4  0060  F18C  F063   	movff	lp_filter@new+3,?_lp_filter+3
  9403  002DCA  0012               	return	
  9404  002DCC                     l6928:
  9405                           
  9406                           ; BSR set to: 0
  9407                           ;d232.c: 43:  if (slow) {
  9408  002DCC  5166               	movf	lp_filter@slow& (0+255),w,b
  9409  002DCE  1167               	iorwf	(lp_filter@slow+1)& (0+255),w,b
  9410  002DD0  B4D8               	btfsc	status,2,c
  9411  002DD2  D008               	goto	l6932
  9412                           
  9413                           ; BSR set to: 0
  9414                           ;d232.c: 44:   lp_speed = 0.01;
  9415  002DD4  0E0A               	movlw	10
  9416  002DD6  6F6C               	movwf	lp_filter@lp_speed& (0+255),b
  9417  002DD8  0ED7               	movlw	215
  9418  002DDA  6F6D               	movwf	(lp_filter@lp_speed+1)& (0+255),b
  9419  002DDC  0E23               	movlw	35
  9420  002DDE  6F6E               	movwf	(lp_filter@lp_speed+2)& (0+255),b
  9421  002DE0  0E3C               	movlw	60
  9422  002DE2  D007               	goto	L11
  9423  002DE4                     l6932:
  9424                           
  9425                           ; BSR set to: 0
  9426                           ;d232.c: 46:   lp_speed = 0.250;
  9427  002DE4  0E00               	movlw	0
  9428  002DE6  6F6C               	movwf	lp_filter@lp_speed& (0+255),b
  9429  002DE8  0E00               	movlw	0
  9430  002DEA  6F6D               	movwf	(lp_filter@lp_speed+1)& (0+255),b
  9431  002DEC  0E80               	movlw	128
  9432  002DEE  6F6E               	movwf	(lp_filter@lp_speed+2)& (0+255),b
  9433  002DF0  0E3E               	movlw	62
  9434  002DF2                     L11:
  9435  002DF2  6F6F               	movwf	(lp_filter@lp_speed+3)& (0+255),b
  9436                           
  9437                           ; BSR set to: 0
  9438                           ;d232.c: 48:  lp_x = ((smooth[bn]*100.0) + (((new * 100.0)-(smooth[bn]*100.0)) * lp_spee
      +                          d)) / 100.0;
  9439  002DF4  0E00               	movlw	0
  9440  002DF6  6E1A               	movwf	___flmul@a^0,c
  9441  002DF8  0E00               	movlw	0
  9442  002DFA  6E1B               	movwf	(___flmul@a+1)^0,c
  9443  002DFC  0EC8               	movlw	200
  9444  002DFE  6E1C               	movwf	(___flmul@a+2)^0,c
  9445  002E00  0E42               	movlw	66
  9446  002E02  6E1D               	movwf	(___flmul@a+3)^0,c
  9447  002E04  0E00               	movlw	low lp_filter@smooth
  9448  002E06  6E50               	movwf	??_lp_filter^0,c
  9449  002E08  0E01               	movlw	high lp_filter@smooth
  9450  002E0A  6E51               	movwf	(??_lp_filter+1)^0,c
  9451  002E0C  90D8               	bcf	status,0,c
  9452  002E0E  3564               	rlcf	lp_filter@bn& (0+255),w,b
  9453  002E10  6ED9               	movwf	fsr2l,c
  9454  002E12  3565               	rlcf	(lp_filter@bn+1)& (0+255),w,b
  9455  002E14  6EDA               	movwf	fsr2h,c
  9456  002E16  90D8               	bcf	status,0,c
  9457  002E18  36D9               	rlcf	fsr2l,f,c
  9458  002E1A  36DA               	rlcf	fsr2h,f,c
  9459  002E1C  5050               	movf	??_lp_filter^0,w,c
  9460  002E1E  26D9               	addwf	fsr2l,f,c
  9461  002E20  5051               	movf	(??_lp_filter+1)^0,w,c
  9462  002E22  22DA               	addwfc	fsr2h,f,c
  9463  002E24  006F FF78  F016    	movff	postinc2,___flmul@b
  9464  002E2A  006F FF78  F017    	movff	postinc2,___flmul@b+1
  9465  002E30  006F FF78  F018    	movff	postinc2,___flmul@b+2
  9466  002E36  006F FF78  F019    	movff	postinc2,___flmul@b+3
  9467  002E3C  EC10  F012         	call	___flmul	;wreg free
  9468  002E40  0060  F058  F033   	movff	?___flmul,___flsub@a
  9469  002E46  0060  F05C  F034   	movff	?___flmul+1,___flsub@a+1
  9470  002E4C  0060  F060  F035   	movff	?___flmul+2,___flsub@a+2
  9471  002E52  0060  F064  F036   	movff	?___flmul+3,___flsub@a+3
  9472  002E58  0E00               	movlw	0
  9473  002E5A  6E1A               	movwf	___flmul@a^0,c
  9474  002E5C  0E00               	movlw	0
  9475  002E5E  6E1B               	movwf	(___flmul@a+1)^0,c
  9476  002E60  0EC8               	movlw	200
  9477  002E62  6E1C               	movwf	(___flmul@a+2)^0,c
  9478  002E64  0E42               	movlw	66
  9479  002E66  6E1D               	movwf	(___flmul@a+3)^0,c
  9480  002E68  0060  F180  F016   	movff	lp_filter@new,___flmul@b
  9481  002E6E  0060  F184  F017   	movff	lp_filter@new+1,___flmul@b+1
  9482  002E74  0060  F188  F018   	movff	lp_filter@new+2,___flmul@b+2
  9483  002E7A  0060  F18C  F019   	movff	lp_filter@new+3,___flmul@b+3
  9484  002E80  EC10  F012         	call	___flmul	;wreg free
  9485  002E84  0060  F058  F02F   	movff	?___flmul,___flsub@b
  9486  002E8A  0060  F05C  F030   	movff	?___flmul+1,___flsub@b+1
  9487  002E90  0060  F060  F031   	movff	?___flmul+2,___flsub@b+2
  9488  002E96  0060  F064  F032   	movff	?___flmul+3,___flsub@b+3
  9489  002E9C  EC77  F025         	call	___flsub	;wreg free
  9490  002EA0  0060  F0BC  F068   	movff	?___flsub,_lp_filter$3690
  9491  002EA6  0060  F0C0  F069   	movff	?___flsub+1,_lp_filter$3690+1
  9492  002EAC  0060  F0C4  F06A   	movff	?___flsub+2,_lp_filter$3690+2
  9493  002EB2  0060  F0C8  F06B   	movff	?___flsub+3,_lp_filter$3690+3
  9494                           
  9495                           ;d232.c: 48:  lp_x = ((smooth[bn]*100.0) + (((new * 100.0)-(smooth[bn]*100.0)) * lp_spee
      +                          d)) / 100.0;
  9496  002EB8  0060  F1B0  F01A   	movff	lp_filter@lp_speed,___flmul@a
  9497  002EBE  0060  F1B4  F01B   	movff	lp_filter@lp_speed+1,___flmul@a+1
  9498  002EC4  0060  F1B8  F01C   	movff	lp_filter@lp_speed+2,___flmul@a+2
  9499  002ECA  0060  F1BC  F01D   	movff	lp_filter@lp_speed+3,___flmul@a+3
  9500  002ED0  0060  F1A0  F016   	movff	_lp_filter$3690,___flmul@b
  9501  002ED6  0060  F1A4  F017   	movff	_lp_filter$3690+1,___flmul@b+1
  9502  002EDC  0060  F1A8  F018   	movff	_lp_filter$3690+2,___flmul@b+2
  9503  002EE2  0060  F1AC  F019   	movff	_lp_filter$3690+3,___flmul@b+3
  9504  002EE8  EC10  F012         	call	___flmul	;wreg free
  9505  002EEC  0060  F058  F00A   	movff	?___flmul,___fladd@a
  9506  002EF2  0060  F05C  F00B   	movff	?___flmul+1,___fladd@a+1
  9507  002EF8  0060  F060  F00C   	movff	?___flmul+2,___fladd@a+2
  9508  002EFE  0060  F064  F00D   	movff	?___flmul+3,___fladd@a+3
  9509  002F04  0E00               	movlw	0
  9510  002F06  6E1A               	movwf	___flmul@a^0,c
  9511  002F08  0E00               	movlw	0
  9512  002F0A  6E1B               	movwf	(___flmul@a+1)^0,c
  9513  002F0C  0EC8               	movlw	200
  9514  002F0E  6E1C               	movwf	(___flmul@a+2)^0,c
  9515  002F10  0E42               	movlw	66
  9516  002F12  6E1D               	movwf	(___flmul@a+3)^0,c
  9517  002F14  0E00               	movlw	low lp_filter@smooth
  9518  002F16  6E50               	movwf	??_lp_filter^0,c
  9519  002F18  0E01               	movlw	high lp_filter@smooth
  9520  002F1A  6E51               	movwf	(??_lp_filter+1)^0,c
  9521  002F1C  90D8               	bcf	status,0,c
  9522  002F1E  0100               	movlb	0	; () banked
  9523  002F20  3564               	rlcf	lp_filter@bn& (0+255),w,b
  9524  002F22  6ED9               	movwf	fsr2l,c
  9525  002F24  3565               	rlcf	(lp_filter@bn+1)& (0+255),w,b
  9526  002F26  6EDA               	movwf	fsr2h,c
  9527  002F28  90D8               	bcf	status,0,c
  9528  002F2A  36D9               	rlcf	fsr2l,f,c
  9529  002F2C  36DA               	rlcf	fsr2h,f,c
  9530  002F2E  5050               	movf	??_lp_filter^0,w,c
  9531  002F30  26D9               	addwf	fsr2l,f,c
  9532  002F32  5051               	movf	(??_lp_filter+1)^0,w,c
  9533  002F34  22DA               	addwfc	fsr2h,f,c
  9534  002F36  006F FF78  F016    	movff	postinc2,___flmul@b
  9535  002F3C  006F FF78  F017    	movff	postinc2,___flmul@b+1
  9536  002F42  006F FF78  F018    	movff	postinc2,___flmul@b+2
  9537  002F48  006F FF78  F019    	movff	postinc2,___flmul@b+3
  9538  002F4E  EC10  F012         	call	___flmul	;wreg free
  9539  002F52  0060  F058  F006   	movff	?___flmul,___fladd@b
  9540  002F58  0060  F05C  F007   	movff	?___flmul+1,___fladd@b+1
  9541  002F5E  0060  F060  F008   	movff	?___flmul+2,___fladd@b+2
  9542  002F64  0060  F064  F009   	movff	?___flmul+3,___fladd@b+3
  9543  002F6A  ECD2  F013         	call	___fladd	;wreg free
  9544  002F6E  0060  F018  F037   	movff	?___fladd,___fldiv@b
  9545  002F74  0060  F01C  F038   	movff	?___fladd+1,___fldiv@b+1
  9546  002F7A  0060  F020  F039   	movff	?___fladd+2,___fldiv@b+2
  9547  002F80  0060  F024  F03A   	movff	?___fladd+3,___fldiv@b+3
  9548  002F86  0E00               	movlw	0
  9549  002F88  6E3B               	movwf	___fldiv@a^0,c
  9550  002F8A  0E00               	movlw	0
  9551  002F8C  6E3C               	movwf	(___fldiv@a+1)^0,c
  9552  002F8E  0EC8               	movlw	200
  9553  002F90  6E3D               	movwf	(___fldiv@a+2)^0,c
  9554  002F92  0E42               	movlw	66
  9555  002F94  6E3E               	movwf	(___fldiv@a+3)^0,c
  9556  002F96  EC7E  F019         	call	___fldiv	;wreg free
  9557  002F9A  0060  F0DC  F070   	movff	?___fldiv,lp_filter@lp_x
  9558  002FA0  0060  F0E0  F071   	movff	?___fldiv+1,lp_filter@lp_x+1
  9559  002FA6  0060  F0E4  F072   	movff	?___fldiv+2,lp_filter@lp_x+2
  9560  002FAC  0060  F0E8  F073   	movff	?___fldiv+3,lp_filter@lp_x+3
  9561                           
  9562                           ;d232.c: 49:  smooth[bn] = lp_x;
  9563  002FB2  0E00               	movlw	low lp_filter@smooth
  9564  002FB4  6E50               	movwf	??_lp_filter^0,c
  9565  002FB6  0E01               	movlw	high lp_filter@smooth
  9566  002FB8  6E51               	movwf	(??_lp_filter+1)^0,c
  9567  002FBA  90D8               	bcf	status,0,c
  9568  002FBC  0100               	movlb	0	; () banked
  9569  002FBE  3564               	rlcf	lp_filter@bn& (0+255),w,b
  9570  002FC0  6ED9               	movwf	fsr2l,c
  9571  002FC2  3565               	rlcf	(lp_filter@bn+1)& (0+255),w,b
  9572  002FC4  6EDA               	movwf	fsr2h,c
  9573  002FC6  90D8               	bcf	status,0,c
  9574  002FC8  36D9               	rlcf	fsr2l,f,c
  9575  002FCA  36DA               	rlcf	fsr2h,f,c
  9576  002FCC  5050               	movf	??_lp_filter^0,w,c
  9577  002FCE  26D9               	addwf	fsr2l,f,c
  9578  002FD0  5051               	movf	(??_lp_filter+1)^0,w,c
  9579  002FD2  22DA               	addwfc	fsr2h,f,c
  9580  002FD4  0060  F1C3  FFDE   	movff	lp_filter@lp_x,postinc2
  9581  002FDA  0060  F1C7  FFDE   	movff	lp_filter@lp_x+1,postinc2
  9582  002FE0  0060  F1CB  FFDE   	movff	lp_filter@lp_x+2,postinc2
  9583  002FE6  0060  F1CF  FFDE   	movff	lp_filter@lp_x+3,postinc2
  9584                           
  9585                           ; BSR set to: 0
  9586                           ;d232.c: 50:  if (slow == (-1)) {
  9587  002FEC  2966               	incf	lp_filter@slow& (0+255),w,b
  9588  002FEE  E123               	bnz	l6946
  9589  002FF0  2967               	incf	(lp_filter@slow+1)& (0+255),w,b
  9590  002FF2  A4D8               	btfss	status,2,c
  9591  002FF4  D020               	goto	l6946
  9592                           
  9593                           ; BSR set to: 0
  9594                           ;d232.c: 51:   lp_x = 0.0;
  9595  002FF6  0E00               	movlw	0
  9596  002FF8  6F70               	movwf	lp_filter@lp_x& (0+255),b
  9597  002FFA  0E00               	movlw	0
  9598  002FFC  6F71               	movwf	(lp_filter@lp_x+1)& (0+255),b
  9599  002FFE  0E00               	movlw	0
  9600  003000  6F72               	movwf	(lp_filter@lp_x+2)& (0+255),b
  9601  003002  0E00               	movlw	0
  9602  003004  6F73               	movwf	(lp_filter@lp_x+3)& (0+255),b
  9603                           
  9604                           ; BSR set to: 0
  9605                           ;d232.c: 52:   smooth[bn] = 0.0;
  9606  003006  0E00               	movlw	low lp_filter@smooth
  9607  003008  6E50               	movwf	??_lp_filter^0,c
  9608  00300A  0E01               	movlw	high lp_filter@smooth
  9609  00300C  6E51               	movwf	(??_lp_filter+1)^0,c
  9610  00300E  90D8               	bcf	status,0,c
  9611  003010  3564               	rlcf	lp_filter@bn& (0+255),w,b
  9612  003012  6ED9               	movwf	fsr2l,c
  9613  003014  3565               	rlcf	(lp_filter@bn+1)& (0+255),w,b
  9614  003016  6EDA               	movwf	fsr2h,c
  9615  003018  90D8               	bcf	status,0,c
  9616  00301A  36D9               	rlcf	fsr2l,f,c
  9617  00301C  36DA               	rlcf	fsr2h,f,c
  9618  00301E  5050               	movf	??_lp_filter^0,w,c
  9619  003020  26D9               	addwf	fsr2l,f,c
  9620  003022  5051               	movf	(??_lp_filter+1)^0,w,c
  9621  003024  22DA               	addwfc	fsr2h,f,c
  9622  003026  0E00               	movlw	0
  9623  003028  6EDE               	movwf	postinc2,c
  9624  00302A  0E00               	movlw	0
  9625  00302C  6EDE               	movwf	postinc2,c
  9626  00302E  0E00               	movlw	0
  9627  003030  6EDE               	movwf	postinc2,c
  9628  003032  0E00               	movlw	0
  9629  003034  6EDD               	movwf	postdec2,c
  9630  003036                     l6946:
  9631                           
  9632                           ; BSR set to: 0
  9633                           ;d232.c: 54:  return lp_x;
  9634  003036  0060  F1C0  F060   	movff	lp_filter@lp_x,?_lp_filter
  9635  00303C  0060  F1C4  F061   	movff	lp_filter@lp_x+1,?_lp_filter+1
  9636  003042  0060  F1C8  F062   	movff	lp_filter@lp_x+2,?_lp_filter+2
  9637  003048  0060  F1CC  F063   	movff	lp_filter@lp_x+3,?_lp_filter+3
  9638                           
  9639                           ; BSR set to: 0
  9640  00304E  0012               	return		;funcret
  9641  003050                     __end_of_lp_filter:
  9642                           	opt callstack 0
  9643                           
  9644 ;; *************** function ___flsub *****************
  9645 ;; Defined at:
  9646 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
  9647 ;; Parameters:    Size  Location     Type
  9648 ;;  b               4   46[COMRAM] float 
  9649 ;;  a               4   50[COMRAM] float 
  9650 ;; Auto vars:     Size  Location     Type
  9651 ;;		None
  9652 ;; Return value:  Size  Location     Type
  9653 ;;                  4   46[COMRAM] float 
  9654 ;; Registers used:
  9655 ;;		wreg, status,2, status,0, cstack
  9656 ;; Tracked objects:
  9657 ;;		On entry : 0/0
  9658 ;;		On exit  : 0/0
  9659 ;;		Unchanged: 0/0
  9660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9661 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9664 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9665 ;;Total ram usage:        8 bytes
  9666 ;; Hardware stack levels used:    1
  9667 ;; Hardware stack levels required when called:    5
  9668 ;; This function calls:
  9669 ;;		___fladd
  9670 ;; This function is called by:
  9671 ;;		_lp_filter
  9672 ;; This function uses a non-reentrant model
  9673 ;;
  9674                           
  9675                           	psect	text62
  9676  004AEE                     __ptext62:
  9677                           	opt callstack 0
  9678  004AEE                     ___flsub:
  9679                           	opt callstack 22
  9680                           
  9681                           ; BSR set to: 0
  9682                           ;incstack = 0
  9683  004AEE  0E00               	movlw	0
  9684  004AF0  1A33               	xorwf	___flsub@a^0,f,c
  9685  004AF2  0E00               	movlw	0
  9686  004AF4  1A34               	xorwf	(___flsub@a+1)^0,f,c
  9687  004AF6  0E00               	movlw	0
  9688  004AF8  1A35               	xorwf	(___flsub@a+2)^0,f,c
  9689  004AFA  0E80               	movlw	128
  9690  004AFC  1A36               	xorwf	(___flsub@a+3)^0,f,c
  9691  004AFE  0060  F0BC  F006   	movff	___flsub@b,___fladd@b
  9692  004B04  0060  F0C0  F007   	movff	___flsub@b+1,___fladd@b+1
  9693  004B0A  0060  F0C4  F008   	movff	___flsub@b+2,___fladd@b+2
  9694  004B10  0060  F0C8  F009   	movff	___flsub@b+3,___fladd@b+3
  9695  004B16  0060  F0CC  F00A   	movff	___flsub@a,___fladd@a
  9696  004B1C  0060  F0D0  F00B   	movff	___flsub@a+1,___fladd@a+1
  9697  004B22  0060  F0D4  F00C   	movff	___flsub@a+2,___fladd@a+2
  9698  004B28  0060  F0D8  F00D   	movff	___flsub@a+3,___fladd@a+3
  9699  004B2E  ECD2  F013         	call	___fladd	;wreg free
  9700  004B32  0060  F018  F02F   	movff	?___fladd,?___flsub
  9701  004B38  0060  F01C  F030   	movff	?___fladd+1,?___flsub+1
  9702  004B3E  0060  F020  F031   	movff	?___fladd+2,?___flsub+2
  9703  004B44  0060  F024  F032   	movff	?___fladd+3,?___flsub+3
  9704  004B4A  0012               	return		;funcret
  9705  004B4C                     __end_of___flsub:
  9706                           	opt callstack 0
  9707                           
  9708 ;; *************** function ___fladd *****************
  9709 ;; Defined at:
  9710 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
  9711 ;; Parameters:    Size  Location     Type
  9712 ;;  b               4    5[COMRAM] float 
  9713 ;;  a               4    9[COMRAM] float 
  9714 ;; Auto vars:     Size  Location     Type
  9715 ;;  grs             1   20[COMRAM] unsigned char 
  9716 ;;  bexp            1   19[COMRAM] unsigned char 
  9717 ;;  aexp            1   18[COMRAM] unsigned char 
  9718 ;;  signs           1   17[COMRAM] unsigned char 
  9719 ;; Return value:  Size  Location     Type
  9720 ;;                  4    5[COMRAM] unsigned char 
  9721 ;; Registers used:
  9722 ;;		wreg, status,2, status,0
  9723 ;; Tracked objects:
  9724 ;;		On entry : 0/0
  9725 ;;		On exit  : 0/0
  9726 ;;		Unchanged: 0/0
  9727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9728 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9729 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9730 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9731 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9732 ;;Total ram usage:       16 bytes
  9733 ;; Hardware stack levels used:    1
  9734 ;; Hardware stack levels required when called:    4
  9735 ;; This function calls:
  9736 ;;		Nothing
  9737 ;; This function is called by:
  9738 ;;		_lp_filter
  9739 ;;		___flsub
  9740 ;; This function uses a non-reentrant model
  9741 ;;
  9742                           
  9743                           	psect	text63
  9744  0027A4                     __ptext63:
  9745                           	opt callstack 0
  9746  0027A4                     ___fladd:
  9747                           	opt callstack 22
  9748                           
  9749                           ;incstack = 0
  9750  0027A4  5009               	movf	(___fladd@b+3)^0,w,c
  9751  0027A6  0B80               	andlw	128
  9752  0027A8  6E12               	movwf	___fladd@signs^0,c
  9753  0027AA  5009               	movf	(___fladd@b+3)^0,w,c
  9754  0027AC  2409               	addwf	(___fladd@b+3)^0,w,c
  9755  0027AE  6E14               	movwf	___fladd@bexp^0,c
  9756  0027B0  BE08               	btfsc	(___fladd@b+2)^0,7,c
  9757  0027B2  8014               	bsf	___fladd@bexp^0,0,c
  9758  0027B4  5014               	movf	___fladd@bexp^0,w,c
  9759  0027B6  B4D8               	btfsc	status,2,c
  9760  0027B8  D00D               	goto	l6360
  9761  0027BA  2814               	incf	___fladd@bexp^0,w,c
  9762  0027BC  A4D8               	btfss	status,2,c
  9763  0027BE  D008               	goto	l6356
  9764  0027C0  0E00               	movlw	0
  9765  0027C2  6E06               	movwf	___fladd@b^0,c
  9766  0027C4  0E00               	movlw	0
  9767  0027C6  6E07               	movwf	(___fladd@b+1)^0,c
  9768  0027C8  0E00               	movlw	0
  9769  0027CA  6E08               	movwf	(___fladd@b+2)^0,c
  9770  0027CC  0E00               	movlw	0
  9771  0027CE  6E09               	movwf	(___fladd@b+3)^0,c
  9772  0027D0                     l6356:
  9773  0027D0  8E08               	bsf	(___fladd@b+2)^0,7,c
  9774  0027D2  D006               	goto	L12
  9775  0027D4                     l6360:
  9776  0027D4  0E00               	movlw	0
  9777  0027D6  6E06               	movwf	___fladd@b^0,c
  9778  0027D8  0E00               	movlw	0
  9779  0027DA  6E07               	movwf	(___fladd@b+1)^0,c
  9780  0027DC  0E00               	movlw	0
  9781  0027DE  6E08               	movwf	(___fladd@b+2)^0,c
  9782  0027E0                     L12:
  9783  0027E0  0E00               	movlw	0
  9784  0027E2  6E09               	movwf	(___fladd@b+3)^0,c
  9785  0027E4  500D               	movf	(___fladd@a+3)^0,w,c
  9786  0027E6  0B80               	andlw	128
  9787  0027E8  6E13               	movwf	___fladd@aexp^0,c
  9788  0027EA  5012               	movf	___fladd@signs^0,w,c
  9789  0027EC  1813               	xorwf	___fladd@aexp^0,w,c
  9790  0027EE  A4D8               	btfss	status,2,c
  9791  0027F0  8C12               	bsf	___fladd@signs^0,6,c
  9792  0027F2  500D               	movf	(___fladd@a+3)^0,w,c
  9793  0027F4  240D               	addwf	(___fladd@a+3)^0,w,c
  9794  0027F6  6E13               	movwf	___fladd@aexp^0,c
  9795  0027F8  BE0C               	btfsc	(___fladd@a+2)^0,7,c
  9796  0027FA  8013               	bsf	___fladd@aexp^0,0,c
  9797  0027FC  5013               	movf	___fladd@aexp^0,w,c
  9798  0027FE  B4D8               	btfsc	status,2,c
  9799  002800  D00D               	goto	l6384
  9800  002802  2813               	incf	___fladd@aexp^0,w,c
  9801  002804  A4D8               	btfss	status,2,c
  9802  002806  D008               	goto	l6380
  9803  002808  0E00               	movlw	0
  9804  00280A  6E0A               	movwf	___fladd@a^0,c
  9805  00280C  0E00               	movlw	0
  9806  00280E  6E0B               	movwf	(___fladd@a+1)^0,c
  9807  002810  0E00               	movlw	0
  9808  002812  6E0C               	movwf	(___fladd@a+2)^0,c
  9809  002814  0E00               	movlw	0
  9810  002816  6E0D               	movwf	(___fladd@a+3)^0,c
  9811  002818                     l6380:
  9812  002818  8E0C               	bsf	(___fladd@a+2)^0,7,c
  9813  00281A  D006               	goto	L13
  9814  00281C                     l6384:
  9815  00281C  0E00               	movlw	0
  9816  00281E  6E0A               	movwf	___fladd@a^0,c
  9817  002820  0E00               	movlw	0
  9818  002822  6E0B               	movwf	(___fladd@a+1)^0,c
  9819  002824  0E00               	movlw	0
  9820  002826  6E0C               	movwf	(___fladd@a+2)^0,c
  9821  002828                     L13:
  9822  002828  0E00               	movlw	0
  9823  00282A  6E0D               	movwf	(___fladd@a+3)^0,c
  9824  00282C  5014               	movf	___fladd@bexp^0,w,c
  9825  00282E  5C13               	subwf	___fladd@aexp^0,w,c
  9826  002830  B0D8               	btfsc	status,0,c
  9827  002832  D031               	goto	l6422
  9828  002834  AC12               	btfss	___fladd@signs^0,6,c
  9829  002836  D002               	goto	l6392
  9830  002838  0E80               	movlw	128
  9831  00283A  1A12               	xorwf	___fladd@signs^0,f,c
  9832  00283C                     l6392:
  9833  00283C  0060  F050  F015   	movff	___fladd@bexp,___fladd@grs
  9834  002842  0060  F04C  F014   	movff	___fladd@aexp,___fladd@bexp
  9835  002848  0060  F054  F013   	movff	___fladd@grs,___fladd@aexp
  9836  00284E  0060  F018  F015   	movff	___fladd@b,___fladd@grs
  9837  002854  0060  F028  F006   	movff	___fladd@a,___fladd@b
  9838  00285A  0060  F054  F00A   	movff	___fladd@grs,___fladd@a
  9839  002860  0060  F01C  F015   	movff	___fladd@b+1,___fladd@grs
  9840  002866  0060  F02C  F007   	movff	___fladd@a+1,___fladd@b+1
  9841  00286C  0060  F054  F00B   	movff	___fladd@grs,___fladd@a+1
  9842  002872  0060  F020  F015   	movff	___fladd@b+2,___fladd@grs
  9843  002878  0060  F030  F008   	movff	___fladd@a+2,___fladd@b+2
  9844  00287E  0060  F054  F00C   	movff	___fladd@grs,___fladd@a+2
  9845  002884  0060  F024  F015   	movff	___fladd@b+3,___fladd@grs
  9846  00288A  0060  F034  F009   	movff	___fladd@a+3,___fladd@b+3
  9847  002890  0060  F054  F00D   	movff	___fladd@grs,___fladd@a+3
  9848  002896                     l6422:
  9849  002896  0E00               	movlw	0
  9850  002898  6E15               	movwf	___fladd@grs^0,c
  9851  00289A  5014               	movf	___fladd@bexp^0,w,c
  9852  00289C  0060  F04C  F00E   	movff	___fladd@aexp,??___fladd
  9853  0028A2  6A0F               	clrf	(??___fladd+1)^0,c
  9854  0028A4  5E0E               	subwf	??___fladd^0,f,c
  9855  0028A6  0E00               	movlw	0
  9856  0028A8  5A0F               	subwfb	(??___fladd+1)^0,f,c
  9857  0028AA  BE0F               	btfsc	(??___fladd+1)^0,7,c
  9858  0028AC  D02D               	goto	l1959
  9859  0028AE  500F               	movf	(??___fladd+1)^0,w,c
  9860  0028B0  E104               	bnz	u6590
  9861  0028B2  0E1A               	movlw	26
  9862  0028B4  5C0E               	subwf	??___fladd^0,w,c
  9863  0028B6  A0D8               	btfss	status,0,c
  9864  0028B8  D027               	goto	l1959
  9865  0028BA                     u6590:
  9866  0028BA  5006               	movf	___fladd@b^0,w,c
  9867  0028BC  1007               	iorwf	(___fladd@b+1)^0,w,c
  9868  0028BE  1008               	iorwf	(___fladd@b+2)^0,w,c
  9869  0028C0  1009               	iorwf	(___fladd@b+3)^0,w,c
  9870  0028C2  B4D8               	btfsc	status,2,c
  9871  0028C4  D002               	goto	u6600
  9872  0028C6  0E01               	movlw	1
  9873  0028C8  D001               	goto	u6610
  9874  0028CA                     u6600:
  9875  0028CA  0E00               	movlw	0
  9876  0028CC                     u6610:
  9877  0028CC  6E15               	movwf	___fladd@grs^0,c
  9878  0028CE  0E00               	movlw	0
  9879  0028D0  6E06               	movwf	___fladd@b^0,c
  9880  0028D2  0E00               	movlw	0
  9881  0028D4  6E07               	movwf	(___fladd@b+1)^0,c
  9882  0028D6  0E00               	movlw	0
  9883  0028D8  6E08               	movwf	(___fladd@b+2)^0,c
  9884  0028DA  0E00               	movlw	0
  9885  0028DC  6E09               	movwf	(___fladd@b+3)^0,c
  9886  0028DE  0060  F04C  F014   	movff	___fladd@aexp,___fladd@bexp
  9887  0028E4  D015               	goto	u6640
  9888  0028E6                     l1960:
  9889  0028E6  A015               	btfss	___fladd@grs^0,0,c
  9890  0028E8  D005               	goto	l6434
  9891  0028EA  90D8               	bcf	status,0,c
  9892  0028EC  3015               	rrcf	___fladd@grs^0,w,c
  9893  0028EE  0901               	iorlw	1
  9894  0028F0  6E15               	movwf	___fladd@grs^0,c
  9895  0028F2  D002               	goto	l6436
  9896  0028F4                     l6434:
  9897  0028F4  90D8               	bcf	status,0,c
  9898  0028F6  3215               	rrcf	___fladd@grs^0,f,c
  9899  0028F8                     l6436:
  9900  0028F8  B006               	btfsc	___fladd@b^0,0,c
  9901  0028FA  8E15               	bsf	___fladd@grs^0,7,c
  9902  0028FC  3409               	rlcf	(___fladd@b+3)^0,w,c
  9903  0028FE  3209               	rrcf	(___fladd@b+3)^0,f,c
  9904  002900  3208               	rrcf	(___fladd@b+2)^0,f,c
  9905  002902  3207               	rrcf	(___fladd@b+1)^0,f,c
  9906  002904  3206               	rrcf	___fladd@b^0,f,c
  9907  002906  2A14               	incf	___fladd@bexp^0,f,c
  9908  002908                     l1959:
  9909  002908  5013               	movf	___fladd@aexp^0,w,c
  9910  00290A  5C14               	subwf	___fladd@bexp^0,w,c
  9911  00290C  A0D8               	btfss	status,0,c
  9912  00290E  D7EB               	goto	l1960
  9913  002910                     u6640:
  9914  002910  BC12               	btfsc	___fladd@signs^0,6,c
  9915  002912  D028               	goto	l6468
  9916  002914  5014               	movf	___fladd@bexp^0,w,c
  9917  002916  A4D8               	btfss	status,2,c
  9918  002918  D009               	goto	l6450
  9919  00291A  0E00               	movlw	0
  9920  00291C  6E06               	movwf	?___fladd^0,c
  9921  00291E  0E00               	movlw	0
  9922  002920  6E07               	movwf	(?___fladd+1)^0,c
  9923  002922  0E00               	movlw	0
  9924  002924  6E08               	movwf	(?___fladd+2)^0,c
  9925  002926  0E00               	movlw	0
  9926  002928  6E09               	movwf	(?___fladd+3)^0,c
  9927  00292A  0012               	return	
  9928  00292C                     l6450:
  9929  00292C  500A               	movf	___fladd@a^0,w,c
  9930  00292E  2606               	addwf	___fladd@b^0,f,c
  9931  002930  500B               	movf	(___fladd@a+1)^0,w,c
  9932  002932  2207               	addwfc	(___fladd@b+1)^0,f,c
  9933  002934  500C               	movf	(___fladd@a+2)^0,w,c
  9934  002936  2208               	addwfc	(___fladd@b+2)^0,f,c
  9935  002938  500D               	movf	(___fladd@a+3)^0,w,c
  9936  00293A  2209               	addwfc	(___fladd@b+3)^0,f,c
  9937  00293C  A009               	btfss	(___fladd@b+3)^0,0,c
  9938  00293E  D071               	goto	u6770
  9939  002940  A015               	btfss	___fladd@grs^0,0,c
  9940  002942  D005               	goto	l6458
  9941  002944  90D8               	bcf	status,0,c
  9942  002946  3015               	rrcf	___fladd@grs^0,w,c
  9943  002948  0901               	iorlw	1
  9944  00294A  6E15               	movwf	___fladd@grs^0,c
  9945  00294C  D002               	goto	l6460
  9946  00294E                     l6458:
  9947  00294E  90D8               	bcf	status,0,c
  9948  002950  3215               	rrcf	___fladd@grs^0,f,c
  9949  002952                     l6460:
  9950  002952  B006               	btfsc	___fladd@b^0,0,c
  9951  002954  8E15               	bsf	___fladd@grs^0,7,c
  9952  002956  3409               	rlcf	(___fladd@b+3)^0,w,c
  9953  002958  3209               	rrcf	(___fladd@b+3)^0,f,c
  9954  00295A  3208               	rrcf	(___fladd@b+2)^0,f,c
  9955  00295C  3207               	rrcf	(___fladd@b+1)^0,f,c
  9956  00295E  3206               	rrcf	___fladd@b^0,f,c
  9957  002960  2A14               	incf	___fladd@bexp^0,f,c
  9958  002962  D05F               	goto	u6770
  9959  002964                     l6468:
  9960  002964  500A               	movf	___fladd@a^0,w,c
  9961  002966  5C06               	subwf	___fladd@b^0,w,c
  9962  002968  500B               	movf	(___fladd@a+1)^0,w,c
  9963  00296A  5807               	subwfb	(___fladd@b+1)^0,w,c
  9964  00296C  500C               	movf	(___fladd@a+2)^0,w,c
  9965  00296E  5808               	subwfb	(___fladd@b+2)^0,w,c
  9966  002970  5009               	movf	(___fladd@b+3)^0,w,c
  9967  002972  0A80               	xorlw	128
  9968  002974  6E0E               	movwf	??___fladd^0,c
  9969  002976  500D               	movf	(___fladd@a+3)^0,w,c
  9970  002978  0A80               	xorlw	128
  9971  00297A  580E               	subwfb	??___fladd^0,w,c
  9972  00297C  B0D8               	btfsc	status,0,c
  9973  00297E  D025               	goto	l6478
  9974  002980  5006               	movf	___fladd@b^0,w,c
  9975  002982  5C0A               	subwf	___fladd@a^0,w,c
  9976  002984  6E0E               	movwf	??___fladd^0,c
  9977  002986  5007               	movf	(___fladd@b+1)^0,w,c
  9978  002988  580B               	subwfb	(___fladd@a+1)^0,w,c
  9979  00298A  6E0F               	movwf	(??___fladd+1)^0,c
  9980  00298C  5008               	movf	(___fladd@b+2)^0,w,c
  9981  00298E  580C               	subwfb	(___fladd@a+2)^0,w,c
  9982  002990  6E10               	movwf	(??___fladd+2)^0,c
  9983  002992  5009               	movf	(___fladd@b+3)^0,w,c
  9984  002994  580D               	subwfb	(___fladd@a+3)^0,w,c
  9985  002996  6E11               	movwf	(??___fladd+3)^0,c
  9986  002998  0EFF               	movlw	255
  9987  00299A  240E               	addwf	??___fladd^0,w,c
  9988  00299C  6E06               	movwf	___fladd@b^0,c
  9989  00299E  0EFF               	movlw	255
  9990  0029A0  200F               	addwfc	(??___fladd+1)^0,w,c
  9991  0029A2  6E07               	movwf	(___fladd@b+1)^0,c
  9992  0029A4  0EFF               	movlw	255
  9993  0029A6  2010               	addwfc	(??___fladd+2)^0,w,c
  9994  0029A8  6E08               	movwf	(___fladd@b+2)^0,c
  9995  0029AA  0EFF               	movlw	255
  9996  0029AC  2011               	addwfc	(??___fladd+3)^0,w,c
  9997  0029AE  6E09               	movwf	(___fladd@b+3)^0,c
  9998  0029B0  0E80               	movlw	128
  9999  0029B2  1A12               	xorwf	___fladd@signs^0,f,c
 10000  0029B4  6C15               	negf	___fladd@grs^0,c
 10001  0029B6  5015               	movf	___fladd@grs^0,w,c
 10002  0029B8  A4D8               	btfss	status,2,c
 10003  0029BA  D00F               	goto	l1975
 10004  0029BC  0E01               	movlw	1
 10005  0029BE  2606               	addwf	___fladd@b^0,f,c
 10006  0029C0  0E00               	movlw	0
 10007  0029C2  2207               	addwfc	(___fladd@b+1)^0,f,c
 10008  0029C4  2208               	addwfc	(___fladd@b+2)^0,f,c
 10009  0029C6  2209               	addwfc	(___fladd@b+3)^0,f,c
 10010  0029C8  D008               	goto	l1975
 10011  0029CA                     l6478:
 10012  0029CA  500A               	movf	___fladd@a^0,w,c
 10013  0029CC  5E06               	subwf	___fladd@b^0,f,c
 10014  0029CE  500B               	movf	(___fladd@a+1)^0,w,c
 10015  0029D0  5A07               	subwfb	(___fladd@b+1)^0,f,c
 10016  0029D2  500C               	movf	(___fladd@a+2)^0,w,c
 10017  0029D4  5A08               	subwfb	(___fladd@b+2)^0,f,c
 10018  0029D6  500D               	movf	(___fladd@a+3)^0,w,c
 10019  0029D8  5A09               	subwfb	(___fladd@b+3)^0,f,c
 10020  0029DA                     l1975:
 10021  0029DA  5006               	movf	___fladd@b^0,w,c
 10022  0029DC  1007               	iorwf	(___fladd@b+1)^0,w,c
 10023  0029DE  1008               	iorwf	(___fladd@b+2)^0,w,c
 10024  0029E0  1009               	iorwf	(___fladd@b+3)^0,w,c
 10025  0029E2  A4D8               	btfss	status,2,c
 10026  0029E4  D01C               	goto	l6502
 10027  0029E6  5015               	movf	___fladd@grs^0,w,c
 10028  0029E8  A4D8               	btfss	status,2,c
 10029  0029EA  D019               	goto	l6502
 10030  0029EC  0E00               	movlw	0
 10031  0029EE  6E06               	movwf	?___fladd^0,c
 10032  0029F0  0E00               	movlw	0
 10033  0029F2  6E07               	movwf	(?___fladd+1)^0,c
 10034  0029F4  0E00               	movlw	0
 10035  0029F6  6E08               	movwf	(?___fladd+2)^0,c
 10036  0029F8  0E00               	movlw	0
 10037  0029FA  6E09               	movwf	(?___fladd+3)^0,c
 10038  0029FC  0012               	return	
 10039  0029FE                     l6486:
 10040  0029FE  90D8               	bcf	status,0,c
 10041  002A00  3606               	rlcf	___fladd@b^0,f,c
 10042  002A02  3607               	rlcf	(___fladd@b+1)^0,f,c
 10043  002A04  3608               	rlcf	(___fladd@b+2)^0,f,c
 10044  002A06  3609               	rlcf	(___fladd@b+3)^0,f,c
 10045  002A08  BE15               	btfsc	___fladd@grs^0,7,c
 10046  002A0A  8006               	bsf	___fladd@b^0,0,c
 10047  002A0C  A015               	btfss	___fladd@grs^0,0,c
 10048  002A0E  D002               	goto	l6496
 10049  002A10  80D8               	bsf	status,0,c
 10050  002A12  D001               	goto	L14
 10051  002A14                     l6496:
 10052  002A14  90D8               	bcf	status,0,c
 10053  002A16                     L14:
 10054  002A16  3615               	rlcf	___fladd@grs^0,f,c
 10055  002A18  5014               	movf	___fladd@bexp^0,w,c
 10056  002A1A  A4D8               	btfss	status,2,c
 10057  002A1C  0614               	decf	___fladd@bexp^0,f,c
 10058  002A1E                     l6502:
 10059  002A1E  AE08               	btfss	(___fladd@b+2)^0,7,c
 10060  002A20  D7EE               	goto	l6486
 10061  002A22                     u6770:
 10062  002A22  0E00               	movlw	0
 10063  002A24  6E13               	movwf	___fladd@aexp^0,c
 10064  002A26  AE15               	btfss	___fladd@grs^0,7,c
 10065  002A28  D00C               	goto	l1984
 10066  002A2A  0060  F054  F00E   	movff	___fladd@grs,??___fladd
 10067  002A30  0E7F               	movlw	127
 10068  002A32  160E               	andwf	??___fladd^0,f,c
 10069  002A34  B4D8               	btfsc	status,2,c
 10070  002A36  D003               	goto	l1985
 10071  002A38                     u6790:
 10072  002A38  0E01               	movlw	1
 10073  002A3A  6E13               	movwf	___fladd@aexp^0,c
 10074  002A3C  D002               	goto	l1984
 10075  002A3E                     l1985:
 10076  002A3E  B006               	btfsc	___fladd@b^0,0,c
 10077  002A40  D7FB               	goto	u6790
 10078  002A42                     l1984:
 10079  002A42  5013               	movf	___fladd@aexp^0,w,c
 10080  002A44  B4D8               	btfsc	status,2,c
 10081  002A46  D028               	goto	l6522
 10082  002A48  0E01               	movlw	1
 10083  002A4A  2606               	addwf	___fladd@b^0,f,c
 10084  002A4C  0E00               	movlw	0
 10085  002A4E  2207               	addwfc	(___fladd@b+1)^0,f,c
 10086  002A50  2208               	addwfc	(___fladd@b+2)^0,f,c
 10087  002A52  2209               	addwfc	(___fladd@b+3)^0,f,c
 10088  002A54  A009               	btfss	(___fladd@b+3)^0,0,c
 10089  002A56  D020               	goto	l6522
 10090  002A58  0060  F018  F00E   	movff	___fladd@b,??___fladd
 10091  002A5E  0060  F01C  F00F   	movff	___fladd@b+1,??___fladd+1
 10092  002A64  0060  F020  F010   	movff	___fladd@b+2,??___fladd+2
 10093  002A6A  0060  F024  F011   	movff	___fladd@b+3,??___fladd+3
 10094  002A70  3411               	rlcf	(??___fladd+3)^0,w,c
 10095  002A72  3211               	rrcf	(??___fladd+3)^0,f,c
 10096  002A74  3210               	rrcf	(??___fladd+2)^0,f,c
 10097  002A76  320F               	rrcf	(??___fladd+1)^0,f,c
 10098  002A78  320E               	rrcf	??___fladd^0,f,c
 10099  002A7A  0060  F038  F006   	movff	??___fladd,___fladd@b
 10100  002A80  0060  F03C  F007   	movff	??___fladd+1,___fladd@b+1
 10101  002A86  0060  F040  F008   	movff	??___fladd+2,___fladd@b+2
 10102  002A8C  0060  F044  F009   	movff	??___fladd+3,___fladd@b+3
 10103  002A92  2814               	incf	___fladd@bexp^0,w,c
 10104  002A94  A4D8               	btfss	status,2,c
 10105  002A96  2A14               	incf	___fladd@bexp^0,f,c
 10106  002A98                     l6522:
 10107  002A98  2814               	incf	___fladd@bexp^0,w,c
 10108  002A9A  B4D8               	btfsc	status,2,c
 10109  002A9C  D003               	goto	u6850
 10110  002A9E  5014               	movf	___fladd@bexp^0,w,c
 10111  002AA0  A4D8               	btfss	status,2,c
 10112  002AA2  D00D               	goto	l6530
 10113  002AA4                     u6850:
 10114  002AA4  0E00               	movlw	0
 10115  002AA6  6E06               	movwf	___fladd@b^0,c
 10116  002AA8  0E00               	movlw	0
 10117  002AAA  6E07               	movwf	(___fladd@b+1)^0,c
 10118  002AAC  0E00               	movlw	0
 10119  002AAE  6E08               	movwf	(___fladd@b+2)^0,c
 10120  002AB0  0E00               	movlw	0
 10121  002AB2  6E09               	movwf	(___fladd@b+3)^0,c
 10122  002AB4  5014               	movf	___fladd@bexp^0,w,c
 10123  002AB6  A4D8               	btfss	status,2,c
 10124  002AB8  D002               	goto	l6530
 10125  002ABA  0E00               	movlw	0
 10126  002ABC  6E12               	movwf	___fladd@signs^0,c
 10127  002ABE                     l6530:
 10128  002ABE  A014               	btfss	___fladd@bexp^0,0,c
 10129  002AC0  D002               	goto	l6534
 10130  002AC2  8E08               	bsf	(___fladd@b+2)^0,7,c
 10131  002AC4  D001               	goto	l6536
 10132  002AC6                     l6534:
 10133  002AC6  9E08               	bcf	(___fladd@b+2)^0,7,c
 10134  002AC8                     l6536:
 10135  002AC8  90D8               	bcf	status,0,c
 10136  002ACA  3014               	rrcf	___fladd@bexp^0,w,c
 10137  002ACC  6E09               	movwf	(___fladd@b+3)^0,c
 10138  002ACE  BE12               	btfsc	___fladd@signs^0,7,c
 10139  002AD0  8E09               	bsf	(___fladd@b+3)^0,7,c
 10140  002AD2  0060  F018  F006   	movff	___fladd@b,?___fladd
 10141  002AD8  0060  F01C  F007   	movff	___fladd@b+1,?___fladd+1
 10142  002ADE  0060  F020  F008   	movff	___fladd@b+2,?___fladd+2
 10143  002AE4  0060  F024  F009   	movff	___fladd@b+3,?___fladd+3
 10144  002AEA  0012               	return		;funcret
 10145  002AEC                     __end_of___fladd:
 10146                           	opt callstack 0
 10147                           
 10148 ;; *************** function ___flmul *****************
 10149 ;; Defined at:
 10150 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 10151 ;; Parameters:    Size  Location     Type
 10152 ;;  b               4   21[COMRAM] unsigned char 
 10153 ;;  a               4   25[COMRAM] unsigned char 
 10154 ;; Auto vars:     Size  Location     Type
 10155 ;;  prod            4   40[COMRAM] struct .
 10156 ;;  grs             4   36[COMRAM] unsigned long 
 10157 ;;  temp            2   44[COMRAM] struct .
 10158 ;;  bexp            1   35[COMRAM] unsigned char 
 10159 ;;  aexp            1   34[COMRAM] unsigned char 
 10160 ;;  sign            1   33[COMRAM] unsigned char 
 10161 ;; Return value:  Size  Location     Type
 10162 ;;                  4   21[COMRAM] unsigned char 
 10163 ;; Registers used:
 10164 ;;		wreg, status,2, status,0, prodl, prodh
 10165 ;; Tracked objects:
 10166 ;;		On entry : 0/0
 10167 ;;		On exit  : 0/0
 10168 ;;		Unchanged: 0/0
 10169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10170 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10171 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10172 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10173 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10174 ;;Total ram usage:       25 bytes
 10175 ;; Hardware stack levels used:    1
 10176 ;; Hardware stack levels required when called:    4
 10177 ;; This function calls:
 10178 ;;		Nothing
 10179 ;; This function is called by:
 10180 ;;		_lp_filter
 10181 ;;		_calc_pot
 10182 ;; This function uses a non-reentrant model
 10183 ;;
 10184                           
 10185                           	psect	text64
 10186  002420                     __ptext64:
 10187                           	opt callstack 0
 10188  002420                     ___flmul:
 10189                           	opt callstack 23
 10190                           
 10191                           ;incstack = 0
 10192  002420  5019               	movf	(___flmul@b+3)^0,w,c
 10193  002422  0B80               	andlw	128
 10194  002424  6E22               	movwf	___flmul@sign^0,c
 10195  002426  5019               	movf	(___flmul@b+3)^0,w,c
 10196  002428  2419               	addwf	(___flmul@b+3)^0,w,c
 10197  00242A  6E24               	movwf	___flmul@bexp^0,c
 10198  00242C  BE18               	btfsc	(___flmul@b+2)^0,7,c
 10199  00242E  8024               	bsf	___flmul@bexp^0,0,c
 10200  002430  5024               	movf	___flmul@bexp^0,w,c
 10201  002432  B4D8               	btfsc	status,2,c
 10202  002434  D00D               	goto	l6764
 10203  002436  2824               	incf	___flmul@bexp^0,w,c
 10204  002438  A4D8               	btfss	status,2,c
 10205  00243A  D008               	goto	l6762
 10206  00243C  0E00               	movlw	0
 10207  00243E  6E16               	movwf	___flmul@b^0,c
 10208  002440  0E00               	movlw	0
 10209  002442  6E17               	movwf	(___flmul@b+1)^0,c
 10210  002444  0E00               	movlw	0
 10211  002446  6E18               	movwf	(___flmul@b+2)^0,c
 10212  002448  0E00               	movlw	0
 10213  00244A  6E19               	movwf	(___flmul@b+3)^0,c
 10214  00244C                     l6762:
 10215  00244C  8E18               	bsf	(___flmul@b+2)^0,7,c
 10216  00244E  D008               	goto	l6766
 10217  002450                     l6764:
 10218  002450  0E00               	movlw	0
 10219  002452  6E16               	movwf	___flmul@b^0,c
 10220  002454  0E00               	movlw	0
 10221  002456  6E17               	movwf	(___flmul@b+1)^0,c
 10222  002458  0E00               	movlw	0
 10223  00245A  6E18               	movwf	(___flmul@b+2)^0,c
 10224  00245C  0E00               	movlw	0
 10225  00245E  6E19               	movwf	(___flmul@b+3)^0,c
 10226  002460                     l6766:
 10227  002460  501D               	movf	(___flmul@a+3)^0,w,c
 10228  002462  0B80               	andlw	128
 10229  002464  1A22               	xorwf	___flmul@sign^0,f,c
 10230  002466  501D               	movf	(___flmul@a+3)^0,w,c
 10231  002468  241D               	addwf	(___flmul@a+3)^0,w,c
 10232  00246A  6E23               	movwf	___flmul@aexp^0,c
 10233  00246C  BE1C               	btfsc	(___flmul@a+2)^0,7,c
 10234  00246E  8023               	bsf	___flmul@aexp^0,0,c
 10235  002470  5023               	movf	___flmul@aexp^0,w,c
 10236  002472  B4D8               	btfsc	status,2,c
 10237  002474  D00D               	goto	l6782
 10238  002476  2823               	incf	___flmul@aexp^0,w,c
 10239  002478  A4D8               	btfss	status,2,c
 10240  00247A  D008               	goto	l6780
 10241  00247C  0E00               	movlw	0
 10242  00247E  6E1A               	movwf	___flmul@a^0,c
 10243  002480  0E00               	movlw	0
 10244  002482  6E1B               	movwf	(___flmul@a+1)^0,c
 10245  002484  0E00               	movlw	0
 10246  002486  6E1C               	movwf	(___flmul@a+2)^0,c
 10247  002488  0E00               	movlw	0
 10248  00248A  6E1D               	movwf	(___flmul@a+3)^0,c
 10249  00248C                     l6780:
 10250  00248C  8E1C               	bsf	(___flmul@a+2)^0,7,c
 10251  00248E  D008               	goto	l2044
 10252  002490                     l6782:
 10253  002490  0E00               	movlw	0
 10254  002492  6E1A               	movwf	___flmul@a^0,c
 10255  002494  0E00               	movlw	0
 10256  002496  6E1B               	movwf	(___flmul@a+1)^0,c
 10257  002498  0E00               	movlw	0
 10258  00249A  6E1C               	movwf	(___flmul@a+2)^0,c
 10259  00249C  0E00               	movlw	0
 10260  00249E  6E1D               	movwf	(___flmul@a+3)^0,c
 10261  0024A0                     l2044:
 10262  0024A0  5023               	movf	___flmul@aexp^0,w,c
 10263  0024A2  B4D8               	btfsc	status,2,c
 10264  0024A4  D003               	goto	u7260
 10265  0024A6  5024               	movf	___flmul@bexp^0,w,c
 10266  0024A8  A4D8               	btfss	status,2,c
 10267  0024AA  D009               	goto	l6790
 10268  0024AC                     u7260:
 10269  0024AC  0E00               	movlw	0
 10270  0024AE  6E16               	movwf	?___flmul^0,c
 10271  0024B0  0E00               	movlw	0
 10272  0024B2  6E17               	movwf	(?___flmul+1)^0,c
 10273  0024B4  0E00               	movlw	0
 10274  0024B6  6E18               	movwf	(?___flmul+2)^0,c
 10275  0024B8  0E00               	movlw	0
 10276  0024BA  6E19               	movwf	(?___flmul+3)^0,c
 10277  0024BC  0012               	return	
 10278  0024BE                     l6790:
 10279  0024BE  501C               	movf	(___flmul@a+2)^0,w,c
 10280  0024C0  0216               	mulwf	___flmul@b^0,c
 10281  0024C2  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10282  0024C8  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10283  0024CE  502D               	movf	___flmul@temp^0,w,c
 10284  0024D0  6E25               	movwf	___flmul@grs^0,c
 10285  0024D2  6A26               	clrf	(___flmul@grs+1)^0,c
 10286  0024D4  6A27               	clrf	(___flmul@grs+2)^0,c
 10287  0024D6  6A28               	clrf	(___flmul@grs+3)^0,c
 10288  0024D8  502E               	movf	(___flmul@temp+1)^0,w,c
 10289  0024DA  6E29               	movwf	___flmul@prod^0,c
 10290  0024DC  6A2A               	clrf	(___flmul@prod+1)^0,c
 10291  0024DE  6A2B               	clrf	(___flmul@prod+2)^0,c
 10292  0024E0  6A2C               	clrf	(___flmul@prod+3)^0,c
 10293  0024E2  501B               	movf	(___flmul@a+1)^0,w,c
 10294  0024E4  0217               	mulwf	(___flmul@b+1)^0,c
 10295  0024E6  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10296  0024EC  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10297  0024F2  502D               	movf	___flmul@temp^0,w,c
 10298  0024F4  2625               	addwf	___flmul@grs^0,f,c
 10299  0024F6  0E00               	movlw	0
 10300  0024F8  2226               	addwfc	(___flmul@grs+1)^0,f,c
 10301  0024FA  2227               	addwfc	(___flmul@grs+2)^0,f,c
 10302  0024FC  2228               	addwfc	(___flmul@grs+3)^0,f,c
 10303  0024FE  502E               	movf	(___flmul@temp+1)^0,w,c
 10304  002500  2629               	addwf	___flmul@prod^0,f,c
 10305  002502  0E00               	movlw	0
 10306  002504  222A               	addwfc	(___flmul@prod+1)^0,f,c
 10307  002506  222B               	addwfc	(___flmul@prod+2)^0,f,c
 10308  002508  222C               	addwfc	(___flmul@prod+3)^0,f,c
 10309  00250A  501A               	movf	___flmul@a^0,w,c
 10310  00250C  0218               	mulwf	(___flmul@b+2)^0,c
 10311  00250E  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10312  002514  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10313  00251A  502D               	movf	___flmul@temp^0,w,c
 10314  00251C  2625               	addwf	___flmul@grs^0,f,c
 10315  00251E  0E00               	movlw	0
 10316  002520  2226               	addwfc	(___flmul@grs+1)^0,f,c
 10317  002522  2227               	addwfc	(___flmul@grs+2)^0,f,c
 10318  002524  2228               	addwfc	(___flmul@grs+3)^0,f,c
 10319  002526  502E               	movf	(___flmul@temp+1)^0,w,c
 10320  002528  2629               	addwf	___flmul@prod^0,f,c
 10321  00252A  0E00               	movlw	0
 10322  00252C  222A               	addwfc	(___flmul@prod+1)^0,f,c
 10323  00252E  222B               	addwfc	(___flmul@prod+2)^0,f,c
 10324  002530  222C               	addwfc	(___flmul@prod+3)^0,f,c
 10325  002532  0060  F09C  F028   	movff	___flmul@grs+2,___flmul@grs+3
 10326  002538  0060  F098  F027   	movff	___flmul@grs+1,___flmul@grs+2
 10327  00253E  0060  F094  F026   	movff	___flmul@grs,___flmul@grs+1
 10328  002544  6A25               	clrf	___flmul@grs^0,c
 10329  002546  501A               	movf	___flmul@a^0,w,c
 10330  002548  0217               	mulwf	(___flmul@b+1)^0,c
 10331  00254A  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10332  002550  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10333  002556  502D               	movf	___flmul@temp^0,w,c
 10334  002558  2625               	addwf	___flmul@grs^0,f,c
 10335  00255A  502E               	movf	(___flmul@temp+1)^0,w,c
 10336  00255C  2226               	addwfc	(___flmul@grs+1)^0,f,c
 10337  00255E  0E00               	movlw	0
 10338  002560  2227               	addwfc	(___flmul@grs+2)^0,f,c
 10339  002562  0E00               	movlw	0
 10340  002564  2228               	addwfc	(___flmul@grs+3)^0,f,c
 10341  002566  501B               	movf	(___flmul@a+1)^0,w,c
 10342  002568  0216               	mulwf	___flmul@b^0,c
 10343  00256A  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10344  002570  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10345  002576  502D               	movf	___flmul@temp^0,w,c
 10346  002578  2625               	addwf	___flmul@grs^0,f,c
 10347  00257A  502E               	movf	(___flmul@temp+1)^0,w,c
 10348  00257C  2226               	addwfc	(___flmul@grs+1)^0,f,c
 10349  00257E  0E00               	movlw	0
 10350  002580  2227               	addwfc	(___flmul@grs+2)^0,f,c
 10351  002582  0E00               	movlw	0
 10352  002584  2228               	addwfc	(___flmul@grs+3)^0,f,c
 10353  002586  0060  F09C  F028   	movff	___flmul@grs+2,___flmul@grs+3
 10354  00258C  0060  F098  F027   	movff	___flmul@grs+1,___flmul@grs+2
 10355  002592  0060  F094  F026   	movff	___flmul@grs,___flmul@grs+1
 10356  002598  6A25               	clrf	___flmul@grs^0,c
 10357  00259A  501A               	movf	___flmul@a^0,w,c
 10358  00259C  0216               	mulwf	___flmul@b^0,c
 10359  00259E  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10360  0025A4  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10361  0025AA  502D               	movf	___flmul@temp^0,w,c
 10362  0025AC  2625               	addwf	___flmul@grs^0,f,c
 10363  0025AE  502E               	movf	(___flmul@temp+1)^0,w,c
 10364  0025B0  2226               	addwfc	(___flmul@grs+1)^0,f,c
 10365  0025B2  0E00               	movlw	0
 10366  0025B4  2227               	addwfc	(___flmul@grs+2)^0,f,c
 10367  0025B6  0E00               	movlw	0
 10368  0025B8  2228               	addwfc	(___flmul@grs+3)^0,f,c
 10369  0025BA  501C               	movf	(___flmul@a+2)^0,w,c
 10370  0025BC  0217               	mulwf	(___flmul@b+1)^0,c
 10371  0025BE  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10372  0025C4  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10373  0025CA  502D               	movf	___flmul@temp^0,w,c
 10374  0025CC  2629               	addwf	___flmul@prod^0,f,c
 10375  0025CE  502E               	movf	(___flmul@temp+1)^0,w,c
 10376  0025D0  222A               	addwfc	(___flmul@prod+1)^0,f,c
 10377  0025D2  0E00               	movlw	0
 10378  0025D4  222B               	addwfc	(___flmul@prod+2)^0,f,c
 10379  0025D6  0E00               	movlw	0
 10380  0025D8  222C               	addwfc	(___flmul@prod+3)^0,f,c
 10381  0025DA  501B               	movf	(___flmul@a+1)^0,w,c
 10382  0025DC  0218               	mulwf	(___flmul@b+2)^0,c
 10383  0025DE  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10384  0025E4  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10385  0025EA  502D               	movf	___flmul@temp^0,w,c
 10386  0025EC  2629               	addwf	___flmul@prod^0,f,c
 10387  0025EE  502E               	movf	(___flmul@temp+1)^0,w,c
 10388  0025F0  222A               	addwfc	(___flmul@prod+1)^0,f,c
 10389  0025F2  0E00               	movlw	0
 10390  0025F4  222B               	addwfc	(___flmul@prod+2)^0,f,c
 10391  0025F6  0E00               	movlw	0
 10392  0025F8  222C               	addwfc	(___flmul@prod+3)^0,f,c
 10393  0025FA  501C               	movf	(___flmul@a+2)^0,w,c
 10394  0025FC  0218               	mulwf	(___flmul@b+2)^0,c
 10395  0025FE  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10396  002604  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10397  00260A  502D               	movf	___flmul@temp^0,w,c
 10398  00260C  6E1E               	movwf	??___flmul^0,c
 10399  00260E  502E               	movf	(___flmul@temp+1)^0,w,c
 10400  002610  6E1F               	movwf	(??___flmul+1)^0,c
 10401  002612  6A20               	clrf	(??___flmul+2)^0,c
 10402  002614  6A21               	clrf	(??___flmul+3)^0,c
 10403  002616  0060  F080  F021   	movff	??___flmul+2,??___flmul+3
 10404  00261C  0060  F07C  F020   	movff	??___flmul+1,??___flmul+2
 10405  002622  0060  F078  F01F   	movff	??___flmul,??___flmul+1
 10406  002628  6A1E               	clrf	??___flmul^0,c
 10407  00262A  501E               	movf	??___flmul^0,w,c
 10408  00262C  2629               	addwf	___flmul@prod^0,f,c
 10409  00262E  501F               	movf	(??___flmul+1)^0,w,c
 10410  002630  222A               	addwfc	(___flmul@prod+1)^0,f,c
 10411  002632  5020               	movf	(??___flmul+2)^0,w,c
 10412  002634  222B               	addwfc	(___flmul@prod+2)^0,f,c
 10413  002636  5021               	movf	(??___flmul+3)^0,w,c
 10414  002638  222C               	addwfc	(___flmul@prod+3)^0,f,c
 10415  00263A  5028               	movf	(___flmul@grs+3)^0,w,c
 10416  00263C  2629               	addwf	___flmul@prod^0,f,c
 10417  00263E  0E00               	movlw	0
 10418  002640  222A               	addwfc	(___flmul@prod+1)^0,f,c
 10419  002642  222B               	addwfc	(___flmul@prod+2)^0,f,c
 10420  002644  222C               	addwfc	(___flmul@prod+3)^0,f,c
 10421  002646  0060  F09C  F028   	movff	___flmul@grs+2,___flmul@grs+3
 10422  00264C  0060  F098  F027   	movff	___flmul@grs+1,___flmul@grs+2
 10423  002652  0060  F094  F026   	movff	___flmul@grs,___flmul@grs+1
 10424  002658  6A25               	clrf	___flmul@grs^0,c
 10425  00265A  5023               	movf	___flmul@aexp^0,w,c
 10426  00265C  0060  F090  F01E   	movff	___flmul@bexp,??___flmul
 10427  002662  6A1F               	clrf	(??___flmul+1)^0,c
 10428  002664  261E               	addwf	??___flmul^0,f,c
 10429  002666  0E00               	movlw	0
 10430  002668  221F               	addwfc	(??___flmul+1)^0,f,c
 10431  00266A  0E82               	movlw	130
 10432  00266C  241E               	addwf	??___flmul^0,w,c
 10433  00266E  6E2D               	movwf	___flmul@temp^0,c
 10434  002670  0EFF               	movlw	255
 10435  002672  201F               	addwfc	(??___flmul+1)^0,w,c
 10436  002674  6E2E               	movwf	(___flmul@temp+1)^0,c
 10437  002676  D00F               	goto	l6838
 10438  002678                     l6832:
 10439  002678  90D8               	bcf	status,0,c
 10440  00267A  3629               	rlcf	___flmul@prod^0,f,c
 10441  00267C  362A               	rlcf	(___flmul@prod+1)^0,f,c
 10442  00267E  362B               	rlcf	(___flmul@prod+2)^0,f,c
 10443  002680  362C               	rlcf	(___flmul@prod+3)^0,f,c
 10444  002682  BE28               	btfsc	(___flmul@grs+3)^0,7,c
 10445  002684  8029               	bsf	___flmul@prod^0,0,c
 10446  002686  90D8               	bcf	status,0,c
 10447  002688  3625               	rlcf	___flmul@grs^0,f,c
 10448  00268A  3626               	rlcf	(___flmul@grs+1)^0,f,c
 10449  00268C  3627               	rlcf	(___flmul@grs+2)^0,f,c
 10450  00268E  3628               	rlcf	(___flmul@grs+3)^0,f,c
 10451  002690  062D               	decf	___flmul@temp^0,f,c
 10452  002692  A0D8               	btfss	status,0,c
 10453  002694  062E               	decf	(___flmul@temp+1)^0,f,c
 10454  002696                     l6838:
 10455  002696  AE2B               	btfss	(___flmul@prod+2)^0,7,c
 10456  002698  D7EF               	goto	l6832
 10457  00269A  0E00               	movlw	0
 10458  00269C  6E23               	movwf	___flmul@aexp^0,c
 10459  00269E  AE28               	btfss	(___flmul@grs+3)^0,7,c
 10460  0026A0  D017               	goto	l2053
 10461  0026A2  0EFF               	movlw	255
 10462  0026A4  1425               	andwf	___flmul@grs^0,w,c
 10463  0026A6  6E1E               	movwf	??___flmul^0,c
 10464  0026A8  0EFF               	movlw	255
 10465  0026AA  1426               	andwf	(___flmul@grs+1)^0,w,c
 10466  0026AC  6E1F               	movwf	(??___flmul+1)^0,c
 10467  0026AE  0EFF               	movlw	255
 10468  0026B0  1427               	andwf	(___flmul@grs+2)^0,w,c
 10469  0026B2  6E20               	movwf	(??___flmul+2)^0,c
 10470  0026B4  0E7F               	movlw	127
 10471  0026B6  1428               	andwf	(___flmul@grs+3)^0,w,c
 10472  0026B8  6E21               	movwf	(??___flmul+3)^0,c
 10473  0026BA  501E               	movf	??___flmul^0,w,c
 10474  0026BC  101F               	iorwf	(??___flmul+1)^0,w,c
 10475  0026BE  1020               	iorwf	(??___flmul+2)^0,w,c
 10476  0026C0  1021               	iorwf	(??___flmul+3)^0,w,c
 10477  0026C2  B4D8               	btfsc	status,2,c
 10478  0026C4  D003               	goto	l2054
 10479  0026C6                     u7300:
 10480  0026C6  0E01               	movlw	1
 10481  0026C8  6E23               	movwf	___flmul@aexp^0,c
 10482  0026CA  D002               	goto	l2053
 10483  0026CC                     l2054:
 10484  0026CC  B029               	btfsc	___flmul@prod^0,0,c
 10485  0026CE  D7FB               	goto	u7300
 10486  0026D0                     l2053:
 10487  0026D0  5023               	movf	___flmul@aexp^0,w,c
 10488  0026D2  B4D8               	btfsc	status,2,c
 10489  0026D4  D027               	goto	l6858
 10490  0026D6  0E01               	movlw	1
 10491  0026D8  2629               	addwf	___flmul@prod^0,f,c
 10492  0026DA  0E00               	movlw	0
 10493  0026DC  222A               	addwfc	(___flmul@prod+1)^0,f,c
 10494  0026DE  222B               	addwfc	(___flmul@prod+2)^0,f,c
 10495  0026E0  222C               	addwfc	(___flmul@prod+3)^0,f,c
 10496  0026E2  A02C               	btfss	(___flmul@prod+3)^0,0,c
 10497  0026E4  D01F               	goto	l6858
 10498  0026E6  0060  F0A4  F01E   	movff	___flmul@prod,??___flmul
 10499  0026EC  0060  F0A8  F01F   	movff	___flmul@prod+1,??___flmul+1
 10500  0026F2  0060  F0AC  F020   	movff	___flmul@prod+2,??___flmul+2
 10501  0026F8  0060  F0B0  F021   	movff	___flmul@prod+3,??___flmul+3
 10502  0026FE  3421               	rlcf	(??___flmul+3)^0,w,c
 10503  002700  3221               	rrcf	(??___flmul+3)^0,f,c
 10504  002702  3220               	rrcf	(??___flmul+2)^0,f,c
 10505  002704  321F               	rrcf	(??___flmul+1)^0,f,c
 10506  002706  321E               	rrcf	??___flmul^0,f,c
 10507  002708  0060  F078  F029   	movff	??___flmul,___flmul@prod
 10508  00270E  0060  F07C  F02A   	movff	??___flmul+1,___flmul@prod+1
 10509  002714  0060  F080  F02B   	movff	??___flmul+2,___flmul@prod+2
 10510  00271A  0060  F084  F02C   	movff	??___flmul+3,___flmul@prod+3
 10511  002720  4A2D               	infsnz	___flmul@temp^0,f,c
 10512  002722  2A2E               	incf	(___flmul@temp+1)^0,f,c
 10513  002724                     l6858:
 10514  002724  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
 10515  002726  D00D               	goto	l6862
 10516  002728  502E               	movf	(___flmul@temp+1)^0,w,c
 10517  00272A  E103               	bnz	u7340
 10518  00272C  282D               	incf	___flmul@temp^0,w,c
 10519  00272E  A0D8               	btfss	status,0,c
 10520  002730  D008               	goto	l6862
 10521  002732                     u7340:
 10522  002732  0E00               	movlw	0
 10523  002734  6E29               	movwf	___flmul@prod^0,c
 10524  002736  0E00               	movlw	0
 10525  002738  6E2A               	movwf	(___flmul@prod+1)^0,c
 10526  00273A  0E80               	movlw	128
 10527  00273C  6E2B               	movwf	(___flmul@prod+2)^0,c
 10528  00273E  0E7F               	movlw	127
 10529  002740  D021               	goto	L15
 10530  002742                     l6862:
 10531  002742  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
 10532  002744  D005               	goto	u7350
 10533  002746  502E               	movf	(___flmul@temp+1)^0,w,c
 10534  002748  E10E               	bnz	l2061
 10535  00274A  042D               	decf	___flmul@temp^0,w,c
 10536  00274C  B0D8               	btfsc	status,0,c
 10537  00274E  D00B               	goto	l2061
 10538  002750                     u7350:
 10539  002750  0E00               	movlw	0
 10540  002752  6E29               	movwf	___flmul@prod^0,c
 10541  002754  0E00               	movlw	0
 10542  002756  6E2A               	movwf	(___flmul@prod+1)^0,c
 10543  002758  0E00               	movlw	0
 10544  00275A  6E2B               	movwf	(___flmul@prod+2)^0,c
 10545  00275C  0E00               	movlw	0
 10546  00275E  6E2C               	movwf	(___flmul@prod+3)^0,c
 10547  002760  0E00               	movlw	0
 10548  002762  6E22               	movwf	___flmul@sign^0,c
 10549  002764  D010               	goto	l6874
 10550  002766                     l2061:
 10551  002766  0060  F0B4  F024   	movff	___flmul@temp,___flmul@bexp
 10552  00276C  0EFF               	movlw	255
 10553  00276E  1629               	andwf	___flmul@prod^0,f,c
 10554  002770  0EFF               	movlw	255
 10555  002772  162A               	andwf	(___flmul@prod+1)^0,f,c
 10556  002774  0E7F               	movlw	127
 10557  002776  162B               	andwf	(___flmul@prod+2)^0,f,c
 10558  002778  0E00               	movlw	0
 10559  00277A  162C               	andwf	(___flmul@prod+3)^0,f,c
 10560  00277C  B024               	btfsc	___flmul@bexp^0,0,c
 10561  00277E  8E2B               	bsf	(___flmul@prod+2)^0,7,c
 10562  002780  90D8               	bcf	status,0,c
 10563  002782  3024               	rrcf	___flmul@bexp^0,w,c
 10564  002784                     L15:
 10565  002784  6E2C               	movwf	(___flmul@prod+3)^0,c
 10566  002786                     l6874:
 10567  002786  5022               	movf	___flmul@sign^0,w,c
 10568  002788  122C               	iorwf	(___flmul@prod+3)^0,f,c
 10569  00278A  0060  F0A4  F016   	movff	___flmul@prod,?___flmul
 10570  002790  0060  F0A8  F017   	movff	___flmul@prod+1,?___flmul+1
 10571  002796  0060  F0AC  F018   	movff	___flmul@prod+2,?___flmul+2
 10572  00279C  0060  F0B0  F019   	movff	___flmul@prod+3,?___flmul+3
 10573  0027A2  0012               	return		;funcret
 10574  0027A4                     __end_of___flmul:
 10575                           	opt callstack 0
 10576                           
 10577 ;; *************** function ___fldiv *****************
 10578 ;; Defined at:
 10579 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 10580 ;; Parameters:    Size  Location     Type
 10581 ;;  b               4   54[COMRAM] unsigned char 
 10582 ;;  a               4   58[COMRAM] unsigned char 
 10583 ;; Auto vars:     Size  Location     Type
 10584 ;;  grs             4   73[COMRAM] unsigned long 
 10585 ;;  rem             4   66[COMRAM] unsigned long 
 10586 ;;  new_exp         2   71[COMRAM] short 
 10587 ;;  aexp            1   78[COMRAM] unsigned char 
 10588 ;;  bexp            1   77[COMRAM] unsigned char 
 10589 ;;  sign            1   70[COMRAM] unsigned char 
 10590 ;; Return value:  Size  Location     Type
 10591 ;;                  4   54[COMRAM] unsigned char 
 10592 ;; Registers used:
 10593 ;;		wreg, status,2, status,0
 10594 ;; Tracked objects:
 10595 ;;		On entry : 0/1
 10596 ;;		On exit  : 0/0
 10597 ;;		Unchanged: 0/0
 10598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10599 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10600 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10601 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10602 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10603 ;;Total ram usage:       25 bytes
 10604 ;; Hardware stack levels used:    1
 10605 ;; Hardware stack levels required when called:    4
 10606 ;; This function calls:
 10607 ;;		Nothing
 10608 ;; This function is called by:
 10609 ;;		_main
 10610 ;;		_lp_filter
 10611 ;; This function uses a non-reentrant model
 10612 ;;
 10613                           
 10614                           	psect	text65
 10615  0032FC                     __ptext65:
 10616                           	opt callstack 0
 10617  0032FC                     ___fldiv:
 10618                           	opt callstack 26
 10619                           
 10620                           ;incstack = 0
 10621  0032FC  503A               	movf	(___fldiv@b+3)^0,w,c
 10622  0032FE  0B80               	andlw	128
 10623  003300  6E47               	movwf	___fldiv@sign^0,c
 10624  003302  503A               	movf	(___fldiv@b+3)^0,w,c
 10625  003304  243A               	addwf	(___fldiv@b+3)^0,w,c
 10626  003306  6E4E               	movwf	___fldiv@bexp^0,c
 10627  003308  BE39               	btfsc	(___fldiv@b+2)^0,7,c
 10628  00330A  804E               	bsf	___fldiv@bexp^0,0,c
 10629  00330C  504E               	movf	___fldiv@bexp^0,w,c
 10630  00330E  B4D8               	btfsc	status,2,c
 10631  003310  D00D               	goto	l6628
 10632  003312  284E               	incf	___fldiv@bexp^0,w,c
 10633  003314  A4D8               	btfss	status,2,c
 10634  003316  D008               	goto	l6624
 10635  003318  0E00               	movlw	0
 10636  00331A  6E37               	movwf	___fldiv@b^0,c
 10637  00331C  0E00               	movlw	0
 10638  00331E  6E38               	movwf	(___fldiv@b+1)^0,c
 10639  003320  0E00               	movlw	0
 10640  003322  6E39               	movwf	(___fldiv@b+2)^0,c
 10641  003324  0E00               	movlw	0
 10642  003326  6E3A               	movwf	(___fldiv@b+3)^0,c
 10643  003328                     l6624:
 10644  003328  8E39               	bsf	(___fldiv@b+2)^0,7,c
 10645  00332A  D006               	goto	L16
 10646  00332C                     l6628:
 10647  00332C  0E00               	movlw	0
 10648  00332E  6E37               	movwf	___fldiv@b^0,c
 10649  003330  0E00               	movlw	0
 10650  003332  6E38               	movwf	(___fldiv@b+1)^0,c
 10651  003334  0E00               	movlw	0
 10652  003336  6E39               	movwf	(___fldiv@b+2)^0,c
 10653  003338                     L16:
 10654  003338  0E00               	movlw	0
 10655  00333A  6E3A               	movwf	(___fldiv@b+3)^0,c
 10656  00333C  503E               	movf	(___fldiv@a+3)^0,w,c
 10657  00333E  0B80               	andlw	128
 10658  003340  1A47               	xorwf	___fldiv@sign^0,f,c
 10659  003342  503E               	movf	(___fldiv@a+3)^0,w,c
 10660  003344  243E               	addwf	(___fldiv@a+3)^0,w,c
 10661  003346  6E4F               	movwf	___fldiv@aexp^0,c
 10662  003348  BE3D               	btfsc	(___fldiv@a+2)^0,7,c
 10663  00334A  804F               	bsf	___fldiv@aexp^0,0,c
 10664  00334C  504F               	movf	___fldiv@aexp^0,w,c
 10665  00334E  B4D8               	btfsc	status,2,c
 10666  003350  D00D               	goto	l6648
 10667  003352  284F               	incf	___fldiv@aexp^0,w,c
 10668  003354  A4D8               	btfss	status,2,c
 10669  003356  D008               	goto	l6644
 10670  003358  0E00               	movlw	0
 10671  00335A  6E3B               	movwf	___fldiv@a^0,c
 10672  00335C  0E00               	movlw	0
 10673  00335E  6E3C               	movwf	(___fldiv@a+1)^0,c
 10674  003360  0E00               	movlw	0
 10675  003362  6E3D               	movwf	(___fldiv@a+2)^0,c
 10676  003364  0E00               	movlw	0
 10677  003366  6E3E               	movwf	(___fldiv@a+3)^0,c
 10678  003368                     l6644:
 10679  003368  8E3D               	bsf	(___fldiv@a+2)^0,7,c
 10680  00336A  D006               	goto	L17
 10681  00336C                     l6648:
 10682  00336C  0E00               	movlw	0
 10683  00336E  6E3B               	movwf	___fldiv@a^0,c
 10684  003370  0E00               	movlw	0
 10685  003372  6E3C               	movwf	(___fldiv@a+1)^0,c
 10686  003374  0E00               	movlw	0
 10687  003376  6E3D               	movwf	(___fldiv@a+2)^0,c
 10688  003378                     L17:
 10689  003378  0E00               	movlw	0
 10690  00337A  6E3E               	movwf	(___fldiv@a+3)^0,c
 10691  00337C  503B               	movf	___fldiv@a^0,w,c
 10692  00337E  103C               	iorwf	(___fldiv@a+1)^0,w,c
 10693  003380  103D               	iorwf	(___fldiv@a+2)^0,w,c
 10694  003382  103E               	iorwf	(___fldiv@a+3)^0,w,c
 10695  003384  A4D8               	btfss	status,2,c
 10696  003386  D01B               	goto	l6662
 10697  003388  0E00               	movlw	0
 10698  00338A  6E37               	movwf	___fldiv@b^0,c
 10699  00338C  0E00               	movlw	0
 10700  00338E  6E38               	movwf	(___fldiv@b+1)^0,c
 10701  003390  0E00               	movlw	0
 10702  003392  6E39               	movwf	(___fldiv@b+2)^0,c
 10703  003394  0E00               	movlw	0
 10704  003396  6E3A               	movwf	(___fldiv@b+3)^0,c
 10705  003398  0E80               	movlw	128
 10706  00339A  1239               	iorwf	(___fldiv@b+2)^0,f,c
 10707  00339C  0E7F               	movlw	127
 10708  00339E  123A               	iorwf	(___fldiv@b+3)^0,f,c
 10709  0033A0                     l6656:
 10710  0033A0  5047               	movf	___fldiv@sign^0,w,c
 10711  0033A2  123A               	iorwf	(___fldiv@b+3)^0,f,c
 10712  0033A4  0060  F0DC  F037   	movff	___fldiv@b,?___fldiv
 10713  0033AA  0060  F0E0  F038   	movff	___fldiv@b+1,?___fldiv+1
 10714  0033B0  0060  F0E4  F039   	movff	___fldiv@b+2,?___fldiv+2
 10715  0033B6  0060  F0E8  F03A   	movff	___fldiv@b+3,?___fldiv+3
 10716  0033BC  0012               	return	
 10717  0033BE                     l6662:
 10718  0033BE  504E               	movf	___fldiv@bexp^0,w,c
 10719  0033C0  A4D8               	btfss	status,2,c
 10720  0033C2  D009               	goto	l6670
 10721  0033C4  0E00               	movlw	0
 10722  0033C6  6E37               	movwf	?___fldiv^0,c
 10723  0033C8  0E00               	movlw	0
 10724  0033CA  6E38               	movwf	(?___fldiv+1)^0,c
 10725  0033CC  0E00               	movlw	0
 10726  0033CE  6E39               	movwf	(?___fldiv+2)^0,c
 10727  0033D0  0E00               	movlw	0
 10728  0033D2  6E3A               	movwf	(?___fldiv+3)^0,c
 10729  0033D4  0012               	return	
 10730  0033D6                     l6670:
 10731  0033D6  504F               	movf	___fldiv@aexp^0,w,c
 10732  0033D8  0060  F138  F03F   	movff	___fldiv@bexp,??___fldiv
 10733  0033DE  6A40               	clrf	(??___fldiv+1)^0,c
 10734  0033E0  5E3F               	subwf	??___fldiv^0,f,c
 10735  0033E2  0E00               	movlw	0
 10736  0033E4  5A40               	subwfb	(??___fldiv+1)^0,f,c
 10737  0033E6  0E7F               	movlw	127
 10738  0033E8  243F               	addwf	??___fldiv^0,w,c
 10739  0033EA  6E48               	movwf	___fldiv@new_exp^0,c
 10740  0033EC  0E00               	movlw	0
 10741  0033EE  2040               	addwfc	(??___fldiv+1)^0,w,c
 10742  0033F0  6E49               	movwf	(___fldiv@new_exp+1)^0,c
 10743  0033F2  0060  F0DC  F043   	movff	___fldiv@b,___fldiv@rem
 10744  0033F8  0060  F0E0  F044   	movff	___fldiv@b+1,___fldiv@rem+1
 10745  0033FE  0060  F0E4  F045   	movff	___fldiv@b+2,___fldiv@rem+2
 10746  003404  0060  F0E8  F046   	movff	___fldiv@b+3,___fldiv@rem+3
 10747  00340A  0E00               	movlw	0
 10748  00340C  6E37               	movwf	___fldiv@b^0,c
 10749  00340E  0E00               	movlw	0
 10750  003410  6E38               	movwf	(___fldiv@b+1)^0,c
 10751  003412  0E00               	movlw	0
 10752  003414  6E39               	movwf	(___fldiv@b+2)^0,c
 10753  003416  0E00               	movlw	0
 10754  003418  6E3A               	movwf	(___fldiv@b+3)^0,c
 10755  00341A  0E00               	movlw	0
 10756  00341C  6E4A               	movwf	___fldiv@grs^0,c
 10757  00341E  0E00               	movlw	0
 10758  003420  6E4B               	movwf	(___fldiv@grs+1)^0,c
 10759  003422  0E00               	movlw	0
 10760  003424  6E4C               	movwf	(___fldiv@grs+2)^0,c
 10761  003426  0E00               	movlw	0
 10762  003428  6E4D               	movwf	(___fldiv@grs+3)^0,c
 10763  00342A  0E00               	movlw	0
 10764  00342C  6E4F               	movwf	___fldiv@aexp^0,c
 10765  00342E  D028               	goto	l2014
 10766  003430                     l6680:
 10767  003430  504F               	movf	___fldiv@aexp^0,w,c
 10768  003432  B4D8               	btfsc	status,2,c
 10769  003434  D011               	goto	l6688
 10770  003436  90D8               	bcf	status,0,c
 10771  003438  3643               	rlcf	___fldiv@rem^0,f,c
 10772  00343A  3644               	rlcf	(___fldiv@rem+1)^0,f,c
 10773  00343C  3645               	rlcf	(___fldiv@rem+2)^0,f,c
 10774  00343E  3646               	rlcf	(___fldiv@rem+3)^0,f,c
 10775  003440  90D8               	bcf	status,0,c
 10776  003442  3637               	rlcf	___fldiv@b^0,f,c
 10777  003444  3638               	rlcf	(___fldiv@b+1)^0,f,c
 10778  003446  3639               	rlcf	(___fldiv@b+2)^0,f,c
 10779  003448  363A               	rlcf	(___fldiv@b+3)^0,f,c
 10780  00344A  BE4D               	btfsc	(___fldiv@grs+3)^0,7,c
 10781  00344C  8037               	bsf	___fldiv@b^0,0,c
 10782  00344E  90D8               	bcf	status,0,c
 10783  003450  364A               	rlcf	___fldiv@grs^0,f,c
 10784  003452  364B               	rlcf	(___fldiv@grs+1)^0,f,c
 10785  003454  364C               	rlcf	(___fldiv@grs+2)^0,f,c
 10786  003456  364D               	rlcf	(___fldiv@grs+3)^0,f,c
 10787  003458                     l6688:
 10788  003458  503B               	movf	___fldiv@a^0,w,c
 10789  00345A  5C43               	subwf	___fldiv@rem^0,w,c
 10790  00345C  503C               	movf	(___fldiv@a+1)^0,w,c
 10791  00345E  5844               	subwfb	(___fldiv@rem+1)^0,w,c
 10792  003460  503D               	movf	(___fldiv@a+2)^0,w,c
 10793  003462  5845               	subwfb	(___fldiv@rem+2)^0,w,c
 10794  003464  503E               	movf	(___fldiv@a+3)^0,w,c
 10795  003466  5846               	subwfb	(___fldiv@rem+3)^0,w,c
 10796  003468  A0D8               	btfss	status,0,c
 10797  00346A  D009               	goto	l6694
 10798  00346C  8C4D               	bsf	(___fldiv@grs+3)^0,6,c
 10799  00346E  503B               	movf	___fldiv@a^0,w,c
 10800  003470  5E43               	subwf	___fldiv@rem^0,f,c
 10801  003472  503C               	movf	(___fldiv@a+1)^0,w,c
 10802  003474  5A44               	subwfb	(___fldiv@rem+1)^0,f,c
 10803  003476  503D               	movf	(___fldiv@a+2)^0,w,c
 10804  003478  5A45               	subwfb	(___fldiv@rem+2)^0,f,c
 10805  00347A  503E               	movf	(___fldiv@a+3)^0,w,c
 10806  00347C  5A46               	subwfb	(___fldiv@rem+3)^0,f,c
 10807  00347E                     l6694:
 10808  00347E  2A4F               	incf	___fldiv@aexp^0,f,c
 10809  003480                     l2014:
 10810  003480  0E19               	movlw	25
 10811  003482  644F               	cpfsgt	___fldiv@aexp^0,c
 10812  003484  D7D5               	goto	l6680
 10813  003486  5043               	movf	___fldiv@rem^0,w,c
 10814  003488  1044               	iorwf	(___fldiv@rem+1)^0,w,c
 10815  00348A  1045               	iorwf	(___fldiv@rem+2)^0,w,c
 10816  00348C  1046               	iorwf	(___fldiv@rem+3)^0,w,c
 10817  00348E  B4D8               	btfsc	status,2,c
 10818  003490  D011               	goto	l6706
 10819  003492  804A               	bsf	___fldiv@grs^0,0,c
 10820  003494  D00F               	goto	l6706
 10821  003496                     l6700:
 10822  003496  90D8               	bcf	status,0,c
 10823  003498  3637               	rlcf	___fldiv@b^0,f,c
 10824  00349A  3638               	rlcf	(___fldiv@b+1)^0,f,c
 10825  00349C  3639               	rlcf	(___fldiv@b+2)^0,f,c
 10826  00349E  363A               	rlcf	(___fldiv@b+3)^0,f,c
 10827  0034A0  BE4D               	btfsc	(___fldiv@grs+3)^0,7,c
 10828  0034A2  8037               	bsf	___fldiv@b^0,0,c
 10829  0034A4  90D8               	bcf	status,0,c
 10830  0034A6  364A               	rlcf	___fldiv@grs^0,f,c
 10831  0034A8  364B               	rlcf	(___fldiv@grs+1)^0,f,c
 10832  0034AA  364C               	rlcf	(___fldiv@grs+2)^0,f,c
 10833  0034AC  364D               	rlcf	(___fldiv@grs+3)^0,f,c
 10834  0034AE  0648               	decf	___fldiv@new_exp^0,f,c
 10835  0034B0  A0D8               	btfss	status,0,c
 10836  0034B2  0649               	decf	(___fldiv@new_exp+1)^0,f,c
 10837  0034B4                     l6706:
 10838  0034B4  AE39               	btfss	(___fldiv@b+2)^0,7,c
 10839  0034B6  D7EF               	goto	l6700
 10840  0034B8  0E00               	movlw	0
 10841  0034BA  6E4F               	movwf	___fldiv@aexp^0,c
 10842  0034BC  AE4D               	btfss	(___fldiv@grs+3)^0,7,c
 10843  0034BE  D017               	goto	l2025
 10844  0034C0  0EFF               	movlw	255
 10845  0034C2  144A               	andwf	___fldiv@grs^0,w,c
 10846  0034C4  6E3F               	movwf	??___fldiv^0,c
 10847  0034C6  0EFF               	movlw	255
 10848  0034C8  144B               	andwf	(___fldiv@grs+1)^0,w,c
 10849  0034CA  6E40               	movwf	(??___fldiv+1)^0,c
 10850  0034CC  0EFF               	movlw	255
 10851  0034CE  144C               	andwf	(___fldiv@grs+2)^0,w,c
 10852  0034D0  6E41               	movwf	(??___fldiv+2)^0,c
 10853  0034D2  0E7F               	movlw	127
 10854  0034D4  144D               	andwf	(___fldiv@grs+3)^0,w,c
 10855  0034D6  6E42               	movwf	(??___fldiv+3)^0,c
 10856  0034D8  503F               	movf	??___fldiv^0,w,c
 10857  0034DA  1040               	iorwf	(??___fldiv+1)^0,w,c
 10858  0034DC  1041               	iorwf	(??___fldiv+2)^0,w,c
 10859  0034DE  1042               	iorwf	(??___fldiv+3)^0,w,c
 10860  0034E0  B4D8               	btfsc	status,2,c
 10861  0034E2  D003               	goto	l2026
 10862  0034E4                     u7120:
 10863  0034E4  0E01               	movlw	1
 10864  0034E6  6E4F               	movwf	___fldiv@aexp^0,c
 10865  0034E8  D002               	goto	l2025
 10866  0034EA                     l2026:
 10867  0034EA  B037               	btfsc	___fldiv@b^0,0,c
 10868  0034EC  D7FB               	goto	u7120
 10869  0034EE                     l2025:
 10870  0034EE  504F               	movf	___fldiv@aexp^0,w,c
 10871  0034F0  B4D8               	btfsc	status,2,c
 10872  0034F2  D027               	goto	l6726
 10873  0034F4  0E01               	movlw	1
 10874  0034F6  2637               	addwf	___fldiv@b^0,f,c
 10875  0034F8  0E00               	movlw	0
 10876  0034FA  2238               	addwfc	(___fldiv@b+1)^0,f,c
 10877  0034FC  2239               	addwfc	(___fldiv@b+2)^0,f,c
 10878  0034FE  223A               	addwfc	(___fldiv@b+3)^0,f,c
 10879  003500  A03A               	btfss	(___fldiv@b+3)^0,0,c
 10880  003502  D01F               	goto	l6726
 10881  003504  0060  F0DC  F03F   	movff	___fldiv@b,??___fldiv
 10882  00350A  0060  F0E0  F040   	movff	___fldiv@b+1,??___fldiv+1
 10883  003510  0060  F0E4  F041   	movff	___fldiv@b+2,??___fldiv+2
 10884  003516  0060  F0E8  F042   	movff	___fldiv@b+3,??___fldiv+3
 10885  00351C  3442               	rlcf	(??___fldiv+3)^0,w,c
 10886  00351E  3242               	rrcf	(??___fldiv+3)^0,f,c
 10887  003520  3241               	rrcf	(??___fldiv+2)^0,f,c
 10888  003522  3240               	rrcf	(??___fldiv+1)^0,f,c
 10889  003524  323F               	rrcf	??___fldiv^0,f,c
 10890  003526  0060  F0FC  F037   	movff	??___fldiv,___fldiv@b
 10891  00352C  0060  F100  F038   	movff	??___fldiv+1,___fldiv@b+1
 10892  003532  0060  F104  F039   	movff	??___fldiv+2,___fldiv@b+2
 10893  003538  0060  F108  F03A   	movff	??___fldiv+3,___fldiv@b+3
 10894  00353E  4A48               	infsnz	___fldiv@new_exp^0,f,c
 10895  003540  2A49               	incf	(___fldiv@new_exp+1)^0,f,c
 10896  003542                     l6726:
 10897  003542  BE49               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10898  003544  D010               	goto	l6730
 10899  003546  5049               	movf	(___fldiv@new_exp+1)^0,w,c
 10900  003548  E103               	bnz	u7160
 10901  00354A  2848               	incf	___fldiv@new_exp^0,w,c
 10902  00354C  A0D8               	btfss	status,0,c
 10903  00354E  D00B               	goto	l6730
 10904  003550                     u7160:
 10905  003550  0E00               	movlw	0
 10906  003552  6E49               	movwf	(___fldiv@new_exp+1)^0,c
 10907  003554  6848               	setf	___fldiv@new_exp^0,c
 10908  003556  0E00               	movlw	0
 10909  003558  6E37               	movwf	___fldiv@b^0,c
 10910  00355A  0E00               	movlw	0
 10911  00355C  6E38               	movwf	(___fldiv@b+1)^0,c
 10912  00355E  0E00               	movlw	0
 10913  003560  6E39               	movwf	(___fldiv@b+2)^0,c
 10914  003562  0E00               	movlw	0
 10915  003564  6E3A               	movwf	(___fldiv@b+3)^0,c
 10916  003566                     l6730:
 10917  003566  BE49               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10918  003568  D005               	goto	u7170
 10919  00356A  5049               	movf	(___fldiv@new_exp+1)^0,w,c
 10920  00356C  E111               	bnz	l6734
 10921  00356E  0448               	decf	___fldiv@new_exp^0,w,c
 10922  003570  B0D8               	btfsc	status,0,c
 10923  003572  D00E               	goto	l6734
 10924  003574                     u7170:
 10925  003574  0E00               	movlw	0
 10926  003576  6E49               	movwf	(___fldiv@new_exp+1)^0,c
 10927  003578  0E00               	movlw	0
 10928  00357A  6E48               	movwf	___fldiv@new_exp^0,c
 10929  00357C  0E00               	movlw	0
 10930  00357E  6E37               	movwf	___fldiv@b^0,c
 10931  003580  0E00               	movlw	0
 10932  003582  6E38               	movwf	(___fldiv@b+1)^0,c
 10933  003584  0E00               	movlw	0
 10934  003586  6E39               	movwf	(___fldiv@b+2)^0,c
 10935  003588  0E00               	movlw	0
 10936  00358A  6E3A               	movwf	(___fldiv@b+3)^0,c
 10937  00358C  0E00               	movlw	0
 10938  00358E  6E47               	movwf	___fldiv@sign^0,c
 10939  003590                     l6734:
 10940  003590  0060  F120  F04E   	movff	___fldiv@new_exp,___fldiv@bexp
 10941  003596  A04E               	btfss	___fldiv@bexp^0,0,c
 10942  003598  D002               	goto	l6740
 10943  00359A  8E39               	bsf	(___fldiv@b+2)^0,7,c
 10944  00359C  D001               	goto	l6742
 10945  00359E                     l6740:
 10946  00359E  9E39               	bcf	(___fldiv@b+2)^0,7,c
 10947  0035A0                     l6742:
 10948  0035A0  90D8               	bcf	status,0,c
 10949  0035A2  304E               	rrcf	___fldiv@bexp^0,w,c
 10950  0035A4  6E3A               	movwf	(___fldiv@b+3)^0,c
 10951  0035A6  D6FC               	goto	l6656
 10952  0035A8                     __end_of___fldiv:
 10953                           	opt callstack 0
 10954                           
 10955 ;; *************** function ___xxtofl *****************
 10956 ;; Defined at:
 10957 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 10958 ;; Parameters:    Size  Location     Type
 10959 ;;  sign            1    wreg     unsigned char 
 10960 ;;  val             4    5[COMRAM] long 
 10961 ;; Auto vars:     Size  Location     Type
 10962 ;;  sign            1   13[COMRAM] unsigned char 
 10963 ;;  arg             4   15[COMRAM] unsigned long 
 10964 ;;  exp             1   14[COMRAM] unsigned char 
 10965 ;; Return value:  Size  Location     Type
 10966 ;;                  4    5[COMRAM] unsigned char 
 10967 ;; Registers used:
 10968 ;;		wreg, status,2, status,0
 10969 ;; Tracked objects:
 10970 ;;		On entry : 3E/1
 10971 ;;		On exit  : 0/0
 10972 ;;		Unchanged: 0/0
 10973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10974 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10975 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10976 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10977 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10978 ;;Total ram usage:       14 bytes
 10979 ;; Hardware stack levels used:    1
 10980 ;; Hardware stack levels required when called:    4
 10981 ;; This function calls:
 10982 ;;		Nothing
 10983 ;; This function is called by:
 10984 ;;		_main
 10985 ;;		_calc_pot
 10986 ;; This function uses a non-reentrant model
 10987 ;;
 10988                           
 10989                           	psect	text66
 10990  003B5A                     __ptext66:
 10991                           	opt callstack 0
 10992  003B5A                     ___xxtofl:
 10993                           	opt callstack 26
 10994                           
 10995                           ;incstack = 0
 10996                           ;___xxtofl@sign stored from wreg
 10997  003B5A  6E0E               	movwf	___xxtofl@sign^0,c
 10998  003B5C  500E               	movf	___xxtofl@sign^0,w,c
 10999  003B5E  A4D8               	btfss	status,2,c
 11000  003B60  AE09               	btfss	(___xxtofl@val+3)^0,7,c
 11001  003B62  D022               	goto	l2085
 11002  003B64  0060  F018  F00A   	movff	___xxtofl@val,??___xxtofl
 11003  003B6A  0060  F01C  F00B   	movff	___xxtofl@val+1,??___xxtofl+1
 11004  003B70  0060  F020  F00C   	movff	___xxtofl@val+2,??___xxtofl+2
 11005  003B76  0060  F024  F00D   	movff	___xxtofl@val+3,??___xxtofl+3
 11006  003B7C  1E0A               	comf	??___xxtofl^0,f,c
 11007  003B7E  1E0B               	comf	(??___xxtofl+1)^0,f,c
 11008  003B80  1E0C               	comf	(??___xxtofl+2)^0,f,c
 11009  003B82  1E0D               	comf	(??___xxtofl+3)^0,f,c
 11010  003B84  2A0A               	incf	??___xxtofl^0,f,c
 11011  003B86  0E00               	movlw	0
 11012  003B88  220B               	addwfc	(??___xxtofl+1)^0,f,c
 11013  003B8A  220C               	addwfc	(??___xxtofl+2)^0,f,c
 11014  003B8C  220D               	addwfc	(??___xxtofl+3)^0,f,c
 11015  003B8E  0060  F028  F010   	movff	??___xxtofl,___xxtofl@arg
 11016  003B94  0060  F02C  F011   	movff	??___xxtofl+1,___xxtofl@arg+1
 11017  003B9A  0060  F030  F012   	movff	??___xxtofl+2,___xxtofl@arg+2
 11018  003BA0  0060  F034  F013   	movff	??___xxtofl+3,___xxtofl@arg+3
 11019  003BA6  D00C               	goto	l7036
 11020  003BA8                     l2085:
 11021  003BA8  0060  F018  F010   	movff	___xxtofl@val,___xxtofl@arg
 11022  003BAE  0060  F01C  F011   	movff	___xxtofl@val+1,___xxtofl@arg+1
 11023  003BB4  0060  F020  F012   	movff	___xxtofl@val+2,___xxtofl@arg+2
 11024  003BBA  0060  F024  F013   	movff	___xxtofl@val+3,___xxtofl@arg+3
 11025  003BC0                     l7036:
 11026  003BC0  5006               	movf	___xxtofl@val^0,w,c
 11027  003BC2  1007               	iorwf	(___xxtofl@val+1)^0,w,c
 11028  003BC4  1008               	iorwf	(___xxtofl@val+2)^0,w,c
 11029  003BC6  1009               	iorwf	(___xxtofl@val+3)^0,w,c
 11030  003BC8  A4D8               	btfss	status,2,c
 11031  003BCA  D009               	goto	l7042
 11032  003BCC  0E00               	movlw	0
 11033  003BCE  6E06               	movwf	?___xxtofl^0,c
 11034  003BD0  0E00               	movlw	0
 11035  003BD2  6E07               	movwf	(?___xxtofl+1)^0,c
 11036  003BD4  0E00               	movlw	0
 11037  003BD6  6E08               	movwf	(?___xxtofl+2)^0,c
 11038  003BD8  0E00               	movlw	0
 11039  003BDA  6E09               	movwf	(?___xxtofl+3)^0,c
 11040  003BDC  0012               	return	
 11041  003BDE                     l7042:
 11042  003BDE  0E96               	movlw	150
 11043  003BE0  6E0F               	movwf	___xxtofl@exp^0,c
 11044  003BE2  D006               	goto	l7046
 11045  003BE4                     l7044:
 11046  003BE4  2A0F               	incf	___xxtofl@exp^0,f,c
 11047  003BE6  90D8               	bcf	status,0,c
 11048  003BE8  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
 11049  003BEA  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
 11050  003BEC  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
 11051  003BEE  3210               	rrcf	___xxtofl@arg^0,f,c
 11052  003BF0                     l7046:
 11053  003BF0  0E00               	movlw	0
 11054  003BF2  1410               	andwf	___xxtofl@arg^0,w,c
 11055  003BF4  6E0A               	movwf	??___xxtofl^0,c
 11056  003BF6  0E00               	movlw	0
 11057  003BF8  1411               	andwf	(___xxtofl@arg+1)^0,w,c
 11058  003BFA  6E0B               	movwf	(??___xxtofl+1)^0,c
 11059  003BFC  0E00               	movlw	0
 11060  003BFE  1412               	andwf	(___xxtofl@arg+2)^0,w,c
 11061  003C00  6E0C               	movwf	(??___xxtofl+2)^0,c
 11062  003C02  0EFE               	movlw	254
 11063  003C04  1413               	andwf	(___xxtofl@arg+3)^0,w,c
 11064  003C06  6E0D               	movwf	(??___xxtofl+3)^0,c
 11065  003C08  500A               	movf	??___xxtofl^0,w,c
 11066  003C0A  100B               	iorwf	(??___xxtofl+1)^0,w,c
 11067  003C0C  100C               	iorwf	(??___xxtofl+2)^0,w,c
 11068  003C0E  100D               	iorwf	(??___xxtofl+3)^0,w,c
 11069  003C10  B4D8               	btfsc	status,2,c
 11070  003C12  D00D               	goto	l2092
 11071  003C14  D7E7               	goto	l7044
 11072  003C16                     l7048:
 11073  003C16  2A0F               	incf	___xxtofl@exp^0,f,c
 11074  003C18  0E01               	movlw	1
 11075  003C1A  2610               	addwf	___xxtofl@arg^0,f,c
 11076  003C1C  0E00               	movlw	0
 11077  003C1E  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
 11078  003C20  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
 11079  003C22  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
 11080  003C24  90D8               	bcf	status,0,c
 11081  003C26  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
 11082  003C28  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
 11083  003C2A  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
 11084  003C2C  3210               	rrcf	___xxtofl@arg^0,f,c
 11085  003C2E                     l2092:
 11086  003C2E  0E00               	movlw	0
 11087  003C30  1410               	andwf	___xxtofl@arg^0,w,c
 11088  003C32  6E0A               	movwf	??___xxtofl^0,c
 11089  003C34  0E00               	movlw	0
 11090  003C36  1411               	andwf	(___xxtofl@arg+1)^0,w,c
 11091  003C38  6E0B               	movwf	(??___xxtofl+1)^0,c
 11092  003C3A  0E00               	movlw	0
 11093  003C3C  1412               	andwf	(___xxtofl@arg+2)^0,w,c
 11094  003C3E  6E0C               	movwf	(??___xxtofl+2)^0,c
 11095  003C40  0EFF               	movlw	255
 11096  003C42  1413               	andwf	(___xxtofl@arg+3)^0,w,c
 11097  003C44  6E0D               	movwf	(??___xxtofl+3)^0,c
 11098  003C46  500A               	movf	??___xxtofl^0,w,c
 11099  003C48  100B               	iorwf	(??___xxtofl+1)^0,w,c
 11100  003C4A  100C               	iorwf	(??___xxtofl+2)^0,w,c
 11101  003C4C  100D               	iorwf	(??___xxtofl+3)^0,w,c
 11102  003C4E  B4D8               	btfsc	status,2,c
 11103  003C50  D007               	goto	l7056
 11104  003C52  D7E1               	goto	l7048
 11105  003C54                     l7054:
 11106  003C54  060F               	decf	___xxtofl@exp^0,f,c
 11107  003C56  90D8               	bcf	status,0,c
 11108  003C58  3610               	rlcf	___xxtofl@arg^0,f,c
 11109  003C5A  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
 11110  003C5C  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
 11111  003C5E  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
 11112  003C60                     l7056:
 11113  003C60  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
 11114  003C62  D003               	goto	u7570
 11115  003C64  0E02               	movlw	2
 11116  003C66  600F               	cpfslt	___xxtofl@exp^0,c
 11117  003C68  D7F5               	goto	l7054
 11118  003C6A                     u7570:
 11119  003C6A  A00F               	btfss	___xxtofl@exp^0,0,c
 11120  003C6C  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
 11121  003C6E  90D8               	bcf	status,0,c
 11122  003C70  320F               	rrcf	___xxtofl@exp^0,f,c
 11123  003C72  0060  F03C  F00A   	movff	___xxtofl@exp,??___xxtofl
 11124  003C78  6A0B               	clrf	(??___xxtofl+1)^0,c
 11125  003C7A  6A0C               	clrf	(??___xxtofl+2)^0,c
 11126  003C7C  6A0D               	clrf	(??___xxtofl+3)^0,c
 11127  003C7E  0060  F028  F00D   	movff	??___xxtofl,??___xxtofl+3
 11128  003C84  6A0C               	clrf	(??___xxtofl+2)^0,c
 11129  003C86  6A0B               	clrf	(??___xxtofl+1)^0,c
 11130  003C88  6A0A               	clrf	??___xxtofl^0,c
 11131  003C8A  500A               	movf	??___xxtofl^0,w,c
 11132  003C8C  1210               	iorwf	___xxtofl@arg^0,f,c
 11133  003C8E  500B               	movf	(??___xxtofl+1)^0,w,c
 11134  003C90  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
 11135  003C92  500C               	movf	(??___xxtofl+2)^0,w,c
 11136  003C94  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
 11137  003C96  500D               	movf	(??___xxtofl+3)^0,w,c
 11138  003C98  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
 11139  003C9A  500E               	movf	___xxtofl@sign^0,w,c
 11140  003C9C  A4D8               	btfss	status,2,c
 11141  003C9E  AE09               	btfss	(___xxtofl@val+3)^0,7,c
 11142  003CA0  D001               	goto	l7072
 11143  003CA2  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
 11144  003CA4                     l7072:
 11145  003CA4  0060  F040  F006   	movff	___xxtofl@arg,?___xxtofl
 11146  003CAA  0060  F044  F007   	movff	___xxtofl@arg+1,?___xxtofl+1
 11147  003CB0  0060  F048  F008   	movff	___xxtofl@arg+2,?___xxtofl+2
 11148  003CB6  0060  F04C  F009   	movff	___xxtofl@arg+3,?___xxtofl+3
 11149  003CBC  0012               	return		;funcret
 11150  003CBE                     __end_of___xxtofl:
 11151                           	opt callstack 0
 11152                           
 11153 ;; *************** function ___fltol *****************
 11154 ;; Defined at:
 11155 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 11156 ;; Parameters:    Size  Location     Type
 11157 ;;  f1              4   20[BANK0 ] unsigned char 
 11158 ;; Auto vars:     Size  Location     Type
 11159 ;;  exp1            1   25[BANK0 ] unsigned char 
 11160 ;;  sign1           1   24[BANK0 ] unsigned char 
 11161 ;; Return value:  Size  Location     Type
 11162 ;;                  4   20[BANK0 ] long 
 11163 ;; Registers used:
 11164 ;;		wreg, status,2, status,0
 11165 ;; Tracked objects:
 11166 ;;		On entry : 0/0
 11167 ;;		On exit  : 3F/0
 11168 ;;		Unchanged: 0/0
 11169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11170 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11171 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11172 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11173 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11174 ;;Total ram usage:       10 bytes
 11175 ;; Hardware stack levels used:    1
 11176 ;; Hardware stack levels required when called:    4
 11177 ;; This function calls:
 11178 ;;		Nothing
 11179 ;; This function is called by:
 11180 ;;		_calc_pot
 11181 ;; This function uses a non-reentrant model
 11182 ;;
 11183                           
 11184                           	psect	text67
 11185  004274                     __ptext67:
 11186                           	opt callstack 0
 11187  004274                     ___fltol:
 11188                           	opt callstack 24
 11189                           
 11190                           ;incstack = 0
 11191  004274  0100               	movlb	0	; () banked
 11192  004276  3576               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11193  004278  3577               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11194  00427A  6F79               	movwf	___fltol@exp1& (0+255),b
 11195  00427C  5179               	movf	___fltol@exp1& (0+255),w,b
 11196  00427E  A4D8               	btfss	status,2,c
 11197  004280  D009               	goto	l6992
 11198  004282                     u7440:
 11199                           
 11200                           ; BSR set to: 0
 11201  004282  0E00               	movlw	0
 11202  004284  6F74               	movwf	?___fltol& (0+255),b
 11203  004286  0E00               	movlw	0
 11204  004288  6F75               	movwf	(?___fltol+1)& (0+255),b
 11205  00428A  0E00               	movlw	0
 11206  00428C  6F76               	movwf	(?___fltol+2)& (0+255),b
 11207  00428E  0E00               	movlw	0
 11208  004290  6F77               	movwf	(?___fltol+3)& (0+255),b
 11209  004292  0012               	return	
 11210  004294                     l6992:
 11211                           
 11212                           ; BSR set to: 0
 11213  004294  0060  F1D0  F052   	movff	___fltol@f1,??___fltol
 11214  00429A  0060  F1D4  F053   	movff	___fltol@f1+1,??___fltol+1
 11215  0042A0  0060  F1D8  F054   	movff	___fltol@f1+2,??___fltol+2
 11216  0042A6  0060  F1DC  F055   	movff	___fltol@f1+3,??___fltol+3
 11217  0042AC  0E20               	movlw	32
 11218  0042AE  D005               	goto	u7450
 11219  0042B0                     u7455:
 11220  0042B0  90D8               	bcf	status,0,c
 11221  0042B2  3255               	rrcf	(??___fltol+3)^0,f,c
 11222  0042B4  3254               	rrcf	(??___fltol+2)^0,f,c
 11223  0042B6  3253               	rrcf	(??___fltol+1)^0,f,c
 11224  0042B8  3252               	rrcf	??___fltol^0,f,c
 11225  0042BA                     u7450:
 11226  0042BA  2EE8               	decfsz	wreg,f,c
 11227  0042BC  D7F9               	goto	u7455
 11228  0042BE  5052               	movf	??___fltol^0,w,c
 11229  0042C0  6F78               	movwf	___fltol@sign1& (0+255),b
 11230                           
 11231                           ; BSR set to: 0
 11232  0042C2  8F76               	bsf	(___fltol@f1+2)& (0+255),7,b
 11233                           
 11234                           ; BSR set to: 0
 11235  0042C4  0EFF               	movlw	255
 11236  0042C6  1774               	andwf	___fltol@f1& (0+255),f,b
 11237  0042C8  0EFF               	movlw	255
 11238  0042CA  1775               	andwf	(___fltol@f1+1)& (0+255),f,b
 11239  0042CC  0EFF               	movlw	255
 11240  0042CE  1776               	andwf	(___fltol@f1+2)& (0+255),f,b
 11241  0042D0  0E00               	movlw	0
 11242  0042D2  1777               	andwf	(___fltol@f1+3)& (0+255),f,b
 11243                           
 11244                           ; BSR set to: 0
 11245  0042D4  0E96               	movlw	150
 11246  0042D6  5F79               	subwf	___fltol@exp1& (0+255),f,b
 11247                           
 11248                           ; BSR set to: 0
 11249  0042D8  AF79               	btfss	___fltol@exp1& (0+255),7,b
 11250  0042DA  D00D               	goto	l7012
 11251                           
 11252                           ; BSR set to: 0
 11253  0042DC  5179               	movf	___fltol@exp1& (0+255),w,b
 11254  0042DE  0A80               	xorlw	128
 11255  0042E0  0F97               	addlw	151
 11256  0042E2  A0D8               	btfss	status,0,c
 11257  0042E4  D7CE               	goto	u7440
 11258  0042E6                     l7008:
 11259                           
 11260                           ; BSR set to: 0
 11261  0042E6  90D8               	bcf	status,0,c
 11262  0042E8  3377               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11263  0042EA  3376               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11264  0042EC  3375               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11265  0042EE  3374               	rrcf	___fltol@f1& (0+255),f,b
 11266                           
 11267                           ; BSR set to: 0
 11268  0042F0  3F79               	incfsz	___fltol@exp1& (0+255),f,b
 11269  0042F2  D7F9               	goto	l7008
 11270  0042F4  D00D               	goto	u7490
 11271  0042F6                     l7012:
 11272                           
 11273                           ; BSR set to: 0
 11274  0042F6  0E1F               	movlw	31
 11275  0042F8  6579               	cpfsgt	___fltol@exp1& (0+255),b
 11276  0042FA  D007               	goto	l7020
 11277  0042FC  D7C2               	goto	u7440
 11278  0042FE                     l7018:
 11279                           
 11280                           ; BSR set to: 0
 11281  0042FE  90D8               	bcf	status,0,c
 11282  004300  3774               	rlcf	___fltol@f1& (0+255),f,b
 11283  004302  3775               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11284  004304  3776               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11285  004306  3777               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11286  004308  0779               	decf	___fltol@exp1& (0+255),f,b
 11287  00430A                     l7020:
 11288                           
 11289                           ; BSR set to: 0
 11290  00430A  5179               	movf	___fltol@exp1& (0+255),w,b
 11291  00430C  A4D8               	btfss	status,2,c
 11292  00430E  D7F7               	goto	l7018
 11293  004310                     u7490:
 11294                           
 11295                           ; BSR set to: 0
 11296  004310  5178               	movf	___fltol@sign1& (0+255),w,b
 11297  004312  B4D8               	btfsc	status,2,c
 11298  004314  D008               	goto	l7026
 11299                           
 11300                           ; BSR set to: 0
 11301  004316  1F77               	comf	(___fltol@f1+3)& (0+255),f,b
 11302  004318  1F76               	comf	(___fltol@f1+2)& (0+255),f,b
 11303  00431A  1F75               	comf	(___fltol@f1+1)& (0+255),f,b
 11304  00431C  6D74               	negf	___fltol@f1& (0+255),b
 11305  00431E  0E00               	movlw	0
 11306  004320  2375               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11307  004322  2376               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11308  004324  2377               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11309  004326                     l7026:
 11310                           
 11311                           ; BSR set to: 0
 11312  004326  0060  F1D0  F074   	movff	___fltol@f1,?___fltol
 11313  00432C  0060  F1D4  F075   	movff	___fltol@f1+1,?___fltol+1
 11314  004332  0060  F1D8  F076   	movff	___fltol@f1+2,?___fltol+2
 11315  004338  0060  F1DC  F077   	movff	___fltol@f1+3,?___fltol+3
 11316                           
 11317                           ; BSR set to: 0
 11318  00433E  0012               	return		;funcret
 11319  004340                     __end_of___fltol:
 11320                           	opt callstack 0
 11321                           
 11322 ;; *************** function _UART2_is_rx_ready *****************
 11323 ;; Defined at:
 11324 ;;		line 152 in file "mcc_generated_files/uart2.c"
 11325 ;; Parameters:    Size  Location     Type
 11326 ;;		None
 11327 ;; Auto vars:     Size  Location     Type
 11328 ;;		None
 11329 ;; Return value:  Size  Location     Type
 11330 ;;                  1    wreg      unsigned char 
 11331 ;; Registers used:
 11332 ;;		wreg, status,2
 11333 ;; Tracked objects:
 11334 ;;		On entry : 0/1
 11335 ;;		On exit  : 3F/0
 11336 ;;		Unchanged: 0/0
 11337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11342 ;;Total ram usage:        0 bytes
 11343 ;; Hardware stack levels used:    1
 11344 ;; Hardware stack levels required when called:    4
 11345 ;; This function calls:
 11346 ;;		Nothing
 11347 ;; This function is called by:
 11348 ;;		_Digital232_init
 11349 ;;		_Digital232_RW
 11350 ;; This function uses a non-reentrant model
 11351 ;;
 11352                           
 11353                           	psect	text68
 11354  0054E0                     __ptext68:
 11355                           	opt callstack 0
 11356  0054E0                     _UART2_is_rx_ready:
 11357                           	opt callstack 25
 11358                           
 11359                           ;mcc_generated_files/uart2.c: 154:     return uart2RxCount;
 11360                           
 11361                           ; BSR set to: 0
 11362                           ;incstack = 0
 11363  0054E0  0100               	movlb	0	; () banked
 11364  0054E2  51A3               	movf	_uart2RxCount& (0+255),w,b	;volatile
 11365                           
 11366                           ; BSR set to: 0
 11367  0054E4  0012               	return		;funcret
 11368  0054E6                     __end_of_UART2_is_rx_ready:
 11369                           	opt callstack 0
 11370                           
 11371 ;; *************** function _UART2_Read *****************
 11372 ;; Defined at:
 11373 ;;		line 171 in file "mcc_generated_files/uart2.c"
 11374 ;; Parameters:    Size  Location     Type
 11375 ;;		None
 11376 ;; Auto vars:     Size  Location     Type
 11377 ;;  readValue       1    5[COMRAM] unsigned char 
 11378 ;; Return value:  Size  Location     Type
 11379 ;;                  1    wreg      unsigned char 
 11380 ;; Registers used:
 11381 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11382 ;; Tracked objects:
 11383 ;;		On entry : 3F/0
 11384 ;;		On exit  : 3F/39
 11385 ;;		Unchanged: 0/0
 11386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11388 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11390 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11391 ;;Total ram usage:        1 bytes
 11392 ;; Hardware stack levels used:    1
 11393 ;; Hardware stack levels required when called:    4
 11394 ;; This function calls:
 11395 ;;		Nothing
 11396 ;; This function is called by:
 11397 ;;		_Digital232_init
 11398 ;;		_Digital232_RW
 11399 ;; This function uses a non-reentrant model
 11400 ;;
 11401                           
 11402                           	psect	text69
 11403  004D30                     __ptext69:
 11404                           	opt callstack 0
 11405  004D30                     _UART2_Read:
 11406                           	opt callstack 25
 11407                           
 11408                           ; BSR set to: 0
 11409                           ;mcc_generated_files/uart2.c: 175:     while(0 == uart2RxCount)
 11410                           
 11411                           ; BSR set to: 0
 11412                           ;mcc_generated_files/uart2.c: 175:     while(0 == uart2RxCount)
 11413                           
 11414                           ; BSR set to: 0
 11415                           ;incstack = 0
 11416  004D30  51A3               	movf	_uart2RxCount& (0+255),w,b	;volatile
 11417  004D32  B4D8               	btfsc	status,2,c
 11418  004D34  D7FD               	goto	_UART2_Read
 11419                           
 11420                           ; BSR set to: 0
 11421                           ;mcc_generated_files/uart2.c: 179:     uart2RxLastError = uart2RxStatusBuffer[uart2RxTai
      +                          l];
 11422  004D36  0E32               	movlw	low _uart2RxStatusBuffer
 11423  004D38  2458               	addwf	_uart2RxTail^0,w,c	;volatile
 11424  004D3A  6ED9               	movwf	fsr2l,c
 11425  004D3C  6ADA               	clrf	fsr2h,c
 11426  004D3E  0E01               	movlw	high _uart2RxStatusBuffer
 11427  004D40  22DA               	addwfc	fsr2h,f,c
 11428  004D42  50DF               	movf	indf2,w,c
 11429  004D44  0101               	movlb	1	; () banked
 11430  004D46  6F94               	movwf	_uart2RxLastError& (0+255),b	;volatile
 11431                           
 11432                           ;mcc_generated_files/uart2.c: 181:     readValue = uart2RxBuffer[uart2RxTail++];
 11433  004D48  0E3A               	movlw	low _uart2RxBuffer
 11434  004D4A  2458               	addwf	_uart2RxTail^0,w,c	;volatile
 11435  004D4C  6ED9               	movwf	fsr2l,c
 11436  004D4E  6ADA               	clrf	fsr2h,c
 11437  004D50  0E01               	movlw	high _uart2RxBuffer
 11438  004D52  22DA               	addwfc	fsr2h,f,c
 11439  004D54  50DF               	movf	indf2,w,c
 11440  004D56  6E06               	movwf	UART2_Read@readValue^0,c
 11441                           
 11442                           ; BSR set to: 1
 11443  004D58  2A58               	incf	_uart2RxTail^0,f,c	;volatile
 11444                           
 11445                           ; BSR set to: 1
 11446                           ;mcc_generated_files/uart2.c: 182:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
 11447  004D5A  0E07               	movlw	7
 11448  004D5C  6458               	cpfsgt	_uart2RxTail^0,c
 11449  004D5E  D002               	goto	l7258
 11450                           
 11451                           ; BSR set to: 1
 11452                           ;mcc_generated_files/uart2.c: 183:     {;mcc_generated_files/uart2.c: 184:         uart2
      +                          RxTail = 0;
 11453  004D60  0E00               	movlw	0
 11454  004D62  6E58               	movwf	_uart2RxTail^0,c	;volatile
 11455  004D64                     l7258:
 11456                           
 11457                           ; BSR set to: 1
 11458                           ;mcc_generated_files/uart2.c: 186:     PIE6bits.U2RXIE = 0;
 11459  004D64  0139               	movlb	57	; () banked
 11460  004D66  9596               	bcf	150,2,b	;volatile
 11461                           
 11462                           ; BSR set to: 57
 11463                           ;mcc_generated_files/uart2.c: 187:     uart2RxCount--;
 11464  004D68  0100               	movlb	0	; () banked
 11465  004D6A  07A3               	decf	_uart2RxCount& (0+255),f,b	;volatile
 11466                           
 11467                           ; BSR set to: 0
 11468                           ;mcc_generated_files/uart2.c: 188:     PIE6bits.U2RXIE = 1;
 11469  004D6C  0139               	movlb	57	; () banked
 11470  004D6E  8596               	bsf	150,2,b	;volatile
 11471                           
 11472                           ; BSR set to: 57
 11473                           ;mcc_generated_files/uart2.c: 190:     return readValue;
 11474  004D70  5006               	movf	UART2_Read@readValue^0,w,c
 11475                           
 11476                           ; BSR set to: 57
 11477  004D72  0012               	return		;funcret
 11478  004D74                     __end_of_UART2_Read:
 11479                           	opt callstack 0
 11480                           
 11481 ;; *************** function _TimerDone *****************
 11482 ;; Defined at:
 11483 ;;		line 19 in file "timers.c"
 11484 ;; Parameters:    Size  Location     Type
 11485 ;;  timer           1    wreg     const unsigned char 
 11486 ;; Auto vars:     Size  Location     Type
 11487 ;;  timer           1    7[COMRAM] const unsigned char 
 11488 ;; Return value:  Size  Location     Type
 11489 ;;                  1    wreg      _Bool 
 11490 ;; Registers used:
 11491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11492 ;; Tracked objects:
 11493 ;;		On entry : 0/1
 11494 ;;		On exit  : 0/0
 11495 ;;		Unchanged: 0/0
 11496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11498 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11499 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11500 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11501 ;;Total ram usage:        3 bytes
 11502 ;; Hardware stack levels used:    1
 11503 ;; Hardware stack levels required when called:    4
 11504 ;; This function calls:
 11505 ;;		Nothing
 11506 ;; This function is called by:
 11507 ;;		_work_sw
 11508 ;;		_main
 11509 ;;		_Digital232_RW
 11510 ;;		_led_lightshow
 11511 ;;		_WaitMs
 11512 ;; This function uses a non-reentrant model
 11513 ;;
 11514                           
 11515                           	psect	text70
 11516  005164                     __ptext70:
 11517                           	opt callstack 0
 11518  005164                     _TimerDone:
 11519                           	opt callstack 25
 11520                           
 11521                           ; BSR set to: 57
 11522                           ;incstack = 0
 11523                           ;TimerDone@timer stored from wreg
 11524  005164  6E08               	movwf	TimerDone@timer^0,c
 11525  005166  0004               	clrwdt		;# 
 11526                           
 11527                           ;timers.c: 22:  if (tickCount[timer] == 0) {
 11528  005168  5008               	movf	TimerDone@timer^0,w,c
 11529  00516A  0D02               	mullw	2
 11530  00516C  0E20               	movlw	low _tickCount
 11531  00516E  24F3               	addwf	243,w,c
 11532  005170  6ED9               	movwf	fsr2l,c
 11533  005172  0E01               	movlw	high _tickCount
 11534  005174  20F4               	addwfc	prodh,w,c
 11535  005176  6EDA               	movwf	fsr2h,c
 11536  005178  50DE               	movf	postinc2,w,c
 11537  00517A  10DE               	iorwf	postinc2,w,c
 11538  00517C  A4D8               	btfss	status,2,c
 11539  00517E  D002               	goto	l6918
 11540                           
 11541                           ;timers.c: 23:   return 1;
 11542  005180  0E01               	movlw	1
 11543  005182  0012               	return	
 11544  005184                     l6918:
 11545                           
 11546                           ;timers.c: 25:  return 0;
 11547  005184  0E00               	movlw	0
 11548  005186  0012               	return		;funcret
 11549  005188                     __end_of_TimerDone:
 11550                           	opt callstack 0
 11551                           
 11552 ;; *************** function _StartTimer *****************
 11553 ;; Defined at:
 11554 ;;		line 11 in file "timers.c"
 11555 ;; Parameters:    Size  Location     Type
 11556 ;;  timer           1    wreg     const unsigned char 
 11557 ;;  count           2    5[COMRAM] const unsigned short 
 11558 ;; Auto vars:     Size  Location     Type
 11559 ;;  timer           1    9[COMRAM] const unsigned char 
 11560 ;; Return value:  Size  Location     Type
 11561 ;;                  1    wreg      void 
 11562 ;; Registers used:
 11563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11564 ;; Tracked objects:
 11565 ;;		On entry : 0/1
 11566 ;;		On exit  : 0/0
 11567 ;;		Unchanged: 0/0
 11568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11569 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11570 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11571 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11572 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11573 ;;Total ram usage:        5 bytes
 11574 ;; Hardware stack levels used:    1
 11575 ;; Hardware stack levels required when called:    4
 11576 ;; This function calls:
 11577 ;;		Nothing
 11578 ;; This function is called by:
 11579 ;;		_work_sw
 11580 ;;		_main
 11581 ;;		_Digital232_init
 11582 ;;		_Digital232_RW
 11583 ;;		_led_lightshow
 11584 ;;		_WaitMs
 11585 ;; This function uses a non-reentrant model
 11586 ;;
 11587                           
 11588                           	psect	text71
 11589  004FFE                     __ptext71:
 11590                           	opt callstack 0
 11591  004FFE                     _StartTimer:
 11592                           	opt callstack 25
 11593                           
 11594                           ;incstack = 0
 11595                           ;StartTimer@timer stored from wreg
 11596  004FFE  6E0A               	movwf	StartTimer@timer^0,c
 11597                           
 11598                           ;timers.c: 11: __attribute__((inline)) void StartTimer(const uint8_t timer, const uint16
      +                          _t count);timers.c: 12: {;timers.c: 13:  tickCount[timer] = count << 1;
 11599  005000  0060  F018  F008   	movff	StartTimer@count,??_StartTimer
 11600  005006  0060  F01C  F009   	movff	StartTimer@count+1,??_StartTimer+1
 11601  00500C  90D8               	bcf	status,0,c
 11602  00500E  3608               	rlcf	??_StartTimer^0,f,c
 11603  005010  3609               	rlcf	(??_StartTimer+1)^0,f,c
 11604  005012  500A               	movf	StartTimer@timer^0,w,c
 11605  005014  0D02               	mullw	2
 11606  005016  0E20               	movlw	low _tickCount
 11607  005018  24F3               	addwf	243,w,c
 11608  00501A  6ED9               	movwf	fsr2l,c
 11609  00501C  0E01               	movlw	high _tickCount
 11610  00501E  20F4               	addwfc	prodh,w,c
 11611  005020  6EDA               	movwf	fsr2h,c
 11612  005022  0060  F023  FFDE   	movff	??_StartTimer,postinc2
 11613  005028  0060  F027  FFDD   	movff	??_StartTimer+1,postdec2
 11614  00502E  0012               	return		;funcret
 11615  005030                     __end_of_StartTimer:
 11616                           	opt callstack 0
 11617                           
 11618 ;; *************** function _PWM8_LoadDutyValue *****************
 11619 ;; Defined at:
 11620 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 11621 ;; Parameters:    Size  Location     Type
 11622 ;;  dutyValue       2    5[COMRAM] unsigned short 
 11623 ;; Auto vars:     Size  Location     Type
 11624 ;;		None
 11625 ;; Return value:  Size  Location     Type
 11626 ;;                  1    wreg      void 
 11627 ;; Registers used:
 11628 ;;		wreg, status,2, status,0
 11629 ;; Tracked objects:
 11630 ;;		On entry : 0/0
 11631 ;;		On exit  : 0/0
 11632 ;;		Unchanged: 0/0
 11633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11634 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11636 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11637 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11638 ;;Total ram usage:        4 bytes
 11639 ;; Hardware stack levels used:    1
 11640 ;; Hardware stack levels required when called:    4
 11641 ;; This function calls:
 11642 ;;		Nothing
 11643 ;; This function is called by:
 11644 ;;		_Digital232_RW
 11645 ;; This function uses a non-reentrant model
 11646 ;;
 11647                           
 11648                           	psect	text72
 11649  004F22                     __ptext72:
 11650                           	opt callstack 0
 11651  004F22                     _PWM8_LoadDutyValue:
 11652                           	opt callstack 25
 11653                           
 11654                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11655                           
 11656                           ;incstack = 0
 11657  004F22  0060  F018  F008   	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 11658  004F28  0060  F01C  F009   	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
 11659  004F2E  90D8               	bcf	status,0,c
 11660  004F30  3209               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 11661  004F32  3208               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 11662  004F34  90D8               	bcf	status,0,c
 11663  004F36  3209               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 11664  004F38  3208               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 11665  004F3A  5008               	movf	??_PWM8_LoadDutyValue^0,w,c
 11666  004F3C  6E61               	movwf	97,c	;volatile
 11667                           
 11668                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 11669  004F3E  0060  F018  F008   	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 11670  004F44  0E03               	movlw	3
 11671  004F46  1608               	andwf	??_PWM8_LoadDutyValue^0,f,c
 11672  004F48  0E06               	movlw	6
 11673  004F4A  6E09               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
 11674  004F4C                     u7655:
 11675  004F4C  90D8               	bcf	status,0,c
 11676  004F4E  3608               	rlcf	??_PWM8_LoadDutyValue^0,f,c
 11677  004F50  2E09               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
 11678  004F52  D7FC               	goto	u7655
 11679  004F54  5008               	movf	??_PWM8_LoadDutyValue^0,w,c
 11680  004F56  6E60               	movwf	96,c	;volatile
 11681  004F58  0012               	return		;funcret
 11682  004F5A                     __end_of_PWM8_LoadDutyValue:
 11683                           	opt callstack 0
 11684                           
 11685 ;; *************** function _ADCC_StartConversion *****************
 11686 ;; Defined at:
 11687 ;;		line 113 in file "mcc_generated_files/adcc.c"
 11688 ;; Parameters:    Size  Location     Type
 11689 ;;  channel         1    wreg     enum E15799
 11690 ;; Auto vars:     Size  Location     Type
 11691 ;;  channel         1    5[COMRAM] enum E15799
 11692 ;; Return value:  Size  Location     Type
 11693 ;;                  1    wreg      void 
 11694 ;; Registers used:
 11695 ;;		wreg
 11696 ;; Tracked objects:
 11697 ;;		On entry : 0/1
 11698 ;;		On exit  : 3F/3E
 11699 ;;		Unchanged: 0/0
 11700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11702 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11704 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11705 ;;Total ram usage:        1 bytes
 11706 ;; Hardware stack levels used:    1
 11707 ;; Hardware stack levels required when called:    4
 11708 ;; This function calls:
 11709 ;;		Nothing
 11710 ;; This function is called by:
 11711 ;;		_Digital232_init
 11712 ;;		_Digital232_RW
 11713 ;; This function uses a non-reentrant model
 11714 ;;
 11715                           
 11716                           	psect	text73
 11717  0054A6                     __ptext73:
 11718                           	opt callstack 0
 11719  0054A6                     _ADCC_StartConversion:
 11720                           	opt callstack 25
 11721                           
 11722                           ;incstack = 0
 11723                           ;ADCC_StartConversion@channel stored from wreg
 11724  0054A6  6E06               	movwf	ADCC_StartConversion@channel^0,c
 11725                           
 11726                           ;mcc_generated_files/adcc.c: 113: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 114: {;mcc_generated_files/adcc.c: 116:     ADPCH = channel;
 11727  0054A8  0060  F01B  FEF1   	movff	ADCC_StartConversion@channel,16113	;volatile
 11728                           
 11729                           ;mcc_generated_files/adcc.c: 119:     ADCON0bits.ADON = 1;
 11730  0054AE  013E               	movlb	62	; () banked
 11731  0054B0  8FF8               	bsf	248,7,b	;volatile
 11732                           
 11733                           ; BSR set to: 62
 11734                           ;mcc_generated_files/adcc.c: 122:     ADCON0bits.ADGO = 1;
 11735  0054B2  81F8               	bsf	248,0,b	;volatile
 11736                           
 11737                           ; BSR set to: 62
 11738  0054B4  0012               	return		;funcret
 11739  0054B6                     __end_of_ADCC_StartConversion:
 11740                           	opt callstack 0
 11741                           
 11742 ;; *************** function _ADCC_IsConversionDone *****************
 11743 ;; Defined at:
 11744 ;;		line 125 in file "mcc_generated_files/adcc.c"
 11745 ;; Parameters:    Size  Location     Type
 11746 ;;		None
 11747 ;; Auto vars:     Size  Location     Type
 11748 ;;		None
 11749 ;; Return value:  Size  Location     Type
 11750 ;;                  1    wreg      _Bool 
 11751 ;; Registers used:
 11752 ;;		wreg
 11753 ;; Tracked objects:
 11754 ;;		On entry : 0/3E
 11755 ;;		On exit  : 3F/3E
 11756 ;;		Unchanged: 0/0
 11757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11762 ;;Total ram usage:        0 bytes
 11763 ;; Hardware stack levels used:    1
 11764 ;; Hardware stack levels required when called:    4
 11765 ;; This function calls:
 11766 ;;		Nothing
 11767 ;; This function is called by:
 11768 ;;		_Digital232_RW
 11769 ;; This function uses a non-reentrant model
 11770 ;;
 11771                           
 11772                           	psect	text74
 11773  0054B6                     __ptext74:
 11774                           	opt callstack 0
 11775  0054B6                     _ADCC_IsConversionDone:
 11776                           	opt callstack 25
 11777                           
 11778                           ;mcc_generated_files/adcc.c: 128:     return ((unsigned char)(!ADCON0bits.ADGO));
 11779                           
 11780                           ; BSR set to: 62
 11781                           ;incstack = 0
 11782  0054B6  013E               	movlb	62	; () banked
 11783  0054B8  B1F8               	btfsc	248,0,b	;volatile
 11784  0054BA  D002               	goto	u7660
 11785  0054BC  0E01               	movlw	1
 11786  0054BE  0012               	return	
 11787  0054C0                     u7660:
 11788  0054C0  0E00               	movlw	0
 11789                           
 11790                           ; BSR set to: 62
 11791  0054C2  0012               	return		;funcret
 11792  0054C4                     __end_of_ADCC_IsConversionDone:
 11793                           	opt callstack 0
 11794                           
 11795 ;; *************** function _ADCC_GetConversionResult *****************
 11796 ;; Defined at:
 11797 ;;		line 131 in file "mcc_generated_files/adcc.c"
 11798 ;; Parameters:    Size  Location     Type
 11799 ;;		None
 11800 ;; Auto vars:     Size  Location     Type
 11801 ;;		None
 11802 ;; Return value:  Size  Location     Type
 11803 ;;                  2    5[COMRAM] unsigned short 
 11804 ;; Registers used:
 11805 ;;		wreg, status,2, status,0
 11806 ;; Tracked objects:
 11807 ;;		On entry : 3F/3E
 11808 ;;		On exit  : 3F/3E
 11809 ;;		Unchanged: 0/0
 11810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11811 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11813 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11814 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11815 ;;Total ram usage:        4 bytes
 11816 ;; Hardware stack levels used:    1
 11817 ;; Hardware stack levels required when called:    4
 11818 ;; This function calls:
 11819 ;;		Nothing
 11820 ;; This function is called by:
 11821 ;;		_Digital232_RW
 11822 ;; This function uses a non-reentrant model
 11823 ;;
 11824                           
 11825                           	psect	text75
 11826  005492                     __ptext75:
 11827                           	opt callstack 0
 11828  005492                     _ADCC_GetConversionResult:
 11829                           	opt callstack 25
 11830                           
 11831                           ; BSR set to: 62
 11832                           ;mcc_generated_files/adcc.c: 134:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 11833                           
 11834                           ; BSR set to: 62
 11835                           ;incstack = 0
 11836  005492  51F0               	movf	240,w,b	;volatile
 11837  005494  6E09               	movwf	(??_ADCC_GetConversionResult+1)^0,c
 11838  005496  6A08               	clrf	??_ADCC_GetConversionResult^0,c
 11839  005498  51EF               	movf	239,w,b	;volatile
 11840  00549A  2408               	addwf	??_ADCC_GetConversionResult^0,w,c
 11841  00549C  6E06               	movwf	?_ADCC_GetConversionResult^0,c
 11842  00549E  0E00               	movlw	0
 11843  0054A0  2009               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
 11844  0054A2  6E07               	movwf	(?_ADCC_GetConversionResult+1)^0,c
 11845                           
 11846                           ; BSR set to: 62
 11847  0054A4  0012               	return		;funcret
 11848  0054A6                     __end_of_ADCC_GetConversionResult:
 11849                           	opt callstack 0
 11850                           
 11851 ;; *************** function _Default_ISR *****************
 11852 ;; Defined at:
 11853 ;;		line 80 in file "mcc_generated_files/interrupt_manager.c"
 11854 ;; Parameters:    Size  Location     Type
 11855 ;;		None
 11856 ;; Auto vars:     Size  Location     Type
 11857 ;;		None
 11858 ;; Return value:  Size  Location     Type
 11859 ;;                  1    wreg      void 
 11860 ;; Registers used:
 11861 ;;		None
 11862 ;; Tracked objects:
 11863 ;;		On entry : 0/0
 11864 ;;		On exit  : 0/0
 11865 ;;		Unchanged: 0/0
 11866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11871 ;;Total ram usage:        0 bytes
 11872 ;; Hardware stack levels used:    1
 11873 ;; This function calls:
 11874 ;;		Nothing
 11875 ;; This function is called by:
 11876 ;;		Interrupt level 2
 11877 ;; This function uses a non-reentrant model
 11878 ;;
 11879                           
 11880                           	psect	text76
 11881  0054F4                     __ptext76:
 11882                           	opt callstack 0
 11883  0054F4                     _Default_ISR:
 11884                           	opt callstack 20
 11885                           
 11886                           ; BSR set to: 62
 11887                           ;incstack = 0
 11888  0054F4  0011               	retfie		f
 11889  0054F6                     __end_of_Default_ISR:
 11890                           	opt callstack 0
 11891                           
 11892 ;; *************** function _UART1_tx_vect_isr *****************
 11893 ;; Defined at:
 11894 ;;		line 225 in file "mcc_generated_files/uart1.c"
 11895 ;; Parameters:    Size  Location     Type
 11896 ;;		None
 11897 ;; Auto vars:     Size  Location     Type
 11898 ;;		None
 11899 ;; Return value:  Size  Location     Type
 11900 ;;                  1    wreg      void 
 11901 ;; Registers used:
 11902 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 11903 ;; Tracked objects:
 11904 ;;		On entry : 0/0
 11905 ;;		On exit  : 0/0
 11906 ;;		Unchanged: 0/0
 11907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11912 ;;Total ram usage:        0 bytes
 11913 ;; Hardware stack levels used:    1
 11914 ;; Hardware stack levels required when called:    1
 11915 ;; This function calls:
 11916 ;;		Absolute function
 11917 ;;		_UART1_Transmit_ISR
 11918 ;; This function is called by:
 11919 ;;		Interrupt level 2
 11920 ;; This function uses a non-reentrant model
 11921 ;;
 11922                           
 11923                           	psect	text77
 11924  005188                     __ptext77:
 11925                           	opt callstack 0
 11926  005188                     _UART1_tx_vect_isr:
 11927                           	opt callstack 19
 11928                           
 11929                           ;mcc_generated_files/uart1.c: 227:     if(UART1_TxInterruptHandler)
 11930                           
 11931                           ;incstack = 0
 11932  005188  0101               	movlb	1	; () banked
 11933  00518A  517E               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 11934  00518C  117F               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 11935  00518E  1180               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 11936  005190  B4D8               	btfsc	status,2,c
 11937  005192  0011               	retfie		f
 11938                           
 11939                           ; BSR set to: 1
 11940                           ;mcc_generated_files/uart1.c: 228:     {;mcc_generated_files/uart1.c: 229:         UART1
      +                          _TxInterruptHandler();
 11941  005194  D801               	call	i2u559_48
 11942  005196  0011               	retfie		f
 11943  005198                     i2u559_48:
 11944  005198  0005               	push	
 11945  00519A  6EFA               	movwf	pclath,c
 11946  00519C  517E               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 11947  00519E  6EFD               	movwf	tosl,c
 11948  0051A0  517F               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 11949  0051A2  6EFE               	movwf	tosh,c
 11950  0051A4  5180               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 11951  0051A6  6EFF               	movwf	tosu,c
 11952  0051A8  50FA               	movf	pclath,w,c
 11953  0051AA  0012               	return		;indir
 11954  0051AC                     __end_of_UART1_tx_vect_isr:
 11955                           	opt callstack 0
 11956                           
 11957 ;; *************** function _UART1_Transmit_ISR *****************
 11958 ;; Defined at:
 11959 ;;		line 243 in file "mcc_generated_files/uart1.c"
 11960 ;; Parameters:    Size  Location     Type
 11961 ;;		None
 11962 ;; Auto vars:     Size  Location     Type
 11963 ;;		None
 11964 ;; Return value:  Size  Location     Type
 11965 ;;                  1    wreg      void 
 11966 ;; Registers used:
 11967 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11968 ;; Tracked objects:
 11969 ;;		On entry : 3F/1
 11970 ;;		On exit  : 6/0
 11971 ;;		Unchanged: 0/0
 11972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11977 ;;Total ram usage:        0 bytes
 11978 ;; Hardware stack levels used:    1
 11979 ;; This function calls:
 11980 ;;		Nothing
 11981 ;; This function is called by:
 11982 ;;		_UART1_Initialize
 11983 ;;		_UART1_tx_vect_isr
 11984 ;; This function uses a non-reentrant model
 11985 ;;
 11986                           
 11987                           	psect	text78
 11988  005030                     __ptext78:
 11989                           	opt callstack 0
 11990  005030                     _UART1_Transmit_ISR:
 11991                           	opt callstack 19
 11992                           
 11993                           ; BSR set to: 1
 11994                           ;mcc_generated_files/uart1.c: 246:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 11995                           
 11996                           ;incstack = 0
 11997  005030  0E08               	movlw	8
 11998  005032  0100               	movlb	0	; () banked
 11999  005034  61A9               	cpfslt	_uart1TxBufferRemaining& (0+255),b
 12000  005036  D012               	goto	i2l344
 12001                           
 12002                           ; BSR set to: 0
 12003                           ;mcc_generated_files/uart1.c: 247:     {;mcc_generated_files/uart1.c: 248:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 12004  005038  0E5A               	movlw	low _uart1TxBuffer
 12005  00503A  25AA               	addwf	_uart1TxTail& (0+255),w,b	;volatile
 12006  00503C  6ED9               	movwf	fsr2l,c
 12007  00503E  6ADA               	clrf	fsr2h,c
 12008  005040  0E01               	movlw	high _uart1TxBuffer
 12009  005042  22DA               	addwfc	fsr2h,f,c
 12010  005044  50DF               	movf	indf2,w,c
 12011  005046  013D               	movlb	61	; () banked
 12012  005048  6FEA               	movwf	234,b	;volatile
 12013                           
 12014                           ; BSR set to: 61
 12015  00504A  0100               	movlb	0	; () banked
 12016  00504C  2BAA               	incf	_uart1TxTail& (0+255),f,b	;volatile
 12017                           
 12018                           ; BSR set to: 0
 12019                           ;mcc_generated_files/uart1.c: 249:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 12020  00504E  0E07               	movlw	7
 12021  005050  65AA               	cpfsgt	_uart1TxTail& (0+255),b
 12022  005052  D002               	goto	i2l5466
 12023                           
 12024                           ; BSR set to: 0
 12025                           ;mcc_generated_files/uart1.c: 250:         {;mcc_generated_files/uart1.c: 251:          
      +                             uart1TxTail = 0;
 12026  005054  0E00               	movlw	0
 12027  005056  6FAA               	movwf	_uart1TxTail& (0+255),b	;volatile
 12028  005058                     i2l5466:
 12029                           
 12030                           ; BSR set to: 0
 12031                           ;mcc_generated_files/uart1.c: 253:         uart1TxBufferRemaining++;
 12032  005058  2BA9               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 12033                           
 12034                           ;mcc_generated_files/uart1.c: 254:     }
 12035  00505A  0012               	return	
 12036  00505C                     i2l344:
 12037                           
 12038                           ; BSR set to: 0
 12039                           ;mcc_generated_files/uart1.c: 256:     {;mcc_generated_files/uart1.c: 257:         PIE3b
      +                          its.U1TXIE = 0;
 12040  00505C  0139               	movlb	57	; () banked
 12041  00505E  9993               	bcf	147,4,b	;volatile
 12042  005060  0012               	return		;funcret
 12043  005062                     __end_of_UART1_Transmit_ISR:
 12044                           	opt callstack 0
 12045                           
 12046 ;; *************** function _UART1_rx_vect_isr *****************
 12047 ;; Defined at:
 12048 ;;		line 233 in file "mcc_generated_files/uart1.c"
 12049 ;; Parameters:    Size  Location     Type
 12050 ;;		None
 12051 ;; Auto vars:     Size  Location     Type
 12052 ;;		None
 12053 ;; Return value:  Size  Location     Type
 12054 ;;                  1    wreg      void 
 12055 ;; Registers used:
 12056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 12057 ;; Tracked objects:
 12058 ;;		On entry : 0/0
 12059 ;;		On exit  : 0/0
 12060 ;;		Unchanged: 0/0
 12061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12066 ;;Total ram usage:        0 bytes
 12067 ;; Hardware stack levels used:    1
 12068 ;; Hardware stack levels required when called:    3
 12069 ;; This function calls:
 12070 ;;		Absolute function
 12071 ;;		_UART1_Receive_ISR
 12072 ;; This function is called by:
 12073 ;;		Interrupt level 2
 12074 ;; This function uses a non-reentrant model
 12075 ;;
 12076                           
 12077                           	psect	text79
 12078  0051AC                     __ptext79:
 12079                           	opt callstack 0
 12080  0051AC                     _UART1_rx_vect_isr:
 12081                           	opt callstack 17
 12082                           
 12083                           ;mcc_generated_files/uart1.c: 235:     if(UART1_RxInterruptHandler)
 12084                           
 12085                           ;incstack = 0
 12086  0051AC  0101               	movlb	1	; () banked
 12087  0051AE  5181               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 12088  0051B0  1182               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 12089  0051B2  1183               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 12090  0051B4  B4D8               	btfsc	status,2,c
 12091  0051B6  0011               	retfie		f
 12092                           
 12093                           ; BSR set to: 1
 12094                           ;mcc_generated_files/uart1.c: 236:     {;mcc_generated_files/uart1.c: 237:         UART1
      +                          _RxInterruptHandler();
 12095  0051B8  D801               	call	i2u561_48
 12096  0051BA  0011               	retfie		f
 12097  0051BC                     i2u561_48:
 12098  0051BC  0005               	push	
 12099  0051BE  6EFA               	movwf	pclath,c
 12100  0051C0  5181               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 12101  0051C2  6EFD               	movwf	tosl,c
 12102  0051C4  5182               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 12103  0051C6  6EFE               	movwf	tosh,c
 12104  0051C8  5183               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 12105  0051CA  6EFF               	movwf	tosu,c
 12106  0051CC  50FA               	movf	pclath,w,c
 12107  0051CE  0012               	return		;indir
 12108  0051D0                     __end_of_UART1_rx_vect_isr:
 12109                           	opt callstack 0
 12110                           
 12111 ;; *************** function _UART1_Receive_ISR *****************
 12112 ;; Defined at:
 12113 ;;		line 263 in file "mcc_generated_files/uart1.c"
 12114 ;; Parameters:    Size  Location     Type
 12115 ;;		None
 12116 ;; Auto vars:     Size  Location     Type
 12117 ;;		None
 12118 ;; Return value:  Size  Location     Type
 12119 ;;                  1    wreg      void 
 12120 ;; Registers used:
 12121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 12122 ;; Tracked objects:
 12123 ;;		On entry : 3F/1
 12124 ;;		On exit  : 0/0
 12125 ;;		Unchanged: 0/0
 12126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12131 ;;Total ram usage:        0 bytes
 12132 ;; Hardware stack levels used:    1
 12133 ;; Hardware stack levels required when called:    2
 12134 ;; This function calls:
 12135 ;;		Absolute function
 12136 ;;		_UART1_DefaultErrorHandler
 12137 ;;		_UART1_DefaultFramingErrorHandler
 12138 ;;		_UART1_DefaultOverrunErrorHandler
 12139 ;;		_UART1_RxDataHandler
 12140 ;; This function is called by:
 12141 ;;		_UART1_Initialize
 12142 ;;		_UART1_rx_vect_isr
 12143 ;; This function uses a non-reentrant model
 12144 ;;
 12145                           
 12146                           	psect	text80
 12147  0046B2                     __ptext80:
 12148                           	opt callstack 0
 12149  0046B2                     _UART1_Receive_ISR:
 12150                           	opt callstack 17
 12151                           
 12152                           ; BSR set to: 1
 12153                           ;mcc_generated_files/uart1.c: 266:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 12154                           
 12155                           ;incstack = 0
 12156  0046B2  0E4A               	movlw	low _uart1RxStatusBuffer
 12157  0046B4  245A               	addwf	_uart1RxHead^0,w,c	;volatile
 12158  0046B6  6ED9               	movwf	fsr2l,c
 12159  0046B8  6ADA               	clrf	fsr2h,c
 12160  0046BA  0E01               	movlw	high _uart1RxStatusBuffer
 12161  0046BC  22DA               	addwfc	fsr2h,f,c
 12162  0046BE  0E00               	movlw	0
 12163  0046C0  6EDF               	movwf	indf2,c
 12164                           
 12165                           ; BSR set to: 1
 12166                           ;mcc_generated_files/uart1.c: 268:     if(U1ERRIRbits.FERIF){
 12167  0046C2  013D               	movlb	61	; () banked
 12168  0046C4  A7F9               	btfss	249,3,b	;volatile
 12169  0046C6  D014               	goto	i2u487_49
 12170                           
 12171                           ; BSR set to: 61
 12172                           ;mcc_generated_files/uart1.c: 269:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 12173  0046C8  0E4A               	movlw	low _uart1RxStatusBuffer
 12174  0046CA  245A               	addwf	_uart1RxHead^0,w,c	;volatile
 12175  0046CC  6ED9               	movwf	fsr2l,c
 12176  0046CE  6ADA               	clrf	fsr2h,c
 12177  0046D0  0E01               	movlw	high _uart1RxStatusBuffer
 12178  0046D2  22DA               	addwfc	fsr2h,f,c
 12179  0046D4  0101               	movlb	1	; () banked
 12180  0046D6  82DF               	bsf	indf2,1,c
 12181                           
 12182                           ; BSR set to: 1
 12183                           ;mcc_generated_files/uart1.c: 270:         UART1_FramingErrorHandler();
 12184  0046D8  D801               	call	i2u487_48
 12185  0046DA  D00A               	goto	i2u487_49
 12186  0046DC                     i2u487_48:
 12187  0046DC  0005               	push	
 12188  0046DE  6EFA               	movwf	pclath,c
 12189  0046E0  517B               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 12190  0046E2  6EFD               	movwf	tosl,c
 12191  0046E4  517C               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 12192  0046E6  6EFE               	movwf	tosh,c
 12193  0046E8  517D               	movf	(_UART1_FramingErrorHandler+2)& (0+255),w,b
 12194  0046EA  6EFF               	movwf	tosu,c
 12195  0046EC  50FA               	movf	pclath,w,c
 12196  0046EE  0012               	return		;indir
 12197  0046F0                     i2u487_49:
 12198                           
 12199                           ;mcc_generated_files/uart1.c: 273:     if(U1ERRIRbits.RXFOIF){
 12200  0046F0  013D               	movlb	61	; () banked
 12201  0046F2  A3F9               	btfss	249,1,b	;volatile
 12202  0046F4  D014               	goto	i2u489_49
 12203                           
 12204                           ; BSR set to: 61
 12205                           ;mcc_generated_files/uart1.c: 274:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 12206  0046F6  0E4A               	movlw	low _uart1RxStatusBuffer
 12207  0046F8  245A               	addwf	_uart1RxHead^0,w,c	;volatile
 12208  0046FA  6ED9               	movwf	fsr2l,c
 12209  0046FC  6ADA               	clrf	fsr2h,c
 12210  0046FE  0E01               	movlw	high _uart1RxStatusBuffer
 12211  004700  22DA               	addwfc	fsr2h,f,c
 12212  004702  0101               	movlb	1	; () banked
 12213  004704  84DF               	bsf	indf2,2,c
 12214                           
 12215                           ; BSR set to: 1
 12216                           ;mcc_generated_files/uart1.c: 275:         UART1_OverrunErrorHandler();
 12217  004706  D801               	call	i2u489_48
 12218  004708  D00A               	goto	i2u489_49
 12219  00470A                     i2u489_48:
 12220  00470A  0005               	push	
 12221  00470C  6EFA               	movwf	pclath,c
 12222  00470E  5178               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 12223  004710  6EFD               	movwf	tosl,c
 12224  004712  5179               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 12225  004714  6EFE               	movwf	tosh,c
 12226  004716  517A               	movf	(_UART1_OverrunErrorHandler+2)& (0+255),w,b
 12227  004718  6EFF               	movwf	tosu,c
 12228  00471A  50FA               	movf	pclath,w,c
 12229  00471C  0012               	return		;indir
 12230  00471E                     i2u489_49:
 12231                           
 12232                           ;mcc_generated_files/uart1.c: 278:     if(uart1RxStatusBuffer[uart1RxHead].status){
 12233  00471E  0E4A               	movlw	low _uart1RxStatusBuffer
 12234  004720  245A               	addwf	_uart1RxHead^0,w,c	;volatile
 12235  004722  6ED9               	movwf	fsr2l,c
 12236  004724  6ADA               	clrf	fsr2h,c
 12237  004726  0E01               	movlw	high _uart1RxStatusBuffer
 12238  004728  22DA               	addwfc	fsr2h,f,c
 12239  00472A  50DF               	movf	indf2,w,c
 12240  00472C  B4D8               	btfsc	status,2,c
 12241  00472E  D00D               	goto	i2l5486
 12242                           
 12243                           ;mcc_generated_files/uart1.c: 279:         UART1_ErrorHandler();
 12244  004730  D801               	call	i2u491_48
 12245  004732  0012               	return	
 12246  004734                     i2u491_48:
 12247  004734  0005               	push	
 12248  004736  6EFA               	movwf	pclath,c
 12249  004738  0101               	movlb	1	; () banked
 12250  00473A  5175               	movf	_UART1_ErrorHandler& (0+255),w,b
 12251  00473C  6EFD               	movwf	tosl,c
 12252  00473E  5176               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 12253  004740  6EFE               	movwf	tosh,c
 12254  004742  5177               	movf	(_UART1_ErrorHandler+2)& (0+255),w,b
 12255  004744  6EFF               	movwf	tosu,c
 12256  004746  50FA               	movf	pclath,w,c
 12257  004748  0012               	return		;indir
 12258  00474A                     i2l5486:
 12259                           
 12260                           ;mcc_generated_files/uart1.c: 281:         UART1_RxDataHandler();
 12261  00474A  ECE8  F028         	call	_UART1_RxDataHandler	;wreg free
 12262  00474E  0012               	return		;funcret
 12263  004750                     __end_of_UART1_Receive_ISR:
 12264                           	opt callstack 0
 12265                           
 12266 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 12267 ;; Defined at:
 12268 ;;		line 299 in file "mcc_generated_files/uart1.c"
 12269 ;; Parameters:    Size  Location     Type
 12270 ;;		None
 12271 ;; Auto vars:     Size  Location     Type
 12272 ;;		None
 12273 ;; Return value:  Size  Location     Type
 12274 ;;                  1    wreg      void 
 12275 ;; Registers used:
 12276 ;;		None
 12277 ;; Tracked objects:
 12278 ;;		On entry : 3F/1
 12279 ;;		On exit  : 3F/1
 12280 ;;		Unchanged: 3F/0
 12281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12286 ;;Total ram usage:        0 bytes
 12287 ;; Hardware stack levels used:    1
 12288 ;; This function calls:
 12289 ;;		Nothing
 12290 ;; This function is called by:
 12291 ;;		_UART1_Initialize
 12292 ;;		_UART1_Receive_ISR
 12293 ;; This function uses a non-reentrant model
 12294 ;;
 12295                           
 12296                           	psect	text81
 12297  0054F6                     __ptext81:
 12298                           	opt callstack 0
 12299  0054F6                     _UART1_DefaultOverrunErrorHandler:
 12300                           	opt callstack 18
 12301                           
 12302                           ; BSR set to: 1
 12303                           
 12304                           ;incstack = 0
 12305  0054F6  0012               	return		;funcret
 12306  0054F8                     __end_of_UART1_DefaultOverrunErrorHandler:
 12307                           	opt callstack 0
 12308                           
 12309 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 12310 ;; Defined at:
 12311 ;;		line 297 in file "mcc_generated_files/uart1.c"
 12312 ;; Parameters:    Size  Location     Type
 12313 ;;		None
 12314 ;; Auto vars:     Size  Location     Type
 12315 ;;		None
 12316 ;; Return value:  Size  Location     Type
 12317 ;;                  1    wreg      void 
 12318 ;; Registers used:
 12319 ;;		None
 12320 ;; Tracked objects:
 12321 ;;		On entry : 3F/1
 12322 ;;		On exit  : 3F/1
 12323 ;;		Unchanged: 3F/0
 12324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12329 ;;Total ram usage:        0 bytes
 12330 ;; Hardware stack levels used:    1
 12331 ;; This function calls:
 12332 ;;		Nothing
 12333 ;; This function is called by:
 12334 ;;		_UART1_Initialize
 12335 ;;		_UART1_Receive_ISR
 12336 ;; This function uses a non-reentrant model
 12337 ;;
 12338                           
 12339                           	psect	text82
 12340  0054F8                     __ptext82:
 12341                           	opt callstack 0
 12342  0054F8                     _UART1_DefaultFramingErrorHandler:
 12343                           	opt callstack 18
 12344                           
 12345                           ; BSR set to: 1
 12346                           
 12347                           ; BSR set to: 1
 12348                           ;incstack = 0
 12349  0054F8  0012               	return		;funcret
 12350  0054FA                     __end_of_UART1_DefaultFramingErrorHandler:
 12351                           	opt callstack 0
 12352                           
 12353 ;; *************** function _UART1_DefaultErrorHandler *****************
 12354 ;; Defined at:
 12355 ;;		line 301 in file "mcc_generated_files/uart1.c"
 12356 ;; Parameters:    Size  Location     Type
 12357 ;;		None
 12358 ;; Auto vars:     Size  Location     Type
 12359 ;;		None
 12360 ;; Return value:  Size  Location     Type
 12361 ;;                  1    wreg      void 
 12362 ;; Registers used:
 12363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12364 ;; Tracked objects:
 12365 ;;		On entry : 3F/1
 12366 ;;		On exit  : 3F/0
 12367 ;;		Unchanged: 0/0
 12368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12373 ;;Total ram usage:        0 bytes
 12374 ;; Hardware stack levels used:    1
 12375 ;; Hardware stack levels required when called:    1
 12376 ;; This function calls:
 12377 ;;		_UART1_RxDataHandler
 12378 ;; This function is called by:
 12379 ;;		_UART1_Initialize
 12380 ;;		_UART1_Receive_ISR
 12381 ;; This function uses a non-reentrant model
 12382 ;;
 12383                           
 12384                           	psect	text83
 12385  0054E6                     __ptext83:
 12386                           	opt callstack 0
 12387  0054E6                     _UART1_DefaultErrorHandler:
 12388                           	opt callstack 17
 12389                           
 12390                           ; BSR set to: 1
 12391                           ;mcc_generated_files/uart1.c: 302:     UART1_RxDataHandler();
 12392                           
 12393                           ; BSR set to: 1
 12394                           ;incstack = 0
 12395  0054E6  ECE8  F028         	call	_UART1_RxDataHandler	;wreg free
 12396                           
 12397                           ; BSR set to: 0
 12398  0054EA  0012               	return		;funcret
 12399  0054EC                     __end_of_UART1_DefaultErrorHandler:
 12400                           	opt callstack 0
 12401                           
 12402 ;; *************** function _UART1_RxDataHandler *****************
 12403 ;; Defined at:
 12404 ;;		line 287 in file "mcc_generated_files/uart1.c"
 12405 ;; Parameters:    Size  Location     Type
 12406 ;;		None
 12407 ;; Auto vars:     Size  Location     Type
 12408 ;;		None
 12409 ;; Return value:  Size  Location     Type
 12410 ;;                  1    wreg      void 
 12411 ;; Registers used:
 12412 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12413 ;; Tracked objects:
 12414 ;;		On entry : 0/3D
 12415 ;;		On exit  : 3F/0
 12416 ;;		Unchanged: 0/0
 12417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12422 ;;Total ram usage:        0 bytes
 12423 ;; Hardware stack levels used:    1
 12424 ;; This function calls:
 12425 ;;		Nothing
 12426 ;; This function is called by:
 12427 ;;		_UART1_Receive_ISR
 12428 ;;		_UART1_DefaultErrorHandler
 12429 ;; This function uses a non-reentrant model
 12430 ;;
 12431                           
 12432                           	psect	text84
 12433  0051D0                     __ptext84:
 12434                           	opt callstack 0
 12435  0051D0                     _UART1_RxDataHandler:
 12436                           	opt callstack 18
 12437                           
 12438                           ;mcc_generated_files/uart1.c: 289:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 12439                           
 12440                           ; BSR set to: 0
 12441                           ;incstack = 0
 12442  0051D0  0E52               	movlw	low _uart1RxBuffer
 12443  0051D2  245A               	addwf	_uart1RxHead^0,w,c	;volatile
 12444  0051D4  6ED9               	movwf	fsr2l,c
 12445  0051D6  6ADA               	clrf	fsr2h,c
 12446  0051D8  0E01               	movlw	high _uart1RxBuffer
 12447  0051DA  22DA               	addwfc	fsr2h,f,c
 12448  0051DC  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 12449  0051E2  2A5A               	incf	_uart1RxHead^0,f,c	;volatile
 12450                           
 12451                           ;mcc_generated_files/uart1.c: 290:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 12452  0051E4  0E07               	movlw	7
 12453  0051E6  645A               	cpfsgt	_uart1RxHead^0,c
 12454  0051E8  D002               	goto	i2l4942
 12455                           
 12456                           ;mcc_generated_files/uart1.c: 291:     {;mcc_generated_files/uart1.c: 292:         uart1
      +                          RxHead = 0;
 12457  0051EA  0E00               	movlw	0
 12458  0051EC  6E5A               	movwf	_uart1RxHead^0,c	;volatile
 12459  0051EE                     i2l4942:
 12460                           
 12461                           ;mcc_generated_files/uart1.c: 294:     uart1RxCount++;
 12462  0051EE  0100               	movlb	0	; () banked
 12463  0051F0  2BA7               	incf	_uart1RxCount& (0+255),f,b	;volatile
 12464                           
 12465                           ; BSR set to: 0
 12466  0051F2  0012               	return		;funcret
 12467  0051F4                     __end_of_UART1_RxDataHandler:
 12468                           	opt callstack 0
 12469                           
 12470 ;; *************** function _UART2_tx_vect_isr *****************
 12471 ;; Defined at:
 12472 ;;		line 226 in file "mcc_generated_files/uart2.c"
 12473 ;; Parameters:    Size  Location     Type
 12474 ;;		None
 12475 ;; Auto vars:     Size  Location     Type
 12476 ;;		None
 12477 ;; Return value:  Size  Location     Type
 12478 ;;                  1    wreg      void 
 12479 ;; Registers used:
 12480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 12481 ;; Tracked objects:
 12482 ;;		On entry : 0/0
 12483 ;;		On exit  : 0/0
 12484 ;;		Unchanged: 0/0
 12485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12490 ;;Total ram usage:        0 bytes
 12491 ;; Hardware stack levels used:    1
 12492 ;; Hardware stack levels required when called:    1
 12493 ;; This function calls:
 12494 ;;		Absolute function
 12495 ;;		_UART2_Transmit_ISR
 12496 ;; This function is called by:
 12497 ;;		Interrupt level 2
 12498 ;; This function uses a non-reentrant model
 12499 ;;
 12500                           
 12501                           	psect	text85
 12502  0051F4                     __ptext85:
 12503                           	opt callstack 0
 12504  0051F4                     _UART2_tx_vect_isr:
 12505                           	opt callstack 19
 12506                           
 12507                           ;mcc_generated_files/uart2.c: 228:     if(UART2_TxInterruptHandler)
 12508                           
 12509                           ; BSR set to: 0
 12510                           ;incstack = 0
 12511  0051F4  0101               	movlb	1	; () banked
 12512  0051F6  5184               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 12513  0051F8  1185               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 12514  0051FA  1186               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 12515  0051FC  B4D8               	btfsc	status,2,c
 12516  0051FE  0011               	retfie		f
 12517                           
 12518                           ; BSR set to: 1
 12519                           ;mcc_generated_files/uart2.c: 229:     {;mcc_generated_files/uart2.c: 230:         UART2
      +                          _TxInterruptHandler();
 12520  005200  D801               	call	i2u563_48
 12521  005202  0011               	retfie		f
 12522  005204                     i2u563_48:
 12523  005204  0005               	push	
 12524  005206  6EFA               	movwf	pclath,c
 12525  005208  5184               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 12526  00520A  6EFD               	movwf	tosl,c
 12527  00520C  5185               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 12528  00520E  6EFE               	movwf	tosh,c
 12529  005210  5186               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 12530  005212  6EFF               	movwf	tosu,c
 12531  005214  50FA               	movf	pclath,w,c
 12532  005216  0012               	return		;indir
 12533  005218                     __end_of_UART2_tx_vect_isr:
 12534                           	opt callstack 0
 12535                           
 12536 ;; *************** function _UART2_Transmit_ISR *****************
 12537 ;; Defined at:
 12538 ;;		line 244 in file "mcc_generated_files/uart2.c"
 12539 ;; Parameters:    Size  Location     Type
 12540 ;;		None
 12541 ;; Auto vars:     Size  Location     Type
 12542 ;;		None
 12543 ;; Return value:  Size  Location     Type
 12544 ;;                  1    wreg      void 
 12545 ;; Registers used:
 12546 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12547 ;; Tracked objects:
 12548 ;;		On entry : 3F/1
 12549 ;;		On exit  : 6/0
 12550 ;;		Unchanged: 0/0
 12551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12556 ;;Total ram usage:        0 bytes
 12557 ;; Hardware stack levels used:    1
 12558 ;; This function calls:
 12559 ;;		Nothing
 12560 ;; This function is called by:
 12561 ;;		_UART2_Initialize
 12562 ;;		_UART2_tx_vect_isr
 12563 ;; This function uses a non-reentrant model
 12564 ;;
 12565                           
 12566                           	psect	text86
 12567  005062                     __ptext86:
 12568                           	opt callstack 0
 12569  005062                     _UART2_Transmit_ISR:
 12570                           	opt callstack 19
 12571                           
 12572                           ; BSR set to: 1
 12573                           ;mcc_generated_files/uart2.c: 247:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 12574                           
 12575                           ;incstack = 0
 12576  005062  0E08               	movlw	8
 12577  005064  0100               	movlb	0	; () banked
 12578  005066  61A4               	cpfslt	_uart2TxBufferRemaining& (0+255),b
 12579  005068  D012               	goto	i2l518
 12580                           
 12581                           ; BSR set to: 0
 12582                           ;mcc_generated_files/uart2.c: 248:     {;mcc_generated_files/uart2.c: 249:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 12583  00506A  0E42               	movlw	low _uart2TxBuffer
 12584  00506C  25A5               	addwf	_uart2TxTail& (0+255),w,b	;volatile
 12585  00506E  6ED9               	movwf	fsr2l,c
 12586  005070  6ADA               	clrf	fsr2h,c
 12587  005072  0E01               	movlw	high _uart2TxBuffer
 12588  005074  22DA               	addwfc	fsr2h,f,c
 12589  005076  50DF               	movf	indf2,w,c
 12590  005078  013D               	movlb	61	; () banked
 12591  00507A  6FD2               	movwf	210,b	;volatile
 12592                           
 12593                           ; BSR set to: 61
 12594  00507C  0100               	movlb	0	; () banked
 12595  00507E  2BA5               	incf	_uart2TxTail& (0+255),f,b	;volatile
 12596                           
 12597                           ; BSR set to: 0
 12598                           ;mcc_generated_files/uart2.c: 250:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 12599  005080  0E07               	movlw	7
 12600  005082  65A5               	cpfsgt	_uart2TxTail& (0+255),b
 12601  005084  D002               	goto	i2l5498
 12602                           
 12603                           ; BSR set to: 0
 12604                           ;mcc_generated_files/uart2.c: 251:         {;mcc_generated_files/uart2.c: 252:          
      +                             uart2TxTail = 0;
 12605  005086  0E00               	movlw	0
 12606  005088  6FA5               	movwf	_uart2TxTail& (0+255),b	;volatile
 12607  00508A                     i2l5498:
 12608                           
 12609                           ; BSR set to: 0
 12610                           ;mcc_generated_files/uart2.c: 254:         uart2TxBufferRemaining++;
 12611  00508A  2BA4               	incf	_uart2TxBufferRemaining& (0+255),f,b	;volatile
 12612                           
 12613                           ;mcc_generated_files/uart2.c: 255:     }
 12614  00508C  0012               	return	
 12615  00508E                     i2l518:
 12616                           
 12617                           ; BSR set to: 0
 12618                           ;mcc_generated_files/uart2.c: 257:     {;mcc_generated_files/uart2.c: 258:         PIE6b
      +                          its.U2TXIE = 0;
 12619  00508E  0139               	movlb	57	; () banked
 12620  005090  9796               	bcf	150,3,b	;volatile
 12621  005092  0012               	return		;funcret
 12622  005094                     __end_of_UART2_Transmit_ISR:
 12623                           	opt callstack 0
 12624                           
 12625 ;; *************** function _UART2_rx_vect_isr *****************
 12626 ;; Defined at:
 12627 ;;		line 234 in file "mcc_generated_files/uart2.c"
 12628 ;; Parameters:    Size  Location     Type
 12629 ;;		None
 12630 ;; Auto vars:     Size  Location     Type
 12631 ;;		None
 12632 ;; Return value:  Size  Location     Type
 12633 ;;                  1    wreg      void 
 12634 ;; Registers used:
 12635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 12636 ;; Tracked objects:
 12637 ;;		On entry : 0/0
 12638 ;;		On exit  : 0/0
 12639 ;;		Unchanged: 0/0
 12640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12645 ;;Total ram usage:        0 bytes
 12646 ;; Hardware stack levels used:    1
 12647 ;; Hardware stack levels required when called:    3
 12648 ;; This function calls:
 12649 ;;		Absolute function
 12650 ;;		_UART2_Receive_ISR
 12651 ;; This function is called by:
 12652 ;;		Interrupt level 2
 12653 ;; This function uses a non-reentrant model
 12654 ;;
 12655                           
 12656                           	psect	text87
 12657  005218                     __ptext87:
 12658                           	opt callstack 0
 12659  005218                     _UART2_rx_vect_isr:
 12660                           	opt callstack 17
 12661                           
 12662                           ;mcc_generated_files/uart2.c: 236:     if(UART2_RxInterruptHandler)
 12663                           
 12664                           ;incstack = 0
 12665  005218  0101               	movlb	1	; () banked
 12666  00521A  5187               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 12667  00521C  1188               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 12668  00521E  1189               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 12669  005220  B4D8               	btfsc	status,2,c
 12670  005222  0011               	retfie		f
 12671                           
 12672                           ; BSR set to: 1
 12673                           ;mcc_generated_files/uart2.c: 237:     {;mcc_generated_files/uart2.c: 238:         UART2
      +                          _RxInterruptHandler();
 12674  005224  D801               	call	i2u565_48
 12675  005226  0011               	retfie		f
 12676  005228                     i2u565_48:
 12677  005228  0005               	push	
 12678  00522A  6EFA               	movwf	pclath,c
 12679  00522C  5187               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 12680  00522E  6EFD               	movwf	tosl,c
 12681  005230  5188               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 12682  005232  6EFE               	movwf	tosh,c
 12683  005234  5189               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 12684  005236  6EFF               	movwf	tosu,c
 12685  005238  50FA               	movf	pclath,w,c
 12686  00523A  0012               	return		;indir
 12687  00523C                     __end_of_UART2_rx_vect_isr:
 12688                           	opt callstack 0
 12689                           
 12690 ;; *************** function _UART2_Receive_ISR *****************
 12691 ;; Defined at:
 12692 ;;		line 264 in file "mcc_generated_files/uart2.c"
 12693 ;; Parameters:    Size  Location     Type
 12694 ;;		None
 12695 ;; Auto vars:     Size  Location     Type
 12696 ;;		None
 12697 ;; Return value:  Size  Location     Type
 12698 ;;                  1    wreg      void 
 12699 ;; Registers used:
 12700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 12701 ;; Tracked objects:
 12702 ;;		On entry : 3F/1
 12703 ;;		On exit  : 0/0
 12704 ;;		Unchanged: 0/0
 12705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12710 ;;Total ram usage:        0 bytes
 12711 ;; Hardware stack levels used:    1
 12712 ;; Hardware stack levels required when called:    2
 12713 ;; This function calls:
 12714 ;;		Absolute function
 12715 ;;		_UART2_DefaultErrorHandler
 12716 ;;		_UART2_DefaultFramingErrorHandler
 12717 ;;		_UART2_DefaultOverrunErrorHandler
 12718 ;;		_UART2_RxDataHandler
 12719 ;; This function is called by:
 12720 ;;		_UART2_Initialize
 12721 ;;		_UART2_rx_vect_isr
 12722 ;; This function uses a non-reentrant model
 12723 ;;
 12724                           
 12725                           	psect	text88
 12726  004750                     __ptext88:
 12727                           	opt callstack 0
 12728  004750                     _UART2_Receive_ISR:
 12729                           	opt callstack 17
 12730                           
 12731                           ; BSR set to: 1
 12732                           ;mcc_generated_files/uart2.c: 267:     uart2RxStatusBuffer[uart2RxHead].status = 0;
 12733                           
 12734                           ;incstack = 0
 12735  004750  0E32               	movlw	low _uart2RxStatusBuffer
 12736  004752  2459               	addwf	_uart2RxHead^0,w,c	;volatile
 12737  004754  6ED9               	movwf	fsr2l,c
 12738  004756  6ADA               	clrf	fsr2h,c
 12739  004758  0E01               	movlw	high _uart2RxStatusBuffer
 12740  00475A  22DA               	addwfc	fsr2h,f,c
 12741  00475C  0E00               	movlw	0
 12742  00475E  6EDF               	movwf	indf2,c
 12743                           
 12744                           ; BSR set to: 1
 12745                           ;mcc_generated_files/uart2.c: 269:     if(U2ERRIRbits.FERIF){
 12746  004760  013D               	movlb	61	; () banked
 12747  004762  A7E1               	btfss	225,3,b	;volatile
 12748  004764  D014               	goto	i2u495_49
 12749                           
 12750                           ; BSR set to: 61
 12751                           ;mcc_generated_files/uart2.c: 270:         uart2RxStatusBuffer[uart2RxHead].ferr = 1;
 12752  004766  0E32               	movlw	low _uart2RxStatusBuffer
 12753  004768  2459               	addwf	_uart2RxHead^0,w,c	;volatile
 12754  00476A  6ED9               	movwf	fsr2l,c
 12755  00476C  6ADA               	clrf	fsr2h,c
 12756  00476E  0E01               	movlw	high _uart2RxStatusBuffer
 12757  004770  22DA               	addwfc	fsr2h,f,c
 12758  004772  0101               	movlb	1	; () banked
 12759  004774  82DF               	bsf	indf2,1,c
 12760                           
 12761                           ; BSR set to: 1
 12762                           ;mcc_generated_files/uart2.c: 271:         UART2_FramingErrorHandler();
 12763  004776  D801               	call	i2u495_48
 12764  004778  D00A               	goto	i2u495_49
 12765  00477A                     i2u495_48:
 12766  00477A  0005               	push	
 12767  00477C  6EFA               	movwf	pclath,c
 12768  00477E  5172               	movf	_UART2_FramingErrorHandler& (0+255),w,b
 12769  004780  6EFD               	movwf	tosl,c
 12770  004782  5173               	movf	(_UART2_FramingErrorHandler+1)& (0+255),w,b
 12771  004784  6EFE               	movwf	tosh,c
 12772  004786  5174               	movf	(_UART2_FramingErrorHandler+2)& (0+255),w,b
 12773  004788  6EFF               	movwf	tosu,c
 12774  00478A  50FA               	movf	pclath,w,c
 12775  00478C  0012               	return		;indir
 12776  00478E                     i2u495_49:
 12777                           
 12778                           ;mcc_generated_files/uart2.c: 274:     if(U2ERRIRbits.RXFOIF){
 12779  00478E  013D               	movlb	61	; () banked
 12780  004790  A3E1               	btfss	225,1,b	;volatile
 12781  004792  D014               	goto	i2u497_49
 12782                           
 12783                           ; BSR set to: 61
 12784                           ;mcc_generated_files/uart2.c: 275:         uart2RxStatusBuffer[uart2RxHead].oerr = 1;
 12785  004794  0E32               	movlw	low _uart2RxStatusBuffer
 12786  004796  2459               	addwf	_uart2RxHead^0,w,c	;volatile
 12787  004798  6ED9               	movwf	fsr2l,c
 12788  00479A  6ADA               	clrf	fsr2h,c
 12789  00479C  0E01               	movlw	high _uart2RxStatusBuffer
 12790  00479E  22DA               	addwfc	fsr2h,f,c
 12791  0047A0  0101               	movlb	1	; () banked
 12792  0047A2  84DF               	bsf	indf2,2,c
 12793                           
 12794                           ; BSR set to: 1
 12795                           ;mcc_generated_files/uart2.c: 276:         UART2_OverrunErrorHandler();
 12796  0047A4  D801               	call	i2u497_48
 12797  0047A6  D00A               	goto	i2u497_49
 12798  0047A8                     i2u497_48:
 12799  0047A8  0005               	push	
 12800  0047AA  6EFA               	movwf	pclath,c
 12801  0047AC  516F               	movf	_UART2_OverrunErrorHandler& (0+255),w,b
 12802  0047AE  6EFD               	movwf	tosl,c
 12803  0047B0  5170               	movf	(_UART2_OverrunErrorHandler+1)& (0+255),w,b
 12804  0047B2  6EFE               	movwf	tosh,c
 12805  0047B4  5171               	movf	(_UART2_OverrunErrorHandler+2)& (0+255),w,b
 12806  0047B6  6EFF               	movwf	tosu,c
 12807  0047B8  50FA               	movf	pclath,w,c
 12808  0047BA  0012               	return		;indir
 12809  0047BC                     i2u497_49:
 12810                           
 12811                           ;mcc_generated_files/uart2.c: 279:     if(uart2RxStatusBuffer[uart2RxHead].status){
 12812  0047BC  0E32               	movlw	low _uart2RxStatusBuffer
 12813  0047BE  2459               	addwf	_uart2RxHead^0,w,c	;volatile
 12814  0047C0  6ED9               	movwf	fsr2l,c
 12815  0047C2  6ADA               	clrf	fsr2h,c
 12816  0047C4  0E01               	movlw	high _uart2RxStatusBuffer
 12817  0047C6  22DA               	addwfc	fsr2h,f,c
 12818  0047C8  50DF               	movf	indf2,w,c
 12819  0047CA  B4D8               	btfsc	status,2,c
 12820  0047CC  D00D               	goto	i2l5518
 12821                           
 12822                           ;mcc_generated_files/uart2.c: 280:         UART2_ErrorHandler();
 12823  0047CE  D801               	call	i2u499_48
 12824  0047D0  0012               	return	
 12825  0047D2                     i2u499_48:
 12826  0047D2  0005               	push	
 12827  0047D4  6EFA               	movwf	pclath,c
 12828  0047D6  0101               	movlb	1	; () banked
 12829  0047D8  516C               	movf	_UART2_ErrorHandler& (0+255),w,b
 12830  0047DA  6EFD               	movwf	tosl,c
 12831  0047DC  516D               	movf	(_UART2_ErrorHandler+1)& (0+255),w,b
 12832  0047DE  6EFE               	movwf	tosh,c
 12833  0047E0  516E               	movf	(_UART2_ErrorHandler+2)& (0+255),w,b
 12834  0047E2  6EFF               	movwf	tosu,c
 12835  0047E4  50FA               	movf	pclath,w,c
 12836  0047E6  0012               	return		;indir
 12837  0047E8                     i2l5518:
 12838                           
 12839                           ;mcc_generated_files/uart2.c: 282:         UART2_RxDataHandler();
 12840  0047E8  EC1E  F029         	call	_UART2_RxDataHandler	;wreg free
 12841  0047EC  0012               	return		;funcret
 12842  0047EE                     __end_of_UART2_Receive_ISR:
 12843                           	opt callstack 0
 12844                           
 12845 ;; *************** function _UART2_DefaultOverrunErrorHandler *****************
 12846 ;; Defined at:
 12847 ;;		line 300 in file "mcc_generated_files/uart2.c"
 12848 ;; Parameters:    Size  Location     Type
 12849 ;;		None
 12850 ;; Auto vars:     Size  Location     Type
 12851 ;;		None
 12852 ;; Return value:  Size  Location     Type
 12853 ;;                  1    wreg      void 
 12854 ;; Registers used:
 12855 ;;		None
 12856 ;; Tracked objects:
 12857 ;;		On entry : 3F/1
 12858 ;;		On exit  : 3F/1
 12859 ;;		Unchanged: 3F/0
 12860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12865 ;;Total ram usage:        0 bytes
 12866 ;; Hardware stack levels used:    1
 12867 ;; This function calls:
 12868 ;;		Nothing
 12869 ;; This function is called by:
 12870 ;;		_UART2_Initialize
 12871 ;;		_UART2_Receive_ISR
 12872 ;; This function uses a non-reentrant model
 12873 ;;
 12874                           
 12875                           	psect	text89
 12876  0054FA                     __ptext89:
 12877                           	opt callstack 0
 12878  0054FA                     _UART2_DefaultOverrunErrorHandler:
 12879                           	opt callstack 18
 12880                           
 12881                           ; BSR set to: 1
 12882                           
 12883                           ;incstack = 0
 12884  0054FA  0012               	return		;funcret
 12885  0054FC                     __end_of_UART2_DefaultOverrunErrorHandler:
 12886                           	opt callstack 0
 12887                           
 12888 ;; *************** function _UART2_DefaultFramingErrorHandler *****************
 12889 ;; Defined at:
 12890 ;;		line 298 in file "mcc_generated_files/uart2.c"
 12891 ;; Parameters:    Size  Location     Type
 12892 ;;		None
 12893 ;; Auto vars:     Size  Location     Type
 12894 ;;		None
 12895 ;; Return value:  Size  Location     Type
 12896 ;;                  1    wreg      void 
 12897 ;; Registers used:
 12898 ;;		None
 12899 ;; Tracked objects:
 12900 ;;		On entry : 3F/1
 12901 ;;		On exit  : 3F/1
 12902 ;;		Unchanged: 3F/0
 12903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12908 ;;Total ram usage:        0 bytes
 12909 ;; Hardware stack levels used:    1
 12910 ;; This function calls:
 12911 ;;		Nothing
 12912 ;; This function is called by:
 12913 ;;		_UART2_Initialize
 12914 ;;		_UART2_Receive_ISR
 12915 ;; This function uses a non-reentrant model
 12916 ;;
 12917                           
 12918                           	psect	text90
 12919  0054FC                     __ptext90:
 12920                           	opt callstack 0
 12921  0054FC                     _UART2_DefaultFramingErrorHandler:
 12922                           	opt callstack 18
 12923                           
 12924                           ; BSR set to: 1
 12925                           
 12926                           ; BSR set to: 1
 12927                           ;incstack = 0
 12928  0054FC  0012               	return		;funcret
 12929  0054FE                     __end_of_UART2_DefaultFramingErrorHandler:
 12930                           	opt callstack 0
 12931                           
 12932 ;; *************** function _UART2_DefaultErrorHandler *****************
 12933 ;; Defined at:
 12934 ;;		line 302 in file "mcc_generated_files/uart2.c"
 12935 ;; Parameters:    Size  Location     Type
 12936 ;;		None
 12937 ;; Auto vars:     Size  Location     Type
 12938 ;;		None
 12939 ;; Return value:  Size  Location     Type
 12940 ;;                  1    wreg      void 
 12941 ;; Registers used:
 12942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12943 ;; Tracked objects:
 12944 ;;		On entry : 3F/1
 12945 ;;		On exit  : 3F/0
 12946 ;;		Unchanged: 0/0
 12947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12952 ;;Total ram usage:        0 bytes
 12953 ;; Hardware stack levels used:    1
 12954 ;; Hardware stack levels required when called:    1
 12955 ;; This function calls:
 12956 ;;		_UART2_RxDataHandler
 12957 ;; This function is called by:
 12958 ;;		_UART2_Initialize
 12959 ;;		_UART2_Receive_ISR
 12960 ;; This function uses a non-reentrant model
 12961 ;;
 12962                           
 12963                           	psect	text91
 12964  0054EC                     __ptext91:
 12965                           	opt callstack 0
 12966  0054EC                     _UART2_DefaultErrorHandler:
 12967                           	opt callstack 17
 12968                           
 12969                           ; BSR set to: 1
 12970                           ;mcc_generated_files/uart2.c: 303:     UART2_RxDataHandler();
 12971                           
 12972                           ; BSR set to: 1
 12973                           ;incstack = 0
 12974  0054EC  EC1E  F029         	call	_UART2_RxDataHandler	;wreg free
 12975                           
 12976                           ; BSR set to: 0
 12977  0054F0  0012               	return		;funcret
 12978  0054F2                     __end_of_UART2_DefaultErrorHandler:
 12979                           	opt callstack 0
 12980                           
 12981 ;; *************** function _UART2_RxDataHandler *****************
 12982 ;; Defined at:
 12983 ;;		line 288 in file "mcc_generated_files/uart2.c"
 12984 ;; Parameters:    Size  Location     Type
 12985 ;;		None
 12986 ;; Auto vars:     Size  Location     Type
 12987 ;;		None
 12988 ;; Return value:  Size  Location     Type
 12989 ;;                  1    wreg      void 
 12990 ;; Registers used:
 12991 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12992 ;; Tracked objects:
 12993 ;;		On entry : 0/3D
 12994 ;;		On exit  : 3F/0
 12995 ;;		Unchanged: 0/0
 12996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13001 ;;Total ram usage:        0 bytes
 13002 ;; Hardware stack levels used:    1
 13003 ;; This function calls:
 13004 ;;		Nothing
 13005 ;; This function is called by:
 13006 ;;		_UART2_Receive_ISR
 13007 ;;		_UART2_DefaultErrorHandler
 13008 ;; This function uses a non-reentrant model
 13009 ;;
 13010                           
 13011                           	psect	text92
 13012  00523C                     __ptext92:
 13013                           	opt callstack 0
 13014  00523C                     _UART2_RxDataHandler:
 13015                           	opt callstack 18
 13016                           
 13017                           ;mcc_generated_files/uart2.c: 290:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 13018                           
 13019                           ; BSR set to: 0
 13020                           ;incstack = 0
 13021  00523C  0E3A               	movlw	low _uart2RxBuffer
 13022  00523E  2459               	addwf	_uart2RxHead^0,w,c	;volatile
 13023  005240  6ED9               	movwf	fsr2l,c
 13024  005242  6ADA               	clrf	fsr2h,c
 13025  005244  0E01               	movlw	high _uart2RxBuffer
 13026  005246  22DA               	addwfc	fsr2h,f,c
 13027  005248  006F F743 FFDF     	movff	15824,indf2	;volatile
 13028  00524E  2A59               	incf	_uart2RxHead^0,f,c	;volatile
 13029                           
 13030                           ;mcc_generated_files/uart2.c: 291:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 13031  005250  0E07               	movlw	7
 13032  005252  6459               	cpfsgt	_uart2RxHead^0,c
 13033  005254  D002               	goto	i2l4962
 13034                           
 13035                           ;mcc_generated_files/uart2.c: 292:     {;mcc_generated_files/uart2.c: 293:         uart2
      +                          RxHead = 0;
 13036  005256  0E00               	movlw	0
 13037  005258  6E59               	movwf	_uart2RxHead^0,c	;volatile
 13038  00525A                     i2l4962:
 13039                           
 13040                           ;mcc_generated_files/uart2.c: 295:     uart2RxCount++;
 13041  00525A  0100               	movlb	0	; () banked
 13042  00525C  2BA3               	incf	_uart2RxCount& (0+255),f,b	;volatile
 13043                           
 13044                           ; BSR set to: 0
 13045  00525E  0012               	return		;funcret
 13046  005260                     __end_of_UART2_RxDataHandler:
 13047                           	opt callstack 0
 13048                           
 13049 ;; *************** function _TMR6_ISR *****************
 13050 ;; Defined at:
 13051 ;;		line 168 in file "mcc_generated_files/tmr6.c"
 13052 ;; Parameters:    Size  Location     Type
 13053 ;;		None
 13054 ;; Auto vars:     Size  Location     Type
 13055 ;;		None
 13056 ;; Return value:  Size  Location     Type
 13057 ;;                  1    wreg      void 
 13058 ;; Registers used:
 13059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 13060 ;; Tracked objects:
 13061 ;;		On entry : 0/0
 13062 ;;		On exit  : 0/0
 13063 ;;		Unchanged: 0/0
 13064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13069 ;;Total ram usage:        0 bytes
 13070 ;; Hardware stack levels used:    1
 13071 ;; Hardware stack levels required when called:    1
 13072 ;; This function calls:
 13073 ;;		Absolute function
 13074 ;;		_TMR6_DefaultInterruptHandler
 13075 ;; This function is called by:
 13076 ;;		Interrupt level 2
 13077 ;; This function uses a non-reentrant model
 13078 ;;
 13079                           
 13080                           	psect	text93
 13081  005118                     __ptext93:
 13082                           	opt callstack 0
 13083  005118                     _TMR6_ISR:
 13084                           	opt callstack 19
 13085                           
 13086                           ;mcc_generated_files/tmr6.c: 172:  PIR9bits.TMR6IF = 0;
 13087                           
 13088                           ; BSR set to: 0
 13089                           ;incstack = 0
 13090  005118  0139               	movlb	57	; () banked
 13091  00511A  91A9               	bcf	169,0,b	;volatile
 13092                           
 13093                           ; BSR set to: 57
 13094                           ;mcc_generated_files/tmr6.c: 174:  if (TMR6_InterruptHandler) {
 13095  00511C  0101               	movlb	1	; () banked
 13096  00511E  5169               	movf	_TMR6_InterruptHandler& (0+255),w,b
 13097  005120  116A               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 13098  005122  116B               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 13099  005124  B4D8               	btfsc	status,2,c
 13100  005126  0011               	retfie		f
 13101                           
 13102                           ; BSR set to: 1
 13103                           ;mcc_generated_files/tmr6.c: 175:   TMR6_InterruptHandler();
 13104  005128  D801               	call	i2u567_48
 13105  00512A  0011               	retfie		f
 13106  00512C                     i2u567_48:
 13107  00512C  0005               	push	
 13108  00512E  6EFA               	movwf	pclath,c
 13109  005130  5169               	movf	_TMR6_InterruptHandler& (0+255),w,b
 13110  005132  6EFD               	movwf	tosl,c
 13111  005134  516A               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 13112  005136  6EFE               	movwf	tosh,c
 13113  005138  516B               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 13114  00513A  6EFF               	movwf	tosu,c
 13115  00513C  50FA               	movf	pclath,w,c
 13116  00513E  0012               	return		;indir
 13117  005140                     __end_of_TMR6_ISR:
 13118                           	opt callstack 0
 13119                           
 13120 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 13121 ;; Defined at:
 13122 ;;		line 184 in file "mcc_generated_files/tmr6.c"
 13123 ;; Parameters:    Size  Location     Type
 13124 ;;		None
 13125 ;; Auto vars:     Size  Location     Type
 13126 ;;  i               1    2[COMRAM] unsigned char 
 13127 ;; Return value:  Size  Location     Type
 13128 ;;                  1    wreg      void 
 13129 ;; Registers used:
 13130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13131 ;; Tracked objects:
 13132 ;;		On entry : 3F/1
 13133 ;;		On exit  : 3F/1
 13134 ;;		Unchanged: 3F/0
 13135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13137 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13138 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13139 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13140 ;;Total ram usage:        3 bytes
 13141 ;; Hardware stack levels used:    1
 13142 ;; This function calls:
 13143 ;;		Nothing
 13144 ;; This function is called by:
 13145 ;;		_TMR6_Initialize
 13146 ;;		_TMR6_ISR
 13147 ;; This function uses a non-reentrant model
 13148 ;;
 13149                           
 13150                           	psect	text94
 13151  004E74                     __ptext94:
 13152                           	opt callstack 0
 13153  004E74                     _TMR6_DefaultInterruptHandler:
 13154                           	opt callstack 19
 13155                           
 13156                           ; BSR set to: 1
 13157                           ;mcc_generated_files/tmr6.c: 186:  uint8_t i;;mcc_generated_files/tmr6.c: 190:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 13158                           
 13159                           ;incstack = 0
 13160  004E74  0E00               	movlw	0
 13161  004E76  6E03               	movwf	TMR6_DefaultInterruptHandler@i^0,c
 13162  004E78                     i2l5526:
 13163                           
 13164                           ; BSR set to: 1
 13165                           ;mcc_generated_files/tmr6.c: 191:   if (tickCount[i] != 0) {
 13166  004E78  5003               	movf	TMR6_DefaultInterruptHandler@i^0,w,c
 13167  004E7A  0D02               	mullw	2
 13168  004E7C  0E20               	movlw	low _tickCount
 13169  004E7E  24F3               	addwf	243,w,c
 13170  004E80  6ED9               	movwf	fsr2l,c
 13171  004E82  0E01               	movlw	high _tickCount
 13172  004E84  20F4               	addwfc	prodh,w,c
 13173  004E86  6EDA               	movwf	fsr2h,c
 13174  004E88  50DE               	movf	postinc2,w,c
 13175  004E8A  10DE               	iorwf	postinc2,w,c
 13176  004E8C  B4D8               	btfsc	status,2,c
 13177  004E8E  D00B               	goto	i2l5530
 13178                           
 13179                           ; BSR set to: 1
 13180                           ;mcc_generated_files/tmr6.c: 192:    tickCount[i]--;
 13181  004E90  5003               	movf	TMR6_DefaultInterruptHandler@i^0,w,c
 13182  004E92  0D02               	mullw	2
 13183  004E94  0E20               	movlw	low _tickCount
 13184  004E96  24F3               	addwf	243,w,c
 13185  004E98  6ED9               	movwf	fsr2l,c
 13186  004E9A  0E01               	movlw	high _tickCount
 13187  004E9C  20F4               	addwfc	prodh,w,c
 13188  004E9E  6EDA               	movwf	fsr2h,c
 13189  004EA0  06DE               	decf	postinc2,f,c
 13190  004EA2  0E00               	movlw	0
 13191  004EA4  5ADD               	subwfb	postdec2,f,c
 13192  004EA6                     i2l5530:
 13193                           
 13194                           ; BSR set to: 1
 13195                           ;mcc_generated_files/tmr6.c: 194:  }
 13196  004EA6  2A03               	incf	TMR6_DefaultInterruptHandler@i^0,f,c
 13197                           
 13198                           ; BSR set to: 1
 13199  004EA8  0E08               	movlw	8
 13200  004EAA  6403               	cpfsgt	TMR6_DefaultInterruptHandler@i^0,c
 13201  004EAC  D7E5               	goto	i2l5526
 13202  004EAE  0012               	return	
 13203  004EB0                     __end_of_TMR6_DefaultInterruptHandler:
 13204                           	opt callstack 0
 13205                           
 13206 ;; *************** function _TMR5_ISR *****************
 13207 ;; Defined at:
 13208 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 13209 ;; Parameters:    Size  Location     Type
 13210 ;;		None
 13211 ;; Auto vars:     Size  Location     Type
 13212 ;;		None
 13213 ;; Return value:  Size  Location     Type
 13214 ;;                  1    wreg      void 
 13215 ;; Registers used:
 13216 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 13217 ;; Tracked objects:
 13218 ;;		On entry : 0/0
 13219 ;;		On exit  : 3F/1
 13220 ;;		Unchanged: 0/0
 13221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13226 ;;Total ram usage:        0 bytes
 13227 ;; Hardware stack levels used:    1
 13228 ;; Hardware stack levels required when called:    2
 13229 ;; This function calls:
 13230 ;;		_TMR5_CallBack
 13231 ;;		_TMR5_WriteTimer
 13232 ;; This function is called by:
 13233 ;;		Interrupt level 2
 13234 ;; This function uses a non-reentrant model
 13235 ;;
 13236                           
 13237                           	psect	text95
 13238  004FC8                     __ptext95:
 13239                           	opt callstack 0
 13240  004FC8                     _TMR5_ISR:
 13241                           	opt callstack 18
 13242                           
 13243                           ;mcc_generated_files/tmr5.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr5.c: 171:     PIR8bits.TMR5IF = 0;
 13244                           
 13245                           ; BSR set to: 1
 13246                           ;incstack = 0
 13247  004FC8  0139               	movlb	57	; () banked
 13248  004FCA  9DA8               	bcf	168,6,b	;volatile
 13249                           
 13250                           ; BSR set to: 57
 13251                           ;mcc_generated_files/tmr5.c: 172:     TMR5_WriteTimer(timer5ReloadVal);
 13252  004FCC  0060  F648  F004   	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 13253  004FD2  0060  F64C  F005   	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 13254  004FD8  EC30  F029         	call	_TMR5_WriteTimer	;wreg free
 13255                           
 13256                           ; BSR set to: 57
 13257                           ;mcc_generated_files/tmr5.c: 175:     if (++CountCallBack >= 50)
 13258  004FDC  0101               	movlb	1	; () banked
 13259  004FDE  4B90               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 13260  004FE0  2B91               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 13261  004FE2  5191               	movf	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 13262  004FE4  E104               	bnz	i2u568_40
 13263  004FE6  0E32               	movlw	50
 13264  004FE8  5D90               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 13265  004FEA  A0D8               	btfss	status,0,c
 13266  004FEC  0011               	retfie		f
 13267  004FEE                     i2u568_40:
 13268                           
 13269                           ; BSR set to: 1
 13270                           ;mcc_generated_files/tmr5.c: 176:     {;mcc_generated_files/tmr5.c: 178:         TMR5_Ca
      +                          llBack();
 13271  004FEE  EC64  F029         	call	_TMR5_CallBack	;wreg free
 13272                           
 13273                           ;mcc_generated_files/tmr5.c: 181:         CountCallBack = 0;
 13274  004FF2  0E00               	movlw	0
 13275  004FF4  0101               	movlb	1	; () banked
 13276  004FF6  6F91               	movwf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 13277  004FF8  0E00               	movlw	0
 13278  004FFA  6F90               	movwf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 13279                           
 13280                           ; BSR set to: 1
 13281  004FFC  0011               	retfie		f
 13282  004FFE                     __end_of_TMR5_ISR:
 13283                           	opt callstack 0
 13284                           
 13285 ;; *************** function _TMR5_WriteTimer *****************
 13286 ;; Defined at:
 13287 ;;		line 129 in file "mcc_generated_files/tmr5.c"
 13288 ;; Parameters:    Size  Location     Type
 13289 ;;  timerVal        2    3[COMRAM] unsigned short 
 13290 ;; Auto vars:     Size  Location     Type
 13291 ;;		None
 13292 ;; Return value:  Size  Location     Type
 13293 ;;                  1    wreg      void 
 13294 ;; Registers used:
 13295 ;;		None
 13296 ;; Tracked objects:
 13297 ;;		On entry : 3F/39
 13298 ;;		On exit  : 3F/39
 13299 ;;		Unchanged: 3E/0
 13300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13301 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13304 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13305 ;;Total ram usage:        2 bytes
 13306 ;; Hardware stack levels used:    1
 13307 ;; This function calls:
 13308 ;;		Nothing
 13309 ;; This function is called by:
 13310 ;;		_TMR5_ISR
 13311 ;; This function uses a non-reentrant model
 13312 ;;
 13313                           
 13314                           	psect	text96
 13315  005260                     __ptext96:
 13316                           	opt callstack 0
 13317  005260                     _TMR5_WriteTimer:
 13318                           	opt callstack 19
 13319                           
 13320                           ; BSR set to: 57
 13321                           ;mcc_generated_files/tmr5.c: 129: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 130: {;mcc_generated_files/tmr5.c: 131:     if (T5CONbits.NOT_SYNC == 1)
 13322                           
 13323                           ; BSR set to: 1
 13324                           ;incstack = 0
 13325  005260  A49A               	btfss	154,2,c	;volatile
 13326  005262  D009               	goto	i2l776
 13327                           
 13328                           ; BSR set to: 57
 13329                           ;mcc_generated_files/tmr5.c: 132:     {;mcc_generated_files/tmr5.c: 134:         T5CONbi
      +                          ts.TMR5ON = 0;
 13330  005264  909A               	bcf	154,0,c	;volatile
 13331                           
 13332                           ;mcc_generated_files/tmr5.c: 137:         TMR5H = (timerVal >> 8);
 13333  005266  0060  F017  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 13334                           
 13335                           ;mcc_generated_files/tmr5.c: 138:         TMR5L = timerVal;
 13336  00526C  0060  F013  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 13337                           
 13338                           ;mcc_generated_files/tmr5.c: 141:         T5CONbits.TMR5ON =1;
 13339  005272  809A               	bsf	154,0,c	;volatile
 13340                           
 13341                           ;mcc_generated_files/tmr5.c: 142:     }
 13342  005274  0012               	return	
 13343  005276                     i2l776:
 13344                           
 13345                           ; BSR set to: 57
 13346                           ;mcc_generated_files/tmr5.c: 144:     {;mcc_generated_files/tmr5.c: 146:         TMR5H =
      +                           (timerVal >> 8);
 13347  005276  0060  F017  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 13348                           
 13349                           ;mcc_generated_files/tmr5.c: 147:         TMR5L = timerVal;
 13350  00527C  0060  F013  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 13351                           
 13352                           ; BSR set to: 57
 13353  005282  0012               	return		;funcret
 13354  005284                     __end_of_TMR5_WriteTimer:
 13355                           	opt callstack 0
 13356                           
 13357 ;; *************** function _TMR5_CallBack *****************
 13358 ;; Defined at:
 13359 ;;		line 185 in file "mcc_generated_files/tmr5.c"
 13360 ;; Parameters:    Size  Location     Type
 13361 ;;		None
 13362 ;; Auto vars:     Size  Location     Type
 13363 ;;		None
 13364 ;; Return value:  Size  Location     Type
 13365 ;;                  1    wreg      void 
 13366 ;; Registers used:
 13367 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 13368 ;; Tracked objects:
 13369 ;;		On entry : 3F/1
 13370 ;;		On exit  : 0/0
 13371 ;;		Unchanged: 0/0
 13372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13377 ;;Total ram usage:        0 bytes
 13378 ;; Hardware stack levels used:    1
 13379 ;; Hardware stack levels required when called:    1
 13380 ;; This function calls:
 13381 ;;		Absolute function
 13382 ;;		_TMR5_DefaultInterruptHandler
 13383 ;; This function is called by:
 13384 ;;		_TMR5_ISR
 13385 ;; This function uses a non-reentrant model
 13386 ;;
 13387                           
 13388                           	psect	text97
 13389  0052C8                     __ptext97:
 13390                           	opt callstack 0
 13391  0052C8                     _TMR5_CallBack:
 13392                           	opt callstack 18
 13393                           
 13394                           ; BSR set to: 1
 13395                           ;mcc_generated_files/tmr5.c: 188:     if(TMR5_InterruptHandler)
 13396                           
 13397                           ; BSR set to: 57
 13398                           ;incstack = 0
 13399  0052C8  5166               	movf	_TMR5_InterruptHandler& (0+255),w,b
 13400  0052CA  1167               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 13401  0052CC  1168               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 13402  0052CE  B4D8               	btfsc	status,2,c
 13403  0052D0  0012               	return	
 13404                           
 13405                           ; BSR set to: 1
 13406                           ;mcc_generated_files/tmr5.c: 189:     {;mcc_generated_files/tmr5.c: 190:         TMR5_In
      +                          terruptHandler();
 13407  0052D2  D801               	call	i2u504_48
 13408  0052D4  0012               	return	
 13409  0052D6                     i2u504_48:
 13410  0052D6  0005               	push	
 13411  0052D8  6EFA               	movwf	pclath,c
 13412  0052DA  5166               	movf	_TMR5_InterruptHandler& (0+255),w,b
 13413  0052DC  6EFD               	movwf	tosl,c
 13414  0052DE  5167               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 13415  0052E0  6EFE               	movwf	tosh,c
 13416  0052E2  5168               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 13417  0052E4  6EFF               	movwf	tosu,c
 13418  0052E6  50FA               	movf	pclath,w,c
 13419  0052E8  0012               	return		;indir
 13420  0052EA                     __end_of_TMR5_CallBack:
 13421                           	opt callstack 0
 13422                           
 13423 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 13424 ;; Defined at:
 13425 ;;		line 198 in file "mcc_generated_files/tmr5.c"
 13426 ;; Parameters:    Size  Location     Type
 13427 ;;		None
 13428 ;; Auto vars:     Size  Location     Type
 13429 ;;		None
 13430 ;; Return value:  Size  Location     Type
 13431 ;;                  1    wreg      void 
 13432 ;; Registers used:
 13433 ;;		wreg, status,2, status,0
 13434 ;; Tracked objects:
 13435 ;;		On entry : 3F/1
 13436 ;;		On exit  : 3F/1
 13437 ;;		Unchanged: 3F/0
 13438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13441 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13442 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13443 ;;Total ram usage:        1 bytes
 13444 ;; Hardware stack levels used:    1
 13445 ;; This function calls:
 13446 ;;		Nothing
 13447 ;; This function is called by:
 13448 ;;		_TMR5_Initialize
 13449 ;;		_TMR5_CallBack
 13450 ;; This function uses a non-reentrant model
 13451 ;;
 13452                           
 13453                           	psect	text98
 13454  005358                     __ptext98:
 13455                           	opt callstack 0
 13456  005358                     _TMR5_DefaultInterruptHandler:
 13457                           	opt callstack 18
 13458                           
 13459                           ; BSR set to: 1
 13460                           ;mcc_generated_files/tmr5.c: 201:   LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 13461                           
 13462                           ;incstack = 0
 13463  005358  A0BE               	btfss	190,0,c	;volatile
 13464  00535A  D002               	goto	i2u470_40
 13465  00535C  0E01               	movlw	1
 13466  00535E  D001               	goto	i2u470_46
 13467  005360                     i2u470_40:
 13468  005360  0E00               	movlw	0
 13469  005362                     i2u470_46:
 13470  005362  0AFF               	xorlw	255
 13471  005364  6E04               	movwf	??_TMR5_DefaultInterruptHandler^0,c
 13472  005366  50BE               	movf	190,w,c	;volatile
 13473  005368  1804               	xorwf	??_TMR5_DefaultInterruptHandler^0,w,c
 13474  00536A  0BFE               	andlw	-2
 13475  00536C  1804               	xorwf	??_TMR5_DefaultInterruptHandler^0,w,c
 13476  00536E  6EBE               	movwf	190,c	;volatile
 13477                           
 13478                           ; BSR set to: 1
 13479  005370  0012               	return		;funcret
 13480  005372                     __end_of_TMR5_DefaultInterruptHandler:
 13481                           	opt callstack 0
 13482                           
 13483                           ;
 13484                           ; Interrupt Vector Table @ 0x8
 13485                           ;
 13486                           
 13487                           	psect	ivt0x8
 13488  000008                     __pivt0x8:
 13489                           	opt callstack 0
 13490  000008                     ivt0x8_base:
 13491                           	opt callstack 0
 13492                           
 13493                           ; Vector 0 : SWINT
 13494  000008  153D               	dw	_Default_ISR shr (0+2)
 13495                           
 13496                           ; Vector 1 : HLVD
 13497  00000A  153D               	dw	_Default_ISR shr (0+2)
 13498                           
 13499                           ; Vector 2 : OSF
 13500  00000C  153D               	dw	_Default_ISR shr (0+2)
 13501                           
 13502                           ; Vector 3 : CSW
 13503  00000E  153D               	dw	_Default_ISR shr (0+2)
 13504                           
 13505                           ; Vector 4 : NVM
 13506  000010  153D               	dw	_Default_ISR shr (0+2)
 13507                           
 13508                           ; Vector 5 : SCAN
 13509  000012  153D               	dw	_Default_ISR shr (0+2)
 13510                           
 13511                           ; Vector 6 : CRC
 13512  000014  153D               	dw	_Default_ISR shr (0+2)
 13513                           
 13514                           ; Vector 7 : IOC
 13515  000016  153D               	dw	_Default_ISR shr (0+2)
 13516                           
 13517                           ; Vector 8 : INT0
 13518  000018  153D               	dw	_Default_ISR shr (0+2)
 13519                           
 13520                           ; Vector 9 : ZCD
 13521  00001A  153D               	dw	_Default_ISR shr (0+2)
 13522                           
 13523                           ; Vector 10 : AD
 13524  00001C  153D               	dw	_Default_ISR shr (0+2)
 13525                           
 13526                           ; Vector 11 : ADT
 13527  00001E  153D               	dw	_Default_ISR shr (0+2)
 13528                           
 13529                           ; Vector 12 : CMP1
 13530  000020  153D               	dw	_Default_ISR shr (0+2)
 13531                           
 13532                           ; Vector 13 : SMT1
 13533  000022  153D               	dw	_Default_ISR shr (0+2)
 13534                           
 13535                           ; Vector 14 : SMT1PRA
 13536  000024  153D               	dw	_Default_ISR shr (0+2)
 13537                           
 13538                           ; Vector 15 : SMT1PRW
 13539  000026  153D               	dw	_Default_ISR shr (0+2)
 13540                           
 13541                           ; Vector 16 : DMA1SCNT
 13542  000028  153D               	dw	_Default_ISR shr (0+2)
 13543                           
 13544                           ; Vector 17 : DMA1DCNT
 13545  00002A  153D               	dw	_Default_ISR shr (0+2)
 13546                           
 13547                           ; Vector 18 : DMA1OR
 13548  00002C  153D               	dw	_Default_ISR shr (0+2)
 13549                           
 13550                           ; Vector 19 : DMA1A
 13551  00002E  153D               	dw	_Default_ISR shr (0+2)
 13552                           
 13553                           ; Vector 20 : SPI1RX
 13554  000030  153D               	dw	_Default_ISR shr (0+2)
 13555                           
 13556                           ; Vector 21 : SPI1TX
 13557  000032  153D               	dw	_Default_ISR shr (0+2)
 13558                           
 13559                           ; Vector 22 : SPI1
 13560  000034  153D               	dw	_Default_ISR shr (0+2)
 13561                           
 13562                           ; Vector 23 : I2C1RX
 13563  000036  153D               	dw	_Default_ISR shr (0+2)
 13564                           
 13565                           ; Vector 24 : I2C1TX
 13566  000038  153D               	dw	_Default_ISR shr (0+2)
 13567                           
 13568                           ; Vector 25 : I2C1
 13569  00003A  153D               	dw	_Default_ISR shr (0+2)
 13570                           
 13571                           ; Vector 26 : I2C1E
 13572  00003C  153D               	dw	_Default_ISR shr (0+2)
 13573                           
 13574                           ; Vector 27 : U1RX
 13575  00003E  146B               	dw	_UART1_rx_vect_isr shr (0+2)
 13576                           
 13577                           ; Vector 28 : U1TX
 13578  000040  1462               	dw	_UART1_tx_vect_isr shr (0+2)
 13579                           
 13580                           ; Vector 29 : U1E
 13581  000042  153D               	dw	_Default_ISR shr (0+2)
 13582                           
 13583                           ; Vector 30 : U1
 13584  000044  153D               	dw	_Default_ISR shr (0+2)
 13585                           
 13586                           ; Vector 31 : TMR0
 13587  000046  153D               	dw	_Default_ISR shr (0+2)
 13588                           
 13589                           ; Vector 32 : TMR1
 13590  000048  153D               	dw	_Default_ISR shr (0+2)
 13591                           
 13592                           ; Vector 33 : TMR1G
 13593  00004A  153D               	dw	_Default_ISR shr (0+2)
 13594                           
 13595                           ; Vector 34 : TMR2
 13596  00004C  153D               	dw	_Default_ISR shr (0+2)
 13597                           
 13598                           ; Vector 35 : CCP1
 13599  00004E  153D               	dw	_Default_ISR shr (0+2)
 13600                           
 13601                           ; Vector 36 : Undefined
 13602  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 13603                           
 13604                           ; Vector 37 : NCO1
 13605  000052  153D               	dw	_Default_ISR shr (0+2)
 13606                           
 13607                           ; Vector 38 : CWG1
 13608  000054  153D               	dw	_Default_ISR shr (0+2)
 13609                           
 13610                           ; Vector 39 : CLC1
 13611  000056  153D               	dw	_Default_ISR shr (0+2)
 13612                           
 13613                           ; Vector 40 : INT1
 13614  000058  153D               	dw	_Default_ISR shr (0+2)
 13615                           
 13616                           ; Vector 41 : CMP2
 13617  00005A  153D               	dw	_Default_ISR shr (0+2)
 13618                           
 13619                           ; Vector 42 : DMA2SCNT
 13620  00005C  153D               	dw	_Default_ISR shr (0+2)
 13621                           
 13622                           ; Vector 43 : DMA2DCNT
 13623  00005E  153D               	dw	_Default_ISR shr (0+2)
 13624                           
 13625                           ; Vector 44 : DMA2OR
 13626  000060  153D               	dw	_Default_ISR shr (0+2)
 13627                           
 13628                           ; Vector 45 : DMA2A
 13629  000062  153D               	dw	_Default_ISR shr (0+2)
 13630                           
 13631                           ; Vector 46 : I2C2RX
 13632  000064  153D               	dw	_Default_ISR shr (0+2)
 13633                           
 13634                           ; Vector 47 : I2C2TX
 13635  000066  153D               	dw	_Default_ISR shr (0+2)
 13636                           
 13637                           ; Vector 48 : I2C2
 13638  000068  153D               	dw	_Default_ISR shr (0+2)
 13639                           
 13640                           ; Vector 49 : I2C2E
 13641  00006A  153D               	dw	_Default_ISR shr (0+2)
 13642                           
 13643                           ; Vector 50 : U2RX
 13644  00006C  1486               	dw	_UART2_rx_vect_isr shr (0+2)
 13645                           
 13646                           ; Vector 51 : U2TX
 13647  00006E  147D               	dw	_UART2_tx_vect_isr shr (0+2)
 13648                           
 13649                           ; Vector 52 : U2E
 13650  000070  153D               	dw	_Default_ISR shr (0+2)
 13651                           
 13652                           ; Vector 53 : U2
 13653  000072  153D               	dw	_Default_ISR shr (0+2)
 13654                           
 13655                           ; Vector 54 : TMR3
 13656  000074  153D               	dw	_Default_ISR shr (0+2)
 13657                           
 13658                           ; Vector 55 : TMR3G
 13659  000076  153D               	dw	_Default_ISR shr (0+2)
 13660                           
 13661                           ; Vector 56 : TMR4
 13662  000078  153D               	dw	_Default_ISR shr (0+2)
 13663                           
 13664                           ; Vector 57 : CCP2
 13665  00007A  153D               	dw	_Default_ISR shr (0+2)
 13666                           
 13667                           ; Vector 58 : Undefined
 13668  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 13669                           
 13670                           ; Vector 59 : CWG2
 13671  00007E  153D               	dw	_Default_ISR shr (0+2)
 13672                           
 13673                           ; Vector 60 : CLC2
 13674  000080  153D               	dw	_Default_ISR shr (0+2)
 13675                           
 13676                           ; Vector 61 : INT2
 13677  000082  153D               	dw	_Default_ISR shr (0+2)
 13678                           
 13679                           ; Vector 62 : Undefined
 13680  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 13681                           
 13682                           ; Vector 63 : Undefined
 13683  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 13684                           
 13685                           ; Vector 64 : Undefined
 13686  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 13687                           
 13688                           ; Vector 65 : Undefined
 13689  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 13690                           
 13691                           ; Vector 66 : Undefined
 13692  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 13693                           
 13694                           ; Vector 67 : Undefined
 13695  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 13696                           
 13697                           ; Vector 68 : Undefined
 13698  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 13699                           
 13700                           ; Vector 69 : Undefined
 13701  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 13702                           
 13703                           ; Vector 70 : TMR5
 13704  000094  13F2               	dw	_TMR5_ISR shr (0+2)
 13705                           
 13706                           ; Vector 71 : TMR5G
 13707  000096  153D               	dw	_Default_ISR shr (0+2)
 13708                           
 13709                           ; Vector 72 : TMR6
 13710  000098  1446               	dw	_TMR6_ISR shr (0+2)
 13711                           
 13712                           ; Vector 73 : CCP3
 13713  00009A  153D               	dw	_Default_ISR shr (0+2)
 13714                           
 13715                           ; Vector 74 : CWG3
 13716  00009C  153D               	dw	_Default_ISR shr (0+2)
 13717                           
 13718                           ; Vector 75 : CLC3
 13719  00009E  153D               	dw	_Default_ISR shr (0+2)
 13720                           
 13721                           ; Vector 76 : Undefined
 13722  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 13723                           
 13724                           ; Vector 77 : Undefined
 13725  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 13726                           
 13727                           ; Vector 78 : Undefined
 13728  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 13729                           
 13730                           ; Vector 79 : Undefined
 13731  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 13732                           
 13733                           ; Vector 80 : CCP4
 13734  0000A8  153D               	dw	_Default_ISR shr (0+2)
 13735                           
 13736                           ; Vector 81 : CLC4
 13737  0000AA  153D               	dw	_Default_ISR shr (0+2)
 13738  0000AC                     ivt0x8_undefint:
 13739                           	opt callstack 0
 13740  0000AC  00FF               	reset	
 13741                           
 13742                           	psect	text99
 13743  000000                     __ptext99:
 13744                           	opt callstack 0
 13745                           
 13746                           	psect	rparam
 13747  0000                     tosu	equ	0x3FFF
 13748                           tosh	equ	0x3FFE
 13749                           tosl	equ	0x3FFD
 13750                           stkptr	equ	0x3FFC
 13751                           pclatu	equ	0x3FFB
 13752                           pclath	equ	0x3FFA
 13753                           pcl	equ	0x3FF9
 13754                           tblptru	equ	0x3FF8
 13755                           tblptrh	equ	0x3FF7
 13756                           tblptrl	equ	0x3FF6
 13757                           tablat	equ	0x3FF5
 13758                           prodh	equ	0x3FF4
 13759                           prodl	equ	0x3FF3
 13760                           indf0	equ	0x3FEF
 13761                           postinc0	equ	0x3FEE
 13762                           postdec0	equ	0x3FED
 13763                           preinc0	equ	0x3FEC
 13764                           plusw0	equ	0x3FEB
 13765                           fsr0h	equ	0x3FEA
 13766                           fsr0l	equ	0x3FE9
 13767                           wreg	equ	0x3FE8
 13768                           indf1	equ	0x3FE7
 13769                           postinc1	equ	0x3FE6
 13770                           postdec1	equ	0x3FE5
 13771                           preinc1	equ	0x3FE4
 13772                           plusw1	equ	0x3FE3
 13773                           fsr1h	equ	0x3FE2
 13774                           fsr1l	equ	0x3FE1
 13775                           bsr	equ	0x3FE0
 13776                           indf2	equ	0x3FDF
 13777                           postinc2	equ	0x3FDE
 13778                           postdec2	equ	0x3FDD
 13779                           preinc2	equ	0x3FDC
 13780                           plusw2	equ	0x3FDB
 13781                           fsr2h	equ	0x3FDA
 13782                           fsr2l	equ	0x3FD9
 13783                           status	equ	0x3FD8


Data Sizes:
    Strings     78
    Constant    0
    Data        68
    BSS         209
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     85      90
    BANK0           160     62      78
    BANK1           256      0     224
    BANK2           256    128     160
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[32]), 
		 -> STR_16(CODE[4]), STR_14(CODE[4]), STR_12(CODE[4]), STR_10(CODE[4]), 
		 -> STR_8(CODE[4]), STR_6(CODE[4]), STR_4(CODE[5]), main@buffer(BANK0[24]), 
		 -> work_sw@buffer(BANK2[128]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 128
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[32]), 
		 -> STR_16(CODE[4]), STR_14(CODE[4]), STR_12(CODE[4]), STR_10(CODE[4]), 
		 -> STR_8(CODE[4]), STR_6(CODE[4]), STR_4(CODE[5]), main@buffer(BANK0[24]), 
		 -> work_sw@buffer(BANK2[128]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_15(CODE[3]), STR_13(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), 
		 -> STR_7(CODE[3]), STR_5(CODE[3]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_3(CODE[12]), STR_2(CODE[17]), STR_1(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    S3191_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_15(CODE[3]), STR_13(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), 
		 -> STR_7(CODE[3]), STR_5(CODE[3]), STR_3(CODE[12]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 17
		 -> STR_15(CODE[3]), STR_13(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), 
		 -> STR_7(CODE[3]), STR_5(CODE[3]), STR_3(CODE[12]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), STR_16(CODE[4]), STR_14(CODE[4]), 
		 -> STR_12(CODE[4]), STR_10(CODE[4]), STR_8(CODE[4]), STR_6(CODE[4]), 
		 -> STR_4(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), STR_16(CODE[4]), STR_14(CODE[4]), 
		 -> STR_12(CODE[4]), STR_10(CODE[4]), STR_8(CODE[4]), STR_6(CODE[4]), 
		 -> STR_4(CODE[5]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), STR_16(CODE[4]), 
		 -> STR_14(CODE[4]), STR_12(CODE[4]), STR_10(CODE[4]), STR_8(CODE[4]), 
		 -> STR_6(CODE[4]), STR_4(CODE[5]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    eaDogM_WriteStringAtPos@strPtr	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    eaDogM_WriteString@strPtr	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    once@once_flag	PTR _Bool  size(2) Largest target is 41
		 -> IO(BANK1[41]), 

    sounds	PTR struct OUT_data1 size(2) Largest target is 41
		 -> IO(BANK1[41]), 

    switches	PTR struct IN_data size(2) Largest target is 41
		 -> IO(BANK1[41]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    UART2_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    UART2_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultErrorHandler(), 

    UART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultOverrunErrorHandler(), 

    UART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultFramingErrorHandler(), 

    UART2_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultErrorHandler(), Absolute function(), 

    UART2_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultOverrunErrorHandler(), Absolute function(), 

    UART2_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultFramingErrorHandler(), Absolute function(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _eaDogM_WriteStringAtPos->_eaDogM_WriteString
    _eaDogM_WriteString->_strlen
    _eaDogM_WriteString->_wdtdelay
    _rand->___omul
    _led_lightshow->___awdiv
    _init_display->_send_lcd_cmd
    _init_display->_send_lcd_cmd_long
    _send_lcd_cmd_long->_wdtdelay
    _eaDogM_WriteCommand->_send_lcd_cmd
    _send_lcd_cmd->_wdtdelay
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART2_Initialize->_UART2_SetErrorHandler
    _UART2_Initialize->_UART2_SetFramingErrorHandler
    _UART2_Initialize->_UART2_SetOverrunErrorHandler
    _UART2_Initialize->_UART2_SetRxInterruptHandler
    _UART2_Initialize->_UART2_SetTxInterruptHandler
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _WaitMs->_StartTimer
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART2_Write
    _abs->___aomod
    _calc_pot->___fltol
    _lp_filter->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___fldiv->___flsub
    ___fltol->_lp_filter

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    _TMR6_ISR->_TMR6_DefaultInterruptHandler

Critical Paths under _TMR5_ISR in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    _TMR5_CallBack->_TMR5_DefaultInterruptHandler

Critical Paths under _main in BANK0

    _main->_Digital232_RW
    _work_sw->_sprintf
    _sprintf->_vfprintf
    _Digital232_init->_printf
    _Digital232_RW->_calc_pot
    _printf->_vfprintf
    _calc_pot->___fltol
    ___fltol->_lp_filter

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_work_sw

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0   99848
                                             34 BANK0     28    28      0
                      _Digital232_RW
                    _Digital232_init
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                            ___awdiv
                            ___fldiv
                           ___xxtofl
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                      _led_lightshow
                               _once
                               _rand
                            _sprintf
                              _srand
                            _work_sw
 ---------------------------------------------------------------------------------
 (1) _work_sw                                            128   128      0   18545
                                              0 BANK2    128   128      0
                         _StartTimer
                          _TimerDone
            _eaDogM_WriteStringAtPos
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16     9      7   14221
                                              4 BANK0     16     9      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     1      3    2786
                                             13 COMRAM     4     1      3
                 _eaDogM_WriteString
                       _send_lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   4     2      2    1419
                                              9 COMRAM     4     2      2
                  _SPI1_Exchange8bit
                             _strlen
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (1) _srand                                                6     4      2     211
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _rand                                                10     8      2     456
                                             29 COMRAM    10     8      2
                             ___omul
 ---------------------------------------------------------------------------------
 (2) ___omul                                              24     8     16     456
                                              5 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (1) _once                                                 2     0      2     332
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _led_lightshow                                        5     3      2    2403
                                             13 COMRAM     5     3      2
                         _StartTimer
                          _TimerDone
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     805
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    2140
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     1      0     734
                                              9 COMRAM     1     1      0
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     1      0     765
                                             10 COMRAM     1     1      0
                       _send_lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd                                         1     1      0     734
                                              9 COMRAM     1     1      0
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (4) _wdtdelay                                             4     0      4     672
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _SPI1_Exchange8bit                                    1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1486
                    _ADCC_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0     605
              _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetOverrunErrorHandler                         3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetFramingErrorHandler                         3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetErrorHandler                                3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     605
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     121
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     121
                                              8 COMRAM     2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      34
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Digital232_init                                      0     0      0   17220
               _ADCC_StartConversion
                         _StartTimer
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                             _printf
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2    1834
                                             10 COMRAM     2     0      2
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _Digital232_RW                                        4     4      0   34104
                                             30 BANK0      4     4      0
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
                 _PWM8_LoadDutyValue
                         _StartTimer
                          _TimerDone
                         _UART2_Read
                        _UART2_Write
                  _UART2_is_rx_ready
                           _calc_pot
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     3      3   13996
                                              4 BANK0      6     3      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             5     1      4   13369
                                             84 COMRAM     1     1      0
                                              0 BANK0      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           37    33      4   12617
                                             70 COMRAM    14    10      4
                               _dtoa
                              _fputc
                               _stoa
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2922
                                             16 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    7129
                                             34 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4863
                                             23 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     400
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2170
                                             16 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1670
                                              7 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      93
                                              6 COMRAM     1     1      0
                        _UART2_Write
 ---------------------------------------------------------------------------------
 (8) _UART2_Write                                          1     1      0      62
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _calc_pot                                             4     2      2   18030
                                             26 BANK0      4     2      2
                            ___flmul
                            ___fltol
                           ___xxtofl
                          _lp_filter
 ---------------------------------------------------------------------------------
 (3) _lp_filter                                           22    14      8   13376
                                             79 COMRAM     2     2      0
                                              0 BANK0     20    12      8
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    3827
                                             46 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    3442
                                              5 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3236
                                             21 COMRAM    25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    2183
                                             54 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     746
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     517
                                             81 COMRAM     4     4      0
                                             20 BANK0      6     2      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                          _lp_filter (ARG)
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      37
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            3     3      0      31
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _StartTimer                                           5     3      2    1322
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   4     2      2     332
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             4     2      2       0
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART2_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART2_DefaultErrorHandler *
   _UART2_DefaultFramingErrorHandler *
   _UART2_DefaultOverrunErrorHandler *
                _UART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART2_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART2_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART2_DefaultErrorHandler                           0     0      0       0
                _UART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART2_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TMR6_ISR                                            0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _TMR6_DefaultInterruptHandler                        3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TMR5_ISR                                            0     0      0     229
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR5_WriteTimer                                     2     0      2     229
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR5_DefaultInterruptHandler                        1     1      0       0
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Digital232_RW
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
     _PWM8_LoadDutyValue
     _StartTimer
     _TimerDone
     _UART2_Read
     _UART2_Write
     _UART2_is_rx_ready
     _calc_pot
       ___flmul
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _lp_filter (ARG)
           ___fladd
           ___fldiv
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl (ARG)
       ___xxtofl
       _lp_filter
         ___fladd
         ___fldiv
           ___fladd (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___flsub
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
         ___xxtofl (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART2_Write
               _fputs
                 _fputc
                   _putch
                     _UART2_Write
               _strlen
           _fputc
             _putch
               _UART2_Write
           _stoa
             _fputc
               _putch
                 _UART2_Write
             _strlen
   _Digital232_init
     _ADCC_StartConversion
     _StartTimer
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART2_Write
               _fputs
                 _fputc
                   _putch
                     _UART2_Write
               _strlen
           _fputc
             _putch
               _UART2_Write
           _stoa
             _fputc
               _putch
                 _UART2_Write
             _strlen
   _SYSTEM_Initialize
     _ADCC_Initialize
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   ___awdiv
   ___fldiv
     ___fladd (ARG)
     ___flmul (ARG)
       ___fladd (ARG)
       ___xxtofl (ARG)
     ___flsub (ARG)
       ___fladd
       ___flmul (ARG)
         ___fladd (ARG)
         ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _eaDogM_WriteCommand
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _SPI1_Exchange8bit
       _strlen
       _wdtdelay
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
   _init_display
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _led_lightshow
     _StartTimer
     _TimerDone
     ___awdiv
   _once
   _rand
     ___omul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _UART2_Write
             _fputs
               _fputc
                 _putch
                   _UART2_Write
             _strlen
         _fputc
           _putch
             _UART2_Write
         _stoa
           _fputc
             _putch
               _UART2_Write
           _strlen
   _srand
   _work_sw
     _StartTimer
     _TimerDone
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _SPI1_Exchange8bit
         _strlen
         _wdtdelay
       _send_lcd_cmd
         _SPI1_Exchange8bit
         _wdtdelay
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART2_Write
               _fputs
                 _fputc
                   _putch
                     _UART2_Write
               _strlen
           _fputc
             _putch
               _UART2_Write
           _stoa
             _fputc
               _putch
                 _UART2_Write
             _strlen

 _Default_ISR (ROOT)

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *
     Absolute function(Fake) *
     _UART2_DefaultErrorHandler *
       _UART2_RxDataHandler
     _UART2_DefaultFramingErrorHandler *
     _UART2_DefaultOverrunErrorHandler *
     _UART2_RxDataHandler *

 _TMR6_ISR (ROOT)
   Absolute function(Fake) *
   _TMR6_DefaultInterruptHandler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     80      A0       9       62.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      E0       7       87.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3E      4E       5       48.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     55      5A       1       94.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     228      58        0.0%
DATA                 0      0     228       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Sep 15 14:33:50 2019

                           _SPI1_Exchange8bit 533E                                  ___fldiv@aexp 004F  
                                ___fldiv@bexp 004E              __end_of_TMR5_SetInterruptHandler 5492  
                   __end_of_UART2_is_rx_ready 54E6                                  ___fldiv@sign 0047  
                          ?_SPI1_Exchange8bit 0001                                   __CFG_CP$OFF 000000  
                                          l68 531C                                            _IO 01A9  
                                ___awdiv@sign 000B                        __end_of_FVR_Initialize 54E0  
                           ??_TMR5_WriteTimer 0006                                   __CFG_LVP$ON 000000  
                               work_sw@buffer 0200                                           l494 4DCE  
                                         _GIE 01FE97                                           l989 534C  
                                         _abs 4E36                           ??_SPI1_Exchange8bit 0006  
                                         _pad 43F8                       __size_of_PMD_Initialize 0022  
               eaDogM_WriteStringAtPos@strPtr 000F                               _TMR2_Initialize 52EA  
                                         prod 003FF3                                           tosl 003FFD  
                                         wreg 003FE8                                  ___flmul@aexp 0023  
                                ___flmul@bexp 0024                               send_lcd_cmd@cmd 000A  
                          _UART1_Transmit_ISR 5030                                 calc_pot@value 007A  
                                ___flmul@sign 0022                                  ___flmul@temp 002D  
                                ___flmul@prod 0029                                 __CFG_BBEN$OFF 000000  
                                __CFG_ZCD$OFF 000000                                  ___fltol@exp1 0079  
                                        ?_abs 0018                                          l2014 3480  
                                        l1206 2BD2                                          l2025 34EE  
                                        l2105 4E66                                          l2026 34EA  
                                        l1242 50D6                                          l1082 226E  
                                        l1171 3730                                          l2044 24A0  
                                        l2061 2766                                          l2053 26D0  
                                        l1093 23E8                                          l2054 26CC  
                                        l1166 3662                                          l1078 21E8  
                                        l1087 22DC                                          l1265 4EC2  
                                        l1089 2322                                          l1371 30DE  
                                        l2092 3C2E                                          l2085 3BA8  
                                        l1358 4432                                          l1369 30D2  
                                        l1398 3A60                          _ADCC_StartConversion 54A6  
                                        l1960 28E6                                          l6200 3DE4  
                                        l6120 4C16                                          l7020 430A  
                                        l7012 42F6                                          l6220 3E80  
                                        l6212 3E42                                          l6108 4570  
                                        l6132 4E1E                                          l6222 3E94  
                                        l6118 4C12                                          l6142 442A  
                                        l6310 3A14                                          ?_pad 0018  
                                        l1975 29DA                                          l1959 2908  
                                        l7008 42E6                                          l1984 2A42  
                                        l6232 3EF2                                          l6216 3E66  
                                        l6128 4E02                                          l6152 448C  
                                        l6144 443C                                          l6320 3A7E  
                                        l1985 2A3E                                          l7026 4326  
                                        l7018 42FE                                          l7042 3BDE  
                                        l6082 4DB8                                          l6138 4418  
                                        l7044 3BE4                                          l7036 3BC0  
                                        l6180 3D38                                          l6236 3F18  
                                        l6228 3EDC                                          l6148 4458  
                                        l6260 30FC                                          l6324 3A9A  
                                        l7054 3C54                                          l7046 3BF0  
                                        l6502 2A1E                                          l6422 2896  
                                        l6182 3D4C                                          l6174 3D12  
                                        l6246 30B6                                          l6342 3B38  
                                        l6334 3B02                                          l7072 3CA4  
                                        l7056 3C60                                          l7048 3C16  
                                        l6360 27D4                                          l6192 3DA8  
                                        l6168 3CEA                                          l6096 4DF0  
                                        l6264 310C                                          l6328 3AB8  
                                        l6530 2ABE                                          l6522 2A98  
                                        l6450 292C                                          l6434 28F4  
                                        l7314 3F6A                                          l6098 4DF2  
                                        l6274 3248                                          l6338 3B1C  
                                        l6700 3496                                          l6460 2952  
                                        l6436 28F8                                          l6380 2818  
                                        l6356 27D0                                          l6196 3DBE  
                                        l6604 39B0                                          l7308 50E0  
                                        l7332 481E                                          l6534 2AC6  
                                        l6294 32AC                                          l7350 493E  
                                        l6624 3328                                          l6536 2AC8  
                                        l6392 283C                                          l6384 281C  
                                        l7504 370A                                          l7344 492E  
                                        l7328 47FA                                          l7258 4D64  
                                        l6730 3566                                          l6706 34B4  
                                        l6458 294E                                          l6298 32C6  
                                        l7530 377C                                          l6740 359E  
                                        l6644 3368                                          l6628 332C  
                                        l6468 2964                                          l7524 3752  
                                        l7460 35F0                                          l7356 4954  
                                        l7372 4986                                          l7700 2D86  
                                        l7604 2B66                                          l6742 35A0  
                                        l6734 3590                                          l6726 3542  
                                        l6670 33D6                                          l6662 33BE  
                                        l6486 29FE                                          l6478 29CA  
                                        l7550 37B8                                          l7518 3734  
                                        l7358 495C                                          l7630 2C26  
                                        l7614 2BB6                                          l6680 3430  
                                        l6656 33A0                                          l6648 336C  
                                        l6832 2678                                          l6496 2A14  
                                        l7480 364A                                          l7472 3632  
                                        l7456 35C4                                          l7376 4994  
                                        l7368 497C                                          l7624 2BFE  
                                        l7608 2B92                                          l7800 221E  
                                        l6762 244C                                          l6594 3994  
                                        l6578 38EA                                          l7490 366C  
                                        l7618 2BDC                                          l7714 5114  
                                        l6780 248C                                          l6764 2450  
                                        l6932 2DE4                                          l6588 3956  
                                        l7484 3656                                          l7476 363E  
                                        l7492 3674                                          l7652 2C94  
                                        l7636 2C4E                                          l6918 5184  
                                        l6694 347E                                          l6862 2742  
                                        l6838 2696                                          l6790 24BE  
                                        l6782 2490                                          l6766 2460  
                                        l6598 399E                                          l7494 36A8  
                                        l7590 2B22                                          l6688 3458  
                                        l6928 2DCC                                          l7672 2CEE  
                                        l7648 2C8A                                          l7808 2274  
                                        l7824 22EC                                          l7760 2140  
                                        l6874 2786                                          l6858 2724  
                                        l6946 3036                                          l7666 2CD6  
                                        l7586 2B1C                                          l7578 2AFA  
                                        l6970 4ABC                                          l7684 2D2E  
                                        l7668 2CE4                                          l7844 2398  
                                        l6982 4BBA                                          l7694 2D5E  
                                        l7782 2198                                          l7790 21EE  
                                        l6992 4294                                          l6984 4BDE  
                                        l7688 2D36                                          l6976 4AE4  
                                        l7768 215E                                          l7866 2402  
                                        STR_1 2001                                          STR_2 2012  
                                        STR_3 2023                                          STR_4 202F  
                                        STR_5 204C                                          STR_6 2048  
                                        STR_7 204C                                          STR_8 2038  
                                        STR_9 204C                                          _LATA 003FBA  
                                        _LATB 003FBB                                          _LATC 003FBC  
                                        _LATD 003FBD                                          _LATE 003FBE  
                                        _T2PR 003FAB                                          u6010 4568  
                                        u6110 4E44                                          u6030 45B0  
                                        u6040 4C40                                          _T6PR 003F93  
                                        u6220 3E98                                          _PMD0 0039C0  
                                        u6141 3D18                                          _PMD1 0039C1  
                                        u6310 30F6                                          _PMD2 0039C2  
                                        u6047 4C32                                          _PMD3 0039C3  
                                        u7120 34E4                                          u6160 3D50  
                                        u6320 3256                                          _PMD4 0039C4  
                                        u6401 39F0                                          _PMD5 0039C5  
                                        u6250 3088                                          _PMD6 0039C6  
                                        _PMD7 0039C7                                          u7300 26C6  
                                        u6340 3278                                          u6260 308A  
                                        u8100 2C0E                                          u6341 3276  
                                        u6350 3286                                          u7160 3550  
                                        u6600 28CA                                          u6360 328A  
                                        u8120 2C36                                          u7170 3574  
                                        u6610 28CC                                          u6290 30C8  
                                        u6450 3AAE                                          u7340 2732  
                                        u7260 24AC                                          u6380 3296  
                                        u6460 3AE2                                          u8220 2CFE  
                                        u8140 2C5E                                          u8060 2BAA  
                                        u7350 2750                                          u8230 2D0E  
                                        u8070 2BC6                                          u8310 417A  
                                        u7440 4282                                          u6640 2910  
                                        u7450 42BA                                          u6490 3B4C  
                                        u8250 2D46                                          u8170 2CA4  
                                        u6467 3AD4                                          u8315 4168  
                                        u7380 2DB2                                          u8260 2D56  
                                        u8180 2CB4                                          u7701 47F4  
                                        u6590 28BA                                          u8270 2D6E  
                                        u7455 42B0                                          u7615 4D1E  
                                        u7616 4D20                                          u8280 2D7E  
                                        u7490 4310                                          u7570 3C6A  
                                        u6850 2AA4                                          u6770 2A22  
                                        u6930 3866                                          u8290 2D96  
                                        u7660 54C0                                          u6790 2A38  
                                        u7655 4F4C                                          u7760 4960  
                                        u8560 23C6                                          u7930 3790  
                                        u7950 37A4                                          _PLLR 01CEE0  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                                 __CFG_FCMEN$ON 000000  
                         ?_UART1_Transmit_ISR 0001                        led_lightshow@alive_led 00A0  
                                        abs@a 0018                                          _dbuf 0280  
                                        _main 2050                                          _dtoa 3050  
                                        _rand 407E                                          _seed 0196  
                                        _once 50EE                                          _prec 009E  
                                        _nout 018A                                          pad@i 001F  
                       __end_of_Digital232_RW 37E8                                          pad@p 001C  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf1 003FE7                                          indf2 003FDF  
                                        fsr1l 003FE1                                          pad@w 0021  
                                        fsr2l 003FD9                                          _stoa 39E6  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                               _timer5ReloadVal 0192  
                              ?_led_lightshow 000E                     __end_of_SPI1_Exchange8bit 5358  
                             ___fldiv@new_exp 0048                 ??_UART1_SetTxInterruptHandler 0009  
               ??_UART2_SetRxInterruptHandler 0009                                 __CFG_CSWEN$ON 000000  
                           _UART1_rx_vect_isr 51AC                                  ___param_bank 000000  
                                 ?_UART2_Read 0001                            ?_UART1_rx_vect_isr 0001  
                                       ??_abs 001A                                         ??_pad 001E  
                             ?_FVR_Initialize 0001                __size_of_OSCILLATOR_Initialize 001C  
                        ??_UART1_Transmit_ISR 0001                 __end_of_OSCILLATOR_Initialize 5322  
                               ___fltol@sign1 0078                               __end_of___aodiv 3E16  
                                       _ADCAP 003EF5                                         _ADACT 003EFE  
                             __end_of___fladd 2AEC                                         ?_main 0001  
                                       ?_dtoa 0023                                         _ADCLK 003EFF  
                             __end_of___aomod 3F4A                                         _ADPCH 003EF1  
                             __end_of___fldiv 35A8                                         ?_rand 001E  
                                       _ADREF 003EFD                               __end_of___awdiv 49A2  
                                       ?_once 0006                                         STR_10 203C  
                                       STR_11 204C                                         STR_12 2040  
                                       STR_13 204C                                         STR_14 2044  
                                       STR_15 204C                                         STR_16 2034  
                               __CFG_WDTE$OFF 000000                                         _ADRPT 003EEC  
                             __end_of___flmul 27A4                               __end_of___flsub 4B4C  
                             __end_of___fltol 4340                                         ?_stoa 0011  
                             ___awdiv@divisor 0008                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                      eaDogM_WriteStringAtPos@c 000E  
                                       _U1P1L 003DEC                                         _U1P3H 003DF1  
                                       _T2CON 003FAC                                         _U1P2L 003DEE  
                                       _U1P3L 003DF0                                         _U2P1L 003DD4  
                                       _U2P2L 003DD6                                         _U2P3L 003DD8  
                    eaDogM_WriteStringAtPos@r 0011                                         _T5CLK 003F9D  
                                       _T2HLT 003FAD                                         _T5CON 003F9A  
                                       _T6CON 003F94                                __CFG_DEBUG$OFF 000000  
                                       _T6HLT 003F95                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         _T2RST 003FAF  
                                       _U1RXB 003DE8                                         _U2UIR 003DE0  
                                       _U1TXB 003DEA                                         _U2RXB 003DD0  
                                       _U2TXB 003DD2                                         i2l344 505C  
                                       _T6TMR 003F92                                         i2l518 508E  
                                       _T6RST 003F97                           ??_UART1_rx_vect_isr 0001  
                                       i2l776 5276                               ___awdiv@counter 000A  
                                       _OSCEN 0039DD                                  vfpfcnvrt@fmt 0049  
                                       _TMR5H 003F99                                         _TMR5L 003F98  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                   _Default_ISR 54F4  
                    eaDogM_WriteString@strPtr 000A                       ??_ADCC_IsConversionDone 0006  
           __size_of_TMR6_SetInterruptHandler 0014                     ?_TMR6_SetInterruptHandler 0006  
                           _UART1_tx_vect_isr 5188                                 __CFG_WRTB$OFF 000000  
                               __CFG_WRTC$OFF 000000                                 __CFG_WRTD$OFF 000000  
                            __end_of_TMR5_ISR 4FFE                              __end_of_TMR6_ISR 5140  
                                       _flags 0056                               _Digital232_init 418C  
                       ?_ADCC_StartConversion 0001                                         _fputc 4558  
                  __size_of_send_lcd_cmd_long 0024                                         _fputs 4DF8  
                          __CFG_MCLRE$EXTMCLR 000000                            ?_UART1_tx_vect_isr 0001  
                                       _srand 4F5A                                         pad@fp 0018  
                                       _width 018C                                         _putch 54CE  
                                       dtoa@d 0025                                         dtoa@i 0045  
                                       main@y 009D                                         dtoa@n 003D  
                                       dtoa@p 0037                                         dtoa@s 003B  
                                       dtoa@w 0039                              led_lightshow@seq 0012  
                                       pclath 003FFA                                         tablat 003FF5  
                   ??_eaDogM_WriteStringAtPos 0011                                         plusw1 003FE3  
                                       plusw2 003FDB                                         stoa@i 001D  
                                       stoa@l 0025                                         stoa@p 0023  
                                       stoa@s 0013                                         stoa@w 001F  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 542E  
                 _UART1_SetRxInterruptHandler 541A                               __end_of_sprintf 4CE8  
                             __end_of_work_sw 491A      __end_of_UART1_DefaultFramingErrorHandler 54FA  
   __size_of_UART1_DefaultFramingErrorHandler 0002            ??_UART1_DefaultFramingErrorHandler 0001  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 54F8  
                         ??_UART1_tx_vect_isr 0001                     __end_of_UART1_rx_vect_isr 51D0  
                    __size_of_SPI1_Initialize 0018                ??_TMR6_DefaultInterruptHandler 0001  
                             _TMR5_Initialize 4C54                ??_UART2_SetOverrunErrorHandler 0009  
                             __initialization 49A2                             _UART2_rx_vect_isr 5218  
              eaDogM_WriteString@bytesWritten 000D                                  __end_of_main 2420  
                                __end_of_dtoa 32FC                                  __end_of_rand 418C  
                                __end_of_once 5118                                  __end_of_stoa 3B5A  
                  __size_of_UART2_is_rx_ready 0006                                __CFG_SAFEN$OFF 000000  
                 ??_UART1_DefaultErrorHandler 0001                            ?_UART2_rx_vect_isr 0001  
                     __end_of_TMR2_Initialize 5306                                  ?_UART2_Write 0001  
                                      ??_main 0082                                        ??_dtoa 002D  
                                      ??_rand 0020                                        ??_once 0008  
                              __CFG_PR1WAY$ON 000000                      _TMR5_SetInterruptHandler 547E  
                                      ??_stoa 0015                                 __activetblptr 000003  
        __size_of_UART1_SetTxInterruptHandler 0014                           ??_UART2_rx_vect_isr 0001  
                         eaDogM_WriteString@i 000C                     __end_of_UART1_tx_vect_isr 51AC  
        __size_of_UART2_SetRxInterruptHandler 0014                                __CFG_MVECEN$ON 000000  
                             _TMR6_Initialize 5094                               _PWM8_Initialize 538A  
                 __end_of_UART2_RxDataHandler 5260                              _UART1_Initialize 4340  
                           _UART2_tx_vect_isr 51F4                            _UART2_Transmit_ISR 5062  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        ?_fputc 0008  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 0011                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0006  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 4F22  
                                      ?_srand 0006                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _ANSELD 003A70  
                                      _ANSELE 003A80                            ?_UART2_tx_vect_isr 0001  
                              TimerDone@timer 0008                                        _RB1I2C 003A5A  
                                      _RB2I2C 003A5B                                        _RD0I2C 003A7A  
                                      _U1CON0 003DF2                                        _U1CON1 003DF3  
                                      _U1CON2 003DF4                                        _RC3I2C 003A6A  
                                      _RD1I2C 003A7B                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _U2CON0 003DDA                                        _U2CON1 003DDB  
                                      _U1BRGL 003DF5                                        _U2CON2 003DDC  
                                      _U2BRGH 003DDE                                        _U2FIFO 003DDF  
                                      _U2BRGL 003DDD                                        _T5GATE 003F9C  
                         __size_of_UART2_Read 0044                                        _T5GCON 003F9B  
                                      _RC3PPS 003A13                                        _RD1PPS 003A19  
                                      _RB6PPS 003A0E                                        _RC5PPS 003A15  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                        _RC6PPS 003A16  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                              __CFG_WDTCCS$SC 000000                                        i2l5530 4EA6  
                                      i2l5526 4E78                                        i2l5518 47E8  
                                      i2l5466 5058                                        i2l4942 51EE  
                                      i2l5486 474A                                        i2l4962 525A  
                                      i2l5498 508A                                        _FVRCON 003EC1  
                               ?_init_display 0001                                        _IVTADH 00389E  
                                      _IVTADL 00389D                                        _IVTADU 00389F  
                __size_of_eaDogM_WriteCommand 000A                                        _OSCFRQ 0039DF  
                            __end_of_calc_pot 407E                           ?_UART2_Transmit_ISR 0001  
                             ??_led_lightshow 0010                         _UART1_SetErrorHandler 5456  
                            __end_of___xxtofl 3CBE                    ??_ADCC_GetConversionResult 0008  
                       SPI1_Exchange8bit@data 0006                           ?_PWM8_LoadDutyValue 0006  
                         ??_UART2_tx_vect_isr 0001                     __end_of_UART2_rx_vect_isr 523C  
                  __size_of_SPI1_Exchange8bit 001A                                __CFG_XINST$OFF 000000  
                            _UART2_Initialize 44AA                                        _WaitMs 50C2  
                                _CCPTMRS1bits 003F5F                     _UART2_OverrunErrorHandler 016F  
                                vfprintf@cfmt 0055                           _uart2RxStatusBuffer 0132  
          __size_of_UART2_DefaultErrorHandler 0006                                        ___omul 47EE  
                                   ??___aodiv 0016                                     ??___fladd 000E  
                                   ??___aomod 0016                                     ??___fldiv 003F  
                                   ??___awdiv 000A                                __CFG_STVREN$ON 000000  
                                   ??___flmul 001E                                     ??___flsub 0037  
                                   ??___fltol 0052                    ?_UART2_DefaultErrorHandler 0001  
                        send_lcd_cmd_long@cmd 000A                                        clear_0 49E6  
                                      clear_1 49F2                                        clear_2 49FE  
                         UART2_Read@readValue 0006                              ___awdiv@quotient 000C  
                        ??_UART2_Transmit_ISR 0001                                        _printf 5322  
                                      pad@buf 001A                            _eaDogM_WriteString 4A88  
                                      _sounds 01A5                                        dtoa@fp 0023  
                                      _strlen 4C04                            __size_of_TimerDone 0024  
                     __end_of_Digital232_init 4274                          ??_PWM8_LoadDutyValue 0008  
                             _ADCC_Initialize 4B4C                                        fputc@c 0008  
                              _PMD_Initialize 52A6                                        fputs@c 0015  
                                      fputs@i 0016                                        fputs@s 0011  
                   __end_of_UART2_tx_vect_isr 5218                                  __mediumconst 0000  
                                      tblptrh 003FF7                                        tblptrl 003FF6  
                                      tblptru 003FF8                                        srand@s 0006  
                      ??_ADCC_StartConversion 0006                           ?_eaDogM_WriteString 000A  
                            __end_of_wdtdelay 4EEA                                        stoa@cp 0021  
                                      stoa@fp 0011                              __end_of_vfprintf 4C04  
                                 lp_filter@bn 0064                                 wdtdelay@delay 0006  
                                  _StartTimer 4FFE      TMR5_SetInterruptHandler@InterruptHandler 0006  
    TMR6_SetInterruptHandler@InterruptHandler 0006   UART2_SetTxInterruptHandler@InterruptHandler 0006  
 UART2_SetRxInterruptHandler@InterruptHandler 0006   UART1_SetTxInterruptHandler@InterruptHandler 0006  
 UART1_SetRxInterruptHandler@InterruptHandler 0006          __end_of_UART1_SetOverrunErrorHandler 5442  
       __size_of_UART1_SetOverrunErrorHandler 0014                  _UART1_SetOverrunErrorHandler 542E  
                   _UART1_DefaultErrorHandler 54E6                                     ??_sprintf 0056  
                                   ??_work_sw 0056                 __size_of_INTERRUPT_Initialize 0048  
                              ??_init_display 000B                  __size_of_UART1_RxDataHandler 0024  
                     __end_of_TMR5_Initialize 4CA0                                  ___xxtofl@arg 0010  
                                ___xxtofl@exp 000F                             _SYSTEM_Initialize 4F90  
                                ___xxtofl@val 0006                                    __accesstop 0060  
                     __end_of__initialization 4A1A                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                    __size_of_UART1_rx_vect_isr 0024  
                                  ___fltol@f1 0074                               _TMR5_WriteTimer 5260  
                        ??_eaDogM_WriteString 000C                                __pcstackCOMRAM 0001  
                       _UART2_SetErrorHandler 53F2                                  __pidataBANK0 54F2  
                                __pidataBANK1 4D74                           ??_SYSTEM_Initialize 000B  
                                   ?_TMR5_ISR 0001                                     ?_TMR6_ISR 0001  
                              ivt0x8_undefint 00AC                                 __end_of_fputc 4606  
                               __end_of_fputs 4E36                             ??_SPI1_Initialize 0006  
           __end_of_UART2_DefaultErrorHandler 54F2                                 __end_of_srand 4F90  
                       __end_of_TMR5_CallBack 52EA                                 __end_of_putch 54D8  
                            ?_TMR2_Initialize 0001                       __end_of_PWM8_Initialize 53A2  
                     __end_of_TMR6_Initialize 50C2                        __end_of_PMD_Initialize 52C8  
                           lp_filter@lp_speed 006C                    __size_of_UART1_tx_vect_isr 0024  
                   _UART1_FramingErrorHandler 017B                   ADCC_StartConversion@channel 0006  
                    _UART2_RxInterruptHandler 0187                                       ??_fputc 000C  
                   __end_of_SYSTEM_Initialize 4FC6                                       ??_fputs 0015  
                             __CFG_IVT1WAY$ON 000000                                       ??_srand 0008  
                                     ??_putch 0007                                    __pbssBANK0 009E  
                                  __pbssBANK1 0100                                    __pbssBANK2 0280  
               ?_UART1_SetOverrunErrorHandler 0006                        ?_UART1_SetErrorHandler 0006  
                           __end_of_TimerDone 5188                  ?_UART2_SetTxInterruptHandler 0006  
                  __size_of_UART2_rx_vect_isr 0024                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                          __size_of_lp_filter 02B0                              ??_FVR_Initialize 0006  
                                     ?_WaitMs 000B                                       ?___omul 0006  
                                ??_UART2_Read 0006                               __CFG_PPS1WAY$ON 000000  
            __end_of_TMR6_SetInterruptHandler 547E          __end_of_UART2_SetFramingErrorHandler 53F2  
       __size_of_UART2_SetFramingErrorHandler 0014                  _UART2_SetFramingErrorHandler 53DE  
                     __end_of_ADCC_Initialize 4BA8                                 ?_send_lcd_cmd 0001  
                                  ??_TMR5_ISR 0006                                    ??_TMR6_ISR 0004  
                         ___omul@multiplicand 000E                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                                       ?_printf 0064  
                             ?_PMD_Initialize 0001                             _UART1_Receive_ISR 46B2  
                                     ?_strlen 0006                               StartTimer@count 0006  
                                     _U1ERRIE 003DFA                                       _U1ERRIR 003DF9  
                                     _U2ERRIE 003DE2                                       _U2ERRIR 003DE1  
                                   ?_calc_pot 007A                               StartTimer@timer 000A  
                            ?_Digital232_init 0001                           __CFG_PWRTS$PWRT_OFF 000000  
                                ?_Default_ISR 0001                            ?_UART1_Receive_ISR 0001  
                  __size_of_UART2_tx_vect_isr 0024                          __size_of_UART2_Write 0042  
                                     _U1RXPPS 003AE5                                     ?___xxtofl 0006  
                                     _U2RXPPS 003AE8                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                                       _IVTLOCK 003FD4  
                          __size_of_vfpfcnvrt 01FE                                       _SPI1CLK 003D1C  
                                     _SPI1RXB 003D10                                       _SPI1TXB 003D11  
                                     _OSCTUNE 0039DE                                       _PWM8DCH 003F61  
                                     _PWM8DCL 003F60                                       _PWM8CON 003F62  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                __size_of_ADCC_IsConversionDone 000E  
                                 ?_StartTimer 0006                 __end_of_ADCC_IsConversionDone 54C4  
                         ??_UART1_Receive_ISR 0001                       __end_of_TMR5_WriteTimer 5284  
                          __end_of_UART2_Read 4D74                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0006                                       __Hparam 0000  
                      ?_UART2_SetErrorHandler 0006                                       __Lparam 0000  
                    __end_of_UART1_Initialize 43F8                 ??_UART2_SetTxInterruptHandler 0009  
                  ??_TMR5_SetInterruptHandler 0009                               __size_of_WaitMs 002C  
                              ??_send_lcd_cmd 000A                                       ___aodiv 3CBE  
                                     ___fladd 27A4                                       ___aomod 3E16  
                                     ___fldiv 32FC                                       ___awdiv 491A  
                             __size_of___omul 009A                                       ___flmul 2420  
                                     ___flsub 4AEE                                       ___fltol 4274  
                                   ?_wdtdelay 0006                     __end_of_UART1_Receive_ISR 4750  
                                   ?_vfprintf 0060                                  __psmallconst 2000  
               ?_UART2_SetFramingErrorHandler 0006                          __end_of_init_display 4A88  
                                     __pcinit 49A2                           _eaDogM_WriteCommand 54C4  
                            ?_PWM8_Initialize 0001                              ?_TMR6_Initialize 0001  
                                     __ramtop 2000                   __size_of_UART1_Transmit_ISR 0032  
                                     __ptext0 2050                                       __ptext1 4888  
                                     __ptext2 4CA0                                       __ptext3 5284  
                                     __ptext4 4A88                                       __ptext5 4F5A  
                                     __ptext6 407E                                       __ptext7 47EE  
                                     __ptext8 50EE                                       __ptext9 2AEC  
                           _UART2_Receive_ISR 4750                               __size_of_printf 001C  
                             __CFG_WRTAPP$OFF 000000                               __size_of_strlen 0050  
                                  ??_calc_pot 007C      __end_of_UART2_DefaultOverrunErrorHandler 54FC  
   __size_of_UART2_DefaultOverrunErrorHandler 0002            ??_UART2_DefaultOverrunErrorHandler 0001  
           ?_UART2_DefaultOverrunErrorHandler 0001              _UART2_DefaultOverrunErrorHandler 54FA  
                       _OSCILLATOR_Initialize 5306                                  __size_of_abs 003E  
                      __size_of_Digital232_RW 0240                                  __size_of_pad 00B2  
                          ?_UART2_Receive_ISR 0001                                    ??___xxtofl 000A  
                           __end_of_lp_filter 3050                      ??_PIN_MANAGER_Initialize 0006  
                             __CFG_WRTSAF$OFF 000000                                     _T5CONbits 003F9A  
                    __end_of_UART2_Initialize 4558                                       _otto_b1 01D2  
                  __size_of_SYSTEM_Initialize 0036                                       _sprintf 4CA0  
                          led_lightshow@cylon 00AD                          end_of_initialization 4A1A  
                                     _work_sw 4888                           ??_UART2_Receive_ISR 0001  
                          led_lightshow@speed 000E                          ?_eaDogM_WriteCommand 0001  
                              ___omul@product 0016                                       fputc@fp 000A  
         __end_of_UART1_SetTxInterruptHandler 541A                   _UART1_SetTxInterruptHandler 5406  
                                     fputs@fp 0013           __end_of_UART2_SetRxInterruptHandler 53CA  
                 _UART2_SetRxInterruptHandler 53B6                ??_UART1_SetOverrunErrorHandler 0009  
                           __end_of_vfpfcnvrt 39E6                                     _SPI1TCNTL 003D12  
                                     postdec1 003FE5                                       postdec2 003FDD  
                                     postinc0 003FEE                                       postinc1 003FE6  
                                     postinc2 003FDE                                    ??_wdtdelay 000A  
                            ?_ADCC_Initialize 0001                   ??_UART2_DefaultErrorHandler 0001  
                         __size_of_StartTimer 0032                                    ??_vfprintf 0055  
                                lp_filter@new 0060                     __end_of_UART2_Receive_ISR 47EE  
                              wdtdelay@dcount 0162                           _UART1_RxDataHandler 51D0  
                       __CFG_WDTCPS$WDTCPS_31 000000                                       strlen@a 0008  
                                     strlen@s 0006                      _TMR6_SetInterruptHandler 546A  
                       _TMR5_InterruptHandler 0166                                   ___fladd@grs 0015  
        __size_of_UART2_SetTxInterruptHandler 0014                         WaitMs@numMilliseconds 000B  
                               ___xxtofl@sign 000E                      ?_eaDogM_WriteStringAtPos 000E  
                                 ___fldiv@grs 004A                                   ___fldiv@rem 0043  
                            __CFG_FEXTOSC$ECH 000000                          ?_UART1_RxDataHandler 0001  
                            ?_TMR5_WriteTimer 0004                         ??_eaDogM_WriteCommand 000B  
                     TMR5_WriteTimer@timerVal 0004                  __size_of_UART2_RxDataHandler 0024  
                                 ___flmul@grs 0025                                    main@buffer 0084  
                             _SPI1_Initialize 5372                                 _Digital232_RW 35A8  
                       __end_of_led_lightshow 2DA0                                led_lightshow@j 018E  
                              __end_of_WaitMs 50EE                  __end_of_INTERRUPT_Initialize 4D30  
                  __size_of_UART1_Receive_ISR 009E                                __end_of___omul 4888  
                                 vfpfcnvrt@ap 004A                                   vfpfcnvrt@cp 0053  
                                 vfpfcnvrt@fp 0047                                   vfpfcnvrt@ll 004B  
                           __size_of_TMR5_ISR 0036                             __size_of_TMR6_ISR 0028  
                 __size_of_UART2_Transmit_ISR 0032                        ?_OSCILLATOR_Initialize 0001  
           __size_of_ADCC_GetConversionResult 0014                     ?_ADCC_GetConversionResult 0006  
                              __end_of_printf 533E                   __size_of_PWM8_LoadDutyValue 0038  
                              __end_of_strlen 4C54                ??_UART2_SetFramingErrorHandler 0009  
                         start_initialization 49A2          __end_of_TMR5_DefaultInterruptHandler 5372  
       __size_of_TMR5_DefaultInterruptHandler 001A                  _TMR5_DefaultInterruptHandler 5358  
             __size_of_PIN_MANAGER_Initialize 00AC                                   __end_of_abs 4E74  
                                 __end_of_pad 44AA                          __size_of_Default_ISR 0002  
                     ??_UART1_SetErrorHandler 0009                     _UART2_DefaultErrorHandler 54EC  
                        __end_of_send_lcd_cmd 4F22                         ??_UART1_RxDataHandler 0001  
               __size_of_ADCC_StartConversion 0010                                   putch@txData 0007  
                                  ivt0x8_base 0008                                 _uart1RxBuffer 0152  
                           ___omul@multiplier 0006                                 _uart1TxBuffer 015A  
                               _uart2RxBuffer 013A                                ?_Digital232_RW 0001  
                               _uart2TxBuffer 0142                              __CFG_LPBOREN$OFF 000000  
                                    ??_WaitMs 000D                         __size_of_init_display 0068  
                                 vfprintf@fmt 0062                   __size_of_eaDogM_WriteString 0066  
                            ??_PMD_Initialize 0006                                     _TimerDone 5164  
                                    ??___omul 0016                                   __pdataBANK0 00AC  
                                 __pdataBANK1 019E                    __size_of_UART2_Receive_ISR 009E  
                           UART2_Write@txData 0006                                      ??_printf 0056  
                                    ??_strlen 0008               __end_of_eaDogM_WriteStringAtPos 52A6  
                                   ___fladd@a 000A                                     ___fladd@b 0006  
                                   ___fldiv@a 003B                                     ___fldiv@b 0037  
                                   ___flmul@a 001A                                     ___flmul@b 0016  
                                 __pbssCOMRAM 0056                                     ___flsub@a 0033  
                                   ___flsub@b 002F                            _UART1_ErrorHandler 0175  
                   _UART2_FramingErrorHandler 0172                                 __pcstackBANK0 0060  
                               __pcstackBANK2 0200                              ___aodiv@dividend 0006  
                           __size_of_calc_pot 0134                      __size_of_TMR2_Initialize 001C  
                                ??_StartTimer 0008                             __size_of___xxtofl 0164  
                     __end_of_SPI1_Initialize 538A                      _UART1_RxInterruptHandler 0181  
                    _UART2_TxInterruptHandler 0184                 ?_TMR5_DefaultInterruptHandler 0001  
                              Digital232_RW@i 0080                                Digital232_RW@j 0081  
                              Digital232_RW@x 00A2                                  _init_display 4A20  
                      __size_of_TMR5_CallBack 0022                   PWM8_LoadDutyValue@dutyValue 0006  
                     ??_UART2_SetErrorHandler 0009                  ?_UART1_SetRxInterruptHandler 0006  
                       _TMR6_InterruptHandler 0169                                _lp_filter$3690 0068  
                      _PIN_MANAGER_Initialize 4606                                     _dtoa$2719 0035  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 5456  
       __size_of_UART1_SetFramingErrorHandler 0014                  _UART1_SetFramingErrorHandler 5442  
                                  ?_TimerDone 0001                                      ?___aodiv 0006  
                                    ?___fladd 0006                                      ?___aomod 0006  
                                    ?___fldiv 0037                                      ?___awdiv 0006  
                            ___aodiv@quotient 0018                                      ?___flmul 0016  
                                    ?___flsub 002F                                      ?___fltol 0074  
                          ??_UART1_Initialize 0009                            __end_of_StartTimer 5030  
                            _uart1RxLastError 0195                                 ??_UART2_Write 0006  
                           __size_of_wdtdelay 003A                             __size_of_vfprintf 005C  
                      __CFG_BBSIZE$BBSIZE_512 000000                                   __smallconst 2000  
    __end_of_UART1_DefaultOverrunErrorHandler 54F8     __size_of_UART1_DefaultOverrunErrorHandler 0002  
          ??_UART1_DefaultOverrunErrorHandler 0001             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler 54F6                             ?_UART2_Initialize 0001  
                                    ?_sprintf 0064                                __size_of_fputc 00AE  
                                    _T2CLKCON 003FAE                                __size_of_fputs 003E  
                                   _lp_filter 2DA0                                   _U1ERRIRbits 003DF9  
                                    ?_work_sw 0001                                __size_of_srand 0036  
                          ??_UART2_Initialize 0009                                __size_of_putch 000A  
                    __size_of_Digital232_init 00E8                          _INTERRUPT_Initialize 4CE8  
                                    _T6CLKCON 003F96                               ??_Digital232_RW 007E  
                            _uart2RxLastError 0194                         _ADCC_IsConversionDone 54B6  
                                 _U2ERRIRbits 003DE1         UART2_SetErrorHandler@interruptHandler 0006  
       UART1_SetErrorHandler@interruptHandler 0006                                      _LATCbits 003FBC  
                                    _LATEbits 003FBE                                      _IPR3bits 003983  
                                    _PIE3bits 003993                                     _tickCount 0120  
                                    _IPR6bits 003986                                      _IPR8bits 003988  
                                    _PIE6bits 003996                                      _IPR9bits 003989  
                                    _PIE8bits 003998                           __CFG_BORV$VBOR_2P45 000000  
                                    _PIE9bits 003999                 ??_UART1_SetRxInterruptHandler 0009  
                                    i2u504_48 52D6                                      _PIR2bits 0039A2  
                                    _SPI1BAUD 003D19                                      i2u470_40 5360  
                                    i2u470_46 5362                                      _PIR4bits 0039A4  
                                    _SPI1CON0 003D14                                      _SPI1CON1 003D15  
                                    _SPI1CON2 003D16                                      i2u561_48 51BC  
                                    i2u563_48 5204                                      i2u491_48 4734  
                                    i2u565_48 5228                                      _PIR8bits 0039A8  
                                    i2u568_40 4FEE                                      i2u567_48 512C  
                                    i2u495_48 477A                                      i2u487_48 46DC  
                                    i2u559_48 5198                                      i2u495_49 478E  
                                    i2u487_49 46F0                                      _PIR9bits 0039A9  
                                    i2u497_48 47A8                                      i2u489_48 470A  
                                    i2u497_49 47BC                                      i2u489_49 471E  
                                    i2u499_48 47D2                    ??_TMR6_SetInterruptHandler 0009  
                    __size_of_TMR5_Initialize 004C                    __end_of_UART1_Transmit_ISR 5062  
                                    _TMR5_ISR 4FC8                                      _TMR6_ISR 5118  
               ?_UART1_SetFramingErrorHandler 0006                                     _vfpfcnvrt 37E8  
                               _TMR5_CallBack 52C8                           _UART2_RxDataHandler 523C  
                                  _ADCON0bits 003EF8                       __size_of_FVR_Initialize 0008  
                       __size_of_send_lcd_cmd 0038             __size_of_TMR5_SetInterruptHandler 0014  
                   ?_TMR5_SetInterruptHandler 0006                            _UART2_ErrorHandler 016C  
                         __end_of_UART2_Write 4DF8                      __size_of_PWM8_Initialize 0018  
                    __size_of_TMR6_Initialize 002E                              ?_SPI1_Initialize 0001  
                                 _INTCON0bits 003FD2                                     copy_data0 49B6  
                                  ?_lp_filter 0060                         ?_INTERRUPT_Initialize 0001  
                        ?_UART2_RxDataHandler 0001                        _uart1TxBufferRemaining 00A9  
                           ??_TMR2_Initialize 0006                ??_TMR5_DefaultInterruptHandler 0004  
         __end_of_UART2_SetTxInterruptHandler 53B6                   _UART2_SetTxInterruptHandler 53A2  
                                _uart1RxCount 00A7                                  _uart2RxCount 00A3  
                                    __Hrparam 0000              __size_of_eaDogM_WriteStringAtPos 0022  
            __end_of_ADCC_GetConversionResult 54A6                       __CFG_RSTOSC$EXTOSC_4PLL 000000  
                                  vfprintf@ap 0063                                      __Lrparam 0000  
                                  vfprintf@fp 0060                            __CFG_BOREN$SBORDIS 000000  
                                 ??_TimerDone 0006                       ??_OSCILLATOR_Initialize 0006  
                                _send_lcd_cmd 4EEA                              __size_of___aodiv 0158  
                            __size_of___fladd 0348                              __size_of___aomod 0134  
                            __size_of___fldiv 02AC                              __size_of___awdiv 0088  
                            __size_of___flmul 0384                              __size_of___flsub 005E  
                            __size_of___fltol 00CC                                ?_TMR5_CallBack 0001  
                                  ?_vfpfcnvrt 0047                               ___aodiv@divisor 000E  
                             ___aodiv@counter 0016          __size_of_UART1_SetRxInterruptHandler 0014  
                                    _calc_pot 3F4A                                    sprintf@fmt 0066  
                             lp_filter@smooth 0100                                      ___xxtofl 3B5A  
                    __size_of_ADCC_Initialize 005C                   __end_of_eaDogM_WriteCommand 54CE  
                                    __pivt0x8 0008                                      __ptext10 491A  
                                    __ptext11 4A20                                      __ptext20 53B6  
                                    __ptext12 5140                                      __ptext21 53CA  
                                    __ptext13 54C4                                      __ptext30 5094  
                                    __ptext22 53DE                                      __ptext14 4EEA  
                                    __ptext31 546A                                      __ptext23 53F2  
                                    __ptext15 4EB0                                      __ptext40 4CE8  
                                    __ptext32 4C54                                      __ptext24 4340  
                                    __ptext16 533E                                      __ptext41 54D8  
                                    __ptext33 547E                                      __ptext25 5406  
                                    __ptext17 4F90                                      __ptext50 3050  
                                    __ptext42 4B4C                                      __ptext34 52EA  
                                    __ptext26 541A                                      __ptext18 44AA  
                                    __ptext51 43F8                                      __ptext43 418C  
                                    __ptext35 5372                                      __ptext27 542E  
                                    __ptext19 53A2                                      __ptext60 3F4A  
                                    __ptext52 4C04                                      __ptext44 50C2  
                                    __ptext36 538A                                      __ptext28 5442  
                                    __ptext61 2DA0                                      __ptext53 4DF8  
                                    __ptext45 35A8                                      __ptext37 52A6  
                                    __ptext29 5456                                      __ptext70 5164  
                                    __ptext62 4AEE                                      __ptext54 4558  
                                    __ptext46 5322                                      __ptext38 4606  
                                    __ptext71 4FFE                                      __ptext63 27A4  
                                    __ptext55 54CE                                      __ptext47 4BA8  
                                    __ptext39 5306                                      __ptext80 46B2  
                                    __ptext72 4F22                                      __ptext64 2420  
                                    __ptext56 4DB6                                      __ptext48 37E8  
                                    __ptext81 54F6                                      __ptext73 54A6  
                                    __ptext65 32FC                                      __ptext57 4E36  
                                    __ptext49 39E6                                      __ptext90 54FC  
                                    __ptext82 54F8                                      __ptext74 54B6  
                                    __ptext66 3B5A                                      __ptext58 3E16  
                                    __ptext91 54EC                                      __ptext83 54E6  
                                    __ptext75 5492                                      __ptext67 4274  
                                    __ptext59 3CBE                                      __ptext92 523C  
                                    __ptext84 51D0                                      __ptext76 54F4  
                                    __ptext68 54E0                                      __ptext93 5118  
                                    __ptext85 51F4                                      __ptext77 5188  
                                    __ptext69 4D30                                      __ptext94 4E74  
                                    __ptext86 5062                                      __ptext78 5030  
                                    __ptext95 4FC8                                      __ptext87 5218  
                                    __ptext79 51AC                                      __ptext96 5260  
                                    __ptext88 4750                                      __ptext97 52C8  
                                    __ptext89 54FA                                      __ptext98 5358  
                                    __ptext99 0000                        ?_ADCC_IsConversionDone 0001  
              __size_of_UART1_SetErrorHandler 0014                 TMR6_DefaultInterruptHandler@i 0003  
               __end_of_UART1_SetErrorHandler 546A                              __size_of_sprintf 0048  
                       ??_UART2_RxDataHandler 0001                              __size_of_work_sw 0092  
                         led_lightshow@LED_UP 00AC                                 __size_of_main 03D0  
                               __size_of_dtoa 02AC                                 __size_of_rand 010E  
                               __size_of_once 002A                                 __size_of_stoa 0174  
    __end_of_UART2_DefaultFramingErrorHandler 54FE     __size_of_UART2_DefaultFramingErrorHandler 0002  
          ??_UART2_DefaultFramingErrorHandler 0001             ?_UART2_DefaultFramingErrorHandler 0001  
            _UART2_DefaultFramingErrorHandler 54FC                          __CFG_WDTCWS$WDTCWS_7 000000  
                                 _IVTLOCKbits 003FD4                             ??_Digital232_init 0056  
                    __size_of_TMR5_WriteTimer 0024                     _UART1_OverrunErrorHandler 0178  
                                   stoa@F1139 019E  UART2_SetOverrunErrorHandler@interruptHandler 0006  
UART1_SetOverrunErrorHandler@interruptHandler 0006            __size_of_UART1_DefaultErrorHandler 0006  
                __end_of_ADCC_StartConversion 54B6                    ?_UART1_DefaultErrorHandler 0001  
                                    _wdtdelay 4EB0                    __end_of_UART2_Transmit_ISR 5094  
                                    _vfprintf 4BA8                                     printf@fmt 0064  
                  __end_of_PWM8_LoadDutyValue 4F5A                                      _switches 01A7  
                                 _UART2_Write 4DB6                             ??_TMR5_Initialize 0009  
                            ___aomod@dividend 0006                                 ??_Default_ISR 0001  
              ??_UART1_SetFramingErrorHandler 0009                   __end_of_UART1_RxDataHandler 51F4  
                                 _uart1RxHead 005A                                   _uart1TxHead 00AB  
                                 _uart2RxHead 0059                                   _uart1RxTail 00A8  
                                 _uart2TxHead 00A6                                   _uart1TxTail 00AA  
                                 _uart2RxTail 0058                        __size_of_led_lightshow 02B4  
                                 _uart2TxTail 00A5                        ??_INTERRUPT_Initialize 0006  
        __end_of_TMR6_DefaultInterruptHandler 4EB0         __size_of_TMR6_DefaultInterruptHandler 003C  
                _TMR6_DefaultInterruptHandler 4E74                                   ??_lp_filter 0050  
        __end_of_UART2_SetOverrunErrorHandler 53DE         __size_of_UART2_SetOverrunErrorHandler 0014  
                _UART2_SetOverrunErrorHandler 53CA                                      intlevel2 0000  
                                   sprintf@ap 006D                             _send_lcd_cmd_long 5140  
                     ?_PIN_MANAGER_Initialize 0001                             ??_TMR6_Initialize 0009  
                           ??_PWM8_Initialize 0006                             __CFG_CLKOUTEN$OFF 000000  
                          ?_send_lcd_cmd_long 0001                    __end_of_eaDogM_WriteString 4AEE  
              __size_of_UART2_SetErrorHandler 0014                 __end_of_UART2_SetErrorHandler 5406  
                         _uart1RxStatusBuffer 014A                                    _SPI1SCKPPS 003ADE  
                                  _SPI1SDIPPS 003ADF                               ??_TMR5_CallBack 0005  
                         ??_send_lcd_cmd_long 000A                                      printf@ap 0069  
                      eaDogM_WriteCommand@cmd 000B                                    _UART2_Read 4D30  
UART2_SetFramingErrorHandler@interruptHandler 0006  UART1_SetFramingErrorHandler@interruptHandler 0006  
                    _ADCC_GetConversionResult 5492             __end_of_UART1_DefaultErrorHandler 54EC  
                             ___aomod@divisor 000E                                   ??_vfpfcnvrt 004B  
                                    stoa@nuls 0016                               ___aomod@counter 0016  
                           _UART2_is_rx_ready 54E0                        _uart2TxBufferRemaining 00A4  
                              _FVR_Initialize 54D8                                 lp_filter@lp_x 0070  
                                    sprintf@f 006E                                      sprintf@s 0064  
                               lp_filter@slow 0066                            ?_UART2_is_rx_ready 0001  
                       TMR5_ISR@CountCallBack 0190                     __size_of_UART1_Initialize 00B8  
                    _UART1_TxInterruptHandler 017E                           ??_UART2_is_rx_ready 0006  
                   __end_of_send_lcd_cmd_long 5164                                 ___fladd@signs 0012  
                         __end_of_Default_ISR 54F6                                  ___aodiv@sign 0017  
              __end_of_PIN_MANAGER_Initialize 46B2                             ??_ADCC_Initialize 0006  
               ?_TMR6_DefaultInterruptHandler 0001                 ?_UART2_SetOverrunErrorHandler 0006  
                                ___fladd@aexp 0013                                  ___fladd@bexp 0014  
                ?_UART1_SetTxInterruptHandler 0006                       _eaDogM_WriteStringAtPos 5284  
                ?_UART2_SetRxInterruptHandler 0006                                  ___aomod@sign 0017  
                               once@once_flag 0006                                 _led_lightshow 2AEC  
                   __size_of_UART2_Initialize 00AE  
