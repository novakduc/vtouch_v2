

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Sep 12 16:23:57 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1,inline
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1,inline
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=4,class=CODE,delta=1
    95                           	psect	text77,global,reloc=4,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=4,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=4,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=4,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1
   111                           	psect	text93,global,reloc=4,class=CODE,delta=1
   112                           	psect	text94,global,reloc=2,class=CODE,delta=1
   113                           	psect	text95,global,reloc=4,class=CODE,delta=1
   114                           	psect	text96,global,reloc=2,class=CODE,delta=1
   115                           	psect	text97,global,reloc=2,class=CODE,delta=1
   116                           	psect	text98,global,reloc=2,class=CODE,delta=1
   117                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   118                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   121  0000                     
   122                           ; Version 2.10
   123                           ; Generated 31/07/2019 GMT
   124                           ; 
   125                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   126                           ; All rights reserved.
   127                           ; 
   128                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   129                           ; 
   130                           ; Redistribution and use in source and binary forms, with or without modification, are
   131                           ; permitted provided that the following conditions are met:
   132                           ; 
   133                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   134                           ;        conditions and the following disclaimer.
   135                           ; 
   136                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   137                           ;        of conditions and the following disclaimer in the documentation and/or other
   138                           ;        materials provided with the distribution.
   139                           ; 
   140                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   141                           ;        software without specific prior written permission.
   142                           ; 
   143                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   144                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   145                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   146                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   147                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   148                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   149                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   150                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   151                           ; 
   152                           ; 
   153                           ; Code-generator required, PIC18F47K42 Definitions
   154                           ; 
   155                           ; SFR Addresses
   156  0000                     
   157                           	psect	idataBANK0
   158  0054EA                     __pidataBANK0:
   159                           	opt callstack 0
   160                           
   161                           ;initializer for led_lightshow@LED_UP
   162  0054EA  01                 	db	1
   163                           
   164                           ;initializer for led_lightshow@cylon
   165  0054EB  FF                 	db	255
   166                           
   167                           	psect	idataBANK1
   168  004D6E                     __pidataBANK1:
   169                           	opt callstack 0
   170                           
   171                           ;initializer for stoa@F1139
   172  004D6E  28                 	db	40
   173  004D6F  6E                 	db	110
   174  004D70  75                 	db	117
   175  004D71  6C                 	db	108
   176  004D72  6C                 	db	108
   177  004D73  29                 	db	41
   178  004D74  00                 	db	0
   179                           
   180                           ;initializer for _sounds
   181  004D75  AF                 	db	low (_IO+6)
   182  004D76  01                 	db	high (_IO+6)
   183                           
   184                           ;initializer for _switches
   185  004D77  A9                 	db	low _IO
   186  004D78  01                 	db	high _IO
   187                           
   188                           ;initializer for _IO
   189  004D79  00                 	db	0
   190  004D7A  00                 	db	0
   191  004D7B  00                 	db	0
   192  004D7C  00                 	db	0
   193  004D7D  00                 	db	0
   194  004D7E  00                 	db	0
   195  004D7F  00                 	db	0
   196  004D80  00                 	db	0
   197  004D81  00                 	db	0
   198  004D82  00                 	db	0
   199  004D83  00                 	db	0
   200  004D84  00                 	db	0
   201  004D85  00                 	db	0
   202  004D86  00                 	db	0
   203  004D87  00                 	db	0
   204  004D88  02                 	db	2
   205  004D89  00                 	db	0
   206  004D8A  00                 	db	0
   207  004D8B  00                 	db	0
   208  004D8C  00                 	db	0
   209  004D8D  32                 	db	50
   210  004D8E  00                 	db	0
   211  004D8F  00                 	db	0
   212  004D90  0000               	dw	0
   213  004D92  0000               	dw	0
   214  004D94  000A               	dw	10
   215  004D96  0000               	dw	0
   216  004D98  0000               	dw	0
   217  004D9A  01                 	db	1
   218  004D9B  00                 	db	0
   219  004D9C  00                 	db	0
   220  004D9D  01                 	db	1
   221  004D9E  01                 	db	1
   222  004D9F  01                 	db	1
   223  004DA0  00                 	db	0
   224  004DA1  00                 	db	0
   225                           
   226                           ;initializer for _otto_b1
   227  004DA2  0190               	dw	400
   228  004DA4  0E74               	dw	3700
   229  004DA6  0000               	dw	0
   230  004DA8  0000               	dw	0
   231  004DAA  0000               	dw	0
   232  004DAC  0000               	dw	0
   233  004DAE  FF00               	dw	65280
   234  0000                     _IVTADL	set	14493
   235  0000                     _IVTADH	set	14494
   236  0000                     _IVTADU	set	14495
   237  0000                     _PIR2bits	set	14754
   238  0000                     _PIE8bits	set	14744
   239  0000                     _PIR8bits	set	14760
   240  0000                     _PIE9bits	set	14745
   241  0000                     _PIR9bits	set	14761
   242  0000                     _PIR4bits	set	14756
   243  0000                     _PIE6bits	set	14742
   244  0000                     _PIE3bits	set	14739
   245  0000                     _IPR8bits	set	14728
   246  0000                     _IPR9bits	set	14729
   247  0000                     _IPR3bits	set	14723
   248  0000                     _IPR6bits	set	14726
   249  0000                     _PMD7	set	14791
   250  0000                     _PMD6	set	14790
   251  0000                     _PMD5	set	14789
   252  0000                     _PMD4	set	14788
   253  0000                     _PMD3	set	14787
   254  0000                     _PMD2	set	14786
   255  0000                     _PMD1	set	14785
   256  0000                     _PMD0	set	14784
   257  0000                     _OSCTUNE	set	14814
   258  0000                     _OSCFRQ	set	14815
   259  0000                     _OSCEN	set	14813
   260  0000                     _OSCCON3	set	14811
   261  0000                     _OSCCON1	set	14809
   262  0000                     _PLLR	set	118496
   263  0000                     _SPI1SDIPPS	set	15071
   264  0000                     _U1RXPPS	set	15077
   265  0000                     _RC6PPS	set	14870
   266  0000                     _RC5PPS	set	14869
   267  0000                     _RD1PPS	set	14873
   268  0000                     _RC3PPS	set	14867
   269  0000                     _RB6PPS	set	14862
   270  0000                     _SPI1SCKPPS	set	15070
   271  0000                     _U2RXPPS	set	15080
   272  0000                     _SLRCONE	set	14979
   273  0000                     _SLRCOND	set	14963
   274  0000                     _SLRCONC	set	14947
   275  0000                     _SLRCONB	set	14931
   276  0000                     _SLRCONA	set	14915
   277  0000                     _ODCOND	set	14962
   278  0000                     _ODCONC	set	14946
   279  0000                     _ODCONB	set	14930
   280  0000                     _ODCONA	set	14914
   281  0000                     _ODCONE	set	14978
   282  0000                     _RD1I2C	set	14971
   283  0000                     _RD0I2C	set	14970
   284  0000                     _RC4I2C	set	14955
   285  0000                     _RC3I2C	set	14954
   286  0000                     _RB2I2C	set	14939
   287  0000                     _RB1I2C	set	14938
   288  0000                     _WPUC	set	14945
   289  0000                     _WPUA	set	14913
   290  0000                     _WPUB	set	14929
   291  0000                     _WPUE	set	14977
   292  0000                     _WPUD	set	14961
   293  0000                     _ANSELA	set	14912
   294  0000                     _ANSELE	set	14976
   295  0000                     _ANSELB	set	14928
   296  0000                     _ANSELC	set	14944
   297  0000                     _ANSELD	set	14960
   298  0000                     _SPI1RXB	set	15632
   299  0000                     _SPI1TXB	set	15633
   300  0000                     _SPI1TCNTL	set	15634
   301  0000                     _SPI1CON0	set	15636
   302  0000                     _SPI1CLK	set	15644
   303  0000                     _SPI1BAUD	set	15641
   304  0000                     _SPI1CON2	set	15638
   305  0000                     _SPI1CON1	set	15637
   306  0000                     _U2RXB	set	15824
   307  0000                     _U2TXB	set	15826
   308  0000                     _U2ERRIRbits	set	15841
   309  0000                     _U2ERRIE	set	15842
   310  0000                     _U2ERRIR	set	15841
   311  0000                     _U2UIR	set	15840
   312  0000                     _U2FIFO	set	15839
   313  0000                     _U2BRGH	set	15838
   314  0000                     _U2BRGL	set	15837
   315  0000                     _U2CON2	set	15836
   316  0000                     _U2CON1	set	15835
   317  0000                     _U2CON0	set	15834
   318  0000                     _U2P3L	set	15832
   319  0000                     _U2P2L	set	15830
   320  0000                     _U2P1L	set	15828
   321  0000                     _U1RXB	set	15848
   322  0000                     _U1TXB	set	15850
   323  0000                     _U1ERRIRbits	set	15865
   324  0000                     _U1ERRIE	set	15866
   325  0000                     _U1ERRIR	set	15865
   326  0000                     _U1UIR	set	15864
   327  0000                     _U1FIFO	set	15863
   328  0000                     _U1BRGH	set	15862
   329  0000                     _U1BRGL	set	15861
   330  0000                     _U1CON2	set	15860
   331  0000                     _U1CON1	set	15859
   332  0000                     _U1CON0	set	15858
   333  0000                     _U1P3H	set	15857
   334  0000                     _U1P3L	set	15856
   335  0000                     _U1P2H	set	15855
   336  0000                     _U1P2L	set	15854
   337  0000                     _U1P1H	set	15853
   338  0000                     _U1P1L	set	15852
   339  0000                     _FVRCON	set	16065
   340  0000                     _ADRESL	set	16111
   341  0000                     _ADRESH	set	16112
   342  0000                     _ADCON0bits	set	16120
   343  0000                     _ADCON0	set	16120
   344  0000                     _ADCLK	set	16127
   345  0000                     _ADACT	set	16126
   346  0000                     _ADREF	set	16125
   347  0000                     _ADSTAT	set	16124
   348  0000                     _ADCON3	set	16123
   349  0000                     _ADCON2	set	16122
   350  0000                     _ADCON1	set	16121
   351  0000                     _ADPREH	set	16119
   352  0000                     _ADPREL	set	16118
   353  0000                     _ADCAP	set	16117
   354  0000                     _ADACQH	set	16116
   355  0000                     _ADACQL	set	16115
   356  0000                     _ADPCH	set	16113
   357  0000                     _ADRPT	set	16108
   358  0000                     _ADACCU	set	16106
   359  0000                     _ADSTPTH	set	16101
   360  0000                     _ADSTPTL	set	16100
   361  0000                     _ADUTHH	set	16097
   362  0000                     _ADUTHL	set	16096
   363  0000                     _ADLTHH	set	16095
   364  0000                     _ADLTHL	set	16094
   365  0000                     _CCPTMRS1bits	set	16223
   366  0000                     _LATCbits	set	16316
   367  0000                     _LATEbits	set	16318
   368  0000                     _T5CONbits	set	16282
   369  0000                     _T5CON	set	16282
   370  0000                     _TMR5L	set	16280
   371  0000                     _TMR5H	set	16281
   372  0000                     _T5CLK	set	16285
   373  0000                     _T5GATE	set	16284
   374  0000                     _T5GCON	set	16283
   375  0000                     _T6CON	set	16276
   376  0000                     _T6TMR	set	16274
   377  0000                     _T6PR	set	16275
   378  0000                     _T6RST	set	16279
   379  0000                     _T6HLT	set	16277
   380  0000                     _T6CLKCON	set	16278
   381  0000                     _PWM8DCL	set	16224
   382  0000                     _PWM8DCH	set	16225
   383  0000                     _PWM8CON	set	16226
   384  0000                     _T2CON	set	16300
   385  0000                     _T2TMR	set	16298
   386  0000                     _T2PR	set	16299
   387  0000                     _T2RST	set	16303
   388  0000                     _T2HLT	set	16301
   389  0000                     _T2CLKCON	set	16302
   390  0000                     _IVTLOCKbits	set	16340
   391  0000                     _IVTLOCK	set	16340
   392  0000                     _INTCON0bits	set	16338
   393  0000                     _TRISD	set	16325
   394  0000                     _TRISC	set	16324
   395  0000                     _TRISB	set	16323
   396  0000                     _TRISA	set	16322
   397  0000                     _TRISE	set	16326
   398  0000                     _LATC	set	16316
   399  0000                     _LATB	set	16315
   400  0000                     _LATA	set	16314
   401  0000                     _LATD	set	16317
   402  0000                     _LATE	set	16318
   403  0000                     _GIE	set	130711
   404                           
   405                           	psect	smallconst
   406  002000                     __psmallconst:
   407                           	opt callstack 0
   408  002000  00                 	db	0
   409  002001                     STR_1:
   410                           
   411                           ; BSR set to: 1
   412  002001  20                 	db	32
   413  002002  48                 	db	72	;'H'
   414  002003  20                 	db	32
   415  002004  25                 	db	37
   416  002005  69                 	db	105	;'i'
   417  002006  2C                 	db	44
   418  002007  20                 	db	32
   419  002008  4D                 	db	77	;'M'
   420  002009  20                 	db	32
   421  00200A  25                 	db	37
   422  00200B  69                 	db	105	;'i'
   423  00200C  20                 	db	32
   424  00200D  20                 	db	32
   425  00200E  20                 	db	32
   426  00200F  20                 	db	32
   427  002010  20                 	db	32
   428  002011  00                 	db	0
   429  002012                     STR_2:
   430                           
   431                           ; BSR set to: 1
   432  002012  20                 	db	32
   433  002013  53                 	db	83	;'S'
   434  002014  63                 	db	99	;'c'
   435  002015  6F                 	db	111	;'o'
   436  002016  72                 	db	114	;'r'
   437  002017  65                 	db	101	;'e'
   438  002018  20                 	db	32
   439  002019  25                 	db	37
   440  00201A  69                 	db	105	;'i'
   441  00201B  20                 	db	32
   442  00201C  25                 	db	37
   443  00201D  69                 	db	105	;'i'
   444  00201E  20                 	db	32
   445  00201F  20                 	db	32
   446  002020  20                 	db	32
   447  002021  20                 	db	32
   448  002022  00                 	db	0
   449  002023                     STR_3:
   450                           
   451                           ; BSR set to: 1
   452  002023  53                 	db	83	;'S'
   453  002024  57                 	db	87	;'W'
   454  002025  20                 	db	32
   455  002026  25                 	db	37
   456  002027  73                 	db	115	;'s'
   457  002028  20                 	db	32
   458  002029  50                 	db	80	;'P'
   459  00202A  6C                 	db	108	;'l'
   460  00202B  61                 	db	97	;'a'
   461  00202C  79                 	db	121	;'y'
   462  00202D  21                 	db	33
   463  00202E  00                 	db	0
   464  00202F                     STR_4:
   465                           
   466                           ; BSR set to: 1
   467  00202F  31                 	db	49	;'1'
   468  002030  2E                 	db	46
   469  002031  30                 	db	48	;'0'
   470  002032  31                 	db	49	;'1'
   471  002033  00                 	db	0
   472  002034                     STR_16:
   473                           
   474                           ; BSR set to: 1
   475  002034  52                 	db	82	;'R'
   476  002035  30                 	db	48	;'0'
   477  002036  0D                 	db	13
   478  002037  00                 	db	0
   479  002038                     STR_8:
   480                           
   481                           ; BSR set to: 1
   482  002038  54                 	db	84	;'T'
   483  002039  32                 	db	50	;'2'
   484  00203A  0D                 	db	13
   485  00203B  00                 	db	0
   486  00203C                     STR_10:
   487                           
   488                           ; BSR set to: 1
   489  00203C  43                 	db	67	;'C'
   490  00203D  34                 	db	52	;'4'
   491  00203E  0D                 	db	13
   492  00203F  00                 	db	0
   493  002040                     STR_12:
   494                           
   495                           ; BSR set to: 1
   496  002040  46                 	db	70	;'F'
   497  002041  34                 	db	52	;'4'
   498  002042  0D                 	db	13
   499  002043  00                 	db	0
   500  002044                     STR_14:
   501                           
   502                           ; BSR set to: 1
   503  002044  4D                 	db	77	;'M'
   504  002045  34                 	db	52	;'4'
   505  002046  0D                 	db	13
   506  002047  00                 	db	0
   507  002048                     STR_6:
   508                           
   509                           ; BSR set to: 1
   510  002048  58                 	db	88	;'X'
   511  002049  51                 	db	81	;'Q'
   512  00204A  0D                 	db	13
   513  00204B  00                 	db	0
   514  00204C                     STR_5:
   515                           
   516                           ; BSR set to: 1
   517  00204C  25                 	db	37
   518  00204D  73                 	db	115	;'s'
   519  00204E  00                 	db	0
   520  0000                     
   521                           ; #config settings
   522  00204F  00                 	db	0	; dummy byte at the end
   523  0000                     
   524                           	psect	cinit
   525  00499C                     __pcinit:
   526                           	opt callstack 0
   527  00499C                     start_initialization:
   528                           	opt callstack 0
   529  00499C                     __initialization:
   530                           	opt callstack 0
   531                           
   532                           ; Initialize objects allocated to BANK1 (66 bytes)
   533                           ; load TBLPTR registers with __pidataBANK1
   534  00499C  0E6E               	movlw	low __pidataBANK1
   535  00499E  6EF6               	movwf	tblptrl,c
   536  0049A0  0E4D               	movlw	high __pidataBANK1
   537  0049A2  6EF7               	movwf	tblptrh,c
   538  0049A4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   539  0049A6  6EF8               	movwf	tblptru,c
   540  0049A8  EE00  F19E         	lfsr	0,__pdataBANK1
   541  0049AC  EE10 F042          	lfsr	1,66
   542  0049B0                     copy_data0:
   543  0049B0  0009               	tblrd		*+
   544  0049B2  006F FFD7 FFEE     	movff	tablat,postinc0
   545  0049B8  50E5               	movf	postdec1,w,c
   546  0049BA  50E1               	movf	fsr1l,w,c
   547  0049BC  E1F9               	bnz	copy_data0
   548                           
   549                           ; Initialize objects allocated to BANK0 (2 bytes)
   550                           ; load TBLPTR registers with __pidataBANK0
   551  0049BE  0EEA               	movlw	low __pidataBANK0
   552  0049C0  6EF6               	movwf	tblptrl,c
   553  0049C2  0E54               	movlw	high __pidataBANK0
   554  0049C4  6EF7               	movwf	tblptrh,c
   555  0049C6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   556  0049C8  6EF8               	movwf	tblptru,c
   557  0049CA  0009               	tblrd		*+	;fetch initializer
   558  0049CC  006F FFD4  F0AC    	movff	tablat,__pdataBANK0
   559  0049D2  0009               	tblrd		*+	;fetch initializer
   560  0049D4  006F FFD4  F0AD    	movff	tablat,__pdataBANK0+1
   561                           
   562                           ; Clear objects allocated to BANK2 (32 bytes)
   563  0049DA  EE00  F280         	lfsr	0,__pbssBANK2
   564  0049DE  0E20               	movlw	32
   565  0049E0                     clear_0:
   566  0049E0  6AEE               	clrf	postinc0,c
   567  0049E2  06E8               	decf	wreg,f,c
   568  0049E4  E1FD               	bnz	clear_0
   569                           
   570                           ; Clear objects allocated to BANK1 (158 bytes)
   571  0049E6  EE00  F100         	lfsr	0,__pbssBANK1
   572  0049EA  0E9E               	movlw	158
   573  0049EC                     clear_1:
   574  0049EC  6AEE               	clrf	postinc0,c
   575  0049EE  06E8               	decf	wreg,f,c
   576  0049F0  E1FD               	bnz	clear_1
   577                           
   578                           ; Clear objects allocated to BANK0 (14 bytes)
   579  0049F2  EE00  F09E         	lfsr	0,__pbssBANK0
   580  0049F6  0E0E               	movlw	14
   581  0049F8                     clear_2:
   582  0049F8  6AEE               	clrf	postinc0,c
   583  0049FA  06E8               	decf	wreg,f,c
   584  0049FC  E1FD               	bnz	clear_2
   585                           
   586                           ; Clear objects allocated to COMRAM (5 bytes)
   587  0049FE  6A5A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   588  004A00  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   589  004A02  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   590  004A04  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   591  004A06  6A56               	clrf	__pbssCOMRAM& (0+255),c
   592                           
   593                           ;
   594                           ; Setup IVTBASE
   595                           ;
   596  004A08  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   597  004A0A  6ED5               	movwf	213,c
   598  004A0C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   599  004A0E  6ED6               	movwf	214,c
   600  004A10  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   601  004A12  6ED7               	movwf	215,c
   602  004A14                     end_of_initialization:
   603                           	opt callstack 0
   604  004A14                     __end_of__initialization:
   605                           	opt callstack 0
   606  004A14  0100               	movlb	0
   607  004A16  EF28  F010         	goto	_main	;jump to C main() function
   608                           
   609                           	psect	bssCOMRAM
   610  000056                     __pbssCOMRAM:
   611                           	opt callstack 0
   612  000056                     _flags:
   613                           	opt callstack 0
   614  000056                     	ds	2
   615  000058                     _uart2RxTail:
   616                           	opt callstack 0
   617  000058                     	ds	1
   618  000059                     _uart2RxHead:
   619                           	opt callstack 0
   620  000059                     	ds	1
   621  00005A                     _uart1RxHead:
   622                           	opt callstack 0
   623  00005A                     	ds	1
   624                           
   625                           	psect	bssBANK0
   626  00009E                     __pbssBANK0:
   627                           	opt callstack 0
   628  00009E                     _prec:
   629                           	opt callstack 0
   630  00009E                     	ds	2
   631  0000A0                     led_lightshow@alive_led:
   632                           	opt callstack 0
   633  0000A0                     	ds	2
   634  0000A2                     Digital232_RW@x:
   635                           	opt callstack 0
   636  0000A2                     	ds	1
   637  0000A3                     _uart2RxCount:
   638                           	opt callstack 0
   639  0000A3                     	ds	1
   640  0000A4                     _uart2TxBufferRemaining:
   641                           	opt callstack 0
   642  0000A4                     	ds	1
   643  0000A5                     _uart2TxTail:
   644                           	opt callstack 0
   645  0000A5                     	ds	1
   646  0000A6                     _uart2TxHead:
   647                           	opt callstack 0
   648  0000A6                     	ds	1
   649  0000A7                     _uart1RxCount:
   650                           	opt callstack 0
   651  0000A7                     	ds	1
   652  0000A8                     _uart1RxTail:
   653                           	opt callstack 0
   654  0000A8                     	ds	1
   655  0000A9                     _uart1TxBufferRemaining:
   656                           	opt callstack 0
   657  0000A9                     	ds	1
   658  0000AA                     _uart1TxTail:
   659                           	opt callstack 0
   660  0000AA                     	ds	1
   661  0000AB                     _uart1TxHead:
   662                           	opt callstack 0
   663  0000AB                     	ds	1
   664                           
   665                           	psect	dataBANK0
   666  0000AC                     __pdataBANK0:
   667                           	opt callstack 0
   668  0000AC                     led_lightshow@LED_UP:
   669                           	opt callstack 0
   670  0000AC                     	ds	1
   671  0000AD                     led_lightshow@cylon:
   672                           	opt callstack 0
   673  0000AD                     	ds	1
   674                           
   675                           	psect	bssBANK1
   676  000100                     __pbssBANK1:
   677                           	opt callstack 0
   678  000100                     lp_filter@smooth:
   679                           	opt callstack 0
   680  000100                     	ds	32
   681  000120                     _tickCount:
   682                           	opt callstack 0
   683  000120                     	ds	18
   684  000132                     _uart2RxStatusBuffer:
   685                           	opt callstack 0
   686  000132                     	ds	8
   687  00013A                     _uart2RxBuffer:
   688                           	opt callstack 0
   689  00013A                     	ds	8
   690  000142                     _uart2TxBuffer:
   691                           	opt callstack 0
   692  000142                     	ds	8
   693  00014A                     _uart1RxStatusBuffer:
   694                           	opt callstack 0
   695  00014A                     	ds	8
   696  000152                     _uart1RxBuffer:
   697                           	opt callstack 0
   698  000152                     	ds	8
   699  00015A                     _uart1TxBuffer:
   700                           	opt callstack 0
   701  00015A                     	ds	8
   702  000162                     wdtdelay@dcount:
   703                           	opt callstack 0
   704  000162                     	ds	4
   705  000166                     _TMR5_InterruptHandler:
   706                           	opt callstack 0
   707  000166                     	ds	3
   708  000169                     _TMR6_InterruptHandler:
   709                           	opt callstack 0
   710  000169                     	ds	3
   711  00016C                     _UART2_ErrorHandler:
   712                           	opt callstack 0
   713  00016C                     	ds	3
   714  00016F                     _UART2_OverrunErrorHandler:
   715                           	opt callstack 0
   716  00016F                     	ds	3
   717  000172                     _UART2_FramingErrorHandler:
   718                           	opt callstack 0
   719  000172                     	ds	3
   720  000175                     _UART1_ErrorHandler:
   721                           	opt callstack 0
   722  000175                     	ds	3
   723  000178                     _UART1_OverrunErrorHandler:
   724                           	opt callstack 0
   725  000178                     	ds	3
   726  00017B                     _UART1_FramingErrorHandler:
   727                           	opt callstack 0
   728  00017B                     	ds	3
   729  00017E                     _UART1_TxInterruptHandler:
   730                           	opt callstack 0
   731  00017E                     	ds	3
   732  000181                     _UART1_RxInterruptHandler:
   733                           	opt callstack 0
   734  000181                     	ds	3
   735  000184                     _UART2_TxInterruptHandler:
   736                           	opt callstack 0
   737  000184                     	ds	3
   738  000187                     _UART2_RxInterruptHandler:
   739                           	opt callstack 0
   740  000187                     	ds	3
   741  00018A                     _nout:
   742                           	opt callstack 0
   743  00018A                     	ds	2
   744  00018C                     _width:
   745                           	opt callstack 0
   746  00018C                     	ds	2
   747  00018E                     led_lightshow@j:
   748                           	opt callstack 0
   749  00018E                     	ds	2
   750  000190                     TMR5_ISR@CountCallBack:
   751                           	opt callstack 0
   752  000190                     	ds	2
   753  000192                     _timer5ReloadVal:
   754                           	opt callstack 0
   755  000192                     	ds	2
   756  000194                     _uart2RxLastError:
   757                           	opt callstack 0
   758  000194                     	ds	1
   759  000195                     _uart1RxLastError:
   760                           	opt callstack 0
   761  000195                     	ds	1
   762  000196                     _seed:
   763                           	opt callstack 0
   764  000196                     	ds	8
   765                           
   766                           	psect	dataBANK1
   767  00019E                     __pdataBANK1:
   768                           	opt callstack 0
   769  00019E                     stoa@F1139:
   770                           	opt callstack 0
   771  00019E                     	ds	7
   772  0001A5                     _sounds:
   773                           	opt callstack 0
   774  0001A5                     	ds	2
   775  0001A7                     _switches:
   776                           	opt callstack 0
   777  0001A7                     	ds	2
   778  0001A9                     _IO:
   779                           	opt callstack 0
   780  0001A9                     	ds	41
   781  0001D2                     _otto_b1:
   782                           	opt callstack 0
   783  0001D2                     	ds	14
   784                           
   785                           	psect	bssBANK2
   786  000280                     __pbssBANK2:
   787                           	opt callstack 0
   788  000280                     _dbuf:
   789                           	opt callstack 0
   790  000280                     	ds	32
   791                           
   792                           	psect	cstackBANK2
   793  000200                     __pcstackBANK2:
   794                           	opt callstack 0
   795  000200                     work_sw@buffer:
   796                           	opt callstack 0
   797                           
   798                           ; 128 bytes @ 0x0
   799  000200                     	ds	128
   800                           
   801                           	psect	cstackBANK0
   802  000060                     __pcstackBANK0:
   803                           	opt callstack 0
   804  000060                     ?_vfprintf:
   805                           	opt callstack 0
   806  000060                     ?_lp_filter:
   807                           	opt callstack 0
   808  000060                     vfprintf@fp:
   809                           	opt callstack 0
   810  000060                     lp_filter@new:
   811                           	opt callstack 0
   812                           
   813                           ; 4 bytes @ 0x0
   814  000060                     	ds	2
   815  000062                     vfprintf@fmt:
   816                           	opt callstack 0
   817                           
   818                           ; 1 bytes @ 0x2
   819  000062                     	ds	1
   820  000063                     vfprintf@ap:
   821                           	opt callstack 0
   822                           
   823                           ; 1 bytes @ 0x3
   824  000063                     	ds	1
   825  000064                     ?_sprintf:
   826                           	opt callstack 0
   827  000064                     ?_printf:
   828                           	opt callstack 0
   829  000064                     printf@fmt:
   830                           	opt callstack 0
   831  000064                     lp_filter@bn:
   832                           	opt callstack 0
   833  000064                     sprintf@s:
   834                           	opt callstack 0
   835                           
   836                           ; 2 bytes @ 0x4
   837  000064                     	ds	2
   838  000066                     sprintf@fmt:
   839                           	opt callstack 0
   840  000066                     lp_filter@slow:
   841                           	opt callstack 0
   842                           
   843                           ; 2 bytes @ 0x6
   844  000066                     	ds	2
   845  000068                     _lp_filter$3690:
   846                           	opt callstack 0
   847                           
   848                           ; 4 bytes @ 0x8
   849  000068                     	ds	1
   850  000069                     printf@ap:
   851                           	opt callstack 0
   852                           
   853                           ; 1 bytes @ 0x9
   854  000069                     	ds	3
   855  00006C                     lp_filter@lp_speed:
   856                           	opt callstack 0
   857                           
   858                           ; 4 bytes @ 0xC
   859  00006C                     	ds	1
   860  00006D                     sprintf@ap:
   861                           	opt callstack 0
   862                           
   863                           ; 1 bytes @ 0xD
   864  00006D                     	ds	1
   865  00006E                     sprintf@f:
   866                           	opt callstack 0
   867                           
   868                           ; 6 bytes @ 0xE
   869  00006E                     	ds	2
   870  000070                     lp_filter@lp_x:
   871                           	opt callstack 0
   872                           
   873                           ; 4 bytes @ 0x10
   874  000070                     	ds	4
   875  000074                     ?___fltol:
   876                           	opt callstack 0
   877  000074                     ___fltol@f1:
   878                           	opt callstack 0
   879                           
   880                           ; 4 bytes @ 0x14
   881  000074                     	ds	4
   882  000078                     ___fltol@sign1:
   883                           	opt callstack 0
   884                           
   885                           ; 1 bytes @ 0x18
   886  000078                     	ds	1
   887  000079                     ___fltol@exp1:
   888                           	opt callstack 0
   889                           
   890                           ; 1 bytes @ 0x19
   891  000079                     	ds	1
   892  00007A                     calc_pot@value:
   893                           	opt callstack 0
   894                           
   895                           ; 2 bytes @ 0x1A
   896  00007A                     	ds	2
   897  00007C                     ??_calc_pot:
   898                           
   899                           ; 1 bytes @ 0x1C
   900  00007C                     	ds	2
   901  00007E                     ??_Digital232_RW:
   902                           
   903                           ; 1 bytes @ 0x1E
   904  00007E                     	ds	2
   905  000080                     Digital232_RW@i:
   906                           	opt callstack 0
   907                           
   908                           ; 1 bytes @ 0x20
   909  000080                     	ds	1
   910  000081                     Digital232_RW@j:
   911                           	opt callstack 0
   912                           
   913                           ; 1 bytes @ 0x21
   914  000081                     	ds	1
   915  000082                     ??_main:
   916                           
   917                           ; 1 bytes @ 0x22
   918  000082                     	ds	2
   919  000084                     main@buffer:
   920                           	opt callstack 0
   921                           
   922                           ; 24 bytes @ 0x24
   923  000084                     	ds	25
   924  00009D                     main@y:
   925                           	opt callstack 0
   926                           
   927                           ; 1 bytes @ 0x3D
   928  00009D                     	ds	1
   929                           
   930                           	psect	cstackCOMRAM
   931  000001                     __pcstackCOMRAM:
   932                           	opt callstack 0
   933  000001                     
   934                           ; 1 bytes @ 0x0
   935  000001                     	ds	2
   936  000003                     TMR6_DefaultInterruptHandler@i:
   937                           	opt callstack 0
   938                           
   939                           ; 1 bytes @ 0x2
   940  000003                     	ds	1
   941  000004                     ??_TMR5_DefaultInterruptHandler:
   942  000004                     TMR5_WriteTimer@timerVal:
   943                           	opt callstack 0
   944                           
   945                           ; 2 bytes @ 0x3
   946  000004                     	ds	1
   947  000005                     
   948                           ; 1 bytes @ 0x4
   949  000005                     	ds	1
   950  000006                     ?_strlen:
   951                           	opt callstack 0
   952  000006                     ?_ADCC_GetConversionResult:
   953                           	opt callstack 0
   954  000006                     ?___awdiv:
   955                           	opt callstack 0
   956  000006                     ?___fladd:
   957                           	opt callstack 0
   958  000006                     ?___xxtofl:
   959                           	opt callstack 0
   960  000006                     ?___omul:
   961                           	opt callstack 0
   962  000006                     ?___aodiv:
   963                           	opt callstack 0
   964  000006                     ?___aomod:
   965                           	opt callstack 0
   966  000006                     INTERRUPT_Initialize@state:
   967                           	opt callstack 0
   968  000006                     UART2_Read@readValue:
   969                           	opt callstack 0
   970  000006                     UART2_Write@txData:
   971                           	opt callstack 0
   972  000006                     ADCC_StartConversion@channel:
   973                           	opt callstack 0
   974  000006                     SPI1_Exchange8bit@data:
   975                           	opt callstack 0
   976  000006                     PWM8_LoadDutyValue@dutyValue:
   977                           	opt callstack 0
   978  000006                     once@once_flag:
   979                           	opt callstack 0
   980  000006                     StartTimer@count:
   981                           	opt callstack 0
   982  000006                     ___awdiv@dividend:
   983                           	opt callstack 0
   984  000006                     srand@s:
   985                           	opt callstack 0
   986  000006                     strlen@s:
   987                           	opt callstack 0
   988  000006                     UART1_SetFramingErrorHandler@interruptHandler:
   989                           	opt callstack 0
   990  000006                     UART1_SetOverrunErrorHandler@interruptHandler:
   991                           	opt callstack 0
   992  000006                     UART1_SetErrorHandler@interruptHandler:
   993                           	opt callstack 0
   994  000006                     UART1_SetRxInterruptHandler@InterruptHandler:
   995                           	opt callstack 0
   996  000006                     UART1_SetTxInterruptHandler@InterruptHandler:
   997                           	opt callstack 0
   998  000006                     UART2_SetFramingErrorHandler@interruptHandler:
   999                           	opt callstack 0
  1000  000006                     UART2_SetOverrunErrorHandler@interruptHandler:
  1001                           	opt callstack 0
  1002  000006                     UART2_SetErrorHandler@interruptHandler:
  1003                           	opt callstack 0
  1004  000006                     UART2_SetRxInterruptHandler@InterruptHandler:
  1005                           	opt callstack 0
  1006  000006                     UART2_SetTxInterruptHandler@InterruptHandler:
  1007                           	opt callstack 0
  1008  000006                     TMR6_SetInterruptHandler@InterruptHandler:
  1009                           	opt callstack 0
  1010  000006                     TMR5_SetInterruptHandler@InterruptHandler:
  1011                           	opt callstack 0
  1012  000006                     wdtdelay@delay:
  1013                           	opt callstack 0
  1014  000006                     ___fladd@b:
  1015                           	opt callstack 0
  1016  000006                     ___xxtofl@val:
  1017                           	opt callstack 0
  1018  000006                     ___omul@multiplier:
  1019                           	opt callstack 0
  1020  000006                     ___aodiv@dividend:
  1021                           	opt callstack 0
  1022  000006                     ___aomod@dividend:
  1023                           	opt callstack 0
  1024                           
  1025                           ; 8 bytes @ 0x5
  1026  000006                     	ds	1
  1027  000007                     putch@txData:
  1028                           	opt callstack 0
  1029                           
  1030                           ; 1 bytes @ 0x6
  1031  000007                     	ds	1
  1032  000008                     ??_StartTimer:
  1033  000008                     ??_srand:
  1034  000008                     ??_PWM8_LoadDutyValue:
  1035  000008                     ??_ADCC_GetConversionResult:
  1036  000008                     TimerDone@timer:
  1037                           	opt callstack 0
  1038  000008                     ___awdiv@divisor:
  1039                           	opt callstack 0
  1040  000008                     fputc@c:
  1041                           	opt callstack 0
  1042  000008                     strlen@a:
  1043                           	opt callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x7
  1046  000008                     	ds	1
  1047  000009                     ??_TMR5_Initialize:
  1048  000009                     
  1049                           ; 1 bytes @ 0x8
  1050  000009                     	ds	1
  1051  00000A                     ??___xxtofl:
  1052  00000A                     StartTimer@timer:
  1053                           	opt callstack 0
  1054  00000A                     send_lcd_cmd@cmd:
  1055                           	opt callstack 0
  1056  00000A                     send_lcd_cmd_long@cmd:
  1057                           	opt callstack 0
  1058  00000A                     ___awdiv@counter:
  1059                           	opt callstack 0
  1060  00000A                     eaDogM_WriteString@strPtr:
  1061                           	opt callstack 0
  1062  00000A                     fputc@fp:
  1063                           	opt callstack 0
  1064  00000A                     ___fladd@a:
  1065                           	opt callstack 0
  1066                           
  1067                           ; 4 bytes @ 0x9
  1068  00000A                     	ds	1
  1069  00000B                     eaDogM_WriteCommand@cmd:
  1070                           	opt callstack 0
  1071  00000B                     ___awdiv@sign:
  1072                           	opt callstack 0
  1073  00000B                     WaitMs@numMilliseconds:
  1074                           	opt callstack 0
  1075                           
  1076                           ; 2 bytes @ 0xA
  1077  00000B                     	ds	1
  1078  00000C                     ??_fputc:
  1079  00000C                     eaDogM_WriteString@i:
  1080                           	opt callstack 0
  1081  00000C                     ___awdiv@quotient:
  1082                           	opt callstack 0
  1083                           
  1084                           ; 2 bytes @ 0xB
  1085  00000C                     	ds	1
  1086  00000D                     eaDogM_WriteString@bytesWritten:
  1087                           	opt callstack 0
  1088                           
  1089                           ; 1 bytes @ 0xC
  1090  00000D                     	ds	1
  1091  00000E                     ??___fladd:
  1092  00000E                     eaDogM_WriteStringAtPos@c:
  1093                           	opt callstack 0
  1094  00000E                     ___xxtofl@sign:
  1095                           	opt callstack 0
  1096  00000E                     led_lightshow@speed:
  1097                           	opt callstack 0
  1098  00000E                     ___omul@multiplicand:
  1099                           	opt callstack 0
  1100  00000E                     ___aodiv@divisor:
  1101                           	opt callstack 0
  1102  00000E                     ___aomod@divisor:
  1103                           	opt callstack 0
  1104                           
  1105                           ; 8 bytes @ 0xD
  1106  00000E                     	ds	1
  1107  00000F                     ___xxtofl@exp:
  1108                           	opt callstack 0
  1109  00000F                     eaDogM_WriteStringAtPos@strPtr:
  1110                           	opt callstack 0
  1111                           
  1112                           ; 2 bytes @ 0xE
  1113  00000F                     	ds	1
  1114  000010                     ??_led_lightshow:
  1115  000010                     ___xxtofl@arg:
  1116                           	opt callstack 0
  1117                           
  1118                           ; 4 bytes @ 0xF
  1119  000010                     	ds	1
  1120  000011                     ?_stoa:
  1121                           	opt callstack 0
  1122  000011                     eaDogM_WriteStringAtPos@r:
  1123                           	opt callstack 0
  1124  000011                     stoa@fp:
  1125                           	opt callstack 0
  1126  000011                     fputs@s:
  1127                           	opt callstack 0
  1128                           
  1129                           ; 2 bytes @ 0x10
  1130  000011                     	ds	1
  1131  000012                     led_lightshow@seq:
  1132                           	opt callstack 0
  1133  000012                     ___fladd@signs:
  1134                           	opt callstack 0
  1135                           
  1136                           ; 1 bytes @ 0x11
  1137  000012                     	ds	1
  1138  000013                     ___fladd@aexp:
  1139                           	opt callstack 0
  1140  000013                     stoa@s:
  1141                           	opt callstack 0
  1142  000013                     fputs@fp:
  1143                           	opt callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x12
  1146  000013                     	ds	1
  1147  000014                     ___fladd@bexp:
  1148                           	opt callstack 0
  1149                           
  1150                           ; 1 bytes @ 0x13
  1151  000014                     	ds	1
  1152  000015                     ??_stoa:
  1153  000015                     ___fladd@grs:
  1154                           	opt callstack 0
  1155  000015                     fputs@c:
  1156                           	opt callstack 0
  1157                           
  1158                           ; 1 bytes @ 0x14
  1159  000015                     	ds	1
  1160  000016                     ?___flmul:
  1161                           	opt callstack 0
  1162  000016                     ___aodiv@counter:
  1163                           	opt callstack 0
  1164  000016                     ___aomod@counter:
  1165                           	opt callstack 0
  1166  000016                     fputs@i:
  1167                           	opt callstack 0
  1168  000016                     ___flmul@b:
  1169                           	opt callstack 0
  1170  000016                     stoa@nuls:
  1171                           	opt callstack 0
  1172  000016                     ___omul@product:
  1173                           	opt callstack 0
  1174                           
  1175                           ; 8 bytes @ 0x15
  1176  000016                     	ds	1
  1177  000017                     ___aodiv@sign:
  1178                           	opt callstack 0
  1179  000017                     ___aomod@sign:
  1180                           	opt callstack 0
  1181                           
  1182                           ; 1 bytes @ 0x16
  1183  000017                     	ds	1
  1184  000018                     ?_abs:
  1185                           	opt callstack 0
  1186  000018                     ?_pad:
  1187                           	opt callstack 0
  1188  000018                     pad@fp:
  1189                           	opt callstack 0
  1190  000018                     abs@a:
  1191                           	opt callstack 0
  1192  000018                     ___aodiv@quotient:
  1193                           	opt callstack 0
  1194                           
  1195                           ; 8 bytes @ 0x17
  1196  000018                     	ds	2
  1197  00001A                     ??_abs:
  1198  00001A                     pad@buf:
  1199                           	opt callstack 0
  1200  00001A                     ___flmul@a:
  1201                           	opt callstack 0
  1202                           
  1203                           ; 4 bytes @ 0x19
  1204  00001A                     	ds	2
  1205  00001C                     pad@p:
  1206                           	opt callstack 0
  1207                           
  1208                           ; 2 bytes @ 0x1B
  1209  00001C                     	ds	1
  1210  00001D                     stoa@i:
  1211                           	opt callstack 0
  1212                           
  1213                           ; 2 bytes @ 0x1C
  1214  00001D                     	ds	1
  1215  00001E                     ??___flmul:
  1216  00001E                     ??_pad:
  1217  00001E                     ?_rand:
  1218                           	opt callstack 0
  1219                           
  1220                           ; 2 bytes @ 0x1D
  1221  00001E                     	ds	1
  1222  00001F                     pad@i:
  1223                           	opt callstack 0
  1224  00001F                     stoa@w:
  1225                           	opt callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x1E
  1228  00001F                     	ds	1
  1229  000020                     ??_rand:
  1230                           
  1231                           ; 1 bytes @ 0x1F
  1232  000020                     	ds	1
  1233  000021                     pad@w:
  1234                           	opt callstack 0
  1235  000021                     stoa@cp:
  1236                           	opt callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x20
  1239  000021                     	ds	1
  1240  000022                     ___flmul@sign:
  1241                           	opt callstack 0
  1242                           
  1243                           ; 1 bytes @ 0x21
  1244  000022                     	ds	1
  1245  000023                     ?_dtoa:
  1246                           	opt callstack 0
  1247  000023                     ___flmul@aexp:
  1248                           	opt callstack 0
  1249  000023                     dtoa@fp:
  1250                           	opt callstack 0
  1251  000023                     stoa@p:
  1252                           	opt callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x22
  1255  000023                     	ds	1
  1256  000024                     ___flmul@bexp:
  1257                           	opt callstack 0
  1258                           
  1259                           ; 1 bytes @ 0x23
  1260  000024                     	ds	1
  1261  000025                     stoa@l:
  1262                           	opt callstack 0
  1263  000025                     ___flmul@grs:
  1264                           	opt callstack 0
  1265  000025                     dtoa@d:
  1266                           	opt callstack 0
  1267                           
  1268                           ; 8 bytes @ 0x24
  1269  000025                     	ds	4
  1270  000029                     ___flmul@prod:
  1271                           	opt callstack 0
  1272                           
  1273                           ; 4 bytes @ 0x28
  1274  000029                     	ds	4
  1275  00002D                     ??_dtoa:
  1276  00002D                     ___flmul@temp:
  1277                           	opt callstack 0
  1278                           
  1279                           ; 2 bytes @ 0x2C
  1280  00002D                     	ds	2
  1281  00002F                     ?___flsub:
  1282                           	opt callstack 0
  1283  00002F                     ___flsub@b:
  1284                           	opt callstack 0
  1285                           
  1286                           ; 4 bytes @ 0x2E
  1287  00002F                     	ds	4
  1288  000033                     ___flsub@a:
  1289                           	opt callstack 0
  1290                           
  1291                           ; 4 bytes @ 0x32
  1292  000033                     	ds	2
  1293  000035                     _dtoa$2719:
  1294                           	opt callstack 0
  1295                           
  1296                           ; 2 bytes @ 0x34
  1297  000035                     	ds	2
  1298  000037                     ?___fldiv:
  1299                           	opt callstack 0
  1300  000037                     dtoa@p:
  1301                           	opt callstack 0
  1302  000037                     ___fldiv@b:
  1303                           	opt callstack 0
  1304                           
  1305                           ; 4 bytes @ 0x36
  1306  000037                     	ds	2
  1307  000039                     dtoa@w:
  1308                           	opt callstack 0
  1309                           
  1310                           ; 2 bytes @ 0x38
  1311  000039                     	ds	2
  1312  00003B                     dtoa@s:
  1313                           	opt callstack 0
  1314  00003B                     ___fldiv@a:
  1315                           	opt callstack 0
  1316                           
  1317                           ; 4 bytes @ 0x3A
  1318  00003B                     	ds	2
  1319  00003D                     dtoa@n:
  1320                           	opt callstack 0
  1321                           
  1322                           ; 8 bytes @ 0x3C
  1323  00003D                     	ds	2
  1324  00003F                     ??___fldiv:
  1325                           
  1326                           ; 1 bytes @ 0x3E
  1327  00003F                     	ds	4
  1328  000043                     ___fldiv@rem:
  1329                           	opt callstack 0
  1330                           
  1331                           ; 4 bytes @ 0x42
  1332  000043                     	ds	2
  1333  000045                     dtoa@i:
  1334                           	opt callstack 0
  1335                           
  1336                           ; 2 bytes @ 0x44
  1337  000045                     	ds	2
  1338  000047                     ?_vfpfcnvrt:
  1339                           	opt callstack 0
  1340  000047                     ___fldiv@sign:
  1341                           	opt callstack 0
  1342  000047                     vfpfcnvrt@fp:
  1343                           	opt callstack 0
  1344                           
  1345                           ; 2 bytes @ 0x46
  1346  000047                     	ds	1
  1347  000048                     ___fldiv@new_exp:
  1348                           	opt callstack 0
  1349                           
  1350                           ; 2 bytes @ 0x47
  1351  000048                     	ds	1
  1352  000049                     vfpfcnvrt@fmt:
  1353                           	opt callstack 0
  1354                           
  1355                           ; 1 bytes @ 0x48
  1356  000049                     	ds	1
  1357  00004A                     vfpfcnvrt@ap:
  1358                           	opt callstack 0
  1359  00004A                     ___fldiv@grs:
  1360                           	opt callstack 0
  1361                           
  1362                           ; 4 bytes @ 0x49
  1363  00004A                     	ds	1
  1364  00004B                     vfpfcnvrt@ll:
  1365                           	opt callstack 0
  1366                           
  1367                           ; 8 bytes @ 0x4A
  1368  00004B                     	ds	3
  1369  00004E                     ___fldiv@bexp:
  1370                           	opt callstack 0
  1371                           
  1372                           ; 1 bytes @ 0x4D
  1373  00004E                     	ds	1
  1374  00004F                     ___fldiv@aexp:
  1375                           	opt callstack 0
  1376                           
  1377                           ; 1 bytes @ 0x4E
  1378  00004F                     	ds	1
  1379  000050                     ??_lp_filter:
  1380                           
  1381                           ; 1 bytes @ 0x4F
  1382  000050                     	ds	2
  1383  000052                     ??___fltol:
  1384                           
  1385                           ; 1 bytes @ 0x51
  1386  000052                     	ds	1
  1387  000053                     vfpfcnvrt@cp:
  1388                           	opt callstack 0
  1389                           
  1390                           ; 2 bytes @ 0x52
  1391  000053                     	ds	2
  1392  000055                     vfprintf@cfmt:
  1393                           	opt callstack 0
  1394                           
  1395                           ; 1 bytes @ 0x54
  1396  000055                     	ds	1
  1397  000056                     
  1398                           ; 1 bytes @ 0x55
  1399 ;;
  1400 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1401 ;;
  1402 ;; *************** function _main *****************
  1403 ;; Defined at:
  1404 ;;		line 101 in file "main.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;		None
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  buffer         24   36[BANK0 ] unsigned char [24]
  1409 ;;  y               1   61[BANK0 ] unsigned char 
  1410 ;;  x               1    0        unsigned char 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      void 
  1413 ;; Registers used:
  1414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 3F/1
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1421 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1422 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1423 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1424 ;;Total ram usage:       28 bytes
  1425 ;; Hardware stack levels required when called:   14
  1426 ;; This function calls:
  1427 ;;		_Digital232_RW
  1428 ;;		_Digital232_init
  1429 ;;		_SYSTEM_Initialize
  1430 ;;		_StartTimer
  1431 ;;		_TimerDone
  1432 ;;		___awdiv
  1433 ;;		___fldiv
  1434 ;;		___xxtofl
  1435 ;;		_eaDogM_WriteCommand
  1436 ;;		_eaDogM_WriteStringAtPos
  1437 ;;		_init_display
  1438 ;;		_led_lightshow
  1439 ;;		_once
  1440 ;;		_rand
  1441 ;;		_sprintf
  1442 ;;		_srand
  1443 ;;		_work_sw
  1444 ;; This function is called by:
  1445 ;;		Startup code after reset
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           	psect	text0
  1450  002050                     __ptext0:
  1451                           	opt callstack 0
  1452  002050                     _main:
  1453                           	opt callstack 17
  1454                           
  1455                           ;incstack = 0
  1456  002050  0E00               	movlw	0
  1457  002052  0100               	movlb	0	; () banked
  1458  002054  6F9D               	movwf	main@y& (0+255),b
  1459                           
  1460                           ; BSR set to: 0
  1461                           ;main.c: 104:  char buffer[24];;main.c: 106:  SYSTEM_Initialize();
  1462  002056  ECC5  F027         	call	_SYSTEM_Initialize	;wreg free
  1463                           
  1464                           ; BSR set to: 61
  1465                           ;main.c: 113:  (INTCON0bits.GIEH = 1);
  1466  00205A  8ED2               	bsf	210,7,c	;volatile
  1467                           
  1468                           ; BSR set to: 61
  1469                           ;main.c: 116:  (INTCON0bits.GIEL = 1);
  1470  00205C  8CD2               	bsf	210,6,c	;volatile
  1471                           
  1472                           ; BSR set to: 61
  1473                           ;main.c: 124:  IO.input_ok = 0;
  1474  00205E  0E00               	movlw	0
  1475  002060  0101               	movlb	1	; () banked
  1476  002062  6FB3               	movwf	(_IO+10)& (0+255),b
  1477                           
  1478                           ; BSR set to: 1
  1479                           ;main.c: 125:  IO.output_ok = 0;
  1480  002064  0E00               	movlw	0
  1481  002066  6FB4               	movwf	(_IO+11)& (0+255),b
  1482                           
  1483                           ; BSR set to: 1
  1484                           ;main.c: 126:  IO.d232 = D232_IDLE;
  1485  002068  0E00               	movlw	0
  1486  00206A  6FB6               	movwf	(_IO+13)& (0+255),b
  1487                           
  1488                           ; BSR set to: 1
  1489                           ;main.c: 127:  IO.io = IO_IDLE;
  1490  00206C  0E00               	movlw	0
  1491  00206E  6FB5               	movwf	(_IO+12)& (0+255),b
  1492                           
  1493                           ; BSR set to: 1
  1494                           ;main.c: 129:  init_display();
  1495  002070  EC0D  F025         	call	_init_display	;wreg free
  1496                           
  1497                           ; BSR set to: 1
  1498                           ;main.c: 130:  eaDogM_WriteCommand(0b00001100);
  1499  002074  0E0C               	movlw	12
  1500  002076  EC5E  F02A         	call	_eaDogM_WriteCommand
  1501                           
  1502                           ; BSR set to: 1
  1503                           ;main.c: 131:  srand(99);
  1504  00207A  0E00               	movlw	0
  1505  00207C  6E07               	movwf	(srand@s+1)^0,c
  1506  00207E  0E63               	movlw	99
  1507  002080  6E06               	movwf	srand@s^0,c
  1508  002082  ECAA  F027         	call	_srand	;wreg free
  1509                           
  1510                           ; BSR set to: 1
  1511                           ;main.c: 133:  StartTimer(TMR_INIT, 1000);
  1512  002086  0E03               	movlw	3
  1513  002088  6E07               	movwf	(StartTimer@count+1)^0,c
  1514  00208A  0EE8               	movlw	232
  1515  00208C  6E06               	movwf	StartTimer@count^0,c
  1516  00208E  0E01               	movlw	1
  1517  002090  ECFB  F027         	call	_StartTimer
  1518                           
  1519                           ;main.c: 134:  Digital232_init();
  1520  002094  ECC3  F020         	call	_Digital232_init	;wreg free
  1521                           
  1522                           ;main.c: 135:  sprintf(buffer, "SW %s Play!", "1.01");
  1523  002098  0E84               	movlw	low main@buffer
  1524  00209A  0100               	movlb	0	; () banked
  1525  00209C  6F64               	movwf	sprintf@s& (0+255),b
  1526  00209E  6B65               	clrf	(sprintf@s+1)& (0+255),b
  1527  0020A0  0E23               	movlw	low STR_3
  1528  0020A2  6F66               	movwf	sprintf@fmt& (0+255),b
  1529  0020A4  0E2F               	movlw	low STR_4
  1530  0020A6  6F67               	movwf	(?_sprintf+3)& (0+255),b
  1531  0020A8  5167               	movf	(?_sprintf+3)& (0+255),w,b
  1532  0020AA  A4D8               	btfss	status,2,c
  1533  0020AC  0E20               	movlw	high __smallconst
  1534  0020AE  6F68               	movwf	(?_sprintf+4)& (0+255),b
  1535  0020B0  EC4D  F026         	call	_sprintf	;wreg free
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;main.c: 136:  eaDogM_WriteStringAtPos(0, 0, buffer);
  1539  0020B4  0E00               	movlw	0
  1540  0020B6  6E0E               	movwf	eaDogM_WriteStringAtPos@c^0,c
  1541  0020B8  0E84               	movlw	low main@buffer
  1542  0020BA  6E0F               	movwf	eaDogM_WriteStringAtPos@strPtr^0,c
  1543  0020BC  6A10               	clrf	(eaDogM_WriteStringAtPos@strPtr+1)^0,c
  1544  0020BE  0E00               	movlw	0
  1545  0020C0  EC3E  F029         	call	_eaDogM_WriteStringAtPos
  1546                           
  1547                           ;main.c: 138:  otto_b1.range = otto_b1.span - otto_b1.offset;
  1548  0020C4  0101               	movlb	1	; () banked
  1549  0020C6  51D2               	movf	_otto_b1& (0+255),w,b
  1550  0020C8  5DD4               	subwf	(_otto_b1+2)& (0+255),w,b
  1551  0020CA  6FD6               	movwf	(_otto_b1+4)& (0+255),b
  1552  0020CC  51D3               	movf	(_otto_b1+1)& (0+255),w,b
  1553  0020CE  59D5               	subwfb	(_otto_b1+3)& (0+255),w,b
  1554  0020D0  6FD7               	movwf	(_otto_b1+5)& (0+255),b
  1555                           
  1556                           ; BSR set to: 1
  1557                           ;main.c: 139:  otto_b1.scalar = 255.0 / (float) otto_b1.range;
  1558  0020D2  0E00               	movlw	0
  1559  0020D4  6E37               	movwf	___fldiv@b^0,c
  1560  0020D6  0E00               	movlw	0
  1561  0020D8  6E38               	movwf	(___fldiv@b+1)^0,c
  1562  0020DA  0E7F               	movlw	127
  1563  0020DC  6E39               	movwf	(___fldiv@b+2)^0,c
  1564  0020DE  0E43               	movlw	67
  1565  0020E0  6E3A               	movwf	(___fldiv@b+3)^0,c
  1566  0020E2  EE20  F1D6         	lfsr	2,_otto_b1+4
  1567  0020E6  006F FF78  F006    	movff	postinc2,___xxtofl@val
  1568  0020EC  006F FF74  F007    	movff	postdec2,___xxtofl@val+1
  1569  0020F2  0E00               	movlw	0
  1570  0020F4  BE07               	btfsc	(___xxtofl@val+1)^0,7,c
  1571  0020F6  0EFF               	movlw	-1
  1572  0020F8  6E08               	movwf	(___xxtofl@val+2)^0,c
  1573  0020FA  6E09               	movwf	(___xxtofl@val+3)^0,c
  1574  0020FC  0E01               	movlw	1
  1575  0020FE  ECAA  F01D         	call	___xxtofl
  1576  002102  0060  F018  F03B   	movff	?___xxtofl,___fldiv@a
  1577  002108  0060  F01C  F03C   	movff	?___xxtofl+1,___fldiv@a+1
  1578  00210E  0060  F020  F03D   	movff	?___xxtofl+2,___fldiv@a+2
  1579  002114  0060  F024  F03E   	movff	?___xxtofl+3,___fldiv@a+3
  1580  00211A  EC7B  F019         	call	___fldiv	;wreg free
  1581  00211E  0060  F0DC  F1D8   	movff	?___fldiv,_otto_b1+6
  1582  002124  0060  F0E0  F1D9   	movff	?___fldiv+1,_otto_b1+7
  1583  00212A  0060  F0E4  F1DA   	movff	?___fldiv+2,_otto_b1+8
  1584  002130  0060  F0E8  F1DB   	movff	?___fldiv+3,_otto_b1+9
  1585                           
  1586                           ;main.c: 140:  otto_b1.zero = (int16_t) (255.0 / 0.50);
  1587  002136  0E01               	movlw	1
  1588  002138  0101               	movlb	1	; () banked
  1589  00213A  6FDD               	movwf	(_otto_b1+11)& (0+255),b
  1590  00213C  0EFE               	movlw	254
  1591  00213E  6FDC               	movwf	(_otto_b1+10)& (0+255),b
  1592  002140                     l7756:
  1593                           
  1594                           ;main.c: 144:   work_sw();
  1595  002140  EC41  F024         	call	_work_sw	;wreg free
  1596                           
  1597                           ;main.c: 145:   if (Digital232_RW() && switches->detonator)
  1598  002144  ECD1  F01A         	call	_Digital232_RW	;wreg free
  1599  002148  0900               	iorlw	0
  1600  00214A  A4D8               	btfss	status,2,c
  1601                           
  1602                           ; BSR set to: 1
  1603  00214C  A3A9               	btfss	_IO& (0+255),1,b
  1604  00214E  D007               	goto	l7764
  1605                           
  1606                           ; BSR set to: 1
  1607                           ;main.c: 146:    led_lightshow(IO.seq_value, 1);
  1608  002150  0E00               	movlw	0
  1609  002152  6E0F               	movwf	(led_lightshow@speed+1)^0,c
  1610  002154  0E01               	movlw	1
  1611  002156  6E0E               	movwf	led_lightshow@speed^0,c
  1612  002158  51BA               	movf	(_IO+17)& (0+255),w,b
  1613  00215A  EC73  F015         	call	_led_lightshow
  1614  00215E                     l7764:
  1615                           
  1616                           ;main.c: 148:   if (!switches->detonator) {
  1617  00215E  0101               	movlb	1	; () banked
  1618  002160  B3A9               	btfsc	_IO& (0+255),1,b
  1619  002162  D0C4               	goto	l7820
  1620                           
  1621                           ; BSR set to: 1
  1622                           ;main.c: 149:    IO.outbytes[1] = IO.outbytes[1] | 0x02;
  1623  002164  51AF               	movf	(_IO+6)& (0+255),w,b
  1624  002166  0902               	iorlw	2
  1625  002168  6FAF               	movwf	(_IO+6)& (0+255),b
  1626                           
  1627                           ; BSR set to: 1
  1628                           ;main.c: 150:    if (IO.outbytes[2]&0b00000001) {
  1629  00216A  A1B0               	btfss	(_IO+7)& (0+255),0,b
  1630  00216C  D040               	goto	l7786
  1631                           
  1632                           ; BSR set to: 1
  1633                           ;main.c: 151:     if (TimerDone(TMR_EXTRA)) {
  1634  00216E  0E04               	movlw	4
  1635  002170  ECAE  F028         	call	_TimerDone
  1636  002174  0900               	iorlw	0
  1637  002176  B4D8               	btfsc	status,2,c
  1638  002178  D03A               	goto	l7786
  1639                           
  1640                           ;main.c: 152:      IO.outbytes[1] = IO.outbytes[1] | 0x04;
  1641  00217A  0101               	movlb	1	; () banked
  1642  00217C  51AF               	movf	(_IO+6)& (0+255),w,b
  1643  00217E  0904               	iorlw	4
  1644  002180  6FAF               	movwf	(_IO+6)& (0+255),b
  1645                           
  1646                           ; BSR set to: 1
  1647                           ;main.c: 153:      if (once(&IO.f1))
  1648  002182  0ECD               	movlw	low (_IO+36)
  1649  002184  6E06               	movwf	once@once_flag^0,c
  1650  002186  0E01               	movlw	high (_IO+36)
  1651  002188  6E07               	movwf	(once@once_flag+1)^0,c
  1652  00218A  EC73  F028         	call	_once	;wreg free
  1653  00218E  0900               	iorlw	0
  1654  002190  B4D8               	btfsc	status,2,c
  1655  002192  D002               	goto	l7778
  1656                           
  1657                           ;main.c: 154:       IO.hits++;
  1658  002194  0101               	movlb	1	; () banked
  1659  002196  2BBB               	incf	(_IO+18)& (0+255),f,b
  1660  002198                     l7778:
  1661                           
  1662                           ;main.c: 155:      if (IO.speed_update && IO.speed-- < 2) {
  1663  002198  0101               	movlb	1	; () banked
  1664  00219A  51CA               	movf	(_IO+33)& (0+255),w,b
  1665  00219C  B4D8               	btfsc	status,2,c
  1666  00219E  D024               	goto	l1078
  1667                           
  1668                           ; BSR set to: 1
  1669  0021A0  51C4               	movf	(_IO+27)& (0+255),w,b
  1670  0021A2  0100               	movlb	0	; () banked
  1671  0021A4  6F82               	movwf	??_main& (0+255),b
  1672  0021A6  0101               	movlb	1	; () banked
  1673  0021A8  51C5               	movf	(_IO+28)& (0+255),w,b
  1674  0021AA  0100               	movlb	0	; () banked
  1675  0021AC  6F83               	movwf	(??_main+1)& (0+255),b
  1676  0021AE  0E01               	movlw	1
  1677  0021B0  0101               	movlb	1	; () banked
  1678  0021B2  5FC4               	subwf	(_IO+27)& (0+255),f,b
  1679  0021B4  0E00               	movlw	0
  1680  0021B6  5BC5               	subwfb	(_IO+28)& (0+255),f,b
  1681  0021B8  0100               	movlb	0	; () banked
  1682  0021BA  5183               	movf	(??_main+1)& (0+255),w,b
  1683  0021BC  E115               	bnz	l1078
  1684  0021BE  0E02               	movlw	2
  1685  0021C0  5D82               	subwf	??_main& (0+255),w,b
  1686  0021C2  B0D8               	btfsc	status,0,c
  1687  0021C4  D011               	goto	l1078
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;main.c: 156:       IO.speed = 10;
  1691  0021C6  0E00               	movlw	0
  1692  0021C8  0101               	movlb	1	; () banked
  1693  0021CA  6FC5               	movwf	(_IO+28)& (0+255),b
  1694  0021CC  0E0A               	movlw	10
  1695  0021CE  6FC4               	movwf	(_IO+27)& (0+255),b
  1696                           
  1697                           ;main.c: 157:       IO.sequence_done = 1;
  1698  0021D0  0E01               	movlw	1
  1699  0021D2  6FCB               	movwf	(_IO+34)& (0+255),b
  1700                           
  1701                           ;main.c: 158:       IO.seq_value = 2;
  1702  0021D4  0E02               	movlw	2
  1703  0021D6  6FBA               	movwf	(_IO+17)& (0+255),b
  1704                           
  1705                           ;main.c: 159:       IO.slower = 0;
  1706  0021D8  0E00               	movlw	0
  1707  0021DA  6FC7               	movwf	(_IO+30)& (0+255),b
  1708  0021DC  0E00               	movlw	0
  1709  0021DE  6FC6               	movwf	(_IO+29)& (0+255),b
  1710                           
  1711                           ; BSR set to: 1
  1712                           ;main.c: 160:       IO.stats = IO.score;
  1713  0021E0  C1BD  F1BE         	movff	_IO+20,_IO+21
  1714                           
  1715                           ;main.c: 161:       IO.win = 1;
  1716  0021E4  0E01               	movlw	1
  1717  0021E6  6FCC               	movwf	(_IO+35)& (0+255),b
  1718  0021E8                     l1078:
  1719                           
  1720                           ;main.c: 163:      IO.speed_update = 0;
  1721  0021E8  0E00               	movlw	0
  1722  0021EA  0101               	movlb	1	; () banked
  1723  0021EC  6FCA               	movwf	(_IO+33)& (0+255),b
  1724  0021EE                     l7786:
  1725                           
  1726                           ;main.c: 167:    if (IO.outbytes[2]&0b10000000) {
  1727  0021EE  0101               	movlb	1	; () banked
  1728  0021F0  AFB0               	btfss	(_IO+7)& (0+255),7,b
  1729  0021F2  D040               	goto	l7804
  1730                           
  1731                           ; BSR set to: 1
  1732                           ;main.c: 168:     if (TimerDone(TMR_EXTRA)) {
  1733  0021F4  0E04               	movlw	4
  1734  0021F6  ECAE  F028         	call	_TimerDone
  1735  0021FA  0900               	iorlw	0
  1736  0021FC  B4D8               	btfsc	status,2,c
  1737  0021FE  D03A               	goto	l7804
  1738                           
  1739                           ;main.c: 169:      IO.outbytes[1] = IO.outbytes[1] | 0x01;
  1740  002200  0101               	movlb	1	; () banked
  1741  002202  51AF               	movf	(_IO+6)& (0+255),w,b
  1742  002204  0901               	iorlw	1
  1743  002206  6FAF               	movwf	(_IO+6)& (0+255),b
  1744                           
  1745                           ; BSR set to: 1
  1746                           ;main.c: 170:      if (once(&IO.f2))
  1747  002208  0ECE               	movlw	low (_IO+37)
  1748  00220A  6E06               	movwf	once@once_flag^0,c
  1749  00220C  0E01               	movlw	high (_IO+37)
  1750  00220E  6E07               	movwf	(once@once_flag+1)^0,c
  1751  002210  EC73  F028         	call	_once	;wreg free
  1752  002214  0900               	iorlw	0
  1753  002216  B4D8               	btfsc	status,2,c
  1754  002218  D002               	goto	l7796
  1755                           
  1756                           ;main.c: 171:       IO.hits++;
  1757  00221A  0101               	movlb	1	; () banked
  1758  00221C  2BBB               	incf	(_IO+18)& (0+255),f,b
  1759  00221E                     l7796:
  1760                           
  1761                           ;main.c: 172:      if (IO.speed_update && IO.speed-- < 2) {
  1762  00221E  0101               	movlb	1	; () banked
  1763  002220  51CA               	movf	(_IO+33)& (0+255),w,b
  1764  002222  B4D8               	btfsc	status,2,c
  1765  002224  D024               	goto	l1082
  1766                           
  1767                           ; BSR set to: 1
  1768  002226  51C4               	movf	(_IO+27)& (0+255),w,b
  1769  002228  0100               	movlb	0	; () banked
  1770  00222A  6F82               	movwf	??_main& (0+255),b
  1771  00222C  0101               	movlb	1	; () banked
  1772  00222E  51C5               	movf	(_IO+28)& (0+255),w,b
  1773  002230  0100               	movlb	0	; () banked
  1774  002232  6F83               	movwf	(??_main+1)& (0+255),b
  1775  002234  0E01               	movlw	1
  1776  002236  0101               	movlb	1	; () banked
  1777  002238  5FC4               	subwf	(_IO+27)& (0+255),f,b
  1778  00223A  0E00               	movlw	0
  1779  00223C  5BC5               	subwfb	(_IO+28)& (0+255),f,b
  1780  00223E  0100               	movlb	0	; () banked
  1781  002240  5183               	movf	(??_main+1)& (0+255),w,b
  1782  002242  E115               	bnz	l1082
  1783  002244  0E02               	movlw	2
  1784  002246  5D82               	subwf	??_main& (0+255),w,b
  1785  002248  B0D8               	btfsc	status,0,c
  1786  00224A  D011               	goto	l1082
  1787                           
  1788                           ; BSR set to: 0
  1789                           ;main.c: 173:       IO.speed = 10;
  1790  00224C  0E00               	movlw	0
  1791  00224E  0101               	movlb	1	; () banked
  1792  002250  6FC5               	movwf	(_IO+28)& (0+255),b
  1793  002252  0E0A               	movlw	10
  1794  002254  6FC4               	movwf	(_IO+27)& (0+255),b
  1795                           
  1796                           ;main.c: 174:       IO.sequence_done = 1;
  1797  002256  0E01               	movlw	1
  1798  002258  6FCB               	movwf	(_IO+34)& (0+255),b
  1799                           
  1800                           ;main.c: 175:       IO.seq_value = 2;
  1801  00225A  0E02               	movlw	2
  1802  00225C  6FBA               	movwf	(_IO+17)& (0+255),b
  1803                           
  1804                           ;main.c: 176:       IO.slower = 0;
  1805  00225E  0E00               	movlw	0
  1806  002260  6FC7               	movwf	(_IO+30)& (0+255),b
  1807  002262  0E00               	movlw	0
  1808  002264  6FC6               	movwf	(_IO+29)& (0+255),b
  1809                           
  1810                           ; BSR set to: 1
  1811                           ;main.c: 177:       IO.stats = IO.score;
  1812  002266  C1BD  F1BE         	movff	_IO+20,_IO+21
  1813                           
  1814                           ;main.c: 178:       IO.win = 1;
  1815  00226A  0E01               	movlw	1
  1816  00226C  6FCC               	movwf	(_IO+35)& (0+255),b
  1817  00226E                     l1082:
  1818                           
  1819                           ;main.c: 180:      IO.speed_update = 0;
  1820  00226E  0E00               	movlw	0
  1821  002270  0101               	movlb	1	; () banked
  1822  002272  6FCA               	movwf	(_IO+33)& (0+255),b
  1823  002274                     l7804:
  1824                           
  1825                           ;main.c: 184:    if (IO.outbytes[2]&0b01111110) {
  1826  002274  0060  F6C0  F082   	movff	_IO+7,??_main
  1827  00227A  0E7E               	movlw	126
  1828  00227C  0100               	movlb	0	; () banked
  1829  00227E  1782               	andwf	??_main& (0+255),f,b
  1830  002280  B4D8               	btfsc	status,2,c
  1831  002282  D75E               	goto	l7756
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;main.c: 185:     if (TimerDone(TMR_EXTRA_MISS)) {
  1835  002284  0E05               	movlw	5
  1836  002286  ECAE  F028         	call	_TimerDone
  1837  00228A  0900               	iorlw	0
  1838  00228C  B4D8               	btfsc	status,2,c
  1839  00228E  D758               	goto	l7756
  1840                           
  1841                           ;main.c: 186:      if (once(&IO.f3)) {
  1842  002290  0ECF               	movlw	low (_IO+38)
  1843  002292  6E06               	movwf	once@once_flag^0,c
  1844  002294  0E01               	movlw	high (_IO+38)
  1845  002296  6E07               	movwf	(once@once_flag+1)^0,c
  1846  002298  EC73  F028         	call	_once	;wreg free
  1847  00229C  0900               	iorlw	0
  1848  00229E  B4D8               	btfsc	status,2,c
  1849  0022A0  D74F               	goto	l7756
  1850                           
  1851                           ;main.c: 187:       IO.misses++;
  1852  0022A2  0101               	movlb	1	; () banked
  1853  0022A4  2BBC               	incf	(_IO+19)& (0+255),f,b
  1854                           
  1855                           ; BSR set to: 1
  1856                           ;main.c: 188:       if (IO.speed_update && (IO.misses++ > 26)) {
  1857  0022A6  51CA               	movf	(_IO+33)& (0+255),w,b
  1858  0022A8  B4D8               	btfsc	status,2,c
  1859  0022AA  D74A               	goto	l7756
  1860                           
  1861                           ; BSR set to: 1
  1862  0022AC  EE20  F1BC         	lfsr	2,_IO+19
  1863  0022B0  006F FF7C  F082    	movff	indf2,??_main
  1864  0022B6  0E01               	movlw	1
  1865  0022B8  26DF               	addwf	indf2,f,c
  1866  0022BA  0E1A               	movlw	26
  1867  0022BC  0100               	movlb	0	; () banked
  1868  0022BE  6582               	cpfsgt	??_main& (0+255),b
  1869  0022C0  D73F               	goto	l7756
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;main.c: 189:        if (IO.score-- < 10)
  1873  0022C2  EE20  F1BD         	lfsr	2,_IO+20
  1874  0022C6  006F FF7C  F082    	movff	indf2,??_main
  1875  0022CC  0E01               	movlw	1
  1876  0022CE  5EDF               	subwf	indf2,f,c
  1877  0022D0  0E0A               	movlw	10
  1878  0022D2  6182               	cpfslt	??_main& (0+255),b
  1879  0022D4  D003               	goto	l1087
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;main.c: 190:         IO.score = 10;
  1883  0022D6  0E0A               	movlw	10
  1884  0022D8  0101               	movlb	1	; () banked
  1885  0022DA  6FBD               	movwf	(_IO+20)& (0+255),b
  1886  0022DC                     l1087:
  1887                           
  1888                           ;main.c: 191:        IO.slower = 10;
  1889  0022DC  0E00               	movlw	0
  1890  0022DE  0101               	movlb	1	; () banked
  1891  0022E0  6FC7               	movwf	(_IO+30)& (0+255),b
  1892  0022E2  0E0A               	movlw	10
  1893  0022E4  6FC6               	movwf	(_IO+29)& (0+255),b
  1894                           
  1895                           ;main.c: 192:        IO.speed_update = 0;
  1896  0022E6  0E00               	movlw	0
  1897  0022E8  6FCA               	movwf	(_IO+33)& (0+255),b
  1898                           
  1899                           ;main.c: 197:   } else {
  1900                           
  1901                           ;main.c: 196:    }
  1902  0022EA  D72A               	goto	l7756
  1903  0022EC                     l7820:
  1904                           
  1905                           ; BSR set to: 1
  1906                           ;main.c: 198:    StartTimer(TMR_EXTRA, 500);
  1907  0022EC  0E01               	movlw	1
  1908  0022EE  6E07               	movwf	(StartTimer@count+1)^0,c
  1909  0022F0  0EF4               	movlw	244
  1910  0022F2  6E06               	movwf	StartTimer@count^0,c
  1911  0022F4  0E04               	movlw	4
  1912  0022F6  ECFB  F027         	call	_StartTimer
  1913                           
  1914                           ;main.c: 199:    StartTimer(TMR_EXTRA_MISS, 25);
  1915  0022FA  0E00               	movlw	0
  1916  0022FC  6E07               	movwf	(StartTimer@count+1)^0,c
  1917  0022FE  0E19               	movlw	25
  1918  002300  6E06               	movwf	StartTimer@count^0,c
  1919  002302  0E05               	movlw	5
  1920  002304  ECFB  F027         	call	_StartTimer
  1921                           
  1922                           ;main.c: 200:    if (IO.seq_value == 0) {
  1923  002308  0101               	movlb	1	; () banked
  1924  00230A  51BA               	movf	(_IO+17)& (0+255),w,b
  1925  00230C  A4D8               	btfss	status,2,c
  1926  00230E  D009               	goto	l1089
  1927                           
  1928                           ; BSR set to: 1
  1929                           ;main.c: 201:     IO.outbytes[1] = IO.outbytes[1] & (~0x02);
  1930  002310  51AF               	movf	(_IO+6)& (0+255),w,b
  1931  002312  0BFD               	andlw	253
  1932  002314  6FAF               	movwf	(_IO+6)& (0+255),b
  1933                           
  1934                           ;main.c: 202:     IO.outbytes[1] = IO.outbytes[1] & (~0x04);
  1935  002316  51AF               	movf	(_IO+6)& (0+255),w,b
  1936  002318  0BFB               	andlw	251
  1937  00231A  6FAF               	movwf	(_IO+6)& (0+255),b
  1938                           
  1939                           ;main.c: 203:     IO.outbytes[1] = IO.outbytes[1] & (~0x01);
  1940  00231C  51AF               	movf	(_IO+6)& (0+255),w,b
  1941  00231E  0BFE               	andlw	254
  1942  002320  6FAF               	movwf	(_IO+6)& (0+255),b
  1943  002322                     l1089:
  1944                           
  1945                           ; BSR set to: 1
  1946                           ;main.c: 206:    if (IO.seq_value == 3 && TimerDone(TMR_BAL)) {
  1947  002322  0E03               	movlw	3
  1948  002324  19BA               	xorwf	(_IO+17)& (0+255),w,b
  1949  002326  A4D8               	btfss	status,2,c
  1950  002328  D037               	goto	l7840
  1951                           
  1952                           ; BSR set to: 1
  1953  00232A  0E07               	movlw	7
  1954  00232C  ECAE  F028         	call	_TimerDone
  1955  002330  0900               	iorlw	0
  1956  002332  B4D8               	btfsc	status,2,c
  1957  002334  D031               	goto	l7840
  1958                           
  1959                           ;main.c: 207:     IO.outbytes[1] = IO.outbytes[1] & (~0x02);
  1960  002336  0101               	movlb	1	; () banked
  1961  002338  51AF               	movf	(_IO+6)& (0+255),w,b
  1962  00233A  0BFD               	andlw	253
  1963  00233C  6FAF               	movwf	(_IO+6)& (0+255),b
  1964                           
  1965                           ;main.c: 208:     IO.outbytes[1] = IO.outbytes[1] & (~0x04);
  1966  00233E  51AF               	movf	(_IO+6)& (0+255),w,b
  1967  002340  0BFB               	andlw	251
  1968  002342  6FAF               	movwf	(_IO+6)& (0+255),b
  1969                           
  1970                           ;main.c: 209:     IO.outbytes[1] = IO.outbytes[1] & (~0x01);
  1971  002344  51AF               	movf	(_IO+6)& (0+255),w,b
  1972  002346  0BFE               	andlw	254
  1973  002348  6FAF               	movwf	(_IO+6)& (0+255),b
  1974                           
  1975                           ; BSR set to: 1
  1976                           ;main.c: 213:     srand(IO.clock);
  1977  00234A  0060  F720  F006   	movff	_IO+31,srand@s
  1978  002350  0060  F724  F007   	movff	_IO+32,srand@s+1
  1979  002356  ECAA  F027         	call	_srand	;wreg free
  1980                           
  1981                           ; BSR set to: 1
  1982                           ;main.c: 214:     if (IO.rnd_count++ > 64) {
  1983  00235A  EE20  F1BF         	lfsr	2,_IO+22
  1984  00235E  006F FF7C  F082    	movff	indf2,??_main
  1985  002364  0E01               	movlw	1
  1986  002366  26DF               	addwf	indf2,f,c
  1987  002368  0E40               	movlw	64
  1988  00236A  0100               	movlb	0	; () banked
  1989  00236C  6582               	cpfsgt	??_main& (0+255),b
  1990  00236E  D014               	goto	l7840
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;main.c: 215:      IO.rnd = rand();
  1994  002370  EC3C  F020         	call	_rand	;wreg free
  1995  002374  501E               	movf	?_rand^0,w,c
  1996  002376  6FD1               	movwf	(_IO+40)& (0+255),b
  1997                           
  1998                           ; BSR set to: 1
  1999                           ;main.c: 216:      IO.rnd = IO.rnd / 4;
  2000  002378  51D1               	movf	(_IO+40)& (0+255),w,b
  2001  00237A  6E06               	movwf	___awdiv@dividend^0,c
  2002  00237C  6A07               	clrf	(___awdiv@dividend+1)^0,c
  2003  00237E  BE06               	btfsc	___awdiv@dividend^0,7,c
  2004  002380  0607               	decf	(___awdiv@dividend+1)^0,f,c
  2005  002382  0E00               	movlw	0
  2006  002384  6E09               	movwf	(___awdiv@divisor+1)^0,c
  2007  002386  0E04               	movlw	4
  2008  002388  6E08               	movwf	___awdiv@divisor^0,c
  2009  00238A  EC8A  F024         	call	___awdiv	;wreg free
  2010  00238E  5006               	movf	?___awdiv^0,w,c
  2011  002390  0101               	movlb	1	; () banked
  2012  002392  6FD1               	movwf	(_IO+40)& (0+255),b
  2013                           
  2014                           ; BSR set to: 1
  2015                           ;main.c: 217:      IO.rnd_count = 0;
  2016  002394  0E00               	movlw	0
  2017  002396  6FBF               	movwf	(_IO+22)& (0+255),b
  2018  002398                     l7840:
  2019                           
  2020                           ;main.c: 220:    IO.speed_update = 1;
  2021  002398  0E01               	movlw	1
  2022  00239A  0101               	movlb	1	; () banked
  2023  00239C  6FCA               	movwf	(_IO+33)& (0+255),b
  2024                           
  2025                           ; BSR set to: 1
  2026                           ;main.c: 221:    IO.f1 = 1;
  2027  00239E  0E01               	movlw	1
  2028  0023A0  6FCD               	movwf	(_IO+36)& (0+255),b
  2029                           
  2030                           ; BSR set to: 1
  2031                           ;main.c: 222:    IO.f2 = 1;
  2032  0023A2  0E01               	movlw	1
  2033  0023A4  6FCE               	movwf	(_IO+37)& (0+255),b
  2034                           
  2035                           ; BSR set to: 1
  2036                           ;main.c: 223:    IO.f3 = 1;
  2037  0023A6  0E01               	movlw	1
  2038  0023A8  6FCF               	movwf	(_IO+38)& (0+255),b
  2039                           
  2040                           ; BSR set to: 1
  2041                           ;main.c: 224:    if (TimerDone(TMR_SEQ)) {
  2042  0023AA  0E06               	movlw	6
  2043  0023AC  ECAE  F028         	call	_TimerDone
  2044  0023B0  0900               	iorlw	0
  2045  0023B2  B4D8               	btfsc	status,2,c
  2046  0023B4  D6C5               	goto	l7756
  2047                           
  2048                           ;main.c: 225:     if (otto_b1.result > -64)
  2049  0023B6  0101               	movlb	1	; () banked
  2050  0023B8  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  2051  0023BA  D006               	goto	u8540
  2052  0023BC  0EC1               	movlw	193
  2053  0023BE  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  2054  0023C0  0EFF               	movlw	255
  2055  0023C2  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  2056  0023C4  A0D8               	btfss	status,0,c
  2057  0023C6  D00B               	goto	l7856
  2058  0023C8                     u8540:
  2059                           
  2060                           ; BSR set to: 1
  2061                           ;main.c: 226:     {;main.c: 227:      IO.seq_current = 3;
  2062  0023C8  0E00               	movlw	0
  2063  0023CA  6FC3               	movwf	(_IO+26)& (0+255),b
  2064  0023CC  0E03               	movlw	3
  2065  0023CE  6FC2               	movwf	(_IO+25)& (0+255),b
  2066                           
  2067                           ; BSR set to: 1
  2068                           ;main.c: 228:      StartTimer(TMR_CHANGE, 30000);
  2069  0023D0  0E75               	movlw	117
  2070  0023D2  6E07               	movwf	(StartTimer@count+1)^0,c
  2071  0023D4  0E30               	movlw	48
  2072  0023D6  6E06               	movwf	StartTimer@count^0,c
  2073  0023D8  0E08               	movlw	8
  2074  0023DA  ECFB  F027         	call	_StartTimer
  2075  0023DE                     l7856:
  2076                           
  2077                           ;main.c: 230:     if (TimerDone(TMR_SEQ))
  2078  0023DE  0E06               	movlw	6
  2079  0023E0  ECAE  F028         	call	_TimerDone
  2080  0023E4  0900               	iorlw	0
  2081  0023E6  B4D8               	btfsc	status,2,c
  2082  0023E8  D005               	goto	l7860
  2083                           
  2084                           ;main.c: 231:      IO.seq_current = 0;
  2085  0023EA  0E00               	movlw	0
  2086  0023EC  0101               	movlb	1	; () banked
  2087  0023EE  6FC3               	movwf	(_IO+26)& (0+255),b
  2088  0023F0  0E00               	movlw	0
  2089  0023F2  6FC2               	movwf	(_IO+25)& (0+255),b
  2090  0023F4                     l7860:
  2091                           
  2092                           ;main.c: 233:     IO.seq_value = IO.seq_current;
  2093  0023F4  C1C2  F1BA         	movff	_IO+25,_IO+17
  2094                           
  2095                           ;main.c: 234:     if (IO.win) {
  2096  0023F8  0101               	movlb	1	; () banked
  2097  0023FA  51CC               	movf	(_IO+35)& (0+255),w,b
  2098  0023FC  B4D8               	btfsc	status,2,c
  2099  0023FE  D6A0               	goto	l7756
  2100                           
  2101                           ; BSR set to: 1
  2102                           ;main.c: 235:      IO.win = 0;
  2103  002400  0E00               	movlw	0
  2104  002402  6FCC               	movwf	(_IO+35)& (0+255),b
  2105                           
  2106                           ;main.c: 236:      IO.hits = 0;
  2107  002404  0E00               	movlw	0
  2108  002406  6FBB               	movwf	(_IO+18)& (0+255),b
  2109                           
  2110                           ;main.c: 237:      IO.misses = 0;
  2111  002408  0E00               	movlw	0
  2112  00240A  6FBC               	movwf	(_IO+19)& (0+255),b
  2113                           
  2114                           ;main.c: 238:      IO.clock = 0;
  2115  00240C  0E00               	movlw	0
  2116  00240E  6FC9               	movwf	(_IO+32)& (0+255),b
  2117  002410  0E00               	movlw	0
  2118  002412  6FC8               	movwf	(_IO+31)& (0+255),b
  2119                           
  2120                           ;main.c: 239:      IO.score = 50;
  2121  002414  0E32               	movlw	50
  2122  002416  6FBD               	movwf	(_IO+20)& (0+255),b
  2123  002418  D693               	goto	l7756
  2124  00241A                     __end_of_main:
  2125                           	opt callstack 0
  2126                           
  2127 ;; *************** function _work_sw *****************
  2128 ;; Defined at:
  2129 ;;		line 84 in file "main.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;		None
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  buffer        128    0[BANK2 ] unsigned char [64][2]
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/1
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2144 ;;      Locals:         0       0       0     128       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2146 ;;      Totals:         0       0       0     128       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2147 ;;Total ram usage:      128 bytes
  2148 ;; Hardware stack levels used:    1
  2149 ;; Hardware stack levels required when called:   13
  2150 ;; This function calls:
  2151 ;;		_StartTimer
  2152 ;;		_TimerDone
  2153 ;;		_eaDogM_WriteStringAtPos
  2154 ;;		_sprintf
  2155 ;; This function is called by:
  2156 ;;		_main
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           	psect	text1
  2161  004882                     __ptext1:
  2162                           	opt callstack 0
  2163  004882                     _work_sw:
  2164                           	opt callstack 17
  2165                           
  2166                           ;main.c: 86:  char buffer[2][64];;main.c: 87:  if (TimerDone(TMR_INIT)) {
  2167                           
  2168                           ; BSR set to: 1
  2169                           ;incstack = 0
  2170  004882  0E01               	movlw	1
  2171  004884  ECAE  F028         	call	_TimerDone
  2172  004888  0900               	iorlw	0
  2173  00488A  B4D8               	btfsc	status,2,c
  2174  00488C  0012               	return	
  2175                           
  2176                           ;main.c: 88:   IO.clock++;
  2177  00488E  0101               	movlb	1	; () banked
  2178  004890  4BC8               	infsnz	(_IO+31)& (0+255),f,b
  2179  004892  2BC9               	incf	(_IO+32)& (0+255),f,b
  2180                           
  2181                           ; BSR set to: 1
  2182                           ;main.c: 89:   sprintf(buffer[0], " H %i, M %i     ", IO.hits, IO.misses);
  2183  004894  0E00               	movlw	low work_sw@buffer
  2184  004896  0100               	movlb	0	; () banked
  2185  004898  6F64               	movwf	sprintf@s& (0+255),b
  2186  00489A  0E02               	movlw	high work_sw@buffer
  2187  00489C  6F65               	movwf	(sprintf@s+1)& (0+255),b
  2188  00489E  0E01               	movlw	low STR_1
  2189  0048A0  6F66               	movwf	sprintf@fmt& (0+255),b
  2190  0048A2  0060  F6EC  F067   	movff	_IO+18,?_sprintf+3
  2191  0048A8  6B68               	clrf	(?_sprintf+4)& (0+255),b
  2192  0048AA  0060  F6F0  F069   	movff	_IO+19,?_sprintf+5
  2193  0048B0  6B6A               	clrf	(?_sprintf+6)& (0+255),b
  2194  0048B2  EC4D  F026         	call	_sprintf	;wreg free
  2195                           
  2196                           ; BSR set to: 0
  2197                           ;main.c: 90:   sprintf(buffer[1], " Score %i %i    ", IO.score, otto_b1.result);
  2198  0048B6  0E40               	movlw	low (work_sw@buffer+64)
  2199  0048B8  6F64               	movwf	sprintf@s& (0+255),b
  2200  0048BA  0E02               	movlw	high (work_sw@buffer+64)
  2201  0048BC  6F65               	movwf	(sprintf@s+1)& (0+255),b
  2202  0048BE  0E12               	movlw	low STR_2
  2203  0048C0  6F66               	movwf	sprintf@fmt& (0+255),b
  2204  0048C2  0060  F6F4  F067   	movff	_IO+20,?_sprintf+3
  2205  0048C8  6B68               	clrf	(?_sprintf+4)& (0+255),b
  2206  0048CA  0060  F778  F069   	movff	_otto_b1+12,?_sprintf+5
  2207  0048D0  0060  F77C  F06A   	movff	_otto_b1+13,?_sprintf+6
  2208  0048D6  EC4D  F026         	call	_sprintf	;wreg free
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;main.c: 91:   buffer[1][16] = 0;
  2212  0048DA  0E00               	movlw	0
  2213  0048DC  0102               	movlb	2	; () banked
  2214  0048DE  6F50               	movwf	(work_sw@buffer+80)& (0+255),b
  2215                           
  2216                           ; BSR set to: 2
  2217                           ;main.c: 92:   eaDogM_WriteStringAtPos(1, 0, buffer[0]);
  2218  0048E0  0E00               	movlw	0
  2219  0048E2  6E0E               	movwf	eaDogM_WriteStringAtPos@c^0,c
  2220  0048E4  0E00               	movlw	low work_sw@buffer
  2221  0048E6  6E0F               	movwf	eaDogM_WriteStringAtPos@strPtr^0,c
  2222  0048E8  0E02               	movlw	high work_sw@buffer
  2223  0048EA  6E10               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)^0,c
  2224  0048EC  0E01               	movlw	1
  2225  0048EE  EC3E  F029         	call	_eaDogM_WriteStringAtPos
  2226                           
  2227                           ;main.c: 93:   eaDogM_WriteStringAtPos(2, 0, buffer[1]);
  2228  0048F2  0E00               	movlw	0
  2229  0048F4  6E0E               	movwf	eaDogM_WriteStringAtPos@c^0,c
  2230  0048F6  0E40               	movlw	low (work_sw@buffer+64)
  2231  0048F8  6E0F               	movwf	eaDogM_WriteStringAtPos@strPtr^0,c
  2232  0048FA  0E02               	movlw	high (work_sw@buffer+64)
  2233  0048FC  6E10               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)^0,c
  2234  0048FE  0E02               	movlw	2
  2235  004900  EC3E  F029         	call	_eaDogM_WriteStringAtPos
  2236                           
  2237                           ;main.c: 94:   StartTimer(TMR_INIT, 500);
  2238  004904  0E01               	movlw	1
  2239  004906  6E07               	movwf	(StartTimer@count+1)^0,c
  2240  004908  0EF4               	movlw	244
  2241  00490A  6E06               	movwf	StartTimer@count^0,c
  2242  00490C  0E01               	movlw	1
  2243  00490E  ECFB  F027         	call	_StartTimer
  2244  004912  0012               	return		;funcret
  2245  004914                     __end_of_work_sw:
  2246                           	opt callstack 0
  2247                           
  2248 ;; *************** function _sprintf *****************
  2249 ;; Defined at:
  2250 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  s               2    4[BANK0 ] PTR unsigned char 
  2253 ;;		 -> main@buffer(24), work_sw@buffer(128), 
  2254 ;;  fmt             1    6[BANK0 ] PTR const unsigned char 
  2255 ;;		 -> STR_3(12), STR_2(17), STR_1(17), 
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;  f               6   14[BANK0 ] struct _IO_FILE
  2258 ;;  ret             2    0        int 
  2259 ;;  ap              1   13[BANK0 ] PTR void [1]
  2260 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  2    4[BANK0 ] int 
  2263 ;; Registers used:
  2264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2265 ;; Tracked objects:
  2266 ;;		On entry : 3F/0
  2267 ;;		On exit  : 3F/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2270 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2271 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2273 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2274 ;;Total ram usage:       16 bytes
  2275 ;; Hardware stack levels used:    1
  2276 ;; Hardware stack levels required when called:   12
  2277 ;; This function calls:
  2278 ;;		_vfprintf
  2279 ;; This function is called by:
  2280 ;;		_work_sw
  2281 ;;		_main
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           	psect	text2
  2286  004C9A                     __ptext2:
  2287                           	opt callstack 0
  2288  004C9A                     _sprintf:
  2289                           	opt callstack 17
  2290                           
  2291                           ; BSR set to: 0
  2292                           
  2293                           ;incstack = 0
  2294  004C9A  0E67               	movlw	low (?_sprintf+3)
  2295  004C9C  6F6D               	movwf	sprintf@ap& (0+255),b
  2296  004C9E  0060  F190  F06E   	movff	sprintf@s,sprintf@f
  2297  004CA4  0060  F194  F06F   	movff	sprintf@s+1,sprintf@f+1
  2298                           
  2299                           ; BSR set to: 0
  2300  004CAA  0E00               	movlw	0
  2301  004CAC  6F71               	movwf	(sprintf@f+3)& (0+255),b
  2302  004CAE  0E00               	movlw	0
  2303  004CB0  6F70               	movwf	(sprintf@f+2)& (0+255),b
  2304                           
  2305                           ; BSR set to: 0
  2306  004CB2  0E00               	movlw	0
  2307  004CB4  6F73               	movwf	(sprintf@f+5)& (0+255),b
  2308  004CB6  0E00               	movlw	0
  2309  004CB8  6F72               	movwf	(sprintf@f+4)& (0+255),b
  2310                           
  2311                           ; BSR set to: 0
  2312  004CBA  0E6E               	movlw	low sprintf@f
  2313  004CBC  6F60               	movwf	vfprintf@fp& (0+255),b
  2314  004CBE  6B61               	clrf	(vfprintf@fp+1)& (0+255),b
  2315  004CC0  0060  F198  F062   	movff	sprintf@fmt,vfprintf@fmt
  2316  004CC6  0E6D               	movlw	low sprintf@ap
  2317  004CC8  6F63               	movwf	vfprintf@ap& (0+255),b
  2318  004CCA  ECD1  F025         	call	_vfprintf	;wreg free
  2319                           
  2320                           ; BSR set to: 1
  2321  004CCE  0100               	movlb	0	; () banked
  2322  004CD0  5170               	movf	(sprintf@f+2)& (0+255),w,b
  2323  004CD2  2564               	addwf	sprintf@s& (0+255),w,b
  2324  004CD4  6ED9               	movwf	fsr2l,c
  2325  004CD6  5171               	movf	(sprintf@f+3)& (0+255),w,b
  2326  004CD8  2165               	addwfc	(sprintf@s+1)& (0+255),w,b
  2327  004CDA  6EDA               	movwf	fsr2h,c
  2328  004CDC  0E00               	movlw	0
  2329  004CDE  6EDF               	movwf	indf2,c
  2330                           
  2331                           ; BSR set to: 0
  2332  004CE0  0012               	return		;funcret
  2333  004CE2                     __end_of_sprintf:
  2334                           	opt callstack 0
  2335                           
  2336 ;; *************** function _eaDogM_WriteStringAtPos *****************
  2337 ;; Defined at:
  2338 ;;		line 122 in file "eadog.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;  r               1    wreg     const unsigned char 
  2341 ;;  c               1   13[COMRAM] const unsigned char 
  2342 ;;  strPtr          2   14[COMRAM] PTR unsigned char 
  2343 ;;		 -> main@buffer(24), work_sw@buffer(128), 
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;  r               1   16[COMRAM] const unsigned char 
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      void 
  2348 ;; Registers used:
  2349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2355 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2356 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2358 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2359 ;;Total ram usage:        4 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; Hardware stack levels required when called:    6
  2362 ;; This function calls:
  2363 ;;		_eaDogM_WriteString
  2364 ;;		_send_lcd_cmd
  2365 ;; This function is called by:
  2366 ;;		_work_sw
  2367 ;;		_main
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           	psect	text3
  2372  00527C                     __ptext3:
  2373                           	opt callstack 0
  2374  00527C                     _eaDogM_WriteStringAtPos:
  2375                           	opt callstack 23
  2376                           
  2377                           ; BSR set to: 0
  2378                           ;incstack = 0
  2379                           ;eaDogM_WriteStringAtPos@r stored from wreg
  2380  00527C  6E11               	movwf	eaDogM_WriteStringAtPos@r^0,c
  2381                           
  2382                           ;eadog.c: 122: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 123: {;eadog.c: 124:  send_lcd_cmd((0b10000000 + (r * 16) + c));
  2383  00527E  5011               	movf	eaDogM_WriteStringAtPos@r^0,w,c
  2384  005280  0D10               	mullw	16
  2385  005282  50F3               	movf	243,w,c
  2386  005284  240E               	addwf	eaDogM_WriteStringAtPos@c^0,w,c
  2387  005286  0F80               	addlw	128
  2388  005288  EC72  F027         	call	_send_lcd_cmd
  2389                           
  2390                           ; BSR set to: 1
  2391                           ;eadog.c: 125:  eaDogM_WriteString(strPtr);
  2392  00528C  0060  F03C  F00A   	movff	eaDogM_WriteStringAtPos@strPtr,eaDogM_WriteString@strPtr
  2393  005292  0060  F040  F00B   	movff	eaDogM_WriteStringAtPos@strPtr+1,eaDogM_WriteString@strPtr+1
  2394  005298  EC41  F025         	call	_eaDogM_WriteString	;wreg free
  2395  00529C  0012               	return		;funcret
  2396  00529E                     __end_of_eaDogM_WriteStringAtPos:
  2397                           	opt callstack 0
  2398                           
  2399 ;; *************** function _eaDogM_WriteString *****************
  2400 ;; Defined at:
  2401 ;;		line 106 in file "eadog.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;  strPtr          2    9[COMRAM] PTR unsigned char 
  2404 ;;		 -> main@buffer(24), work_sw@buffer(128), 
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;  bytesWritten    1   12[COMRAM] unsigned char 
  2407 ;;  i               1   11[COMRAM] unsigned char 
  2408 ;; Return value:  Size  Location     Type
  2409 ;;                  1    wreg      void 
  2410 ;; Registers used:
  2411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2412 ;; Tracked objects:
  2413 ;;		On entry : 3F/1
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2417 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2418 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2420 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2421 ;;Total ram usage:        4 bytes
  2422 ;; Hardware stack levels used:    1
  2423 ;; Hardware stack levels required when called:    5
  2424 ;; This function calls:
  2425 ;;		_SPI1_Exchange8bit
  2426 ;;		_strlen
  2427 ;;		_wdtdelay
  2428 ;; This function is called by:
  2429 ;;		_eaDogM_WriteStringAtPos
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           	psect	text4
  2434  004A82                     __ptext4:
  2435                           	opt callstack 0
  2436  004A82                     _eaDogM_WriteString:
  2437                           	opt callstack 23
  2438                           
  2439                           ; BSR set to: 1
  2440                           ;eadog.c: 106: void eaDogM_WriteString(char *strPtr);eadog.c: 107: {;eadog.c: 108:  uint
      +                          8_t i = strlen(strPtr);
  2441                           
  2442                           ;incstack = 0
  2443  004A82  0060  F028  F006   	movff	eaDogM_WriteString@strPtr,strlen@s
  2444  004A88  0060  F02C  F007   	movff	eaDogM_WriteString@strPtr+1,strlen@s+1
  2445  004A8E  ECFF  F025         	call	_strlen	;wreg free
  2446  004A92  5006               	movf	?_strlen^0,w,c
  2447  004A94  6E0C               	movwf	eaDogM_WriteString@i^0,c
  2448                           
  2449                           ;eadog.c: 109:  uint8_t bytesWritten = 0;
  2450  004A96  0E00               	movlw	0
  2451  004A98  6E0D               	movwf	eaDogM_WriteString@bytesWritten^0,c
  2452  004A9A  82BC               	bsf	188,1,c	;volatile
  2453  004A9C  94BC               	bcf	188,2,c	;volatile
  2454                           
  2455                           ;eadog.c: 113:  if (i > 64) strPtr[64] = 0;
  2456  004A9E  0E40               	movlw	64
  2457  004AA0  640C               	cpfsgt	eaDogM_WriteString@i^0,c
  2458  004AA2  D01D               	goto	l6972
  2459  004AA4  EE20 F040          	lfsr	2,64
  2460  004AA8  500A               	movf	eaDogM_WriteString@strPtr^0,w,c
  2461  004AAA  26D9               	addwf	fsr2l,f,c
  2462  004AAC  500B               	movf	(eaDogM_WriteString@strPtr+1)^0,w,c
  2463  004AAE  22DA               	addwfc	fsr2h,f,c
  2464  004AB0  0E00               	movlw	0
  2465  004AB2  6EDF               	movwf	indf2,c
  2466  004AB4  D014               	goto	l6972
  2467  004AB6                     l6966:
  2468                           
  2469                           ;eadog.c: 116:   wdtdelay(9);
  2470  004AB6  0E09               	movlw	9
  2471  004AB8  6E06               	movwf	wdtdelay@delay^0,c
  2472  004ABA  0E00               	movlw	0
  2473  004ABC  6E07               	movwf	(wdtdelay@delay+1)^0,c
  2474  004ABE  0E00               	movlw	0
  2475  004AC0  6E08               	movwf	(wdtdelay@delay+2)^0,c
  2476  004AC2  0E00               	movlw	0
  2477  004AC4  6E09               	movwf	(wdtdelay@delay+3)^0,c
  2478  004AC6  EC55  F027         	call	_wdtdelay	;wreg free
  2479                           
  2480                           ; BSR set to: 1
  2481                           ;eadog.c: 117:   SPI1_Exchange8bit(strPtr[bytesWritten]);
  2482  004ACA  500D               	movf	eaDogM_WriteString@bytesWritten^0,w,c
  2483  004ACC  240A               	addwf	eaDogM_WriteString@strPtr^0,w,c
  2484  004ACE  6ED9               	movwf	fsr2l,c
  2485  004AD0  0E00               	movlw	0
  2486  004AD2  200B               	addwfc	(eaDogM_WriteString@strPtr+1)^0,w,c
  2487  004AD4  6EDA               	movwf	fsr2h,c
  2488  004AD6  50DF               	movf	indf2,w,c
  2489  004AD8  EC9B  F029         	call	_SPI1_Exchange8bit
  2490                           
  2491                           ; BSR set to: 61
  2492                           ;eadog.c: 118:   bytesWritten++;
  2493  004ADC  2A0D               	incf	eaDogM_WriteString@bytesWritten^0,f,c
  2494  004ADE                     l6972:
  2495                           
  2496                           ;eadog.c: 115:  while (bytesWritten < i) {
  2497  004ADE  500C               	movf	eaDogM_WriteString@i^0,w,c
  2498  004AE0  5C0D               	subwf	eaDogM_WriteString@bytesWritten^0,w,c
  2499  004AE2  B0D8               	btfsc	status,0,c
  2500  004AE4  0012               	return	
  2501  004AE6  D7E7               	goto	l6966
  2502  004AE8                     __end_of_eaDogM_WriteString:
  2503                           	opt callstack 0
  2504                           
  2505 ;; *************** function _srand *****************
  2506 ;; Defined at:
  2507 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  s               2    5[COMRAM] unsigned int 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;		None
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      void 
  2514 ;; Registers used:
  2515 ;;		wreg, status,2, status,0
  2516 ;; Tracked objects:
  2517 ;;		On entry : 3F/1
  2518 ;;		On exit  : 3F/1
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2521 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2523 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2524 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2525 ;;Total ram usage:        6 bytes
  2526 ;; Hardware stack levels used:    1
  2527 ;; Hardware stack levels required when called:    4
  2528 ;; This function calls:
  2529 ;;		Nothing
  2530 ;; This function is called by:
  2531 ;;		_main
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           	psect	text5
  2536  004F54                     __ptext5:
  2537                           	opt callstack 0
  2538  004F54                     _srand:
  2539                           	opt callstack 26
  2540                           
  2541                           ; BSR set to: 1
  2542                           
  2543                           ;incstack = 0
  2544  004F54  0EFF               	movlw	255
  2545  004F56  6E08               	movwf	??_srand^0,c
  2546  004F58  0EFF               	movlw	255
  2547  004F5A  6E09               	movwf	(??_srand+1)^0,c
  2548  004F5C  0060  F018  F00A   	movff	srand@s,??_srand+2
  2549  004F62  0060  F01C  F00B   	movff	srand@s+1,??_srand+3
  2550  004F68  5008               	movf	??_srand^0,w,c
  2551  004F6A  260A               	addwf	(??_srand+2)^0,f,c
  2552  004F6C  5009               	movf	(??_srand+1)^0,w,c
  2553  004F6E  220B               	addwfc	(??_srand+3)^0,f,c
  2554  004F70  0060  F028  F196   	movff	??_srand+2,_seed
  2555  004F76  0060  F02C  F197   	movff	??_srand+3,_seed+1
  2556  004F7C  6B98               	clrf	(_seed+2)& (0+255),b
  2557  004F7E  6B99               	clrf	(_seed+3)& (0+255),b
  2558  004F80  6B9A               	clrf	(_seed+4)& (0+255),b
  2559  004F82  6B9B               	clrf	(_seed+5)& (0+255),b
  2560  004F84  6B9C               	clrf	(_seed+6)& (0+255),b
  2561  004F86  6B9D               	clrf	(_seed+7)& (0+255),b
  2562                           
  2563                           ; BSR set to: 1
  2564  004F88  0012               	return		;funcret
  2565  004F8A                     __end_of_srand:
  2566                           	opt callstack 0
  2567                           
  2568 ;; *************** function _rand *****************
  2569 ;; Defined at:
  2570 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;		None
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;		None
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  2   29[COMRAM] int 
  2577 ;; Registers used:
  2578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2579 ;; Tracked objects:
  2580 ;;		On entry : 3F/0
  2581 ;;		On exit  : 3F/1
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2584 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2586 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2587 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2588 ;;Total ram usage:       10 bytes
  2589 ;; Hardware stack levels used:    1
  2590 ;; Hardware stack levels required when called:    5
  2591 ;; This function calls:
  2592 ;;		___omul
  2593 ;; This function is called by:
  2594 ;;		_main
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           	psect	text6
  2599  004078                     __ptext6:
  2600                           	opt callstack 0
  2601  004078                     _rand:
  2602                           	opt callstack 25
  2603                           
  2604                           ; BSR set to: 0
  2605                           
  2606                           ; BSR set to: 1
  2607                           ;incstack = 0
  2608  004078  0060  F658  F006   	movff	_seed,___omul@multiplier
  2609  00407E  0060  F65C  F007   	movff	_seed+1,___omul@multiplier+1
  2610  004084  0060  F660  F008   	movff	_seed+2,___omul@multiplier+2
  2611  00408A  0060  F664  F009   	movff	_seed+3,___omul@multiplier+3
  2612  004090  0060  F668  F00A   	movff	_seed+4,___omul@multiplier+4
  2613  004096  0060  F66C  F00B   	movff	_seed+5,___omul@multiplier+5
  2614  00409C  0060  F670  F00C   	movff	_seed+6,___omul@multiplier+6
  2615  0040A2  0060  F674  F00D   	movff	_seed+7,___omul@multiplier+7
  2616  0040A8  0E2D               	movlw	45
  2617  0040AA  6E0E               	movwf	___omul@multiplicand^0,c
  2618  0040AC  0E7F               	movlw	127
  2619  0040AE  6E0F               	movwf	(___omul@multiplicand+1)^0,c
  2620  0040B0  0E95               	movlw	149
  2621  0040B2  6E10               	movwf	(___omul@multiplicand+2)^0,c
  2622  0040B4  0E4C               	movlw	76
  2623  0040B6  6E11               	movwf	(___omul@multiplicand+3)^0,c
  2624  0040B8  0E2D               	movlw	45
  2625  0040BA  6E12               	movwf	(___omul@multiplicand+4)^0,c
  2626  0040BC  0EF4               	movlw	244
  2627  0040BE  6E13               	movwf	(___omul@multiplicand+5)^0,c
  2628  0040C0  0E51               	movlw	81
  2629  0040C2  6E14               	movwf	(___omul@multiplicand+6)^0,c
  2630  0040C4  0E58               	movlw	88
  2631  0040C6  6E15               	movwf	(___omul@multiplicand+7)^0,c
  2632  0040C8  ECF4  F023         	call	___omul	;wreg free
  2633  0040CC  0060  F018  F020   	movff	?___omul,??_rand
  2634  0040D2  0060  F01C  F021   	movff	?___omul+1,??_rand+1
  2635  0040D8  0060  F020  F022   	movff	?___omul+2,??_rand+2
  2636  0040DE  0060  F024  F023   	movff	?___omul+3,??_rand+3
  2637  0040E4  0060  F028  F024   	movff	?___omul+4,??_rand+4
  2638  0040EA  0060  F02C  F025   	movff	?___omul+5,??_rand+5
  2639  0040F0  0060  F030  F026   	movff	?___omul+6,??_rand+6
  2640  0040F6  0060  F034  F027   	movff	?___omul+7,??_rand+7
  2641  0040FC  0E01               	movlw	1
  2642  0040FE  2420               	addwf	??_rand^0,w,c
  2643  004100  0101               	movlb	1	; () banked
  2644  004102  6F96               	movwf	_seed& (0+255),b
  2645  004104  0E00               	movlw	0
  2646  004106  2021               	addwfc	(??_rand+1)^0,w,c
  2647  004108  6F97               	movwf	(_seed+1)& (0+255),b
  2648  00410A  0E00               	movlw	0
  2649  00410C  2022               	addwfc	(??_rand+2)^0,w,c
  2650  00410E  6F98               	movwf	(_seed+2)& (0+255),b
  2651  004110  0E00               	movlw	0
  2652  004112  2023               	addwfc	(??_rand+3)^0,w,c
  2653  004114  6F99               	movwf	(_seed+3)& (0+255),b
  2654  004116  0E00               	movlw	0
  2655  004118  2024               	addwfc	(??_rand+4)^0,w,c
  2656  00411A  6F9A               	movwf	(_seed+4)& (0+255),b
  2657  00411C  0E00               	movlw	0
  2658  00411E  2025               	addwfc	(??_rand+5)^0,w,c
  2659  004120  6F9B               	movwf	(_seed+5)& (0+255),b
  2660  004122  0E00               	movlw	0
  2661  004124  2026               	addwfc	(??_rand+6)^0,w,c
  2662  004126  6F9C               	movwf	(_seed+6)& (0+255),b
  2663  004128  0E00               	movlw	0
  2664  00412A  2027               	addwfc	(??_rand+7)^0,w,c
  2665  00412C  6F9D               	movwf	(_seed+7)& (0+255),b
  2666                           
  2667                           ; BSR set to: 1
  2668  00412E  0060  F658  F020   	movff	_seed,??_rand
  2669  004134  0060  F65C  F021   	movff	_seed+1,??_rand+1
  2670  00413A  0060  F660  F022   	movff	_seed+2,??_rand+2
  2671  004140  0060  F664  F023   	movff	_seed+3,??_rand+3
  2672  004146  0060  F668  F024   	movff	_seed+4,??_rand+4
  2673  00414C  0060  F66C  F025   	movff	_seed+5,??_rand+5
  2674  004152  0060  F670  F026   	movff	_seed+6,??_rand+6
  2675  004158  0060  F674  F027   	movff	_seed+7,??_rand+7
  2676  00415E  0E32               	movlw	50
  2677  004160  D009               	goto	u8290
  2678  004162                     u8295:
  2679  004162  90D8               	bcf	status,0,c
  2680  004164  3227               	rrcf	(??_rand+7)^0,f,c
  2681  004166  3226               	rrcf	(??_rand+6)^0,f,c
  2682  004168  3225               	rrcf	(??_rand+5)^0,f,c
  2683  00416A  3224               	rrcf	(??_rand+4)^0,f,c
  2684  00416C  3223               	rrcf	(??_rand+3)^0,f,c
  2685  00416E  3222               	rrcf	(??_rand+2)^0,f,c
  2686  004170  3221               	rrcf	(??_rand+1)^0,f,c
  2687  004172  3220               	rrcf	??_rand^0,f,c
  2688  004174                     u8290:
  2689  004174  2EE8               	decfsz	wreg,f,c
  2690  004176  D7F5               	goto	u8295
  2691  004178  0060  F080  F01E   	movff	??_rand,?_rand
  2692  00417E  0060  F088  F01F   	movff	??_rand+2,?_rand+1
  2693                           
  2694                           ; BSR set to: 1
  2695  004184  0012               	return		;funcret
  2696  004186                     __end_of_rand:
  2697                           	opt callstack 0
  2698                           
  2699 ;; *************** function ___omul *****************
  2700 ;; Defined at:
  2701 ;;		line 91 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul64.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  multiplier      8    5[COMRAM] unsigned long long 
  2704 ;;  multiplicand    8   13[COMRAM] unsigned long long 
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;  product         8   21[COMRAM] unsigned long long 
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  8    5[COMRAM] unsigned long long 
  2709 ;; Registers used:
  2710 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2711 ;; Tracked objects:
  2712 ;;		On entry : 3F/0
  2713 ;;		On exit  : 3F/0
  2714 ;;		Unchanged: 3F/0
  2715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2716 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2717 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2719 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2720 ;;Total ram usage:       24 bytes
  2721 ;; Hardware stack levels used:    1
  2722 ;; Hardware stack levels required when called:    4
  2723 ;; This function calls:
  2724 ;;		Nothing
  2725 ;; This function is called by:
  2726 ;;		_rand
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           	psect	text7
  2731  0047E8                     __ptext7:
  2732                           	opt callstack 0
  2733  0047E8                     ___omul:
  2734                           	opt callstack 25
  2735                           
  2736                           ; BSR set to: 0
  2737                           
  2738                           ; BSR set to: 1
  2739                           ;incstack = 0
  2740  0047E8  EE20  F016         	lfsr	2,___omul@product
  2741  0047EC  0E07               	movlw	7
  2742  0047EE                     u7681:
  2743  0047EE  6ADE               	clrf	postinc2,c
  2744  0047F0  06E8               	decf	wreg,f,c
  2745  0047F2  E2FD               	bc	u7681
  2746  0047F4                     l7324:
  2747                           
  2748                           ; BSR set to: 0
  2749  0047F4  A006               	btfss	___omul@multiplier^0,0,c
  2750  0047F6  D010               	goto	l7328
  2751                           
  2752                           ; BSR set to: 0
  2753  0047F8  500E               	movf	___omul@multiplicand^0,w,c
  2754  0047FA  2616               	addwf	___omul@product^0,f,c
  2755  0047FC  500F               	movf	(___omul@multiplicand+1)^0,w,c
  2756  0047FE  2217               	addwfc	(___omul@product+1)^0,f,c
  2757  004800  5010               	movf	(___omul@multiplicand+2)^0,w,c
  2758  004802  2218               	addwfc	(___omul@product+2)^0,f,c
  2759  004804  5011               	movf	(___omul@multiplicand+3)^0,w,c
  2760  004806  2219               	addwfc	(___omul@product+3)^0,f,c
  2761  004808  5012               	movf	(___omul@multiplicand+4)^0,w,c
  2762  00480A  221A               	addwfc	(___omul@product+4)^0,f,c
  2763  00480C  5013               	movf	(___omul@multiplicand+5)^0,w,c
  2764  00480E  221B               	addwfc	(___omul@product+5)^0,f,c
  2765  004810  5014               	movf	(___omul@multiplicand+6)^0,w,c
  2766  004812  221C               	addwfc	(___omul@product+6)^0,f,c
  2767  004814  5015               	movf	(___omul@multiplicand+7)^0,w,c
  2768  004816  221D               	addwfc	(___omul@product+7)^0,f,c
  2769  004818                     l7328:
  2770                           
  2771                           ; BSR set to: 0
  2772  004818  90D8               	bcf	status,0,c
  2773  00481A  360E               	rlcf	___omul@multiplicand^0,f,c
  2774  00481C  360F               	rlcf	(___omul@multiplicand+1)^0,f,c
  2775  00481E  3610               	rlcf	(___omul@multiplicand+2)^0,f,c
  2776  004820  3611               	rlcf	(___omul@multiplicand+3)^0,f,c
  2777  004822  3612               	rlcf	(___omul@multiplicand+4)^0,f,c
  2778  004824  3613               	rlcf	(___omul@multiplicand+5)^0,f,c
  2779  004826  3614               	rlcf	(___omul@multiplicand+6)^0,f,c
  2780  004828  3615               	rlcf	(___omul@multiplicand+7)^0,f,c
  2781                           
  2782                           ; BSR set to: 0
  2783  00482A  90D8               	bcf	status,0,c
  2784  00482C  320D               	rrcf	(___omul@multiplier+7)^0,f,c
  2785  00482E  320C               	rrcf	(___omul@multiplier+6)^0,f,c
  2786  004830  320B               	rrcf	(___omul@multiplier+5)^0,f,c
  2787  004832  320A               	rrcf	(___omul@multiplier+4)^0,f,c
  2788  004834  3209               	rrcf	(___omul@multiplier+3)^0,f,c
  2789  004836  3208               	rrcf	(___omul@multiplier+2)^0,f,c
  2790  004838  3207               	rrcf	(___omul@multiplier+1)^0,f,c
  2791  00483A  3206               	rrcf	___omul@multiplier^0,f,c
  2792  00483C  5006               	movf	___omul@multiplier^0,w,c
  2793  00483E  1007               	iorwf	(___omul@multiplier+1)^0,w,c
  2794  004840  1008               	iorwf	(___omul@multiplier+2)^0,w,c
  2795  004842  1009               	iorwf	(___omul@multiplier+3)^0,w,c
  2796  004844  100A               	iorwf	(___omul@multiplier+4)^0,w,c
  2797  004846  100B               	iorwf	(___omul@multiplier+5)^0,w,c
  2798  004848  100C               	iorwf	(___omul@multiplier+6)^0,w,c
  2799  00484A  100D               	iorwf	(___omul@multiplier+7)^0,w,c
  2800  00484C  A4D8               	btfss	status,2,c
  2801  00484E  D7D2               	goto	l7324
  2802                           
  2803                           ; BSR set to: 0
  2804  004850  0060  F058  F006   	movff	___omul@product,?___omul
  2805  004856  0060  F05C  F007   	movff	___omul@product+1,?___omul+1
  2806  00485C  0060  F060  F008   	movff	___omul@product+2,?___omul+2
  2807  004862  0060  F064  F009   	movff	___omul@product+3,?___omul+3
  2808  004868  0060  F068  F00A   	movff	___omul@product+4,?___omul+4
  2809  00486E  0060  F06C  F00B   	movff	___omul@product+5,?___omul+5
  2810  004874  0060  F070  F00C   	movff	___omul@product+6,?___omul+6
  2811  00487A  0060  F074  F00D   	movff	___omul@product+7,?___omul+7
  2812                           
  2813                           ; BSR set to: 0
  2814  004880  0012               	return		;funcret
  2815  004882                     __end_of___omul:
  2816                           	opt callstack 0
  2817                           
  2818 ;; *************** function _once *****************
  2819 ;; Defined at:
  2820 ;;		line 284 in file "d232.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  once_flag       2    5[COMRAM] PTR _Bool 
  2823 ;;		 -> IO(41), 
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;		None
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      _Bool 
  2828 ;; Registers used:
  2829 ;;		wreg, fsr2l, fsr2h, status,2
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/1
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2835 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2838 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2839 ;;Total ram usage:        2 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; Hardware stack levels required when called:    4
  2842 ;; This function calls:
  2843 ;;		Nothing
  2844 ;; This function is called by:
  2845 ;;		_main
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           	psect	text8
  2850  0050E6                     __ptext8:
  2851                           	opt callstack 0
  2852  0050E6                     _once:
  2853                           	opt callstack 26
  2854                           
  2855                           ;d232.c: 284: _Bool once(_Bool *once_flag);d232.c: 285: {;d232.c: 286:  if (*once_flag) 
      +                          {
  2856                           
  2857                           ; BSR set to: 0
  2858                           ;incstack = 0
  2859  0050E6  0060  F01B  FFD9   	movff	once@once_flag,fsr2l
  2860  0050EC  0060  F01F  FFDA   	movff	once@once_flag+1,fsr2h
  2861  0050F2  50DF               	movf	indf2,w,c
  2862  0050F4  B4D8               	btfsc	status,2,c
  2863  0050F6  D00A               	goto	l7710
  2864                           
  2865                           ;d232.c: 287:   *once_flag = 0;
  2866  0050F8  0060  F01B  FFD9   	movff	once@once_flag,fsr2l
  2867  0050FE  0060  F01F  FFDA   	movff	once@once_flag+1,fsr2h
  2868  005104  0E00               	movlw	0
  2869  005106  6EDF               	movwf	indf2,c
  2870                           
  2871                           ;d232.c: 288:   return 1;
  2872  005108  0E01               	movlw	1
  2873  00510A  0012               	return	
  2874  00510C                     l7710:
  2875                           
  2876                           ;d232.c: 291:   return 0;
  2877  00510C  0E00               	movlw	0
  2878  00510E  0012               	return		;funcret
  2879  005110                     __end_of_once:
  2880                           	opt callstack 0
  2881                           
  2882 ;; *************** function _led_lightshow *****************
  2883 ;; Defined at:
  2884 ;;		line 175 in file "d232.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;  seq             1    wreg     unsigned char 
  2887 ;;  speed           2   13[COMRAM] unsigned short 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;  seq             1   17[COMRAM] unsigned char 
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  1    wreg      void 
  2892 ;; Registers used:
  2893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2894 ;; Tracked objects:
  2895 ;;		On entry : 3F/1
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2899 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2900 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2901 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2902 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2903 ;;Total ram usage:        5 bytes
  2904 ;; Hardware stack levels used:    1
  2905 ;; Hardware stack levels required when called:    5
  2906 ;; This function calls:
  2907 ;;		_StartTimer
  2908 ;;		_TimerDone
  2909 ;;		___awdiv
  2910 ;; This function is called by:
  2911 ;;		_main
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915                           	psect	text9
  2916  002AE6                     __ptext9:
  2917                           	opt callstack 0
  2918  002AE6                     _led_lightshow:
  2919                           	opt callstack 25
  2920                           
  2921                           ;incstack = 0
  2922                           ;led_lightshow@seq stored from wreg
  2923  002AE6  6E12               	movwf	led_lightshow@seq^0,c
  2924                           
  2925                           ;d232.c: 175: void led_lightshow(uint8_t seq, uint16_t speed);d232.c: 176: {;d232.c: 177
      +                          :  static uint16_t j = 0;;d232.c: 178:  static uint8_t cylon = 0xff;;d232.c: 179:  stati
      +                          c int16_t alive_led = 0;;d232.c: 180:  static _Bool LED_UP = 1;;d232.c: 182:  if (seq ==
      +                           1) {
  2926  002AE8  0412               	decf	led_lightshow@seq^0,w,c
  2927  002AEA  A4D8               	btfss	status,2,c
  2928  002AEC  D003               	goto	l7574
  2929                           
  2930                           ;d232.c: 183:   IO.outbytes[2] = IO.inbytes[0];
  2931  002AEE  C1A9  F1B0         	movff	_IO,_IO+7
  2932                           
  2933                           ;d232.c: 184:   return;
  2934  002AF2  0012               	return	
  2935  002AF4                     l7574:
  2936                           
  2937                           ;d232.c: 187:  if (seq == 2) {
  2938  002AF4  0E02               	movlw	2
  2939  002AF6  1812               	xorwf	led_lightshow@seq^0,w,c
  2940  002AF8  A4D8               	btfss	status,2,c
  2941  002AFA  D010               	goto	l7586
  2942                           
  2943                           ;d232.c: 188:   if (IO.sequence_done) {
  2944  002AFC  0101               	movlb	1	; () banked
  2945  002AFE  51CB               	movf	(_IO+34)& (0+255),w,b
  2946  002B00  B4D8               	btfsc	status,2,c
  2947  002B02  D009               	goto	l7582
  2948                           
  2949                           ; BSR set to: 1
  2950                           ;d232.c: 189:    IO.sequence_done = 0;
  2951  002B04  0E00               	movlw	0
  2952  002B06  6FCB               	movwf	(_IO+34)& (0+255),b
  2953                           
  2954                           ; BSR set to: 1
  2955                           ;d232.c: 190:    StartTimer(TMR_SEQ, 30000);
  2956  002B08  0E75               	movlw	117
  2957  002B0A  6E07               	movwf	(StartTimer@count+1)^0,c
  2958  002B0C  0E30               	movlw	48
  2959  002B0E  6E06               	movwf	StartTimer@count^0,c
  2960  002B10  0E06               	movlw	6
  2961  002B12  ECFB  F027         	call	_StartTimer
  2962  002B16                     l7582:
  2963                           
  2964                           ;d232.c: 192:   IO.outbytes[2]++;
  2965  002B16  0101               	movlb	1	; () banked
  2966  002B18  2BB0               	incf	(_IO+7)& (0+255),f,b
  2967  002B1A  0012               	return	
  2968  002B1C                     l7586:
  2969                           
  2970                           ;d232.c: 196:  if (seq == 0) {
  2971  002B1C  5012               	movf	led_lightshow@seq^0,w,c
  2972  002B1E  A4D8               	btfss	status,2,c
  2973  002B20  D05A               	goto	l7614
  2974                           
  2975                           ;d232.c: 197:   if (j++ >= speed) {
  2976  002B22  0101               	movlb	1	; () banked
  2977  002B24  518E               	movf	led_lightshow@j& (0+255),w,b
  2978  002B26  6E10               	movwf	??_led_lightshow^0,c
  2979  002B28  518F               	movf	(led_lightshow@j+1)& (0+255),w,b
  2980  002B2A  6E11               	movwf	(??_led_lightshow+1)^0,c
  2981  002B2C  4B8E               	infsnz	led_lightshow@j& (0+255),f,b
  2982  002B2E  2B8F               	incf	(led_lightshow@j+1)& (0+255),f,b
  2983  002B30  500E               	movf	led_lightshow@speed^0,w,c
  2984  002B32  5C10               	subwf	??_led_lightshow^0,w,c
  2985  002B34  500F               	movf	(led_lightshow@speed+1)^0,w,c
  2986  002B36  5811               	subwfb	(??_led_lightshow+1)^0,w,c
  2987  002B38  A0D8               	btfss	status,0,c
  2988  002B3A  D04D               	goto	l7614
  2989                           
  2990                           ; BSR set to: 1
  2991                           ;d232.c: 201:     IO.outbytes[2] = cylon;
  2992  002B3C  C0AD  F1B0         	movff	led_lightshow@cylon,_IO+7
  2993                           
  2994                           ; BSR set to: 1
  2995                           ;d232.c: 204:    if (LED_UP && (alive_led != 0)) {
  2996  002B40  0100               	movlb	0	; () banked
  2997  002B42  51AC               	movf	led_lightshow@LED_UP& (0+255),w,b
  2998  002B44  B4D8               	btfsc	status,2,c
  2999  002B46  D00C               	goto	l7600
  3000                           
  3001                           ; BSR set to: 0
  3002  002B48  51A0               	movf	led_lightshow@alive_led& (0+255),w,b
  3003  002B4A  11A1               	iorwf	(led_lightshow@alive_led+1)& (0+255),w,b
  3004  002B4C  B4D8               	btfsc	status,2,c
  3005  002B4E  D008               	goto	l7600
  3006                           
  3007                           ; BSR set to: 0
  3008                           ;d232.c: 205:     alive_led = alive_led * 2;
  3009  002B50  90D8               	bcf	status,0,c
  3010  002B52  35A0               	rlcf	led_lightshow@alive_led& (0+255),w,b
  3011  002B54  6FA0               	movwf	led_lightshow@alive_led& (0+255),b
  3012  002B56  35A1               	rlcf	(led_lightshow@alive_led+1)& (0+255),w,b
  3013  002B58  6FA1               	movwf	(led_lightshow@alive_led+1)& (0+255),b
  3014                           
  3015                           ;d232.c: 206:     cylon = cylon << 1;
  3016  002B5A  51AD               	movf	led_lightshow@cylon& (0+255),w,b
  3017  002B5C  25AD               	addwf	led_lightshow@cylon& (0+255),w,b
  3018  002B5E  D019               	goto	L1
  3019  002B60                     l7600:
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;d232.c: 208:     if (alive_led != 0) alive_led = alive_led / 2;
  3023  002B60  51A0               	movf	led_lightshow@alive_led& (0+255),w,b
  3024  002B62  11A1               	iorwf	(led_lightshow@alive_led+1)& (0+255),w,b
  3025  002B64  B4D8               	btfsc	status,2,c
  3026  002B66  D012               	goto	l7604
  3027                           
  3028                           ; BSR set to: 0
  3029  002B68  0060  F280  F006   	movff	led_lightshow@alive_led,___awdiv@dividend
  3030  002B6E  0060  F284  F007   	movff	led_lightshow@alive_led+1,___awdiv@dividend+1
  3031  002B74  0E00               	movlw	0
  3032  002B76  6E09               	movwf	(___awdiv@divisor+1)^0,c
  3033  002B78  0E02               	movlw	2
  3034  002B7A  6E08               	movwf	___awdiv@divisor^0,c
  3035  002B7C  EC8A  F024         	call	___awdiv	;wreg free
  3036  002B80  0060  F018  F0A0   	movff	?___awdiv,led_lightshow@alive_led
  3037  002B86  0060  F01C  F0A1   	movff	?___awdiv+1,led_lightshow@alive_led+1
  3038  002B8C                     l7604:
  3039                           
  3040                           ;d232.c: 209:     cylon = cylon >> 1;
  3041  002B8C  0100               	movlb	0	; () banked
  3042  002B8E  90D8               	bcf	status,0,c
  3043  002B90  31AD               	rrcf	led_lightshow@cylon& (0+255),w,b
  3044  002B92                     L1:
  3045  002B92  6FAD               	movwf	led_lightshow@cylon& (0+255),b
  3046                           
  3047                           ; BSR set to: 0
  3048                           ;d232.c: 211:    if (alive_led < 2) {
  3049  002B94  BFA1               	btfsc	(led_lightshow@alive_led+1)& (0+255),7,b
  3050  002B96  D006               	goto	u8040
  3051  002B98  51A1               	movf	(led_lightshow@alive_led+1)& (0+255),w,b
  3052  002B9A  E10A               	bnz	l7610
  3053  002B9C  0E02               	movlw	2
  3054  002B9E  5DA0               	subwf	led_lightshow@alive_led& (0+255),w,b
  3055  002BA0  B0D8               	btfsc	status,0,c
  3056  002BA2  D006               	goto	l7610
  3057  002BA4                     u8040:
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;d232.c: 212:     alive_led = 2;
  3061  002BA4  0E00               	movlw	0
  3062  002BA6  6FA1               	movwf	(led_lightshow@alive_led+1)& (0+255),b
  3063  002BA8  0E02               	movlw	2
  3064  002BAA  6FA0               	movwf	led_lightshow@alive_led& (0+255),b
  3065                           
  3066                           ;d232.c: 213:     LED_UP = 1;
  3067  002BAC  0E01               	movlw	1
  3068  002BAE  D00D               	goto	L2
  3069  002BB0                     l7610:
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;d232.c: 215:     if (alive_led > 128) {
  3073  002BB0  BFA1               	btfsc	(led_lightshow@alive_led+1)& (0+255),7,b
  3074  002BB2  D00C               	goto	l1206
  3075  002BB4  51A1               	movf	(led_lightshow@alive_led+1)& (0+255),w,b
  3076  002BB6  E104               	bnz	u8050
  3077  002BB8  0E81               	movlw	129
  3078  002BBA  5DA0               	subwf	led_lightshow@alive_led& (0+255),w,b
  3079  002BBC  A0D8               	btfss	status,0,c
  3080  002BBE  D006               	goto	l1206
  3081  002BC0                     u8050:
  3082                           
  3083                           ; BSR set to: 0
  3084                           ;d232.c: 216:      alive_led = 128;
  3085  002BC0  0E00               	movlw	0
  3086  002BC2  6FA1               	movwf	(led_lightshow@alive_led+1)& (0+255),b
  3087  002BC4  0E80               	movlw	128
  3088  002BC6  6FA0               	movwf	led_lightshow@alive_led& (0+255),b
  3089                           
  3090                           ;d232.c: 217:      LED_UP = 0;
  3091  002BC8  0E00               	movlw	0
  3092  002BCA                     L2:
  3093  002BCA  6FAC               	movwf	led_lightshow@LED_UP& (0+255),b
  3094  002BCC                     l1206:
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;d232.c: 220:    j = 0;
  3098  002BCC  0E00               	movlw	0
  3099  002BCE  0101               	movlb	1	; () banked
  3100  002BD0  6F8F               	movwf	(led_lightshow@j+1)& (0+255),b
  3101  002BD2  0E00               	movlw	0
  3102  002BD4  6F8E               	movwf	led_lightshow@j& (0+255),b
  3103  002BD6                     l7614:
  3104                           
  3105                           ;d232.c: 224:  if (seq == 3) {
  3106  002BD6  0E03               	movlw	3
  3107  002BD8  1812               	xorwf	led_lightshow@seq^0,w,c
  3108  002BDA  A4D8               	btfss	status,2,c
  3109  002BDC  0012               	return	
  3110                           
  3111                           ;d232.c: 226:   if (otto_b1.result <= -120) {
  3112  002BDE  0101               	movlb	1	; () banked
  3113  002BE0  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  3114  002BE2  D00A               	goto	l7620
  3115  002BE4  0E89               	movlw	137
  3116  002BE6  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3117  002BE8  0EFF               	movlw	255
  3118  002BEA  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  3119  002BEC  B0D8               	btfsc	status,0,c
  3120  002BEE  D004               	goto	l7620
  3121                           
  3122                           ; BSR set to: 1
  3123                           ;d232.c: 227:    IO.outbytes[2] = 0b10000000;
  3124  002BF0  0E80               	movlw	128
  3125  002BF2  6FB0               	movwf	(_IO+7)& (0+255),b
  3126                           
  3127                           ;d232.c: 228:    IO.BAL = UP;
  3128  002BF4  0E00               	movlw	0
  3129  002BF6  6FB8               	movwf	(_IO+15)& (0+255),b
  3130  002BF8                     l7620:
  3131                           
  3132                           ; BSR set to: 1
  3133                           ;d232.c: 230:   if (otto_b1.result > -120 && otto_b1.result < -80) {
  3134  002BF8  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  3135  002BFA  D006               	goto	u8080
  3136  002BFC  0E89               	movlw	137
  3137  002BFE  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3138  002C00  0EFF               	movlw	255
  3139  002C02  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  3140  002C04  A0D8               	btfss	status,0,c
  3141  002C06  D00C               	goto	l7626
  3142  002C08                     u8080:
  3143                           
  3144                           ; BSR set to: 1
  3145  002C08  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  3146  002C0A  D00A               	goto	l7626
  3147  002C0C  0EB0               	movlw	176
  3148  002C0E  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3149  002C10  0EFF               	movlw	255
  3150  002C12  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  3151  002C14  B0D8               	btfsc	status,0,c
  3152  002C16  D004               	goto	l7626
  3153                           
  3154                           ; BSR set to: 1
  3155                           ;d232.c: 231:    IO.outbytes[2] = 0b01000000;
  3156  002C18  0E40               	movlw	64
  3157  002C1A  6FB0               	movwf	(_IO+7)& (0+255),b
  3158                           
  3159                           ;d232.c: 232:    IO.BAL = UP;
  3160  002C1C  0E00               	movlw	0
  3161  002C1E  6FB8               	movwf	(_IO+15)& (0+255),b
  3162  002C20                     l7626:
  3163                           
  3164                           ; BSR set to: 1
  3165                           ;d232.c: 234:   if (otto_b1.result >= -80 && otto_b1.result < -30) {
  3166  002C20  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  3167  002C22  D006               	goto	u8100
  3168  002C24  0EB0               	movlw	176
  3169  002C26  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3170  002C28  0EFF               	movlw	255
  3171  002C2A  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  3172  002C2C  A0D8               	btfss	status,0,c
  3173  002C2E  D00C               	goto	l7632
  3174  002C30                     u8100:
  3175                           
  3176                           ; BSR set to: 1
  3177  002C30  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  3178  002C32  D00A               	goto	l7632
  3179  002C34  0EE2               	movlw	226
  3180  002C36  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3181  002C38  0EFF               	movlw	255
  3182  002C3A  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  3183  002C3C  B0D8               	btfsc	status,0,c
  3184  002C3E  D004               	goto	l7632
  3185                           
  3186                           ; BSR set to: 1
  3187                           ;d232.c: 235:    IO.outbytes[2] = 0b00100000;
  3188  002C40  0E20               	movlw	32
  3189  002C42  6FB0               	movwf	(_IO+7)& (0+255),b
  3190                           
  3191                           ;d232.c: 236:    IO.BAL = UP;
  3192  002C44  0E00               	movlw	0
  3193  002C46  6FB8               	movwf	(_IO+15)& (0+255),b
  3194  002C48                     l7632:
  3195                           
  3196                           ; BSR set to: 1
  3197                           ;d232.c: 238:   if (otto_b1.result >= -30 && otto_b1.result < -5) {
  3198  002C48  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  3199  002C4A  D006               	goto	u8120
  3200  002C4C  0EE2               	movlw	226
  3201  002C4E  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3202  002C50  0EFF               	movlw	255
  3203  002C52  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  3204  002C54  A0D8               	btfss	status,0,c
  3205  002C56  D01B               	goto	l7648
  3206  002C58                     u8120:
  3207                           
  3208                           ; BSR set to: 1
  3209  002C58  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  3210  002C5A  D019               	goto	l7648
  3211  002C5C  0EFB               	movlw	251
  3212  002C5E  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3213  002C60  0EFF               	movlw	255
  3214  002C62  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  3215  002C64  B0D8               	btfsc	status,0,c
  3216  002C66  D013               	goto	l7648
  3217                           
  3218                           ; BSR set to: 1
  3219                           ;d232.c: 239:    if (IO.BAL != UP) {
  3220  002C68  51B8               	movf	(_IO+15)& (0+255),w,b
  3221  002C6A  B4D8               	btfsc	status,2,c
  3222  002C6C  D00B               	goto	l7644
  3223                           
  3224                           ; BSR set to: 1
  3225                           ;d232.c: 240:     IO.outbytes[1] = IO.outbytes[1] | 0x01;
  3226  002C6E  51AF               	movf	(_IO+6)& (0+255),w,b
  3227  002C70  0901               	iorlw	1
  3228  002C72  6FAF               	movwf	(_IO+6)& (0+255),b
  3229                           
  3230                           ; BSR set to: 1
  3231                           ;d232.c: 241:     IO.score--;
  3232  002C74  07BD               	decf	(_IO+20)& (0+255),f,b
  3233                           
  3234                           ; BSR set to: 1
  3235                           ;d232.c: 242:     StartTimer(TMR_BAL, 500);
  3236  002C76  0E01               	movlw	1
  3237  002C78  6E07               	movwf	(StartTimer@count+1)^0,c
  3238  002C7A  0EF4               	movlw	244
  3239  002C7C  6E06               	movwf	StartTimer@count^0,c
  3240  002C7E  0E07               	movlw	7
  3241  002C80  ECFB  F027         	call	_StartTimer
  3242  002C84                     l7644:
  3243                           
  3244                           ;d232.c: 244:    IO.outbytes[2] = 0b00010000;
  3245  002C84  0E10               	movlw	16
  3246  002C86  0101               	movlb	1	; () banked
  3247  002C88  6FB0               	movwf	(_IO+7)& (0+255),b
  3248                           
  3249                           ; BSR set to: 1
  3250                           ;d232.c: 245:    IO.BAL = UP;
  3251  002C8A  0E00               	movlw	0
  3252  002C8C  6FB8               	movwf	(_IO+15)& (0+255),b
  3253  002C8E                     l7648:
  3254                           
  3255                           ; BSR set to: 1
  3256                           ;d232.c: 247:   if (otto_b1.result >= -5 && otto_b1.result <= 5) {
  3257  002C8E  AFDF               	btfss	(_otto_b1+13)& (0+255),7,b
  3258  002C90  D006               	goto	u8150
  3259  002C92  0EFB               	movlw	251
  3260  002C94  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3261  002C96  0EFF               	movlw	255
  3262  002C98  59DF               	subwfb	(_otto_b1+13)& (0+255),w,b
  3263  002C9A  A0D8               	btfss	status,0,c
  3264  002C9C  D025               	goto	l7668
  3265  002C9E                     u8150:
  3266                           
  3267                           ; BSR set to: 1
  3268  002C9E  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  3269  002CA0  D006               	goto	u8160
  3270  002CA2  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  3271  002CA4  E121               	bnz	l7668
  3272  002CA6  0E06               	movlw	6
  3273  002CA8  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3274  002CAA  B0D8               	btfsc	status,0,c
  3275  002CAC  D01D               	goto	l7668
  3276  002CAE                     u8160:
  3277                           
  3278                           ; BSR set to: 1
  3279                           ;d232.c: 248:    if (IO.BAL != ON) {
  3280  002CAE  05B8               	decf	(_IO+15)& (0+255),w,b
  3281  002CB0  B4D8               	btfsc	status,2,c
  3282  002CB2  D015               	goto	l7664
  3283                           
  3284                           ; BSR set to: 1
  3285                           ;d232.c: 249:     IO.outbytes[1] = IO.outbytes[1] | 0x02;
  3286  002CB4  51AF               	movf	(_IO+6)& (0+255),w,b
  3287  002CB6  0902               	iorlw	2
  3288  002CB8  6FAF               	movwf	(_IO+6)& (0+255),b
  3289                           
  3290                           ; BSR set to: 1
  3291                           ;d232.c: 251:     if (TimerDone(TMR_BAL)) {
  3292  002CBA  0E07               	movlw	7
  3293  002CBC  ECAE  F028         	call	_TimerDone
  3294  002CC0  0900               	iorlw	0
  3295  002CC2  B4D8               	btfsc	status,2,c
  3296  002CC4  D005               	goto	l7662
  3297                           
  3298                           ;d232.c: 252:      if (IO.score < 50)
  3299  002CC6  0E32               	movlw	50
  3300  002CC8  0101               	movlb	1	; () banked
  3301  002CCA  61BD               	cpfslt	(_IO+20)& (0+255),b
  3302  002CCC  D001               	goto	l7662
  3303                           
  3304                           ; BSR set to: 1
  3305                           ;d232.c: 253:       IO.score++;
  3306  002CCE  2BBD               	incf	(_IO+20)& (0+255),f,b
  3307  002CD0                     l7662:
  3308                           
  3309                           ;d232.c: 255:     StartTimer(TMR_BAL, 500);
  3310  002CD0  0E01               	movlw	1
  3311  002CD2  6E07               	movwf	(StartTimer@count+1)^0,c
  3312  002CD4  0EF4               	movlw	244
  3313  002CD6  6E06               	movwf	StartTimer@count^0,c
  3314  002CD8  0E07               	movlw	7
  3315  002CDA  ECFB  F027         	call	_StartTimer
  3316  002CDE                     l7664:
  3317                           
  3318                           ;d232.c: 257:    IO.outbytes[2] = 0b00000000;
  3319  002CDE  0E00               	movlw	0
  3320  002CE0  0101               	movlb	1	; () banked
  3321  002CE2  6FB0               	movwf	(_IO+7)& (0+255),b
  3322                           
  3323                           ; BSR set to: 1
  3324                           ;d232.c: 258:    IO.BAL = ON;
  3325  002CE4  0E01               	movlw	1
  3326  002CE6  6FB8               	movwf	(_IO+15)& (0+255),b
  3327  002CE8                     l7668:
  3328                           
  3329                           ; BSR set to: 1
  3330                           ;d232.c: 260:   if (otto_b1.result > 5 && otto_b1.result < 30) {
  3331  002CE8  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  3332  002CEA  D022               	goto	l7684
  3333  002CEC  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  3334  002CEE  E104               	bnz	u8200
  3335  002CF0  0E06               	movlw	6
  3336  002CF2  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3337  002CF4  A0D8               	btfss	status,0,c
  3338  002CF6  D01C               	goto	l7684
  3339  002CF8                     u8200:
  3340                           
  3341                           ; BSR set to: 1
  3342  002CF8  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  3343  002CFA  D006               	goto	u8210
  3344  002CFC  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  3345  002CFE  E118               	bnz	l7684
  3346  002D00  0E1E               	movlw	30
  3347  002D02  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3348  002D04  B0D8               	btfsc	status,0,c
  3349  002D06  D014               	goto	l7684
  3350  002D08                     u8210:
  3351                           
  3352                           ; BSR set to: 1
  3353                           ;d232.c: 261:    if (IO.BAL != DOWN) {
  3354  002D08  0E02               	movlw	2
  3355  002D0A  19B8               	xorwf	(_IO+15)& (0+255),w,b
  3356  002D0C  B4D8               	btfsc	status,2,c
  3357  002D0E  D00C               	goto	l7680
  3358                           
  3359                           ; BSR set to: 1
  3360                           ;d232.c: 262:     IO.outbytes[1] = IO.outbytes[1] | 0x04;
  3361  002D10  51AF               	movf	(_IO+6)& (0+255),w,b
  3362  002D12  0904               	iorlw	4
  3363  002D14  6FAF               	movwf	(_IO+6)& (0+255),b
  3364                           
  3365                           ; BSR set to: 1
  3366                           ;d232.c: 263:     StartTimer(TMR_BAL, 500);
  3367  002D16  0E01               	movlw	1
  3368  002D18  6E07               	movwf	(StartTimer@count+1)^0,c
  3369  002D1A  0EF4               	movlw	244
  3370  002D1C  6E06               	movwf	StartTimer@count^0,c
  3371  002D1E  0E07               	movlw	7
  3372  002D20  ECFB  F027         	call	_StartTimer
  3373                           
  3374                           ;d232.c: 264:     IO.score--;
  3375  002D24  0101               	movlb	1	; () banked
  3376  002D26  07BD               	decf	(_IO+20)& (0+255),f,b
  3377  002D28                     l7680:
  3378                           
  3379                           ; BSR set to: 1
  3380                           ;d232.c: 266:    IO.outbytes[2] = 0b00001000;
  3381  002D28  0E08               	movlw	8
  3382  002D2A  6FB0               	movwf	(_IO+7)& (0+255),b
  3383                           
  3384                           ; BSR set to: 1
  3385                           ;d232.c: 267:    IO.BAL = DOWN;
  3386  002D2C  0E02               	movlw	2
  3387  002D2E  6FB8               	movwf	(_IO+15)& (0+255),b
  3388  002D30                     l7684:
  3389                           
  3390                           ; BSR set to: 1
  3391                           ;d232.c: 269:   if (otto_b1.result >= 30 && otto_b1.result < 80) {
  3392  002D30  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  3393  002D32  D012               	goto	l7690
  3394  002D34  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  3395  002D36  E104               	bnz	u8230
  3396  002D38  0E1E               	movlw	30
  3397  002D3A  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3398  002D3C  A0D8               	btfss	status,0,c
  3399  002D3E  D00C               	goto	l7690
  3400  002D40                     u8230:
  3401                           
  3402                           ; BSR set to: 1
  3403  002D40  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  3404  002D42  D006               	goto	u8240
  3405  002D44  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  3406  002D46  E108               	bnz	l7690
  3407  002D48  0E50               	movlw	80
  3408  002D4A  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3409  002D4C  B0D8               	btfsc	status,0,c
  3410  002D4E  D004               	goto	l7690
  3411  002D50                     u8240:
  3412                           
  3413                           ; BSR set to: 1
  3414                           ;d232.c: 270:    IO.outbytes[2] = 0b00000100;
  3415  002D50  0E04               	movlw	4
  3416  002D52  6FB0               	movwf	(_IO+7)& (0+255),b
  3417                           
  3418                           ;d232.c: 271:    IO.BAL = DOWN;
  3419  002D54  0E02               	movlw	2
  3420  002D56  6FB8               	movwf	(_IO+15)& (0+255),b
  3421  002D58                     l7690:
  3422                           
  3423                           ; BSR set to: 1
  3424                           ;d232.c: 273:   if (otto_b1.result >= 80 && otto_b1.result < 120) {
  3425  002D58  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  3426  002D5A  D012               	goto	l7696
  3427  002D5C  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  3428  002D5E  E104               	bnz	u8250
  3429  002D60  0E50               	movlw	80
  3430  002D62  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3431  002D64  A0D8               	btfss	status,0,c
  3432  002D66  D00C               	goto	l7696
  3433  002D68                     u8250:
  3434                           
  3435                           ; BSR set to: 1
  3436  002D68  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  3437  002D6A  D006               	goto	u8260
  3438  002D6C  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  3439  002D6E  E108               	bnz	l7696
  3440  002D70  0E78               	movlw	120
  3441  002D72  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3442  002D74  B0D8               	btfsc	status,0,c
  3443  002D76  D004               	goto	l7696
  3444  002D78                     u8260:
  3445                           
  3446                           ; BSR set to: 1
  3447                           ;d232.c: 274:    IO.outbytes[2] = 0b00000010;
  3448  002D78  0E02               	movlw	2
  3449  002D7A  6FB0               	movwf	(_IO+7)& (0+255),b
  3450                           
  3451                           ;d232.c: 275:    IO.BAL = DOWN;
  3452  002D7C  0E02               	movlw	2
  3453  002D7E  6FB8               	movwf	(_IO+15)& (0+255),b
  3454  002D80                     l7696:
  3455                           
  3456                           ; BSR set to: 1
  3457                           ;d232.c: 277:   if (otto_b1.result >= 120) {
  3458  002D80  BFDF               	btfsc	(_otto_b1+13)& (0+255),7,b
  3459  002D82  0012               	return	
  3460  002D84  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  3461  002D86  E104               	bnz	u8270
  3462  002D88  0E78               	movlw	120
  3463  002D8A  5DDE               	subwf	(_otto_b1+12)& (0+255),w,b
  3464  002D8C  A0D8               	btfss	status,0,c
  3465  002D8E  0012               	return	
  3466  002D90                     u8270:
  3467                           
  3468                           ; BSR set to: 1
  3469                           ;d232.c: 278:    IO.outbytes[2] = 0b00000001;
  3470  002D90  0E01               	movlw	1
  3471  002D92  6FB0               	movwf	(_IO+7)& (0+255),b
  3472                           
  3473                           ;d232.c: 279:    IO.BAL = DOWN;
  3474  002D94  0E02               	movlw	2
  3475  002D96  6FB8               	movwf	(_IO+15)& (0+255),b
  3476  002D98  0012               	return		;funcret
  3477  002D9A                     __end_of_led_lightshow:
  3478                           	opt callstack 0
  3479                           
  3480 ;; *************** function ___awdiv *****************
  3481 ;; Defined at:
  3482 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;  dividend        2    5[COMRAM] int 
  3485 ;;  divisor         2    7[COMRAM] int 
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;  quotient        2   11[COMRAM] int 
  3488 ;;  sign            1   10[COMRAM] unsigned char 
  3489 ;;  counter         1    9[COMRAM] unsigned char 
  3490 ;; Return value:  Size  Location     Type
  3491 ;;                  2    5[COMRAM] int 
  3492 ;; Registers used:
  3493 ;;		wreg, status,2, status,0
  3494 ;; Tracked objects:
  3495 ;;		On entry : 3E/1
  3496 ;;		On exit  : 3E/0
  3497 ;;		Unchanged: 3E/0
  3498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3499 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3500 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3502 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3503 ;;Total ram usage:        8 bytes
  3504 ;; Hardware stack levels used:    1
  3505 ;; Hardware stack levels required when called:    4
  3506 ;; This function calls:
  3507 ;;		Nothing
  3508 ;; This function is called by:
  3509 ;;		_main
  3510 ;;		_led_lightshow
  3511 ;; This function uses a non-reentrant model
  3512 ;;
  3513                           
  3514                           	psect	text10
  3515  004914                     __ptext10:
  3516                           	opt callstack 0
  3517  004914                     ___awdiv:
  3518                           	opt callstack 25
  3519                           
  3520                           ;incstack = 0
  3521  004914  0E00               	movlw	0
  3522  004916  6E0B               	movwf	___awdiv@sign^0,c
  3523  004918  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  3524  00491A  D006               	goto	l7340
  3525  00491C  6C08               	negf	___awdiv@divisor^0,c
  3526  00491E  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  3527  004920  B0D8               	btfsc	status,0,c
  3528  004922  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  3529  004924  0E01               	movlw	1
  3530  004926  6E0B               	movwf	___awdiv@sign^0,c
  3531  004928                     l7340:
  3532  004928  AE07               	btfss	(___awdiv@dividend+1)^0,7,c
  3533  00492A  D006               	goto	l7346
  3534  00492C  6C06               	negf	___awdiv@dividend^0,c
  3535  00492E  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  3536  004930  B0D8               	btfsc	status,0,c
  3537  004932  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  3538  004934  0E01               	movlw	1
  3539  004936  1A0B               	xorwf	___awdiv@sign^0,f,c
  3540  004938                     l7346:
  3541  004938  0E00               	movlw	0
  3542  00493A  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  3543  00493C  0E00               	movlw	0
  3544  00493E  6E0C               	movwf	___awdiv@quotient^0,c
  3545  004940  5008               	movf	___awdiv@divisor^0,w,c
  3546  004942  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  3547  004944  B4D8               	btfsc	status,2,c
  3548  004946  D01C               	goto	l7368
  3549  004948  0E01               	movlw	1
  3550  00494A  6E0A               	movwf	___awdiv@counter^0,c
  3551  00494C  D004               	goto	l7354
  3552  00494E                     l7352:
  3553  00494E  90D8               	bcf	status,0,c
  3554  004950  3608               	rlcf	___awdiv@divisor^0,f,c
  3555  004952  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  3556  004954  2A0A               	incf	___awdiv@counter^0,f,c
  3557  004956                     l7354:
  3558  004956  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  3559  004958  D7FA               	goto	l7352
  3560  00495A                     u7740:
  3561  00495A  90D8               	bcf	status,0,c
  3562  00495C  360C               	rlcf	___awdiv@quotient^0,f,c
  3563  00495E  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  3564  004960  5008               	movf	___awdiv@divisor^0,w,c
  3565  004962  5C06               	subwf	___awdiv@dividend^0,w,c
  3566  004964  5009               	movf	(___awdiv@divisor+1)^0,w,c
  3567  004966  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  3568  004968  A0D8               	btfss	status,0,c
  3569  00496A  D005               	goto	l7364
  3570  00496C  5008               	movf	___awdiv@divisor^0,w,c
  3571  00496E  5E06               	subwf	___awdiv@dividend^0,f,c
  3572  004970  5009               	movf	(___awdiv@divisor+1)^0,w,c
  3573  004972  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  3574  004974  800C               	bsf	___awdiv@quotient^0,0,c
  3575  004976                     l7364:
  3576  004976  90D8               	bcf	status,0,c
  3577  004978  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  3578  00497A  3208               	rrcf	___awdiv@divisor^0,f,c
  3579  00497C  2E0A               	decfsz	___awdiv@counter^0,f,c
  3580  00497E  D7ED               	goto	u7740
  3581  004980                     l7368:
  3582  004980  500B               	movf	___awdiv@sign^0,w,c
  3583  004982  B4D8               	btfsc	status,2,c
  3584  004984  D004               	goto	l7372
  3585  004986  6C0C               	negf	___awdiv@quotient^0,c
  3586  004988  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  3587  00498A  B0D8               	btfsc	status,0,c
  3588  00498C  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  3589  00498E                     l7372:
  3590  00498E  0060  F030  F006   	movff	___awdiv@quotient,?___awdiv
  3591  004994  0060  F034  F007   	movff	___awdiv@quotient+1,?___awdiv+1
  3592  00499A  0012               	return		;funcret
  3593  00499C                     __end_of___awdiv:
  3594                           	opt callstack 0
  3595                           
  3596 ;; *************** function _init_display *****************
  3597 ;; Defined at:
  3598 ;;		line 27 in file "eadog.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;		None
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;		None
  3603 ;; Return value:  Size  Location     Type
  3604 ;;                  1    wreg      void 
  3605 ;; Registers used:
  3606 ;;		wreg, status,2, status,0, cstack
  3607 ;; Tracked objects:
  3608 ;;		On entry : 3F/1
  3609 ;;		On exit  : 3F/1
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3616 ;;Total ram usage:        0 bytes
  3617 ;; Hardware stack levels used:    1
  3618 ;; Hardware stack levels required when called:    6
  3619 ;; This function calls:
  3620 ;;		_send_lcd_cmd
  3621 ;;		_send_lcd_cmd_long
  3622 ;;		_wdtdelay
  3623 ;; This function is called by:
  3624 ;;		_main
  3625 ;; This function uses a non-reentrant model
  3626 ;;
  3627                           
  3628                           	psect	text11
  3629  004A1A                     __ptext11:
  3630                           	opt callstack 0
  3631  004A1A                     _init_display:
  3632                           	opt callstack 24
  3633                           
  3634                           ; BSR set to: 1
  3635                           
  3636                           ;incstack = 0
  3637                           ;eadog.c: 29:  do { LATCbits.LATC2 = 1; } while(0);
  3638  004A1A  84BC               	bsf	188,2,c	;volatile
  3639                           
  3640                           ; BSR set to: 1
  3641                           ;eadog.c: 30:  wdtdelay(350000);
  3642  004A1C  0E30               	movlw	48
  3643  004A1E  6E06               	movwf	wdtdelay@delay^0,c
  3644  004A20  0E57               	movlw	87
  3645  004A22  6E07               	movwf	(wdtdelay@delay+1)^0,c
  3646  004A24  0E05               	movlw	5
  3647  004A26  6E08               	movwf	(wdtdelay@delay+2)^0,c
  3648  004A28  0E00               	movlw	0
  3649  004A2A  6E09               	movwf	(wdtdelay@delay+3)^0,c
  3650  004A2C  EC55  F027         	call	_wdtdelay	;wreg free
  3651                           
  3652                           ;eadog.c: 31:  send_lcd_cmd(0x39);
  3653  004A30  0E39               	movlw	57
  3654  004A32  EC72  F027         	call	_send_lcd_cmd
  3655                           
  3656                           ;eadog.c: 32:  send_lcd_cmd(0x1d);
  3657  004A36  0E1D               	movlw	29
  3658  004A38  EC72  F027         	call	_send_lcd_cmd
  3659                           
  3660                           ;eadog.c: 33:  send_lcd_cmd(0x50);
  3661  004A3C  0E50               	movlw	80
  3662  004A3E  EC72  F027         	call	_send_lcd_cmd
  3663                           
  3664                           ;eadog.c: 34:  send_lcd_cmd(0x6c);
  3665  004A42  0E6C               	movlw	108
  3666  004A44  EC72  F027         	call	_send_lcd_cmd
  3667                           
  3668                           ;eadog.c: 35:  send_lcd_cmd(0x76);
  3669  004A48  0E76               	movlw	118
  3670  004A4A  EC72  F027         	call	_send_lcd_cmd
  3671                           
  3672                           ;eadog.c: 36:  send_lcd_cmd_long(0x38);
  3673  004A4E  0E38               	movlw	56
  3674  004A50  EC9C  F028         	call	_send_lcd_cmd_long
  3675                           
  3676                           ;eadog.c: 37:  send_lcd_cmd(0x0f);
  3677  004A54  0E0F               	movlw	15
  3678  004A56  EC72  F027         	call	_send_lcd_cmd
  3679                           
  3680                           ;eadog.c: 38:  send_lcd_cmd_long(0x01);
  3681  004A5A  0E01               	movlw	1
  3682  004A5C  EC9C  F028         	call	_send_lcd_cmd_long
  3683                           
  3684                           ;eadog.c: 39:  send_lcd_cmd(0x02);
  3685  004A60  0E02               	movlw	2
  3686  004A62  EC72  F027         	call	_send_lcd_cmd
  3687                           
  3688                           ;eadog.c: 40:  send_lcd_cmd(0x06);
  3689  004A66  0E06               	movlw	6
  3690  004A68  EC72  F027         	call	_send_lcd_cmd
  3691                           
  3692                           ;eadog.c: 41:  wdtdelay(800);
  3693  004A6C  0E20               	movlw	32
  3694  004A6E  6E06               	movwf	wdtdelay@delay^0,c
  3695  004A70  0E03               	movlw	3
  3696  004A72  6E07               	movwf	(wdtdelay@delay+1)^0,c
  3697  004A74  0E00               	movlw	0
  3698  004A76  6E08               	movwf	(wdtdelay@delay+2)^0,c
  3699  004A78  0E00               	movlw	0
  3700  004A7A  6E09               	movwf	(wdtdelay@delay+3)^0,c
  3701  004A7C  EC55  F027         	call	_wdtdelay	;wreg free
  3702                           
  3703                           ; BSR set to: 1
  3704  004A80  0012               	return		;funcret
  3705  004A82                     __end_of_init_display:
  3706                           	opt callstack 0
  3707                           
  3708 ;; *************** function _send_lcd_cmd_long *****************
  3709 ;; Defined at:
  3710 ;;		line 71 in file "eadog.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;  cmd             1    wreg     const unsigned char 
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;  cmd             1    9[COMRAM] const unsigned char 
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  1    wreg      void 
  3717 ;; Registers used:
  3718 ;;		wreg, status,2, status,0, cstack
  3719 ;; Tracked objects:
  3720 ;;		On entry : 3F/1
  3721 ;;		On exit  : 3F/1
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3725 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3727 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3728 ;;Total ram usage:        1 bytes
  3729 ;; Hardware stack levels used:    1
  3730 ;; Hardware stack levels required when called:    5
  3731 ;; This function calls:
  3732 ;;		_SPI1_Exchange8bit
  3733 ;;		_wdtdelay
  3734 ;; This function is called by:
  3735 ;;		_init_display
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           	psect	text12
  3740  005138                     __ptext12:
  3741                           	opt callstack 0
  3742  005138                     _send_lcd_cmd_long:
  3743                           	opt callstack 24
  3744                           
  3745                           ; BSR set to: 1
  3746                           ;incstack = 0
  3747                           ;send_lcd_cmd_long@cmd stored from wreg
  3748  005138  6E0A               	movwf	send_lcd_cmd_long@cmd^0,c
  3749                           
  3750                           ;eadog.c: 71: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 72: {;eadog.c: 7
      +                          3:  do { LATCbits.LATC1 = 0; } while(0);
  3751  00513A  92BC               	bcf	188,1,c	;volatile
  3752                           
  3753                           ;eadog.c: 74:  do { LATCbits.LATC2 = 0; } while(0);
  3754  00513C  94BC               	bcf	188,2,c	;volatile
  3755                           
  3756                           ;eadog.c: 75:  SPI1_Exchange8bit(cmd);
  3757  00513E  500A               	movf	send_lcd_cmd_long@cmd^0,w,c
  3758  005140  EC9B  F029         	call	_SPI1_Exchange8bit
  3759                           
  3760                           ; BSR set to: 61
  3761                           ;eadog.c: 76:  wdtdelay(800);
  3762  005144  0E20               	movlw	32
  3763  005146  6E06               	movwf	wdtdelay@delay^0,c
  3764  005148  0E03               	movlw	3
  3765  00514A  6E07               	movwf	(wdtdelay@delay+1)^0,c
  3766  00514C  0E00               	movlw	0
  3767  00514E  6E08               	movwf	(wdtdelay@delay+2)^0,c
  3768  005150  0E00               	movlw	0
  3769  005152  6E09               	movwf	(wdtdelay@delay+3)^0,c
  3770  005154  EC55  F027         	call	_wdtdelay	;wreg free
  3771                           
  3772                           ; BSR set to: 1
  3773  005158  82BC               	bsf	188,1,c	;volatile
  3774                           
  3775                           ; BSR set to: 1
  3776  00515A  0012               	return		;funcret
  3777  00515C                     __end_of_send_lcd_cmd_long:
  3778                           	opt callstack 0
  3779                           
  3780 ;; *************** function _eaDogM_WriteCommand *****************
  3781 ;; Defined at:
  3782 ;;		line 85 in file "eadog.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;  cmd             1    wreg     const unsigned char 
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;  cmd             1   10[COMRAM] const unsigned char 
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  1    wreg      void 
  3789 ;; Registers used:
  3790 ;;		wreg, status,2, status,0, cstack
  3791 ;; Tracked objects:
  3792 ;;		On entry : 3F/1
  3793 ;;		On exit  : 3F/1
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3797 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3799 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3800 ;;Total ram usage:        1 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; Hardware stack levels required when called:    6
  3803 ;; This function calls:
  3804 ;;		_send_lcd_cmd
  3805 ;; This function is called by:
  3806 ;;		_main
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           	psect	text13
  3811  0054BC                     __ptext13:
  3812                           	opt callstack 0
  3813  0054BC                     _eaDogM_WriteCommand:
  3814                           	opt callstack 24
  3815                           
  3816                           ; BSR set to: 1
  3817                           ;incstack = 0
  3818                           ;eaDogM_WriteCommand@cmd stored from wreg
  3819  0054BC  6E0B               	movwf	eaDogM_WriteCommand@cmd^0,c
  3820                           
  3821                           ;eadog.c: 85: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  s
      +                          end_lcd_cmd(cmd);
  3822  0054BE  500B               	movf	eaDogM_WriteCommand@cmd^0,w,c
  3823  0054C0  EC72  F027         	call	_send_lcd_cmd
  3824                           
  3825                           ; BSR set to: 1
  3826  0054C4  0012               	return		;funcret
  3827  0054C6                     __end_of_eaDogM_WriteCommand:
  3828                           	opt callstack 0
  3829                           
  3830 ;; *************** function _send_lcd_cmd *****************
  3831 ;; Defined at:
  3832 ;;		line 58 in file "eadog.c"
  3833 ;; Parameters:    Size  Location     Type
  3834 ;;  cmd             1    wreg     const unsigned char 
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;  cmd             1    9[COMRAM] const unsigned char 
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  1    wreg      void 
  3839 ;; Registers used:
  3840 ;;		wreg, status,2, status,0, cstack
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 3F/1
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3847 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3849 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3850 ;;Total ram usage:        1 bytes
  3851 ;; Hardware stack levels used:    1
  3852 ;; Hardware stack levels required when called:    5
  3853 ;; This function calls:
  3854 ;;		_SPI1_Exchange8bit
  3855 ;;		_wdtdelay
  3856 ;; This function is called by:
  3857 ;;		_init_display
  3858 ;;		_eaDogM_WriteCommand
  3859 ;;		_eaDogM_WriteStringAtPos
  3860 ;; This function uses a non-reentrant model
  3861 ;;
  3862                           
  3863                           	psect	text14
  3864  004EE4                     __ptext14:
  3865                           	opt callstack 0
  3866  004EE4                     _send_lcd_cmd:
  3867                           	opt callstack 23
  3868                           
  3869                           ; BSR set to: 1
  3870                           ;incstack = 0
  3871                           ;send_lcd_cmd@cmd stored from wreg
  3872  004EE4  6E0A               	movwf	send_lcd_cmd@cmd^0,c
  3873                           
  3874                           ;eadog.c: 58: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 59: {;eadog.c: 60:  d
      +                          o { LATCbits.LATC1 = 0; } while(0);
  3875  004EE6  92BC               	bcf	188,1,c	;volatile
  3876                           
  3877                           ;eadog.c: 61:  do { LATCbits.LATC2 = 0; } while(0);
  3878  004EE8  94BC               	bcf	188,2,c	;volatile
  3879                           
  3880                           ;eadog.c: 62:  wdtdelay(10);
  3881  004EEA  0E0A               	movlw	10
  3882  004EEC  6E06               	movwf	wdtdelay@delay^0,c
  3883  004EEE  0E00               	movlw	0
  3884  004EF0  6E07               	movwf	(wdtdelay@delay+1)^0,c
  3885  004EF2  0E00               	movlw	0
  3886  004EF4  6E08               	movwf	(wdtdelay@delay+2)^0,c
  3887  004EF6  0E00               	movlw	0
  3888  004EF8  6E09               	movwf	(wdtdelay@delay+3)^0,c
  3889  004EFA  EC55  F027         	call	_wdtdelay	;wreg free
  3890                           
  3891                           ; BSR set to: 1
  3892                           ;eadog.c: 63:  SPI1_Exchange8bit(cmd);
  3893  004EFE  500A               	movf	send_lcd_cmd@cmd^0,w,c
  3894  004F00  EC9B  F029         	call	_SPI1_Exchange8bit
  3895                           
  3896                           ; BSR set to: 61
  3897                           ;eadog.c: 64:  wdtdelay(10);
  3898  004F04  0E0A               	movlw	10
  3899  004F06  6E06               	movwf	wdtdelay@delay^0,c
  3900  004F08  0E00               	movlw	0
  3901  004F0A  6E07               	movwf	(wdtdelay@delay+1)^0,c
  3902  004F0C  0E00               	movlw	0
  3903  004F0E  6E08               	movwf	(wdtdelay@delay+2)^0,c
  3904  004F10  0E00               	movlw	0
  3905  004F12  6E09               	movwf	(wdtdelay@delay+3)^0,c
  3906  004F14  EC55  F027         	call	_wdtdelay	;wreg free
  3907                           
  3908                           ; BSR set to: 1
  3909  004F18  82BC               	bsf	188,1,c	;volatile
  3910                           
  3911                           ; BSR set to: 1
  3912  004F1A  0012               	return		;funcret
  3913  004F1C                     __end_of_send_lcd_cmd:
  3914                           	opt callstack 0
  3915                           
  3916 ;; *************** function _wdtdelay *****************
  3917 ;; Defined at:
  3918 ;;		line 14 in file "eadog.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;  delay           4    5[COMRAM] const unsigned long 
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;		None
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  1    wreg      void 
  3925 ;; Registers used:
  3926 ;;		wreg, status,2, status,0
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/1
  3929 ;;		On exit  : 3F/1
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3932 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3935 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3936 ;;Total ram usage:        4 bytes
  3937 ;; Hardware stack levels used:    1
  3938 ;; Hardware stack levels required when called:    4
  3939 ;; This function calls:
  3940 ;;		Nothing
  3941 ;; This function is called by:
  3942 ;;		_init_display
  3943 ;;		_send_lcd_cmd
  3944 ;;		_send_lcd_cmd_long
  3945 ;;		_eaDogM_WriteString
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949                           	psect	text15
  3950  004EAA                     __ptext15:
  3951                           	opt callstack 0
  3952  004EAA                     _wdtdelay:
  3953                           	opt callstack 23
  3954                           
  3955                           ;eadog.c: 14: void wdtdelay(const uint32_t delay);eadog.c: 15: {;eadog.c: 16:  static ui
      +                          nt32_t dcount;;eadog.c: 18:  for (dcount = 0; dcount <= delay; dcount++) {
  3956                           
  3957                           ; BSR set to: 1
  3958                           ;incstack = 0
  3959  004EAA  0E00               	movlw	0
  3960  004EAC  0101               	movlb	1	; () banked
  3961  004EAE  6F62               	movwf	wdtdelay@dcount& (0+255),b
  3962  004EB0  0E00               	movlw	0
  3963  004EB2  6F63               	movwf	(wdtdelay@dcount+1)& (0+255),b
  3964  004EB4  0E00               	movlw	0
  3965  004EB6  6F64               	movwf	(wdtdelay@dcount+2)& (0+255),b
  3966  004EB8  0E00               	movlw	0
  3967  004EBA  6F65               	movwf	(wdtdelay@dcount+3)& (0+255),b
  3968  004EBC                     l1265:
  3969                           
  3970                           ; BSR set to: 1
  3971                           ;eadog.c: 19:   __nop();
  3972  004EBC  F000               	nop	
  3973  004EBE  0004               	clrwdt		;# 
  3974                           
  3975                           ;eadog.c: 21:  };
  3976  004EC0  0E01               	movlw	1
  3977  004EC2  0101               	movlb	1	; () banked
  3978  004EC4  2762               	addwf	wdtdelay@dcount& (0+255),f,b
  3979  004EC6  0E00               	movlw	0
  3980  004EC8  2363               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  3981  004ECA  2364               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  3982  004ECC  2365               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  3983  004ECE  5162               	movf	wdtdelay@dcount& (0+255),w,b
  3984  004ED0  5C06               	subwf	wdtdelay@delay^0,w,c
  3985  004ED2  5163               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  3986  004ED4  5807               	subwfb	(wdtdelay@delay+1)^0,w,c
  3987  004ED6  5164               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  3988  004ED8  5808               	subwfb	(wdtdelay@delay+2)^0,w,c
  3989  004EDA  5165               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  3990  004EDC  5809               	subwfb	(wdtdelay@delay+3)^0,w,c
  3991  004EDE  A0D8               	btfss	status,0,c
  3992  004EE0  0012               	return	
  3993  004EE2  D7EC               	goto	l1265
  3994  004EE4                     __end_of_wdtdelay:
  3995                           	opt callstack 0
  3996                           
  3997 ;; *************** function _SPI1_Exchange8bit *****************
  3998 ;; Defined at:
  3999 ;;		line 79 in file "mcc_generated_files/spi1.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  data            1    wreg     unsigned char 
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;  data            1    5[COMRAM] unsigned char 
  4004 ;; Return value:  Size  Location     Type
  4005 ;;                  1    wreg      unsigned char 
  4006 ;; Registers used:
  4007 ;;		wreg, status,2
  4008 ;; Tracked objects:
  4009 ;;		On entry : 0/1
  4010 ;;		On exit  : 3F/3D
  4011 ;;		Unchanged: 0/0
  4012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4014 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4016 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4017 ;;Total ram usage:        1 bytes
  4018 ;; Hardware stack levels used:    1
  4019 ;; Hardware stack levels required when called:    4
  4020 ;; This function calls:
  4021 ;;		Nothing
  4022 ;; This function is called by:
  4023 ;;		_send_lcd_cmd
  4024 ;;		_send_lcd_cmd_long
  4025 ;;		_eaDogM_WriteString
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029                           	psect	text16
  4030  005336                     __ptext16:
  4031                           	opt callstack 0
  4032  005336                     _SPI1_Exchange8bit:
  4033                           	opt callstack 23
  4034                           
  4035                           ; BSR set to: 1
  4036                           ;incstack = 0
  4037                           ;SPI1_Exchange8bit@data stored from wreg
  4038  005336  6E06               	movwf	SPI1_Exchange8bit@data^0,c
  4039                           
  4040                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  4041  005338  0E01               	movlw	1
  4042  00533A  013D               	movlb	61	; () banked
  4043  00533C  6F12               	movwf	18,b	;volatile
  4044                           
  4045                           ; BSR set to: 61
  4046                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  4047  00533E  0060  F01B  FD11   	movff	SPI1_Exchange8bit@data,15633	;volatile
  4048  005344                     l989:
  4049                           
  4050                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  4051  005344  0139               	movlb	57	; () banked
  4052  005346  A9A2               	btfss	162,4,b	;volatile
  4053  005348  D7FD               	goto	l989
  4054                           
  4055                           ; BSR set to: 57
  4056                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  4057  00534A  013D               	movlb	61	; () banked
  4058  00534C  5110               	movf	16,w,b	;volatile
  4059                           
  4060                           ; BSR set to: 61
  4061  00534E  0012               	return		;funcret
  4062  005350                     __end_of_SPI1_Exchange8bit:
  4063                           	opt callstack 0
  4064                           
  4065 ;; *************** function _SYSTEM_Initialize *****************
  4066 ;; Defined at:
  4067 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;		None
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;		None
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  1    wreg      void 
  4074 ;; Registers used:
  4075 ;;		wreg, status,2, status,0, cstack
  4076 ;; Tracked objects:
  4077 ;;		On entry : 3F/0
  4078 ;;		On exit  : 3F/3D
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4085 ;;Total ram usage:        0 bytes
  4086 ;; Hardware stack levels used:    1
  4087 ;; Hardware stack levels required when called:    6
  4088 ;; This function calls:
  4089 ;;		_ADCC_Initialize
  4090 ;;		_FVR_Initialize
  4091 ;;		_INTERRUPT_Initialize
  4092 ;;		_OSCILLATOR_Initialize
  4093 ;;		_PIN_MANAGER_Initialize
  4094 ;;		_PMD_Initialize
  4095 ;;		_PWM8_Initialize
  4096 ;;		_SPI1_Initialize
  4097 ;;		_TMR2_Initialize
  4098 ;;		_TMR5_Initialize
  4099 ;;		_TMR6_Initialize
  4100 ;;		_UART1_Initialize
  4101 ;;		_UART2_Initialize
  4102 ;; This function is called by:
  4103 ;;		_main
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           	psect	text17
  4108  004F8A                     __ptext17:
  4109                           	opt callstack 0
  4110  004F8A                     _SYSTEM_Initialize:
  4111                           	opt callstack 24
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  4115                           
  4116                           ; BSR set to: 61
  4117                           ;incstack = 0
  4118  004F8A  EC71  F026         	call	_INTERRUPT_Initialize	;wreg free
  4119                           
  4120                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  4121  004F8E  EC4F  F029         	call	_PMD_Initialize	;wreg free
  4122                           
  4123                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4124  004F92  EC00  F023         	call	_PIN_MANAGER_Initialize	;wreg free
  4125                           
  4126                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4127  004F96  EC7F  F029         	call	_OSCILLATOR_Initialize	;wreg free
  4128                           
  4129                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  4130  004F9A  EC68  F02A         	call	_FVR_Initialize	;wreg free
  4131                           
  4132                           ; BSR set to: 62
  4133                           ;mcc_generated_files/mcc.c: 57:     TMR6_Initialize();
  4134  004F9E  EC46  F028         	call	_TMR6_Initialize	;wreg free
  4135                           
  4136                           ; BSR set to: 57
  4137                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
  4138  004FA2  ECA3  F025         	call	_ADCC_Initialize	;wreg free
  4139                           
  4140                           ;mcc_generated_files/mcc.c: 59:     TMR5_Initialize();
  4141  004FA6  EC27  F026         	call	_TMR5_Initialize	;wreg free
  4142                           
  4143                           ; BSR set to: 57
  4144                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
  4145  004FAA  EC71  F029         	call	_TMR2_Initialize	;wreg free
  4146                           
  4147                           ; BSR set to: 57
  4148                           ;mcc_generated_files/mcc.c: 61:     PWM8_Initialize();
  4149  004FAE  ECC1  F029         	call	_PWM8_Initialize	;wreg free
  4150                           
  4151                           ;mcc_generated_files/mcc.c: 62:     UART2_Initialize();
  4152  004FB2  EC52  F022         	call	_UART2_Initialize	;wreg free
  4153                           
  4154                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
  4155  004FB6  EC9D  F021         	call	_UART1_Initialize	;wreg free
  4156                           
  4157                           ; BSR set to: 57
  4158                           ;mcc_generated_files/mcc.c: 64:     SPI1_Initialize();
  4159  004FBA  ECB5  F029         	call	_SPI1_Initialize	;wreg free
  4160                           
  4161                           ; BSR set to: 61
  4162  004FBE  0012               	return		;funcret
  4163  004FC0                     __end_of_SYSTEM_Initialize:
  4164                           	opt callstack 0
  4165                           
  4166 ;; *************** function _UART2_Initialize *****************
  4167 ;; Defined at:
  4168 ;;		line 87 in file "mcc_generated_files/uart2.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;		None
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;		None
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      void 
  4175 ;; Registers used:
  4176 ;;		wreg, status,2, status,0, cstack
  4177 ;; Tracked objects:
  4178 ;;		On entry : 3F/3F
  4179 ;;		On exit  : 3F/39
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4186 ;;Total ram usage:        0 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:    5
  4189 ;; This function calls:
  4190 ;;		_UART2_SetErrorHandler
  4191 ;;		_UART2_SetFramingErrorHandler
  4192 ;;		_UART2_SetOverrunErrorHandler
  4193 ;;		_UART2_SetRxInterruptHandler
  4194 ;;		_UART2_SetTxInterruptHandler
  4195 ;; This function is called by:
  4196 ;;		_SYSTEM_Initialize
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           	psect	text18
  4201  0044A4                     __ptext18:
  4202                           	opt callstack 0
  4203  0044A4                     _UART2_Initialize:
  4204                           	opt callstack 24
  4205                           
  4206                           ; BSR set to: 63
  4207                           ;mcc_generated_files/uart2.c: 90:     PIE6bits.U2RXIE = 0;
  4208                           
  4209                           ; BSR set to: 61
  4210                           ;incstack = 0
  4211  0044A4  0139               	movlb	57	; () banked
  4212  0044A6  9596               	bcf	150,2,b	;volatile
  4213                           
  4214                           ; BSR set to: 57
  4215                           ;mcc_generated_files/uart2.c: 91:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
  4216  0044A8  0E4A               	movlw	low _UART2_Receive_ISR
  4217  0044AA  6E06               	movwf	UART2_SetRxInterruptHandler@InterruptHandler^0,c
  4218  0044AC  0E47               	movlw	high _UART2_Receive_ISR
  4219  0044AE  6E07               	movwf	(UART2_SetRxInterruptHandler@InterruptHandler+1)^0,c
  4220  0044B0  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
  4221  0044B2  6E08               	movwf	(UART2_SetRxInterruptHandler@InterruptHandler+2)^0,c
  4222  0044B4  ECD7  F029         	call	_UART2_SetRxInterruptHandler	;wreg free
  4223                           
  4224                           ; BSR set to: 57
  4225                           ;mcc_generated_files/uart2.c: 92:     PIE6bits.U2TXIE = 0;
  4226  0044B8  9796               	bcf	150,3,b	;volatile
  4227                           
  4228                           ;mcc_generated_files/uart2.c: 93:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
  4229  0044BA  0E5A               	movlw	low _UART2_Transmit_ISR
  4230  0044BC  6E06               	movwf	UART2_SetTxInterruptHandler@InterruptHandler^0,c
  4231  0044BE  0E50               	movlw	high _UART2_Transmit_ISR
  4232  0044C0  6E07               	movwf	(UART2_SetTxInterruptHandler@InterruptHandler+1)^0,c
  4233  0044C2  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
  4234  0044C4  6E08               	movwf	(UART2_SetTxInterruptHandler@InterruptHandler+2)^0,c
  4235  0044C6  ECCD  F029         	call	_UART2_SetTxInterruptHandler	;wreg free
  4236                           
  4237                           ; BSR set to: 57
  4238                           ;mcc_generated_files/uart2.c: 98:     U2P1L = 0x00;
  4239  0044CA  0E00               	movlw	0
  4240  0044CC  013D               	movlb	61	; () banked
  4241  0044CE  6FD4               	movwf	212,b	;volatile
  4242                           
  4243                           ; BSR set to: 61
  4244                           ;mcc_generated_files/uart2.c: 101:     U2P2L = 0x00;
  4245  0044D0  0E00               	movlw	0
  4246  0044D2  6FD6               	movwf	214,b	;volatile
  4247                           
  4248                           ; BSR set to: 61
  4249                           ;mcc_generated_files/uart2.c: 104:     U2P3L = 0x00;
  4250  0044D4  0E00               	movlw	0
  4251  0044D6  6FD8               	movwf	216,b	;volatile
  4252                           
  4253                           ; BSR set to: 61
  4254                           ;mcc_generated_files/uart2.c: 107:     U2CON0 = 0xB0;
  4255  0044D8  0EB0               	movlw	176
  4256  0044DA  6FDA               	movwf	218,b	;volatile
  4257                           
  4258                           ; BSR set to: 61
  4259                           ;mcc_generated_files/uart2.c: 110:     U2CON1 = 0x80;
  4260  0044DC  0E80               	movlw	128
  4261  0044DE  6FDB               	movwf	219,b	;volatile
  4262                           
  4263                           ; BSR set to: 61
  4264                           ;mcc_generated_files/uart2.c: 113:     U2CON2 = 0x00;
  4265  0044E0  0E00               	movlw	0
  4266  0044E2  6FDC               	movwf	220,b	;volatile
  4267                           
  4268                           ; BSR set to: 61
  4269                           ;mcc_generated_files/uart2.c: 116:     U2BRGL = 0x40;
  4270  0044E4  0E40               	movlw	64
  4271  0044E6  6FDD               	movwf	221,b	;volatile
  4272                           
  4273                           ; BSR set to: 61
  4274                           ;mcc_generated_files/uart2.c: 119:     U2BRGH = 0x03;
  4275  0044E8  0E03               	movlw	3
  4276  0044EA  6FDE               	movwf	222,b	;volatile
  4277                           
  4278                           ; BSR set to: 61
  4279                           ;mcc_generated_files/uart2.c: 122:     U2FIFO = 0x00;
  4280  0044EC  0E00               	movlw	0
  4281  0044EE  6FDF               	movwf	223,b	;volatile
  4282                           
  4283                           ; BSR set to: 61
  4284                           ;mcc_generated_files/uart2.c: 125:     U2UIR = 0x00;
  4285  0044F0  0E00               	movlw	0
  4286  0044F2  6FE0               	movwf	224,b	;volatile
  4287                           
  4288                           ; BSR set to: 61
  4289                           ;mcc_generated_files/uart2.c: 128:     U2ERRIR = 0x00;
  4290  0044F4  0E00               	movlw	0
  4291  0044F6  6FE1               	movwf	225,b	;volatile
  4292                           
  4293                           ; BSR set to: 61
  4294                           ;mcc_generated_files/uart2.c: 131:     U2ERRIE = 0x00;
  4295  0044F8  0E00               	movlw	0
  4296  0044FA  6FE2               	movwf	226,b	;volatile
  4297                           
  4298                           ;mcc_generated_files/uart2.c: 134:     UART2_SetFramingErrorHandler(UART2_DefaultFraming
      +                          ErrorHandler);
  4299  0044FC  0EF4               	movlw	low _UART2_DefaultFramingErrorHandler
  4300  0044FE  6E06               	movwf	UART2_SetFramingErrorHandler@interruptHandler^0,c
  4301  004500  0E54               	movlw	high _UART2_DefaultFramingErrorHandler
  4302  004502  6E07               	movwf	(UART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  4303  004504  0E00               	movlw	low (_UART2_DefaultFramingErrorHandler shr (0+16))
  4304  004506  6E08               	movwf	(UART2_SetFramingErrorHandler@interruptHandler+2)^0,c
  4305  004508  ECEB  F029         	call	_UART2_SetFramingErrorHandler	;wreg free
  4306                           
  4307                           ;mcc_generated_files/uart2.c: 135:     UART2_SetOverrunErrorHandler(UART2_DefaultOverrun
      +                          ErrorHandler);
  4308  00450C  0EF2               	movlw	low _UART2_DefaultOverrunErrorHandler
  4309  00450E  6E06               	movwf	UART2_SetOverrunErrorHandler@interruptHandler^0,c
  4310  004510  0E54               	movlw	high _UART2_DefaultOverrunErrorHandler
  4311  004512  6E07               	movwf	(UART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  4312  004514  0E00               	movlw	low (_UART2_DefaultOverrunErrorHandler shr (0+16))
  4313  004516  6E08               	movwf	(UART2_SetOverrunErrorHandler@interruptHandler+2)^0,c
  4314  004518  ECE1  F029         	call	_UART2_SetOverrunErrorHandler	;wreg free
  4315                           
  4316                           ;mcc_generated_files/uart2.c: 136:     UART2_SetErrorHandler(UART2_DefaultErrorHandler);
  4317  00451C  0EE4               	movlw	low _UART2_DefaultErrorHandler
  4318  00451E  6E06               	movwf	UART2_SetErrorHandler@interruptHandler^0,c
  4319  004520  0E54               	movlw	high _UART2_DefaultErrorHandler
  4320  004522  6E07               	movwf	(UART2_SetErrorHandler@interruptHandler+1)^0,c
  4321  004524  0E00               	movlw	low (_UART2_DefaultErrorHandler shr (0+16))
  4322  004526  6E08               	movwf	(UART2_SetErrorHandler@interruptHandler+2)^0,c
  4323  004528  ECF5  F029         	call	_UART2_SetErrorHandler	;wreg free
  4324                           
  4325                           ; BSR set to: 61
  4326                           ;mcc_generated_files/uart2.c: 138:     uart2RxLastError.status = 0;
  4327  00452C  0E00               	movlw	0
  4328  00452E  0101               	movlb	1	; () banked
  4329  004530  6F94               	movwf	_uart2RxLastError& (0+255),b	;volatile
  4330                           
  4331                           ; BSR set to: 1
  4332                           ;mcc_generated_files/uart2.c: 141:     uart2TxHead = 0;
  4333  004532  0E00               	movlw	0
  4334  004534  0100               	movlb	0	; () banked
  4335  004536  6FA6               	movwf	_uart2TxHead& (0+255),b	;volatile
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;mcc_generated_files/uart2.c: 142:     uart2TxTail = 0;
  4339  004538  0E00               	movlw	0
  4340  00453A  6FA5               	movwf	_uart2TxTail& (0+255),b	;volatile
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;mcc_generated_files/uart2.c: 143:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
  4344  00453C  0E08               	movlw	8
  4345  00453E  6FA4               	movwf	_uart2TxBufferRemaining& (0+255),b	;volatile
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;mcc_generated_files/uart2.c: 144:     uart2RxHead = 0;
  4349  004540  0E00               	movlw	0
  4350  004542  6E59               	movwf	_uart2RxHead^0,c	;volatile
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;mcc_generated_files/uart2.c: 145:     uart2RxTail = 0;
  4354  004544  0E00               	movlw	0
  4355  004546  6E58               	movwf	_uart2RxTail^0,c	;volatile
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;mcc_generated_files/uart2.c: 146:     uart2RxCount = 0;
  4359  004548  0E00               	movlw	0
  4360  00454A  6FA3               	movwf	_uart2RxCount& (0+255),b	;volatile
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;mcc_generated_files/uart2.c: 149:     PIE6bits.U2RXIE = 1;
  4364  00454C  0139               	movlb	57	; () banked
  4365  00454E  8596               	bsf	150,2,b	;volatile
  4366                           
  4367                           ; BSR set to: 57
  4368  004550  0012               	return		;funcret
  4369  004552                     __end_of_UART2_Initialize:
  4370                           	opt callstack 0
  4371                           
  4372 ;; *************** function _UART2_SetTxInterruptHandler *****************
  4373 ;; Defined at:
  4374 ;;		line 324 in file "mcc_generated_files/uart2.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  4377 ;;		 -> UART2_Transmit_ISR(1), 
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;		None
  4380 ;; Return value:  Size  Location     Type
  4381 ;;                  1    wreg      void 
  4382 ;; Registers used:
  4383 ;;		wreg, status,2, status,0
  4384 ;; Tracked objects:
  4385 ;;		On entry : 3F/39
  4386 ;;		On exit  : 3F/39
  4387 ;;		Unchanged: 3E/0
  4388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4389 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4392 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4393 ;;Total ram usage:        3 bytes
  4394 ;; Hardware stack levels used:    1
  4395 ;; Hardware stack levels required when called:    4
  4396 ;; This function calls:
  4397 ;;		Nothing
  4398 ;; This function is called by:
  4399 ;;		_UART2_Initialize
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           
  4403                           	psect	text19
  4404  00539A                     __ptext19:
  4405                           	opt callstack 0
  4406  00539A                     _UART2_SetTxInterruptHandler:
  4407                           	opt callstack 24
  4408                           
  4409                           ; BSR set to: 57
  4410                           ;mcc_generated_files/uart2.c: 325:     UART2_TxInterruptHandler = InterruptHandler;
  4411                           
  4412                           ; BSR set to: 57
  4413                           ;incstack = 0
  4414  00539A  0060  F018  F184   	movff	UART2_SetTxInterruptHandler@InterruptHandler,_UART2_TxInterruptHandler
  4415  0053A0  0060  F01C  F185   	movff	UART2_SetTxInterruptHandler@InterruptHandler+1,_UART2_TxInterruptHandler+1
  4416  0053A6  0060  F020  F186   	movff	UART2_SetTxInterruptHandler@InterruptHandler+2,_UART2_TxInterruptHandler+2
  4417                           
  4418                           ; BSR set to: 57
  4419  0053AC  0012               	return		;funcret
  4420  0053AE                     __end_of_UART2_SetTxInterruptHandler:
  4421                           	opt callstack 0
  4422                           
  4423 ;; *************** function _UART2_SetRxInterruptHandler *****************
  4424 ;; Defined at:
  4425 ;;		line 320 in file "mcc_generated_files/uart2.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  4428 ;;		 -> UART2_Receive_ISR(1), 
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;		None
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  1    wreg      void 
  4433 ;; Registers used:
  4434 ;;		wreg, status,2, status,0
  4435 ;; Tracked objects:
  4436 ;;		On entry : 3F/39
  4437 ;;		On exit  : 3F/39
  4438 ;;		Unchanged: 3E/0
  4439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4440 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4443 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4444 ;;Total ram usage:        3 bytes
  4445 ;; Hardware stack levels used:    1
  4446 ;; Hardware stack levels required when called:    4
  4447 ;; This function calls:
  4448 ;;		Nothing
  4449 ;; This function is called by:
  4450 ;;		_UART2_Initialize
  4451 ;; This function uses a non-reentrant model
  4452 ;;
  4453                           
  4454                           	psect	text20
  4455  0053AE                     __ptext20:
  4456                           	opt callstack 0
  4457  0053AE                     _UART2_SetRxInterruptHandler:
  4458                           	opt callstack 24
  4459                           
  4460                           ; BSR set to: 57
  4461                           ;mcc_generated_files/uart2.c: 321:     UART2_RxInterruptHandler = InterruptHandler;
  4462                           
  4463                           ; BSR set to: 57
  4464                           ;incstack = 0
  4465  0053AE  0060  F018  F187   	movff	UART2_SetRxInterruptHandler@InterruptHandler,_UART2_RxInterruptHandler
  4466  0053B4  0060  F01C  F188   	movff	UART2_SetRxInterruptHandler@InterruptHandler+1,_UART2_RxInterruptHandler+1
  4467  0053BA  0060  F020  F189   	movff	UART2_SetRxInterruptHandler@InterruptHandler+2,_UART2_RxInterruptHandler+2
  4468                           
  4469                           ; BSR set to: 57
  4470  0053C0  0012               	return		;funcret
  4471  0053C2                     __end_of_UART2_SetRxInterruptHandler:
  4472                           	opt callstack 0
  4473                           
  4474 ;; *************** function _UART2_SetOverrunErrorHandler *****************
  4475 ;; Defined at:
  4476 ;;		line 310 in file "mcc_generated_files/uart2.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  4479 ;;		 -> UART2_DefaultOverrunErrorHandler(1), 
  4480 ;; Auto vars:     Size  Location     Type
  4481 ;;		None
  4482 ;; Return value:  Size  Location     Type
  4483 ;;                  1    wreg      void 
  4484 ;; Registers used:
  4485 ;;		wreg, status,2, status,0
  4486 ;; Tracked objects:
  4487 ;;		On entry : 3F/3D
  4488 ;;		On exit  : 3F/3D
  4489 ;;		Unchanged: 3E/0
  4490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4491 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4494 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4495 ;;Total ram usage:        3 bytes
  4496 ;; Hardware stack levels used:    1
  4497 ;; Hardware stack levels required when called:    4
  4498 ;; This function calls:
  4499 ;;		Nothing
  4500 ;; This function is called by:
  4501 ;;		_UART2_Initialize
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           	psect	text21
  4506  0053C2                     __ptext21:
  4507                           	opt callstack 0
  4508  0053C2                     _UART2_SetOverrunErrorHandler:
  4509                           	opt callstack 24
  4510                           
  4511                           ; BSR set to: 61
  4512                           ;mcc_generated_files/uart2.c: 311:     UART2_OverrunErrorHandler = interruptHandler;
  4513                           
  4514                           ; BSR set to: 57
  4515                           ;incstack = 0
  4516  0053C2  0060  F018  F16F   	movff	UART2_SetOverrunErrorHandler@interruptHandler,_UART2_OverrunErrorHandler
  4517  0053C8  0060  F01C  F170   	movff	UART2_SetOverrunErrorHandler@interruptHandler+1,_UART2_OverrunErrorHandler+1
  4518  0053CE  0060  F020  F171   	movff	UART2_SetOverrunErrorHandler@interruptHandler+2,_UART2_OverrunErrorHandler+2
  4519                           
  4520                           ; BSR set to: 61
  4521  0053D4  0012               	return		;funcret
  4522  0053D6                     __end_of_UART2_SetOverrunErrorHandler:
  4523                           	opt callstack 0
  4524                           
  4525 ;; *************** function _UART2_SetFramingErrorHandler *****************
  4526 ;; Defined at:
  4527 ;;		line 306 in file "mcc_generated_files/uart2.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  4530 ;;		 -> UART2_DefaultFramingErrorHandler(1), 
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;		None
  4533 ;; Return value:  Size  Location     Type
  4534 ;;                  1    wreg      void 
  4535 ;; Registers used:
  4536 ;;		wreg, status,2, status,0
  4537 ;; Tracked objects:
  4538 ;;		On entry : 3F/3D
  4539 ;;		On exit  : 3F/3D
  4540 ;;		Unchanged: 3E/0
  4541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4542 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4545 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4546 ;;Total ram usage:        3 bytes
  4547 ;; Hardware stack levels used:    1
  4548 ;; Hardware stack levels required when called:    4
  4549 ;; This function calls:
  4550 ;;		Nothing
  4551 ;; This function is called by:
  4552 ;;		_UART2_Initialize
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556                           	psect	text22
  4557  0053D6                     __ptext22:
  4558                           	opt callstack 0
  4559  0053D6                     _UART2_SetFramingErrorHandler:
  4560                           	opt callstack 24
  4561                           
  4562                           ; BSR set to: 61
  4563                           ;mcc_generated_files/uart2.c: 307:     UART2_FramingErrorHandler = interruptHandler;
  4564                           
  4565                           ; BSR set to: 61
  4566                           ;incstack = 0
  4567  0053D6  0060  F018  F172   	movff	UART2_SetFramingErrorHandler@interruptHandler,_UART2_FramingErrorHandler
  4568  0053DC  0060  F01C  F173   	movff	UART2_SetFramingErrorHandler@interruptHandler+1,_UART2_FramingErrorHandler+1
  4569  0053E2  0060  F020  F174   	movff	UART2_SetFramingErrorHandler@interruptHandler+2,_UART2_FramingErrorHandler+2
  4570                           
  4571                           ; BSR set to: 61
  4572  0053E8  0012               	return		;funcret
  4573  0053EA                     __end_of_UART2_SetFramingErrorHandler:
  4574                           	opt callstack 0
  4575                           
  4576 ;; *************** function _UART2_SetErrorHandler *****************
  4577 ;; Defined at:
  4578 ;;		line 314 in file "mcc_generated_files/uart2.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  4581 ;;		 -> UART2_DefaultErrorHandler(1), 
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;		None
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      void 
  4586 ;; Registers used:
  4587 ;;		wreg, status,2, status,0
  4588 ;; Tracked objects:
  4589 ;;		On entry : 3F/3D
  4590 ;;		On exit  : 3F/3D
  4591 ;;		Unchanged: 3E/0
  4592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4593 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4596 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4597 ;;Total ram usage:        3 bytes
  4598 ;; Hardware stack levels used:    1
  4599 ;; Hardware stack levels required when called:    4
  4600 ;; This function calls:
  4601 ;;		Nothing
  4602 ;; This function is called by:
  4603 ;;		_UART2_Initialize
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607                           	psect	text23
  4608  0053EA                     __ptext23:
  4609                           	opt callstack 0
  4610  0053EA                     _UART2_SetErrorHandler:
  4611                           	opt callstack 24
  4612                           
  4613                           ; BSR set to: 61
  4614                           ;mcc_generated_files/uart2.c: 315:     UART2_ErrorHandler = interruptHandler;
  4615                           
  4616                           ; BSR set to: 61
  4617                           ;incstack = 0
  4618  0053EA  0060  F018  F16C   	movff	UART2_SetErrorHandler@interruptHandler,_UART2_ErrorHandler
  4619  0053F0  0060  F01C  F16D   	movff	UART2_SetErrorHandler@interruptHandler+1,_UART2_ErrorHandler+1
  4620  0053F6  0060  F020  F16E   	movff	UART2_SetErrorHandler@interruptHandler+2,_UART2_ErrorHandler+2
  4621                           
  4622                           ; BSR set to: 61
  4623  0053FC  0012               	return		;funcret
  4624  0053FE                     __end_of_UART2_SetErrorHandler:
  4625                           	opt callstack 0
  4626                           
  4627 ;; *************** function _UART1_Initialize *****************
  4628 ;; Defined at:
  4629 ;;		line 87 in file "mcc_generated_files/uart1.c"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;		None
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;		None
  4634 ;; Return value:  Size  Location     Type
  4635 ;;                  1    wreg      void 
  4636 ;; Registers used:
  4637 ;;		wreg, status,2, status,0, cstack
  4638 ;; Tracked objects:
  4639 ;;		On entry : 3F/39
  4640 ;;		On exit  : 3F/39
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4647 ;;Total ram usage:        0 bytes
  4648 ;; Hardware stack levels used:    1
  4649 ;; Hardware stack levels required when called:    5
  4650 ;; This function calls:
  4651 ;;		_UART1_SetErrorHandler
  4652 ;;		_UART1_SetFramingErrorHandler
  4653 ;;		_UART1_SetOverrunErrorHandler
  4654 ;;		_UART1_SetRxInterruptHandler
  4655 ;;		_UART1_SetTxInterruptHandler
  4656 ;; This function is called by:
  4657 ;;		_SYSTEM_Initialize
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           	psect	text24
  4662  00433A                     __ptext24:
  4663                           	opt callstack 0
  4664  00433A                     _UART1_Initialize:
  4665                           	opt callstack 24
  4666                           
  4667                           ; BSR set to: 57
  4668                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
  4669                           
  4670                           ; BSR set to: 61
  4671                           ;incstack = 0
  4672  00433A  9793               	bcf	147,3,b	;volatile
  4673                           
  4674                           ; BSR set to: 57
  4675                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  4676  00433C  0EAC               	movlw	low _UART1_Receive_ISR
  4677  00433E  6E06               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
  4678  004340  0E46               	movlw	high _UART1_Receive_ISR
  4679  004342  6E07               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
  4680  004344  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
  4681  004346  6E08               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+2)^0,c
  4682  004348  EC09  F02A         	call	_UART1_SetRxInterruptHandler	;wreg free
  4683                           
  4684                           ; BSR set to: 57
  4685                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
  4686  00434C  9993               	bcf	147,4,b	;volatile
  4687                           
  4688                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  4689  00434E  0E28               	movlw	low _UART1_Transmit_ISR
  4690  004350  6E06               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
  4691  004352  0E50               	movlw	high _UART1_Transmit_ISR
  4692  004354  6E07               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
  4693  004356  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
  4694  004358  6E08               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+2)^0,c
  4695  00435A  ECFF  F029         	call	_UART1_SetTxInterruptHandler	;wreg free
  4696                           
  4697                           ; BSR set to: 57
  4698                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
  4699  00435E  0E00               	movlw	0
  4700  004360  013D               	movlb	61	; () banked
  4701  004362  6FEC               	movwf	236,b	;volatile
  4702                           
  4703                           ; BSR set to: 61
  4704                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
  4705  004364  0E00               	movlw	0
  4706  004366  6FED               	movwf	237,b	;volatile
  4707                           
  4708                           ; BSR set to: 61
  4709                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
  4710  004368  0E00               	movlw	0
  4711  00436A  6FEE               	movwf	238,b	;volatile
  4712                           
  4713                           ; BSR set to: 61
  4714                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
  4715  00436C  0E00               	movlw	0
  4716  00436E  6FEF               	movwf	239,b	;volatile
  4717                           
  4718                           ; BSR set to: 61
  4719                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
  4720  004370  0E00               	movlw	0
  4721  004372  6FF0               	movwf	240,b	;volatile
  4722                           
  4723                           ; BSR set to: 61
  4724                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
  4725  004374  0E00               	movlw	0
  4726  004376  6FF1               	movwf	241,b	;volatile
  4727                           
  4728                           ; BSR set to: 61
  4729                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0x90;
  4730  004378  0E90               	movlw	144
  4731  00437A  6FF2               	movwf	242,b	;volatile
  4732                           
  4733                           ; BSR set to: 61
  4734                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
  4735  00437C  0E80               	movlw	128
  4736  00437E  6FF3               	movwf	243,b	;volatile
  4737                           
  4738                           ; BSR set to: 61
  4739                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
  4740  004380  0E00               	movlw	0
  4741  004382  6FF4               	movwf	244,b	;volatile
  4742                           
  4743                           ; BSR set to: 61
  4744                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x40;
  4745  004384  0E40               	movlw	64
  4746  004386  6FF5               	movwf	245,b	;volatile
  4747                           
  4748                           ; BSR set to: 61
  4749                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x03;
  4750  004388  0E03               	movlw	3
  4751  00438A  6FF6               	movwf	246,b	;volatile
  4752                           
  4753                           ; BSR set to: 61
  4754                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
  4755  00438C  0E00               	movlw	0
  4756  00438E  6FF7               	movwf	247,b	;volatile
  4757                           
  4758                           ; BSR set to: 61
  4759                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
  4760  004390  0E00               	movlw	0
  4761  004392  6FF8               	movwf	248,b	;volatile
  4762                           
  4763                           ; BSR set to: 61
  4764                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
  4765  004394  0E00               	movlw	0
  4766  004396  6FF9               	movwf	249,b	;volatile
  4767                           
  4768                           ; BSR set to: 61
  4769                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
  4770  004398  0E00               	movlw	0
  4771  00439A  6FFA               	movwf	250,b	;volatile
  4772                           
  4773                           ; BSR set to: 61
  4774                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  4775  00439C  0EF0               	movlw	low _UART1_DefaultFramingErrorHandler
  4776  00439E  6E06               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  4777  0043A0  0E54               	movlw	high _UART1_DefaultFramingErrorHandler
  4778  0043A2  6E07               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  4779  0043A4  0E00               	movlw	low (_UART1_DefaultFramingErrorHandler shr (0+16))
  4780  0043A6  6E08               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+2)^0,c
  4781  0043A8  EC1D  F02A         	call	_UART1_SetFramingErrorHandler	;wreg free
  4782                           
  4783                           ; BSR set to: 61
  4784                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  4785  0043AC  0EEE               	movlw	low _UART1_DefaultOverrunErrorHandler
  4786  0043AE  6E06               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  4787  0043B0  0E54               	movlw	high _UART1_DefaultOverrunErrorHandler
  4788  0043B2  6E07               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  4789  0043B4  0E00               	movlw	low (_UART1_DefaultOverrunErrorHandler shr (0+16))
  4790  0043B6  6E08               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+2)^0,c
  4791  0043B8  EC13  F02A         	call	_UART1_SetOverrunErrorHandler	;wreg free
  4792                           
  4793                           ; BSR set to: 61
  4794                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  4795  0043BC  0EDE               	movlw	low _UART1_DefaultErrorHandler
  4796  0043BE  6E06               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  4797  0043C0  0E54               	movlw	high _UART1_DefaultErrorHandler
  4798  0043C2  6E07               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  4799  0043C4  0E00               	movlw	low (_UART1_DefaultErrorHandler shr (0+16))
  4800  0043C6  6E08               	movwf	(UART1_SetErrorHandler@interruptHandler+2)^0,c
  4801  0043C8  EC27  F02A         	call	_UART1_SetErrorHandler	;wreg free
  4802                           
  4803                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
  4804  0043CC  0E00               	movlw	0
  4805  0043CE  0101               	movlb	1	; () banked
  4806  0043D0  6F95               	movwf	_uart1RxLastError& (0+255),b	;volatile
  4807                           
  4808                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
  4809  0043D2  0E00               	movlw	0
  4810  0043D4  0100               	movlb	0	; () banked
  4811  0043D6  6FAB               	movwf	_uart1TxHead& (0+255),b	;volatile
  4812                           
  4813                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
  4814  0043D8  0E00               	movlw	0
  4815  0043DA  6FAA               	movwf	_uart1TxTail& (0+255),b	;volatile
  4816                           
  4817                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  4818  0043DC  0E08               	movlw	8
  4819  0043DE  6FA9               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
  4820                           
  4821                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
  4822  0043E0  0E00               	movlw	0
  4823  0043E2  6E5A               	movwf	_uart1RxHead^0,c	;volatile
  4824                           
  4825                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
  4826  0043E4  0E00               	movlw	0
  4827  0043E6  6FA8               	movwf	_uart1RxTail& (0+255),b	;volatile
  4828                           
  4829                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
  4830  0043E8  0E00               	movlw	0
  4831  0043EA  6FA7               	movwf	_uart1RxCount& (0+255),b	;volatile
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
  4835  0043EC  0139               	movlb	57	; () banked
  4836  0043EE  8793               	bsf	147,3,b	;volatile
  4837                           
  4838                           ; BSR set to: 57
  4839  0043F0  0012               	return		;funcret
  4840  0043F2                     __end_of_UART1_Initialize:
  4841                           	opt callstack 0
  4842                           
  4843 ;; *************** function _UART1_SetTxInterruptHandler *****************
  4844 ;; Defined at:
  4845 ;;		line 323 in file "mcc_generated_files/uart1.c"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  4848 ;;		 -> UART1_Transmit_ISR(1), 
  4849 ;; Auto vars:     Size  Location     Type
  4850 ;;		None
  4851 ;; Return value:  Size  Location     Type
  4852 ;;                  1    wreg      void 
  4853 ;; Registers used:
  4854 ;;		wreg, status,2, status,0
  4855 ;; Tracked objects:
  4856 ;;		On entry : 3F/39
  4857 ;;		On exit  : 3F/39
  4858 ;;		Unchanged: 3E/0
  4859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4860 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4863 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4864 ;;Total ram usage:        3 bytes
  4865 ;; Hardware stack levels used:    1
  4866 ;; Hardware stack levels required when called:    4
  4867 ;; This function calls:
  4868 ;;		Nothing
  4869 ;; This function is called by:
  4870 ;;		_UART1_Initialize
  4871 ;; This function uses a non-reentrant model
  4872 ;;
  4873                           
  4874                           	psect	text25
  4875  0053FE                     __ptext25:
  4876                           	opt callstack 0
  4877  0053FE                     _UART1_SetTxInterruptHandler:
  4878                           	opt callstack 24
  4879                           
  4880                           ; BSR set to: 57
  4881                           ;mcc_generated_files/uart1.c: 324:     UART1_TxInterruptHandler = InterruptHandler;
  4882                           
  4883                           ; BSR set to: 57
  4884                           ;incstack = 0
  4885  0053FE  0060  F018  F17E   	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  4886  005404  0060  F01C  F17F   	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  4887  00540A  0060  F020  F180   	movff	UART1_SetTxInterruptHandler@InterruptHandler+2,_UART1_TxInterruptHandler+2
  4888                           
  4889                           ; BSR set to: 57
  4890  005410  0012               	return		;funcret
  4891  005412                     __end_of_UART1_SetTxInterruptHandler:
  4892                           	opt callstack 0
  4893                           
  4894 ;; *************** function _UART1_SetRxInterruptHandler *****************
  4895 ;; Defined at:
  4896 ;;		line 319 in file "mcc_generated_files/uart1.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  4899 ;;		 -> UART1_Receive_ISR(1), 
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;		None
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  1    wreg      void 
  4904 ;; Registers used:
  4905 ;;		wreg, status,2, status,0
  4906 ;; Tracked objects:
  4907 ;;		On entry : 3F/39
  4908 ;;		On exit  : 3F/39
  4909 ;;		Unchanged: 3E/0
  4910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4911 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4914 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4915 ;;Total ram usage:        3 bytes
  4916 ;; Hardware stack levels used:    1
  4917 ;; Hardware stack levels required when called:    4
  4918 ;; This function calls:
  4919 ;;		Nothing
  4920 ;; This function is called by:
  4921 ;;		_UART1_Initialize
  4922 ;; This function uses a non-reentrant model
  4923 ;;
  4924                           
  4925                           	psect	text26
  4926  005412                     __ptext26:
  4927                           	opt callstack 0
  4928  005412                     _UART1_SetRxInterruptHandler:
  4929                           	opt callstack 24
  4930                           
  4931                           ; BSR set to: 57
  4932                           ;mcc_generated_files/uart1.c: 320:     UART1_RxInterruptHandler = InterruptHandler;
  4933                           
  4934                           ; BSR set to: 57
  4935                           ;incstack = 0
  4936  005412  0060  F018  F181   	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  4937  005418  0060  F01C  F182   	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  4938  00541E  0060  F020  F183   	movff	UART1_SetRxInterruptHandler@InterruptHandler+2,_UART1_RxInterruptHandler+2
  4939                           
  4940                           ; BSR set to: 57
  4941  005424  0012               	return		;funcret
  4942  005426                     __end_of_UART1_SetRxInterruptHandler:
  4943                           	opt callstack 0
  4944                           
  4945 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  4946 ;; Defined at:
  4947 ;;		line 309 in file "mcc_generated_files/uart1.c"
  4948 ;; Parameters:    Size  Location     Type
  4949 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  4950 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;		None
  4953 ;; Return value:  Size  Location     Type
  4954 ;;                  1    wreg      void 
  4955 ;; Registers used:
  4956 ;;		wreg, status,2, status,0
  4957 ;; Tracked objects:
  4958 ;;		On entry : 3F/3D
  4959 ;;		On exit  : 3F/3D
  4960 ;;		Unchanged: 3E/0
  4961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4962 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4965 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4966 ;;Total ram usage:        3 bytes
  4967 ;; Hardware stack levels used:    1
  4968 ;; Hardware stack levels required when called:    4
  4969 ;; This function calls:
  4970 ;;		Nothing
  4971 ;; This function is called by:
  4972 ;;		_UART1_Initialize
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           	psect	text27
  4977  005426                     __ptext27:
  4978                           	opt callstack 0
  4979  005426                     _UART1_SetOverrunErrorHandler:
  4980                           	opt callstack 24
  4981                           
  4982                           ; BSR set to: 61
  4983                           ;mcc_generated_files/uart1.c: 310:     UART1_OverrunErrorHandler = interruptHandler;
  4984                           
  4985                           ; BSR set to: 57
  4986                           ;incstack = 0
  4987  005426  0060  F018  F178   	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  4988  00542C  0060  F01C  F179   	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  4989  005432  0060  F020  F17A   	movff	UART1_SetOverrunErrorHandler@interruptHandler+2,_UART1_OverrunErrorHandler+2
  4990                           
  4991                           ; BSR set to: 61
  4992  005438  0012               	return		;funcret
  4993  00543A                     __end_of_UART1_SetOverrunErrorHandler:
  4994                           	opt callstack 0
  4995                           
  4996 ;; *************** function _UART1_SetFramingErrorHandler *****************
  4997 ;; Defined at:
  4998 ;;		line 305 in file "mcc_generated_files/uart1.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  5001 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;		None
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  1    wreg      void 
  5006 ;; Registers used:
  5007 ;;		wreg, status,2, status,0
  5008 ;; Tracked objects:
  5009 ;;		On entry : 3F/3D
  5010 ;;		On exit  : 3F/3D
  5011 ;;		Unchanged: 3E/0
  5012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5013 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5016 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5017 ;;Total ram usage:        3 bytes
  5018 ;; Hardware stack levels used:    1
  5019 ;; Hardware stack levels required when called:    4
  5020 ;; This function calls:
  5021 ;;		Nothing
  5022 ;; This function is called by:
  5023 ;;		_UART1_Initialize
  5024 ;; This function uses a non-reentrant model
  5025 ;;
  5026                           
  5027                           	psect	text28
  5028  00543A                     __ptext28:
  5029                           	opt callstack 0
  5030  00543A                     _UART1_SetFramingErrorHandler:
  5031                           	opt callstack 24
  5032                           
  5033                           ; BSR set to: 61
  5034                           ;mcc_generated_files/uart1.c: 306:     UART1_FramingErrorHandler = interruptHandler;
  5035                           
  5036                           ; BSR set to: 61
  5037                           ;incstack = 0
  5038  00543A  0060  F018  F17B   	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  5039  005440  0060  F01C  F17C   	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  5040  005446  0060  F020  F17D   	movff	UART1_SetFramingErrorHandler@interruptHandler+2,_UART1_FramingErrorHandler+2
  5041                           
  5042                           ; BSR set to: 61
  5043  00544C  0012               	return		;funcret
  5044  00544E                     __end_of_UART1_SetFramingErrorHandler:
  5045                           	opt callstack 0
  5046                           
  5047 ;; *************** function _UART1_SetErrorHandler *****************
  5048 ;; Defined at:
  5049 ;;		line 313 in file "mcc_generated_files/uart1.c"
  5050 ;; Parameters:    Size  Location     Type
  5051 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  5052 ;;		 -> UART1_DefaultErrorHandler(1), 
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;		None
  5055 ;; Return value:  Size  Location     Type
  5056 ;;                  1    wreg      void 
  5057 ;; Registers used:
  5058 ;;		wreg, status,2, status,0
  5059 ;; Tracked objects:
  5060 ;;		On entry : 3F/3D
  5061 ;;		On exit  : 3F/3D
  5062 ;;		Unchanged: 3E/0
  5063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5064 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5067 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5068 ;;Total ram usage:        3 bytes
  5069 ;; Hardware stack levels used:    1
  5070 ;; Hardware stack levels required when called:    4
  5071 ;; This function calls:
  5072 ;;		Nothing
  5073 ;; This function is called by:
  5074 ;;		_UART1_Initialize
  5075 ;; This function uses a non-reentrant model
  5076 ;;
  5077                           
  5078                           	psect	text29
  5079  00544E                     __ptext29:
  5080                           	opt callstack 0
  5081  00544E                     _UART1_SetErrorHandler:
  5082                           	opt callstack 24
  5083                           
  5084                           ; BSR set to: 61
  5085                           ;mcc_generated_files/uart1.c: 314:     UART1_ErrorHandler = interruptHandler;
  5086                           
  5087                           ; BSR set to: 61
  5088                           ;incstack = 0
  5089  00544E  0060  F018  F175   	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  5090  005454  0060  F01C  F176   	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  5091  00545A  0060  F020  F177   	movff	UART1_SetErrorHandler@interruptHandler+2,_UART1_ErrorHandler+2
  5092                           
  5093                           ; BSR set to: 61
  5094  005460  0012               	return		;funcret
  5095  005462                     __end_of_UART1_SetErrorHandler:
  5096                           	opt callstack 0
  5097                           
  5098 ;; *************** function _TMR6_Initialize *****************
  5099 ;; Defined at:
  5100 ;;		line 67 in file "mcc_generated_files/tmr6.c"
  5101 ;; Parameters:    Size  Location     Type
  5102 ;;		None
  5103 ;; Auto vars:     Size  Location     Type
  5104 ;;		None
  5105 ;; Return value:  Size  Location     Type
  5106 ;;                  1    wreg      void 
  5107 ;; Registers used:
  5108 ;;		wreg, status,2, status,0, cstack
  5109 ;; Tracked objects:
  5110 ;;		On entry : 3F/3E
  5111 ;;		On exit  : 3F/39
  5112 ;;		Unchanged: 0/0
  5113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5118 ;;Total ram usage:        0 bytes
  5119 ;; Hardware stack levels used:    1
  5120 ;; Hardware stack levels required when called:    5
  5121 ;; This function calls:
  5122 ;;		_TMR6_SetInterruptHandler
  5123 ;; This function is called by:
  5124 ;;		_SYSTEM_Initialize
  5125 ;; This function uses a non-reentrant model
  5126 ;;
  5127                           
  5128                           	psect	text30
  5129  00508C                     __ptext30:
  5130                           	opt callstack 0
  5131  00508C                     _TMR6_Initialize:
  5132                           	opt callstack 24
  5133                           
  5134                           ; BSR set to: 62
  5135                           ;mcc_generated_files/tmr6.c: 72:  T6CLKCON = 0x01;
  5136                           
  5137                           ; BSR set to: 61
  5138                           ;incstack = 0
  5139  00508C  0E01               	movlw	1
  5140  00508E  6E96               	movwf	150,c	;volatile
  5141                           
  5142                           ;mcc_generated_files/tmr6.c: 75:  T6HLT = 0x00;
  5143  005090  0E00               	movlw	0
  5144  005092  6E95               	movwf	149,c	;volatile
  5145                           
  5146                           ;mcc_generated_files/tmr6.c: 78:  T6RST = 0x00;
  5147  005094  0E00               	movlw	0
  5148  005096  6E97               	movwf	151,c	;volatile
  5149                           
  5150                           ;mcc_generated_files/tmr6.c: 81:  T6PR = 0x03;
  5151  005098  0E03               	movlw	3
  5152  00509A  6E93               	movwf	147,c	;volatile
  5153                           
  5154                           ;mcc_generated_files/tmr6.c: 84:  T6TMR = 0x00;
  5155  00509C  0E00               	movlw	0
  5156  00509E  6E92               	movwf	146,c	;volatile
  5157                           
  5158                           ; BSR set to: 62
  5159                           ;mcc_generated_files/tmr6.c: 87:  PIR9bits.TMR6IF = 0;
  5160  0050A0  0139               	movlb	57	; () banked
  5161  0050A2  91A9               	bcf	169,0,b	;volatile
  5162                           
  5163                           ; BSR set to: 57
  5164                           ;mcc_generated_files/tmr6.c: 90:  PIE9bits.TMR6IE = 1;
  5165  0050A4  8199               	bsf	153,0,b	;volatile
  5166                           
  5167                           ; BSR set to: 57
  5168                           ;mcc_generated_files/tmr6.c: 93:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
  5169  0050A6  0E6E               	movlw	low _TMR6_DefaultInterruptHandler
  5170  0050A8  6E06               	movwf	TMR6_SetInterruptHandler@InterruptHandler^0,c
  5171  0050AA  0E4E               	movlw	high _TMR6_DefaultInterruptHandler
  5172  0050AC  6E07               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)^0,c
  5173  0050AE  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
  5174  0050B0  6E08               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)^0,c
  5175  0050B2  EC31  F02A         	call	_TMR6_SetInterruptHandler	;wreg free
  5176                           
  5177                           ; BSR set to: 57
  5178                           ;mcc_generated_files/tmr6.c: 96:  T6CON = 0xFF;
  5179  0050B6  6894               	setf	148,c	;volatile
  5180                           
  5181                           ; BSR set to: 57
  5182  0050B8  0012               	return		;funcret
  5183  0050BA                     __end_of_TMR6_Initialize:
  5184                           	opt callstack 0
  5185                           
  5186 ;; *************** function _TMR6_SetInterruptHandler *****************
  5187 ;; Defined at:
  5188 ;;		line 179 in file "mcc_generated_files/tmr6.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  5191 ;;		 -> TMR6_DefaultInterruptHandler(1), 
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;		None
  5194 ;; Return value:  Size  Location     Type
  5195 ;;                  1    wreg      void 
  5196 ;; Registers used:
  5197 ;;		wreg, status,2, status,0
  5198 ;; Tracked objects:
  5199 ;;		On entry : 3F/39
  5200 ;;		On exit  : 3F/39
  5201 ;;		Unchanged: 3E/0
  5202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5203 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5206 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5207 ;;Total ram usage:        3 bytes
  5208 ;; Hardware stack levels used:    1
  5209 ;; Hardware stack levels required when called:    4
  5210 ;; This function calls:
  5211 ;;		Nothing
  5212 ;; This function is called by:
  5213 ;;		_TMR6_Initialize
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217                           	psect	text31
  5218  005462                     __ptext31:
  5219                           	opt callstack 0
  5220  005462                     _TMR6_SetInterruptHandler:
  5221                           	opt callstack 24
  5222                           
  5223                           ; BSR set to: 57
  5224                           ;mcc_generated_files/tmr6.c: 179: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 180: {;mcc_generated_files/tmr6.c: 181:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
  5225                           
  5226                           ; BSR set to: 57
  5227                           ;incstack = 0
  5228  005462  0060  F018  F169   	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
  5229  005468  0060  F01C  F16A   	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
  5230  00546E  0060  F020  F16B   	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
  5231                           
  5232                           ; BSR set to: 57
  5233  005474  0012               	return		;funcret
  5234  005476                     __end_of_TMR6_SetInterruptHandler:
  5235                           	opt callstack 0
  5236                           
  5237 ;; *************** function _TMR5_Initialize *****************
  5238 ;; Defined at:
  5239 ;;		line 66 in file "mcc_generated_files/tmr5.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;		None
  5242 ;; Auto vars:     Size  Location     Type
  5243 ;;		None
  5244 ;; Return value:  Size  Location     Type
  5245 ;;                  1    wreg      void 
  5246 ;; Registers used:
  5247 ;;		wreg, status,2, status,0, cstack
  5248 ;; Tracked objects:
  5249 ;;		On entry : 3F/3E
  5250 ;;		On exit  : 3F/39
  5251 ;;		Unchanged: 0/0
  5252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5255 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5256 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5257 ;;Total ram usage:        2 bytes
  5258 ;; Hardware stack levels used:    1
  5259 ;; Hardware stack levels required when called:    5
  5260 ;; This function calls:
  5261 ;;		_TMR5_SetInterruptHandler
  5262 ;; This function is called by:
  5263 ;;		_SYSTEM_Initialize
  5264 ;; This function uses a non-reentrant model
  5265 ;;
  5266                           
  5267                           	psect	text32
  5268  004C4E                     __ptext32:
  5269                           	opt callstack 0
  5270  004C4E                     _TMR5_Initialize:
  5271                           	opt callstack 24
  5272                           
  5273                           ; BSR set to: 62
  5274                           ;mcc_generated_files/tmr5.c: 71:     T5GCON = 0x00;
  5275                           
  5276                           ; BSR set to: 57
  5277                           ;incstack = 0
  5278  004C4E  0E00               	movlw	0
  5279  004C50  6E9B               	movwf	155,c	;volatile
  5280                           
  5281                           ;mcc_generated_files/tmr5.c: 74:     T5GATE = 0x00;
  5282  004C52  0E00               	movlw	0
  5283  004C54  6E9C               	movwf	156,c	;volatile
  5284                           
  5285                           ;mcc_generated_files/tmr5.c: 77:     T5CLK = 0x01;
  5286  004C56  0E01               	movlw	1
  5287  004C58  6E9D               	movwf	157,c	;volatile
  5288                           
  5289                           ;mcc_generated_files/tmr5.c: 80:     TMR5H = 0x63;
  5290  004C5A  0E63               	movlw	99
  5291  004C5C  6E99               	movwf	153,c	;volatile
  5292                           
  5293                           ;mcc_generated_files/tmr5.c: 83:     TMR5L = 0xC0;
  5294  004C5E  0EC0               	movlw	192
  5295  004C60  6E98               	movwf	152,c	;volatile
  5296                           
  5297                           ; BSR set to: 62
  5298                           ;mcc_generated_files/tmr5.c: 86:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  5299  004C62  5098               	movf	152,w,c	;volatile
  5300  004C64  006F FE64  F009    	movff	16281,??_TMR5_Initialize	;volatile
  5301  004C6A  6A0A               	clrf	(??_TMR5_Initialize+1)^0,c
  5302  004C6C  0060  F024  F00A   	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  5303  004C72  6A09               	clrf	??_TMR5_Initialize^0,c
  5304  004C74  1009               	iorwf	??_TMR5_Initialize^0,w,c
  5305  004C76  0101               	movlb	1	; () banked
  5306  004C78  6F92               	movwf	_timer5ReloadVal& (0+255),b	;volatile
  5307  004C7A  500A               	movf	(??_TMR5_Initialize+1)^0,w,c
  5308  004C7C  6F93               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
  5309                           
  5310                           ; BSR set to: 1
  5311                           ;mcc_generated_files/tmr5.c: 89:     PIR8bits.TMR5IF = 0;
  5312  004C7E  0139               	movlb	57	; () banked
  5313  004C80  9DA8               	bcf	168,6,b	;volatile
  5314                           
  5315                           ; BSR set to: 57
  5316                           ;mcc_generated_files/tmr5.c: 92:     PIE8bits.TMR5IE = 1;
  5317  004C82  8D98               	bsf	152,6,b	;volatile
  5318                           
  5319                           ; BSR set to: 57
  5320                           ;mcc_generated_files/tmr5.c: 95:     TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandl
      +                          er);
  5321  004C84  0E50               	movlw	low _TMR5_DefaultInterruptHandler
  5322  004C86  6E06               	movwf	TMR5_SetInterruptHandler@InterruptHandler^0,c
  5323  004C88  0E53               	movlw	high _TMR5_DefaultInterruptHandler
  5324  004C8A  6E07               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)^0,c
  5325  004C8C  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
  5326  004C8E  6E08               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)^0,c
  5327  004C90  EC3B  F02A         	call	_TMR5_SetInterruptHandler	;wreg free
  5328                           
  5329                           ; BSR set to: 57
  5330                           ;mcc_generated_files/tmr5.c: 98:     T5CON = 0x31;
  5331  004C94  0E31               	movlw	49
  5332  004C96  6E9A               	movwf	154,c	;volatile
  5333                           
  5334                           ; BSR set to: 57
  5335  004C98  0012               	return		;funcret
  5336  004C9A                     __end_of_TMR5_Initialize:
  5337                           	opt callstack 0
  5338                           
  5339 ;; *************** function _TMR5_SetInterruptHandler *****************
  5340 ;; Defined at:
  5341 ;;		line 194 in file "mcc_generated_files/tmr5.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  5344 ;;		 -> TMR5_DefaultInterruptHandler(1), 
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;		None
  5347 ;; Return value:  Size  Location     Type
  5348 ;;                  1    wreg      void 
  5349 ;; Registers used:
  5350 ;;		wreg, status,2, status,0
  5351 ;; Tracked objects:
  5352 ;;		On entry : 3F/39
  5353 ;;		On exit  : 3F/39
  5354 ;;		Unchanged: 3E/0
  5355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5356 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5359 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5360 ;;Total ram usage:        3 bytes
  5361 ;; Hardware stack levels used:    1
  5362 ;; Hardware stack levels required when called:    4
  5363 ;; This function calls:
  5364 ;;		Nothing
  5365 ;; This function is called by:
  5366 ;;		_TMR5_Initialize
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370                           	psect	text33
  5371  005476                     __ptext33:
  5372                           	opt callstack 0
  5373  005476                     _TMR5_SetInterruptHandler:
  5374                           	opt callstack 24
  5375                           
  5376                           ; BSR set to: 57
  5377                           ;mcc_generated_files/tmr5.c: 195:     TMR5_InterruptHandler = InterruptHandler;
  5378                           
  5379                           ; BSR set to: 57
  5380                           ;incstack = 0
  5381  005476  0060  F018  F166   	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
  5382  00547C  0060  F01C  F167   	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
  5383  005482  0060  F020  F168   	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
  5384                           
  5385                           ; BSR set to: 57
  5386  005488  0012               	return		;funcret
  5387  00548A                     __end_of_TMR5_SetInterruptHandler:
  5388                           	opt callstack 0
  5389                           
  5390 ;; *************** function _TMR2_Initialize *****************
  5391 ;; Defined at:
  5392 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  5393 ;; Parameters:    Size  Location     Type
  5394 ;;		None
  5395 ;; Auto vars:     Size  Location     Type
  5396 ;;		None
  5397 ;; Return value:  Size  Location     Type
  5398 ;;                  1    wreg      void 
  5399 ;; Registers used:
  5400 ;;		wreg, status,2
  5401 ;; Tracked objects:
  5402 ;;		On entry : 3F/39
  5403 ;;		On exit  : 3F/39
  5404 ;;		Unchanged: 0/0
  5405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5410 ;;Total ram usage:        0 bytes
  5411 ;; Hardware stack levels used:    1
  5412 ;; Hardware stack levels required when called:    4
  5413 ;; This function calls:
  5414 ;;		Nothing
  5415 ;; This function is called by:
  5416 ;;		_SYSTEM_Initialize
  5417 ;; This function uses a non-reentrant model
  5418 ;;
  5419                           
  5420                           	psect	text34
  5421  0052E2                     __ptext34:
  5422                           	opt callstack 0
  5423  0052E2                     _TMR2_Initialize:
  5424                           	opt callstack 25
  5425                           
  5426                           ; BSR set to: 57
  5427                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
  5428                           
  5429                           ; BSR set to: 57
  5430                           ;incstack = 0
  5431  0052E2  0E01               	movlw	1
  5432  0052E4  6EAE               	movwf	174,c	;volatile
  5433                           
  5434                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  5435  0052E6  0E00               	movlw	0
  5436  0052E8  6EAD               	movwf	173,c	;volatile
  5437                           
  5438                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  5439  0052EA  0E00               	movlw	0
  5440  0052EC  6EAF               	movwf	175,c	;volatile
  5441                           
  5442                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
  5443  0052EE  0E63               	movlw	99
  5444  0052F0  6EAB               	movwf	171,c	;volatile
  5445                           
  5446                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  5447  0052F2  0E00               	movlw	0
  5448  0052F4  6EAA               	movwf	170,c	;volatile
  5449                           
  5450                           ; BSR set to: 57
  5451                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  5452  0052F6  95A4               	bcf	164,2,b	;volatile
  5453                           
  5454                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
  5455  0052F8  0EC0               	movlw	192
  5456  0052FA  6EAC               	movwf	172,c	;volatile
  5457                           
  5458                           ; BSR set to: 57
  5459  0052FC  0012               	return		;funcret
  5460  0052FE                     __end_of_TMR2_Initialize:
  5461                           	opt callstack 0
  5462                           
  5463 ;; *************** function _SPI1_Initialize *****************
  5464 ;; Defined at:
  5465 ;;		line 64 in file "mcc_generated_files/spi1.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;		None
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;		None
  5470 ;; Return value:  Size  Location     Type
  5471 ;;                  1    wreg      void 
  5472 ;; Registers used:
  5473 ;;		wreg, status,2
  5474 ;; Tracked objects:
  5475 ;;		On entry : 3F/39
  5476 ;;		On exit  : 3F/3D
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5483 ;;Total ram usage:        0 bytes
  5484 ;; Hardware stack levels used:    1
  5485 ;; Hardware stack levels required when called:    4
  5486 ;; This function calls:
  5487 ;;		Nothing
  5488 ;; This function is called by:
  5489 ;;		_SYSTEM_Initialize
  5490 ;; This function uses a non-reentrant model
  5491 ;;
  5492                           
  5493                           	psect	text35
  5494  00536A                     __ptext35:
  5495                           	opt callstack 0
  5496  00536A                     _SPI1_Initialize:
  5497                           	opt callstack 25
  5498                           
  5499                           ; BSR set to: 57
  5500                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
  5501                           
  5502                           ; BSR set to: 57
  5503                           ;incstack = 0
  5504  00536A  0E40               	movlw	64
  5505  00536C  013D               	movlb	61	; () banked
  5506  00536E  6F15               	movwf	21,b	;volatile
  5507                           
  5508                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
  5509  005370  0E03               	movlw	3
  5510  005372  6F16               	movwf	22,b	;volatile
  5511                           
  5512                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x0F;
  5513  005374  0E0F               	movlw	15
  5514  005376  6F19               	movwf	25,b	;volatile
  5515                           
  5516                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
  5517  005378  0E00               	movlw	0
  5518  00537A  6F1C               	movwf	28,b	;volatile
  5519                           
  5520                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x82;
  5521  00537C  0E82               	movlw	130
  5522  00537E  6F14               	movwf	20,b	;volatile
  5523                           
  5524                           ; BSR set to: 61
  5525  005380  0012               	return		;funcret
  5526  005382                     __end_of_SPI1_Initialize:
  5527                           	opt callstack 0
  5528                           
  5529 ;; *************** function _PWM8_Initialize *****************
  5530 ;; Defined at:
  5531 ;;		line 58 in file "mcc_generated_files/pwm8.c"
  5532 ;; Parameters:    Size  Location     Type
  5533 ;;		None
  5534 ;; Auto vars:     Size  Location     Type
  5535 ;;		None
  5536 ;; Return value:  Size  Location     Type
  5537 ;;                  1    wreg      void 
  5538 ;; Registers used:
  5539 ;;		wreg, status,2
  5540 ;; Tracked objects:
  5541 ;;		On entry : 3F/39
  5542 ;;		On exit  : 3F/3F
  5543 ;;		Unchanged: 0/0
  5544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5549 ;;Total ram usage:        0 bytes
  5550 ;; Hardware stack levels used:    1
  5551 ;; Hardware stack levels required when called:    4
  5552 ;; This function calls:
  5553 ;;		Nothing
  5554 ;; This function is called by:
  5555 ;;		_SYSTEM_Initialize
  5556 ;; This function uses a non-reentrant model
  5557 ;;
  5558                           
  5559                           	psect	text36
  5560  005382                     __ptext36:
  5561                           	opt callstack 0
  5562  005382                     _PWM8_Initialize:
  5563                           	opt callstack 25
  5564                           
  5565                           ; BSR set to: 57
  5566                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
  5567                           
  5568                           ; BSR set to: 61
  5569                           ;incstack = 0
  5570  005382  0E80               	movlw	128
  5571  005384  6E62               	movwf	98,c	;volatile
  5572                           
  5573                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x31;
  5574  005386  0E31               	movlw	49
  5575  005388  6E61               	movwf	97,c	;volatile
  5576                           
  5577                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0xC0;
  5578  00538A  0EC0               	movlw	192
  5579  00538C  6E60               	movwf	96,c	;volatile
  5580                           
  5581                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
  5582  00538E  013F               	movlb	63	; () banked
  5583  005390  515F               	movf	95,w,b	;volatile
  5584  005392  0B3F               	andlw	-193
  5585  005394  0940               	iorlw	64
  5586  005396  6F5F               	movwf	95,b	;volatile
  5587                           
  5588                           ; BSR set to: 63
  5589  005398  0012               	return		;funcret
  5590  00539A                     __end_of_PWM8_Initialize:
  5591                           	opt callstack 0
  5592                           
  5593 ;; *************** function _PMD_Initialize *****************
  5594 ;; Defined at:
  5595 ;;		line 85 in file "mcc_generated_files/mcc.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;		None
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;		None
  5600 ;; Return value:  Size  Location     Type
  5601 ;;                  1    wreg      void 
  5602 ;; Registers used:
  5603 ;;		wreg, status,2
  5604 ;; Tracked objects:
  5605 ;;		On entry : 3F/39
  5606 ;;		On exit  : 3F/39
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5613 ;;Total ram usage:        0 bytes
  5614 ;; Hardware stack levels used:    1
  5615 ;; Hardware stack levels required when called:    4
  5616 ;; This function calls:
  5617 ;;		Nothing
  5618 ;; This function is called by:
  5619 ;;		_SYSTEM_Initialize
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623                           	psect	text37
  5624  00529E                     __ptext37:
  5625                           	opt callstack 0
  5626  00529E                     _PMD_Initialize:
  5627                           	opt callstack 25
  5628                           
  5629                           ; BSR set to: 57
  5630                           ;mcc_generated_files/mcc.c: 88:     PMD0 = 0x00;
  5631                           
  5632                           ; BSR set to: 63
  5633                           ;incstack = 0
  5634  00529E  0E00               	movlw	0
  5635  0052A0  6FC0               	movwf	192,b	;volatile
  5636                           
  5637                           ;mcc_generated_files/mcc.c: 90:     PMD1 = 0x00;
  5638  0052A2  0E00               	movlw	0
  5639  0052A4  6FC1               	movwf	193,b	;volatile
  5640                           
  5641                           ;mcc_generated_files/mcc.c: 92:     PMD2 = 0x00;
  5642  0052A6  0E00               	movlw	0
  5643  0052A8  6FC2               	movwf	194,b	;volatile
  5644                           
  5645                           ;mcc_generated_files/mcc.c: 94:     PMD3 = 0x00;
  5646  0052AA  0E00               	movlw	0
  5647  0052AC  6FC3               	movwf	195,b	;volatile
  5648                           
  5649                           ;mcc_generated_files/mcc.c: 96:     PMD4 = 0x00;
  5650  0052AE  0E00               	movlw	0
  5651  0052B0  6FC4               	movwf	196,b	;volatile
  5652                           
  5653                           ;mcc_generated_files/mcc.c: 98:     PMD5 = 0x00;
  5654  0052B2  0E00               	movlw	0
  5655  0052B4  6FC5               	movwf	197,b	;volatile
  5656                           
  5657                           ;mcc_generated_files/mcc.c: 100:     PMD6 = 0x00;
  5658  0052B6  0E00               	movlw	0
  5659  0052B8  6FC6               	movwf	198,b	;volatile
  5660                           
  5661                           ;mcc_generated_files/mcc.c: 102:     PMD7 = 0x00;
  5662  0052BA  0E00               	movlw	0
  5663  0052BC  6FC7               	movwf	199,b	;volatile
  5664                           
  5665                           ; BSR set to: 57
  5666  0052BE  0012               	return		;funcret
  5667  0052C0                     __end_of_PMD_Initialize:
  5668                           	opt callstack 0
  5669                           
  5670 ;; *************** function _PIN_MANAGER_Initialize *****************
  5671 ;; Defined at:
  5672 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;		None
  5675 ;; Auto vars:     Size  Location     Type
  5676 ;;		None
  5677 ;; Return value:  Size  Location     Type
  5678 ;;                  1    wreg      void 
  5679 ;; Registers used:
  5680 ;;		wreg, status,2
  5681 ;; Tracked objects:
  5682 ;;		On entry : 3F/39
  5683 ;;		On exit  : 3F/3A
  5684 ;;		Unchanged: 0/0
  5685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5690 ;;Total ram usage:        0 bytes
  5691 ;; Hardware stack levels used:    1
  5692 ;; Hardware stack levels required when called:    4
  5693 ;; This function calls:
  5694 ;;		Nothing
  5695 ;; This function is called by:
  5696 ;;		_SYSTEM_Initialize
  5697 ;; This function uses a non-reentrant model
  5698 ;;
  5699                           
  5700                           	psect	text38
  5701  004600                     __ptext38:
  5702                           	opt callstack 0
  5703  004600                     _PIN_MANAGER_Initialize:
  5704                           	opt callstack 25
  5705                           
  5706                           ; BSR set to: 57
  5707                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x01;
  5708                           
  5709                           ; BSR set to: 57
  5710                           ;incstack = 0
  5711  004600  0E01               	movlw	1
  5712  004602  6EBE               	movwf	190,c	;volatile
  5713                           
  5714                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x02;
  5715  004604  0E02               	movlw	2
  5716  004606  6EBD               	movwf	189,c	;volatile
  5717                           
  5718                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  5719  004608  0E00               	movlw	0
  5720  00460A  6EBA               	movwf	186,c	;volatile
  5721                           
  5722                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  5723  00460C  0E00               	movlw	0
  5724  00460E  6EBB               	movwf	187,c	;volatile
  5725                           
  5726                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x06;
  5727  004610  0E06               	movlw	6
  5728  004612  6EBC               	movwf	188,c	;volatile
  5729                           
  5730                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x06;
  5731  004614  0E06               	movlw	6
  5732  004616  6EC6               	movwf	198,c	;volatile
  5733                           
  5734                           ; BSR set to: 57
  5735                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  5736  004618  68C2               	setf	194,c	;volatile
  5737                           
  5738                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  5739  00461A  0EBF               	movlw	191
  5740  00461C  6EC3               	movwf	195,c	;volatile
  5741                           
  5742                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x91;
  5743  00461E  0E91               	movlw	145
  5744  004620  6EC4               	movwf	196,c	;volatile
  5745                           
  5746                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFD;
  5747  004622  0EFD               	movlw	253
  5748  004624  6EC5               	movwf	197,c	;volatile
  5749                           
  5750                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFD;
  5751  004626  0EFD               	movlw	253
  5752  004628  013A               	movlb	58	; () banked
  5753  00462A  6F70               	movwf	112,b	;volatile
  5754                           
  5755                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
  5756  00462C  0E00               	movlw	0
  5757  00462E  6F60               	movwf	96,b	;volatile
  5758                           
  5759                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3F;
  5760  004630  0E3F               	movlw	63
  5761  004632  6F50               	movwf	80,b	;volatile
  5762                           
  5763                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x06;
  5764  004634  0E06               	movlw	6
  5765  004636  6F80               	movwf	128,b	;volatile
  5766                           
  5767                           ; BSR set to: 58
  5768                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  5769  004638  6940               	setf	64,b	;volatile
  5770                           
  5771                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  5772  00463A  0E00               	movlw	0
  5773  00463C  6F71               	movwf	113,b	;volatile
  5774                           
  5775                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  5776  00463E  0E00               	movlw	0
  5777  004640  6F81               	movwf	129,b	;volatile
  5778                           
  5779                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  5780  004642  0E00               	movlw	0
  5781  004644  6F51               	movwf	81,b	;volatile
  5782                           
  5783                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  5784  004646  0E00               	movlw	0
  5785  004648  6F41               	movwf	65,b	;volatile
  5786                           
  5787                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  5788  00464A  0E00               	movlw	0
  5789  00464C  6F61               	movwf	97,b	;volatile
  5790                           
  5791                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  5792  00464E  0E00               	movlw	0
  5793  004650  6F5A               	movwf	90,b	;volatile
  5794                           
  5795                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  5796  004652  0E00               	movlw	0
  5797  004654  6F5B               	movwf	91,b	;volatile
  5798                           
  5799                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  5800  004656  0E00               	movlw	0
  5801  004658  6F6A               	movwf	106,b	;volatile
  5802                           
  5803                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  5804  00465A  0E00               	movlw	0
  5805  00465C  6F6B               	movwf	107,b	;volatile
  5806                           
  5807                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  5808  00465E  0E00               	movlw	0
  5809  004660  6F7A               	movwf	122,b	;volatile
  5810                           
  5811                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  5812  004662  0E00               	movlw	0
  5813  004664  6F7B               	movwf	123,b	;volatile
  5814                           
  5815                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  5816  004666  0E00               	movlw	0
  5817  004668  6F82               	movwf	130,b	;volatile
  5818                           
  5819                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  5820  00466A  0E00               	movlw	0
  5821  00466C  6F42               	movwf	66,b	;volatile
  5822                           
  5823                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
  5824  00466E  0E00               	movlw	0
  5825  004670  6F52               	movwf	82,b	;volatile
  5826                           
  5827                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
  5828  004672  0E00               	movlw	0
  5829  004674  6F62               	movwf	98,b	;volatile
  5830                           
  5831                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  5832  004676  0E00               	movlw	0
  5833  004678  6F72               	movwf	114,b	;volatile
  5834                           
  5835                           ; BSR set to: 58
  5836                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  5837  00467A  6943               	setf	67,b	;volatile
  5838                           
  5839                           ; BSR set to: 58
  5840                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  5841  00467C  6953               	setf	83,b	;volatile
  5842                           
  5843                           ; BSR set to: 58
  5844                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  5845  00467E  6963               	setf	99,b	;volatile
  5846                           
  5847                           ; BSR set to: 58
  5848                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  5849  004680  6973               	setf	115,b	;volatile
  5850                           
  5851                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  5852  004682  0E07               	movlw	7
  5853  004684  6F83               	movwf	131,b	;volatile
  5854                           
  5855                           ;mcc_generated_files/pin_manager.c: 128:     U2RXPPS = 0x0F;
  5856  004686  0E0F               	movlw	15
  5857  004688  6FE8               	movwf	232,b	;volatile
  5858                           
  5859                           ;mcc_generated_files/pin_manager.c: 129:     SPI1SCKPPS = 0x13;
  5860  00468A  0E13               	movlw	19
  5861  00468C  6FDE               	movwf	222,b	;volatile
  5862                           
  5863                           ;mcc_generated_files/pin_manager.c: 130:     RB6PPS = 0x16;
  5864  00468E  0E16               	movlw	22
  5865  004690  6F0E               	movwf	14,b	;volatile
  5866                           
  5867                           ;mcc_generated_files/pin_manager.c: 131:     RC3PPS = 0x1E;
  5868  004692  0E1E               	movlw	30
  5869  004694  6F13               	movwf	19,b	;volatile
  5870                           
  5871                           ;mcc_generated_files/pin_manager.c: 132:     RD1PPS = 0x10;
  5872  004696  0E10               	movlw	16
  5873  004698  6F19               	movwf	25,b	;volatile
  5874                           
  5875                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
  5876  00469A  0E1F               	movlw	31
  5877  00469C  6F15               	movwf	21,b	;volatile
  5878                           
  5879                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
  5880  00469E  0E13               	movlw	19
  5881  0046A0  6F16               	movwf	22,b	;volatile
  5882                           
  5883                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
  5884  0046A2  0E17               	movlw	23
  5885  0046A4  6FE5               	movwf	229,b	;volatile
  5886                           
  5887                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
  5888  0046A6  0E14               	movlw	20
  5889  0046A8  6FDF               	movwf	223,b	;volatile
  5890                           
  5891                           ; BSR set to: 58
  5892  0046AA  0012               	return		;funcret
  5893  0046AC                     __end_of_PIN_MANAGER_Initialize:
  5894                           	opt callstack 0
  5895                           
  5896 ;; *************** function _OSCILLATOR_Initialize *****************
  5897 ;; Defined at:
  5898 ;;		line 67 in file "mcc_generated_files/mcc.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;		None
  5901 ;; Auto vars:     Size  Location     Type
  5902 ;;		None
  5903 ;; Return value:  Size  Location     Type
  5904 ;;                  1    wreg      void 
  5905 ;; Registers used:
  5906 ;;		wreg, status,2
  5907 ;; Tracked objects:
  5908 ;;		On entry : 3F/3A
  5909 ;;		On exit  : 3F/39
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5916 ;;Total ram usage:        0 bytes
  5917 ;; Hardware stack levels used:    1
  5918 ;; Hardware stack levels required when called:    4
  5919 ;; This function calls:
  5920 ;;		Nothing
  5921 ;; This function is called by:
  5922 ;;		_SYSTEM_Initialize
  5923 ;; This function uses a non-reentrant model
  5924 ;;
  5925                           
  5926                           	psect	text39
  5927  0052FE                     __ptext39:
  5928                           	opt callstack 0
  5929  0052FE                     _OSCILLATOR_Initialize:
  5930                           	opt callstack 25
  5931                           
  5932                           ; BSR set to: 58
  5933                           ;mcc_generated_files/mcc.c: 70:     OSCCON1 = 0x20;
  5934                           
  5935                           ; BSR set to: 58
  5936                           ;incstack = 0
  5937  0052FE  0E20               	movlw	32
  5938  005300  0139               	movlb	57	; () banked
  5939  005302  6FD9               	movwf	217,b	;volatile
  5940                           
  5941                           ;mcc_generated_files/mcc.c: 72:     OSCCON3 = 0x00;
  5942  005304  0E00               	movlw	0
  5943  005306  6FDB               	movwf	219,b	;volatile
  5944                           
  5945                           ;mcc_generated_files/mcc.c: 74:     OSCEN = 0x00;
  5946  005308  0E00               	movlw	0
  5947  00530A  6FDD               	movwf	221,b	;volatile
  5948                           
  5949                           ;mcc_generated_files/mcc.c: 76:     OSCFRQ = 0x08;
  5950  00530C  0E08               	movlw	8
  5951  00530E  6FDF               	movwf	223,b	;volatile
  5952                           
  5953                           ;mcc_generated_files/mcc.c: 78:     OSCTUNE = 0x00;
  5954  005310  0E00               	movlw	0
  5955  005312  6FDE               	movwf	222,b	;volatile
  5956  005314                     l68:
  5957                           
  5958                           ; BSR set to: 57
  5959                           ;mcc_generated_files/mcc.c: 80:     while(PLLR == 0)
  5960  005314  B1DC               	btfsc	220,0,b	;volatile
  5961  005316  0012               	return	
  5962  005318  D7FD               	goto	l68
  5963  00531A                     __end_of_OSCILLATOR_Initialize:
  5964                           	opt callstack 0
  5965                           
  5966 ;; *************** function _INTERRUPT_Initialize *****************
  5967 ;; Defined at:
  5968 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;		None
  5971 ;; Auto vars:     Size  Location     Type
  5972 ;;  state           1    5[COMRAM] _Bool 
  5973 ;; Return value:  Size  Location     Type
  5974 ;;                  1    wreg      void 
  5975 ;; Registers used:
  5976 ;;		wreg, status,2
  5977 ;; Tracked objects:
  5978 ;;		On entry : 3F/0
  5979 ;;		On exit  : 3F/39
  5980 ;;		Unchanged: 0/0
  5981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5983 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5985 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5986 ;;Total ram usage:        1 bytes
  5987 ;; Hardware stack levels used:    1
  5988 ;; Hardware stack levels required when called:    4
  5989 ;; This function calls:
  5990 ;;		Nothing
  5991 ;; This function is called by:
  5992 ;;		_SYSTEM_Initialize
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996                           	psect	text40
  5997  004CE2                     __ptext40:
  5998                           	opt callstack 0
  5999  004CE2                     _INTERRUPT_Initialize:
  6000                           	opt callstack 25
  6001                           
  6002                           ; BSR set to: 0
  6003                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
  6004                           
  6005                           ; BSR set to: 57
  6006                           ;incstack = 0
  6007  004CE2  8AD2               	bsf	210,5,c	;volatile
  6008                           
  6009                           ; BSR set to: 0
  6010                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
  6011  004CE4  0E00               	movlw	0
  6012  004CE6  BED2               	btfsc	16338,7,c	;volatile
  6013  004CE8  0E01               	movlw	1
  6014  004CEA  6E06               	movwf	INTERRUPT_Initialize@state^0,c
  6015                           
  6016                           ; BSR set to: 0
  6017                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
  6018  004CEC  9ED2               	bcf	16338,7,c	;volatile
  6019                           
  6020                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
  6021  004CEE  0E55               	movlw	85
  6022  004CF0  6ED4               	movwf	212,c	;volatile
  6023                           
  6024                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
  6025  004CF2  0EAA               	movlw	170
  6026  004CF4  6ED4               	movwf	212,c	;volatile
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
  6030  004CF6  90D4               	bcf	212,0,c	;volatile
  6031                           
  6032                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
  6033  004CF8  0E00               	movlw	0
  6034  004CFA  0138               	movlb	56	; () banked
  6035  004CFC  6F9F               	movwf	159,b	;volatile
  6036                           
  6037                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
  6038  004CFE  0E00               	movlw	0
  6039  004D00  6F9E               	movwf	158,b	;volatile
  6040                           
  6041                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
  6042  004D02  0E08               	movlw	8
  6043  004D04  6F9D               	movwf	157,b	;volatile
  6044                           
  6045                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
  6046  004D06  0E55               	movlw	85
  6047  004D08  6ED4               	movwf	212,c	;volatile
  6048                           
  6049                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
  6050  004D0A  0EAA               	movlw	170
  6051  004D0C  6ED4               	movwf	212,c	;volatile
  6052                           
  6053                           ; BSR set to: 56
  6054                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
  6055  004D0E  80D4               	bsf	212,0,c	;volatile
  6056                           
  6057                           ; BSR set to: 56
  6058                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
  6059  004D10  B006               	btfsc	INTERRUPT_Initialize@state^0,0,c
  6060  004D12  D002               	bra	u7595
  6061  004D14  9ED2               	bcf	16338,7,c	;volatile
  6062  004D16  D001               	bra	u7596
  6063  004D18                     u7595:
  6064  004D18  8ED2               	bsf	16338,7,c	;volatile
  6065  004D1A                     u7596:
  6066                           
  6067                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR6bits.U2TXIP = 1;
  6068  004D1A  0139               	movlb	57	; () banked
  6069  004D1C  8786               	bsf	134,3,b	;volatile
  6070                           
  6071                           ; BSR set to: 57
  6072                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR6bits.U2RXIP = 1;
  6073  004D1E  8586               	bsf	134,2,b	;volatile
  6074                           
  6075                           ; BSR set to: 57
  6076                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR3bits.U1TXIP = 1;
  6077  004D20  8983               	bsf	131,4,b	;volatile
  6078                           
  6079                           ; BSR set to: 57
  6080                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR3bits.U1RXIP = 1;
  6081  004D22  8783               	bsf	131,3,b	;volatile
  6082                           
  6083                           ; BSR set to: 57
  6084                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR9bits.TMR6IP = 1;
  6085  004D24  8189               	bsf	137,0,b	;volatile
  6086                           
  6087                           ; BSR set to: 57
  6088                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR8bits.TMR5IP = 1;
  6089  004D26  8D88               	bsf	136,6,b	;volatile
  6090                           
  6091                           ; BSR set to: 57
  6092  004D28  0012               	return		;funcret
  6093  004D2A                     __end_of_INTERRUPT_Initialize:
  6094                           	opt callstack 0
  6095                           
  6096 ;; *************** function _FVR_Initialize *****************
  6097 ;; Defined at:
  6098 ;;		line 58 in file "mcc_generated_files/fvr.c"
  6099 ;; Parameters:    Size  Location     Type
  6100 ;;		None
  6101 ;; Auto vars:     Size  Location     Type
  6102 ;;		None
  6103 ;; Return value:  Size  Location     Type
  6104 ;;                  1    wreg      void 
  6105 ;; Registers used:
  6106 ;;		wreg, status,2
  6107 ;; Tracked objects:
  6108 ;;		On entry : 3F/39
  6109 ;;		On exit  : 3F/3E
  6110 ;;		Unchanged: 0/0
  6111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6116 ;;Total ram usage:        0 bytes
  6117 ;; Hardware stack levels used:    1
  6118 ;; Hardware stack levels required when called:    4
  6119 ;; This function calls:
  6120 ;;		Nothing
  6121 ;; This function is called by:
  6122 ;;		_SYSTEM_Initialize
  6123 ;; This function uses a non-reentrant model
  6124 ;;
  6125                           
  6126                           	psect	text41
  6127  0054D0                     __ptext41:
  6128                           	opt callstack 0
  6129  0054D0                     _FVR_Initialize:
  6130                           	opt callstack 25
  6131                           
  6132                           ; BSR set to: 57
  6133                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAD;
  6134                           
  6135                           ; BSR set to: 57
  6136                           ;incstack = 0
  6137  0054D0  0EAD               	movlw	173
  6138  0054D2  013E               	movlb	62	; () banked
  6139  0054D4  6FC1               	movwf	193,b	;volatile
  6140                           
  6141                           ; BSR set to: 62
  6142  0054D6  0012               	return		;funcret
  6143  0054D8                     __end_of_FVR_Initialize:
  6144                           	opt callstack 0
  6145                           
  6146 ;; *************** function _ADCC_Initialize *****************
  6147 ;; Defined at:
  6148 ;;		line 62 in file "mcc_generated_files/adcc.c"
  6149 ;; Parameters:    Size  Location     Type
  6150 ;;		None
  6151 ;; Auto vars:     Size  Location     Type
  6152 ;;		None
  6153 ;; Return value:  Size  Location     Type
  6154 ;;                  1    wreg      void 
  6155 ;; Registers used:
  6156 ;;		wreg, status,2
  6157 ;; Tracked objects:
  6158 ;;		On entry : 3F/39
  6159 ;;		On exit  : 3F/3E
  6160 ;;		Unchanged: 0/0
  6161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6166 ;;Total ram usage:        0 bytes
  6167 ;; Hardware stack levels used:    1
  6168 ;; Hardware stack levels required when called:    4
  6169 ;; This function calls:
  6170 ;;		Nothing
  6171 ;; This function is called by:
  6172 ;;		_SYSTEM_Initialize
  6173 ;; This function uses a non-reentrant model
  6174 ;;
  6175                           
  6176                           	psect	text42
  6177  004B46                     __ptext42:
  6178                           	opt callstack 0
  6179  004B46                     _ADCC_Initialize:
  6180                           	opt callstack 25
  6181                           
  6182                           ; BSR set to: 57
  6183                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  6184                           
  6185                           ; BSR set to: 62
  6186                           ;incstack = 0
  6187  004B46  0E00               	movlw	0
  6188  004B48  013E               	movlb	62	; () banked
  6189  004B4A  6FDE               	movwf	222,b	;volatile
  6190                           
  6191                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  6192  004B4C  0E00               	movlw	0
  6193  004B4E  6FDF               	movwf	223,b	;volatile
  6194                           
  6195                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  6196  004B50  0E00               	movlw	0
  6197  004B52  6FE0               	movwf	224,b	;volatile
  6198                           
  6199                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  6200  004B54  0E00               	movlw	0
  6201  004B56  6FE1               	movwf	225,b	;volatile
  6202                           
  6203                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  6204  004B58  0E00               	movlw	0
  6205  004B5A  6FE4               	movwf	228,b	;volatile
  6206                           
  6207                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  6208  004B5C  0E00               	movlw	0
  6209  004B5E  6FE5               	movwf	229,b	;volatile
  6210                           
  6211                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
  6212  004B60  0E00               	movlw	0
  6213  004B62  6FEA               	movwf	234,b	;volatile
  6214                           
  6215                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
  6216  004B64  0E00               	movlw	0
  6217  004B66  6FEC               	movwf	236,b	;volatile
  6218                           
  6219                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  6220  004B68  0E00               	movlw	0
  6221  004B6A  6FF1               	movwf	241,b	;volatile
  6222                           
  6223                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x00;
  6224  004B6C  0E00               	movlw	0
  6225  004B6E  6FF3               	movwf	243,b	;volatile
  6226                           
  6227                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x00;
  6228  004B70  0E00               	movlw	0
  6229  004B72  6FF4               	movwf	244,b	;volatile
  6230                           
  6231                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
  6232  004B74  0E00               	movlw	0
  6233  004B76  6FF5               	movwf	245,b	;volatile
  6234                           
  6235                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
  6236  004B78  0E00               	movlw	0
  6237  004B7A  6FF6               	movwf	246,b	;volatile
  6238                           
  6239                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
  6240  004B7C  0E00               	movlw	0
  6241  004B7E  6FF7               	movwf	247,b	;volatile
  6242                           
  6243                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
  6244  004B80  0E00               	movlw	0
  6245  004B82  6FF9               	movwf	249,b	;volatile
  6246                           
  6247                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0xF4;
  6248  004B84  0EF4               	movlw	244
  6249  004B86  6FFA               	movwf	250,b	;volatile
  6250                           
  6251                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x20;
  6252  004B88  0E20               	movlw	32
  6253  004B8A  6FFB               	movwf	251,b	;volatile
  6254                           
  6255                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
  6256  004B8C  0E00               	movlw	0
  6257  004B8E  6FFC               	movwf	252,b	;volatile
  6258                           
  6259                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
  6260  004B90  0E00               	movlw	0
  6261  004B92  6FFD               	movwf	253,b	;volatile
  6262                           
  6263                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
  6264  004B94  0E00               	movlw	0
  6265  004B96  6FFE               	movwf	254,b	;volatile
  6266                           
  6267                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x3F;
  6268  004B98  0E3F               	movlw	63
  6269  004B9A  6FFF               	movwf	255,b	;volatile
  6270                           
  6271                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
  6272  004B9C  0E84               	movlw	132
  6273  004B9E  6FF8               	movwf	248,b	;volatile
  6274                           
  6275                           ; BSR set to: 62
  6276  004BA0  0012               	return		;funcret
  6277  004BA2                     __end_of_ADCC_Initialize:
  6278                           	opt callstack 0
  6279                           
  6280 ;; *************** function _Digital232_init *****************
  6281 ;; Defined at:
  6282 ;;		line 10 in file "d232.c"
  6283 ;; Parameters:    Size  Location     Type
  6284 ;;		None
  6285 ;; Auto vars:     Size  Location     Type
  6286 ;;		None
  6287 ;; Return value:  Size  Location     Type
  6288 ;;                  1    wreg      void 
  6289 ;; Registers used:
  6290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6291 ;; Tracked objects:
  6292 ;;		On entry : 0/1
  6293 ;;		On exit  : 0/0
  6294 ;;		Unchanged: 0/0
  6295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6300 ;;Total ram usage:        0 bytes
  6301 ;; Hardware stack levels used:    1
  6302 ;; Hardware stack levels required when called:   13
  6303 ;; This function calls:
  6304 ;;		_ADCC_StartConversion
  6305 ;;		_StartTimer
  6306 ;;		_UART2_Read
  6307 ;;		_UART2_is_rx_ready
  6308 ;;		_WaitMs
  6309 ;;		_printf
  6310 ;; This function is called by:
  6311 ;;		_main
  6312 ;; This function uses a non-reentrant model
  6313 ;;
  6314                           
  6315                           	psect	text43
  6316  004186                     __ptext43:
  6317                           	opt callstack 0
  6318  004186                     _Digital232_init:
  6319                           	opt callstack 17
  6320                           
  6321                           ;d232.c: 12:  printf("%s", "XQ\r");
  6322                           
  6323                           ; BSR set to: 62
  6324                           ;incstack = 0
  6325  004186  0E4C               	movlw	low STR_5
  6326  004188  0100               	movlb	0	; () banked
  6327  00418A  6F64               	movwf	printf@fmt& (0+255),b
  6328  00418C  0E48               	movlw	low STR_6
  6329  00418E  6F65               	movwf	(?_printf+1)& (0+255),b
  6330  004190  5165               	movf	(?_printf+1)& (0+255),w,b
  6331  004192  A4D8               	btfss	status,2,c
  6332  004194  0E20               	movlw	high __smallconst
  6333  004196  6F66               	movwf	(?_printf+2)& (0+255),b
  6334  004198  EC8D  F029         	call	_printf	;wreg free
  6335                           
  6336                           ; BSR set to: 1
  6337                           ;d232.c: 13:  WaitMs(5);
  6338  00419C  0E00               	movlw	0
  6339  00419E  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  6340  0041A0  0E05               	movlw	5
  6341  0041A2  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  6342  0041A4  EC5D  F028         	call	_WaitMs	;wreg free
  6343                           
  6344                           ;d232.c: 14:  printf("%s", "T2\r");
  6345  0041A8  0E4C               	movlw	low STR_5
  6346  0041AA  0100               	movlb	0	; () banked
  6347  0041AC  6F64               	movwf	printf@fmt& (0+255),b
  6348  0041AE  0E38               	movlw	low STR_8
  6349  0041B0  6F65               	movwf	(?_printf+1)& (0+255),b
  6350  0041B2  5165               	movf	(?_printf+1)& (0+255),w,b
  6351  0041B4  A4D8               	btfss	status,2,c
  6352  0041B6  0E20               	movlw	high __smallconst
  6353  0041B8  6F66               	movwf	(?_printf+2)& (0+255),b
  6354  0041BA  EC8D  F029         	call	_printf	;wreg free
  6355                           
  6356                           ;d232.c: 15:  WaitMs(800);
  6357  0041BE  0E03               	movlw	3
  6358  0041C0  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  6359  0041C2  0E20               	movlw	32
  6360  0041C4  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  6361  0041C6  EC5D  F028         	call	_WaitMs	;wreg free
  6362                           
  6363                           ;d232.c: 16:  printf("%s", "C4\r");
  6364  0041CA  0E4C               	movlw	low STR_5
  6365  0041CC  0100               	movlb	0	; () banked
  6366  0041CE  6F64               	movwf	printf@fmt& (0+255),b
  6367  0041D0  0E3C               	movlw	low STR_10
  6368  0041D2  6F65               	movwf	(?_printf+1)& (0+255),b
  6369  0041D4  5165               	movf	(?_printf+1)& (0+255),w,b
  6370  0041D6  A4D8               	btfss	status,2,c
  6371  0041D8  0E20               	movlw	high __smallconst
  6372  0041DA  6F66               	movwf	(?_printf+2)& (0+255),b
  6373  0041DC  EC8D  F029         	call	_printf	;wreg free
  6374                           
  6375                           ; BSR set to: 1
  6376                           ;d232.c: 17:  WaitMs(5);
  6377  0041E0  0E00               	movlw	0
  6378  0041E2  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  6379  0041E4  0E05               	movlw	5
  6380  0041E6  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  6381  0041E8  EC5D  F028         	call	_WaitMs	;wreg free
  6382                           
  6383                           ;d232.c: 18:  printf("%s", "F4\r");
  6384  0041EC  0E4C               	movlw	low STR_5
  6385  0041EE  0100               	movlb	0	; () banked
  6386  0041F0  6F64               	movwf	printf@fmt& (0+255),b
  6387  0041F2  0E40               	movlw	low STR_12
  6388  0041F4  6F65               	movwf	(?_printf+1)& (0+255),b
  6389  0041F6  5165               	movf	(?_printf+1)& (0+255),w,b
  6390  0041F8  A4D8               	btfss	status,2,c
  6391  0041FA  0E20               	movlw	high __smallconst
  6392  0041FC  6F66               	movwf	(?_printf+2)& (0+255),b
  6393  0041FE  EC8D  F029         	call	_printf	;wreg free
  6394                           
  6395                           ; BSR set to: 1
  6396                           ;d232.c: 19:  WaitMs(5);
  6397  004202  0E00               	movlw	0
  6398  004204  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  6399  004206  0E05               	movlw	5
  6400  004208  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  6401  00420A  EC5D  F028         	call	_WaitMs	;wreg free
  6402                           
  6403                           ;d232.c: 20:  printf("%s", "M4\r");
  6404  00420E  0E4C               	movlw	low STR_5
  6405  004210  0100               	movlb	0	; () banked
  6406  004212  6F64               	movwf	printf@fmt& (0+255),b
  6407  004214  0E44               	movlw	low STR_14
  6408  004216  6F65               	movwf	(?_printf+1)& (0+255),b
  6409  004218  5165               	movf	(?_printf+1)& (0+255),w,b
  6410  00421A  A4D8               	btfss	status,2,c
  6411  00421C  0E20               	movlw	high __smallconst
  6412  00421E  6F66               	movwf	(?_printf+2)& (0+255),b
  6413  004220  EC8D  F029         	call	_printf	;wreg free
  6414                           
  6415                           ;d232.c: 21:  WaitMs(5);
  6416  004224  0E00               	movlw	0
  6417  004226  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  6418  004228  0E05               	movlw	5
  6419  00422A  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  6420  00422C  EC5D  F028         	call	_WaitMs	;wreg free
  6421                           
  6422                           ;d232.c: 22:  IO.d232 = D232_INIT;
  6423  004230  0E01               	movlw	1
  6424  004232  0101               	movlb	1	; () banked
  6425  004234  6FB6               	movwf	(_IO+13)& (0+255),b
  6426                           
  6427                           ; BSR set to: 1
  6428                           ;d232.c: 26:  if (UART2_is_rx_ready())
  6429  004236  EC6C  F02A         	call	_UART2_is_rx_ready	;wreg free
  6430  00423A  0900               	iorlw	0
  6431  00423C  A4D8               	btfss	status,2,c
  6432                           
  6433                           ; BSR set to: 0
  6434                           ;d232.c: 27:   UART2_Read();
  6435  00423E  EC95  F026         	call	_UART2_Read	;wreg free
  6436                           
  6437                           ;d232.c: 28:  IO.io = IO_INIT;
  6438  004242  0E01               	movlw	1
  6439  004244  0101               	movlb	1	; () banked
  6440  004246  6FB5               	movwf	(_IO+12)& (0+255),b
  6441                           
  6442                           ; BSR set to: 1
  6443                           ;d232.c: 29:  IO.srq = S_IDLE;
  6444  004248  0E00               	movlw	0
  6445  00424A  6FB7               	movwf	(_IO+14)& (0+255),b
  6446                           
  6447                           ; BSR set to: 1
  6448                           ;d232.c: 30:  IO.srq_value = 0;
  6449  00424C  0E00               	movlw	0
  6450  00424E  6FB9               	movwf	(_IO+16)& (0+255),b
  6451                           
  6452                           ; BSR set to: 1
  6453                           ;d232.c: 31:  IO.button_value = 0;
  6454  004250  0E00               	movlw	0
  6455  004252  6FC1               	movwf	(_IO+24)& (0+255),b
  6456  004254  0E00               	movlw	0
  6457  004256  6FC0               	movwf	(_IO+23)& (0+255),b
  6458                           
  6459                           ; BSR set to: 1
  6460                           ;d232.c: 32:  ADCC_StartConversion(channel_VSS);
  6461  004258  0E3B               	movlw	59
  6462  00425A  EC4F  F02A         	call	_ADCC_StartConversion
  6463                           
  6464                           ; BSR set to: 62
  6465                           ;d232.c: 33:  StartTimer(TMR_SPS, 10);
  6466  00425E  0E00               	movlw	0
  6467  004260  6E07               	movwf	(StartTimer@count+1)^0,c
  6468  004262  0E0A               	movlw	10
  6469  004264  6E06               	movwf	StartTimer@count^0,c
  6470  004266  0E03               	movlw	3
  6471  004268  ECFB  F027         	call	_StartTimer
  6472  00426C  0012               	return		;funcret
  6473  00426E                     __end_of_Digital232_init:
  6474                           	opt callstack 0
  6475                           
  6476 ;; *************** function _WaitMs *****************
  6477 ;; Defined at:
  6478 ;;		line 31 in file "timers.c"
  6479 ;; Parameters:    Size  Location     Type
  6480 ;;  numMilliseco    2   10[COMRAM] const unsigned short 
  6481 ;; Auto vars:     Size  Location     Type
  6482 ;;		None
  6483 ;; Return value:  Size  Location     Type
  6484 ;;                  1    wreg      void 
  6485 ;; Registers used:
  6486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6487 ;; Tracked objects:
  6488 ;;		On entry : 3F/1
  6489 ;;		On exit  : 0/0
  6490 ;;		Unchanged: 0/0
  6491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6495 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6496 ;;Total ram usage:        2 bytes
  6497 ;; Hardware stack levels used:    1
  6498 ;; Hardware stack levels required when called:    5
  6499 ;; This function calls:
  6500 ;;		_StartTimer
  6501 ;;		_TimerDone
  6502 ;; This function is called by:
  6503 ;;		_Digital232_init
  6504 ;; This function uses a non-reentrant model
  6505 ;;
  6506                           
  6507                           	psect	text44
  6508  0050BA                     __ptext44:
  6509                           	opt callstack 0
  6510  0050BA                     _WaitMs:
  6511                           	opt callstack 24
  6512                           
  6513                           ; BSR set to: 1
  6514                           ;timers.c: 31: void WaitMs(const uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  6515                           
  6516                           ;incstack = 0
  6517  0050BA  0060  F02C  F006   	movff	WaitMs@numMilliseconds,StartTimer@count
  6518  0050C0  0060  F030  F007   	movff	WaitMs@numMilliseconds+1,StartTimer@count+1
  6519  0050C6  0E00               	movlw	0
  6520  0050C8  ECFB  F027         	call	_StartTimer
  6521                           
  6522                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  6523  0050CC  D005               	goto	l7304
  6524  0050CE                     l1242:
  6525                           
  6526                           ;timers.c: 35:   __nop();
  6527  0050CE  F000               	nop	
  6528                           
  6529                           ;timers.c: 36:   __nop();
  6530  0050D0  F000               	nop	
  6531                           
  6532                           ;timers.c: 37:   __nop();
  6533  0050D2  F000               	nop	
  6534                           
  6535                           ;timers.c: 38:   __nop();
  6536  0050D4  F000               	nop	
  6537  0050D6  0004               	clrwdt		;# 
  6538  0050D8                     l7304:
  6539                           
  6540                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  6541  0050D8  0E00               	movlw	0
  6542  0050DA  ECAE  F028         	call	_TimerDone
  6543  0050DE  0900               	iorlw	0
  6544  0050E0  A4D8               	btfss	status,2,c
  6545  0050E2  0012               	return	
  6546  0050E4  D7F4               	goto	l1242
  6547  0050E6                     __end_of_WaitMs:
  6548                           	opt callstack 0
  6549                           
  6550 ;; *************** function _Digital232_RW *****************
  6551 ;; Defined at:
  6552 ;;		line 66 in file "d232.c"
  6553 ;; Parameters:    Size  Location     Type
  6554 ;;		None
  6555 ;; Auto vars:     Size  Location     Type
  6556 ;;  j               1   33[BANK0 ] unsigned char 
  6557 ;;  i               1   32[BANK0 ] unsigned char 
  6558 ;; Return value:  Size  Location     Type
  6559 ;;                  1    wreg      _Bool 
  6560 ;; Registers used:
  6561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6562 ;; Tracked objects:
  6563 ;;		On entry : 0/1
  6564 ;;		On exit  : 3F/1
  6565 ;;		Unchanged: 0/0
  6566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6568 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6569 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6570 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6571 ;;Total ram usage:        4 bytes
  6572 ;; Hardware stack levels used:    1
  6573 ;; Hardware stack levels required when called:   13
  6574 ;; This function calls:
  6575 ;;		_ADCC_GetConversionResult
  6576 ;;		_ADCC_IsConversionDone
  6577 ;;		_ADCC_StartConversion
  6578 ;;		_PWM8_LoadDutyValue
  6579 ;;		_StartTimer
  6580 ;;		_TimerDone
  6581 ;;		_UART2_Read
  6582 ;;		_UART2_Write
  6583 ;;		_UART2_is_rx_ready
  6584 ;;		_calc_pot
  6585 ;;		_printf
  6586 ;; This function is called by:
  6587 ;;		_main
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           
  6591                           	psect	text45
  6592  0035A2                     __ptext45:
  6593                           	opt callstack 0
  6594  0035A2                     _Digital232_RW:
  6595                           	opt callstack 17
  6596                           
  6597                           ;incstack = 0
  6598  0035A2  0E00               	movlw	0
  6599  0035A4  0100               	movlb	0	; () banked
  6600  0035A6  6F81               	movwf	Digital232_RW@j& (0+255),b
  6601                           
  6602                           ; BSR set to: 0
  6603                           ;d232.c: 69:  static uint8_t x = 0;;d232.c: 72:  if (!TimerDone(TMR_SPS)) {
  6604  0035A8  0E03               	movlw	3
  6605  0035AA  ECAE  F028         	call	_TimerDone
  6606  0035AE  0900               	iorlw	0
  6607  0035B0  A4D8               	btfss	status,2,c
  6608  0035B2  D005               	goto	l7452
  6609                           
  6610                           ;d232.c: 73:   IO.io = IO_IDLE;
  6611  0035B4  0E00               	movlw	0
  6612  0035B6  0101               	movlb	1	; () banked
  6613  0035B8  6FB5               	movwf	(_IO+12)& (0+255),b
  6614                           
  6615                           ; BSR set to: 1
  6616                           ;d232.c: 74:   return 0;
  6617  0035BA  0E00               	movlw	0
  6618  0035BC  0012               	return	
  6619  0035BE                     l7452:
  6620                           
  6621                           ;d232.c: 77:  StartTimer(TMR_SPS, 10 + IO.speed + IO.slower);
  6622  0035BE  0101               	movlb	1	; () banked
  6623  0035C0  51C6               	movf	(_IO+29)& (0+255),w,b
  6624  0035C2  25C4               	addwf	(_IO+27)& (0+255),w,b
  6625  0035C4  0100               	movlb	0	; () banked
  6626  0035C6  6F7E               	movwf	??_Digital232_RW& (0+255),b
  6627  0035C8  0101               	movlb	1	; () banked
  6628  0035CA  51C7               	movf	(_IO+30)& (0+255),w,b
  6629  0035CC  21C5               	addwfc	(_IO+28)& (0+255),w,b
  6630  0035CE  0100               	movlb	0	; () banked
  6631  0035D0  6F7F               	movwf	(??_Digital232_RW+1)& (0+255),b
  6632  0035D2  0E0A               	movlw	10
  6633  0035D4  257E               	addwf	??_Digital232_RW& (0+255),w,b
  6634  0035D6  6E06               	movwf	StartTimer@count^0,c
  6635  0035D8  0E00               	movlw	0
  6636  0035DA  217F               	addwfc	(??_Digital232_RW+1)& (0+255),w,b
  6637  0035DC  6E07               	movwf	(StartTimer@count+1)^0,c
  6638  0035DE  0E03               	movlw	3
  6639  0035E0  ECFB  F027         	call	_StartTimer
  6640                           
  6641                           ;d232.c: 79:  ADCC_StartConversion(channel_ANA0);
  6642  0035E4  0E00               	movlw	0
  6643  0035E6  EC4F  F02A         	call	_ADCC_StartConversion
  6644  0035EA                     l7456:
  6645                           
  6646                           ; BSR set to: 62
  6647  0035EA  EC57  F02A         	call	_ADCC_IsConversionDone	;wreg free
  6648  0035EE  0900               	iorlw	0
  6649  0035F0  B4D8               	btfsc	status,2,c
  6650  0035F2  D7FB               	goto	l7456
  6651                           
  6652                           ; BSR set to: 62
  6653                           ;d232.c: 81:  IO.button_value = ADCC_GetConversionResult();
  6654  0035F4  EC45  F02A         	call	_ADCC_GetConversionResult	;wreg free
  6655  0035F8  0060  F018  F1C0   	movff	?_ADCC_GetConversionResult,_IO+23
  6656  0035FE  0060  F01C  F1C1   	movff	?_ADCC_GetConversionResult+1,_IO+24
  6657                           
  6658                           ; BSR set to: 62
  6659                           ;d232.c: 82:  calc_pot(IO.button_value);
  6660  003604  0060  F700  F07A   	movff	_IO+23,calc_pot@value
  6661  00360A  0060  F704  F07B   	movff	_IO+24,calc_pot@value+1
  6662  003610  ECA2  F01F         	call	_calc_pot	;wreg free
  6663                           
  6664                           ; BSR set to: 1
  6665                           ;d232.c: 87:  IO.srq = S_IDLE;
  6666  003614  0E00               	movlw	0
  6667  003616  6FB7               	movwf	(_IO+14)& (0+255),b
  6668                           
  6669                           ; BSR set to: 1
  6670                           ;d232.c: 89:  if (UART2_is_rx_ready()) {
  6671  003618  EC6C  F02A         	call	_UART2_is_rx_ready	;wreg free
  6672  00361C  0900               	iorlw	0
  6673  00361E  B4D8               	btfsc	status,2,c
  6674  003620  D040               	goto	l7490
  6675                           
  6676                           ; BSR set to: 0
  6677                           ;d232.c: 90:   j = UART2_Read();
  6678  003622  EC95  F026         	call	_UART2_Read	;wreg free
  6679  003626  0100               	movlb	0	; () banked
  6680  003628  6F81               	movwf	Digital232_RW@j& (0+255),b
  6681                           
  6682                           ;d232.c: 94:   switch (IO.srq) {
  6683  00362A  D021               	goto	l7488
  6684  00362C                     l7468:
  6685                           
  6686                           ; BSR set to: 0
  6687                           ;d232.c: 96:    if (j == 'S')
  6688  00362C  0E53               	movlw	83
  6689  00362E  1981               	xorwf	Digital232_RW@j& (0+255),w,b
  6690  003630  A4D8               	btfss	status,2,c
  6691  003632  D037               	goto	l7490
  6692                           
  6693                           ; BSR set to: 0
  6694                           ;d232.c: 97:     IO.srq = S_S;
  6695  003634  0E01               	movlw	1
  6696  003636  D018               	goto	L7
  6697  003638                     l7472:
  6698                           
  6699                           ; BSR set to: 0
  6700                           ;d232.c: 100:    if (j == 'R')
  6701  003638  0E52               	movlw	82
  6702  00363A  1981               	xorwf	Digital232_RW@j& (0+255),w,b
  6703  00363C  A4D8               	btfss	status,2,c
  6704  00363E  D031               	goto	l7490
  6705                           
  6706                           ; BSR set to: 0
  6707                           ;d232.c: 101:     IO.srq = S_R;
  6708  003640  0E02               	movlw	2
  6709  003642  D012               	goto	L7
  6710  003644                     l7476:
  6711                           
  6712                           ; BSR set to: 0
  6713                           ;d232.c: 104:    if (j == 'Q')
  6714  003644  0E51               	movlw	81
  6715  003646  1981               	xorwf	Digital232_RW@j& (0+255),w,b
  6716  003648  A4D8               	btfss	status,2,c
  6717  00364A  D02B               	goto	l7490
  6718                           
  6719                           ; BSR set to: 0
  6720                           ;d232.c: 105:     IO.srq = S_Q;
  6721  00364C  0E03               	movlw	3
  6722  00364E  D00C               	goto	L7
  6723  003650                     l7480:
  6724                           
  6725                           ; BSR set to: 0
  6726                           ;d232.c: 108:    if (j == ' ')
  6727  003650  0E20               	movlw	32
  6728  003652  1981               	xorwf	Digital232_RW@j& (0+255),w,b
  6729  003654  A4D8               	btfss	status,2,c
  6730  003656  D025               	goto	l7490
  6731                           
  6732                           ; BSR set to: 0
  6733                           ;d232.c: 109:     IO.srq = S_NUM;
  6734  003658  0E04               	movlw	4
  6735  00365A  D006               	goto	L7
  6736  00365C                     l1166:
  6737                           
  6738                           ; BSR set to: 0
  6739                           ;d232.c: 112:    IO.srq_value = j;
  6740  00365C  0060  F204  F1B9   	movff	Digital232_RW@j,_IO+16
  6741                           
  6742                           ; BSR set to: 0
  6743                           ;d232.c: 113:    IO.srq = S_UPDATE;
  6744  003662  0E05               	movlw	5
  6745  003664  D001               	goto	L7
  6746  003666                     l7486:
  6747                           
  6748                           ; BSR set to: 0
  6749                           ;d232.c: 116:    IO.srq = S_IDLE;
  6750  003666  0E00               	movlw	0
  6751  003668                     L7:
  6752  003668  0101               	movlb	1	; () banked
  6753  00366A  6FB7               	movwf	(_IO+14)& (0+255),b
  6754                           
  6755                           ;d232.c: 117:   }
  6756  00366C  D01A               	goto	l7490
  6757  00366E                     l7488:
  6758                           
  6759                           ; BSR set to: 0
  6760  00366E  0101               	movlb	1	; () banked
  6761  003670  51B7               	movf	(_IO+14)& (0+255),w,b
  6762  003672  0100               	movlb	0	; () banked
  6763  003674  6F7E               	movwf	??_Digital232_RW& (0+255),b
  6764  003676  6B7F               	clrf	(??_Digital232_RW+1)& (0+255),b
  6765                           
  6766                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6767                           ; Switch size 1, requested type "simple"
  6768                           ; Number of cases is 1, Range of values is 0 to 0
  6769                           ; switch strategies available:
  6770                           ; Name         Instructions Cycles
  6771                           ; simple_byte            4     3 (average)
  6772                           ;	Chosen strategy is simple_byte
  6773  003678  517F               	movf	(??_Digital232_RW+1)& (0+255),w,b
  6774  00367A  0A00               	xorlw	0	; case 0
  6775  00367C  A4D8               	btfss	status,2,c
  6776  00367E  D7F3               	goto	l7486
  6777                           
  6778                           ; BSR set to: 0
  6779                           ; Switch size 1, requested type "simple"
  6780                           ; Number of cases is 5, Range of values is 0 to 4
  6781                           ; switch strategies available:
  6782                           ; Name         Instructions Cycles
  6783                           ; simple_byte           16     9 (average)
  6784                           ;	Chosen strategy is simple_byte
  6785  003680  517E               	movf	??_Digital232_RW& (0+255),w,b
  6786  003682  0A00               	xorlw	0	; case 0
  6787  003684  B4D8               	btfsc	status,2,c
  6788  003686  D7D2               	goto	l7468
  6789  003688  0A01               	xorlw	1	; case 1
  6790  00368A  B4D8               	btfsc	status,2,c
  6791  00368C  D7D5               	goto	l7472
  6792  00368E  0A03               	xorlw	3	; case 2
  6793  003690  B4D8               	btfsc	status,2,c
  6794  003692  D7D8               	goto	l7476
  6795  003694  0A01               	xorlw	1	; case 3
  6796  003696  B4D8               	btfsc	status,2,c
  6797  003698  D7DB               	goto	l7480
  6798  00369A  0A07               	xorlw	7	; case 4
  6799  00369C  B4D8               	btfsc	status,2,c
  6800  00369E  D7DE               	goto	l1166
  6801  0036A0  D7E2               	goto	l7486
  6802  0036A2                     l7490:
  6803                           
  6804                           ;d232.c: 120:  UART2_Write('D');
  6805  0036A2  0E44               	movlw	68
  6806  0036A4  ECD8  F026         	call	_UART2_Write
  6807                           
  6808                           ;d232.c: 121:  UART2_Write(IO.outbytes[4]);
  6809  0036A8  0101               	movlb	1	; () banked
  6810  0036AA  51B2               	movf	(_IO+9)& (0+255),w,b
  6811  0036AC  ECD8  F026         	call	_UART2_Write
  6812                           
  6813                           ;d232.c: 122:  UART2_Write(IO.outbytes[3]);
  6814  0036B0  0101               	movlb	1	; () banked
  6815  0036B2  51B1               	movf	(_IO+8)& (0+255),w,b
  6816  0036B4  ECD8  F026         	call	_UART2_Write
  6817                           
  6818                           ;d232.c: 123:  UART2_Write(IO.outbytes[2]);
  6819  0036B8  0101               	movlb	1	; () banked
  6820  0036BA  51B0               	movf	(_IO+7)& (0+255),w,b
  6821  0036BC  ECD8  F026         	call	_UART2_Write
  6822                           
  6823                           ;d232.c: 124:  UART2_Write(IO.outbytes[1]);
  6824  0036C0  0101               	movlb	1	; () banked
  6825  0036C2  51AF               	movf	(_IO+6)& (0+255),w,b
  6826  0036C4  ECD8  F026         	call	_UART2_Write
  6827                           
  6828                           ;d232.c: 125:  UART2_Write(IO.outbytes[0]);
  6829  0036C8  0101               	movlb	1	; () banked
  6830  0036CA  51AE               	movf	(_IO+5)& (0+255),w,b
  6831  0036CC  ECD8  F026         	call	_UART2_Write
  6832                           
  6833                           ;d232.c: 126:  UART2_Write('\r');
  6834  0036D0  0E0D               	movlw	13
  6835  0036D2  ECD8  F026         	call	_UART2_Write
  6836                           
  6837                           ; BSR set to: 57
  6838                           ;d232.c: 127:  printf("%s", "R0\r");
  6839  0036D6  0E4C               	movlw	low STR_5
  6840  0036D8  0100               	movlb	0	; () banked
  6841  0036DA  6F64               	movwf	printf@fmt& (0+255),b
  6842  0036DC  0E34               	movlw	low STR_16
  6843  0036DE  6F65               	movwf	(?_printf+1)& (0+255),b
  6844  0036E0  5165               	movf	(?_printf+1)& (0+255),w,b
  6845  0036E2  A4D8               	btfss	status,2,c
  6846  0036E4  0E20               	movlw	high __smallconst
  6847  0036E6  6F66               	movwf	(?_printf+2)& (0+255),b
  6848  0036E8  EC8D  F029         	call	_printf	;wreg free
  6849                           
  6850                           ; BSR set to: 1
  6851                           ;d232.c: 128:  IO.output_ok = 1;
  6852  0036EC  0E01               	movlw	1
  6853  0036EE  6FB4               	movwf	(_IO+11)& (0+255),b
  6854                           
  6855                           ; BSR set to: 1
  6856                           ;d232.c: 129:  IO.io = IO_OUT;
  6857  0036F0  0E02               	movlw	2
  6858  0036F2  6FB5               	movwf	(_IO+12)& (0+255),b
  6859                           
  6860                           ; BSR set to: 1
  6861                           ;d232.c: 133:  StartTimer(TMR_RXTO, 250);
  6862  0036F4  0E00               	movlw	0
  6863  0036F6  6E07               	movwf	(StartTimer@count+1)^0,c
  6864  0036F8  0EFA               	movlw	250
  6865  0036FA  6E06               	movwf	StartTimer@count^0,c
  6866  0036FC  0E02               	movlw	2
  6867  0036FE  ECFB  F027         	call	_StartTimer
  6868                           
  6869                           ;d232.c: 134:  while (!UART2_is_rx_ready()) {
  6870  003702  D015               	goto	l7514
  6871  003704                     l7500:
  6872                           
  6873                           ; BSR set to: 0
  6874                           ;d232.c: 135:   if (TimerDone(TMR_RXTO)) {
  6875  003704  0E02               	movlw	2
  6876  003706  ECAE  F028         	call	_TimerDone
  6877  00370A  0900               	iorlw	0
  6878  00370C  B4D8               	btfsc	status,2,c
  6879  00370E  D00F               	goto	l7514
  6880                           
  6881                           ;d232.c: 136:    PWM8_LoadDutyValue(x++);
  6882  003710  0060  F288  F006   	movff	Digital232_RW@x,PWM8_LoadDutyValue@dutyValue
  6883  003716  6A07               	clrf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  6884  003718  EC8E  F027         	call	_PWM8_LoadDutyValue	;wreg free
  6885  00371C  0100               	movlb	0	; () banked
  6886  00371E  2BA2               	incf	Digital232_RW@x& (0+255),f,b
  6887                           
  6888                           ; BSR set to: 0
  6889                           ;d232.c: 137:    if (x > 3)
  6890  003720  0E03               	movlw	3
  6891  003722  65A2               	cpfsgt	Digital232_RW@x& (0+255),b
  6892  003724  D002               	goto	l1171
  6893                           
  6894                           ; BSR set to: 0
  6895                           ;d232.c: 138:     x = 0;
  6896  003726  0E00               	movlw	0
  6897  003728  6FA2               	movwf	Digital232_RW@x& (0+255),b
  6898  00372A                     l1171:
  6899                           
  6900                           ; BSR set to: 0
  6901                           ;d232.c: 139:    IO.io = IO_FAIL;
  6902  00372A  0E06               	movlw	6
  6903  00372C  D744               	goto	L8
  6904  00372E                     l7514:
  6905                           
  6906                           ;d232.c: 134:  while (!UART2_is_rx_ready()) {
  6907  00372E  EC6C  F02A         	call	_UART2_is_rx_ready	;wreg free
  6908  003732  0900               	iorlw	0
  6909  003734  B4D8               	btfsc	status,2,c
  6910  003736  D7E6               	goto	l7500
  6911                           
  6912                           ; BSR set to: 0
  6913                           ;d232.c: 147:  i = 0;
  6914  003738  0E00               	movlw	0
  6915  00373A  6F80               	movwf	Digital232_RW@i& (0+255),b
  6916                           
  6917                           ; BSR set to: 0
  6918                           ;d232.c: 148:  StartTimer(TMR_RXTO, 250);
  6919  00373C  0E00               	movlw	0
  6920  00373E  6E07               	movwf	(StartTimer@count+1)^0,c
  6921  003740  0EFA               	movlw	250
  6922  003742  6E06               	movwf	StartTimer@count^0,c
  6923  003744  0E02               	movlw	2
  6924  003746  ECFB  F027         	call	_StartTimer
  6925                           
  6926                           ;d232.c: 149:  while (!TimerDone(TMR_RXTO) && (i < 6)) {
  6927  00374A  D015               	goto	l7526
  6928  00374C                     l7520:
  6929                           
  6930                           ; BSR set to: 0
  6931                           ;d232.c: 150:   if (UART2_is_rx_ready()) {
  6932  00374C  EC6C  F02A         	call	_UART2_is_rx_ready	;wreg free
  6933  003750  0900               	iorlw	0
  6934  003752  B4D8               	btfsc	status,2,c
  6935  003754  D010               	goto	l7526
  6936                           
  6937                           ; BSR set to: 0
  6938                           ;d232.c: 151:    IO.inbytes[4 - i] = UART2_Read();
  6939  003756  EC95  F026         	call	_UART2_Read	;wreg free
  6940  00375A  0100               	movlb	0	; () banked
  6941  00375C  6F7E               	movwf	??_Digital232_RW& (0+255),b
  6942  00375E  5180               	movf	Digital232_RW@i& (0+255),w,b
  6943  003760  08AD               	sublw	low (_IO+4)
  6944  003762  6ED9               	movwf	fsr2l,c
  6945  003764  0E00               	movlw	0
  6946  003766  A0D8               	btfss	status,0,c
  6947  003768  2AE8               	incf	wreg,f,c
  6948  00376A  0801               	sublw	high (_IO+4)
  6949  00376C  6EDA               	movwf	fsr2h,c
  6950  00376E  0060  F1FB  FFDF   	movff	??_Digital232_RW,indf2
  6951                           
  6952                           ; BSR set to: 0
  6953                           ;d232.c: 152:    i++;
  6954  003774  2B80               	incf	Digital232_RW@i& (0+255),f,b
  6955  003776                     l7526:
  6956                           
  6957                           ;d232.c: 149:  while (!TimerDone(TMR_RXTO) && (i < 6)) {
  6958  003776  0E02               	movlw	2
  6959  003778  ECAE  F028         	call	_TimerDone
  6960  00377C  0900               	iorlw	0
  6961  00377E  A4D8               	btfss	status,2,c
  6962  003780  D004               	goto	u7910
  6963  003782  0E05               	movlw	5
  6964  003784  0100               	movlb	0	; () banked
  6965  003786  6580               	cpfsgt	Digital232_RW@i& (0+255),b
  6966  003788  D7E1               	goto	l7520
  6967  00378A                     u7910:
  6968                           
  6969                           ;d232.c: 155:  if (TimerDone(TMR_RXTO) || i < 6) {
  6970  00378A  0E02               	movlw	2
  6971  00378C  ECAE  F028         	call	_TimerDone
  6972  003790  0900               	iorlw	0
  6973  003792  A4D8               	btfss	status,2,c
  6974  003794  D004               	goto	u7930
  6975  003796  0E06               	movlw	6
  6976  003798  0100               	movlb	0	; () banked
  6977  00379A  6180               	cpfslt	Digital232_RW@i& (0+255),b
  6978  00379C  D00A               	goto	l7546
  6979  00379E                     u7930:
  6980                           
  6981                           ;d232.c: 156:   PWM8_LoadDutyValue(x++);
  6982  00379E  0060  F288  F006   	movff	Digital232_RW@x,PWM8_LoadDutyValue@dutyValue
  6983  0037A4  6A07               	clrf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  6984  0037A6  EC8E  F027         	call	_PWM8_LoadDutyValue	;wreg free
  6985  0037AA  0100               	movlb	0	; () banked
  6986  0037AC  2BA2               	incf	Digital232_RW@x& (0+255),f,b
  6987                           
  6988                           ; BSR set to: 0
  6989                           ;d232.c: 157:   if (x > 16)
  6990  0037AE  0E10               	movlw	16
  6991  0037B0  D7B8               	goto	L9
  6992  0037B2                     l7546:
  6993                           
  6994                           ; BSR set to: 0
  6995                           ;d232.c: 163:  if (UART2_is_rx_ready())
  6996  0037B2  EC6C  F02A         	call	_UART2_is_rx_ready	;wreg free
  6997  0037B6  0900               	iorlw	0
  6998  0037B8  A4D8               	btfss	status,2,c
  6999                           
  7000                           ; BSR set to: 0
  7001                           ;d232.c: 164:   UART2_Read();
  7002  0037BA  EC95  F026         	call	_UART2_Read	;wreg free
  7003                           
  7004                           ;d232.c: 166:  IO.input_ok = 1;
  7005  0037BE  0E01               	movlw	1
  7006  0037C0  0101               	movlb	1	; () banked
  7007  0037C2  6FB3               	movwf	(_IO+10)& (0+255),b
  7008                           
  7009                           ; BSR set to: 1
  7010                           ;d232.c: 167:  IO.io = IO_IN;
  7011  0037C4  0E03               	movlw	3
  7012  0037C6  6FB5               	movwf	(_IO+12)& (0+255),b
  7013                           
  7014                           ; BSR set to: 1
  7015                           ;d232.c: 168:  IO.d232 = D232_OUT_IN;
  7016  0037C8  0E02               	movlw	2
  7017  0037CA  6FB6               	movwf	(_IO+13)& (0+255),b
  7018                           
  7019                           ; BSR set to: 1
  7020                           ;d232.c: 170:  PWM8_LoadDutyValue(199);
  7021  0037CC  0E00               	movlw	0
  7022  0037CE  6E07               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  7023  0037D0  0EC7               	movlw	199
  7024  0037D2  6E06               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  7025  0037D4  EC8E  F027         	call	_PWM8_LoadDutyValue	;wreg free
  7026                           
  7027                           ;d232.c: 171:  IO.io = IO_UPDATE;
  7028  0037D8  0E05               	movlw	5
  7029  0037DA  0101               	movlb	1	; () banked
  7030  0037DC  6FB5               	movwf	(_IO+12)& (0+255),b
  7031                           
  7032                           ; BSR set to: 1
  7033                           ;d232.c: 172:  return 1;
  7034  0037DE  0E01               	movlw	1
  7035                           
  7036                           ; BSR set to: 1
  7037  0037E0  0012               	return		;funcret
  7038  0037E2                     __end_of_Digital232_RW:
  7039                           	opt callstack 0
  7040                           
  7041 ;; *************** function _printf *****************
  7042 ;; Defined at:
  7043 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  7044 ;; Parameters:    Size  Location     Type
  7045 ;;  fmt             1    4[BANK0 ] PTR const unsigned char 
  7046 ;;		 -> STR_15(3), STR_13(3), STR_11(3), STR_9(3), 
  7047 ;;		 -> STR_7(3), STR_5(3), 
  7048 ;; Auto vars:     Size  Location     Type
  7049 ;;  ret             2    0        int 
  7050 ;;  ap              1    9[BANK0 ] PTR void [1]
  7051 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7052 ;; Return value:  Size  Location     Type
  7053 ;;                  2    4[BANK0 ] int 
  7054 ;; Registers used:
  7055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7056 ;; Tracked objects:
  7057 ;;		On entry : 3F/0
  7058 ;;		On exit  : 3F/1
  7059 ;;		Unchanged: 0/0
  7060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7061 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7062 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7064 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7065 ;;Total ram usage:        6 bytes
  7066 ;; Hardware stack levels used:    1
  7067 ;; Hardware stack levels required when called:   12
  7068 ;; This function calls:
  7069 ;;		_vfprintf
  7070 ;; This function is called by:
  7071 ;;		_Digital232_init
  7072 ;;		_Digital232_RW
  7073 ;; This function uses a non-reentrant model
  7074 ;;
  7075                           
  7076                           	psect	text46
  7077  00531A                     __ptext46:
  7078                           	opt callstack 0
  7079  00531A                     _printf:
  7080                           	opt callstack 17
  7081                           
  7082                           ; BSR set to: 0
  7083                           
  7084                           ; BSR set to: 1
  7085                           ;incstack = 0
  7086  00531A  0E65               	movlw	low (?_printf+1)
  7087  00531C  6F69               	movwf	printf@ap& (0+255),b
  7088                           
  7089                           ; BSR set to: 0
  7090  00531E  0E00               	movlw	0
  7091  005320  6F60               	movwf	vfprintf@fp& (0+255),b
  7092  005322  0E00               	movlw	0
  7093  005324  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  7094  005326  0060  F190  F062   	movff	printf@fmt,vfprintf@fmt
  7095  00532C  0E69               	movlw	low printf@ap
  7096  00532E  6F63               	movwf	vfprintf@ap& (0+255),b
  7097  005330  ECD1  F025         	call	_vfprintf	;wreg free
  7098                           
  7099                           ; BSR set to: 1
  7100  005334  0012               	return		;funcret
  7101  005336                     __end_of_printf:
  7102                           	opt callstack 0
  7103                           
  7104 ;; *************** function _vfprintf *****************
  7105 ;; Defined at:
  7106 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7107 ;; Parameters:    Size  Location     Type
  7108 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7109 ;;		 -> sprintf@f(6), NULL(0), 
  7110 ;;  fmt             1    2[BANK0 ] PTR const unsigned char 
  7111 ;;		 -> STR_15(3), STR_13(3), STR_11(3), STR_9(3), 
  7112 ;;		 -> STR_7(3), STR_5(3), STR_3(12), STR_2(17), 
  7113 ;;		 -> STR_1(17), 
  7114 ;;  ap              1    3[BANK0 ] PTR PTR void 
  7115 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7116 ;; Auto vars:     Size  Location     Type
  7117 ;;  cfmt            1   84[COMRAM] PTR unsigned char 
  7118 ;;		 -> STR_15(3), STR_13(3), STR_11(3), STR_9(3), 
  7119 ;;		 -> STR_7(3), STR_5(3), STR_3(12), STR_2(17), 
  7120 ;;		 -> STR_1(17), 
  7121 ;; Return value:  Size  Location     Type
  7122 ;;                  2    0[BANK0 ] int 
  7123 ;; Registers used:
  7124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7125 ;; Tracked objects:
  7126 ;;		On entry : 3F/0
  7127 ;;		On exit  : 3F/1
  7128 ;;		Unchanged: 0/0
  7129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7130 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7131 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7133 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7134 ;;Total ram usage:        5 bytes
  7135 ;; Hardware stack levels used:    1
  7136 ;; Hardware stack levels required when called:   11
  7137 ;; This function calls:
  7138 ;;		_vfpfcnvrt
  7139 ;; This function is called by:
  7140 ;;		_sprintf
  7141 ;;		_printf
  7142 ;; This function uses a non-reentrant model
  7143 ;;
  7144                           
  7145                           	psect	text47
  7146  004BA2                     __ptext47:
  7147                           	opt callstack 0
  7148  004BA2                     _vfprintf:
  7149                           	opt callstack 17
  7150                           
  7151                           ; BSR set to: 0
  7152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  7153                           
  7154                           ; BSR set to: 1
  7155                           ;incstack = 0
  7156  004BA2  0060  F188  F055   	movff	vfprintf@fmt,vfprintf@cfmt
  7157                           
  7158                           ; BSR set to: 0
  7159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  7160  004BA8  0E00               	movlw	0
  7161  004BAA  0101               	movlb	1	; () banked
  7162  004BAC  6F8B               	movwf	(_nout+1)& (0+255),b
  7163  004BAE  0E00               	movlw	0
  7164  004BB0  6F8A               	movwf	_nout& (0+255),b
  7165                           
  7166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7167  004BB2  D012               	goto	l6980
  7168  004BB4                     l6978:
  7169                           
  7170                           ; BSR set to: 1
  7171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  7172  004BB4  0060  F180  F047   	movff	vfprintf@fp,vfpfcnvrt@fp
  7173  004BBA  0060  F184  F048   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7174  004BC0  0E55               	movlw	low vfprintf@cfmt
  7175  004BC2  6E49               	movwf	vfpfcnvrt@fmt^0,c
  7176  004BC4  0060  F18C  F04A   	movff	vfprintf@ap,vfpfcnvrt@ap
  7177  004BCA  ECF1  F01B         	call	_vfpfcnvrt	;wreg free
  7178  004BCE  5047               	movf	?_vfpfcnvrt^0,w,c
  7179  004BD0  0101               	movlb	1	; () banked
  7180  004BD2  278A               	addwf	_nout& (0+255),f,b
  7181  004BD4  5048               	movf	(?_vfpfcnvrt+1)^0,w,c
  7182  004BD6  238B               	addwfc	(_nout+1)& (0+255),f,b
  7183  004BD8                     l6980:
  7184                           
  7185                           ; BSR set to: 1
  7186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7187  004BD8  0060  F157  FFF6   	movff	vfprintf@cfmt,tblptrl
  7188  004BDE                     	if	1	;There is more than 1 active tblptr byte
  7189  004BDE  0E20               	movlw	high __smallconst
  7190  004BE0  6EF7               	movwf	tblptrh,c
  7191  004BE2                     	endif
  7192  004BE2                     	if	0	;tblptru may be non-zero
  7193  004BE2                     	endif
  7194  004BE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7195  004BE2  0E00               	movlw	low (__smallconst shr (0+16))
  7196  004BE4  6EF8               	movwf	tblptru,c
  7197  004BE6                     	endif
  7198  004BE6  0008               	tblrd		*
  7199  004BE8  50F5               	movf	tablat,w,c
  7200  004BEA  0900               	iorlw	0
  7201  004BEC  A4D8               	btfss	status,2,c
  7202  004BEE  D7E2               	goto	l6978
  7203                           
  7204                           ; BSR set to: 1
  7205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  7206  004BF0  0060  F628  F060   	movff	_nout,?_vfprintf
  7207  004BF6  0060  F62C  F061   	movff	_nout+1,?_vfprintf+1
  7208                           
  7209                           ; BSR set to: 1
  7210  004BFC  0012               	return		;funcret
  7211  004BFE                     __end_of_vfprintf:
  7212                           	opt callstack 0
  7213                           
  7214 ;; *************** function _vfpfcnvrt *****************
  7215 ;; Defined at:
  7216 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7217 ;; Parameters:    Size  Location     Type
  7218 ;;  fp              2   70[COMRAM] PTR struct _IO_FILE
  7219 ;;		 -> sprintf@f(6), NULL(0), 
  7220 ;;  fmt             1   72[COMRAM] PTR PTR unsigned char 
  7221 ;;		 -> vfprintf@cfmt(1), 
  7222 ;;  ap              1   73[COMRAM] PTR PTR void 
  7223 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7224 ;; Auto vars:     Size  Location     Type
  7225 ;;  ll              8   74[COMRAM] long long 
  7226 ;;  llu             8    0        unsigned long long 
  7227 ;;  f               4    0        unsigned long long 
  7228 ;;  vp              3    0        PTR void 
  7229 ;;  ct              3    0        unsigned char [3]
  7230 ;;  cp              2   82[COMRAM] PTR unsigned char 
  7231 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(4), STR_14(4), 
  7232 ;;		 -> STR_12(4), STR_10(4), STR_8(4), STR_6(4), 
  7233 ;;		 -> STR_4(5), 
  7234 ;;  i               2    0        int 
  7235 ;;  done            2    0        int 
  7236 ;;  c               1    0        unsigned char 
  7237 ;; Return value:  Size  Location     Type
  7238 ;;                  2   70[COMRAM] int 
  7239 ;; Registers used:
  7240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7241 ;; Tracked objects:
  7242 ;;		On entry : 3E/1
  7243 ;;		On exit  : 0/0
  7244 ;;		Unchanged: 0/0
  7245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7246 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7247 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7249 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7250 ;;Total ram usage:       14 bytes
  7251 ;; Hardware stack levels used:    1
  7252 ;; Hardware stack levels required when called:   10
  7253 ;; This function calls:
  7254 ;;		_dtoa
  7255 ;;		_fputc
  7256 ;;		_stoa
  7257 ;; This function is called by:
  7258 ;;		_vfprintf
  7259 ;; This function uses a non-reentrant model
  7260 ;;
  7261                           
  7262                           	psect	text48
  7263  0037E2                     __ptext48:
  7264                           	opt callstack 0
  7265  0037E2                     _vfpfcnvrt:
  7266                           	opt callstack 17
  7267                           
  7268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  7269                           
  7270                           ; BSR set to: 1
  7271                           ;incstack = 0
  7272  0037E2  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7273  0037E4  6ED9               	movwf	fsr2l,c
  7274  0037E6  6ADA               	clrf	fsr2h,c
  7275  0037E8  006F FF7F FFF6     	movff	indf2,tblptrl
  7276  0037EE                     	if	1	;There is more than 1 active tblptr byte
  7277  0037EE  0E20               	movlw	high __smallconst
  7278  0037F0  6EF7               	movwf	tblptrh,c
  7279  0037F2                     	endif
  7280  0037F2                     	if	0	;tblptru may be non-zero
  7281  0037F2                     	endif
  7282  0037F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7283  0037F2  0E00               	movlw	low (__smallconst shr (0+16))
  7284  0037F4  6EF8               	movwf	tblptru,c
  7285  0037F6                     	endif
  7286  0037F6  0008               	tblrd		*
  7287  0037F8  50F5               	movf	tablat,w,c
  7288  0037FA  0A25               	xorlw	37
  7289  0037FC  A4D8               	btfss	status,2,c
  7290  0037FE  D0D5               	goto	l6600
  7291                           
  7292                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  7293  003800  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7294  003802  6ED9               	movwf	fsr2l,c
  7295  003804  6ADA               	clrf	fsr2h,c
  7296  003806  2ADF               	incf	indf2,f,c
  7297                           
  7298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  7299  003808  0E00               	movlw	0
  7300  00380A  0101               	movlb	1	; () banked
  7301  00380C  6F8D               	movwf	(_width+1)& (0+255),b
  7302  00380E  0E00               	movlw	0
  7303  003810  6F8C               	movwf	_width& (0+255),b
  7304  003812  0060  F630  F056   	movff	_width,_flags
  7305  003818  0060  F634  F057   	movff	_width+1,_flags+1
  7306                           
  7307                           ; BSR set to: 1
  7308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  7309  00381E  0100               	movlb	0	; () banked
  7310  003820  699E               	setf	_prec& (0+255),b
  7311  003822  699F               	setf	(_prec+1)& (0+255),b
  7312                           
  7313                           ; BSR set to: 0
  7314                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7315  003824  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7316  003826  6ED9               	movwf	fsr2l,c
  7317  003828  6ADA               	clrf	fsr2h,c
  7318  00382A  006F FF7F FFF6     	movff	indf2,tblptrl
  7319  003830                     	if	1	;There is more than 1 active tblptr byte
  7320  003830  0E20               	movlw	high __smallconst
  7321  003832  6EF7               	movwf	tblptrh,c
  7322  003834                     	endif
  7323  003834                     	if	0	;tblptru may be non-zero
  7324  003834                     	endif
  7325  003834                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7326  003834  0E00               	movlw	low (__smallconst shr (0+16))
  7327  003836  6EF8               	movwf	tblptru,c
  7328  003838                     	endif
  7329  003838  0008               	tblrd		*
  7330  00383A  50F5               	movf	tablat,w,c
  7331  00383C  0A64               	xorlw	100
  7332  00383E  B4D8               	btfsc	status,2,c
  7333  003840  D00F               	goto	u6910
  7334                           
  7335                           ; BSR set to: 0
  7336  003842  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7337  003844  6ED9               	movwf	fsr2l,c
  7338  003846  6ADA               	clrf	fsr2h,c
  7339  003848  006F FF7F FFF6     	movff	indf2,tblptrl
  7340  00384E                     	if	1	;There is more than 1 active tblptr byte
  7341  00384E  0E20               	movlw	high __smallconst
  7342  003850  6EF7               	movwf	tblptrh,c
  7343  003852                     	endif
  7344  003852                     	if	0	;tblptru may be non-zero
  7345  003852                     	endif
  7346  003852                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7347  003852  0E00               	movlw	low (__smallconst shr (0+16))
  7348  003854  6EF8               	movwf	tblptru,c
  7349  003856                     	endif
  7350  003856  0008               	tblrd		*
  7351  003858  50F5               	movf	tablat,w,c
  7352  00385A  0A69               	xorlw	105
  7353  00385C  A4D8               	btfss	status,2,c
  7354  00385E  D042               	goto	l6574
  7355  003860                     u6910:
  7356                           
  7357                           ; BSR set to: 0
  7358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  7359  003860  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7360  003862  6ED9               	movwf	fsr2l,c
  7361  003864  6ADA               	clrf	fsr2h,c
  7362  003866  2ADF               	incf	indf2,f,c
  7363                           
  7364                           ; BSR set to: 0
  7365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7366  003868  504A               	movf	vfpfcnvrt@ap^0,w,c
  7367  00386A  6ED9               	movwf	fsr2l,c
  7368  00386C  6ADA               	clrf	fsr2h,c
  7369  00386E  50DF               	movf	indf2,w,c
  7370  003870  2ADF               	incf	indf2,f,c
  7371  003872  2ADF               	incf	indf2,f,c
  7372  003874  6ED9               	movwf	fsr2l,c
  7373  003876  6ADA               	clrf	fsr2h,c
  7374  003878  006F FF78  F04B    	movff	postinc2,vfpfcnvrt@ll
  7375  00387E  006F FF74  F04C    	movff	postdec2,vfpfcnvrt@ll+1
  7376  003884  0E00               	movlw	0
  7377  003886  BE4C               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  7378  003888  0EFF               	movlw	-1
  7379  00388A  6E4D               	movwf	(vfpfcnvrt@ll+2)^0,c
  7380  00388C  6E4E               	movwf	(vfpfcnvrt@ll+3)^0,c
  7381  00388E  6E4F               	movwf	(vfpfcnvrt@ll+4)^0,c
  7382  003890  6E50               	movwf	(vfpfcnvrt@ll+5)^0,c
  7383  003892  6E51               	movwf	(vfpfcnvrt@ll+6)^0,c
  7384  003894  6E52               	movwf	(vfpfcnvrt@ll+7)^0,c
  7385                           
  7386                           ; BSR set to: 0
  7387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7388  003896  0060  F11C  F023   	movff	vfpfcnvrt@fp,dtoa@fp
  7389  00389C  0060  F120  F024   	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7390  0038A2  0060  F12C  F025   	movff	vfpfcnvrt@ll,dtoa@d
  7391  0038A8  0060  F130  F026   	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7392  0038AE  0060  F134  F027   	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7393  0038B4  0060  F138  F028   	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7394  0038BA  0060  F13C  F029   	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7395  0038C0  0060  F140  F02A   	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7396  0038C6  0060  F144  F02B   	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7397  0038CC  0060  F148  F02C   	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7398  0038D2  EC25  F018         	call	_dtoa	;wreg free
  7399  0038D6  0060  F08C  F047   	movff	?_dtoa,?_vfpfcnvrt
  7400  0038DC  0060  F090  F048   	movff	?_dtoa+1,?_vfpfcnvrt+1
  7401  0038E2  0012               	return	
  7402  0038E4                     l6574:
  7403                           
  7404                           ; BSR set to: 0
  7405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  7406  0038E4  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7407  0038E6  6ED9               	movwf	fsr2l,c
  7408  0038E8  6ADA               	clrf	fsr2h,c
  7409  0038EA  006F FF7F FFF6     	movff	indf2,tblptrl
  7410  0038F0                     	if	1	;There is more than 1 active tblptr byte
  7411  0038F0  0E20               	movlw	high __smallconst
  7412  0038F2  6EF7               	movwf	tblptrh,c
  7413  0038F4                     	endif
  7414  0038F4                     	if	0	;tblptru may be non-zero
  7415  0038F4                     	endif
  7416  0038F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7417  0038F4  0E00               	movlw	low (__smallconst shr (0+16))
  7418  0038F6  6EF8               	movwf	tblptru,c
  7419  0038F8                     	endif
  7420  0038F8  0008               	tblrd		*
  7421  0038FA  50F5               	movf	tablat,w,c
  7422  0038FC  0A73               	xorlw	115
  7423  0038FE  A4D8               	btfss	status,2,c
  7424  003900  D027               	goto	l6584
  7425                           
  7426                           ; BSR set to: 0
  7427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  7428  003902  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7429  003904  6ED9               	movwf	fsr2l,c
  7430  003906  6ADA               	clrf	fsr2h,c
  7431  003908  2ADF               	incf	indf2,f,c
  7432                           
  7433                           ; BSR set to: 0
  7434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  7435  00390A  504A               	movf	vfpfcnvrt@ap^0,w,c
  7436  00390C  6ED9               	movwf	fsr2l,c
  7437  00390E  6ADA               	clrf	fsr2h,c
  7438  003910  0E02               	movlw	2
  7439  003912  26DF               	addwf	indf2,f,c
  7440  003914  5CDF               	subwf	indf2,w,c
  7441  003916  6ED9               	movwf	fsr2l,c
  7442  003918  6ADA               	clrf	fsr2h,c
  7443  00391A  006F FF78  F053    	movff	postinc2,vfpfcnvrt@cp
  7444  003920  006F FF78  F054    	movff	postinc2,vfpfcnvrt@cp+1
  7445                           
  7446                           ; BSR set to: 0
  7447                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  7448  003926  0060  F11C  F011   	movff	vfpfcnvrt@fp,stoa@fp
  7449  00392C  0060  F120  F012   	movff	vfpfcnvrt@fp+1,stoa@fp+1
  7450  003932  0060  F14C  F013   	movff	vfpfcnvrt@cp,stoa@s
  7451  003938  0060  F150  F014   	movff	vfpfcnvrt@cp+1,stoa@s+1
  7452  00393E  ECF0  F01C         	call	_stoa	;wreg free
  7453  003942  0060  F044  F047   	movff	?_stoa,?_vfpfcnvrt
  7454  003948  0060  F048  F048   	movff	?_stoa+1,?_vfpfcnvrt+1
  7455  00394E  0012               	return	
  7456  003950                     l6584:
  7457                           
  7458                           ; BSR set to: 0
  7459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  7460  003950  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7461  003952  6ED9               	movwf	fsr2l,c
  7462  003954  6ADA               	clrf	fsr2h,c
  7463  003956  006F FF7F FFF6     	movff	indf2,tblptrl
  7464  00395C                     	if	1	;There is more than 1 active tblptr byte
  7465  00395C  0E20               	movlw	high __smallconst
  7466  00395E  6EF7               	movwf	tblptrh,c
  7467  003960                     	endif
  7468  003960                     	if	0	;tblptru may be non-zero
  7469  003960                     	endif
  7470  003960                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7471  003960  0E00               	movlw	low (__smallconst shr (0+16))
  7472  003962  6EF8               	movwf	tblptru,c
  7473  003964                     	endif
  7474  003964  0008               	tblrd		*
  7475  003966  50F5               	movf	tablat,w,c
  7476  003968  0A25               	xorlw	37
  7477  00396A  A4D8               	btfss	status,2,c
  7478  00396C  D015               	goto	l6594
  7479                           
  7480                           ; BSR set to: 0
  7481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  7482  00396E  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7483  003970  6ED9               	movwf	fsr2l,c
  7484  003972  6ADA               	clrf	fsr2h,c
  7485  003974  2ADF               	incf	indf2,f,c
  7486                           
  7487                           ; BSR set to: 0
  7488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  7489  003976  0E00               	movlw	0
  7490  003978  6E09               	movwf	(fputc@c+1)^0,c
  7491  00397A  0E25               	movlw	37
  7492  00397C  6E08               	movwf	fputc@c^0,c
  7493  00397E  0060  F11C  F00A   	movff	vfpfcnvrt@fp,fputc@fp
  7494  003984  0060  F120  F00B   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7495  00398A  ECA9  F022         	call	_fputc	;wreg free
  7496  00398E                     l6590:
  7497                           
  7498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  7499  00398E  0E00               	movlw	0
  7500  003990  6E48               	movwf	(?_vfpfcnvrt+1)^0,c
  7501  003992  0E01               	movlw	1
  7502  003994  6E47               	movwf	?_vfpfcnvrt^0,c
  7503  003996  0012               	return	
  7504  003998                     l6594:
  7505                           
  7506                           ; BSR set to: 0
  7507                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  7508  003998  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7509  00399A  6ED9               	movwf	fsr2l,c
  7510  00399C  6ADA               	clrf	fsr2h,c
  7511  00399E  2ADF               	incf	indf2,f,c
  7512                           
  7513                           ; BSR set to: 0
  7514                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  7515  0039A0  0E00               	movlw	0
  7516  0039A2  6E48               	movwf	(?_vfpfcnvrt+1)^0,c
  7517  0039A4  0E00               	movlw	0
  7518  0039A6  6E47               	movwf	?_vfpfcnvrt^0,c
  7519  0039A8  0012               	return	
  7520  0039AA                     l6600:
  7521                           
  7522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  7523  0039AA  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7524  0039AC  6ED9               	movwf	fsr2l,c
  7525  0039AE  6ADA               	clrf	fsr2h,c
  7526  0039B0  006F FF7F FFF6     	movff	indf2,tblptrl
  7527  0039B6                     	if	1	;There is more than 1 active tblptr byte
  7528  0039B6  0E20               	movlw	high __smallconst
  7529  0039B8  6EF7               	movwf	tblptrh,c
  7530  0039BA                     	endif
  7531  0039BA                     	if	0	;tblptru may be non-zero
  7532  0039BA                     	endif
  7533  0039BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7534  0039BA  0E00               	movlw	low (__smallconst shr (0+16))
  7535  0039BC  6EF8               	movwf	tblptru,c
  7536  0039BE                     	endif
  7537  0039BE  0008               	tblrd		*
  7538  0039C0  50F5               	movf	tablat,w,c
  7539  0039C2  6E08               	movwf	fputc@c^0,c
  7540  0039C4  6A09               	clrf	(fputc@c+1)^0,c
  7541  0039C6  0060  F11C  F00A   	movff	vfpfcnvrt@fp,fputc@fp
  7542  0039CC  0060  F120  F00B   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7543  0039D2  ECA9  F022         	call	_fputc	;wreg free
  7544                           
  7545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  7546  0039D6  5049               	movf	vfpfcnvrt@fmt^0,w,c
  7547  0039D8  6ED9               	movwf	fsr2l,c
  7548  0039DA  6ADA               	clrf	fsr2h,c
  7549  0039DC  2ADF               	incf	indf2,f,c
  7550  0039DE  D7D7               	goto	l6590
  7551  0039E0                     __end_of_vfpfcnvrt:
  7552                           	opt callstack 0
  7553                           
  7554 ;; *************** function _stoa *****************
  7555 ;; Defined at:
  7556 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7557 ;; Parameters:    Size  Location     Type
  7558 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7559 ;;		 -> sprintf@f(6), NULL(0), 
  7560 ;;  s               2   18[COMRAM] PTR unsigned char 
  7561 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(4), STR_14(4), 
  7562 ;;		 -> STR_12(4), STR_10(4), STR_8(4), STR_6(4), 
  7563 ;;		 -> STR_4(5), 
  7564 ;; Auto vars:     Size  Location     Type
  7565 ;;  nuls            7   21[COMRAM] unsigned char [7]
  7566 ;;  l               2   36[COMRAM] int 
  7567 ;;  p               2   34[COMRAM] int 
  7568 ;;  cp              2   32[COMRAM] PTR unsigned char 
  7569 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), STR_16(4), 
  7570 ;;		 -> STR_14(4), STR_12(4), STR_10(4), STR_8(4), 
  7571 ;;		 -> STR_6(4), STR_4(5), 
  7572 ;;  w               2   30[COMRAM] int 
  7573 ;;  i               2   28[COMRAM] int 
  7574 ;; Return value:  Size  Location     Type
  7575 ;;                  2   16[COMRAM] int 
  7576 ;; Registers used:
  7577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7578 ;; Tracked objects:
  7579 ;;		On entry : 3F/0
  7580 ;;		On exit  : 0/0
  7581 ;;		Unchanged: 0/0
  7582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7583 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7584 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7585 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7586 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7587 ;;Total ram usage:       22 bytes
  7588 ;; Hardware stack levels used:    1
  7589 ;; Hardware stack levels required when called:    7
  7590 ;; This function calls:
  7591 ;;		_fputc
  7592 ;;		_strlen
  7593 ;; This function is called by:
  7594 ;;		_vfpfcnvrt
  7595 ;; This function uses a non-reentrant model
  7596 ;;
  7597                           
  7598                           	psect	text49
  7599  0039E0                     __ptext49:
  7600                           	opt callstack 0
  7601  0039E0                     _stoa:
  7602                           	opt callstack 19
  7603                           
  7604                           ; BSR set to: 0
  7605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7606                           
  7607                           ;incstack = 0
  7608  0039E0  EE20  F19E         	lfsr	2,stoa@F1139
  7609  0039E4  EE10  F016         	lfsr	1,stoa@nuls
  7610  0039E8  0E06               	movlw	6
  7611  0039EA                     u6381:
  7612  0039EA  006F FF6F FFE3     	movff	plusw2,plusw1
  7613  0039F0  06E8               	decf	wreg,f,c
  7614  0039F2  E2FB               	bc	u6381
  7615                           
  7616                           ; BSR set to: 0
  7617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  7618  0039F4  0060  F04C  F021   	movff	stoa@s,stoa@cp
  7619  0039FA  0060  F050  F022   	movff	stoa@s+1,stoa@cp+1
  7620                           
  7621                           ; BSR set to: 0
  7622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  7623  003A00  5021               	movf	stoa@cp^0,w,c
  7624  003A02  1022               	iorwf	(stoa@cp+1)^0,w,c
  7625  003A04  A4D8               	btfss	status,2,c
  7626  003A06  D003               	goto	l6306
  7627                           
  7628                           ; BSR set to: 0
  7629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  7630  003A08  0E16               	movlw	low stoa@nuls
  7631  003A0A  6E21               	movwf	stoa@cp^0,c
  7632  003A0C  6A22               	clrf	(stoa@cp+1)^0,c
  7633  003A0E                     l6306:
  7634                           
  7635                           ; BSR set to: 0
  7636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  7637  003A0E  0060  F084  F006   	movff	stoa@cp,strlen@s
  7638  003A14  0060  F088  F007   	movff	stoa@cp+1,strlen@s+1
  7639  003A1A  ECFF  F025         	call	_strlen	;wreg free
  7640  003A1E  0060  F018  F025   	movff	?_strlen,stoa@l
  7641  003A24  0060  F01C  F026   	movff	?_strlen+1,stoa@l+1
  7642                           
  7643                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  7644  003A2A  0060  F278  F023   	movff	_prec,stoa@p
  7645  003A30  0060  F27C  F024   	movff	_prec+1,stoa@p+1
  7646                           
  7647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  7648  003A36  BE24               	btfsc	(stoa@p+1)^0,7,c
  7649  003A38  D010               	goto	l1398
  7650  003A3A  5025               	movf	stoa@l^0,w,c
  7651  003A3C  5C23               	subwf	stoa@p^0,w,c
  7652  003A3E  5024               	movf	(stoa@p+1)^0,w,c
  7653  003A40  0A80               	xorlw	128
  7654  003A42  6E15               	movwf	??_stoa^0,c
  7655  003A44  5026               	movf	(stoa@l+1)^0,w,c
  7656  003A46  0A80               	xorlw	128
  7657  003A48  5815               	subwfb	??_stoa^0,w,c
  7658  003A4A  B0D8               	btfsc	status,0,c
  7659  003A4C  D006               	goto	l1398
  7660  003A4E  0060  F08C  F025   	movff	stoa@p,stoa@l
  7661  003A54  0060  F090  F026   	movff	stoa@p+1,stoa@l+1
  7662  003A5A                     l1398:
  7663                           
  7664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
  7665  003A5A  0060  F094  F023   	movff	stoa@l,stoa@p
  7666  003A60  0060  F098  F024   	movff	stoa@l+1,stoa@p+1
  7667                           
  7668                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
  7669  003A66  0060  F630  F01F   	movff	_width,stoa@w
  7670  003A6C  0060  F634  F020   	movff	_width+1,stoa@w+1
  7671                           
  7672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  7673  003A72  A056               	btfss	_flags^0,0,c
  7674  003A74  D00F               	goto	l6320
  7675  003A76  D018               	goto	u6430
  7676  003A78                     l6316:
  7677                           
  7678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  7679  003A78  0E00               	movlw	0
  7680  003A7A  6E09               	movwf	(fputc@c+1)^0,c
  7681  003A7C  0E20               	movlw	32
  7682  003A7E  6E08               	movwf	fputc@c^0,c
  7683  003A80  0060  F044  F00A   	movff	stoa@fp,fputc@fp
  7684  003A86  0060  F048  F00B   	movff	stoa@fp+1,fputc@fp+1
  7685  003A8C  ECA9  F022         	call	_fputc	;wreg free
  7686                           
  7687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
  7688  003A90  4A25               	infsnz	stoa@l^0,f,c
  7689  003A92  2A26               	incf	(stoa@l+1)^0,f,c
  7690  003A94                     l6320:
  7691                           
  7692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  7693  003A94  501F               	movf	stoa@w^0,w,c
  7694  003A96  5C25               	subwf	stoa@l^0,w,c
  7695  003A98  5026               	movf	(stoa@l+1)^0,w,c
  7696  003A9A  0A80               	xorlw	128
  7697  003A9C  6E15               	movwf	??_stoa^0,c
  7698  003A9E  5020               	movf	(stoa@w+1)^0,w,c
  7699  003AA0  0A80               	xorlw	128
  7700  003AA2  5815               	subwfb	??_stoa^0,w,c
  7701  003AA4  A0D8               	btfss	status,0,c
  7702  003AA6  D7E8               	goto	l6316
  7703  003AA8                     u6430:
  7704                           
  7705                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  7706  003AA8  0E00               	movlw	0
  7707  003AAA  6E1E               	movwf	(stoa@i+1)^0,c
  7708  003AAC  0E00               	movlw	0
  7709  003AAE  6E1D               	movwf	stoa@i^0,c
  7710                           
  7711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  7712  003AB0  D025               	goto	l6330
  7713  003AB2                     l6324:
  7714                           
  7715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  7716  003AB2  0060  F087  FFF6   	movff	stoa@cp,tblptrl
  7717  003AB8  0060  F08B  FFF7   	movff	stoa@cp+1,tblptrh
  7718  003ABE  0E00               	movlw	low (__smallconst shr (0+16))
  7719  003AC0  6EF8               	movwf	tblptru,c
  7720  003AC2  0E1F               	movlw	(high __ramtop+-1)
  7721  003AC4  64F7               	cpfsgt	tblptrh,c
  7722  003AC6  D003               	bra	u6447
  7723  003AC8  0008               	tblrd		*
  7724  003ACA  50F5               	movf	tablat,w,c
  7725  003ACC  D007               	bra	u6440
  7726  003ACE                     u6447:
  7727  003ACE  006F FFDB FFE1     	movff	tblptrl,fsr1l
  7728  003AD4  006F FFDF FFE2     	movff	tblptrh,fsr1h
  7729  003ADA  50E7               	movf	indf1,w,c
  7730  003ADC                     u6440:
  7731  003ADC  6E15               	movwf	??_stoa^0,c
  7732  003ADE  5015               	movf	??_stoa^0,w,c
  7733  003AE0  6E08               	movwf	fputc@c^0,c
  7734  003AE2  6A09               	clrf	(fputc@c+1)^0,c
  7735  003AE4  0060  F044  F00A   	movff	stoa@fp,fputc@fp
  7736  003AEA  0060  F048  F00B   	movff	stoa@fp+1,fputc@fp+1
  7737  003AF0  ECA9  F022         	call	_fputc	;wreg free
  7738                           
  7739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  7740  003AF4  4A21               	infsnz	stoa@cp^0,f,c
  7741  003AF6  2A22               	incf	(stoa@cp+1)^0,f,c
  7742                           
  7743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
  7744  003AF8  4A1D               	infsnz	stoa@i^0,f,c
  7745  003AFA  2A1E               	incf	(stoa@i+1)^0,f,c
  7746  003AFC                     l6330:
  7747                           
  7748                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  7749  003AFC  5023               	movf	stoa@p^0,w,c
  7750  003AFE  5C1D               	subwf	stoa@i^0,w,c
  7751  003B00  501E               	movf	(stoa@i+1)^0,w,c
  7752  003B02  0A80               	xorlw	128
  7753  003B04  6E15               	movwf	??_stoa^0,c
  7754  003B06  5024               	movf	(stoa@p+1)^0,w,c
  7755  003B08  0A80               	xorlw	128
  7756  003B0A  5815               	subwfb	??_stoa^0,w,c
  7757  003B0C  A0D8               	btfss	status,0,c
  7758  003B0E  D7D1               	goto	l6324
  7759                           
  7760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  7761  003B10  B056               	btfsc	_flags^0,0,c
  7762  003B12  D00F               	goto	l6338
  7763  003B14  D018               	goto	u6470
  7764  003B16                     l6334:
  7765                           
  7766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  7767  003B16  0E00               	movlw	0
  7768  003B18  6E09               	movwf	(fputc@c+1)^0,c
  7769  003B1A  0E20               	movlw	32
  7770  003B1C  6E08               	movwf	fputc@c^0,c
  7771  003B1E  0060  F044  F00A   	movff	stoa@fp,fputc@fp
  7772  003B24  0060  F048  F00B   	movff	stoa@fp+1,fputc@fp+1
  7773  003B2A  ECA9  F022         	call	_fputc	;wreg free
  7774                           
  7775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
  7776  003B2E  4A25               	infsnz	stoa@l^0,f,c
  7777  003B30  2A26               	incf	(stoa@l+1)^0,f,c
  7778  003B32                     l6338:
  7779                           
  7780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  7781  003B32  501F               	movf	stoa@w^0,w,c
  7782  003B34  5C25               	subwf	stoa@l^0,w,c
  7783  003B36  5026               	movf	(stoa@l+1)^0,w,c
  7784  003B38  0A80               	xorlw	128
  7785  003B3A  6E15               	movwf	??_stoa^0,c
  7786  003B3C  5020               	movf	(stoa@w+1)^0,w,c
  7787  003B3E  0A80               	xorlw	128
  7788  003B40  5815               	subwfb	??_stoa^0,w,c
  7789  003B42  A0D8               	btfss	status,0,c
  7790  003B44  D7E8               	goto	l6334
  7791  003B46                     u6470:
  7792                           
  7793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
  7794                           
  7795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 586:     }
  7796  003B46  0060  F094  F011   	movff	stoa@l,?_stoa
  7797  003B4C  0060  F098  F012   	movff	stoa@l+1,?_stoa+1
  7798  003B52  0012               	return		;funcret
  7799  003B54                     __end_of_stoa:
  7800                           	opt callstack 0
  7801                           
  7802 ;; *************** function _dtoa *****************
  7803 ;; Defined at:
  7804 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7805 ;; Parameters:    Size  Location     Type
  7806 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  7807 ;;		 -> sprintf@f(6), NULL(0), 
  7808 ;;  d               8   36[COMRAM] long long 
  7809 ;; Auto vars:     Size  Location     Type
  7810 ;;  n               8   60[COMRAM] long long 
  7811 ;;  i               2   68[COMRAM] int 
  7812 ;;  s               2   58[COMRAM] int 
  7813 ;;  w               2   56[COMRAM] int 
  7814 ;;  p               2   54[COMRAM] int 
  7815 ;; Return value:  Size  Location     Type
  7816 ;;                  2   34[COMRAM] int 
  7817 ;; Registers used:
  7818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7819 ;; Tracked objects:
  7820 ;;		On entry : 3F/0
  7821 ;;		On exit  : 0/0
  7822 ;;		Unchanged: 0/0
  7823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7824 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7825 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7826 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7827 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7828 ;;Total ram usage:       36 bytes
  7829 ;; Hardware stack levels used:    1
  7830 ;; Hardware stack levels required when called:    9
  7831 ;; This function calls:
  7832 ;;		___aodiv
  7833 ;;		___aomod
  7834 ;;		_abs
  7835 ;;		_pad
  7836 ;; This function is called by:
  7837 ;;		_vfpfcnvrt
  7838 ;; This function uses a non-reentrant model
  7839 ;;
  7840                           
  7841                           	psect	text50
  7842  00304A                     __ptext50:
  7843                           	opt callstack 0
  7844  00304A                     _dtoa:
  7845                           	opt callstack 17
  7846                           
  7847                           ; BSR set to: 0
  7848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
  7849                           
  7850                           ;incstack = 0
  7851  00304A  0060  F094  F03D   	movff	dtoa@d,dtoa@n
  7852  003050  0060  F098  F03E   	movff	dtoa@d+1,dtoa@n+1
  7853  003056  0060  F09C  F03F   	movff	dtoa@d+2,dtoa@n+2
  7854  00305C  0060  F0A0  F040   	movff	dtoa@d+3,dtoa@n+3
  7855  003062  0060  F0A4  F041   	movff	dtoa@d+4,dtoa@n+4
  7856  003068  0060  F0A8  F042   	movff	dtoa@d+5,dtoa@n+5
  7857  00306E  0060  F0AC  F043   	movff	dtoa@d+6,dtoa@n+6
  7858  003074  0060  F0B0  F044   	movff	dtoa@d+7,dtoa@n+7
  7859                           
  7860                           ; BSR set to: 0
  7861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  7862  00307A  AE44               	btfss	(dtoa@n+7)^0,7,c
  7863  00307C  D002               	goto	u6230
  7864  00307E  0E01               	movlw	1
  7865  003080  D001               	goto	u6240
  7866  003082                     u6230:
  7867  003082  0E00               	movlw	0
  7868  003084                     u6240:
  7869  003084  6E3B               	movwf	dtoa@s^0,c
  7870  003086  6A3C               	clrf	(dtoa@s+1)^0,c
  7871                           
  7872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  7873  003088  503B               	movf	dtoa@s^0,w,c
  7874  00308A  103C               	iorwf	(dtoa@s+1)^0,w,c
  7875  00308C  B4D8               	btfsc	status,2,c
  7876  00308E  D010               	goto	l6242
  7877                           
  7878                           ; BSR set to: 0
  7879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  7880  003090  1E44               	comf	(dtoa@n+7)^0,f,c
  7881  003092  1E43               	comf	(dtoa@n+6)^0,f,c
  7882  003094  1E42               	comf	(dtoa@n+5)^0,f,c
  7883  003096  1E41               	comf	(dtoa@n+4)^0,f,c
  7884  003098  1E40               	comf	(dtoa@n+3)^0,f,c
  7885  00309A  1E3F               	comf	(dtoa@n+2)^0,f,c
  7886  00309C  1E3E               	comf	(dtoa@n+1)^0,f,c
  7887  00309E  6C3D               	negf	dtoa@n^0,c
  7888  0030A0  0E00               	movlw	0
  7889  0030A2  223E               	addwfc	(dtoa@n+1)^0,f,c
  7890  0030A4  223F               	addwfc	(dtoa@n+2)^0,f,c
  7891  0030A6  2240               	addwfc	(dtoa@n+3)^0,f,c
  7892  0030A8  2241               	addwfc	(dtoa@n+4)^0,f,c
  7893  0030AA  2242               	addwfc	(dtoa@n+5)^0,f,c
  7894  0030AC  2243               	addwfc	(dtoa@n+6)^0,f,c
  7895  0030AE  2244               	addwfc	(dtoa@n+7)^0,f,c
  7896  0030B0                     l6242:
  7897                           
  7898                           ; BSR set to: 0
  7899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  7900  0030B0  AF9F               	btfss	(_prec+1)& (0+255),7,b
  7901                           
  7902                           ; BSR set to: 0
  7903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  7904  0030B2  9256               	bcf	_flags^0,1,c
  7905                           
  7906                           ; BSR set to: 0
  7907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  7908  0030B4  BF9F               	btfsc	(_prec+1)& (0+255),7,b
  7909  0030B6  D005               	goto	u6270
  7910  0030B8  519F               	movf	(_prec+1)& (0+255),w,b
  7911  0030BA  E108               	bnz	l1369
  7912  0030BC  059E               	decf	_prec& (0+255),w,b
  7913  0030BE  B0D8               	btfsc	status,0,c
  7914  0030C0  D005               	goto	l1369
  7915  0030C2                     u6270:
  7916                           
  7917                           ; BSR set to: 0
  7918  0030C2  0E00               	movlw	0
  7919  0030C4  6E38               	movwf	(dtoa@p+1)^0,c
  7920  0030C6  0E01               	movlw	1
  7921  0030C8  6E37               	movwf	dtoa@p^0,c
  7922  0030CA  D006               	goto	l1371
  7923  0030CC                     l1369:
  7924                           
  7925                           ; BSR set to: 0
  7926  0030CC  0060  F278  F037   	movff	_prec,dtoa@p
  7927  0030D2  0060  F27C  F038   	movff	_prec+1,dtoa@p+1
  7928  0030D8                     l1371:
  7929                           
  7930                           ; BSR set to: 0
  7931                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
  7932  0030D8  0060  F630  F039   	movff	_width,dtoa@w
  7933  0030DE  0060  F634  F03A   	movff	_width+1,dtoa@w+1
  7934                           
  7935                           ; BSR set to: 0
  7936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  7937  0030E4  503B               	movf	dtoa@s^0,w,c
  7938  0030E6  103C               	iorwf	(dtoa@s+1)^0,w,c
  7939  0030E8  A4D8               	btfss	status,2,c
  7940  0030EA  D002               	goto	u6290
  7941                           
  7942                           ; BSR set to: 0
  7943  0030EC  A456               	btfss	_flags^0,2,c
  7944  0030EE  D003               	goto	l6256
  7945  0030F0                     u6290:
  7946                           
  7947                           ; BSR set to: 0
  7948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
  7949  0030F0  0639               	decf	dtoa@w^0,f,c
  7950  0030F2  A0D8               	btfss	status,0,c
  7951  0030F4  063A               	decf	(dtoa@w+1)^0,f,c
  7952  0030F6                     l6256:
  7953                           
  7954                           ; BSR set to: 0
  7955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  7956  0030F6  0E00               	movlw	0
  7957  0030F8  6E46               	movwf	(dtoa@i+1)^0,c
  7958  0030FA  0E1F               	movlw	31
  7959  0030FC  6E45               	movwf	dtoa@i^0,c
  7960                           
  7961                           ; BSR set to: 0
  7962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  7963  0030FE  0E00               	movlw	0
  7964  003100  0102               	movlb	2	; () banked
  7965  003102  6F9F               	movwf	(_dbuf+31)& (0+255),b
  7966                           
  7967                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7968  003104  D09E               	goto	l6270
  7969  003106                     l6260:
  7970                           
  7971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
  7972  003106  0645               	decf	dtoa@i^0,f,c
  7973  003108  A0D8               	btfss	status,0,c
  7974  00310A  0646               	decf	(dtoa@i+1)^0,f,c
  7975                           
  7976                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  7977  00310C  0E80               	movlw	low _dbuf
  7978  00310E  2445               	addwf	dtoa@i^0,w,c
  7979  003110  6ED9               	movwf	fsr2l,c
  7980  003112  0E02               	movlw	high _dbuf
  7981  003114  2046               	addwfc	(dtoa@i+1)^0,w,c
  7982  003116  6EDA               	movwf	fsr2h,c
  7983  003118  0060  F0F4  F006   	movff	dtoa@n,___aomod@dividend
  7984  00311E  0060  F0F8  F007   	movff	dtoa@n+1,___aomod@dividend+1
  7985  003124  0060  F0FC  F008   	movff	dtoa@n+2,___aomod@dividend+2
  7986  00312A  0060  F100  F009   	movff	dtoa@n+3,___aomod@dividend+3
  7987  003130  0060  F104  F00A   	movff	dtoa@n+4,___aomod@dividend+4
  7988  003136  0060  F108  F00B   	movff	dtoa@n+5,___aomod@dividend+5
  7989  00313C  0060  F10C  F00C   	movff	dtoa@n+6,___aomod@dividend+6
  7990  003142  0060  F110  F00D   	movff	dtoa@n+7,___aomod@dividend+7
  7991  003148  0E0A               	movlw	10
  7992  00314A  6E0E               	movwf	___aomod@divisor^0,c
  7993  00314C  0E00               	movlw	0
  7994  00314E  6E0F               	movwf	(___aomod@divisor+1)^0,c
  7995  003150  0E00               	movlw	0
  7996  003152  6E10               	movwf	(___aomod@divisor+2)^0,c
  7997  003154  0E00               	movlw	0
  7998  003156  6E11               	movwf	(___aomod@divisor+3)^0,c
  7999  003158  0E00               	movlw	0
  8000  00315A  6E12               	movwf	(___aomod@divisor+4)^0,c
  8001  00315C  0E00               	movlw	0
  8002  00315E  6E13               	movwf	(___aomod@divisor+5)^0,c
  8003  003160  0E00               	movlw	0
  8004  003162  6E14               	movwf	(___aomod@divisor+6)^0,c
  8005  003164  0E00               	movlw	0
  8006  003166  6E15               	movwf	(___aomod@divisor+7)^0,c
  8007  003168  EC08  F01F         	call	___aomod	;wreg free
  8008  00316C  0060  F018  F02D   	movff	?___aomod,??_dtoa
  8009  003172  0060  F01C  F02E   	movff	?___aomod+1,??_dtoa+1
  8010  003178  0060  F020  F02F   	movff	?___aomod+2,??_dtoa+2
  8011  00317E  0060  F024  F030   	movff	?___aomod+3,??_dtoa+3
  8012  003184  0060  F028  F031   	movff	?___aomod+4,??_dtoa+4
  8013  00318A  0060  F02C  F032   	movff	?___aomod+5,??_dtoa+5
  8014  003190  0060  F030  F033   	movff	?___aomod+6,??_dtoa+6
  8015  003196  0060  F034  F034   	movff	?___aomod+7,??_dtoa+7
  8016  00319C  0060  F0B4  F018   	movff	??_dtoa,abs@a
  8017  0031A2  0060  F0BC  F019   	movff	??_dtoa+2,abs@a+1
  8018  0031A8  EC18  F027         	call	_abs	;wreg free
  8019  0031AC  5018               	movf	?_abs^0,w,c
  8020  0031AE  0F30               	addlw	48
  8021  0031B0  6EDF               	movwf	indf2,c
  8022                           
  8023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
  8024  0031B2  0637               	decf	dtoa@p^0,f,c
  8025  0031B4  A0D8               	btfss	status,0,c
  8026  0031B6  0638               	decf	(dtoa@p+1)^0,f,c
  8027                           
  8028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
  8029  0031B8  0639               	decf	dtoa@w^0,f,c
  8030  0031BA  A0D8               	btfss	status,0,c
  8031  0031BC  063A               	decf	(dtoa@w+1)^0,f,c
  8032                           
  8033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  8034  0031BE  0060  F0F4  F006   	movff	dtoa@n,___aodiv@dividend
  8035  0031C4  0060  F0F8  F007   	movff	dtoa@n+1,___aodiv@dividend+1
  8036  0031CA  0060  F0FC  F008   	movff	dtoa@n+2,___aodiv@dividend+2
  8037  0031D0  0060  F100  F009   	movff	dtoa@n+3,___aodiv@dividend+3
  8038  0031D6  0060  F104  F00A   	movff	dtoa@n+4,___aodiv@dividend+4
  8039  0031DC  0060  F108  F00B   	movff	dtoa@n+5,___aodiv@dividend+5
  8040  0031E2  0060  F10C  F00C   	movff	dtoa@n+6,___aodiv@dividend+6
  8041  0031E8  0060  F110  F00D   	movff	dtoa@n+7,___aodiv@dividend+7
  8042  0031EE  0E0A               	movlw	10
  8043  0031F0  6E0E               	movwf	___aodiv@divisor^0,c
  8044  0031F2  0E00               	movlw	0
  8045  0031F4  6E0F               	movwf	(___aodiv@divisor+1)^0,c
  8046  0031F6  0E00               	movlw	0
  8047  0031F8  6E10               	movwf	(___aodiv@divisor+2)^0,c
  8048  0031FA  0E00               	movlw	0
  8049  0031FC  6E11               	movwf	(___aodiv@divisor+3)^0,c
  8050  0031FE  0E00               	movlw	0
  8051  003200  6E12               	movwf	(___aodiv@divisor+4)^0,c
  8052  003202  0E00               	movlw	0
  8053  003204  6E13               	movwf	(___aodiv@divisor+5)^0,c
  8054  003206  0E00               	movlw	0
  8055  003208  6E14               	movwf	(___aodiv@divisor+6)^0,c
  8056  00320A  0E00               	movlw	0
  8057  00320C  6E15               	movwf	(___aodiv@divisor+7)^0,c
  8058  00320E  EC5C  F01E         	call	___aodiv	;wreg free
  8059  003212  0060  F018  F03D   	movff	?___aodiv,dtoa@n
  8060  003218  0060  F01C  F03E   	movff	?___aodiv+1,dtoa@n+1
  8061  00321E  0060  F020  F03F   	movff	?___aodiv+2,dtoa@n+2
  8062  003224  0060  F024  F040   	movff	?___aodiv+3,dtoa@n+3
  8063  00322A  0060  F028  F041   	movff	?___aodiv+4,dtoa@n+4
  8064  003230  0060  F02C  F042   	movff	?___aodiv+5,dtoa@n+5
  8065  003236  0060  F030  F043   	movff	?___aodiv+6,dtoa@n+6
  8066  00323C  0060  F034  F044   	movff	?___aodiv+7,dtoa@n+7
  8067  003242                     l6270:
  8068                           
  8069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8070  003242  BE46               	btfsc	(dtoa@i+1)^0,7,c
  8071  003244  D01F               	goto	u6340
  8072  003246  5046               	movf	(dtoa@i+1)^0,w,c
  8073  003248  E103               	bnz	u6300
  8074  00324A  0445               	decf	dtoa@i^0,w,c
  8075  00324C  A0D8               	btfss	status,0,c
  8076  00324E  D01A               	goto	u6340
  8077  003250                     u6300:
  8078  003250  503D               	movf	dtoa@n^0,w,c
  8079  003252  103E               	iorwf	(dtoa@n+1)^0,w,c
  8080  003254  103F               	iorwf	(dtoa@n+2)^0,w,c
  8081  003256  1040               	iorwf	(dtoa@n+3)^0,w,c
  8082  003258  1041               	iorwf	(dtoa@n+4)^0,w,c
  8083  00325A  1042               	iorwf	(dtoa@n+5)^0,w,c
  8084  00325C  1043               	iorwf	(dtoa@n+6)^0,w,c
  8085  00325E  1044               	iorwf	(dtoa@n+7)^0,w,c
  8086  003260  A4D8               	btfss	status,2,c
  8087  003262  D751               	goto	l6260
  8088  003264  BE38               	btfsc	(dtoa@p+1)^0,7,c
  8089  003266  D005               	goto	u6320
  8090  003268  5038               	movf	(dtoa@p+1)^0,w,c
  8091  00326A  E102               	bnz	u6321
  8092  00326C  0437               	decf	dtoa@p^0,w,c
  8093  00326E  B0D8               	btfsc	status,0,c
  8094  003270                     u6321:
  8095  003270  D74A               	goto	l6260
  8096  003272                     u6320:
  8097  003272  BE3A               	btfsc	(dtoa@w+1)^0,7,c
  8098  003274  D007               	goto	u6340
  8099  003276  503A               	movf	(dtoa@w+1)^0,w,c
  8100  003278  E103               	bnz	u6330
  8101  00327A  0439               	decf	dtoa@w^0,w,c
  8102  00327C  A0D8               	btfss	status,0,c
  8103  00327E  D002               	goto	u6340
  8104  003280                     u6330:
  8105  003280  B256               	btfsc	_flags^0,1,c
  8106  003282  D741               	goto	l6260
  8107  003284                     u6340:
  8108                           
  8109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  8110  003284  503B               	movf	dtoa@s^0,w,c
  8111  003286  103C               	iorwf	(dtoa@s+1)^0,w,c
  8112  003288  A4D8               	btfss	status,2,c
  8113  00328A  D002               	goto	u6360
  8114  00328C  A456               	btfss	_flags^0,2,c
  8115  00328E  D018               	goto	l6294
  8116  003290                     u6360:
  8117                           
  8118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
  8119  003290  0645               	decf	dtoa@i^0,f,c
  8120  003292  A0D8               	btfss	status,0,c
  8121  003294  0646               	decf	(dtoa@i+1)^0,f,c
  8122                           
  8123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  8124  003296  503B               	movf	dtoa@s^0,w,c
  8125  003298  103C               	iorwf	(dtoa@s+1)^0,w,c
  8126  00329A  A4D8               	btfss	status,2,c
  8127  00329C  D004               	goto	l6290
  8128  00329E  0E00               	movlw	0
  8129  0032A0  6E36               	movwf	(_dtoa$2719+1)^0,c
  8130  0032A2  0E2B               	movlw	43
  8131  0032A4  D003               	goto	L10
  8132  0032A6                     l6290:
  8133  0032A6  0E00               	movlw	0
  8134  0032A8  6E36               	movwf	(_dtoa$2719+1)^0,c
  8135  0032AA  0E2D               	movlw	45
  8136  0032AC                     L10:
  8137  0032AC  6E35               	movwf	_dtoa$2719^0,c
  8138  0032AE  0E80               	movlw	low _dbuf
  8139  0032B0  2445               	addwf	dtoa@i^0,w,c
  8140  0032B2  6ED9               	movwf	fsr2l,c
  8141  0032B4  0E02               	movlw	high _dbuf
  8142  0032B6  2046               	addwfc	(dtoa@i+1)^0,w,c
  8143  0032B8  6EDA               	movwf	fsr2h,c
  8144  0032BA  0060  F0D7  FFDF   	movff	_dtoa$2719,indf2
  8145  0032C0                     l6294:
  8146                           
  8147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  8148  0032C0  0060  F08C  F018   	movff	dtoa@fp,pad@fp
  8149  0032C6  0060  F090  F019   	movff	dtoa@fp+1,pad@fp+1
  8150  0032CC  0E80               	movlw	low _dbuf
  8151  0032CE  2445               	addwf	dtoa@i^0,w,c
  8152  0032D0  6E1A               	movwf	pad@buf^0,c
  8153  0032D2  0E02               	movlw	high _dbuf
  8154  0032D4  2046               	addwfc	(dtoa@i+1)^0,w,c
  8155  0032D6  6E1B               	movwf	(pad@buf+1)^0,c
  8156  0032D8  0060  F0E4  F01C   	movff	dtoa@w,pad@p
  8157  0032DE  0060  F0E8  F01D   	movff	dtoa@w+1,pad@p+1
  8158  0032E4  ECF9  F021         	call	_pad	;wreg free
  8159  0032E8  0060  F060  F023   	movff	?_pad,?_dtoa
  8160  0032EE  0060  F064  F024   	movff	?_pad+1,?_dtoa+1
  8161  0032F4  0012               	return		;funcret
  8162  0032F6                     __end_of_dtoa:
  8163                           	opt callstack 0
  8164                           
  8165 ;; *************** function _pad *****************
  8166 ;; Defined at:
  8167 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8168 ;; Parameters:    Size  Location     Type
  8169 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  8170 ;;		 -> sprintf@f(6), NULL(0), 
  8171 ;;  buf             2   25[COMRAM] PTR unsigned char 
  8172 ;;		 -> dbuf(32), 
  8173 ;;  p               2   27[COMRAM] int 
  8174 ;; Auto vars:     Size  Location     Type
  8175 ;;  w               2   32[COMRAM] int 
  8176 ;;  i               2   30[COMRAM] int 
  8177 ;; Return value:  Size  Location     Type
  8178 ;;                  2   23[COMRAM] int 
  8179 ;; Registers used:
  8180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8181 ;; Tracked objects:
  8182 ;;		On entry : 0/2
  8183 ;;		On exit  : 0/0
  8184 ;;		Unchanged: 0/0
  8185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8186 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8187 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8188 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8189 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8190 ;;Total ram usage:       11 bytes
  8191 ;; Hardware stack levels used:    1
  8192 ;; Hardware stack levels required when called:    8
  8193 ;; This function calls:
  8194 ;;		_fputc
  8195 ;;		_fputs
  8196 ;;		_strlen
  8197 ;; This function is called by:
  8198 ;;		_dtoa
  8199 ;; This function uses a non-reentrant model
  8200 ;;
  8201                           
  8202                           	psect	text51
  8203  0043F2                     __ptext51:
  8204                           	opt callstack 0
  8205  0043F2                     _pad:
  8206                           	opt callstack 17
  8207                           
  8208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  8209                           
  8210                           ;incstack = 0
  8211  0043F2  A056               	btfss	_flags^0,0,c
  8212  0043F4  D00E               	goto	l6134
  8213                           
  8214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  8215  0043F6  0060  F068  F011   	movff	pad@buf,fputs@s
  8216  0043FC  0060  F06C  F012   	movff	pad@buf+1,fputs@s+1
  8217  004402  0060  F060  F013   	movff	pad@fp,fputs@fp
  8218  004408  0060  F064  F014   	movff	pad@fp+1,fputs@fp+1
  8219  00440E  ECF9  F026         	call	_fputs	;wreg free
  8220  004412                     l6134:
  8221                           
  8222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  8223  004412  BE1D               	btfsc	(pad@p+1)^0,7,c
  8224  004414  D007               	goto	l6138
  8225  004416  0060  F070  F021   	movff	pad@p,pad@w
  8226  00441C  0060  F074  F022   	movff	pad@p+1,pad@w+1
  8227  004422  D004               	goto	l1358
  8228  004424                     l6138:
  8229  004424  0E00               	movlw	0
  8230  004426  6E22               	movwf	(pad@w+1)^0,c
  8231  004428  0E00               	movlw	0
  8232  00442A  6E21               	movwf	pad@w^0,c
  8233  00442C                     l1358:
  8234                           
  8235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  8236  00442C  0E00               	movlw	0
  8237  00442E  6E20               	movwf	(pad@i+1)^0,c
  8238  004430  0E00               	movlw	0
  8239  004432  6E1F               	movwf	pad@i^0,c
  8240                           
  8241                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  8242  004434  D00E               	goto	l6144
  8243  004436                     l6140:
  8244                           
  8245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  8246  004436  0E00               	movlw	0
  8247  004438  6E09               	movwf	(fputc@c+1)^0,c
  8248  00443A  0E20               	movlw	32
  8249  00443C  6E08               	movwf	fputc@c^0,c
  8250  00443E  0060  F060  F00A   	movff	pad@fp,fputc@fp
  8251  004444  0060  F064  F00B   	movff	pad@fp+1,fputc@fp+1
  8252  00444A  ECA9  F022         	call	_fputc	;wreg free
  8253                           
  8254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
  8255  00444E  4A1F               	infsnz	pad@i^0,f,c
  8256  004450  2A20               	incf	(pad@i+1)^0,f,c
  8257  004452                     l6144:
  8258                           
  8259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  8260  004452  5021               	movf	pad@w^0,w,c
  8261  004454  5C1F               	subwf	pad@i^0,w,c
  8262  004456  5020               	movf	(pad@i+1)^0,w,c
  8263  004458  0A80               	xorlw	128
  8264  00445A  6E1E               	movwf	??_pad^0,c
  8265  00445C  5022               	movf	(pad@w+1)^0,w,c
  8266  00445E  0A80               	xorlw	128
  8267  004460  581E               	subwfb	??_pad^0,w,c
  8268  004462  A0D8               	btfss	status,0,c
  8269  004464  D7E8               	goto	l6140
  8270                           
  8271                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  8272  004466  B056               	btfsc	_flags^0,0,c
  8273  004468  D00E               	goto	l6148
  8274                           
  8275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  8276  00446A  0060  F068  F011   	movff	pad@buf,fputs@s
  8277  004470  0060  F06C  F012   	movff	pad@buf+1,fputs@s+1
  8278  004476  0060  F060  F013   	movff	pad@fp,fputs@fp
  8279  00447C  0060  F064  F014   	movff	pad@fp+1,fputs@fp+1
  8280  004482  ECF9  F026         	call	_fputs	;wreg free
  8281  004486                     l6148:
  8282                           
  8283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  8284  004486  0060  F068  F006   	movff	pad@buf,strlen@s
  8285  00448C  0060  F06C  F007   	movff	pad@buf+1,strlen@s+1
  8286  004492  ECFF  F025         	call	_strlen	;wreg free
  8287  004496  5021               	movf	pad@w^0,w,c
  8288  004498  2406               	addwf	?_strlen^0,w,c
  8289  00449A  6E18               	movwf	?_pad^0,c
  8290  00449C  5022               	movf	(pad@w+1)^0,w,c
  8291  00449E  2007               	addwfc	(?_strlen+1)^0,w,c
  8292  0044A0  6E19               	movwf	(?_pad+1)^0,c
  8293  0044A2  0012               	return		;funcret
  8294  0044A4                     __end_of_pad:
  8295                           	opt callstack 0
  8296                           
  8297 ;; *************** function _strlen *****************
  8298 ;; Defined at:
  8299 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
  8300 ;; Parameters:    Size  Location     Type
  8301 ;;  s               2    5[COMRAM] PTR const unsigned char 
  8302 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  8303 ;;		 -> STR_16(4), STR_14(4), STR_12(4), STR_10(4), 
  8304 ;;		 -> STR_8(4), STR_6(4), STR_4(5), main@buffer(24), 
  8305 ;;		 -> work_sw@buffer(128), 
  8306 ;; Auto vars:     Size  Location     Type
  8307 ;;  a               2    7[COMRAM] PTR const unsigned char 
  8308 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  8309 ;;		 -> STR_16(4), STR_14(4), STR_12(4), STR_10(4), 
  8310 ;;		 -> STR_8(4), STR_6(4), STR_4(5), main@buffer(24), 
  8311 ;;		 -> work_sw@buffer(128), 
  8312 ;; Return value:  Size  Location     Type
  8313 ;;                  2    5[COMRAM] unsigned int 
  8314 ;; Registers used:
  8315 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8316 ;; Tracked objects:
  8317 ;;		On entry : 0/1
  8318 ;;		On exit  : 0/0
  8319 ;;		Unchanged: 0/0
  8320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8321 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8322 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8324 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8325 ;;Total ram usage:        4 bytes
  8326 ;; Hardware stack levels used:    1
  8327 ;; Hardware stack levels required when called:    4
  8328 ;; This function calls:
  8329 ;;		Nothing
  8330 ;; This function is called by:
  8331 ;;		_eaDogM_WriteString
  8332 ;;		_pad
  8333 ;;		_stoa
  8334 ;; This function uses a non-reentrant model
  8335 ;;
  8336                           
  8337                           	psect	text52
  8338  004BFE                     __ptext52:
  8339                           	opt callstack 0
  8340  004BFE                     _strlen:
  8341                           	opt callstack 21
  8342                           
  8343                           ;incstack = 0
  8344  004BFE  0060  F018  F008   	movff	strlen@s,strlen@a
  8345  004C04  0060  F01C  F009   	movff	strlen@s+1,strlen@a+1
  8346  004C0A  D002               	goto	l6116
  8347  004C0C                     l6114:
  8348  004C0C  4A06               	infsnz	strlen@s^0,f,c
  8349  004C0E  2A07               	incf	(strlen@s+1)^0,f,c
  8350  004C10                     l6116:
  8351  004C10  0060  F01B  FFF6   	movff	strlen@s,tblptrl
  8352  004C16  0060  F01F  FFF7   	movff	strlen@s+1,tblptrh
  8353  004C1C  0E00               	movlw	low (__smallconst shr (0+16))
  8354  004C1E  6EF8               	movwf	tblptru,c
  8355  004C20  0E1F               	movlw	(high __ramtop+-1)
  8356  004C22  64F7               	cpfsgt	tblptrh,c
  8357  004C24  D003               	bra	u6027
  8358  004C26  0008               	tblrd		*
  8359  004C28  50F5               	movf	tablat,w,c
  8360  004C2A  D007               	bra	u6020
  8361  004C2C                     u6027:
  8362  004C2C  006F FFDB FFE1     	movff	tblptrl,fsr1l
  8363  004C32  006F FFDF FFE2     	movff	tblptrh,fsr1h
  8364  004C38  50E7               	movf	indf1,w,c
  8365  004C3A                     u6020:
  8366  004C3A  0900               	iorlw	0
  8367  004C3C  A4D8               	btfss	status,2,c
  8368  004C3E  D7E6               	goto	l6114
  8369  004C40  5008               	movf	strlen@a^0,w,c
  8370  004C42  5C06               	subwf	strlen@s^0,w,c
  8371  004C44  6E06               	movwf	?_strlen^0,c
  8372  004C46  5009               	movf	(strlen@a+1)^0,w,c
  8373  004C48  5807               	subwfb	(strlen@s+1)^0,w,c
  8374  004C4A  6E07               	movwf	(?_strlen+1)^0,c
  8375  004C4C  0012               	return		;funcret
  8376  004C4E                     __end_of_strlen:
  8377                           	opt callstack 0
  8378                           
  8379 ;; *************** function _fputs *****************
  8380 ;; Defined at:
  8381 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
  8382 ;; Parameters:    Size  Location     Type
  8383 ;;  s               2   16[COMRAM] PTR const unsigned char 
  8384 ;;		 -> dbuf(32), 
  8385 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  8386 ;;		 -> sprintf@f(6), NULL(0), 
  8387 ;; Auto vars:     Size  Location     Type
  8388 ;;  i               2   21[COMRAM] int 
  8389 ;;  c               1   20[COMRAM] unsigned char 
  8390 ;; Return value:  Size  Location     Type
  8391 ;;                  2   16[COMRAM] int 
  8392 ;; Registers used:
  8393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8394 ;; Tracked objects:
  8395 ;;		On entry : 0/2
  8396 ;;		On exit  : 0/0
  8397 ;;		Unchanged: 0/0
  8398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8399 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8400 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8402 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8403 ;;Total ram usage:        7 bytes
  8404 ;; Hardware stack levels used:    1
  8405 ;; Hardware stack levels required when called:    7
  8406 ;; This function calls:
  8407 ;;		_fputc
  8408 ;; This function is called by:
  8409 ;;		_pad
  8410 ;; This function uses a non-reentrant model
  8411 ;;
  8412                           
  8413                           	psect	text53
  8414  004DF2                     __ptext53:
  8415                           	opt callstack 0
  8416  004DF2                     _fputs:
  8417                           	opt callstack 17
  8418                           
  8419                           ;incstack = 0
  8420  004DF2  0E00               	movlw	0
  8421  004DF4  6E17               	movwf	(fputs@i+1)^0,c
  8422  004DF6  0E00               	movlw	0
  8423  004DF8  6E16               	movwf	fputs@i^0,c
  8424  004DFA  D00E               	goto	l6128
  8425  004DFC                     l6124:
  8426  004DFC  0060  F054  F008   	movff	fputs@c,fputc@c
  8427  004E02  6A09               	clrf	(fputc@c+1)^0,c
  8428  004E04  0060  F04C  F00A   	movff	fputs@fp,fputc@fp
  8429  004E0A  0060  F050  F00B   	movff	fputs@fp+1,fputc@fp+1
  8430  004E10  ECA9  F022         	call	_fputc	;wreg free
  8431  004E14  4A16               	infsnz	fputs@i^0,f,c
  8432  004E16  2A17               	incf	(fputs@i+1)^0,f,c
  8433  004E18                     l6128:
  8434  004E18  5016               	movf	fputs@i^0,w,c
  8435  004E1A  2411               	addwf	fputs@s^0,w,c
  8436  004E1C  6ED9               	movwf	fsr2l,c
  8437  004E1E  5017               	movf	(fputs@i+1)^0,w,c
  8438  004E20  2012               	addwfc	(fputs@s+1)^0,w,c
  8439  004E22  6EDA               	movwf	fsr2h,c
  8440  004E24  50DF               	movf	indf2,w,c
  8441  004E26  6E15               	movwf	fputs@c^0,c
  8442  004E28  5015               	movf	fputs@c^0,w,c
  8443  004E2A  B4D8               	btfsc	status,2,c
  8444  004E2C  0012               	return	
  8445  004E2E  D7E6               	goto	l6124
  8446  004E30                     __end_of_fputs:
  8447                           	opt callstack 0
  8448                           
  8449 ;; *************** function _fputc *****************
  8450 ;; Defined at:
  8451 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
  8452 ;; Parameters:    Size  Location     Type
  8453 ;;  c               2    7[COMRAM] int 
  8454 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  8455 ;;		 -> sprintf@f(6), NULL(0), 
  8456 ;; Auto vars:     Size  Location     Type
  8457 ;;		None
  8458 ;; Return value:  Size  Location     Type
  8459 ;;                  2    7[COMRAM] int 
  8460 ;; Registers used:
  8461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8462 ;; Tracked objects:
  8463 ;;		On entry : 0/0
  8464 ;;		On exit  : 0/0
  8465 ;;		Unchanged: 0/0
  8466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8467 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8469 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8470 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8471 ;;Total ram usage:        9 bytes
  8472 ;; Hardware stack levels used:    1
  8473 ;; Hardware stack levels required when called:    6
  8474 ;; This function calls:
  8475 ;;		_putch
  8476 ;; This function is called by:
  8477 ;;		_pad
  8478 ;;		_stoa
  8479 ;;		_vfpfcnvrt
  8480 ;;		_fputs
  8481 ;; This function uses a non-reentrant model
  8482 ;;
  8483                           
  8484                           	psect	text54
  8485  004552                     __ptext54:
  8486                           	opt callstack 0
  8487  004552                     _fputc:
  8488                           	opt callstack 19
  8489                           
  8490                           ;incstack = 0
  8491  004552  500A               	movf	fputc@fp^0,w,c
  8492  004554  100B               	iorwf	(fputc@fp+1)^0,w,c
  8493  004556  B4D8               	btfsc	status,2,c
  8494  004558  D004               	goto	u5990
  8495  00455A  500A               	movf	fputc@fp^0,w,c
  8496  00455C  100B               	iorwf	(fputc@fp+1)^0,w,c
  8497  00455E  A4D8               	btfss	status,2,c
  8498  004560  D004               	goto	l6104
  8499  004562                     u5990:
  8500  004562  5008               	movf	fputc@c^0,w,c
  8501  004564  EC63  F02A         	call	_putch
  8502  004568  0012               	return	
  8503  00456A                     l6104:
  8504  00456A  EE20 F004          	lfsr	2,4
  8505  00456E  500A               	movf	fputc@fp^0,w,c
  8506  004570  26D9               	addwf	fsr2l,f,c
  8507  004572  500B               	movf	(fputc@fp+1)^0,w,c
  8508  004574  22DA               	addwfc	fsr2h,f,c
  8509  004576  50DE               	movf	postinc2,w,c
  8510  004578  10DE               	iorwf	postinc2,w,c
  8511  00457A  B4D8               	btfsc	status,2,c
  8512  00457C  D016               	goto	u6010
  8513  00457E  EE20 F004          	lfsr	2,4
  8514  004582  500A               	movf	fputc@fp^0,w,c
  8515  004584  26D9               	addwf	fsr2l,f,c
  8516  004586  500B               	movf	(fputc@fp+1)^0,w,c
  8517  004588  22DA               	addwfc	fsr2h,f,c
  8518  00458A  EE10 F002          	lfsr	1,2
  8519  00458E  500A               	movf	fputc@fp^0,w,c
  8520  004590  26E1               	addwf	fsr1l,f,c
  8521  004592  500B               	movf	(fputc@fp+1)^0,w,c
  8522  004594  22E2               	addwfc	fsr1h,f,c
  8523  004596  50DE               	movf	postinc2,w,c
  8524  004598  5CE6               	subwf	postinc1,w,c
  8525  00459A  50E6               	movf	postinc1,w,c
  8526  00459C  0A80               	xorlw	128
  8527  00459E  6E10               	movwf	(??_fputc+4)^0,c
  8528  0045A0  50DE               	movf	postinc2,w,c
  8529  0045A2  0A80               	xorlw	128
  8530  0045A4  5810               	subwfb	(??_fputc+4)^0,w,c
  8531  0045A6  B0D8               	btfsc	status,0,c
  8532  0045A8  0012               	return	
  8533  0045AA                     u6010:
  8534  0045AA  EE20 F002          	lfsr	2,2
  8535  0045AE  500A               	movf	fputc@fp^0,w,c
  8536  0045B0  26D9               	addwf	fsr2l,f,c
  8537  0045B2  500B               	movf	(fputc@fp+1)^0,w,c
  8538  0045B4  22DA               	addwfc	fsr2h,f,c
  8539  0045B6  006F FF78  F00C    	movff	postinc2,??_fputc
  8540  0045BC  006F FF74  F00D    	movff	postdec2,??_fputc+1
  8541  0045C2  0060  F02B  FFD9   	movff	fputc@fp,fsr2l
  8542  0045C8  0060  F02F  FFDA   	movff	fputc@fp+1,fsr2h
  8543  0045CE  006F FF78  F00E    	movff	postinc2,??_fputc+2
  8544  0045D4  006F FF74  F00F    	movff	postdec2,??_fputc+3
  8545  0045DA  500C               	movf	??_fputc^0,w,c
  8546  0045DC  240E               	addwf	(??_fputc+2)^0,w,c
  8547  0045DE  6ED9               	movwf	fsr2l,c
  8548  0045E0  500D               	movf	(??_fputc+1)^0,w,c
  8549  0045E2  200F               	addwfc	(??_fputc+3)^0,w,c
  8550  0045E4  6EDA               	movwf	fsr2h,c
  8551  0045E6  0060  F023  FFDF   	movff	fputc@c,indf2
  8552  0045EC  EE20 F002          	lfsr	2,2
  8553  0045F0  500A               	movf	fputc@fp^0,w,c
  8554  0045F2  26D9               	addwf	fsr2l,f,c
  8555  0045F4  500B               	movf	(fputc@fp+1)^0,w,c
  8556  0045F6  22DA               	addwfc	fsr2h,f,c
  8557  0045F8  2ADE               	incf	postinc2,f,c
  8558  0045FA  0E00               	movlw	0
  8559  0045FC  22DD               	addwfc	postdec2,f,c
  8560  0045FE  0012               	return		;funcret
  8561  004600                     __end_of_fputc:
  8562                           	opt callstack 0
  8563                           
  8564 ;; *************** function _putch *****************
  8565 ;; Defined at:
  8566 ;;		line 221 in file "mcc_generated_files/uart2.c"
  8567 ;; Parameters:    Size  Location     Type
  8568 ;;  txData          1    wreg     unsigned char 
  8569 ;; Auto vars:     Size  Location     Type
  8570 ;;  txData          1    6[COMRAM] unsigned char 
  8571 ;; Return value:  Size  Location     Type
  8572 ;;                  1    wreg      void 
  8573 ;; Registers used:
  8574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8575 ;; Tracked objects:
  8576 ;;		On entry : 0/0
  8577 ;;		On exit  : 3F/39
  8578 ;;		Unchanged: 0/0
  8579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8581 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8583 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8584 ;;Total ram usage:        1 bytes
  8585 ;; Hardware stack levels used:    1
  8586 ;; Hardware stack levels required when called:    5
  8587 ;; This function calls:
  8588 ;;		_UART2_Write
  8589 ;; This function is called by:
  8590 ;;		_fputc
  8591 ;; This function uses a non-reentrant model
  8592 ;;
  8593                           
  8594                           	psect	text55
  8595  0054C6                     __ptext55:
  8596                           	opt callstack 0
  8597  0054C6                     _putch:
  8598                           	opt callstack 19
  8599                           
  8600                           ;incstack = 0
  8601                           ;putch@txData stored from wreg
  8602  0054C6  6E07               	movwf	putch@txData^0,c
  8603                           
  8604                           ;mcc_generated_files/uart2.c: 221: void putch(char txData);mcc_generated_files/uart2.c: 
      +                          222: {;mcc_generated_files/uart2.c: 223:     UART2_Write(txData);
  8605  0054C8  5007               	movf	putch@txData^0,w,c
  8606  0054CA  ECD8  F026         	call	_UART2_Write
  8607                           
  8608                           ; BSR set to: 57
  8609  0054CE  0012               	return		;funcret
  8610  0054D0                     __end_of_putch:
  8611                           	opt callstack 0
  8612                           
  8613 ;; *************** function _UART2_Write *****************
  8614 ;; Defined at:
  8615 ;;		line 193 in file "mcc_generated_files/uart2.c"
  8616 ;; Parameters:    Size  Location     Type
  8617 ;;  txData          1    wreg     unsigned char 
  8618 ;; Auto vars:     Size  Location     Type
  8619 ;;  txData          1    5[COMRAM] unsigned char 
  8620 ;; Return value:  Size  Location     Type
  8621 ;;                  1    wreg      void 
  8622 ;; Registers used:
  8623 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8624 ;; Tracked objects:
  8625 ;;		On entry : 0/0
  8626 ;;		On exit  : 3F/39
  8627 ;;		Unchanged: 0/0
  8628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8630 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8632 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8633 ;;Total ram usage:        1 bytes
  8634 ;; Hardware stack levels used:    1
  8635 ;; Hardware stack levels required when called:    4
  8636 ;; This function calls:
  8637 ;;		Nothing
  8638 ;; This function is called by:
  8639 ;;		_putch
  8640 ;;		_Digital232_RW
  8641 ;; This function uses a non-reentrant model
  8642 ;;
  8643                           
  8644                           	psect	text56
  8645  004DB0                     __ptext56:
  8646                           	opt callstack 0
  8647  004DB0                     _UART2_Write:
  8648                           	opt callstack 19
  8649                           
  8650                           ; BSR set to: 57
  8651                           ;incstack = 0
  8652                           ;UART2_Write@txData stored from wreg
  8653  004DB0  6E06               	movwf	UART2_Write@txData^0,c
  8654  004DB2                     
  8655                           ;mcc_generated_files/uart2.c: 195:     while(0 == uart2TxBufferRemaining)
  8656                           
  8657                           ;mcc_generated_files/uart2.c: 193: void UART2_Write(uint8_t txData);mcc_generated_files/
      +                          uart2.c: 194: {;mcc_generated_files/uart2.c: 195:     while(0 == uart2TxBufferRemaining)
  8658  004DB2  0100               	movlb	0	; () banked
  8659  004DB4  51A4               	movf	_uart2TxBufferRemaining& (0+255),w,b	;volatile
  8660  004DB6  B4D8               	btfsc	status,2,c
  8661  004DB8  D7FC               	goto	l6078
  8662                           
  8663                           ; BSR set to: 0
  8664                           ;mcc_generated_files/uart2.c: 199:     if(0 == PIE6bits.U2TXIE)
  8665  004DBA  0139               	movlb	57	; () banked
  8666  004DBC  B796               	btfsc	150,3,b	;volatile
  8667  004DBE  D004               	goto	l494
  8668                           
  8669                           ; BSR set to: 57
  8670                           ;mcc_generated_files/uart2.c: 200:     {;mcc_generated_files/uart2.c: 201:         U2TXB
      +                           = txData;
  8671  004DC0  0060  F01B  FDD2   	movff	UART2_Write@txData,15826	;volatile
  8672                           
  8673                           ;mcc_generated_files/uart2.c: 202:     }
  8674  004DC6  D012               	goto	l6094
  8675  004DC8                     l494:
  8676                           
  8677                           ; BSR set to: 57
  8678                           ;mcc_generated_files/uart2.c: 204:     {;mcc_generated_files/uart2.c: 205:         PIE6b
      +                          its.U2TXIE = 0;
  8679  004DC8  9796               	bcf	150,3,b	;volatile
  8680                           
  8681                           ; BSR set to: 57
  8682                           ;mcc_generated_files/uart2.c: 206:         uart2TxBuffer[uart2TxHead++] = txData;
  8683  004DCA  0E42               	movlw	low _uart2TxBuffer
  8684  004DCC  0100               	movlb	0	; () banked
  8685  004DCE  25A6               	addwf	_uart2TxHead& (0+255),w,b	;volatile
  8686  004DD0  6ED9               	movwf	fsr2l,c
  8687  004DD2  6ADA               	clrf	fsr2h,c
  8688  004DD4  0E01               	movlw	high _uart2TxBuffer
  8689  004DD6  22DA               	addwfc	fsr2h,f,c
  8690  004DD8  0060  F01B  FFDF   	movff	UART2_Write@txData,indf2
  8691                           
  8692                           ; BSR set to: 0
  8693  004DDE  2BA6               	incf	_uart2TxHead& (0+255),f,b	;volatile
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;mcc_generated_files/uart2.c: 207:         if(sizeof(uart2TxBuffer) <= uart2TxHead)
  8697  004DE0  0E07               	movlw	7
  8698  004DE2  65A6               	cpfsgt	_uart2TxHead& (0+255),b
  8699  004DE4  D002               	goto	l6092
  8700                           
  8701                           ; BSR set to: 0
  8702                           ;mcc_generated_files/uart2.c: 208:         {;mcc_generated_files/uart2.c: 209:          
      +                             uart2TxHead = 0;
  8703  004DE6  0E00               	movlw	0
  8704  004DE8  6FA6               	movwf	_uart2TxHead& (0+255),b	;volatile
  8705  004DEA                     l6092:
  8706                           
  8707                           ; BSR set to: 0
  8708                           ;mcc_generated_files/uart2.c: 211:         uart2TxBufferRemaining--;
  8709  004DEA  07A4               	decf	_uart2TxBufferRemaining& (0+255),f,b	;volatile
  8710  004DEC                     l6094:
  8711                           
  8712                           ;mcc_generated_files/uart2.c: 213:     PIE6bits.U2TXIE = 1;
  8713  004DEC  0139               	movlb	57	; () banked
  8714  004DEE  8796               	bsf	150,3,b	;volatile
  8715                           
  8716                           ; BSR set to: 57
  8717  004DF0  0012               	return		;funcret
  8718  004DF2                     __end_of_UART2_Write:
  8719                           	opt callstack 0
  8720                           
  8721 ;; *************** function _abs *****************
  8722 ;; Defined at:
  8723 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
  8724 ;; Parameters:    Size  Location     Type
  8725 ;;  a               2   23[COMRAM] int 
  8726 ;; Auto vars:     Size  Location     Type
  8727 ;;		None
  8728 ;; Return value:  Size  Location     Type
  8729 ;;                  2   23[COMRAM] int 
  8730 ;; Registers used:
  8731 ;;		wreg, status,2, status,0
  8732 ;; Tracked objects:
  8733 ;;		On entry : 0/2
  8734 ;;		On exit  : 0/0
  8735 ;;		Unchanged: 0/0
  8736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8737 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8739 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8740 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8741 ;;Total ram usage:        4 bytes
  8742 ;; Hardware stack levels used:    1
  8743 ;; Hardware stack levels required when called:    4
  8744 ;; This function calls:
  8745 ;;		Nothing
  8746 ;; This function is called by:
  8747 ;;		_dtoa
  8748 ;; This function uses a non-reentrant model
  8749 ;;
  8750                           
  8751                           	psect	text57
  8752  004E30                     __ptext57:
  8753                           	opt callstack 0
  8754  004E30                     _abs:
  8755                           	opt callstack 21
  8756                           
  8757                           ; BSR set to: 57
  8758                           ;incstack = 0
  8759  004E30  BE19               	btfsc	(abs@a+1)^0,7,c
  8760  004E32  D005               	goto	u6090
  8761  004E34  5019               	movf	(abs@a+1)^0,w,c
  8762  004E36  E114               	bnz	l2105
  8763  004E38  0418               	decf	abs@a^0,w,c
  8764  004E3A  B0D8               	btfsc	status,0,c
  8765  004E3C  D011               	goto	l2105
  8766  004E3E                     u6090:
  8767  004E3E  0060  F060  F01A   	movff	abs@a,??_abs
  8768  004E44  0060  F064  F01B   	movff	abs@a+1,??_abs+1
  8769  004E4A  1E1A               	comf	??_abs^0,f,c
  8770  004E4C  1E1B               	comf	(??_abs+1)^0,f,c
  8771  004E4E  4A1A               	infsnz	??_abs^0,f,c
  8772  004E50  2A1B               	incf	(??_abs+1)^0,f,c
  8773  004E52  0060  F068  F018   	movff	??_abs,?_abs
  8774  004E58  0060  F06C  F019   	movff	??_abs+1,?_abs+1
  8775  004E5E  0012               	return	
  8776  004E60                     l2105:
  8777  004E60  0060  F060  F018   	movff	abs@a,?_abs
  8778  004E66  0060  F064  F019   	movff	abs@a+1,?_abs+1
  8779  004E6C  0012               	return		;funcret
  8780  004E6E                     __end_of_abs:
  8781                           	opt callstack 0
  8782                           
  8783 ;; *************** function ___aomod *****************
  8784 ;; Defined at:
  8785 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
  8786 ;; Parameters:    Size  Location     Type
  8787 ;;  dividend        8    5[COMRAM] long long 
  8788 ;;  divisor         8   13[COMRAM] long long 
  8789 ;; Auto vars:     Size  Location     Type
  8790 ;;  sign            1   22[COMRAM] unsigned char 
  8791 ;;  counter         1   21[COMRAM] unsigned char 
  8792 ;; Return value:  Size  Location     Type
  8793 ;;                  8    5[COMRAM] long long 
  8794 ;; Registers used:
  8795 ;;		wreg, status,2, status,0
  8796 ;; Tracked objects:
  8797 ;;		On entry : 0/2
  8798 ;;		On exit  : 0/0
  8799 ;;		Unchanged: 0/0
  8800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8801 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8802 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8804 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8805 ;;Total ram usage:       18 bytes
  8806 ;; Hardware stack levels used:    1
  8807 ;; Hardware stack levels required when called:    4
  8808 ;; This function calls:
  8809 ;;		Nothing
  8810 ;; This function is called by:
  8811 ;;		_dtoa
  8812 ;; This function uses a non-reentrant model
  8813 ;;
  8814                           
  8815                           	psect	text58
  8816  003E10                     __ptext58:
  8817                           	opt callstack 0
  8818  003E10                     ___aomod:
  8819                           	opt callstack 21
  8820                           
  8821                           ;incstack = 0
  8822  003E10  0E00               	movlw	0
  8823  003E12  6E17               	movwf	___aomod@sign^0,c
  8824  003E14  AE0D               	btfss	(___aomod@dividend+7)^0,7,c
  8825  003E16  D012               	goto	l6208
  8826  003E18  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  8827  003E1A  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  8828  003E1C  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  8829  003E1E  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  8830  003E20  1E09               	comf	(___aomod@dividend+3)^0,f,c
  8831  003E22  1E08               	comf	(___aomod@dividend+2)^0,f,c
  8832  003E24  1E07               	comf	(___aomod@dividend+1)^0,f,c
  8833  003E26  6C06               	negf	___aomod@dividend^0,c
  8834  003E28  0E00               	movlw	0
  8835  003E2A  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  8836  003E2C  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  8837  003E2E  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  8838  003E30  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  8839  003E32  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  8840  003E34  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  8841  003E36  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  8842  003E38  0E01               	movlw	1
  8843  003E3A  6E17               	movwf	___aomod@sign^0,c
  8844  003E3C                     l6208:
  8845  003E3C  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  8846  003E3E  D010               	goto	l6212
  8847  003E40  1E15               	comf	(___aomod@divisor+7)^0,f,c
  8848  003E42  1E14               	comf	(___aomod@divisor+6)^0,f,c
  8849  003E44  1E13               	comf	(___aomod@divisor+5)^0,f,c
  8850  003E46  1E12               	comf	(___aomod@divisor+4)^0,f,c
  8851  003E48  1E11               	comf	(___aomod@divisor+3)^0,f,c
  8852  003E4A  1E10               	comf	(___aomod@divisor+2)^0,f,c
  8853  003E4C  1E0F               	comf	(___aomod@divisor+1)^0,f,c
  8854  003E4E  6C0E               	negf	___aomod@divisor^0,c
  8855  003E50  0E00               	movlw	0
  8856  003E52  220F               	addwfc	(___aomod@divisor+1)^0,f,c
  8857  003E54  2210               	addwfc	(___aomod@divisor+2)^0,f,c
  8858  003E56  2211               	addwfc	(___aomod@divisor+3)^0,f,c
  8859  003E58  2212               	addwfc	(___aomod@divisor+4)^0,f,c
  8860  003E5A  2213               	addwfc	(___aomod@divisor+5)^0,f,c
  8861  003E5C  2214               	addwfc	(___aomod@divisor+6)^0,f,c
  8862  003E5E  2215               	addwfc	(___aomod@divisor+7)^0,f,c
  8863  003E60                     l6212:
  8864  003E60  500E               	movf	___aomod@divisor^0,w,c
  8865  003E62  100F               	iorwf	(___aomod@divisor+1)^0,w,c
  8866  003E64  1010               	iorwf	(___aomod@divisor+2)^0,w,c
  8867  003E66  1011               	iorwf	(___aomod@divisor+3)^0,w,c
  8868  003E68  1012               	iorwf	(___aomod@divisor+4)^0,w,c
  8869  003E6A  1013               	iorwf	(___aomod@divisor+5)^0,w,c
  8870  003E6C  1014               	iorwf	(___aomod@divisor+6)^0,w,c
  8871  003E6E  1015               	iorwf	(___aomod@divisor+7)^0,w,c
  8872  003E70  B4D8               	btfsc	status,2,c
  8873  003E72  D03C               	goto	l6228
  8874  003E74  0E01               	movlw	1
  8875  003E76  6E16               	movwf	___aomod@counter^0,c
  8876  003E78  D00A               	goto	l6218
  8877  003E7A                     l6216:
  8878  003E7A  90D8               	bcf	status,0,c
  8879  003E7C  360E               	rlcf	___aomod@divisor^0,f,c
  8880  003E7E  360F               	rlcf	(___aomod@divisor+1)^0,f,c
  8881  003E80  3610               	rlcf	(___aomod@divisor+2)^0,f,c
  8882  003E82  3611               	rlcf	(___aomod@divisor+3)^0,f,c
  8883  003E84  3612               	rlcf	(___aomod@divisor+4)^0,f,c
  8884  003E86  3613               	rlcf	(___aomod@divisor+5)^0,f,c
  8885  003E88  3614               	rlcf	(___aomod@divisor+6)^0,f,c
  8886  003E8A  3615               	rlcf	(___aomod@divisor+7)^0,f,c
  8887  003E8C  2A16               	incf	___aomod@counter^0,f,c
  8888  003E8E                     l6218:
  8889  003E8E  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  8890  003E90  D7F4               	goto	l6216
  8891  003E92                     u6200:
  8892  003E92  500E               	movf	___aomod@divisor^0,w,c
  8893  003E94  5C06               	subwf	___aomod@dividend^0,w,c
  8894  003E96  500F               	movf	(___aomod@divisor+1)^0,w,c
  8895  003E98  5807               	subwfb	(___aomod@dividend+1)^0,w,c
  8896  003E9A  5010               	movf	(___aomod@divisor+2)^0,w,c
  8897  003E9C  5808               	subwfb	(___aomod@dividend+2)^0,w,c
  8898  003E9E  5011               	movf	(___aomod@divisor+3)^0,w,c
  8899  003EA0  5809               	subwfb	(___aomod@dividend+3)^0,w,c
  8900  003EA2  5012               	movf	(___aomod@divisor+4)^0,w,c
  8901  003EA4  580A               	subwfb	(___aomod@dividend+4)^0,w,c
  8902  003EA6  5013               	movf	(___aomod@divisor+5)^0,w,c
  8903  003EA8  580B               	subwfb	(___aomod@dividend+5)^0,w,c
  8904  003EAA  5014               	movf	(___aomod@divisor+6)^0,w,c
  8905  003EAC  580C               	subwfb	(___aomod@dividend+6)^0,w,c
  8906  003EAE  5015               	movf	(___aomod@divisor+7)^0,w,c
  8907  003EB0  580D               	subwfb	(___aomod@dividend+7)^0,w,c
  8908  003EB2  A0D8               	btfss	status,0,c
  8909  003EB4  D010               	goto	l6224
  8910  003EB6  500E               	movf	___aomod@divisor^0,w,c
  8911  003EB8  5E06               	subwf	___aomod@dividend^0,f,c
  8912  003EBA  500F               	movf	(___aomod@divisor+1)^0,w,c
  8913  003EBC  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
  8914  003EBE  5010               	movf	(___aomod@divisor+2)^0,w,c
  8915  003EC0  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
  8916  003EC2  5011               	movf	(___aomod@divisor+3)^0,w,c
  8917  003EC4  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
  8918  003EC6  5012               	movf	(___aomod@divisor+4)^0,w,c
  8919  003EC8  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
  8920  003ECA  5013               	movf	(___aomod@divisor+5)^0,w,c
  8921  003ECC  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
  8922  003ECE  5014               	movf	(___aomod@divisor+6)^0,w,c
  8923  003ED0  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
  8924  003ED2  5015               	movf	(___aomod@divisor+7)^0,w,c
  8925  003ED4  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
  8926  003ED6                     l6224:
  8927  003ED6  90D8               	bcf	status,0,c
  8928  003ED8  3215               	rrcf	(___aomod@divisor+7)^0,f,c
  8929  003EDA  3214               	rrcf	(___aomod@divisor+6)^0,f,c
  8930  003EDC  3213               	rrcf	(___aomod@divisor+5)^0,f,c
  8931  003EDE  3212               	rrcf	(___aomod@divisor+4)^0,f,c
  8932  003EE0  3211               	rrcf	(___aomod@divisor+3)^0,f,c
  8933  003EE2  3210               	rrcf	(___aomod@divisor+2)^0,f,c
  8934  003EE4  320F               	rrcf	(___aomod@divisor+1)^0,f,c
  8935  003EE6  320E               	rrcf	___aomod@divisor^0,f,c
  8936  003EE8  2E16               	decfsz	___aomod@counter^0,f,c
  8937  003EEA  D7D3               	goto	u6200
  8938  003EEC                     l6228:
  8939  003EEC  5017               	movf	___aomod@sign^0,w,c
  8940  003EEE  B4D8               	btfsc	status,2,c
  8941  003EF0  D010               	goto	l6232
  8942  003EF2  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  8943  003EF4  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  8944  003EF6  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  8945  003EF8  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  8946  003EFA  1E09               	comf	(___aomod@dividend+3)^0,f,c
  8947  003EFC  1E08               	comf	(___aomod@dividend+2)^0,f,c
  8948  003EFE  1E07               	comf	(___aomod@dividend+1)^0,f,c
  8949  003F00  6C06               	negf	___aomod@dividend^0,c
  8950  003F02  0E00               	movlw	0
  8951  003F04  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  8952  003F06  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  8953  003F08  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  8954  003F0A  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  8955  003F0C  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  8956  003F0E  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  8957  003F10  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  8958  003F12                     l6232:
  8959  003F12  0060  F018  F006   	movff	___aomod@dividend,?___aomod
  8960  003F18  0060  F01C  F007   	movff	___aomod@dividend+1,?___aomod+1
  8961  003F1E  0060  F020  F008   	movff	___aomod@dividend+2,?___aomod+2
  8962  003F24  0060  F024  F009   	movff	___aomod@dividend+3,?___aomod+3
  8963  003F2A  0060  F028  F00A   	movff	___aomod@dividend+4,?___aomod+4
  8964  003F30  0060  F02C  F00B   	movff	___aomod@dividend+5,?___aomod+5
  8965  003F36  0060  F030  F00C   	movff	___aomod@dividend+6,?___aomod+6
  8966  003F3C  0060  F034  F00D   	movff	___aomod@dividend+7,?___aomod+7
  8967  003F42  0012               	return		;funcret
  8968  003F44                     __end_of___aomod:
  8969                           	opt callstack 0
  8970                           
  8971 ;; *************** function ___aodiv *****************
  8972 ;; Defined at:
  8973 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
  8974 ;; Parameters:    Size  Location     Type
  8975 ;;  dividend        8    5[COMRAM] long long 
  8976 ;;  divisor         8   13[COMRAM] long long 
  8977 ;; Auto vars:     Size  Location     Type
  8978 ;;  quotient        8   23[COMRAM] long long 
  8979 ;;  sign            1   22[COMRAM] unsigned char 
  8980 ;;  counter         1   21[COMRAM] unsigned char 
  8981 ;; Return value:  Size  Location     Type
  8982 ;;                  8    5[COMRAM] long long 
  8983 ;; Registers used:
  8984 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8985 ;; Tracked objects:
  8986 ;;		On entry : 0/2
  8987 ;;		On exit  : 0/0
  8988 ;;		Unchanged: 0/0
  8989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8990 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8991 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8993 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8994 ;;Total ram usage:       26 bytes
  8995 ;; Hardware stack levels used:    1
  8996 ;; Hardware stack levels required when called:    4
  8997 ;; This function calls:
  8998 ;;		Nothing
  8999 ;; This function is called by:
  9000 ;;		_dtoa
  9001 ;; This function uses a non-reentrant model
  9002 ;;
  9003                           
  9004                           	psect	text59
  9005  003CB8                     __ptext59:
  9006                           	opt callstack 0
  9007  003CB8                     ___aodiv:
  9008                           	opt callstack 21
  9009                           
  9010                           ;incstack = 0
  9011  003CB8  0E00               	movlw	0
  9012  003CBA  6E17               	movwf	___aodiv@sign^0,c
  9013  003CBC  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  9014  003CBE  D012               	goto	l6164
  9015  003CC0  1E15               	comf	(___aodiv@divisor+7)^0,f,c
  9016  003CC2  1E14               	comf	(___aodiv@divisor+6)^0,f,c
  9017  003CC4  1E13               	comf	(___aodiv@divisor+5)^0,f,c
  9018  003CC6  1E12               	comf	(___aodiv@divisor+4)^0,f,c
  9019  003CC8  1E11               	comf	(___aodiv@divisor+3)^0,f,c
  9020  003CCA  1E10               	comf	(___aodiv@divisor+2)^0,f,c
  9021  003CCC  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
  9022  003CCE  6C0E               	negf	___aodiv@divisor^0,c
  9023  003CD0  0E00               	movlw	0
  9024  003CD2  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
  9025  003CD4  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
  9026  003CD6  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
  9027  003CD8  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
  9028  003CDA  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
  9029  003CDC  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
  9030  003CDE  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
  9031  003CE0  0E01               	movlw	1
  9032  003CE2  6E17               	movwf	___aodiv@sign^0,c
  9033  003CE4                     l6164:
  9034  003CE4  AE0D               	btfss	(___aodiv@dividend+7)^0,7,c
  9035  003CE6  D012               	goto	l6170
  9036  003CE8  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
  9037  003CEA  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
  9038  003CEC  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
  9039  003CEE  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
  9040  003CF0  1E09               	comf	(___aodiv@dividend+3)^0,f,c
  9041  003CF2  1E08               	comf	(___aodiv@dividend+2)^0,f,c
  9042  003CF4  1E07               	comf	(___aodiv@dividend+1)^0,f,c
  9043  003CF6  6C06               	negf	___aodiv@dividend^0,c
  9044  003CF8  0E00               	movlw	0
  9045  003CFA  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
  9046  003CFC  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
  9047  003CFE  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
  9048  003D00  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
  9049  003D02  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
  9050  003D04  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
  9051  003D06  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
  9052  003D08  0E01               	movlw	1
  9053  003D0A  1A17               	xorwf	___aodiv@sign^0,f,c
  9054  003D0C                     l6170:
  9055  003D0C  EE20  F018         	lfsr	2,___aodiv@quotient
  9056  003D10  0E07               	movlw	7
  9057  003D12                     u6121:
  9058  003D12  6ADE               	clrf	postinc2,c
  9059  003D14  06E8               	decf	wreg,f,c
  9060  003D16  E2FD               	bc	u6121
  9061  003D18  500E               	movf	___aodiv@divisor^0,w,c
  9062  003D1A  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
  9063  003D1C  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
  9064  003D1E  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
  9065  003D20  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
  9066  003D22  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
  9067  003D24  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
  9068  003D26  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
  9069  003D28  B4D8               	btfsc	status,2,c
  9070  003D2A  D046               	goto	l6192
  9071  003D2C  0E01               	movlw	1
  9072  003D2E  6E16               	movwf	___aodiv@counter^0,c
  9073  003D30  D00A               	goto	l6178
  9074  003D32                     l6176:
  9075  003D32  90D8               	bcf	status,0,c
  9076  003D34  360E               	rlcf	___aodiv@divisor^0,f,c
  9077  003D36  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
  9078  003D38  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
  9079  003D3A  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
  9080  003D3C  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
  9081  003D3E  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
  9082  003D40  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
  9083  003D42  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
  9084  003D44  2A16               	incf	___aodiv@counter^0,f,c
  9085  003D46                     l6178:
  9086  003D46  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  9087  003D48  D7F4               	goto	l6176
  9088  003D4A                     u6140:
  9089  003D4A  90D8               	bcf	status,0,c
  9090  003D4C  3618               	rlcf	___aodiv@quotient^0,f,c
  9091  003D4E  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
  9092  003D50  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
  9093  003D52  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
  9094  003D54  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
  9095  003D56  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
  9096  003D58  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
  9097  003D5A  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
  9098  003D5C  500E               	movf	___aodiv@divisor^0,w,c
  9099  003D5E  5C06               	subwf	___aodiv@dividend^0,w,c
  9100  003D60  500F               	movf	(___aodiv@divisor+1)^0,w,c
  9101  003D62  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
  9102  003D64  5010               	movf	(___aodiv@divisor+2)^0,w,c
  9103  003D66  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
  9104  003D68  5011               	movf	(___aodiv@divisor+3)^0,w,c
  9105  003D6A  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
  9106  003D6C  5012               	movf	(___aodiv@divisor+4)^0,w,c
  9107  003D6E  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
  9108  003D70  5013               	movf	(___aodiv@divisor+5)^0,w,c
  9109  003D72  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
  9110  003D74  5014               	movf	(___aodiv@divisor+6)^0,w,c
  9111  003D76  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
  9112  003D78  5015               	movf	(___aodiv@divisor+7)^0,w,c
  9113  003D7A  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
  9114  003D7C  A0D8               	btfss	status,0,c
  9115  003D7E  D011               	goto	l6188
  9116  003D80  500E               	movf	___aodiv@divisor^0,w,c
  9117  003D82  5E06               	subwf	___aodiv@dividend^0,f,c
  9118  003D84  500F               	movf	(___aodiv@divisor+1)^0,w,c
  9119  003D86  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
  9120  003D88  5010               	movf	(___aodiv@divisor+2)^0,w,c
  9121  003D8A  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
  9122  003D8C  5011               	movf	(___aodiv@divisor+3)^0,w,c
  9123  003D8E  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
  9124  003D90  5012               	movf	(___aodiv@divisor+4)^0,w,c
  9125  003D92  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
  9126  003D94  5013               	movf	(___aodiv@divisor+5)^0,w,c
  9127  003D96  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
  9128  003D98  5014               	movf	(___aodiv@divisor+6)^0,w,c
  9129  003D9A  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
  9130  003D9C  5015               	movf	(___aodiv@divisor+7)^0,w,c
  9131  003D9E  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
  9132  003DA0  8018               	bsf	___aodiv@quotient^0,0,c
  9133  003DA2                     l6188:
  9134  003DA2  90D8               	bcf	status,0,c
  9135  003DA4  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
  9136  003DA6  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
  9137  003DA8  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
  9138  003DAA  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
  9139  003DAC  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
  9140  003DAE  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
  9141  003DB0  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
  9142  003DB2  320E               	rrcf	___aodiv@divisor^0,f,c
  9143  003DB4  2E16               	decfsz	___aodiv@counter^0,f,c
  9144  003DB6  D7C9               	goto	u6140
  9145  003DB8                     l6192:
  9146  003DB8  5017               	movf	___aodiv@sign^0,w,c
  9147  003DBA  B4D8               	btfsc	status,2,c
  9148  003DBC  D010               	goto	l6196
  9149  003DBE  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
  9150  003DC0  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
  9151  003DC2  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
  9152  003DC4  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
  9153  003DC6  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
  9154  003DC8  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
  9155  003DCA  1E19               	comf	(___aodiv@quotient+1)^0,f,c
  9156  003DCC  6C18               	negf	___aodiv@quotient^0,c
  9157  003DCE  0E00               	movlw	0
  9158  003DD0  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
  9159  003DD2  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
  9160  003DD4  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
  9161  003DD6  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
  9162  003DD8  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
  9163  003DDA  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
  9164  003DDC  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
  9165  003DDE                     l6196:
  9166  003DDE  0060  F060  F006   	movff	___aodiv@quotient,?___aodiv
  9167  003DE4  0060  F064  F007   	movff	___aodiv@quotient+1,?___aodiv+1
  9168  003DEA  0060  F068  F008   	movff	___aodiv@quotient+2,?___aodiv+2
  9169  003DF0  0060  F06C  F009   	movff	___aodiv@quotient+3,?___aodiv+3
  9170  003DF6  0060  F070  F00A   	movff	___aodiv@quotient+4,?___aodiv+4
  9171  003DFC  0060  F074  F00B   	movff	___aodiv@quotient+5,?___aodiv+5
  9172  003E02  0060  F078  F00C   	movff	___aodiv@quotient+6,?___aodiv+6
  9173  003E08  0060  F07C  F00D   	movff	___aodiv@quotient+7,?___aodiv+7
  9174  003E0E  0012               	return		;funcret
  9175  003E10                     __end_of___aodiv:
  9176                           	opt callstack 0
  9177                           
  9178 ;; *************** function _calc_pot *****************
  9179 ;; Defined at:
  9180 ;;		line 57 in file "d232.c"
  9181 ;; Parameters:    Size  Location     Type
  9182 ;;  value           2   26[BANK0 ] unsigned short 
  9183 ;; Auto vars:     Size  Location     Type
  9184 ;;		None
  9185 ;; Return value:  Size  Location     Type
  9186 ;;                  2   26[BANK0 ] short 
  9187 ;; Registers used:
  9188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9189 ;; Tracked objects:
  9190 ;;		On entry : 3F/3E
  9191 ;;		On exit  : 3F/1
  9192 ;;		Unchanged: 0/0
  9193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9194 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9196 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9197 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9198 ;;Total ram usage:        4 bytes
  9199 ;; Hardware stack levels used:    1
  9200 ;; Hardware stack levels required when called:    7
  9201 ;; This function calls:
  9202 ;;		___flmul
  9203 ;;		___fltol
  9204 ;;		___xxtofl
  9205 ;;		_lp_filter
  9206 ;; This function is called by:
  9207 ;;		_Digital232_RW
  9208 ;; This function uses a non-reentrant model
  9209 ;;
  9210                           
  9211                           	psect	text60
  9212  003F44                     __ptext60:
  9213                           	opt callstack 0
  9214  003F44                     _calc_pot:
  9215                           	opt callstack 22
  9216                           
  9217                           ; BSR set to: 62
  9218                           ;d232.c: 57: int16_t calc_pot(adc_result_t value);d232.c: 58: {;d232.c: 59:  if (value <
      +                           otto_b1.offset)
  9219                           
  9220                           ;incstack = 0
  9221  003F44  0101               	movlb	1	; () banked
  9222  003F46  51D2               	movf	_otto_b1& (0+255),w,b
  9223  003F48  0100               	movlb	0	; () banked
  9224  003F4A  5D7A               	subwf	calc_pot@value& (0+255),w,b
  9225  003F4C  0101               	movlb	1	; () banked
  9226  003F4E  51D3               	movf	(_otto_b1+1)& (0+255),w,b
  9227  003F50  0100               	movlb	0	; () banked
  9228  003F52  597B               	subwfb	(calc_pot@value+1)& (0+255),w,b
  9229  003F54  B0D8               	btfsc	status,0,c
  9230  003F56  D006               	goto	l7310
  9231                           
  9232                           ; BSR set to: 0
  9233                           ;d232.c: 60:   value = otto_b1.offset;
  9234  003F58  0060  F748  F07A   	movff	_otto_b1,calc_pot@value
  9235  003F5E  0060  F74C  F07B   	movff	_otto_b1+1,calc_pot@value+1
  9236  003F64                     l7310:
  9237                           
  9238                           ; BSR set to: 0
  9239                           ;d232.c: 61:  otto_b1.result = (adc_result_t) ((float) (value - otto_b1.offset) * otto_b
      +                          1.scalar);
  9240  003F64  0060  F760  F01A   	movff	_otto_b1+6,___flmul@a
  9241  003F6A  0060  F764  F01B   	movff	_otto_b1+7,___flmul@a+1
  9242  003F70  0060  F768  F01C   	movff	_otto_b1+8,___flmul@a+2
  9243  003F76  0060  F76C  F01D   	movff	_otto_b1+9,___flmul@a+3
  9244  003F7C  0101               	movlb	1	; () banked
  9245  003F7E  51D2               	movf	_otto_b1& (0+255),w,b
  9246  003F80  0100               	movlb	0	; () banked
  9247  003F82  5D7A               	subwf	calc_pot@value& (0+255),w,b
  9248  003F84  6F7C               	movwf	??_calc_pot& (0+255),b
  9249  003F86  0101               	movlb	1	; () banked
  9250  003F88  51D3               	movf	(_otto_b1+1)& (0+255),w,b
  9251  003F8A  0100               	movlb	0	; () banked
  9252  003F8C  597B               	subwfb	(calc_pot@value+1)& (0+255),w,b
  9253  003F8E  6F7D               	movwf	(??_calc_pot+1)& (0+255),b
  9254  003F90  0060  F1F0  F006   	movff	??_calc_pot,___xxtofl@val
  9255  003F96  0060  F1F4  F007   	movff	??_calc_pot+1,___xxtofl@val+1
  9256  003F9C  6A08               	clrf	(___xxtofl@val+2)^0,c
  9257  003F9E  6A09               	clrf	(___xxtofl@val+3)^0,c
  9258  003FA0  0E00               	movlw	0
  9259  003FA2  ECAA  F01D         	call	___xxtofl
  9260  003FA6  0060  F018  F016   	movff	?___xxtofl,___flmul@b
  9261  003FAC  0060  F01C  F017   	movff	?___xxtofl+1,___flmul@b+1
  9262  003FB2  0060  F020  F018   	movff	?___xxtofl+2,___flmul@b+2
  9263  003FB8  0060  F024  F019   	movff	?___xxtofl+3,___flmul@b+3
  9264  003FBE  EC0D  F012         	call	___flmul	;wreg free
  9265  003FC2  0060  F058  F074   	movff	?___flmul,___fltol@f1
  9266  003FC8  0060  F05C  F075   	movff	?___flmul+1,___fltol@f1+1
  9267  003FCE  0060  F060  F076   	movff	?___flmul+2,___fltol@f1+2
  9268  003FD4  0060  F064  F077   	movff	?___flmul+3,___fltol@f1+3
  9269  003FDA  EC37  F021         	call	___fltol	;wreg free
  9270  003FDE  0060  F1D0  F1DE   	movff	?___fltol,_otto_b1+12
  9271  003FE4  0060  F1D4  F1DF   	movff	?___fltol+1,_otto_b1+13
  9272                           
  9273                           ; BSR set to: 0
  9274                           ;d232.c: 62:  otto_b1.result = -127 + otto_b1.result + (int8_t) lp_filter((float) IO.rnd
      +                          , 0, 1);
  9275  003FEA  0E00               	movlw	0
  9276  003FEC  6F67               	movwf	(lp_filter@slow+1)& (0+255),b
  9277  003FEE  0E01               	movlw	1
  9278  003FF0  6F66               	movwf	lp_filter@slow& (0+255),b
  9279  003FF2  0E00               	movlw	0
  9280  003FF4  6F65               	movwf	(lp_filter@bn+1)& (0+255),b
  9281  003FF6  0E00               	movlw	0
  9282  003FF8  6F64               	movwf	lp_filter@bn& (0+255),b
  9283  003FFA  0101               	movlb	1	; () banked
  9284  003FFC  51D1               	movf	(_IO+40)& (0+255),w,b
  9285  003FFE  6E06               	movwf	___xxtofl@val^0,c
  9286  004000  0E00               	movlw	0
  9287  004002  BE06               	btfsc	___xxtofl@val^0,7,c
  9288  004004  0EFF               	movlw	-1
  9289  004006  6E07               	movwf	(___xxtofl@val+1)^0,c
  9290  004008  6E08               	movwf	(___xxtofl@val+2)^0,c
  9291  00400A  6E09               	movwf	(___xxtofl@val+3)^0,c
  9292  00400C  0E01               	movlw	1
  9293  00400E  ECAA  F01D         	call	___xxtofl
  9294  004012  0060  F018  F060   	movff	?___xxtofl,lp_filter@new
  9295  004018  0060  F01C  F061   	movff	?___xxtofl+1,lp_filter@new+1
  9296  00401E  0060  F020  F062   	movff	?___xxtofl+2,lp_filter@new+2
  9297  004024  0060  F024  F063   	movff	?___xxtofl+3,lp_filter@new+3
  9298  00402A  ECCD  F016         	call	_lp_filter	;wreg free
  9299  00402E  0060  F180  F074   	movff	?_lp_filter,___fltol@f1
  9300  004034  0060  F184  F075   	movff	?_lp_filter+1,___fltol@f1+1
  9301  00403A  0060  F188  F076   	movff	?_lp_filter+2,___fltol@f1+2
  9302  004040  0060  F18C  F077   	movff	?_lp_filter+3,___fltol@f1+3
  9303  004046  EC37  F021         	call	___fltol	;wreg free
  9304  00404A  5174               	movf	?___fltol& (0+255),w,b
  9305  00404C  6F7C               	movwf	??_calc_pot& (0+255),b
  9306  00404E  6B7D               	clrf	(??_calc_pot+1)& (0+255),b
  9307  004050  BF7C               	btfsc	??_calc_pot& (0+255),7,b
  9308  004052  077D               	decf	(??_calc_pot+1)& (0+255),f,b
  9309  004054  0101               	movlb	1	; () banked
  9310  004056  51DE               	movf	(_otto_b1+12)& (0+255),w,b
  9311  004058  0100               	movlb	0	; () banked
  9312  00405A  277C               	addwf	??_calc_pot& (0+255),f,b
  9313  00405C  0101               	movlb	1	; () banked
  9314  00405E  51DF               	movf	(_otto_b1+13)& (0+255),w,b
  9315  004060  0100               	movlb	0	; () banked
  9316  004062  237D               	addwfc	(??_calc_pot+1)& (0+255),f,b
  9317  004064  0E81               	movlw	129
  9318  004066  257C               	addwf	??_calc_pot& (0+255),w,b
  9319  004068  0101               	movlb	1	; () banked
  9320  00406A  6FDE               	movwf	(_otto_b1+12)& (0+255),b
  9321  00406C  0EFF               	movlw	255
  9322  00406E  0100               	movlb	0	; () banked
  9323  004070  217D               	addwfc	(??_calc_pot+1)& (0+255),w,b
  9324  004072  0101               	movlb	1	; () banked
  9325  004074  6FDF               	movwf	(_otto_b1+13)& (0+255),b
  9326                           
  9327                           ; BSR set to: 1
  9328  004076  0012               	return		;funcret
  9329  004078                     __end_of_calc_pot:
  9330                           	opt callstack 0
  9331                           
  9332 ;; *************** function _lp_filter *****************
  9333 ;; Defined at:
  9334 ;;		line 36 in file "d232.c"
  9335 ;; Parameters:    Size  Location     Type
  9336 ;;  new             4    0[BANK0 ] float 
  9337 ;;  bn              2    4[BANK0 ] short 
  9338 ;;  slow            2    6[BANK0 ] short 
  9339 ;; Auto vars:     Size  Location     Type
  9340 ;;  lp_x            4   16[BANK0 ] float 
  9341 ;;  lp_speed        4   12[BANK0 ] float 
  9342 ;; Return value:  Size  Location     Type
  9343 ;;                  4    0[BANK0 ] float 
  9344 ;; Registers used:
  9345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9346 ;; Tracked objects:
  9347 ;;		On entry : 0/1
  9348 ;;		On exit  : 3F/0
  9349 ;;		Unchanged: 0/0
  9350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9351 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9352 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9353 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9354 ;;      Totals:         2      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9355 ;;Total ram usage:       22 bytes
  9356 ;; Hardware stack levels used:    1
  9357 ;; Hardware stack levels required when called:    6
  9358 ;; This function calls:
  9359 ;;		___fladd
  9360 ;;		___fldiv
  9361 ;;		___flmul
  9362 ;;		___flsub
  9363 ;; This function is called by:
  9364 ;;		_calc_pot
  9365 ;; This function uses a non-reentrant model
  9366 ;;
  9367                           
  9368                           	psect	text61
  9369  002D9A                     __ptext61:
  9370                           	opt callstack 0
  9371  002D9A                     _lp_filter:
  9372                           	opt callstack 22
  9373                           
  9374                           ;d232.c: 36: float lp_filter(float new, int16_t bn, int16_t slow);d232.c: 37: {;d232.c: 
      +                          38:  float lp_speed, lp_x;;d232.c: 39:  static float smooth[8];;d232.c: 41:  if (bn > 7)
  9375                           
  9376                           ; BSR set to: 1
  9377                           ;incstack = 0
  9378  002D9A  0100               	movlb	0	; () banked
  9379  002D9C  BF65               	btfsc	(lp_filter@bn+1)& (0+255),7,b
  9380  002D9E  D013               	goto	l6924
  9381  002DA0  5165               	movf	(lp_filter@bn+1)& (0+255),w,b
  9382  002DA2  E104               	bnz	u7360
  9383  002DA4  0E08               	movlw	8
  9384  002DA6  5D64               	subwf	lp_filter@bn& (0+255),w,b
  9385  002DA8  A0D8               	btfss	status,0,c
  9386  002DAA  D00D               	goto	l6924
  9387  002DAC                     u7360:
  9388                           
  9389                           ; BSR set to: 0
  9390                           ;d232.c: 42:   return new;
  9391  002DAC  0060  F180  F060   	movff	lp_filter@new,?_lp_filter
  9392  002DB2  0060  F184  F061   	movff	lp_filter@new+1,?_lp_filter+1
  9393  002DB8  0060  F188  F062   	movff	lp_filter@new+2,?_lp_filter+2
  9394  002DBE  0060  F18C  F063   	movff	lp_filter@new+3,?_lp_filter+3
  9395  002DC4  0012               	return	
  9396  002DC6                     l6924:
  9397                           
  9398                           ; BSR set to: 0
  9399                           ;d232.c: 43:  if (slow) {
  9400  002DC6  5166               	movf	lp_filter@slow& (0+255),w,b
  9401  002DC8  1167               	iorwf	(lp_filter@slow+1)& (0+255),w,b
  9402  002DCA  B4D8               	btfsc	status,2,c
  9403  002DCC  D008               	goto	l6928
  9404                           
  9405                           ; BSR set to: 0
  9406                           ;d232.c: 44:   lp_speed = 0.01;
  9407  002DCE  0E0A               	movlw	10
  9408  002DD0  6F6C               	movwf	lp_filter@lp_speed& (0+255),b
  9409  002DD2  0ED7               	movlw	215
  9410  002DD4  6F6D               	movwf	(lp_filter@lp_speed+1)& (0+255),b
  9411  002DD6  0E23               	movlw	35
  9412  002DD8  6F6E               	movwf	(lp_filter@lp_speed+2)& (0+255),b
  9413  002DDA  0E3C               	movlw	60
  9414  002DDC  D007               	goto	L11
  9415  002DDE                     l6928:
  9416                           
  9417                           ; BSR set to: 0
  9418                           ;d232.c: 46:   lp_speed = 0.250;
  9419  002DDE  0E00               	movlw	0
  9420  002DE0  6F6C               	movwf	lp_filter@lp_speed& (0+255),b
  9421  002DE2  0E00               	movlw	0
  9422  002DE4  6F6D               	movwf	(lp_filter@lp_speed+1)& (0+255),b
  9423  002DE6  0E80               	movlw	128
  9424  002DE8  6F6E               	movwf	(lp_filter@lp_speed+2)& (0+255),b
  9425  002DEA  0E3E               	movlw	62
  9426  002DEC                     L11:
  9427  002DEC  6F6F               	movwf	(lp_filter@lp_speed+3)& (0+255),b
  9428                           
  9429                           ; BSR set to: 0
  9430                           ;d232.c: 48:  lp_x = ((smooth[bn]*100.0) + (((new * 100.0)-(smooth[bn]*100.0)) * lp_spee
      +                          d)) / 100.0;
  9431  002DEE  0E00               	movlw	0
  9432  002DF0  6E1A               	movwf	___flmul@a^0,c
  9433  002DF2  0E00               	movlw	0
  9434  002DF4  6E1B               	movwf	(___flmul@a+1)^0,c
  9435  002DF6  0EC8               	movlw	200
  9436  002DF8  6E1C               	movwf	(___flmul@a+2)^0,c
  9437  002DFA  0E42               	movlw	66
  9438  002DFC  6E1D               	movwf	(___flmul@a+3)^0,c
  9439  002DFE  0E00               	movlw	low lp_filter@smooth
  9440  002E00  6E50               	movwf	??_lp_filter^0,c
  9441  002E02  0E01               	movlw	high lp_filter@smooth
  9442  002E04  6E51               	movwf	(??_lp_filter+1)^0,c
  9443  002E06  90D8               	bcf	status,0,c
  9444  002E08  3564               	rlcf	lp_filter@bn& (0+255),w,b
  9445  002E0A  6ED9               	movwf	fsr2l,c
  9446  002E0C  3565               	rlcf	(lp_filter@bn+1)& (0+255),w,b
  9447  002E0E  6EDA               	movwf	fsr2h,c
  9448  002E10  90D8               	bcf	status,0,c
  9449  002E12  36D9               	rlcf	fsr2l,f,c
  9450  002E14  36DA               	rlcf	fsr2h,f,c
  9451  002E16  5050               	movf	??_lp_filter^0,w,c
  9452  002E18  26D9               	addwf	fsr2l,f,c
  9453  002E1A  5051               	movf	(??_lp_filter+1)^0,w,c
  9454  002E1C  22DA               	addwfc	fsr2h,f,c
  9455  002E1E  006F FF78  F016    	movff	postinc2,___flmul@b
  9456  002E24  006F FF78  F017    	movff	postinc2,___flmul@b+1
  9457  002E2A  006F FF78  F018    	movff	postinc2,___flmul@b+2
  9458  002E30  006F FF78  F019    	movff	postinc2,___flmul@b+3
  9459  002E36  EC0D  F012         	call	___flmul	;wreg free
  9460  002E3A  0060  F058  F033   	movff	?___flmul,___flsub@a
  9461  002E40  0060  F05C  F034   	movff	?___flmul+1,___flsub@a+1
  9462  002E46  0060  F060  F035   	movff	?___flmul+2,___flsub@a+2
  9463  002E4C  0060  F064  F036   	movff	?___flmul+3,___flsub@a+3
  9464  002E52  0E00               	movlw	0
  9465  002E54  6E1A               	movwf	___flmul@a^0,c
  9466  002E56  0E00               	movlw	0
  9467  002E58  6E1B               	movwf	(___flmul@a+1)^0,c
  9468  002E5A  0EC8               	movlw	200
  9469  002E5C  6E1C               	movwf	(___flmul@a+2)^0,c
  9470  002E5E  0E42               	movlw	66
  9471  002E60  6E1D               	movwf	(___flmul@a+3)^0,c
  9472  002E62  0060  F180  F016   	movff	lp_filter@new,___flmul@b
  9473  002E68  0060  F184  F017   	movff	lp_filter@new+1,___flmul@b+1
  9474  002E6E  0060  F188  F018   	movff	lp_filter@new+2,___flmul@b+2
  9475  002E74  0060  F18C  F019   	movff	lp_filter@new+3,___flmul@b+3
  9476  002E7A  EC0D  F012         	call	___flmul	;wreg free
  9477  002E7E  0060  F058  F02F   	movff	?___flmul,___flsub@b
  9478  002E84  0060  F05C  F030   	movff	?___flmul+1,___flsub@b+1
  9479  002E8A  0060  F060  F031   	movff	?___flmul+2,___flsub@b+2
  9480  002E90  0060  F064  F032   	movff	?___flmul+3,___flsub@b+3
  9481  002E96  EC74  F025         	call	___flsub	;wreg free
  9482  002E9A  0060  F0BC  F068   	movff	?___flsub,_lp_filter$3690
  9483  002EA0  0060  F0C0  F069   	movff	?___flsub+1,_lp_filter$3690+1
  9484  002EA6  0060  F0C4  F06A   	movff	?___flsub+2,_lp_filter$3690+2
  9485  002EAC  0060  F0C8  F06B   	movff	?___flsub+3,_lp_filter$3690+3
  9486                           
  9487                           ;d232.c: 48:  lp_x = ((smooth[bn]*100.0) + (((new * 100.0)-(smooth[bn]*100.0)) * lp_spee
      +                          d)) / 100.0;
  9488  002EB2  0060  F1B0  F01A   	movff	lp_filter@lp_speed,___flmul@a
  9489  002EB8  0060  F1B4  F01B   	movff	lp_filter@lp_speed+1,___flmul@a+1
  9490  002EBE  0060  F1B8  F01C   	movff	lp_filter@lp_speed+2,___flmul@a+2
  9491  002EC4  0060  F1BC  F01D   	movff	lp_filter@lp_speed+3,___flmul@a+3
  9492  002ECA  0060  F1A0  F016   	movff	_lp_filter$3690,___flmul@b
  9493  002ED0  0060  F1A4  F017   	movff	_lp_filter$3690+1,___flmul@b+1
  9494  002ED6  0060  F1A8  F018   	movff	_lp_filter$3690+2,___flmul@b+2
  9495  002EDC  0060  F1AC  F019   	movff	_lp_filter$3690+3,___flmul@b+3
  9496  002EE2  EC0D  F012         	call	___flmul	;wreg free
  9497  002EE6  0060  F058  F00A   	movff	?___flmul,___fladd@a
  9498  002EEC  0060  F05C  F00B   	movff	?___flmul+1,___fladd@a+1
  9499  002EF2  0060  F060  F00C   	movff	?___flmul+2,___fladd@a+2
  9500  002EF8  0060  F064  F00D   	movff	?___flmul+3,___fladd@a+3
  9501  002EFE  0E00               	movlw	0
  9502  002F00  6E1A               	movwf	___flmul@a^0,c
  9503  002F02  0E00               	movlw	0
  9504  002F04  6E1B               	movwf	(___flmul@a+1)^0,c
  9505  002F06  0EC8               	movlw	200
  9506  002F08  6E1C               	movwf	(___flmul@a+2)^0,c
  9507  002F0A  0E42               	movlw	66
  9508  002F0C  6E1D               	movwf	(___flmul@a+3)^0,c
  9509  002F0E  0E00               	movlw	low lp_filter@smooth
  9510  002F10  6E50               	movwf	??_lp_filter^0,c
  9511  002F12  0E01               	movlw	high lp_filter@smooth
  9512  002F14  6E51               	movwf	(??_lp_filter+1)^0,c
  9513  002F16  90D8               	bcf	status,0,c
  9514  002F18  0100               	movlb	0	; () banked
  9515  002F1A  3564               	rlcf	lp_filter@bn& (0+255),w,b
  9516  002F1C  6ED9               	movwf	fsr2l,c
  9517  002F1E  3565               	rlcf	(lp_filter@bn+1)& (0+255),w,b
  9518  002F20  6EDA               	movwf	fsr2h,c
  9519  002F22  90D8               	bcf	status,0,c
  9520  002F24  36D9               	rlcf	fsr2l,f,c
  9521  002F26  36DA               	rlcf	fsr2h,f,c
  9522  002F28  5050               	movf	??_lp_filter^0,w,c
  9523  002F2A  26D9               	addwf	fsr2l,f,c
  9524  002F2C  5051               	movf	(??_lp_filter+1)^0,w,c
  9525  002F2E  22DA               	addwfc	fsr2h,f,c
  9526  002F30  006F FF78  F016    	movff	postinc2,___flmul@b
  9527  002F36  006F FF78  F017    	movff	postinc2,___flmul@b+1
  9528  002F3C  006F FF78  F018    	movff	postinc2,___flmul@b+2
  9529  002F42  006F FF78  F019    	movff	postinc2,___flmul@b+3
  9530  002F48  EC0D  F012         	call	___flmul	;wreg free
  9531  002F4C  0060  F058  F006   	movff	?___flmul,___fladd@b
  9532  002F52  0060  F05C  F007   	movff	?___flmul+1,___fladd@b+1
  9533  002F58  0060  F060  F008   	movff	?___flmul+2,___fladd@b+2
  9534  002F5E  0060  F064  F009   	movff	?___flmul+3,___fladd@b+3
  9535  002F64  ECCF  F013         	call	___fladd	;wreg free
  9536  002F68  0060  F018  F037   	movff	?___fladd,___fldiv@b
  9537  002F6E  0060  F01C  F038   	movff	?___fladd+1,___fldiv@b+1
  9538  002F74  0060  F020  F039   	movff	?___fladd+2,___fldiv@b+2
  9539  002F7A  0060  F024  F03A   	movff	?___fladd+3,___fldiv@b+3
  9540  002F80  0E00               	movlw	0
  9541  002F82  6E3B               	movwf	___fldiv@a^0,c
  9542  002F84  0E00               	movlw	0
  9543  002F86  6E3C               	movwf	(___fldiv@a+1)^0,c
  9544  002F88  0EC8               	movlw	200
  9545  002F8A  6E3D               	movwf	(___fldiv@a+2)^0,c
  9546  002F8C  0E42               	movlw	66
  9547  002F8E  6E3E               	movwf	(___fldiv@a+3)^0,c
  9548  002F90  EC7B  F019         	call	___fldiv	;wreg free
  9549  002F94  0060  F0DC  F070   	movff	?___fldiv,lp_filter@lp_x
  9550  002F9A  0060  F0E0  F071   	movff	?___fldiv+1,lp_filter@lp_x+1
  9551  002FA0  0060  F0E4  F072   	movff	?___fldiv+2,lp_filter@lp_x+2
  9552  002FA6  0060  F0E8  F073   	movff	?___fldiv+3,lp_filter@lp_x+3
  9553                           
  9554                           ;d232.c: 49:  smooth[bn] = lp_x;
  9555  002FAC  0E00               	movlw	low lp_filter@smooth
  9556  002FAE  6E50               	movwf	??_lp_filter^0,c
  9557  002FB0  0E01               	movlw	high lp_filter@smooth
  9558  002FB2  6E51               	movwf	(??_lp_filter+1)^0,c
  9559  002FB4  90D8               	bcf	status,0,c
  9560  002FB6  0100               	movlb	0	; () banked
  9561  002FB8  3564               	rlcf	lp_filter@bn& (0+255),w,b
  9562  002FBA  6ED9               	movwf	fsr2l,c
  9563  002FBC  3565               	rlcf	(lp_filter@bn+1)& (0+255),w,b
  9564  002FBE  6EDA               	movwf	fsr2h,c
  9565  002FC0  90D8               	bcf	status,0,c
  9566  002FC2  36D9               	rlcf	fsr2l,f,c
  9567  002FC4  36DA               	rlcf	fsr2h,f,c
  9568  002FC6  5050               	movf	??_lp_filter^0,w,c
  9569  002FC8  26D9               	addwf	fsr2l,f,c
  9570  002FCA  5051               	movf	(??_lp_filter+1)^0,w,c
  9571  002FCC  22DA               	addwfc	fsr2h,f,c
  9572  002FCE  0060  F1C3  FFDE   	movff	lp_filter@lp_x,postinc2
  9573  002FD4  0060  F1C7  FFDE   	movff	lp_filter@lp_x+1,postinc2
  9574  002FDA  0060  F1CB  FFDE   	movff	lp_filter@lp_x+2,postinc2
  9575  002FE0  0060  F1CF  FFDE   	movff	lp_filter@lp_x+3,postinc2
  9576                           
  9577                           ; BSR set to: 0
  9578                           ;d232.c: 50:  if (slow == (-1)) {
  9579  002FE6  2966               	incf	lp_filter@slow& (0+255),w,b
  9580  002FE8  E123               	bnz	l6942
  9581  002FEA  2967               	incf	(lp_filter@slow+1)& (0+255),w,b
  9582  002FEC  A4D8               	btfss	status,2,c
  9583  002FEE  D020               	goto	l6942
  9584                           
  9585                           ; BSR set to: 0
  9586                           ;d232.c: 51:   lp_x = 0.0;
  9587  002FF0  0E00               	movlw	0
  9588  002FF2  6F70               	movwf	lp_filter@lp_x& (0+255),b
  9589  002FF4  0E00               	movlw	0
  9590  002FF6  6F71               	movwf	(lp_filter@lp_x+1)& (0+255),b
  9591  002FF8  0E00               	movlw	0
  9592  002FFA  6F72               	movwf	(lp_filter@lp_x+2)& (0+255),b
  9593  002FFC  0E00               	movlw	0
  9594  002FFE  6F73               	movwf	(lp_filter@lp_x+3)& (0+255),b
  9595                           
  9596                           ; BSR set to: 0
  9597                           ;d232.c: 52:   smooth[bn] = 0.0;
  9598  003000  0E00               	movlw	low lp_filter@smooth
  9599  003002  6E50               	movwf	??_lp_filter^0,c
  9600  003004  0E01               	movlw	high lp_filter@smooth
  9601  003006  6E51               	movwf	(??_lp_filter+1)^0,c
  9602  003008  90D8               	bcf	status,0,c
  9603  00300A  3564               	rlcf	lp_filter@bn& (0+255),w,b
  9604  00300C  6ED9               	movwf	fsr2l,c
  9605  00300E  3565               	rlcf	(lp_filter@bn+1)& (0+255),w,b
  9606  003010  6EDA               	movwf	fsr2h,c
  9607  003012  90D8               	bcf	status,0,c
  9608  003014  36D9               	rlcf	fsr2l,f,c
  9609  003016  36DA               	rlcf	fsr2h,f,c
  9610  003018  5050               	movf	??_lp_filter^0,w,c
  9611  00301A  26D9               	addwf	fsr2l,f,c
  9612  00301C  5051               	movf	(??_lp_filter+1)^0,w,c
  9613  00301E  22DA               	addwfc	fsr2h,f,c
  9614  003020  0E00               	movlw	0
  9615  003022  6EDE               	movwf	postinc2,c
  9616  003024  0E00               	movlw	0
  9617  003026  6EDE               	movwf	postinc2,c
  9618  003028  0E00               	movlw	0
  9619  00302A  6EDE               	movwf	postinc2,c
  9620  00302C  0E00               	movlw	0
  9621  00302E  6EDD               	movwf	postdec2,c
  9622  003030                     l6942:
  9623                           
  9624                           ; BSR set to: 0
  9625                           ;d232.c: 54:  return lp_x;
  9626  003030  0060  F1C0  F060   	movff	lp_filter@lp_x,?_lp_filter
  9627  003036  0060  F1C4  F061   	movff	lp_filter@lp_x+1,?_lp_filter+1
  9628  00303C  0060  F1C8  F062   	movff	lp_filter@lp_x+2,?_lp_filter+2
  9629  003042  0060  F1CC  F063   	movff	lp_filter@lp_x+3,?_lp_filter+3
  9630                           
  9631                           ; BSR set to: 0
  9632  003048  0012               	return		;funcret
  9633  00304A                     __end_of_lp_filter:
  9634                           	opt callstack 0
  9635                           
  9636 ;; *************** function ___flsub *****************
  9637 ;; Defined at:
  9638 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
  9639 ;; Parameters:    Size  Location     Type
  9640 ;;  b               4   46[COMRAM] float 
  9641 ;;  a               4   50[COMRAM] float 
  9642 ;; Auto vars:     Size  Location     Type
  9643 ;;		None
  9644 ;; Return value:  Size  Location     Type
  9645 ;;                  4   46[COMRAM] float 
  9646 ;; Registers used:
  9647 ;;		wreg, status,2, status,0, cstack
  9648 ;; Tracked objects:
  9649 ;;		On entry : 0/0
  9650 ;;		On exit  : 0/0
  9651 ;;		Unchanged: 0/0
  9652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9653 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9656 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9657 ;;Total ram usage:        8 bytes
  9658 ;; Hardware stack levels used:    1
  9659 ;; Hardware stack levels required when called:    5
  9660 ;; This function calls:
  9661 ;;		___fladd
  9662 ;; This function is called by:
  9663 ;;		_lp_filter
  9664 ;; This function uses a non-reentrant model
  9665 ;;
  9666                           
  9667                           	psect	text62
  9668  004AE8                     __ptext62:
  9669                           	opt callstack 0
  9670  004AE8                     ___flsub:
  9671                           	opt callstack 22
  9672                           
  9673                           ; BSR set to: 0
  9674                           ;incstack = 0
  9675  004AE8  0E00               	movlw	0
  9676  004AEA  1A33               	xorwf	___flsub@a^0,f,c
  9677  004AEC  0E00               	movlw	0
  9678  004AEE  1A34               	xorwf	(___flsub@a+1)^0,f,c
  9679  004AF0  0E00               	movlw	0
  9680  004AF2  1A35               	xorwf	(___flsub@a+2)^0,f,c
  9681  004AF4  0E80               	movlw	128
  9682  004AF6  1A36               	xorwf	(___flsub@a+3)^0,f,c
  9683  004AF8  0060  F0BC  F006   	movff	___flsub@b,___fladd@b
  9684  004AFE  0060  F0C0  F007   	movff	___flsub@b+1,___fladd@b+1
  9685  004B04  0060  F0C4  F008   	movff	___flsub@b+2,___fladd@b+2
  9686  004B0A  0060  F0C8  F009   	movff	___flsub@b+3,___fladd@b+3
  9687  004B10  0060  F0CC  F00A   	movff	___flsub@a,___fladd@a
  9688  004B16  0060  F0D0  F00B   	movff	___flsub@a+1,___fladd@a+1
  9689  004B1C  0060  F0D4  F00C   	movff	___flsub@a+2,___fladd@a+2
  9690  004B22  0060  F0D8  F00D   	movff	___flsub@a+3,___fladd@a+3
  9691  004B28  ECCF  F013         	call	___fladd	;wreg free
  9692  004B2C  0060  F018  F02F   	movff	?___fladd,?___flsub
  9693  004B32  0060  F01C  F030   	movff	?___fladd+1,?___flsub+1
  9694  004B38  0060  F020  F031   	movff	?___fladd+2,?___flsub+2
  9695  004B3E  0060  F024  F032   	movff	?___fladd+3,?___flsub+3
  9696  004B44  0012               	return		;funcret
  9697  004B46                     __end_of___flsub:
  9698                           	opt callstack 0
  9699                           
  9700 ;; *************** function ___fladd *****************
  9701 ;; Defined at:
  9702 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
  9703 ;; Parameters:    Size  Location     Type
  9704 ;;  b               4    5[COMRAM] float 
  9705 ;;  a               4    9[COMRAM] float 
  9706 ;; Auto vars:     Size  Location     Type
  9707 ;;  grs             1   20[COMRAM] unsigned char 
  9708 ;;  bexp            1   19[COMRAM] unsigned char 
  9709 ;;  aexp            1   18[COMRAM] unsigned char 
  9710 ;;  signs           1   17[COMRAM] unsigned char 
  9711 ;; Return value:  Size  Location     Type
  9712 ;;                  4    5[COMRAM] unsigned char 
  9713 ;; Registers used:
  9714 ;;		wreg, status,2, status,0
  9715 ;; Tracked objects:
  9716 ;;		On entry : 0/0
  9717 ;;		On exit  : 0/0
  9718 ;;		Unchanged: 0/0
  9719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9720 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9721 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9722 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9723 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9724 ;;Total ram usage:       16 bytes
  9725 ;; Hardware stack levels used:    1
  9726 ;; Hardware stack levels required when called:    4
  9727 ;; This function calls:
  9728 ;;		Nothing
  9729 ;; This function is called by:
  9730 ;;		_lp_filter
  9731 ;;		___flsub
  9732 ;; This function uses a non-reentrant model
  9733 ;;
  9734                           
  9735                           	psect	text63
  9736  00279E                     __ptext63:
  9737                           	opt callstack 0
  9738  00279E                     ___fladd:
  9739                           	opt callstack 22
  9740                           
  9741                           ;incstack = 0
  9742  00279E  5009               	movf	(___fladd@b+3)^0,w,c
  9743  0027A0  0B80               	andlw	128
  9744  0027A2  6E12               	movwf	___fladd@signs^0,c
  9745  0027A4  5009               	movf	(___fladd@b+3)^0,w,c
  9746  0027A6  2409               	addwf	(___fladd@b+3)^0,w,c
  9747  0027A8  6E14               	movwf	___fladd@bexp^0,c
  9748  0027AA  BE08               	btfsc	(___fladd@b+2)^0,7,c
  9749  0027AC  8014               	bsf	___fladd@bexp^0,0,c
  9750  0027AE  5014               	movf	___fladd@bexp^0,w,c
  9751  0027B0  B4D8               	btfsc	status,2,c
  9752  0027B2  D00D               	goto	l6356
  9753  0027B4  2814               	incf	___fladd@bexp^0,w,c
  9754  0027B6  A4D8               	btfss	status,2,c
  9755  0027B8  D008               	goto	l6352
  9756  0027BA  0E00               	movlw	0
  9757  0027BC  6E06               	movwf	___fladd@b^0,c
  9758  0027BE  0E00               	movlw	0
  9759  0027C0  6E07               	movwf	(___fladd@b+1)^0,c
  9760  0027C2  0E00               	movlw	0
  9761  0027C4  6E08               	movwf	(___fladd@b+2)^0,c
  9762  0027C6  0E00               	movlw	0
  9763  0027C8  6E09               	movwf	(___fladd@b+3)^0,c
  9764  0027CA                     l6352:
  9765  0027CA  8E08               	bsf	(___fladd@b+2)^0,7,c
  9766  0027CC  D006               	goto	L12
  9767  0027CE                     l6356:
  9768  0027CE  0E00               	movlw	0
  9769  0027D0  6E06               	movwf	___fladd@b^0,c
  9770  0027D2  0E00               	movlw	0
  9771  0027D4  6E07               	movwf	(___fladd@b+1)^0,c
  9772  0027D6  0E00               	movlw	0
  9773  0027D8  6E08               	movwf	(___fladd@b+2)^0,c
  9774  0027DA                     L12:
  9775  0027DA  0E00               	movlw	0
  9776  0027DC  6E09               	movwf	(___fladd@b+3)^0,c
  9777  0027DE  500D               	movf	(___fladd@a+3)^0,w,c
  9778  0027E0  0B80               	andlw	128
  9779  0027E2  6E13               	movwf	___fladd@aexp^0,c
  9780  0027E4  5012               	movf	___fladd@signs^0,w,c
  9781  0027E6  1813               	xorwf	___fladd@aexp^0,w,c
  9782  0027E8  A4D8               	btfss	status,2,c
  9783  0027EA  8C12               	bsf	___fladd@signs^0,6,c
  9784  0027EC  500D               	movf	(___fladd@a+3)^0,w,c
  9785  0027EE  240D               	addwf	(___fladd@a+3)^0,w,c
  9786  0027F0  6E13               	movwf	___fladd@aexp^0,c
  9787  0027F2  BE0C               	btfsc	(___fladd@a+2)^0,7,c
  9788  0027F4  8013               	bsf	___fladd@aexp^0,0,c
  9789  0027F6  5013               	movf	___fladd@aexp^0,w,c
  9790  0027F8  B4D8               	btfsc	status,2,c
  9791  0027FA  D00D               	goto	l6380
  9792  0027FC  2813               	incf	___fladd@aexp^0,w,c
  9793  0027FE  A4D8               	btfss	status,2,c
  9794  002800  D008               	goto	l6376
  9795  002802  0E00               	movlw	0
  9796  002804  6E0A               	movwf	___fladd@a^0,c
  9797  002806  0E00               	movlw	0
  9798  002808  6E0B               	movwf	(___fladd@a+1)^0,c
  9799  00280A  0E00               	movlw	0
  9800  00280C  6E0C               	movwf	(___fladd@a+2)^0,c
  9801  00280E  0E00               	movlw	0
  9802  002810  6E0D               	movwf	(___fladd@a+3)^0,c
  9803  002812                     l6376:
  9804  002812  8E0C               	bsf	(___fladd@a+2)^0,7,c
  9805  002814  D006               	goto	L13
  9806  002816                     l6380:
  9807  002816  0E00               	movlw	0
  9808  002818  6E0A               	movwf	___fladd@a^0,c
  9809  00281A  0E00               	movlw	0
  9810  00281C  6E0B               	movwf	(___fladd@a+1)^0,c
  9811  00281E  0E00               	movlw	0
  9812  002820  6E0C               	movwf	(___fladd@a+2)^0,c
  9813  002822                     L13:
  9814  002822  0E00               	movlw	0
  9815  002824  6E0D               	movwf	(___fladd@a+3)^0,c
  9816  002826  5014               	movf	___fladd@bexp^0,w,c
  9817  002828  5C13               	subwf	___fladd@aexp^0,w,c
  9818  00282A  B0D8               	btfsc	status,0,c
  9819  00282C  D031               	goto	l6418
  9820  00282E  AC12               	btfss	___fladd@signs^0,6,c
  9821  002830  D002               	goto	l6388
  9822  002832  0E80               	movlw	128
  9823  002834  1A12               	xorwf	___fladd@signs^0,f,c
  9824  002836                     l6388:
  9825  002836  0060  F050  F015   	movff	___fladd@bexp,___fladd@grs
  9826  00283C  0060  F04C  F014   	movff	___fladd@aexp,___fladd@bexp
  9827  002842  0060  F054  F013   	movff	___fladd@grs,___fladd@aexp
  9828  002848  0060  F018  F015   	movff	___fladd@b,___fladd@grs
  9829  00284E  0060  F028  F006   	movff	___fladd@a,___fladd@b
  9830  002854  0060  F054  F00A   	movff	___fladd@grs,___fladd@a
  9831  00285A  0060  F01C  F015   	movff	___fladd@b+1,___fladd@grs
  9832  002860  0060  F02C  F007   	movff	___fladd@a+1,___fladd@b+1
  9833  002866  0060  F054  F00B   	movff	___fladd@grs,___fladd@a+1
  9834  00286C  0060  F020  F015   	movff	___fladd@b+2,___fladd@grs
  9835  002872  0060  F030  F008   	movff	___fladd@a+2,___fladd@b+2
  9836  002878  0060  F054  F00C   	movff	___fladd@grs,___fladd@a+2
  9837  00287E  0060  F024  F015   	movff	___fladd@b+3,___fladd@grs
  9838  002884  0060  F034  F009   	movff	___fladd@a+3,___fladd@b+3
  9839  00288A  0060  F054  F00D   	movff	___fladd@grs,___fladd@a+3
  9840  002890                     l6418:
  9841  002890  0E00               	movlw	0
  9842  002892  6E15               	movwf	___fladd@grs^0,c
  9843  002894  5014               	movf	___fladd@bexp^0,w,c
  9844  002896  0060  F04C  F00E   	movff	___fladd@aexp,??___fladd
  9845  00289C  6A0F               	clrf	(??___fladd+1)^0,c
  9846  00289E  5E0E               	subwf	??___fladd^0,f,c
  9847  0028A0  0E00               	movlw	0
  9848  0028A2  5A0F               	subwfb	(??___fladd+1)^0,f,c
  9849  0028A4  BE0F               	btfsc	(??___fladd+1)^0,7,c
  9850  0028A6  D02D               	goto	l1959
  9851  0028A8  500F               	movf	(??___fladd+1)^0,w,c
  9852  0028AA  E104               	bnz	u6570
  9853  0028AC  0E1A               	movlw	26
  9854  0028AE  5C0E               	subwf	??___fladd^0,w,c
  9855  0028B0  A0D8               	btfss	status,0,c
  9856  0028B2  D027               	goto	l1959
  9857  0028B4                     u6570:
  9858  0028B4  5006               	movf	___fladd@b^0,w,c
  9859  0028B6  1007               	iorwf	(___fladd@b+1)^0,w,c
  9860  0028B8  1008               	iorwf	(___fladd@b+2)^0,w,c
  9861  0028BA  1009               	iorwf	(___fladd@b+3)^0,w,c
  9862  0028BC  B4D8               	btfsc	status,2,c
  9863  0028BE  D002               	goto	u6580
  9864  0028C0  0E01               	movlw	1
  9865  0028C2  D001               	goto	u6590
  9866  0028C4                     u6580:
  9867  0028C4  0E00               	movlw	0
  9868  0028C6                     u6590:
  9869  0028C6  6E15               	movwf	___fladd@grs^0,c
  9870  0028C8  0E00               	movlw	0
  9871  0028CA  6E06               	movwf	___fladd@b^0,c
  9872  0028CC  0E00               	movlw	0
  9873  0028CE  6E07               	movwf	(___fladd@b+1)^0,c
  9874  0028D0  0E00               	movlw	0
  9875  0028D2  6E08               	movwf	(___fladd@b+2)^0,c
  9876  0028D4  0E00               	movlw	0
  9877  0028D6  6E09               	movwf	(___fladd@b+3)^0,c
  9878  0028D8  0060  F04C  F014   	movff	___fladd@aexp,___fladd@bexp
  9879  0028DE  D015               	goto	u6620
  9880  0028E0                     l1960:
  9881  0028E0  A015               	btfss	___fladd@grs^0,0,c
  9882  0028E2  D005               	goto	l6430
  9883  0028E4  90D8               	bcf	status,0,c
  9884  0028E6  3015               	rrcf	___fladd@grs^0,w,c
  9885  0028E8  0901               	iorlw	1
  9886  0028EA  6E15               	movwf	___fladd@grs^0,c
  9887  0028EC  D002               	goto	l6432
  9888  0028EE                     l6430:
  9889  0028EE  90D8               	bcf	status,0,c
  9890  0028F0  3215               	rrcf	___fladd@grs^0,f,c
  9891  0028F2                     l6432:
  9892  0028F2  B006               	btfsc	___fladd@b^0,0,c
  9893  0028F4  8E15               	bsf	___fladd@grs^0,7,c
  9894  0028F6  3409               	rlcf	(___fladd@b+3)^0,w,c
  9895  0028F8  3209               	rrcf	(___fladd@b+3)^0,f,c
  9896  0028FA  3208               	rrcf	(___fladd@b+2)^0,f,c
  9897  0028FC  3207               	rrcf	(___fladd@b+1)^0,f,c
  9898  0028FE  3206               	rrcf	___fladd@b^0,f,c
  9899  002900  2A14               	incf	___fladd@bexp^0,f,c
  9900  002902                     l1959:
  9901  002902  5013               	movf	___fladd@aexp^0,w,c
  9902  002904  5C14               	subwf	___fladd@bexp^0,w,c
  9903  002906  A0D8               	btfss	status,0,c
  9904  002908  D7EB               	goto	l1960
  9905  00290A                     u6620:
  9906  00290A  BC12               	btfsc	___fladd@signs^0,6,c
  9907  00290C  D028               	goto	l6464
  9908  00290E  5014               	movf	___fladd@bexp^0,w,c
  9909  002910  A4D8               	btfss	status,2,c
  9910  002912  D009               	goto	l6446
  9911  002914  0E00               	movlw	0
  9912  002916  6E06               	movwf	?___fladd^0,c
  9913  002918  0E00               	movlw	0
  9914  00291A  6E07               	movwf	(?___fladd+1)^0,c
  9915  00291C  0E00               	movlw	0
  9916  00291E  6E08               	movwf	(?___fladd+2)^0,c
  9917  002920  0E00               	movlw	0
  9918  002922  6E09               	movwf	(?___fladd+3)^0,c
  9919  002924  0012               	return	
  9920  002926                     l6446:
  9921  002926  500A               	movf	___fladd@a^0,w,c
  9922  002928  2606               	addwf	___fladd@b^0,f,c
  9923  00292A  500B               	movf	(___fladd@a+1)^0,w,c
  9924  00292C  2207               	addwfc	(___fladd@b+1)^0,f,c
  9925  00292E  500C               	movf	(___fladd@a+2)^0,w,c
  9926  002930  2208               	addwfc	(___fladd@b+2)^0,f,c
  9927  002932  500D               	movf	(___fladd@a+3)^0,w,c
  9928  002934  2209               	addwfc	(___fladd@b+3)^0,f,c
  9929  002936  A009               	btfss	(___fladd@b+3)^0,0,c
  9930  002938  D071               	goto	u6750
  9931  00293A  A015               	btfss	___fladd@grs^0,0,c
  9932  00293C  D005               	goto	l6454
  9933  00293E  90D8               	bcf	status,0,c
  9934  002940  3015               	rrcf	___fladd@grs^0,w,c
  9935  002942  0901               	iorlw	1
  9936  002944  6E15               	movwf	___fladd@grs^0,c
  9937  002946  D002               	goto	l6456
  9938  002948                     l6454:
  9939  002948  90D8               	bcf	status,0,c
  9940  00294A  3215               	rrcf	___fladd@grs^0,f,c
  9941  00294C                     l6456:
  9942  00294C  B006               	btfsc	___fladd@b^0,0,c
  9943  00294E  8E15               	bsf	___fladd@grs^0,7,c
  9944  002950  3409               	rlcf	(___fladd@b+3)^0,w,c
  9945  002952  3209               	rrcf	(___fladd@b+3)^0,f,c
  9946  002954  3208               	rrcf	(___fladd@b+2)^0,f,c
  9947  002956  3207               	rrcf	(___fladd@b+1)^0,f,c
  9948  002958  3206               	rrcf	___fladd@b^0,f,c
  9949  00295A  2A14               	incf	___fladd@bexp^0,f,c
  9950  00295C  D05F               	goto	u6750
  9951  00295E                     l6464:
  9952  00295E  500A               	movf	___fladd@a^0,w,c
  9953  002960  5C06               	subwf	___fladd@b^0,w,c
  9954  002962  500B               	movf	(___fladd@a+1)^0,w,c
  9955  002964  5807               	subwfb	(___fladd@b+1)^0,w,c
  9956  002966  500C               	movf	(___fladd@a+2)^0,w,c
  9957  002968  5808               	subwfb	(___fladd@b+2)^0,w,c
  9958  00296A  5009               	movf	(___fladd@b+3)^0,w,c
  9959  00296C  0A80               	xorlw	128
  9960  00296E  6E0E               	movwf	??___fladd^0,c
  9961  002970  500D               	movf	(___fladd@a+3)^0,w,c
  9962  002972  0A80               	xorlw	128
  9963  002974  580E               	subwfb	??___fladd^0,w,c
  9964  002976  B0D8               	btfsc	status,0,c
  9965  002978  D025               	goto	l6474
  9966  00297A  5006               	movf	___fladd@b^0,w,c
  9967  00297C  5C0A               	subwf	___fladd@a^0,w,c
  9968  00297E  6E0E               	movwf	??___fladd^0,c
  9969  002980  5007               	movf	(___fladd@b+1)^0,w,c
  9970  002982  580B               	subwfb	(___fladd@a+1)^0,w,c
  9971  002984  6E0F               	movwf	(??___fladd+1)^0,c
  9972  002986  5008               	movf	(___fladd@b+2)^0,w,c
  9973  002988  580C               	subwfb	(___fladd@a+2)^0,w,c
  9974  00298A  6E10               	movwf	(??___fladd+2)^0,c
  9975  00298C  5009               	movf	(___fladd@b+3)^0,w,c
  9976  00298E  580D               	subwfb	(___fladd@a+3)^0,w,c
  9977  002990  6E11               	movwf	(??___fladd+3)^0,c
  9978  002992  0EFF               	movlw	255
  9979  002994  240E               	addwf	??___fladd^0,w,c
  9980  002996  6E06               	movwf	___fladd@b^0,c
  9981  002998  0EFF               	movlw	255
  9982  00299A  200F               	addwfc	(??___fladd+1)^0,w,c
  9983  00299C  6E07               	movwf	(___fladd@b+1)^0,c
  9984  00299E  0EFF               	movlw	255
  9985  0029A0  2010               	addwfc	(??___fladd+2)^0,w,c
  9986  0029A2  6E08               	movwf	(___fladd@b+2)^0,c
  9987  0029A4  0EFF               	movlw	255
  9988  0029A6  2011               	addwfc	(??___fladd+3)^0,w,c
  9989  0029A8  6E09               	movwf	(___fladd@b+3)^0,c
  9990  0029AA  0E80               	movlw	128
  9991  0029AC  1A12               	xorwf	___fladd@signs^0,f,c
  9992  0029AE  6C15               	negf	___fladd@grs^0,c
  9993  0029B0  5015               	movf	___fladd@grs^0,w,c
  9994  0029B2  A4D8               	btfss	status,2,c
  9995  0029B4  D00F               	goto	l1975
  9996  0029B6  0E01               	movlw	1
  9997  0029B8  2606               	addwf	___fladd@b^0,f,c
  9998  0029BA  0E00               	movlw	0
  9999  0029BC  2207               	addwfc	(___fladd@b+1)^0,f,c
 10000  0029BE  2208               	addwfc	(___fladd@b+2)^0,f,c
 10001  0029C0  2209               	addwfc	(___fladd@b+3)^0,f,c
 10002  0029C2  D008               	goto	l1975
 10003  0029C4                     l6474:
 10004  0029C4  500A               	movf	___fladd@a^0,w,c
 10005  0029C6  5E06               	subwf	___fladd@b^0,f,c
 10006  0029C8  500B               	movf	(___fladd@a+1)^0,w,c
 10007  0029CA  5A07               	subwfb	(___fladd@b+1)^0,f,c
 10008  0029CC  500C               	movf	(___fladd@a+2)^0,w,c
 10009  0029CE  5A08               	subwfb	(___fladd@b+2)^0,f,c
 10010  0029D0  500D               	movf	(___fladd@a+3)^0,w,c
 10011  0029D2  5A09               	subwfb	(___fladd@b+3)^0,f,c
 10012  0029D4                     l1975:
 10013  0029D4  5006               	movf	___fladd@b^0,w,c
 10014  0029D6  1007               	iorwf	(___fladd@b+1)^0,w,c
 10015  0029D8  1008               	iorwf	(___fladd@b+2)^0,w,c
 10016  0029DA  1009               	iorwf	(___fladd@b+3)^0,w,c
 10017  0029DC  A4D8               	btfss	status,2,c
 10018  0029DE  D01C               	goto	l6498
 10019  0029E0  5015               	movf	___fladd@grs^0,w,c
 10020  0029E2  A4D8               	btfss	status,2,c
 10021  0029E4  D019               	goto	l6498
 10022  0029E6  0E00               	movlw	0
 10023  0029E8  6E06               	movwf	?___fladd^0,c
 10024  0029EA  0E00               	movlw	0
 10025  0029EC  6E07               	movwf	(?___fladd+1)^0,c
 10026  0029EE  0E00               	movlw	0
 10027  0029F0  6E08               	movwf	(?___fladd+2)^0,c
 10028  0029F2  0E00               	movlw	0
 10029  0029F4  6E09               	movwf	(?___fladd+3)^0,c
 10030  0029F6  0012               	return	
 10031  0029F8                     l6482:
 10032  0029F8  90D8               	bcf	status,0,c
 10033  0029FA  3606               	rlcf	___fladd@b^0,f,c
 10034  0029FC  3607               	rlcf	(___fladd@b+1)^0,f,c
 10035  0029FE  3608               	rlcf	(___fladd@b+2)^0,f,c
 10036  002A00  3609               	rlcf	(___fladd@b+3)^0,f,c
 10037  002A02  BE15               	btfsc	___fladd@grs^0,7,c
 10038  002A04  8006               	bsf	___fladd@b^0,0,c
 10039  002A06  A015               	btfss	___fladd@grs^0,0,c
 10040  002A08  D002               	goto	l6492
 10041  002A0A  80D8               	bsf	status,0,c
 10042  002A0C  D001               	goto	L14
 10043  002A0E                     l6492:
 10044  002A0E  90D8               	bcf	status,0,c
 10045  002A10                     L14:
 10046  002A10  3615               	rlcf	___fladd@grs^0,f,c
 10047  002A12  5014               	movf	___fladd@bexp^0,w,c
 10048  002A14  A4D8               	btfss	status,2,c
 10049  002A16  0614               	decf	___fladd@bexp^0,f,c
 10050  002A18                     l6498:
 10051  002A18  AE08               	btfss	(___fladd@b+2)^0,7,c
 10052  002A1A  D7EE               	goto	l6482
 10053  002A1C                     u6750:
 10054  002A1C  0E00               	movlw	0
 10055  002A1E  6E13               	movwf	___fladd@aexp^0,c
 10056  002A20  AE15               	btfss	___fladd@grs^0,7,c
 10057  002A22  D00C               	goto	l1984
 10058  002A24  0060  F054  F00E   	movff	___fladd@grs,??___fladd
 10059  002A2A  0E7F               	movlw	127
 10060  002A2C  160E               	andwf	??___fladd^0,f,c
 10061  002A2E  B4D8               	btfsc	status,2,c
 10062  002A30  D003               	goto	l1985
 10063  002A32                     u6770:
 10064  002A32  0E01               	movlw	1
 10065  002A34  6E13               	movwf	___fladd@aexp^0,c
 10066  002A36  D002               	goto	l1984
 10067  002A38                     l1985:
 10068  002A38  B006               	btfsc	___fladd@b^0,0,c
 10069  002A3A  D7FB               	goto	u6770
 10070  002A3C                     l1984:
 10071  002A3C  5013               	movf	___fladd@aexp^0,w,c
 10072  002A3E  B4D8               	btfsc	status,2,c
 10073  002A40  D028               	goto	l6518
 10074  002A42  0E01               	movlw	1
 10075  002A44  2606               	addwf	___fladd@b^0,f,c
 10076  002A46  0E00               	movlw	0
 10077  002A48  2207               	addwfc	(___fladd@b+1)^0,f,c
 10078  002A4A  2208               	addwfc	(___fladd@b+2)^0,f,c
 10079  002A4C  2209               	addwfc	(___fladd@b+3)^0,f,c
 10080  002A4E  A009               	btfss	(___fladd@b+3)^0,0,c
 10081  002A50  D020               	goto	l6518
 10082  002A52  0060  F018  F00E   	movff	___fladd@b,??___fladd
 10083  002A58  0060  F01C  F00F   	movff	___fladd@b+1,??___fladd+1
 10084  002A5E  0060  F020  F010   	movff	___fladd@b+2,??___fladd+2
 10085  002A64  0060  F024  F011   	movff	___fladd@b+3,??___fladd+3
 10086  002A6A  3411               	rlcf	(??___fladd+3)^0,w,c
 10087  002A6C  3211               	rrcf	(??___fladd+3)^0,f,c
 10088  002A6E  3210               	rrcf	(??___fladd+2)^0,f,c
 10089  002A70  320F               	rrcf	(??___fladd+1)^0,f,c
 10090  002A72  320E               	rrcf	??___fladd^0,f,c
 10091  002A74  0060  F038  F006   	movff	??___fladd,___fladd@b
 10092  002A7A  0060  F03C  F007   	movff	??___fladd+1,___fladd@b+1
 10093  002A80  0060  F040  F008   	movff	??___fladd+2,___fladd@b+2
 10094  002A86  0060  F044  F009   	movff	??___fladd+3,___fladd@b+3
 10095  002A8C  2814               	incf	___fladd@bexp^0,w,c
 10096  002A8E  A4D8               	btfss	status,2,c
 10097  002A90  2A14               	incf	___fladd@bexp^0,f,c
 10098  002A92                     l6518:
 10099  002A92  2814               	incf	___fladd@bexp^0,w,c
 10100  002A94  B4D8               	btfsc	status,2,c
 10101  002A96  D003               	goto	u6830
 10102  002A98  5014               	movf	___fladd@bexp^0,w,c
 10103  002A9A  A4D8               	btfss	status,2,c
 10104  002A9C  D00D               	goto	l6526
 10105  002A9E                     u6830:
 10106  002A9E  0E00               	movlw	0
 10107  002AA0  6E06               	movwf	___fladd@b^0,c
 10108  002AA2  0E00               	movlw	0
 10109  002AA4  6E07               	movwf	(___fladd@b+1)^0,c
 10110  002AA6  0E00               	movlw	0
 10111  002AA8  6E08               	movwf	(___fladd@b+2)^0,c
 10112  002AAA  0E00               	movlw	0
 10113  002AAC  6E09               	movwf	(___fladd@b+3)^0,c
 10114  002AAE  5014               	movf	___fladd@bexp^0,w,c
 10115  002AB0  A4D8               	btfss	status,2,c
 10116  002AB2  D002               	goto	l6526
 10117  002AB4  0E00               	movlw	0
 10118  002AB6  6E12               	movwf	___fladd@signs^0,c
 10119  002AB8                     l6526:
 10120  002AB8  A014               	btfss	___fladd@bexp^0,0,c
 10121  002ABA  D002               	goto	l6530
 10122  002ABC  8E08               	bsf	(___fladd@b+2)^0,7,c
 10123  002ABE  D001               	goto	l6532
 10124  002AC0                     l6530:
 10125  002AC0  9E08               	bcf	(___fladd@b+2)^0,7,c
 10126  002AC2                     l6532:
 10127  002AC2  90D8               	bcf	status,0,c
 10128  002AC4  3014               	rrcf	___fladd@bexp^0,w,c
 10129  002AC6  6E09               	movwf	(___fladd@b+3)^0,c
 10130  002AC8  BE12               	btfsc	___fladd@signs^0,7,c
 10131  002ACA  8E09               	bsf	(___fladd@b+3)^0,7,c
 10132  002ACC  0060  F018  F006   	movff	___fladd@b,?___fladd
 10133  002AD2  0060  F01C  F007   	movff	___fladd@b+1,?___fladd+1
 10134  002AD8  0060  F020  F008   	movff	___fladd@b+2,?___fladd+2
 10135  002ADE  0060  F024  F009   	movff	___fladd@b+3,?___fladd+3
 10136  002AE4  0012               	return		;funcret
 10137  002AE6                     __end_of___fladd:
 10138                           	opt callstack 0
 10139                           
 10140 ;; *************** function ___flmul *****************
 10141 ;; Defined at:
 10142 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 10143 ;; Parameters:    Size  Location     Type
 10144 ;;  b               4   21[COMRAM] unsigned char 
 10145 ;;  a               4   25[COMRAM] unsigned char 
 10146 ;; Auto vars:     Size  Location     Type
 10147 ;;  prod            4   40[COMRAM] struct .
 10148 ;;  grs             4   36[COMRAM] unsigned long 
 10149 ;;  temp            2   44[COMRAM] struct .
 10150 ;;  bexp            1   35[COMRAM] unsigned char 
 10151 ;;  aexp            1   34[COMRAM] unsigned char 
 10152 ;;  sign            1   33[COMRAM] unsigned char 
 10153 ;; Return value:  Size  Location     Type
 10154 ;;                  4   21[COMRAM] unsigned char 
 10155 ;; Registers used:
 10156 ;;		wreg, status,2, status,0, prodl, prodh
 10157 ;; Tracked objects:
 10158 ;;		On entry : 0/0
 10159 ;;		On exit  : 0/0
 10160 ;;		Unchanged: 0/0
 10161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10162 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10163 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10164 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10165 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10166 ;;Total ram usage:       25 bytes
 10167 ;; Hardware stack levels used:    1
 10168 ;; Hardware stack levels required when called:    4
 10169 ;; This function calls:
 10170 ;;		Nothing
 10171 ;; This function is called by:
 10172 ;;		_lp_filter
 10173 ;;		_calc_pot
 10174 ;; This function uses a non-reentrant model
 10175 ;;
 10176                           
 10177                           	psect	text64
 10178  00241A                     __ptext64:
 10179                           	opt callstack 0
 10180  00241A                     ___flmul:
 10181                           	opt callstack 23
 10182                           
 10183                           ;incstack = 0
 10184  00241A  5019               	movf	(___flmul@b+3)^0,w,c
 10185  00241C  0B80               	andlw	128
 10186  00241E  6E22               	movwf	___flmul@sign^0,c
 10187  002420  5019               	movf	(___flmul@b+3)^0,w,c
 10188  002422  2419               	addwf	(___flmul@b+3)^0,w,c
 10189  002424  6E24               	movwf	___flmul@bexp^0,c
 10190  002426  BE18               	btfsc	(___flmul@b+2)^0,7,c
 10191  002428  8024               	bsf	___flmul@bexp^0,0,c
 10192  00242A  5024               	movf	___flmul@bexp^0,w,c
 10193  00242C  B4D8               	btfsc	status,2,c
 10194  00242E  D00D               	goto	l6760
 10195  002430  2824               	incf	___flmul@bexp^0,w,c
 10196  002432  A4D8               	btfss	status,2,c
 10197  002434  D008               	goto	l6758
 10198  002436  0E00               	movlw	0
 10199  002438  6E16               	movwf	___flmul@b^0,c
 10200  00243A  0E00               	movlw	0
 10201  00243C  6E17               	movwf	(___flmul@b+1)^0,c
 10202  00243E  0E00               	movlw	0
 10203  002440  6E18               	movwf	(___flmul@b+2)^0,c
 10204  002442  0E00               	movlw	0
 10205  002444  6E19               	movwf	(___flmul@b+3)^0,c
 10206  002446                     l6758:
 10207  002446  8E18               	bsf	(___flmul@b+2)^0,7,c
 10208  002448  D008               	goto	l6762
 10209  00244A                     l6760:
 10210  00244A  0E00               	movlw	0
 10211  00244C  6E16               	movwf	___flmul@b^0,c
 10212  00244E  0E00               	movlw	0
 10213  002450  6E17               	movwf	(___flmul@b+1)^0,c
 10214  002452  0E00               	movlw	0
 10215  002454  6E18               	movwf	(___flmul@b+2)^0,c
 10216  002456  0E00               	movlw	0
 10217  002458  6E19               	movwf	(___flmul@b+3)^0,c
 10218  00245A                     l6762:
 10219  00245A  501D               	movf	(___flmul@a+3)^0,w,c
 10220  00245C  0B80               	andlw	128
 10221  00245E  1A22               	xorwf	___flmul@sign^0,f,c
 10222  002460  501D               	movf	(___flmul@a+3)^0,w,c
 10223  002462  241D               	addwf	(___flmul@a+3)^0,w,c
 10224  002464  6E23               	movwf	___flmul@aexp^0,c
 10225  002466  BE1C               	btfsc	(___flmul@a+2)^0,7,c
 10226  002468  8023               	bsf	___flmul@aexp^0,0,c
 10227  00246A  5023               	movf	___flmul@aexp^0,w,c
 10228  00246C  B4D8               	btfsc	status,2,c
 10229  00246E  D00D               	goto	l6778
 10230  002470  2823               	incf	___flmul@aexp^0,w,c
 10231  002472  A4D8               	btfss	status,2,c
 10232  002474  D008               	goto	l6776
 10233  002476  0E00               	movlw	0
 10234  002478  6E1A               	movwf	___flmul@a^0,c
 10235  00247A  0E00               	movlw	0
 10236  00247C  6E1B               	movwf	(___flmul@a+1)^0,c
 10237  00247E  0E00               	movlw	0
 10238  002480  6E1C               	movwf	(___flmul@a+2)^0,c
 10239  002482  0E00               	movlw	0
 10240  002484  6E1D               	movwf	(___flmul@a+3)^0,c
 10241  002486                     l6776:
 10242  002486  8E1C               	bsf	(___flmul@a+2)^0,7,c
 10243  002488  D008               	goto	l2044
 10244  00248A                     l6778:
 10245  00248A  0E00               	movlw	0
 10246  00248C  6E1A               	movwf	___flmul@a^0,c
 10247  00248E  0E00               	movlw	0
 10248  002490  6E1B               	movwf	(___flmul@a+1)^0,c
 10249  002492  0E00               	movlw	0
 10250  002494  6E1C               	movwf	(___flmul@a+2)^0,c
 10251  002496  0E00               	movlw	0
 10252  002498  6E1D               	movwf	(___flmul@a+3)^0,c
 10253  00249A                     l2044:
 10254  00249A  5023               	movf	___flmul@aexp^0,w,c
 10255  00249C  B4D8               	btfsc	status,2,c
 10256  00249E  D003               	goto	u7240
 10257  0024A0  5024               	movf	___flmul@bexp^0,w,c
 10258  0024A2  A4D8               	btfss	status,2,c
 10259  0024A4  D009               	goto	l6786
 10260  0024A6                     u7240:
 10261  0024A6  0E00               	movlw	0
 10262  0024A8  6E16               	movwf	?___flmul^0,c
 10263  0024AA  0E00               	movlw	0
 10264  0024AC  6E17               	movwf	(?___flmul+1)^0,c
 10265  0024AE  0E00               	movlw	0
 10266  0024B0  6E18               	movwf	(?___flmul+2)^0,c
 10267  0024B2  0E00               	movlw	0
 10268  0024B4  6E19               	movwf	(?___flmul+3)^0,c
 10269  0024B6  0012               	return	
 10270  0024B8                     l6786:
 10271  0024B8  501C               	movf	(___flmul@a+2)^0,w,c
 10272  0024BA  0216               	mulwf	___flmul@b^0,c
 10273  0024BC  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10274  0024C2  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10275  0024C8  502D               	movf	___flmul@temp^0,w,c
 10276  0024CA  6E25               	movwf	___flmul@grs^0,c
 10277  0024CC  6A26               	clrf	(___flmul@grs+1)^0,c
 10278  0024CE  6A27               	clrf	(___flmul@grs+2)^0,c
 10279  0024D0  6A28               	clrf	(___flmul@grs+3)^0,c
 10280  0024D2  502E               	movf	(___flmul@temp+1)^0,w,c
 10281  0024D4  6E29               	movwf	___flmul@prod^0,c
 10282  0024D6  6A2A               	clrf	(___flmul@prod+1)^0,c
 10283  0024D8  6A2B               	clrf	(___flmul@prod+2)^0,c
 10284  0024DA  6A2C               	clrf	(___flmul@prod+3)^0,c
 10285  0024DC  501B               	movf	(___flmul@a+1)^0,w,c
 10286  0024DE  0217               	mulwf	(___flmul@b+1)^0,c
 10287  0024E0  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10288  0024E6  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10289  0024EC  502D               	movf	___flmul@temp^0,w,c
 10290  0024EE  2625               	addwf	___flmul@grs^0,f,c
 10291  0024F0  0E00               	movlw	0
 10292  0024F2  2226               	addwfc	(___flmul@grs+1)^0,f,c
 10293  0024F4  2227               	addwfc	(___flmul@grs+2)^0,f,c
 10294  0024F6  2228               	addwfc	(___flmul@grs+3)^0,f,c
 10295  0024F8  502E               	movf	(___flmul@temp+1)^0,w,c
 10296  0024FA  2629               	addwf	___flmul@prod^0,f,c
 10297  0024FC  0E00               	movlw	0
 10298  0024FE  222A               	addwfc	(___flmul@prod+1)^0,f,c
 10299  002500  222B               	addwfc	(___flmul@prod+2)^0,f,c
 10300  002502  222C               	addwfc	(___flmul@prod+3)^0,f,c
 10301  002504  501A               	movf	___flmul@a^0,w,c
 10302  002506  0218               	mulwf	(___flmul@b+2)^0,c
 10303  002508  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10304  00250E  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10305  002514  502D               	movf	___flmul@temp^0,w,c
 10306  002516  2625               	addwf	___flmul@grs^0,f,c
 10307  002518  0E00               	movlw	0
 10308  00251A  2226               	addwfc	(___flmul@grs+1)^0,f,c
 10309  00251C  2227               	addwfc	(___flmul@grs+2)^0,f,c
 10310  00251E  2228               	addwfc	(___flmul@grs+3)^0,f,c
 10311  002520  502E               	movf	(___flmul@temp+1)^0,w,c
 10312  002522  2629               	addwf	___flmul@prod^0,f,c
 10313  002524  0E00               	movlw	0
 10314  002526  222A               	addwfc	(___flmul@prod+1)^0,f,c
 10315  002528  222B               	addwfc	(___flmul@prod+2)^0,f,c
 10316  00252A  222C               	addwfc	(___flmul@prod+3)^0,f,c
 10317  00252C  0060  F09C  F028   	movff	___flmul@grs+2,___flmul@grs+3
 10318  002532  0060  F098  F027   	movff	___flmul@grs+1,___flmul@grs+2
 10319  002538  0060  F094  F026   	movff	___flmul@grs,___flmul@grs+1
 10320  00253E  6A25               	clrf	___flmul@grs^0,c
 10321  002540  501A               	movf	___flmul@a^0,w,c
 10322  002542  0217               	mulwf	(___flmul@b+1)^0,c
 10323  002544  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10324  00254A  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10325  002550  502D               	movf	___flmul@temp^0,w,c
 10326  002552  2625               	addwf	___flmul@grs^0,f,c
 10327  002554  502E               	movf	(___flmul@temp+1)^0,w,c
 10328  002556  2226               	addwfc	(___flmul@grs+1)^0,f,c
 10329  002558  0E00               	movlw	0
 10330  00255A  2227               	addwfc	(___flmul@grs+2)^0,f,c
 10331  00255C  0E00               	movlw	0
 10332  00255E  2228               	addwfc	(___flmul@grs+3)^0,f,c
 10333  002560  501B               	movf	(___flmul@a+1)^0,w,c
 10334  002562  0216               	mulwf	___flmul@b^0,c
 10335  002564  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10336  00256A  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10337  002570  502D               	movf	___flmul@temp^0,w,c
 10338  002572  2625               	addwf	___flmul@grs^0,f,c
 10339  002574  502E               	movf	(___flmul@temp+1)^0,w,c
 10340  002576  2226               	addwfc	(___flmul@grs+1)^0,f,c
 10341  002578  0E00               	movlw	0
 10342  00257A  2227               	addwfc	(___flmul@grs+2)^0,f,c
 10343  00257C  0E00               	movlw	0
 10344  00257E  2228               	addwfc	(___flmul@grs+3)^0,f,c
 10345  002580  0060  F09C  F028   	movff	___flmul@grs+2,___flmul@grs+3
 10346  002586  0060  F098  F027   	movff	___flmul@grs+1,___flmul@grs+2
 10347  00258C  0060  F094  F026   	movff	___flmul@grs,___flmul@grs+1
 10348  002592  6A25               	clrf	___flmul@grs^0,c
 10349  002594  501A               	movf	___flmul@a^0,w,c
 10350  002596  0216               	mulwf	___flmul@b^0,c
 10351  002598  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10352  00259E  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10353  0025A4  502D               	movf	___flmul@temp^0,w,c
 10354  0025A6  2625               	addwf	___flmul@grs^0,f,c
 10355  0025A8  502E               	movf	(___flmul@temp+1)^0,w,c
 10356  0025AA  2226               	addwfc	(___flmul@grs+1)^0,f,c
 10357  0025AC  0E00               	movlw	0
 10358  0025AE  2227               	addwfc	(___flmul@grs+2)^0,f,c
 10359  0025B0  0E00               	movlw	0
 10360  0025B2  2228               	addwfc	(___flmul@grs+3)^0,f,c
 10361  0025B4  501C               	movf	(___flmul@a+2)^0,w,c
 10362  0025B6  0217               	mulwf	(___flmul@b+1)^0,c
 10363  0025B8  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10364  0025BE  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10365  0025C4  502D               	movf	___flmul@temp^0,w,c
 10366  0025C6  2629               	addwf	___flmul@prod^0,f,c
 10367  0025C8  502E               	movf	(___flmul@temp+1)^0,w,c
 10368  0025CA  222A               	addwfc	(___flmul@prod+1)^0,f,c
 10369  0025CC  0E00               	movlw	0
 10370  0025CE  222B               	addwfc	(___flmul@prod+2)^0,f,c
 10371  0025D0  0E00               	movlw	0
 10372  0025D2  222C               	addwfc	(___flmul@prod+3)^0,f,c
 10373  0025D4  501B               	movf	(___flmul@a+1)^0,w,c
 10374  0025D6  0218               	mulwf	(___flmul@b+2)^0,c
 10375  0025D8  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10376  0025DE  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10377  0025E4  502D               	movf	___flmul@temp^0,w,c
 10378  0025E6  2629               	addwf	___flmul@prod^0,f,c
 10379  0025E8  502E               	movf	(___flmul@temp+1)^0,w,c
 10380  0025EA  222A               	addwfc	(___flmul@prod+1)^0,f,c
 10381  0025EC  0E00               	movlw	0
 10382  0025EE  222B               	addwfc	(___flmul@prod+2)^0,f,c
 10383  0025F0  0E00               	movlw	0
 10384  0025F2  222C               	addwfc	(___flmul@prod+3)^0,f,c
 10385  0025F4  501C               	movf	(___flmul@a+2)^0,w,c
 10386  0025F6  0218               	mulwf	(___flmul@b+2)^0,c
 10387  0025F8  006F FFCC  F02D    	movff	prodl,___flmul@temp
 10388  0025FE  006F FFD0  F02E    	movff	prodh,___flmul@temp+1
 10389  002604  502D               	movf	___flmul@temp^0,w,c
 10390  002606  6E1E               	movwf	??___flmul^0,c
 10391  002608  502E               	movf	(___flmul@temp+1)^0,w,c
 10392  00260A  6E1F               	movwf	(??___flmul+1)^0,c
 10393  00260C  6A20               	clrf	(??___flmul+2)^0,c
 10394  00260E  6A21               	clrf	(??___flmul+3)^0,c
 10395  002610  0060  F080  F021   	movff	??___flmul+2,??___flmul+3
 10396  002616  0060  F07C  F020   	movff	??___flmul+1,??___flmul+2
 10397  00261C  0060  F078  F01F   	movff	??___flmul,??___flmul+1
 10398  002622  6A1E               	clrf	??___flmul^0,c
 10399  002624  501E               	movf	??___flmul^0,w,c
 10400  002626  2629               	addwf	___flmul@prod^0,f,c
 10401  002628  501F               	movf	(??___flmul+1)^0,w,c
 10402  00262A  222A               	addwfc	(___flmul@prod+1)^0,f,c
 10403  00262C  5020               	movf	(??___flmul+2)^0,w,c
 10404  00262E  222B               	addwfc	(___flmul@prod+2)^0,f,c
 10405  002630  5021               	movf	(??___flmul+3)^0,w,c
 10406  002632  222C               	addwfc	(___flmul@prod+3)^0,f,c
 10407  002634  5028               	movf	(___flmul@grs+3)^0,w,c
 10408  002636  2629               	addwf	___flmul@prod^0,f,c
 10409  002638  0E00               	movlw	0
 10410  00263A  222A               	addwfc	(___flmul@prod+1)^0,f,c
 10411  00263C  222B               	addwfc	(___flmul@prod+2)^0,f,c
 10412  00263E  222C               	addwfc	(___flmul@prod+3)^0,f,c
 10413  002640  0060  F09C  F028   	movff	___flmul@grs+2,___flmul@grs+3
 10414  002646  0060  F098  F027   	movff	___flmul@grs+1,___flmul@grs+2
 10415  00264C  0060  F094  F026   	movff	___flmul@grs,___flmul@grs+1
 10416  002652  6A25               	clrf	___flmul@grs^0,c
 10417  002654  5023               	movf	___flmul@aexp^0,w,c
 10418  002656  0060  F090  F01E   	movff	___flmul@bexp,??___flmul
 10419  00265C  6A1F               	clrf	(??___flmul+1)^0,c
 10420  00265E  261E               	addwf	??___flmul^0,f,c
 10421  002660  0E00               	movlw	0
 10422  002662  221F               	addwfc	(??___flmul+1)^0,f,c
 10423  002664  0E82               	movlw	130
 10424  002666  241E               	addwf	??___flmul^0,w,c
 10425  002668  6E2D               	movwf	___flmul@temp^0,c
 10426  00266A  0EFF               	movlw	255
 10427  00266C  201F               	addwfc	(??___flmul+1)^0,w,c
 10428  00266E  6E2E               	movwf	(___flmul@temp+1)^0,c
 10429  002670  D00F               	goto	l6834
 10430  002672                     l6828:
 10431  002672  90D8               	bcf	status,0,c
 10432  002674  3629               	rlcf	___flmul@prod^0,f,c
 10433  002676  362A               	rlcf	(___flmul@prod+1)^0,f,c
 10434  002678  362B               	rlcf	(___flmul@prod+2)^0,f,c
 10435  00267A  362C               	rlcf	(___flmul@prod+3)^0,f,c
 10436  00267C  BE28               	btfsc	(___flmul@grs+3)^0,7,c
 10437  00267E  8029               	bsf	___flmul@prod^0,0,c
 10438  002680  90D8               	bcf	status,0,c
 10439  002682  3625               	rlcf	___flmul@grs^0,f,c
 10440  002684  3626               	rlcf	(___flmul@grs+1)^0,f,c
 10441  002686  3627               	rlcf	(___flmul@grs+2)^0,f,c
 10442  002688  3628               	rlcf	(___flmul@grs+3)^0,f,c
 10443  00268A  062D               	decf	___flmul@temp^0,f,c
 10444  00268C  A0D8               	btfss	status,0,c
 10445  00268E  062E               	decf	(___flmul@temp+1)^0,f,c
 10446  002690                     l6834:
 10447  002690  AE2B               	btfss	(___flmul@prod+2)^0,7,c
 10448  002692  D7EF               	goto	l6828
 10449  002694  0E00               	movlw	0
 10450  002696  6E23               	movwf	___flmul@aexp^0,c
 10451  002698  AE28               	btfss	(___flmul@grs+3)^0,7,c
 10452  00269A  D017               	goto	l2053
 10453  00269C  0EFF               	movlw	255
 10454  00269E  1425               	andwf	___flmul@grs^0,w,c
 10455  0026A0  6E1E               	movwf	??___flmul^0,c
 10456  0026A2  0EFF               	movlw	255
 10457  0026A4  1426               	andwf	(___flmul@grs+1)^0,w,c
 10458  0026A6  6E1F               	movwf	(??___flmul+1)^0,c
 10459  0026A8  0EFF               	movlw	255
 10460  0026AA  1427               	andwf	(___flmul@grs+2)^0,w,c
 10461  0026AC  6E20               	movwf	(??___flmul+2)^0,c
 10462  0026AE  0E7F               	movlw	127
 10463  0026B0  1428               	andwf	(___flmul@grs+3)^0,w,c
 10464  0026B2  6E21               	movwf	(??___flmul+3)^0,c
 10465  0026B4  501E               	movf	??___flmul^0,w,c
 10466  0026B6  101F               	iorwf	(??___flmul+1)^0,w,c
 10467  0026B8  1020               	iorwf	(??___flmul+2)^0,w,c
 10468  0026BA  1021               	iorwf	(??___flmul+3)^0,w,c
 10469  0026BC  B4D8               	btfsc	status,2,c
 10470  0026BE  D003               	goto	l2054
 10471  0026C0                     u7280:
 10472  0026C0  0E01               	movlw	1
 10473  0026C2  6E23               	movwf	___flmul@aexp^0,c
 10474  0026C4  D002               	goto	l2053
 10475  0026C6                     l2054:
 10476  0026C6  B029               	btfsc	___flmul@prod^0,0,c
 10477  0026C8  D7FB               	goto	u7280
 10478  0026CA                     l2053:
 10479  0026CA  5023               	movf	___flmul@aexp^0,w,c
 10480  0026CC  B4D8               	btfsc	status,2,c
 10481  0026CE  D027               	goto	l6854
 10482  0026D0  0E01               	movlw	1
 10483  0026D2  2629               	addwf	___flmul@prod^0,f,c
 10484  0026D4  0E00               	movlw	0
 10485  0026D6  222A               	addwfc	(___flmul@prod+1)^0,f,c
 10486  0026D8  222B               	addwfc	(___flmul@prod+2)^0,f,c
 10487  0026DA  222C               	addwfc	(___flmul@prod+3)^0,f,c
 10488  0026DC  A02C               	btfss	(___flmul@prod+3)^0,0,c
 10489  0026DE  D01F               	goto	l6854
 10490  0026E0  0060  F0A4  F01E   	movff	___flmul@prod,??___flmul
 10491  0026E6  0060  F0A8  F01F   	movff	___flmul@prod+1,??___flmul+1
 10492  0026EC  0060  F0AC  F020   	movff	___flmul@prod+2,??___flmul+2
 10493  0026F2  0060  F0B0  F021   	movff	___flmul@prod+3,??___flmul+3
 10494  0026F8  3421               	rlcf	(??___flmul+3)^0,w,c
 10495  0026FA  3221               	rrcf	(??___flmul+3)^0,f,c
 10496  0026FC  3220               	rrcf	(??___flmul+2)^0,f,c
 10497  0026FE  321F               	rrcf	(??___flmul+1)^0,f,c
 10498  002700  321E               	rrcf	??___flmul^0,f,c
 10499  002702  0060  F078  F029   	movff	??___flmul,___flmul@prod
 10500  002708  0060  F07C  F02A   	movff	??___flmul+1,___flmul@prod+1
 10501  00270E  0060  F080  F02B   	movff	??___flmul+2,___flmul@prod+2
 10502  002714  0060  F084  F02C   	movff	??___flmul+3,___flmul@prod+3
 10503  00271A  4A2D               	infsnz	___flmul@temp^0,f,c
 10504  00271C  2A2E               	incf	(___flmul@temp+1)^0,f,c
 10505  00271E                     l6854:
 10506  00271E  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
 10507  002720  D00D               	goto	l6858
 10508  002722  502E               	movf	(___flmul@temp+1)^0,w,c
 10509  002724  E103               	bnz	u7320
 10510  002726  282D               	incf	___flmul@temp^0,w,c
 10511  002728  A0D8               	btfss	status,0,c
 10512  00272A  D008               	goto	l6858
 10513  00272C                     u7320:
 10514  00272C  0E00               	movlw	0
 10515  00272E  6E29               	movwf	___flmul@prod^0,c
 10516  002730  0E00               	movlw	0
 10517  002732  6E2A               	movwf	(___flmul@prod+1)^0,c
 10518  002734  0E80               	movlw	128
 10519  002736  6E2B               	movwf	(___flmul@prod+2)^0,c
 10520  002738  0E7F               	movlw	127
 10521  00273A  D021               	goto	L15
 10522  00273C                     l6858:
 10523  00273C  BE2E               	btfsc	(___flmul@temp+1)^0,7,c
 10524  00273E  D005               	goto	u7330
 10525  002740  502E               	movf	(___flmul@temp+1)^0,w,c
 10526  002742  E10E               	bnz	l2061
 10527  002744  042D               	decf	___flmul@temp^0,w,c
 10528  002746  B0D8               	btfsc	status,0,c
 10529  002748  D00B               	goto	l2061
 10530  00274A                     u7330:
 10531  00274A  0E00               	movlw	0
 10532  00274C  6E29               	movwf	___flmul@prod^0,c
 10533  00274E  0E00               	movlw	0
 10534  002750  6E2A               	movwf	(___flmul@prod+1)^0,c
 10535  002752  0E00               	movlw	0
 10536  002754  6E2B               	movwf	(___flmul@prod+2)^0,c
 10537  002756  0E00               	movlw	0
 10538  002758  6E2C               	movwf	(___flmul@prod+3)^0,c
 10539  00275A  0E00               	movlw	0
 10540  00275C  6E22               	movwf	___flmul@sign^0,c
 10541  00275E  D010               	goto	l6870
 10542  002760                     l2061:
 10543  002760  0060  F0B4  F024   	movff	___flmul@temp,___flmul@bexp
 10544  002766  0EFF               	movlw	255
 10545  002768  1629               	andwf	___flmul@prod^0,f,c
 10546  00276A  0EFF               	movlw	255
 10547  00276C  162A               	andwf	(___flmul@prod+1)^0,f,c
 10548  00276E  0E7F               	movlw	127
 10549  002770  162B               	andwf	(___flmul@prod+2)^0,f,c
 10550  002772  0E00               	movlw	0
 10551  002774  162C               	andwf	(___flmul@prod+3)^0,f,c
 10552  002776  B024               	btfsc	___flmul@bexp^0,0,c
 10553  002778  8E2B               	bsf	(___flmul@prod+2)^0,7,c
 10554  00277A  90D8               	bcf	status,0,c
 10555  00277C  3024               	rrcf	___flmul@bexp^0,w,c
 10556  00277E                     L15:
 10557  00277E  6E2C               	movwf	(___flmul@prod+3)^0,c
 10558  002780                     l6870:
 10559  002780  5022               	movf	___flmul@sign^0,w,c
 10560  002782  122C               	iorwf	(___flmul@prod+3)^0,f,c
 10561  002784  0060  F0A4  F016   	movff	___flmul@prod,?___flmul
 10562  00278A  0060  F0A8  F017   	movff	___flmul@prod+1,?___flmul+1
 10563  002790  0060  F0AC  F018   	movff	___flmul@prod+2,?___flmul+2
 10564  002796  0060  F0B0  F019   	movff	___flmul@prod+3,?___flmul+3
 10565  00279C  0012               	return		;funcret
 10566  00279E                     __end_of___flmul:
 10567                           	opt callstack 0
 10568                           
 10569 ;; *************** function ___fldiv *****************
 10570 ;; Defined at:
 10571 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 10572 ;; Parameters:    Size  Location     Type
 10573 ;;  b               4   54[COMRAM] unsigned char 
 10574 ;;  a               4   58[COMRAM] unsigned char 
 10575 ;; Auto vars:     Size  Location     Type
 10576 ;;  grs             4   73[COMRAM] unsigned long 
 10577 ;;  rem             4   66[COMRAM] unsigned long 
 10578 ;;  new_exp         2   71[COMRAM] short 
 10579 ;;  aexp            1   78[COMRAM] unsigned char 
 10580 ;;  bexp            1   77[COMRAM] unsigned char 
 10581 ;;  sign            1   70[COMRAM] unsigned char 
 10582 ;; Return value:  Size  Location     Type
 10583 ;;                  4   54[COMRAM] unsigned char 
 10584 ;; Registers used:
 10585 ;;		wreg, status,2, status,0
 10586 ;; Tracked objects:
 10587 ;;		On entry : 0/1
 10588 ;;		On exit  : 0/0
 10589 ;;		Unchanged: 0/0
 10590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10591 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10592 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10593 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10594 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10595 ;;Total ram usage:       25 bytes
 10596 ;; Hardware stack levels used:    1
 10597 ;; Hardware stack levels required when called:    4
 10598 ;; This function calls:
 10599 ;;		Nothing
 10600 ;; This function is called by:
 10601 ;;		_main
 10602 ;;		_lp_filter
 10603 ;; This function uses a non-reentrant model
 10604 ;;
 10605                           
 10606                           	psect	text65
 10607  0032F6                     __ptext65:
 10608                           	opt callstack 0
 10609  0032F6                     ___fldiv:
 10610                           	opt callstack 26
 10611                           
 10612                           ;incstack = 0
 10613  0032F6  503A               	movf	(___fldiv@b+3)^0,w,c
 10614  0032F8  0B80               	andlw	128
 10615  0032FA  6E47               	movwf	___fldiv@sign^0,c
 10616  0032FC  503A               	movf	(___fldiv@b+3)^0,w,c
 10617  0032FE  243A               	addwf	(___fldiv@b+3)^0,w,c
 10618  003300  6E4E               	movwf	___fldiv@bexp^0,c
 10619  003302  BE39               	btfsc	(___fldiv@b+2)^0,7,c
 10620  003304  804E               	bsf	___fldiv@bexp^0,0,c
 10621  003306  504E               	movf	___fldiv@bexp^0,w,c
 10622  003308  B4D8               	btfsc	status,2,c
 10623  00330A  D00D               	goto	l6624
 10624  00330C  284E               	incf	___fldiv@bexp^0,w,c
 10625  00330E  A4D8               	btfss	status,2,c
 10626  003310  D008               	goto	l6620
 10627  003312  0E00               	movlw	0
 10628  003314  6E37               	movwf	___fldiv@b^0,c
 10629  003316  0E00               	movlw	0
 10630  003318  6E38               	movwf	(___fldiv@b+1)^0,c
 10631  00331A  0E00               	movlw	0
 10632  00331C  6E39               	movwf	(___fldiv@b+2)^0,c
 10633  00331E  0E00               	movlw	0
 10634  003320  6E3A               	movwf	(___fldiv@b+3)^0,c
 10635  003322                     l6620:
 10636  003322  8E39               	bsf	(___fldiv@b+2)^0,7,c
 10637  003324  D006               	goto	L16
 10638  003326                     l6624:
 10639  003326  0E00               	movlw	0
 10640  003328  6E37               	movwf	___fldiv@b^0,c
 10641  00332A  0E00               	movlw	0
 10642  00332C  6E38               	movwf	(___fldiv@b+1)^0,c
 10643  00332E  0E00               	movlw	0
 10644  003330  6E39               	movwf	(___fldiv@b+2)^0,c
 10645  003332                     L16:
 10646  003332  0E00               	movlw	0
 10647  003334  6E3A               	movwf	(___fldiv@b+3)^0,c
 10648  003336  503E               	movf	(___fldiv@a+3)^0,w,c
 10649  003338  0B80               	andlw	128
 10650  00333A  1A47               	xorwf	___fldiv@sign^0,f,c
 10651  00333C  503E               	movf	(___fldiv@a+3)^0,w,c
 10652  00333E  243E               	addwf	(___fldiv@a+3)^0,w,c
 10653  003340  6E4F               	movwf	___fldiv@aexp^0,c
 10654  003342  BE3D               	btfsc	(___fldiv@a+2)^0,7,c
 10655  003344  804F               	bsf	___fldiv@aexp^0,0,c
 10656  003346  504F               	movf	___fldiv@aexp^0,w,c
 10657  003348  B4D8               	btfsc	status,2,c
 10658  00334A  D00D               	goto	l6644
 10659  00334C  284F               	incf	___fldiv@aexp^0,w,c
 10660  00334E  A4D8               	btfss	status,2,c
 10661  003350  D008               	goto	l6640
 10662  003352  0E00               	movlw	0
 10663  003354  6E3B               	movwf	___fldiv@a^0,c
 10664  003356  0E00               	movlw	0
 10665  003358  6E3C               	movwf	(___fldiv@a+1)^0,c
 10666  00335A  0E00               	movlw	0
 10667  00335C  6E3D               	movwf	(___fldiv@a+2)^0,c
 10668  00335E  0E00               	movlw	0
 10669  003360  6E3E               	movwf	(___fldiv@a+3)^0,c
 10670  003362                     l6640:
 10671  003362  8E3D               	bsf	(___fldiv@a+2)^0,7,c
 10672  003364  D006               	goto	L17
 10673  003366                     l6644:
 10674  003366  0E00               	movlw	0
 10675  003368  6E3B               	movwf	___fldiv@a^0,c
 10676  00336A  0E00               	movlw	0
 10677  00336C  6E3C               	movwf	(___fldiv@a+1)^0,c
 10678  00336E  0E00               	movlw	0
 10679  003370  6E3D               	movwf	(___fldiv@a+2)^0,c
 10680  003372                     L17:
 10681  003372  0E00               	movlw	0
 10682  003374  6E3E               	movwf	(___fldiv@a+3)^0,c
 10683  003376  503B               	movf	___fldiv@a^0,w,c
 10684  003378  103C               	iorwf	(___fldiv@a+1)^0,w,c
 10685  00337A  103D               	iorwf	(___fldiv@a+2)^0,w,c
 10686  00337C  103E               	iorwf	(___fldiv@a+3)^0,w,c
 10687  00337E  A4D8               	btfss	status,2,c
 10688  003380  D01B               	goto	l6658
 10689  003382  0E00               	movlw	0
 10690  003384  6E37               	movwf	___fldiv@b^0,c
 10691  003386  0E00               	movlw	0
 10692  003388  6E38               	movwf	(___fldiv@b+1)^0,c
 10693  00338A  0E00               	movlw	0
 10694  00338C  6E39               	movwf	(___fldiv@b+2)^0,c
 10695  00338E  0E00               	movlw	0
 10696  003390  6E3A               	movwf	(___fldiv@b+3)^0,c
 10697  003392  0E80               	movlw	128
 10698  003394  1239               	iorwf	(___fldiv@b+2)^0,f,c
 10699  003396  0E7F               	movlw	127
 10700  003398  123A               	iorwf	(___fldiv@b+3)^0,f,c
 10701  00339A                     l6652:
 10702  00339A  5047               	movf	___fldiv@sign^0,w,c
 10703  00339C  123A               	iorwf	(___fldiv@b+3)^0,f,c
 10704  00339E  0060  F0DC  F037   	movff	___fldiv@b,?___fldiv
 10705  0033A4  0060  F0E0  F038   	movff	___fldiv@b+1,?___fldiv+1
 10706  0033AA  0060  F0E4  F039   	movff	___fldiv@b+2,?___fldiv+2
 10707  0033B0  0060  F0E8  F03A   	movff	___fldiv@b+3,?___fldiv+3
 10708  0033B6  0012               	return	
 10709  0033B8                     l6658:
 10710  0033B8  504E               	movf	___fldiv@bexp^0,w,c
 10711  0033BA  A4D8               	btfss	status,2,c
 10712  0033BC  D009               	goto	l6666
 10713  0033BE  0E00               	movlw	0
 10714  0033C0  6E37               	movwf	?___fldiv^0,c
 10715  0033C2  0E00               	movlw	0
 10716  0033C4  6E38               	movwf	(?___fldiv+1)^0,c
 10717  0033C6  0E00               	movlw	0
 10718  0033C8  6E39               	movwf	(?___fldiv+2)^0,c
 10719  0033CA  0E00               	movlw	0
 10720  0033CC  6E3A               	movwf	(?___fldiv+3)^0,c
 10721  0033CE  0012               	return	
 10722  0033D0                     l6666:
 10723  0033D0  504F               	movf	___fldiv@aexp^0,w,c
 10724  0033D2  0060  F138  F03F   	movff	___fldiv@bexp,??___fldiv
 10725  0033D8  6A40               	clrf	(??___fldiv+1)^0,c
 10726  0033DA  5E3F               	subwf	??___fldiv^0,f,c
 10727  0033DC  0E00               	movlw	0
 10728  0033DE  5A40               	subwfb	(??___fldiv+1)^0,f,c
 10729  0033E0  0E7F               	movlw	127
 10730  0033E2  243F               	addwf	??___fldiv^0,w,c
 10731  0033E4  6E48               	movwf	___fldiv@new_exp^0,c
 10732  0033E6  0E00               	movlw	0
 10733  0033E8  2040               	addwfc	(??___fldiv+1)^0,w,c
 10734  0033EA  6E49               	movwf	(___fldiv@new_exp+1)^0,c
 10735  0033EC  0060  F0DC  F043   	movff	___fldiv@b,___fldiv@rem
 10736  0033F2  0060  F0E0  F044   	movff	___fldiv@b+1,___fldiv@rem+1
 10737  0033F8  0060  F0E4  F045   	movff	___fldiv@b+2,___fldiv@rem+2
 10738  0033FE  0060  F0E8  F046   	movff	___fldiv@b+3,___fldiv@rem+3
 10739  003404  0E00               	movlw	0
 10740  003406  6E37               	movwf	___fldiv@b^0,c
 10741  003408  0E00               	movlw	0
 10742  00340A  6E38               	movwf	(___fldiv@b+1)^0,c
 10743  00340C  0E00               	movlw	0
 10744  00340E  6E39               	movwf	(___fldiv@b+2)^0,c
 10745  003410  0E00               	movlw	0
 10746  003412  6E3A               	movwf	(___fldiv@b+3)^0,c
 10747  003414  0E00               	movlw	0
 10748  003416  6E4A               	movwf	___fldiv@grs^0,c
 10749  003418  0E00               	movlw	0
 10750  00341A  6E4B               	movwf	(___fldiv@grs+1)^0,c
 10751  00341C  0E00               	movlw	0
 10752  00341E  6E4C               	movwf	(___fldiv@grs+2)^0,c
 10753  003420  0E00               	movlw	0
 10754  003422  6E4D               	movwf	(___fldiv@grs+3)^0,c
 10755  003424  0E00               	movlw	0
 10756  003426  6E4F               	movwf	___fldiv@aexp^0,c
 10757  003428  D028               	goto	l2014
 10758  00342A                     l6676:
 10759  00342A  504F               	movf	___fldiv@aexp^0,w,c
 10760  00342C  B4D8               	btfsc	status,2,c
 10761  00342E  D011               	goto	l6684
 10762  003430  90D8               	bcf	status,0,c
 10763  003432  3643               	rlcf	___fldiv@rem^0,f,c
 10764  003434  3644               	rlcf	(___fldiv@rem+1)^0,f,c
 10765  003436  3645               	rlcf	(___fldiv@rem+2)^0,f,c
 10766  003438  3646               	rlcf	(___fldiv@rem+3)^0,f,c
 10767  00343A  90D8               	bcf	status,0,c
 10768  00343C  3637               	rlcf	___fldiv@b^0,f,c
 10769  00343E  3638               	rlcf	(___fldiv@b+1)^0,f,c
 10770  003440  3639               	rlcf	(___fldiv@b+2)^0,f,c
 10771  003442  363A               	rlcf	(___fldiv@b+3)^0,f,c
 10772  003444  BE4D               	btfsc	(___fldiv@grs+3)^0,7,c
 10773  003446  8037               	bsf	___fldiv@b^0,0,c
 10774  003448  90D8               	bcf	status,0,c
 10775  00344A  364A               	rlcf	___fldiv@grs^0,f,c
 10776  00344C  364B               	rlcf	(___fldiv@grs+1)^0,f,c
 10777  00344E  364C               	rlcf	(___fldiv@grs+2)^0,f,c
 10778  003450  364D               	rlcf	(___fldiv@grs+3)^0,f,c
 10779  003452                     l6684:
 10780  003452  503B               	movf	___fldiv@a^0,w,c
 10781  003454  5C43               	subwf	___fldiv@rem^0,w,c
 10782  003456  503C               	movf	(___fldiv@a+1)^0,w,c
 10783  003458  5844               	subwfb	(___fldiv@rem+1)^0,w,c
 10784  00345A  503D               	movf	(___fldiv@a+2)^0,w,c
 10785  00345C  5845               	subwfb	(___fldiv@rem+2)^0,w,c
 10786  00345E  503E               	movf	(___fldiv@a+3)^0,w,c
 10787  003460  5846               	subwfb	(___fldiv@rem+3)^0,w,c
 10788  003462  A0D8               	btfss	status,0,c
 10789  003464  D009               	goto	l6690
 10790  003466  8C4D               	bsf	(___fldiv@grs+3)^0,6,c
 10791  003468  503B               	movf	___fldiv@a^0,w,c
 10792  00346A  5E43               	subwf	___fldiv@rem^0,f,c
 10793  00346C  503C               	movf	(___fldiv@a+1)^0,w,c
 10794  00346E  5A44               	subwfb	(___fldiv@rem+1)^0,f,c
 10795  003470  503D               	movf	(___fldiv@a+2)^0,w,c
 10796  003472  5A45               	subwfb	(___fldiv@rem+2)^0,f,c
 10797  003474  503E               	movf	(___fldiv@a+3)^0,w,c
 10798  003476  5A46               	subwfb	(___fldiv@rem+3)^0,f,c
 10799  003478                     l6690:
 10800  003478  2A4F               	incf	___fldiv@aexp^0,f,c
 10801  00347A                     l2014:
 10802  00347A  0E19               	movlw	25
 10803  00347C  644F               	cpfsgt	___fldiv@aexp^0,c
 10804  00347E  D7D5               	goto	l6676
 10805  003480  5043               	movf	___fldiv@rem^0,w,c
 10806  003482  1044               	iorwf	(___fldiv@rem+1)^0,w,c
 10807  003484  1045               	iorwf	(___fldiv@rem+2)^0,w,c
 10808  003486  1046               	iorwf	(___fldiv@rem+3)^0,w,c
 10809  003488  B4D8               	btfsc	status,2,c
 10810  00348A  D011               	goto	l6702
 10811  00348C  804A               	bsf	___fldiv@grs^0,0,c
 10812  00348E  D00F               	goto	l6702
 10813  003490                     l6696:
 10814  003490  90D8               	bcf	status,0,c
 10815  003492  3637               	rlcf	___fldiv@b^0,f,c
 10816  003494  3638               	rlcf	(___fldiv@b+1)^0,f,c
 10817  003496  3639               	rlcf	(___fldiv@b+2)^0,f,c
 10818  003498  363A               	rlcf	(___fldiv@b+3)^0,f,c
 10819  00349A  BE4D               	btfsc	(___fldiv@grs+3)^0,7,c
 10820  00349C  8037               	bsf	___fldiv@b^0,0,c
 10821  00349E  90D8               	bcf	status,0,c
 10822  0034A0  364A               	rlcf	___fldiv@grs^0,f,c
 10823  0034A2  364B               	rlcf	(___fldiv@grs+1)^0,f,c
 10824  0034A4  364C               	rlcf	(___fldiv@grs+2)^0,f,c
 10825  0034A6  364D               	rlcf	(___fldiv@grs+3)^0,f,c
 10826  0034A8  0648               	decf	___fldiv@new_exp^0,f,c
 10827  0034AA  A0D8               	btfss	status,0,c
 10828  0034AC  0649               	decf	(___fldiv@new_exp+1)^0,f,c
 10829  0034AE                     l6702:
 10830  0034AE  AE39               	btfss	(___fldiv@b+2)^0,7,c
 10831  0034B0  D7EF               	goto	l6696
 10832  0034B2  0E00               	movlw	0
 10833  0034B4  6E4F               	movwf	___fldiv@aexp^0,c
 10834  0034B6  AE4D               	btfss	(___fldiv@grs+3)^0,7,c
 10835  0034B8  D017               	goto	l2025
 10836  0034BA  0EFF               	movlw	255
 10837  0034BC  144A               	andwf	___fldiv@grs^0,w,c
 10838  0034BE  6E3F               	movwf	??___fldiv^0,c
 10839  0034C0  0EFF               	movlw	255
 10840  0034C2  144B               	andwf	(___fldiv@grs+1)^0,w,c
 10841  0034C4  6E40               	movwf	(??___fldiv+1)^0,c
 10842  0034C6  0EFF               	movlw	255
 10843  0034C8  144C               	andwf	(___fldiv@grs+2)^0,w,c
 10844  0034CA  6E41               	movwf	(??___fldiv+2)^0,c
 10845  0034CC  0E7F               	movlw	127
 10846  0034CE  144D               	andwf	(___fldiv@grs+3)^0,w,c
 10847  0034D0  6E42               	movwf	(??___fldiv+3)^0,c
 10848  0034D2  503F               	movf	??___fldiv^0,w,c
 10849  0034D4  1040               	iorwf	(??___fldiv+1)^0,w,c
 10850  0034D6  1041               	iorwf	(??___fldiv+2)^0,w,c
 10851  0034D8  1042               	iorwf	(??___fldiv+3)^0,w,c
 10852  0034DA  B4D8               	btfsc	status,2,c
 10853  0034DC  D003               	goto	l2026
 10854  0034DE                     u7100:
 10855  0034DE  0E01               	movlw	1
 10856  0034E0  6E4F               	movwf	___fldiv@aexp^0,c
 10857  0034E2  D002               	goto	l2025
 10858  0034E4                     l2026:
 10859  0034E4  B037               	btfsc	___fldiv@b^0,0,c
 10860  0034E6  D7FB               	goto	u7100
 10861  0034E8                     l2025:
 10862  0034E8  504F               	movf	___fldiv@aexp^0,w,c
 10863  0034EA  B4D8               	btfsc	status,2,c
 10864  0034EC  D027               	goto	l6722
 10865  0034EE  0E01               	movlw	1
 10866  0034F0  2637               	addwf	___fldiv@b^0,f,c
 10867  0034F2  0E00               	movlw	0
 10868  0034F4  2238               	addwfc	(___fldiv@b+1)^0,f,c
 10869  0034F6  2239               	addwfc	(___fldiv@b+2)^0,f,c
 10870  0034F8  223A               	addwfc	(___fldiv@b+3)^0,f,c
 10871  0034FA  A03A               	btfss	(___fldiv@b+3)^0,0,c
 10872  0034FC  D01F               	goto	l6722
 10873  0034FE  0060  F0DC  F03F   	movff	___fldiv@b,??___fldiv
 10874  003504  0060  F0E0  F040   	movff	___fldiv@b+1,??___fldiv+1
 10875  00350A  0060  F0E4  F041   	movff	___fldiv@b+2,??___fldiv+2
 10876  003510  0060  F0E8  F042   	movff	___fldiv@b+3,??___fldiv+3
 10877  003516  3442               	rlcf	(??___fldiv+3)^0,w,c
 10878  003518  3242               	rrcf	(??___fldiv+3)^0,f,c
 10879  00351A  3241               	rrcf	(??___fldiv+2)^0,f,c
 10880  00351C  3240               	rrcf	(??___fldiv+1)^0,f,c
 10881  00351E  323F               	rrcf	??___fldiv^0,f,c
 10882  003520  0060  F0FC  F037   	movff	??___fldiv,___fldiv@b
 10883  003526  0060  F100  F038   	movff	??___fldiv+1,___fldiv@b+1
 10884  00352C  0060  F104  F039   	movff	??___fldiv+2,___fldiv@b+2
 10885  003532  0060  F108  F03A   	movff	??___fldiv+3,___fldiv@b+3
 10886  003538  4A48               	infsnz	___fldiv@new_exp^0,f,c
 10887  00353A  2A49               	incf	(___fldiv@new_exp+1)^0,f,c
 10888  00353C                     l6722:
 10889  00353C  BE49               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10890  00353E  D010               	goto	l6726
 10891  003540  5049               	movf	(___fldiv@new_exp+1)^0,w,c
 10892  003542  E103               	bnz	u7140
 10893  003544  2848               	incf	___fldiv@new_exp^0,w,c
 10894  003546  A0D8               	btfss	status,0,c
 10895  003548  D00B               	goto	l6726
 10896  00354A                     u7140:
 10897  00354A  0E00               	movlw	0
 10898  00354C  6E49               	movwf	(___fldiv@new_exp+1)^0,c
 10899  00354E  6848               	setf	___fldiv@new_exp^0,c
 10900  003550  0E00               	movlw	0
 10901  003552  6E37               	movwf	___fldiv@b^0,c
 10902  003554  0E00               	movlw	0
 10903  003556  6E38               	movwf	(___fldiv@b+1)^0,c
 10904  003558  0E00               	movlw	0
 10905  00355A  6E39               	movwf	(___fldiv@b+2)^0,c
 10906  00355C  0E00               	movlw	0
 10907  00355E  6E3A               	movwf	(___fldiv@b+3)^0,c
 10908  003560                     l6726:
 10909  003560  BE49               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10910  003562  D005               	goto	u7150
 10911  003564  5049               	movf	(___fldiv@new_exp+1)^0,w,c
 10912  003566  E111               	bnz	l6730
 10913  003568  0448               	decf	___fldiv@new_exp^0,w,c
 10914  00356A  B0D8               	btfsc	status,0,c
 10915  00356C  D00E               	goto	l6730
 10916  00356E                     u7150:
 10917  00356E  0E00               	movlw	0
 10918  003570  6E49               	movwf	(___fldiv@new_exp+1)^0,c
 10919  003572  0E00               	movlw	0
 10920  003574  6E48               	movwf	___fldiv@new_exp^0,c
 10921  003576  0E00               	movlw	0
 10922  003578  6E37               	movwf	___fldiv@b^0,c
 10923  00357A  0E00               	movlw	0
 10924  00357C  6E38               	movwf	(___fldiv@b+1)^0,c
 10925  00357E  0E00               	movlw	0
 10926  003580  6E39               	movwf	(___fldiv@b+2)^0,c
 10927  003582  0E00               	movlw	0
 10928  003584  6E3A               	movwf	(___fldiv@b+3)^0,c
 10929  003586  0E00               	movlw	0
 10930  003588  6E47               	movwf	___fldiv@sign^0,c
 10931  00358A                     l6730:
 10932  00358A  0060  F120  F04E   	movff	___fldiv@new_exp,___fldiv@bexp
 10933  003590  A04E               	btfss	___fldiv@bexp^0,0,c
 10934  003592  D002               	goto	l6736
 10935  003594  8E39               	bsf	(___fldiv@b+2)^0,7,c
 10936  003596  D001               	goto	l6738
 10937  003598                     l6736:
 10938  003598  9E39               	bcf	(___fldiv@b+2)^0,7,c
 10939  00359A                     l6738:
 10940  00359A  90D8               	bcf	status,0,c
 10941  00359C  304E               	rrcf	___fldiv@bexp^0,w,c
 10942  00359E  6E3A               	movwf	(___fldiv@b+3)^0,c
 10943  0035A0  D6FC               	goto	l6652
 10944  0035A2                     __end_of___fldiv:
 10945                           	opt callstack 0
 10946                           
 10947 ;; *************** function ___xxtofl *****************
 10948 ;; Defined at:
 10949 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 10950 ;; Parameters:    Size  Location     Type
 10951 ;;  sign            1    wreg     unsigned char 
 10952 ;;  val             4    5[COMRAM] long 
 10953 ;; Auto vars:     Size  Location     Type
 10954 ;;  sign            1   13[COMRAM] unsigned char 
 10955 ;;  arg             4   15[COMRAM] unsigned long 
 10956 ;;  exp             1   14[COMRAM] unsigned char 
 10957 ;; Return value:  Size  Location     Type
 10958 ;;                  4    5[COMRAM] unsigned char 
 10959 ;; Registers used:
 10960 ;;		wreg, status,2, status,0
 10961 ;; Tracked objects:
 10962 ;;		On entry : 3E/1
 10963 ;;		On exit  : 0/0
 10964 ;;		Unchanged: 0/0
 10965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10966 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10967 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10968 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10969 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10970 ;;Total ram usage:       14 bytes
 10971 ;; Hardware stack levels used:    1
 10972 ;; Hardware stack levels required when called:    4
 10973 ;; This function calls:
 10974 ;;		Nothing
 10975 ;; This function is called by:
 10976 ;;		_main
 10977 ;;		_calc_pot
 10978 ;; This function uses a non-reentrant model
 10979 ;;
 10980                           
 10981                           	psect	text66
 10982  003B54                     __ptext66:
 10983                           	opt callstack 0
 10984  003B54                     ___xxtofl:
 10985                           	opt callstack 26
 10986                           
 10987                           ;incstack = 0
 10988                           ;___xxtofl@sign stored from wreg
 10989  003B54  6E0E               	movwf	___xxtofl@sign^0,c
 10990  003B56  500E               	movf	___xxtofl@sign^0,w,c
 10991  003B58  A4D8               	btfss	status,2,c
 10992  003B5A  AE09               	btfss	(___xxtofl@val+3)^0,7,c
 10993  003B5C  D022               	goto	l2085
 10994  003B5E  0060  F018  F00A   	movff	___xxtofl@val,??___xxtofl
 10995  003B64  0060  F01C  F00B   	movff	___xxtofl@val+1,??___xxtofl+1
 10996  003B6A  0060  F020  F00C   	movff	___xxtofl@val+2,??___xxtofl+2
 10997  003B70  0060  F024  F00D   	movff	___xxtofl@val+3,??___xxtofl+3
 10998  003B76  1E0A               	comf	??___xxtofl^0,f,c
 10999  003B78  1E0B               	comf	(??___xxtofl+1)^0,f,c
 11000  003B7A  1E0C               	comf	(??___xxtofl+2)^0,f,c
 11001  003B7C  1E0D               	comf	(??___xxtofl+3)^0,f,c
 11002  003B7E  2A0A               	incf	??___xxtofl^0,f,c
 11003  003B80  0E00               	movlw	0
 11004  003B82  220B               	addwfc	(??___xxtofl+1)^0,f,c
 11005  003B84  220C               	addwfc	(??___xxtofl+2)^0,f,c
 11006  003B86  220D               	addwfc	(??___xxtofl+3)^0,f,c
 11007  003B88  0060  F028  F010   	movff	??___xxtofl,___xxtofl@arg
 11008  003B8E  0060  F02C  F011   	movff	??___xxtofl+1,___xxtofl@arg+1
 11009  003B94  0060  F030  F012   	movff	??___xxtofl+2,___xxtofl@arg+2
 11010  003B9A  0060  F034  F013   	movff	??___xxtofl+3,___xxtofl@arg+3
 11011  003BA0  D00C               	goto	l7032
 11012  003BA2                     l2085:
 11013  003BA2  0060  F018  F010   	movff	___xxtofl@val,___xxtofl@arg
 11014  003BA8  0060  F01C  F011   	movff	___xxtofl@val+1,___xxtofl@arg+1
 11015  003BAE  0060  F020  F012   	movff	___xxtofl@val+2,___xxtofl@arg+2
 11016  003BB4  0060  F024  F013   	movff	___xxtofl@val+3,___xxtofl@arg+3
 11017  003BBA                     l7032:
 11018  003BBA  5006               	movf	___xxtofl@val^0,w,c
 11019  003BBC  1007               	iorwf	(___xxtofl@val+1)^0,w,c
 11020  003BBE  1008               	iorwf	(___xxtofl@val+2)^0,w,c
 11021  003BC0  1009               	iorwf	(___xxtofl@val+3)^0,w,c
 11022  003BC2  A4D8               	btfss	status,2,c
 11023  003BC4  D009               	goto	l7038
 11024  003BC6  0E00               	movlw	0
 11025  003BC8  6E06               	movwf	?___xxtofl^0,c
 11026  003BCA  0E00               	movlw	0
 11027  003BCC  6E07               	movwf	(?___xxtofl+1)^0,c
 11028  003BCE  0E00               	movlw	0
 11029  003BD0  6E08               	movwf	(?___xxtofl+2)^0,c
 11030  003BD2  0E00               	movlw	0
 11031  003BD4  6E09               	movwf	(?___xxtofl+3)^0,c
 11032  003BD6  0012               	return	
 11033  003BD8                     l7038:
 11034  003BD8  0E96               	movlw	150
 11035  003BDA  6E0F               	movwf	___xxtofl@exp^0,c
 11036  003BDC  D006               	goto	l7042
 11037  003BDE                     l7040:
 11038  003BDE  2A0F               	incf	___xxtofl@exp^0,f,c
 11039  003BE0  90D8               	bcf	status,0,c
 11040  003BE2  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
 11041  003BE4  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
 11042  003BE6  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
 11043  003BE8  3210               	rrcf	___xxtofl@arg^0,f,c
 11044  003BEA                     l7042:
 11045  003BEA  0E00               	movlw	0
 11046  003BEC  1410               	andwf	___xxtofl@arg^0,w,c
 11047  003BEE  6E0A               	movwf	??___xxtofl^0,c
 11048  003BF0  0E00               	movlw	0
 11049  003BF2  1411               	andwf	(___xxtofl@arg+1)^0,w,c
 11050  003BF4  6E0B               	movwf	(??___xxtofl+1)^0,c
 11051  003BF6  0E00               	movlw	0
 11052  003BF8  1412               	andwf	(___xxtofl@arg+2)^0,w,c
 11053  003BFA  6E0C               	movwf	(??___xxtofl+2)^0,c
 11054  003BFC  0EFE               	movlw	254
 11055  003BFE  1413               	andwf	(___xxtofl@arg+3)^0,w,c
 11056  003C00  6E0D               	movwf	(??___xxtofl+3)^0,c
 11057  003C02  500A               	movf	??___xxtofl^0,w,c
 11058  003C04  100B               	iorwf	(??___xxtofl+1)^0,w,c
 11059  003C06  100C               	iorwf	(??___xxtofl+2)^0,w,c
 11060  003C08  100D               	iorwf	(??___xxtofl+3)^0,w,c
 11061  003C0A  B4D8               	btfsc	status,2,c
 11062  003C0C  D00D               	goto	l2092
 11063  003C0E  D7E7               	goto	l7040
 11064  003C10                     l7044:
 11065  003C10  2A0F               	incf	___xxtofl@exp^0,f,c
 11066  003C12  0E01               	movlw	1
 11067  003C14  2610               	addwf	___xxtofl@arg^0,f,c
 11068  003C16  0E00               	movlw	0
 11069  003C18  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
 11070  003C1A  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
 11071  003C1C  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
 11072  003C1E  90D8               	bcf	status,0,c
 11073  003C20  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
 11074  003C22  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
 11075  003C24  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
 11076  003C26  3210               	rrcf	___xxtofl@arg^0,f,c
 11077  003C28                     l2092:
 11078  003C28  0E00               	movlw	0
 11079  003C2A  1410               	andwf	___xxtofl@arg^0,w,c
 11080  003C2C  6E0A               	movwf	??___xxtofl^0,c
 11081  003C2E  0E00               	movlw	0
 11082  003C30  1411               	andwf	(___xxtofl@arg+1)^0,w,c
 11083  003C32  6E0B               	movwf	(??___xxtofl+1)^0,c
 11084  003C34  0E00               	movlw	0
 11085  003C36  1412               	andwf	(___xxtofl@arg+2)^0,w,c
 11086  003C38  6E0C               	movwf	(??___xxtofl+2)^0,c
 11087  003C3A  0EFF               	movlw	255
 11088  003C3C  1413               	andwf	(___xxtofl@arg+3)^0,w,c
 11089  003C3E  6E0D               	movwf	(??___xxtofl+3)^0,c
 11090  003C40  500A               	movf	??___xxtofl^0,w,c
 11091  003C42  100B               	iorwf	(??___xxtofl+1)^0,w,c
 11092  003C44  100C               	iorwf	(??___xxtofl+2)^0,w,c
 11093  003C46  100D               	iorwf	(??___xxtofl+3)^0,w,c
 11094  003C48  B4D8               	btfsc	status,2,c
 11095  003C4A  D007               	goto	l7052
 11096  003C4C  D7E1               	goto	l7044
 11097  003C4E                     l7050:
 11098  003C4E  060F               	decf	___xxtofl@exp^0,f,c
 11099  003C50  90D8               	bcf	status,0,c
 11100  003C52  3610               	rlcf	___xxtofl@arg^0,f,c
 11101  003C54  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
 11102  003C56  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
 11103  003C58  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
 11104  003C5A                     l7052:
 11105  003C5A  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
 11106  003C5C  D003               	goto	u7550
 11107  003C5E  0E02               	movlw	2
 11108  003C60  600F               	cpfslt	___xxtofl@exp^0,c
 11109  003C62  D7F5               	goto	l7050
 11110  003C64                     u7550:
 11111  003C64  A00F               	btfss	___xxtofl@exp^0,0,c
 11112  003C66  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
 11113  003C68  90D8               	bcf	status,0,c
 11114  003C6A  320F               	rrcf	___xxtofl@exp^0,f,c
 11115  003C6C  0060  F03C  F00A   	movff	___xxtofl@exp,??___xxtofl
 11116  003C72  6A0B               	clrf	(??___xxtofl+1)^0,c
 11117  003C74  6A0C               	clrf	(??___xxtofl+2)^0,c
 11118  003C76  6A0D               	clrf	(??___xxtofl+3)^0,c
 11119  003C78  0060  F028  F00D   	movff	??___xxtofl,??___xxtofl+3
 11120  003C7E  6A0C               	clrf	(??___xxtofl+2)^0,c
 11121  003C80  6A0B               	clrf	(??___xxtofl+1)^0,c
 11122  003C82  6A0A               	clrf	??___xxtofl^0,c
 11123  003C84  500A               	movf	??___xxtofl^0,w,c
 11124  003C86  1210               	iorwf	___xxtofl@arg^0,f,c
 11125  003C88  500B               	movf	(??___xxtofl+1)^0,w,c
 11126  003C8A  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
 11127  003C8C  500C               	movf	(??___xxtofl+2)^0,w,c
 11128  003C8E  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
 11129  003C90  500D               	movf	(??___xxtofl+3)^0,w,c
 11130  003C92  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
 11131  003C94  500E               	movf	___xxtofl@sign^0,w,c
 11132  003C96  A4D8               	btfss	status,2,c
 11133  003C98  AE09               	btfss	(___xxtofl@val+3)^0,7,c
 11134  003C9A  D001               	goto	l7068
 11135  003C9C  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
 11136  003C9E                     l7068:
 11137  003C9E  0060  F040  F006   	movff	___xxtofl@arg,?___xxtofl
 11138  003CA4  0060  F044  F007   	movff	___xxtofl@arg+1,?___xxtofl+1
 11139  003CAA  0060  F048  F008   	movff	___xxtofl@arg+2,?___xxtofl+2
 11140  003CB0  0060  F04C  F009   	movff	___xxtofl@arg+3,?___xxtofl+3
 11141  003CB6  0012               	return		;funcret
 11142  003CB8                     __end_of___xxtofl:
 11143                           	opt callstack 0
 11144                           
 11145 ;; *************** function ___fltol *****************
 11146 ;; Defined at:
 11147 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 11148 ;; Parameters:    Size  Location     Type
 11149 ;;  f1              4   20[BANK0 ] unsigned char 
 11150 ;; Auto vars:     Size  Location     Type
 11151 ;;  exp1            1   25[BANK0 ] unsigned char 
 11152 ;;  sign1           1   24[BANK0 ] unsigned char 
 11153 ;; Return value:  Size  Location     Type
 11154 ;;                  4   20[BANK0 ] long 
 11155 ;; Registers used:
 11156 ;;		wreg, status,2, status,0
 11157 ;; Tracked objects:
 11158 ;;		On entry : 0/0
 11159 ;;		On exit  : 3F/0
 11160 ;;		Unchanged: 0/0
 11161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11162 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11163 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11164 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11165 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11166 ;;Total ram usage:       10 bytes
 11167 ;; Hardware stack levels used:    1
 11168 ;; Hardware stack levels required when called:    4
 11169 ;; This function calls:
 11170 ;;		Nothing
 11171 ;; This function is called by:
 11172 ;;		_calc_pot
 11173 ;; This function uses a non-reentrant model
 11174 ;;
 11175                           
 11176                           	psect	text67
 11177  00426E                     __ptext67:
 11178                           	opt callstack 0
 11179  00426E                     ___fltol:
 11180                           	opt callstack 24
 11181                           
 11182                           ;incstack = 0
 11183  00426E  0100               	movlb	0	; () banked
 11184  004270  3576               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11185  004272  3577               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11186  004274  6F79               	movwf	___fltol@exp1& (0+255),b
 11187  004276  5179               	movf	___fltol@exp1& (0+255),w,b
 11188  004278  A4D8               	btfss	status,2,c
 11189  00427A  D009               	goto	l6988
 11190  00427C                     u7420:
 11191                           
 11192                           ; BSR set to: 0
 11193  00427C  0E00               	movlw	0
 11194  00427E  6F74               	movwf	?___fltol& (0+255),b
 11195  004280  0E00               	movlw	0
 11196  004282  6F75               	movwf	(?___fltol+1)& (0+255),b
 11197  004284  0E00               	movlw	0
 11198  004286  6F76               	movwf	(?___fltol+2)& (0+255),b
 11199  004288  0E00               	movlw	0
 11200  00428A  6F77               	movwf	(?___fltol+3)& (0+255),b
 11201  00428C  0012               	return	
 11202  00428E                     l6988:
 11203                           
 11204                           ; BSR set to: 0
 11205  00428E  0060  F1D0  F052   	movff	___fltol@f1,??___fltol
 11206  004294  0060  F1D4  F053   	movff	___fltol@f1+1,??___fltol+1
 11207  00429A  0060  F1D8  F054   	movff	___fltol@f1+2,??___fltol+2
 11208  0042A0  0060  F1DC  F055   	movff	___fltol@f1+3,??___fltol+3
 11209  0042A6  0E20               	movlw	32
 11210  0042A8  D005               	goto	u7430
 11211  0042AA                     u7435:
 11212  0042AA  90D8               	bcf	status,0,c
 11213  0042AC  3255               	rrcf	(??___fltol+3)^0,f,c
 11214  0042AE  3254               	rrcf	(??___fltol+2)^0,f,c
 11215  0042B0  3253               	rrcf	(??___fltol+1)^0,f,c
 11216  0042B2  3252               	rrcf	??___fltol^0,f,c
 11217  0042B4                     u7430:
 11218  0042B4  2EE8               	decfsz	wreg,f,c
 11219  0042B6  D7F9               	goto	u7435
 11220  0042B8  5052               	movf	??___fltol^0,w,c
 11221  0042BA  6F78               	movwf	___fltol@sign1& (0+255),b
 11222                           
 11223                           ; BSR set to: 0
 11224  0042BC  8F76               	bsf	(___fltol@f1+2)& (0+255),7,b
 11225                           
 11226                           ; BSR set to: 0
 11227  0042BE  0EFF               	movlw	255
 11228  0042C0  1774               	andwf	___fltol@f1& (0+255),f,b
 11229  0042C2  0EFF               	movlw	255
 11230  0042C4  1775               	andwf	(___fltol@f1+1)& (0+255),f,b
 11231  0042C6  0EFF               	movlw	255
 11232  0042C8  1776               	andwf	(___fltol@f1+2)& (0+255),f,b
 11233  0042CA  0E00               	movlw	0
 11234  0042CC  1777               	andwf	(___fltol@f1+3)& (0+255),f,b
 11235                           
 11236                           ; BSR set to: 0
 11237  0042CE  0E96               	movlw	150
 11238  0042D0  5F79               	subwf	___fltol@exp1& (0+255),f,b
 11239                           
 11240                           ; BSR set to: 0
 11241  0042D2  AF79               	btfss	___fltol@exp1& (0+255),7,b
 11242  0042D4  D00D               	goto	l7008
 11243                           
 11244                           ; BSR set to: 0
 11245  0042D6  5179               	movf	___fltol@exp1& (0+255),w,b
 11246  0042D8  0A80               	xorlw	128
 11247  0042DA  0F97               	addlw	151
 11248  0042DC  A0D8               	btfss	status,0,c
 11249  0042DE  D7CE               	goto	u7420
 11250  0042E0                     l7004:
 11251                           
 11252                           ; BSR set to: 0
 11253  0042E0  90D8               	bcf	status,0,c
 11254  0042E2  3377               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11255  0042E4  3376               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11256  0042E6  3375               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11257  0042E8  3374               	rrcf	___fltol@f1& (0+255),f,b
 11258                           
 11259                           ; BSR set to: 0
 11260  0042EA  3F79               	incfsz	___fltol@exp1& (0+255),f,b
 11261  0042EC  D7F9               	goto	l7004
 11262  0042EE  D00D               	goto	u7470
 11263  0042F0                     l7008:
 11264                           
 11265                           ; BSR set to: 0
 11266  0042F0  0E1F               	movlw	31
 11267  0042F2  6579               	cpfsgt	___fltol@exp1& (0+255),b
 11268  0042F4  D007               	goto	l7016
 11269  0042F6  D7C2               	goto	u7420
 11270  0042F8                     l7014:
 11271                           
 11272                           ; BSR set to: 0
 11273  0042F8  90D8               	bcf	status,0,c
 11274  0042FA  3774               	rlcf	___fltol@f1& (0+255),f,b
 11275  0042FC  3775               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11276  0042FE  3776               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11277  004300  3777               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11278  004302  0779               	decf	___fltol@exp1& (0+255),f,b
 11279  004304                     l7016:
 11280                           
 11281                           ; BSR set to: 0
 11282  004304  5179               	movf	___fltol@exp1& (0+255),w,b
 11283  004306  A4D8               	btfss	status,2,c
 11284  004308  D7F7               	goto	l7014
 11285  00430A                     u7470:
 11286                           
 11287                           ; BSR set to: 0
 11288  00430A  5178               	movf	___fltol@sign1& (0+255),w,b
 11289  00430C  B4D8               	btfsc	status,2,c
 11290  00430E  D008               	goto	l7022
 11291                           
 11292                           ; BSR set to: 0
 11293  004310  1F77               	comf	(___fltol@f1+3)& (0+255),f,b
 11294  004312  1F76               	comf	(___fltol@f1+2)& (0+255),f,b
 11295  004314  1F75               	comf	(___fltol@f1+1)& (0+255),f,b
 11296  004316  6D74               	negf	___fltol@f1& (0+255),b
 11297  004318  0E00               	movlw	0
 11298  00431A  2375               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11299  00431C  2376               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11300  00431E  2377               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11301  004320                     l7022:
 11302                           
 11303                           ; BSR set to: 0
 11304  004320  0060  F1D0  F074   	movff	___fltol@f1,?___fltol
 11305  004326  0060  F1D4  F075   	movff	___fltol@f1+1,?___fltol+1
 11306  00432C  0060  F1D8  F076   	movff	___fltol@f1+2,?___fltol+2
 11307  004332  0060  F1DC  F077   	movff	___fltol@f1+3,?___fltol+3
 11308                           
 11309                           ; BSR set to: 0
 11310  004338  0012               	return		;funcret
 11311  00433A                     __end_of___fltol:
 11312                           	opt callstack 0
 11313                           
 11314 ;; *************** function _UART2_is_rx_ready *****************
 11315 ;; Defined at:
 11316 ;;		line 152 in file "mcc_generated_files/uart2.c"
 11317 ;; Parameters:    Size  Location     Type
 11318 ;;		None
 11319 ;; Auto vars:     Size  Location     Type
 11320 ;;		None
 11321 ;; Return value:  Size  Location     Type
 11322 ;;                  1    wreg      unsigned char 
 11323 ;; Registers used:
 11324 ;;		wreg, status,2
 11325 ;; Tracked objects:
 11326 ;;		On entry : 0/1
 11327 ;;		On exit  : 3F/0
 11328 ;;		Unchanged: 0/0
 11329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11334 ;;Total ram usage:        0 bytes
 11335 ;; Hardware stack levels used:    1
 11336 ;; Hardware stack levels required when called:    4
 11337 ;; This function calls:
 11338 ;;		Nothing
 11339 ;; This function is called by:
 11340 ;;		_Digital232_init
 11341 ;;		_Digital232_RW
 11342 ;; This function uses a non-reentrant model
 11343 ;;
 11344                           
 11345                           	psect	text68
 11346  0054D8                     __ptext68:
 11347                           	opt callstack 0
 11348  0054D8                     _UART2_is_rx_ready:
 11349                           	opt callstack 25
 11350                           
 11351                           ;mcc_generated_files/uart2.c: 154:     return uart2RxCount;
 11352                           
 11353                           ; BSR set to: 0
 11354                           ;incstack = 0
 11355  0054D8  0100               	movlb	0	; () banked
 11356  0054DA  51A3               	movf	_uart2RxCount& (0+255),w,b	;volatile
 11357                           
 11358                           ; BSR set to: 0
 11359  0054DC  0012               	return		;funcret
 11360  0054DE                     __end_of_UART2_is_rx_ready:
 11361                           	opt callstack 0
 11362                           
 11363 ;; *************** function _UART2_Read *****************
 11364 ;; Defined at:
 11365 ;;		line 171 in file "mcc_generated_files/uart2.c"
 11366 ;; Parameters:    Size  Location     Type
 11367 ;;		None
 11368 ;; Auto vars:     Size  Location     Type
 11369 ;;  readValue       1    5[COMRAM] unsigned char 
 11370 ;; Return value:  Size  Location     Type
 11371 ;;                  1    wreg      unsigned char 
 11372 ;; Registers used:
 11373 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11374 ;; Tracked objects:
 11375 ;;		On entry : 3F/0
 11376 ;;		On exit  : 3F/39
 11377 ;;		Unchanged: 0/0
 11378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11380 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11382 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11383 ;;Total ram usage:        1 bytes
 11384 ;; Hardware stack levels used:    1
 11385 ;; Hardware stack levels required when called:    4
 11386 ;; This function calls:
 11387 ;;		Nothing
 11388 ;; This function is called by:
 11389 ;;		_Digital232_init
 11390 ;;		_Digital232_RW
 11391 ;; This function uses a non-reentrant model
 11392 ;;
 11393                           
 11394                           	psect	text69
 11395  004D2A                     __ptext69:
 11396                           	opt callstack 0
 11397  004D2A                     _UART2_Read:
 11398                           	opt callstack 25
 11399                           
 11400                           ; BSR set to: 0
 11401                           ;mcc_generated_files/uart2.c: 175:     while(0 == uart2RxCount)
 11402                           
 11403                           ; BSR set to: 0
 11404                           ;mcc_generated_files/uart2.c: 175:     while(0 == uart2RxCount)
 11405                           
 11406                           ; BSR set to: 0
 11407                           ;incstack = 0
 11408  004D2A  51A3               	movf	_uart2RxCount& (0+255),w,b	;volatile
 11409  004D2C  B4D8               	btfsc	status,2,c
 11410  004D2E  D7FD               	goto	_UART2_Read
 11411                           
 11412                           ; BSR set to: 0
 11413                           ;mcc_generated_files/uart2.c: 179:     uart2RxLastError = uart2RxStatusBuffer[uart2RxTai
      +                          l];
 11414  004D30  0E32               	movlw	low _uart2RxStatusBuffer
 11415  004D32  2458               	addwf	_uart2RxTail^0,w,c	;volatile
 11416  004D34  6ED9               	movwf	fsr2l,c
 11417  004D36  6ADA               	clrf	fsr2h,c
 11418  004D38  0E01               	movlw	high _uart2RxStatusBuffer
 11419  004D3A  22DA               	addwfc	fsr2h,f,c
 11420  004D3C  50DF               	movf	indf2,w,c
 11421  004D3E  0101               	movlb	1	; () banked
 11422  004D40  6F94               	movwf	_uart2RxLastError& (0+255),b	;volatile
 11423                           
 11424                           ;mcc_generated_files/uart2.c: 181:     readValue = uart2RxBuffer[uart2RxTail++];
 11425  004D42  0E3A               	movlw	low _uart2RxBuffer
 11426  004D44  2458               	addwf	_uart2RxTail^0,w,c	;volatile
 11427  004D46  6ED9               	movwf	fsr2l,c
 11428  004D48  6ADA               	clrf	fsr2h,c
 11429  004D4A  0E01               	movlw	high _uart2RxBuffer
 11430  004D4C  22DA               	addwfc	fsr2h,f,c
 11431  004D4E  50DF               	movf	indf2,w,c
 11432  004D50  6E06               	movwf	UART2_Read@readValue^0,c
 11433                           
 11434                           ; BSR set to: 1
 11435  004D52  2A58               	incf	_uart2RxTail^0,f,c	;volatile
 11436                           
 11437                           ; BSR set to: 1
 11438                           ;mcc_generated_files/uart2.c: 182:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
 11439  004D54  0E07               	movlw	7
 11440  004D56  6458               	cpfsgt	_uart2RxTail^0,c
 11441  004D58  D002               	goto	l7254
 11442                           
 11443                           ; BSR set to: 1
 11444                           ;mcc_generated_files/uart2.c: 183:     {;mcc_generated_files/uart2.c: 184:         uart2
      +                          RxTail = 0;
 11445  004D5A  0E00               	movlw	0
 11446  004D5C  6E58               	movwf	_uart2RxTail^0,c	;volatile
 11447  004D5E                     l7254:
 11448                           
 11449                           ; BSR set to: 1
 11450                           ;mcc_generated_files/uart2.c: 186:     PIE6bits.U2RXIE = 0;
 11451  004D5E  0139               	movlb	57	; () banked
 11452  004D60  9596               	bcf	150,2,b	;volatile
 11453                           
 11454                           ; BSR set to: 57
 11455                           ;mcc_generated_files/uart2.c: 187:     uart2RxCount--;
 11456  004D62  0100               	movlb	0	; () banked
 11457  004D64  07A3               	decf	_uart2RxCount& (0+255),f,b	;volatile
 11458                           
 11459                           ; BSR set to: 0
 11460                           ;mcc_generated_files/uart2.c: 188:     PIE6bits.U2RXIE = 1;
 11461  004D66  0139               	movlb	57	; () banked
 11462  004D68  8596               	bsf	150,2,b	;volatile
 11463                           
 11464                           ; BSR set to: 57
 11465                           ;mcc_generated_files/uart2.c: 190:     return readValue;
 11466  004D6A  5006               	movf	UART2_Read@readValue^0,w,c
 11467                           
 11468                           ; BSR set to: 57
 11469  004D6C  0012               	return		;funcret
 11470  004D6E                     __end_of_UART2_Read:
 11471                           	opt callstack 0
 11472                           
 11473 ;; *************** function _TimerDone *****************
 11474 ;; Defined at:
 11475 ;;		line 19 in file "timers.c"
 11476 ;; Parameters:    Size  Location     Type
 11477 ;;  timer           1    wreg     const unsigned char 
 11478 ;; Auto vars:     Size  Location     Type
 11479 ;;  timer           1    7[COMRAM] const unsigned char 
 11480 ;; Return value:  Size  Location     Type
 11481 ;;                  1    wreg      _Bool 
 11482 ;; Registers used:
 11483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11484 ;; Tracked objects:
 11485 ;;		On entry : 0/1
 11486 ;;		On exit  : 0/0
 11487 ;;		Unchanged: 0/0
 11488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11490 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11491 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11492 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11493 ;;Total ram usage:        3 bytes
 11494 ;; Hardware stack levels used:    1
 11495 ;; Hardware stack levels required when called:    4
 11496 ;; This function calls:
 11497 ;;		Nothing
 11498 ;; This function is called by:
 11499 ;;		_work_sw
 11500 ;;		_main
 11501 ;;		_Digital232_RW
 11502 ;;		_led_lightshow
 11503 ;;		_WaitMs
 11504 ;; This function uses a non-reentrant model
 11505 ;;
 11506                           
 11507                           	psect	text70
 11508  00515C                     __ptext70:
 11509                           	opt callstack 0
 11510  00515C                     _TimerDone:
 11511                           	opt callstack 25
 11512                           
 11513                           ; BSR set to: 57
 11514                           ;incstack = 0
 11515                           ;TimerDone@timer stored from wreg
 11516  00515C  6E08               	movwf	TimerDone@timer^0,c
 11517  00515E  0004               	clrwdt		;# 
 11518                           
 11519                           ;timers.c: 22:  if (tickCount[timer] == 0) {
 11520  005160  5008               	movf	TimerDone@timer^0,w,c
 11521  005162  0D02               	mullw	2
 11522  005164  0E20               	movlw	low _tickCount
 11523  005166  24F3               	addwf	243,w,c
 11524  005168  6ED9               	movwf	fsr2l,c
 11525  00516A  0E01               	movlw	high _tickCount
 11526  00516C  20F4               	addwfc	prodh,w,c
 11527  00516E  6EDA               	movwf	fsr2h,c
 11528  005170  50DE               	movf	postinc2,w,c
 11529  005172  10DE               	iorwf	postinc2,w,c
 11530  005174  A4D8               	btfss	status,2,c
 11531  005176  D002               	goto	l6914
 11532                           
 11533                           ;timers.c: 23:   return 1;
 11534  005178  0E01               	movlw	1
 11535  00517A  0012               	return	
 11536  00517C                     l6914:
 11537                           
 11538                           ;timers.c: 25:  return 0;
 11539  00517C  0E00               	movlw	0
 11540  00517E  0012               	return		;funcret
 11541  005180                     __end_of_TimerDone:
 11542                           	opt callstack 0
 11543                           
 11544 ;; *************** function _StartTimer *****************
 11545 ;; Defined at:
 11546 ;;		line 11 in file "timers.c"
 11547 ;; Parameters:    Size  Location     Type
 11548 ;;  timer           1    wreg     const unsigned char 
 11549 ;;  count           2    5[COMRAM] const unsigned short 
 11550 ;; Auto vars:     Size  Location     Type
 11551 ;;  timer           1    9[COMRAM] const unsigned char 
 11552 ;; Return value:  Size  Location     Type
 11553 ;;                  1    wreg      void 
 11554 ;; Registers used:
 11555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11556 ;; Tracked objects:
 11557 ;;		On entry : 0/1
 11558 ;;		On exit  : 0/0
 11559 ;;		Unchanged: 0/0
 11560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11561 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11562 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11563 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11564 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11565 ;;Total ram usage:        5 bytes
 11566 ;; Hardware stack levels used:    1
 11567 ;; Hardware stack levels required when called:    4
 11568 ;; This function calls:
 11569 ;;		Nothing
 11570 ;; This function is called by:
 11571 ;;		_work_sw
 11572 ;;		_main
 11573 ;;		_Digital232_init
 11574 ;;		_Digital232_RW
 11575 ;;		_led_lightshow
 11576 ;;		_WaitMs
 11577 ;; This function uses a non-reentrant model
 11578 ;;
 11579                           
 11580                           	psect	text71
 11581  004FF6                     __ptext71:
 11582                           	opt callstack 0
 11583  004FF6                     _StartTimer:
 11584                           	opt callstack 25
 11585                           
 11586                           ;incstack = 0
 11587                           ;StartTimer@timer stored from wreg
 11588  004FF6  6E0A               	movwf	StartTimer@timer^0,c
 11589                           
 11590                           ;timers.c: 11: __attribute__((inline)) void StartTimer(const uint8_t timer, const uint16
      +                          _t count);timers.c: 12: {;timers.c: 13:  tickCount[timer] = count << 1;
 11591  004FF8  0060  F018  F008   	movff	StartTimer@count,??_StartTimer
 11592  004FFE  0060  F01C  F009   	movff	StartTimer@count+1,??_StartTimer+1
 11593  005004  90D8               	bcf	status,0,c
 11594  005006  3608               	rlcf	??_StartTimer^0,f,c
 11595  005008  3609               	rlcf	(??_StartTimer+1)^0,f,c
 11596  00500A  500A               	movf	StartTimer@timer^0,w,c
 11597  00500C  0D02               	mullw	2
 11598  00500E  0E20               	movlw	low _tickCount
 11599  005010  24F3               	addwf	243,w,c
 11600  005012  6ED9               	movwf	fsr2l,c
 11601  005014  0E01               	movlw	high _tickCount
 11602  005016  20F4               	addwfc	prodh,w,c
 11603  005018  6EDA               	movwf	fsr2h,c
 11604  00501A  0060  F023  FFDE   	movff	??_StartTimer,postinc2
 11605  005020  0060  F027  FFDD   	movff	??_StartTimer+1,postdec2
 11606  005026  0012               	return		;funcret
 11607  005028                     __end_of_StartTimer:
 11608                           	opt callstack 0
 11609                           
 11610 ;; *************** function _PWM8_LoadDutyValue *****************
 11611 ;; Defined at:
 11612 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 11613 ;; Parameters:    Size  Location     Type
 11614 ;;  dutyValue       2    5[COMRAM] unsigned short 
 11615 ;; Auto vars:     Size  Location     Type
 11616 ;;		None
 11617 ;; Return value:  Size  Location     Type
 11618 ;;                  1    wreg      void 
 11619 ;; Registers used:
 11620 ;;		wreg, status,2, status,0
 11621 ;; Tracked objects:
 11622 ;;		On entry : 0/0
 11623 ;;		On exit  : 0/0
 11624 ;;		Unchanged: 0/0
 11625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11628 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11629 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11630 ;;Total ram usage:        4 bytes
 11631 ;; Hardware stack levels used:    1
 11632 ;; Hardware stack levels required when called:    4
 11633 ;; This function calls:
 11634 ;;		Nothing
 11635 ;; This function is called by:
 11636 ;;		_Digital232_RW
 11637 ;; This function uses a non-reentrant model
 11638 ;;
 11639                           
 11640                           	psect	text72
 11641  004F1C                     __ptext72:
 11642                           	opt callstack 0
 11643  004F1C                     _PWM8_LoadDutyValue:
 11644                           	opt callstack 25
 11645                           
 11646                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11647                           
 11648                           ;incstack = 0
 11649  004F1C  0060  F018  F008   	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 11650  004F22  0060  F01C  F009   	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
 11651  004F28  90D8               	bcf	status,0,c
 11652  004F2A  3209               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 11653  004F2C  3208               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 11654  004F2E  90D8               	bcf	status,0,c
 11655  004F30  3209               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 11656  004F32  3208               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 11657  004F34  5008               	movf	??_PWM8_LoadDutyValue^0,w,c
 11658  004F36  6E61               	movwf	97,c	;volatile
 11659                           
 11660                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 11661  004F38  0060  F018  F008   	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 11662  004F3E  0E03               	movlw	3
 11663  004F40  1608               	andwf	??_PWM8_LoadDutyValue^0,f,c
 11664  004F42  0E06               	movlw	6
 11665  004F44  6E09               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
 11666  004F46                     u7635:
 11667  004F46  90D8               	bcf	status,0,c
 11668  004F48  3608               	rlcf	??_PWM8_LoadDutyValue^0,f,c
 11669  004F4A  2E09               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
 11670  004F4C  D7FC               	goto	u7635
 11671  004F4E  5008               	movf	??_PWM8_LoadDutyValue^0,w,c
 11672  004F50  6E60               	movwf	96,c	;volatile
 11673  004F52  0012               	return		;funcret
 11674  004F54                     __end_of_PWM8_LoadDutyValue:
 11675                           	opt callstack 0
 11676                           
 11677 ;; *************** function _ADCC_StartConversion *****************
 11678 ;; Defined at:
 11679 ;;		line 113 in file "mcc_generated_files/adcc.c"
 11680 ;; Parameters:    Size  Location     Type
 11681 ;;  channel         1    wreg     enum E15799
 11682 ;; Auto vars:     Size  Location     Type
 11683 ;;  channel         1    5[COMRAM] enum E15799
 11684 ;; Return value:  Size  Location     Type
 11685 ;;                  1    wreg      void 
 11686 ;; Registers used:
 11687 ;;		wreg
 11688 ;; Tracked objects:
 11689 ;;		On entry : 0/1
 11690 ;;		On exit  : 3F/3E
 11691 ;;		Unchanged: 0/0
 11692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11694 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11696 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11697 ;;Total ram usage:        1 bytes
 11698 ;; Hardware stack levels used:    1
 11699 ;; Hardware stack levels required when called:    4
 11700 ;; This function calls:
 11701 ;;		Nothing
 11702 ;; This function is called by:
 11703 ;;		_Digital232_init
 11704 ;;		_Digital232_RW
 11705 ;; This function uses a non-reentrant model
 11706 ;;
 11707                           
 11708                           	psect	text73
 11709  00549E                     __ptext73:
 11710                           	opt callstack 0
 11711  00549E                     _ADCC_StartConversion:
 11712                           	opt callstack 25
 11713                           
 11714                           ;incstack = 0
 11715                           ;ADCC_StartConversion@channel stored from wreg
 11716  00549E  6E06               	movwf	ADCC_StartConversion@channel^0,c
 11717                           
 11718                           ;mcc_generated_files/adcc.c: 113: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 114: {;mcc_generated_files/adcc.c: 116:     ADPCH = channel;
 11719  0054A0  0060  F01B  FEF1   	movff	ADCC_StartConversion@channel,16113	;volatile
 11720                           
 11721                           ;mcc_generated_files/adcc.c: 119:     ADCON0bits.ADON = 1;
 11722  0054A6  013E               	movlb	62	; () banked
 11723  0054A8  8FF8               	bsf	248,7,b	;volatile
 11724                           
 11725                           ; BSR set to: 62
 11726                           ;mcc_generated_files/adcc.c: 122:     ADCON0bits.ADGO = 1;
 11727  0054AA  81F8               	bsf	248,0,b	;volatile
 11728                           
 11729                           ; BSR set to: 62
 11730  0054AC  0012               	return		;funcret
 11731  0054AE                     __end_of_ADCC_StartConversion:
 11732                           	opt callstack 0
 11733                           
 11734 ;; *************** function _ADCC_IsConversionDone *****************
 11735 ;; Defined at:
 11736 ;;		line 125 in file "mcc_generated_files/adcc.c"
 11737 ;; Parameters:    Size  Location     Type
 11738 ;;		None
 11739 ;; Auto vars:     Size  Location     Type
 11740 ;;		None
 11741 ;; Return value:  Size  Location     Type
 11742 ;;                  1    wreg      _Bool 
 11743 ;; Registers used:
 11744 ;;		wreg
 11745 ;; Tracked objects:
 11746 ;;		On entry : 0/3E
 11747 ;;		On exit  : 3F/3E
 11748 ;;		Unchanged: 0/0
 11749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11754 ;;Total ram usage:        0 bytes
 11755 ;; Hardware stack levels used:    1
 11756 ;; Hardware stack levels required when called:    4
 11757 ;; This function calls:
 11758 ;;		Nothing
 11759 ;; This function is called by:
 11760 ;;		_Digital232_RW
 11761 ;; This function uses a non-reentrant model
 11762 ;;
 11763                           
 11764                           	psect	text74
 11765  0054AE                     __ptext74:
 11766                           	opt callstack 0
 11767  0054AE                     _ADCC_IsConversionDone:
 11768                           	opt callstack 25
 11769                           
 11770                           ;mcc_generated_files/adcc.c: 128:     return ((unsigned char)(!ADCON0bits.ADGO));
 11771                           
 11772                           ; BSR set to: 62
 11773                           ;incstack = 0
 11774  0054AE  013E               	movlb	62	; () banked
 11775  0054B0  B1F8               	btfsc	248,0,b	;volatile
 11776  0054B2  D002               	goto	u7640
 11777  0054B4  0E01               	movlw	1
 11778  0054B6  0012               	return	
 11779  0054B8                     u7640:
 11780  0054B8  0E00               	movlw	0
 11781                           
 11782                           ; BSR set to: 62
 11783  0054BA  0012               	return		;funcret
 11784  0054BC                     __end_of_ADCC_IsConversionDone:
 11785                           	opt callstack 0
 11786                           
 11787 ;; *************** function _ADCC_GetConversionResult *****************
 11788 ;; Defined at:
 11789 ;;		line 131 in file "mcc_generated_files/adcc.c"
 11790 ;; Parameters:    Size  Location     Type
 11791 ;;		None
 11792 ;; Auto vars:     Size  Location     Type
 11793 ;;		None
 11794 ;; Return value:  Size  Location     Type
 11795 ;;                  2    5[COMRAM] unsigned short 
 11796 ;; Registers used:
 11797 ;;		wreg, status,2, status,0
 11798 ;; Tracked objects:
 11799 ;;		On entry : 3F/3E
 11800 ;;		On exit  : 3F/3E
 11801 ;;		Unchanged: 0/0
 11802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11803 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11805 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11806 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11807 ;;Total ram usage:        4 bytes
 11808 ;; Hardware stack levels used:    1
 11809 ;; Hardware stack levels required when called:    4
 11810 ;; This function calls:
 11811 ;;		Nothing
 11812 ;; This function is called by:
 11813 ;;		_Digital232_RW
 11814 ;; This function uses a non-reentrant model
 11815 ;;
 11816                           
 11817                           	psect	text75
 11818  00548A                     __ptext75:
 11819                           	opt callstack 0
 11820  00548A                     _ADCC_GetConversionResult:
 11821                           	opt callstack 25
 11822                           
 11823                           ; BSR set to: 62
 11824                           ;mcc_generated_files/adcc.c: 134:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 11825                           
 11826                           ; BSR set to: 62
 11827                           ;incstack = 0
 11828  00548A  51F0               	movf	240,w,b	;volatile
 11829  00548C  6E09               	movwf	(??_ADCC_GetConversionResult+1)^0,c
 11830  00548E  6A08               	clrf	??_ADCC_GetConversionResult^0,c
 11831  005490  51EF               	movf	239,w,b	;volatile
 11832  005492  2408               	addwf	??_ADCC_GetConversionResult^0,w,c
 11833  005494  6E06               	movwf	?_ADCC_GetConversionResult^0,c
 11834  005496  0E00               	movlw	0
 11835  005498  2009               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
 11836  00549A  6E07               	movwf	(?_ADCC_GetConversionResult+1)^0,c
 11837                           
 11838                           ; BSR set to: 62
 11839  00549C  0012               	return		;funcret
 11840  00549E                     __end_of_ADCC_GetConversionResult:
 11841                           	opt callstack 0
 11842                           
 11843 ;; *************** function _Default_ISR *****************
 11844 ;; Defined at:
 11845 ;;		line 80 in file "mcc_generated_files/interrupt_manager.c"
 11846 ;; Parameters:    Size  Location     Type
 11847 ;;		None
 11848 ;; Auto vars:     Size  Location     Type
 11849 ;;		None
 11850 ;; Return value:  Size  Location     Type
 11851 ;;                  1    wreg      void 
 11852 ;; Registers used:
 11853 ;;		None
 11854 ;; Tracked objects:
 11855 ;;		On entry : 0/0
 11856 ;;		On exit  : 0/0
 11857 ;;		Unchanged: 0/0
 11858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11863 ;;Total ram usage:        0 bytes
 11864 ;; Hardware stack levels used:    1
 11865 ;; This function calls:
 11866 ;;		Nothing
 11867 ;; This function is called by:
 11868 ;;		Interrupt level 2
 11869 ;; This function uses a non-reentrant model
 11870 ;;
 11871                           
 11872                           	psect	text76
 11873  0054EC                     __ptext76:
 11874                           	opt callstack 0
 11875  0054EC                     _Default_ISR:
 11876                           	opt callstack 20
 11877                           
 11878                           ; BSR set to: 62
 11879                           ;incstack = 0
 11880  0054EC  0011               	retfie		f
 11881  0054EE                     __end_of_Default_ISR:
 11882                           	opt callstack 0
 11883                           
 11884 ;; *************** function _UART1_tx_vect_isr *****************
 11885 ;; Defined at:
 11886 ;;		line 225 in file "mcc_generated_files/uart1.c"
 11887 ;; Parameters:    Size  Location     Type
 11888 ;;		None
 11889 ;; Auto vars:     Size  Location     Type
 11890 ;;		None
 11891 ;; Return value:  Size  Location     Type
 11892 ;;                  1    wreg      void 
 11893 ;; Registers used:
 11894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 11895 ;; Tracked objects:
 11896 ;;		On entry : 0/0
 11897 ;;		On exit  : 0/0
 11898 ;;		Unchanged: 0/0
 11899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11904 ;;Total ram usage:        0 bytes
 11905 ;; Hardware stack levels used:    1
 11906 ;; Hardware stack levels required when called:    1
 11907 ;; This function calls:
 11908 ;;		Absolute function
 11909 ;;		_UART1_Transmit_ISR
 11910 ;; This function is called by:
 11911 ;;		Interrupt level 2
 11912 ;; This function uses a non-reentrant model
 11913 ;;
 11914                           
 11915                           	psect	text77
 11916  005180                     __ptext77:
 11917                           	opt callstack 0
 11918  005180                     _UART1_tx_vect_isr:
 11919                           	opt callstack 19
 11920                           
 11921                           ;mcc_generated_files/uart1.c: 227:     if(UART1_TxInterruptHandler)
 11922                           
 11923                           ;incstack = 0
 11924  005180  0101               	movlb	1	; () banked
 11925  005182  517E               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 11926  005184  117F               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 11927  005186  1180               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 11928  005188  B4D8               	btfsc	status,2,c
 11929  00518A  0011               	retfie		f
 11930                           
 11931                           ; BSR set to: 1
 11932                           ;mcc_generated_files/uart1.c: 228:     {;mcc_generated_files/uart1.c: 229:         UART1
      +                          _TxInterruptHandler();
 11933  00518C  D801               	call	i2u558_48
 11934  00518E  0011               	retfie		f
 11935  005190                     i2u558_48:
 11936  005190  0005               	push	
 11937  005192  6EFA               	movwf	pclath,c
 11938  005194  517E               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 11939  005196  6EFD               	movwf	tosl,c
 11940  005198  517F               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 11941  00519A  6EFE               	movwf	tosh,c
 11942  00519C  5180               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 11943  00519E  6EFF               	movwf	tosu,c
 11944  0051A0  50FA               	movf	pclath,w,c
 11945  0051A2  0012               	return		;indir
 11946  0051A4                     __end_of_UART1_tx_vect_isr:
 11947                           	opt callstack 0
 11948                           
 11949 ;; *************** function _UART1_Transmit_ISR *****************
 11950 ;; Defined at:
 11951 ;;		line 243 in file "mcc_generated_files/uart1.c"
 11952 ;; Parameters:    Size  Location     Type
 11953 ;;		None
 11954 ;; Auto vars:     Size  Location     Type
 11955 ;;		None
 11956 ;; Return value:  Size  Location     Type
 11957 ;;                  1    wreg      void 
 11958 ;; Registers used:
 11959 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11960 ;; Tracked objects:
 11961 ;;		On entry : 3F/1
 11962 ;;		On exit  : 6/0
 11963 ;;		Unchanged: 0/0
 11964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11969 ;;Total ram usage:        0 bytes
 11970 ;; Hardware stack levels used:    1
 11971 ;; This function calls:
 11972 ;;		Nothing
 11973 ;; This function is called by:
 11974 ;;		_UART1_Initialize
 11975 ;;		_UART1_tx_vect_isr
 11976 ;; This function uses a non-reentrant model
 11977 ;;
 11978                           
 11979                           	psect	text78
 11980  005028                     __ptext78:
 11981                           	opt callstack 0
 11982  005028                     _UART1_Transmit_ISR:
 11983                           	opt callstack 19
 11984                           
 11985                           ; BSR set to: 1
 11986                           ;mcc_generated_files/uart1.c: 246:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 11987                           
 11988                           ;incstack = 0
 11989  005028  0E08               	movlw	8
 11990  00502A  0100               	movlb	0	; () banked
 11991  00502C  61A9               	cpfslt	_uart1TxBufferRemaining& (0+255),b
 11992  00502E  D012               	goto	i2l344
 11993                           
 11994                           ; BSR set to: 0
 11995                           ;mcc_generated_files/uart1.c: 247:     {;mcc_generated_files/uart1.c: 248:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 11996  005030  0E5A               	movlw	low _uart1TxBuffer
 11997  005032  25AA               	addwf	_uart1TxTail& (0+255),w,b	;volatile
 11998  005034  6ED9               	movwf	fsr2l,c
 11999  005036  6ADA               	clrf	fsr2h,c
 12000  005038  0E01               	movlw	high _uart1TxBuffer
 12001  00503A  22DA               	addwfc	fsr2h,f,c
 12002  00503C  50DF               	movf	indf2,w,c
 12003  00503E  013D               	movlb	61	; () banked
 12004  005040  6FEA               	movwf	234,b	;volatile
 12005                           
 12006                           ; BSR set to: 61
 12007  005042  0100               	movlb	0	; () banked
 12008  005044  2BAA               	incf	_uart1TxTail& (0+255),f,b	;volatile
 12009                           
 12010                           ; BSR set to: 0
 12011                           ;mcc_generated_files/uart1.c: 249:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 12012  005046  0E07               	movlw	7
 12013  005048  65AA               	cpfsgt	_uart1TxTail& (0+255),b
 12014  00504A  D002               	goto	i2l5464
 12015                           
 12016                           ; BSR set to: 0
 12017                           ;mcc_generated_files/uart1.c: 250:         {;mcc_generated_files/uart1.c: 251:          
      +                             uart1TxTail = 0;
 12018  00504C  0E00               	movlw	0
 12019  00504E  6FAA               	movwf	_uart1TxTail& (0+255),b	;volatile
 12020  005050                     i2l5464:
 12021                           
 12022                           ; BSR set to: 0
 12023                           ;mcc_generated_files/uart1.c: 253:         uart1TxBufferRemaining++;
 12024  005050  2BA9               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 12025                           
 12026                           ;mcc_generated_files/uart1.c: 254:     }
 12027  005052  0012               	return	
 12028  005054                     i2l344:
 12029                           
 12030                           ; BSR set to: 0
 12031                           ;mcc_generated_files/uart1.c: 256:     {;mcc_generated_files/uart1.c: 257:         PIE3b
      +                          its.U1TXIE = 0;
 12032  005054  0139               	movlb	57	; () banked
 12033  005056  9993               	bcf	147,4,b	;volatile
 12034  005058  0012               	return		;funcret
 12035  00505A                     __end_of_UART1_Transmit_ISR:
 12036                           	opt callstack 0
 12037                           
 12038 ;; *************** function _UART1_rx_vect_isr *****************
 12039 ;; Defined at:
 12040 ;;		line 233 in file "mcc_generated_files/uart1.c"
 12041 ;; Parameters:    Size  Location     Type
 12042 ;;		None
 12043 ;; Auto vars:     Size  Location     Type
 12044 ;;		None
 12045 ;; Return value:  Size  Location     Type
 12046 ;;                  1    wreg      void 
 12047 ;; Registers used:
 12048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 12049 ;; Tracked objects:
 12050 ;;		On entry : 0/0
 12051 ;;		On exit  : 0/0
 12052 ;;		Unchanged: 0/0
 12053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12058 ;;Total ram usage:        0 bytes
 12059 ;; Hardware stack levels used:    1
 12060 ;; Hardware stack levels required when called:    3
 12061 ;; This function calls:
 12062 ;;		Absolute function
 12063 ;;		_UART1_Receive_ISR
 12064 ;; This function is called by:
 12065 ;;		Interrupt level 2
 12066 ;; This function uses a non-reentrant model
 12067 ;;
 12068                           
 12069                           	psect	text79
 12070  0051A4                     __ptext79:
 12071                           	opt callstack 0
 12072  0051A4                     _UART1_rx_vect_isr:
 12073                           	opt callstack 17
 12074                           
 12075                           ;mcc_generated_files/uart1.c: 235:     if(UART1_RxInterruptHandler)
 12076                           
 12077                           ;incstack = 0
 12078  0051A4  0101               	movlb	1	; () banked
 12079  0051A6  5181               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 12080  0051A8  1182               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 12081  0051AA  1183               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 12082  0051AC  B4D8               	btfsc	status,2,c
 12083  0051AE  0011               	retfie		f
 12084                           
 12085                           ; BSR set to: 1
 12086                           ;mcc_generated_files/uart1.c: 236:     {;mcc_generated_files/uart1.c: 237:         UART1
      +                          _RxInterruptHandler();
 12087  0051B0  D801               	call	i2u560_48
 12088  0051B2  0011               	retfie		f
 12089  0051B4                     i2u560_48:
 12090  0051B4  0005               	push	
 12091  0051B6  6EFA               	movwf	pclath,c
 12092  0051B8  5181               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 12093  0051BA  6EFD               	movwf	tosl,c
 12094  0051BC  5182               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 12095  0051BE  6EFE               	movwf	tosh,c
 12096  0051C0  5183               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 12097  0051C2  6EFF               	movwf	tosu,c
 12098  0051C4  50FA               	movf	pclath,w,c
 12099  0051C6  0012               	return		;indir
 12100  0051C8                     __end_of_UART1_rx_vect_isr:
 12101                           	opt callstack 0
 12102                           
 12103 ;; *************** function _UART1_Receive_ISR *****************
 12104 ;; Defined at:
 12105 ;;		line 263 in file "mcc_generated_files/uart1.c"
 12106 ;; Parameters:    Size  Location     Type
 12107 ;;		None
 12108 ;; Auto vars:     Size  Location     Type
 12109 ;;		None
 12110 ;; Return value:  Size  Location     Type
 12111 ;;                  1    wreg      void 
 12112 ;; Registers used:
 12113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 12114 ;; Tracked objects:
 12115 ;;		On entry : 3F/1
 12116 ;;		On exit  : 0/0
 12117 ;;		Unchanged: 0/0
 12118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12123 ;;Total ram usage:        0 bytes
 12124 ;; Hardware stack levels used:    1
 12125 ;; Hardware stack levels required when called:    2
 12126 ;; This function calls:
 12127 ;;		Absolute function
 12128 ;;		_UART1_DefaultErrorHandler
 12129 ;;		_UART1_DefaultFramingErrorHandler
 12130 ;;		_UART1_DefaultOverrunErrorHandler
 12131 ;;		_UART1_RxDataHandler
 12132 ;; This function is called by:
 12133 ;;		_UART1_Initialize
 12134 ;;		_UART1_rx_vect_isr
 12135 ;; This function uses a non-reentrant model
 12136 ;;
 12137                           
 12138                           	psect	text80
 12139  0046AC                     __ptext80:
 12140                           	opt callstack 0
 12141  0046AC                     _UART1_Receive_ISR:
 12142                           	opt callstack 17
 12143                           
 12144                           ; BSR set to: 1
 12145                           ;mcc_generated_files/uart1.c: 266:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 12146                           
 12147                           ;incstack = 0
 12148  0046AC  0E4A               	movlw	low _uart1RxStatusBuffer
 12149  0046AE  245A               	addwf	_uart1RxHead^0,w,c	;volatile
 12150  0046B0  6ED9               	movwf	fsr2l,c
 12151  0046B2  6ADA               	clrf	fsr2h,c
 12152  0046B4  0E01               	movlw	high _uart1RxStatusBuffer
 12153  0046B6  22DA               	addwfc	fsr2h,f,c
 12154  0046B8  0E00               	movlw	0
 12155  0046BA  6EDF               	movwf	indf2,c
 12156                           
 12157                           ; BSR set to: 1
 12158                           ;mcc_generated_files/uart1.c: 268:     if(U1ERRIRbits.FERIF){
 12159  0046BC  013D               	movlb	61	; () banked
 12160  0046BE  A7F9               	btfss	249,3,b	;volatile
 12161  0046C0  D014               	goto	i2u486_49
 12162                           
 12163                           ; BSR set to: 61
 12164                           ;mcc_generated_files/uart1.c: 269:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 12165  0046C2  0E4A               	movlw	low _uart1RxStatusBuffer
 12166  0046C4  245A               	addwf	_uart1RxHead^0,w,c	;volatile
 12167  0046C6  6ED9               	movwf	fsr2l,c
 12168  0046C8  6ADA               	clrf	fsr2h,c
 12169  0046CA  0E01               	movlw	high _uart1RxStatusBuffer
 12170  0046CC  22DA               	addwfc	fsr2h,f,c
 12171  0046CE  0101               	movlb	1	; () banked
 12172  0046D0  82DF               	bsf	indf2,1,c
 12173                           
 12174                           ; BSR set to: 1
 12175                           ;mcc_generated_files/uart1.c: 270:         UART1_FramingErrorHandler();
 12176  0046D2  D801               	call	i2u486_48
 12177  0046D4  D00A               	goto	i2u486_49
 12178  0046D6                     i2u486_48:
 12179  0046D6  0005               	push	
 12180  0046D8  6EFA               	movwf	pclath,c
 12181  0046DA  517B               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 12182  0046DC  6EFD               	movwf	tosl,c
 12183  0046DE  517C               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 12184  0046E0  6EFE               	movwf	tosh,c
 12185  0046E2  517D               	movf	(_UART1_FramingErrorHandler+2)& (0+255),w,b
 12186  0046E4  6EFF               	movwf	tosu,c
 12187  0046E6  50FA               	movf	pclath,w,c
 12188  0046E8  0012               	return		;indir
 12189  0046EA                     i2u486_49:
 12190                           
 12191                           ;mcc_generated_files/uart1.c: 273:     if(U1ERRIRbits.RXFOIF){
 12192  0046EA  013D               	movlb	61	; () banked
 12193  0046EC  A3F9               	btfss	249,1,b	;volatile
 12194  0046EE  D014               	goto	i2u488_49
 12195                           
 12196                           ; BSR set to: 61
 12197                           ;mcc_generated_files/uart1.c: 274:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 12198  0046F0  0E4A               	movlw	low _uart1RxStatusBuffer
 12199  0046F2  245A               	addwf	_uart1RxHead^0,w,c	;volatile
 12200  0046F4  6ED9               	movwf	fsr2l,c
 12201  0046F6  6ADA               	clrf	fsr2h,c
 12202  0046F8  0E01               	movlw	high _uart1RxStatusBuffer
 12203  0046FA  22DA               	addwfc	fsr2h,f,c
 12204  0046FC  0101               	movlb	1	; () banked
 12205  0046FE  84DF               	bsf	indf2,2,c
 12206                           
 12207                           ; BSR set to: 1
 12208                           ;mcc_generated_files/uart1.c: 275:         UART1_OverrunErrorHandler();
 12209  004700  D801               	call	i2u488_48
 12210  004702  D00A               	goto	i2u488_49
 12211  004704                     i2u488_48:
 12212  004704  0005               	push	
 12213  004706  6EFA               	movwf	pclath,c
 12214  004708  5178               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 12215  00470A  6EFD               	movwf	tosl,c
 12216  00470C  5179               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 12217  00470E  6EFE               	movwf	tosh,c
 12218  004710  517A               	movf	(_UART1_OverrunErrorHandler+2)& (0+255),w,b
 12219  004712  6EFF               	movwf	tosu,c
 12220  004714  50FA               	movf	pclath,w,c
 12221  004716  0012               	return		;indir
 12222  004718                     i2u488_49:
 12223                           
 12224                           ;mcc_generated_files/uart1.c: 278:     if(uart1RxStatusBuffer[uart1RxHead].status){
 12225  004718  0E4A               	movlw	low _uart1RxStatusBuffer
 12226  00471A  245A               	addwf	_uart1RxHead^0,w,c	;volatile
 12227  00471C  6ED9               	movwf	fsr2l,c
 12228  00471E  6ADA               	clrf	fsr2h,c
 12229  004720  0E01               	movlw	high _uart1RxStatusBuffer
 12230  004722  22DA               	addwfc	fsr2h,f,c
 12231  004724  50DF               	movf	indf2,w,c
 12232  004726  B4D8               	btfsc	status,2,c
 12233  004728  D00D               	goto	i2l5484
 12234                           
 12235                           ;mcc_generated_files/uart1.c: 279:         UART1_ErrorHandler();
 12236  00472A  D801               	call	i2u490_48
 12237  00472C  0012               	return	
 12238  00472E                     i2u490_48:
 12239  00472E  0005               	push	
 12240  004730  6EFA               	movwf	pclath,c
 12241  004732  0101               	movlb	1	; () banked
 12242  004734  5175               	movf	_UART1_ErrorHandler& (0+255),w,b
 12243  004736  6EFD               	movwf	tosl,c
 12244  004738  5176               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 12245  00473A  6EFE               	movwf	tosh,c
 12246  00473C  5177               	movf	(_UART1_ErrorHandler+2)& (0+255),w,b
 12247  00473E  6EFF               	movwf	tosu,c
 12248  004740  50FA               	movf	pclath,w,c
 12249  004742  0012               	return		;indir
 12250  004744                     i2l5484:
 12251                           
 12252                           ;mcc_generated_files/uart1.c: 281:         UART1_RxDataHandler();
 12253  004744  ECE4  F028         	call	_UART1_RxDataHandler	;wreg free
 12254  004748  0012               	return		;funcret
 12255  00474A                     __end_of_UART1_Receive_ISR:
 12256                           	opt callstack 0
 12257                           
 12258 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 12259 ;; Defined at:
 12260 ;;		line 299 in file "mcc_generated_files/uart1.c"
 12261 ;; Parameters:    Size  Location     Type
 12262 ;;		None
 12263 ;; Auto vars:     Size  Location     Type
 12264 ;;		None
 12265 ;; Return value:  Size  Location     Type
 12266 ;;                  1    wreg      void 
 12267 ;; Registers used:
 12268 ;;		None
 12269 ;; Tracked objects:
 12270 ;;		On entry : 3F/1
 12271 ;;		On exit  : 3F/1
 12272 ;;		Unchanged: 3F/0
 12273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12278 ;;Total ram usage:        0 bytes
 12279 ;; Hardware stack levels used:    1
 12280 ;; This function calls:
 12281 ;;		Nothing
 12282 ;; This function is called by:
 12283 ;;		_UART1_Initialize
 12284 ;;		_UART1_Receive_ISR
 12285 ;; This function uses a non-reentrant model
 12286 ;;
 12287                           
 12288                           	psect	text81
 12289  0054EE                     __ptext81:
 12290                           	opt callstack 0
 12291  0054EE                     _UART1_DefaultOverrunErrorHandler:
 12292                           	opt callstack 18
 12293                           
 12294                           ; BSR set to: 1
 12295                           
 12296                           ;incstack = 0
 12297  0054EE  0012               	return		;funcret
 12298  0054F0                     __end_of_UART1_DefaultOverrunErrorHandler:
 12299                           	opt callstack 0
 12300                           
 12301 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 12302 ;; Defined at:
 12303 ;;		line 297 in file "mcc_generated_files/uart1.c"
 12304 ;; Parameters:    Size  Location     Type
 12305 ;;		None
 12306 ;; Auto vars:     Size  Location     Type
 12307 ;;		None
 12308 ;; Return value:  Size  Location     Type
 12309 ;;                  1    wreg      void 
 12310 ;; Registers used:
 12311 ;;		None
 12312 ;; Tracked objects:
 12313 ;;		On entry : 3F/1
 12314 ;;		On exit  : 3F/1
 12315 ;;		Unchanged: 3F/0
 12316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12321 ;;Total ram usage:        0 bytes
 12322 ;; Hardware stack levels used:    1
 12323 ;; This function calls:
 12324 ;;		Nothing
 12325 ;; This function is called by:
 12326 ;;		_UART1_Initialize
 12327 ;;		_UART1_Receive_ISR
 12328 ;; This function uses a non-reentrant model
 12329 ;;
 12330                           
 12331                           	psect	text82
 12332  0054F0                     __ptext82:
 12333                           	opt callstack 0
 12334  0054F0                     _UART1_DefaultFramingErrorHandler:
 12335                           	opt callstack 18
 12336                           
 12337                           ; BSR set to: 1
 12338                           
 12339                           ; BSR set to: 1
 12340                           ;incstack = 0
 12341  0054F0  0012               	return		;funcret
 12342  0054F2                     __end_of_UART1_DefaultFramingErrorHandler:
 12343                           	opt callstack 0
 12344                           
 12345 ;; *************** function _UART1_DefaultErrorHandler *****************
 12346 ;; Defined at:
 12347 ;;		line 301 in file "mcc_generated_files/uart1.c"
 12348 ;; Parameters:    Size  Location     Type
 12349 ;;		None
 12350 ;; Auto vars:     Size  Location     Type
 12351 ;;		None
 12352 ;; Return value:  Size  Location     Type
 12353 ;;                  1    wreg      void 
 12354 ;; Registers used:
 12355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12356 ;; Tracked objects:
 12357 ;;		On entry : 3F/1
 12358 ;;		On exit  : 3F/0
 12359 ;;		Unchanged: 0/0
 12360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12365 ;;Total ram usage:        0 bytes
 12366 ;; Hardware stack levels used:    1
 12367 ;; Hardware stack levels required when called:    1
 12368 ;; This function calls:
 12369 ;;		_UART1_RxDataHandler
 12370 ;; This function is called by:
 12371 ;;		_UART1_Initialize
 12372 ;;		_UART1_Receive_ISR
 12373 ;; This function uses a non-reentrant model
 12374 ;;
 12375                           
 12376                           	psect	text83
 12377  0054DE                     __ptext83:
 12378                           	opt callstack 0
 12379  0054DE                     _UART1_DefaultErrorHandler:
 12380                           	opt callstack 17
 12381                           
 12382                           ; BSR set to: 1
 12383                           ;mcc_generated_files/uart1.c: 302:     UART1_RxDataHandler();
 12384                           
 12385                           ; BSR set to: 1
 12386                           ;incstack = 0
 12387  0054DE  ECE4  F028         	call	_UART1_RxDataHandler	;wreg free
 12388                           
 12389                           ; BSR set to: 0
 12390  0054E2  0012               	return		;funcret
 12391  0054E4                     __end_of_UART1_DefaultErrorHandler:
 12392                           	opt callstack 0
 12393                           
 12394 ;; *************** function _UART1_RxDataHandler *****************
 12395 ;; Defined at:
 12396 ;;		line 287 in file "mcc_generated_files/uart1.c"
 12397 ;; Parameters:    Size  Location     Type
 12398 ;;		None
 12399 ;; Auto vars:     Size  Location     Type
 12400 ;;		None
 12401 ;; Return value:  Size  Location     Type
 12402 ;;                  1    wreg      void 
 12403 ;; Registers used:
 12404 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12405 ;; Tracked objects:
 12406 ;;		On entry : 0/3D
 12407 ;;		On exit  : 3F/0
 12408 ;;		Unchanged: 0/0
 12409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12414 ;;Total ram usage:        0 bytes
 12415 ;; Hardware stack levels used:    1
 12416 ;; This function calls:
 12417 ;;		Nothing
 12418 ;; This function is called by:
 12419 ;;		_UART1_Receive_ISR
 12420 ;;		_UART1_DefaultErrorHandler
 12421 ;; This function uses a non-reentrant model
 12422 ;;
 12423                           
 12424                           	psect	text84
 12425  0051C8                     __ptext84:
 12426                           	opt callstack 0
 12427  0051C8                     _UART1_RxDataHandler:
 12428                           	opt callstack 18
 12429                           
 12430                           ;mcc_generated_files/uart1.c: 289:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 12431                           
 12432                           ; BSR set to: 0
 12433                           ;incstack = 0
 12434  0051C8  0E52               	movlw	low _uart1RxBuffer
 12435  0051CA  245A               	addwf	_uart1RxHead^0,w,c	;volatile
 12436  0051CC  6ED9               	movwf	fsr2l,c
 12437  0051CE  6ADA               	clrf	fsr2h,c
 12438  0051D0  0E01               	movlw	high _uart1RxBuffer
 12439  0051D2  22DA               	addwfc	fsr2h,f,c
 12440  0051D4  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 12441  0051DA  2A5A               	incf	_uart1RxHead^0,f,c	;volatile
 12442                           
 12443                           ;mcc_generated_files/uart1.c: 290:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 12444  0051DC  0E07               	movlw	7
 12445  0051DE  645A               	cpfsgt	_uart1RxHead^0,c
 12446  0051E0  D002               	goto	i2l4940
 12447                           
 12448                           ;mcc_generated_files/uart1.c: 291:     {;mcc_generated_files/uart1.c: 292:         uart1
      +                          RxHead = 0;
 12449  0051E2  0E00               	movlw	0
 12450  0051E4  6E5A               	movwf	_uart1RxHead^0,c	;volatile
 12451  0051E6                     i2l4940:
 12452                           
 12453                           ;mcc_generated_files/uart1.c: 294:     uart1RxCount++;
 12454  0051E6  0100               	movlb	0	; () banked
 12455  0051E8  2BA7               	incf	_uart1RxCount& (0+255),f,b	;volatile
 12456                           
 12457                           ; BSR set to: 0
 12458  0051EA  0012               	return		;funcret
 12459  0051EC                     __end_of_UART1_RxDataHandler:
 12460                           	opt callstack 0
 12461                           
 12462 ;; *************** function _UART2_tx_vect_isr *****************
 12463 ;; Defined at:
 12464 ;;		line 226 in file "mcc_generated_files/uart2.c"
 12465 ;; Parameters:    Size  Location     Type
 12466 ;;		None
 12467 ;; Auto vars:     Size  Location     Type
 12468 ;;		None
 12469 ;; Return value:  Size  Location     Type
 12470 ;;                  1    wreg      void 
 12471 ;; Registers used:
 12472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 12473 ;; Tracked objects:
 12474 ;;		On entry : 0/0
 12475 ;;		On exit  : 0/0
 12476 ;;		Unchanged: 0/0
 12477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12482 ;;Total ram usage:        0 bytes
 12483 ;; Hardware stack levels used:    1
 12484 ;; Hardware stack levels required when called:    1
 12485 ;; This function calls:
 12486 ;;		Absolute function
 12487 ;;		_UART2_Transmit_ISR
 12488 ;; This function is called by:
 12489 ;;		Interrupt level 2
 12490 ;; This function uses a non-reentrant model
 12491 ;;
 12492                           
 12493                           	psect	text85
 12494  0051EC                     __ptext85:
 12495                           	opt callstack 0
 12496  0051EC                     _UART2_tx_vect_isr:
 12497                           	opt callstack 19
 12498                           
 12499                           ;mcc_generated_files/uart2.c: 228:     if(UART2_TxInterruptHandler)
 12500                           
 12501                           ; BSR set to: 0
 12502                           ;incstack = 0
 12503  0051EC  0101               	movlb	1	; () banked
 12504  0051EE  5184               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 12505  0051F0  1185               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 12506  0051F2  1186               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 12507  0051F4  B4D8               	btfsc	status,2,c
 12508  0051F6  0011               	retfie		f
 12509                           
 12510                           ; BSR set to: 1
 12511                           ;mcc_generated_files/uart2.c: 229:     {;mcc_generated_files/uart2.c: 230:         UART2
      +                          _TxInterruptHandler();
 12512  0051F8  D801               	call	i2u562_48
 12513  0051FA  0011               	retfie		f
 12514  0051FC                     i2u562_48:
 12515  0051FC  0005               	push	
 12516  0051FE  6EFA               	movwf	pclath,c
 12517  005200  5184               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 12518  005202  6EFD               	movwf	tosl,c
 12519  005204  5185               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 12520  005206  6EFE               	movwf	tosh,c
 12521  005208  5186               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 12522  00520A  6EFF               	movwf	tosu,c
 12523  00520C  50FA               	movf	pclath,w,c
 12524  00520E  0012               	return		;indir
 12525  005210                     __end_of_UART2_tx_vect_isr:
 12526                           	opt callstack 0
 12527                           
 12528 ;; *************** function _UART2_Transmit_ISR *****************
 12529 ;; Defined at:
 12530 ;;		line 244 in file "mcc_generated_files/uart2.c"
 12531 ;; Parameters:    Size  Location     Type
 12532 ;;		None
 12533 ;; Auto vars:     Size  Location     Type
 12534 ;;		None
 12535 ;; Return value:  Size  Location     Type
 12536 ;;                  1    wreg      void 
 12537 ;; Registers used:
 12538 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12539 ;; Tracked objects:
 12540 ;;		On entry : 3F/1
 12541 ;;		On exit  : 6/0
 12542 ;;		Unchanged: 0/0
 12543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12548 ;;Total ram usage:        0 bytes
 12549 ;; Hardware stack levels used:    1
 12550 ;; This function calls:
 12551 ;;		Nothing
 12552 ;; This function is called by:
 12553 ;;		_UART2_Initialize
 12554 ;;		_UART2_tx_vect_isr
 12555 ;; This function uses a non-reentrant model
 12556 ;;
 12557                           
 12558                           	psect	text86
 12559  00505A                     __ptext86:
 12560                           	opt callstack 0
 12561  00505A                     _UART2_Transmit_ISR:
 12562                           	opt callstack 19
 12563                           
 12564                           ; BSR set to: 1
 12565                           ;mcc_generated_files/uart2.c: 247:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 12566                           
 12567                           ;incstack = 0
 12568  00505A  0E08               	movlw	8
 12569  00505C  0100               	movlb	0	; () banked
 12570  00505E  61A4               	cpfslt	_uart2TxBufferRemaining& (0+255),b
 12571  005060  D012               	goto	i2l518
 12572                           
 12573                           ; BSR set to: 0
 12574                           ;mcc_generated_files/uart2.c: 248:     {;mcc_generated_files/uart2.c: 249:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 12575  005062  0E42               	movlw	low _uart2TxBuffer
 12576  005064  25A5               	addwf	_uart2TxTail& (0+255),w,b	;volatile
 12577  005066  6ED9               	movwf	fsr2l,c
 12578  005068  6ADA               	clrf	fsr2h,c
 12579  00506A  0E01               	movlw	high _uart2TxBuffer
 12580  00506C  22DA               	addwfc	fsr2h,f,c
 12581  00506E  50DF               	movf	indf2,w,c
 12582  005070  013D               	movlb	61	; () banked
 12583  005072  6FD2               	movwf	210,b	;volatile
 12584                           
 12585                           ; BSR set to: 61
 12586  005074  0100               	movlb	0	; () banked
 12587  005076  2BA5               	incf	_uart2TxTail& (0+255),f,b	;volatile
 12588                           
 12589                           ; BSR set to: 0
 12590                           ;mcc_generated_files/uart2.c: 250:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 12591  005078  0E07               	movlw	7
 12592  00507A  65A5               	cpfsgt	_uart2TxTail& (0+255),b
 12593  00507C  D002               	goto	i2l5496
 12594                           
 12595                           ; BSR set to: 0
 12596                           ;mcc_generated_files/uart2.c: 251:         {;mcc_generated_files/uart2.c: 252:          
      +                             uart2TxTail = 0;
 12597  00507E  0E00               	movlw	0
 12598  005080  6FA5               	movwf	_uart2TxTail& (0+255),b	;volatile
 12599  005082                     i2l5496:
 12600                           
 12601                           ; BSR set to: 0
 12602                           ;mcc_generated_files/uart2.c: 254:         uart2TxBufferRemaining++;
 12603  005082  2BA4               	incf	_uart2TxBufferRemaining& (0+255),f,b	;volatile
 12604                           
 12605                           ;mcc_generated_files/uart2.c: 255:     }
 12606  005084  0012               	return	
 12607  005086                     i2l518:
 12608                           
 12609                           ; BSR set to: 0
 12610                           ;mcc_generated_files/uart2.c: 257:     {;mcc_generated_files/uart2.c: 258:         PIE6b
      +                          its.U2TXIE = 0;
 12611  005086  0139               	movlb	57	; () banked
 12612  005088  9796               	bcf	150,3,b	;volatile
 12613  00508A  0012               	return		;funcret
 12614  00508C                     __end_of_UART2_Transmit_ISR:
 12615                           	opt callstack 0
 12616                           
 12617 ;; *************** function _UART2_rx_vect_isr *****************
 12618 ;; Defined at:
 12619 ;;		line 234 in file "mcc_generated_files/uart2.c"
 12620 ;; Parameters:    Size  Location     Type
 12621 ;;		None
 12622 ;; Auto vars:     Size  Location     Type
 12623 ;;		None
 12624 ;; Return value:  Size  Location     Type
 12625 ;;                  1    wreg      void 
 12626 ;; Registers used:
 12627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 12628 ;; Tracked objects:
 12629 ;;		On entry : 0/0
 12630 ;;		On exit  : 0/0
 12631 ;;		Unchanged: 0/0
 12632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12637 ;;Total ram usage:        0 bytes
 12638 ;; Hardware stack levels used:    1
 12639 ;; Hardware stack levels required when called:    3
 12640 ;; This function calls:
 12641 ;;		Absolute function
 12642 ;;		_UART2_Receive_ISR
 12643 ;; This function is called by:
 12644 ;;		Interrupt level 2
 12645 ;; This function uses a non-reentrant model
 12646 ;;
 12647                           
 12648                           	psect	text87
 12649  005210                     __ptext87:
 12650                           	opt callstack 0
 12651  005210                     _UART2_rx_vect_isr:
 12652                           	opt callstack 17
 12653                           
 12654                           ;mcc_generated_files/uart2.c: 236:     if(UART2_RxInterruptHandler)
 12655                           
 12656                           ;incstack = 0
 12657  005210  0101               	movlb	1	; () banked
 12658  005212  5187               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 12659  005214  1188               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 12660  005216  1189               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 12661  005218  B4D8               	btfsc	status,2,c
 12662  00521A  0011               	retfie		f
 12663                           
 12664                           ; BSR set to: 1
 12665                           ;mcc_generated_files/uart2.c: 237:     {;mcc_generated_files/uart2.c: 238:         UART2
      +                          _RxInterruptHandler();
 12666  00521C  D801               	call	i2u564_48
 12667  00521E  0011               	retfie		f
 12668  005220                     i2u564_48:
 12669  005220  0005               	push	
 12670  005222  6EFA               	movwf	pclath,c
 12671  005224  5187               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 12672  005226  6EFD               	movwf	tosl,c
 12673  005228  5188               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 12674  00522A  6EFE               	movwf	tosh,c
 12675  00522C  5189               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 12676  00522E  6EFF               	movwf	tosu,c
 12677  005230  50FA               	movf	pclath,w,c
 12678  005232  0012               	return		;indir
 12679  005234                     __end_of_UART2_rx_vect_isr:
 12680                           	opt callstack 0
 12681                           
 12682 ;; *************** function _UART2_Receive_ISR *****************
 12683 ;; Defined at:
 12684 ;;		line 264 in file "mcc_generated_files/uart2.c"
 12685 ;; Parameters:    Size  Location     Type
 12686 ;;		None
 12687 ;; Auto vars:     Size  Location     Type
 12688 ;;		None
 12689 ;; Return value:  Size  Location     Type
 12690 ;;                  1    wreg      void 
 12691 ;; Registers used:
 12692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 12693 ;; Tracked objects:
 12694 ;;		On entry : 3F/1
 12695 ;;		On exit  : 0/0
 12696 ;;		Unchanged: 0/0
 12697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12702 ;;Total ram usage:        0 bytes
 12703 ;; Hardware stack levels used:    1
 12704 ;; Hardware stack levels required when called:    2
 12705 ;; This function calls:
 12706 ;;		Absolute function
 12707 ;;		_UART2_DefaultErrorHandler
 12708 ;;		_UART2_DefaultFramingErrorHandler
 12709 ;;		_UART2_DefaultOverrunErrorHandler
 12710 ;;		_UART2_RxDataHandler
 12711 ;; This function is called by:
 12712 ;;		_UART2_Initialize
 12713 ;;		_UART2_rx_vect_isr
 12714 ;; This function uses a non-reentrant model
 12715 ;;
 12716                           
 12717                           	psect	text88
 12718  00474A                     __ptext88:
 12719                           	opt callstack 0
 12720  00474A                     _UART2_Receive_ISR:
 12721                           	opt callstack 17
 12722                           
 12723                           ; BSR set to: 1
 12724                           ;mcc_generated_files/uart2.c: 267:     uart2RxStatusBuffer[uart2RxHead].status = 0;
 12725                           
 12726                           ;incstack = 0
 12727  00474A  0E32               	movlw	low _uart2RxStatusBuffer
 12728  00474C  2459               	addwf	_uart2RxHead^0,w,c	;volatile
 12729  00474E  6ED9               	movwf	fsr2l,c
 12730  004750  6ADA               	clrf	fsr2h,c
 12731  004752  0E01               	movlw	high _uart2RxStatusBuffer
 12732  004754  22DA               	addwfc	fsr2h,f,c
 12733  004756  0E00               	movlw	0
 12734  004758  6EDF               	movwf	indf2,c
 12735                           
 12736                           ; BSR set to: 1
 12737                           ;mcc_generated_files/uart2.c: 269:     if(U2ERRIRbits.FERIF){
 12738  00475A  013D               	movlb	61	; () banked
 12739  00475C  A7E1               	btfss	225,3,b	;volatile
 12740  00475E  D014               	goto	i2u494_49
 12741                           
 12742                           ; BSR set to: 61
 12743                           ;mcc_generated_files/uart2.c: 270:         uart2RxStatusBuffer[uart2RxHead].ferr = 1;
 12744  004760  0E32               	movlw	low _uart2RxStatusBuffer
 12745  004762  2459               	addwf	_uart2RxHead^0,w,c	;volatile
 12746  004764  6ED9               	movwf	fsr2l,c
 12747  004766  6ADA               	clrf	fsr2h,c
 12748  004768  0E01               	movlw	high _uart2RxStatusBuffer
 12749  00476A  22DA               	addwfc	fsr2h,f,c
 12750  00476C  0101               	movlb	1	; () banked
 12751  00476E  82DF               	bsf	indf2,1,c
 12752                           
 12753                           ; BSR set to: 1
 12754                           ;mcc_generated_files/uart2.c: 271:         UART2_FramingErrorHandler();
 12755  004770  D801               	call	i2u494_48
 12756  004772  D00A               	goto	i2u494_49
 12757  004774                     i2u494_48:
 12758  004774  0005               	push	
 12759  004776  6EFA               	movwf	pclath,c
 12760  004778  5172               	movf	_UART2_FramingErrorHandler& (0+255),w,b
 12761  00477A  6EFD               	movwf	tosl,c
 12762  00477C  5173               	movf	(_UART2_FramingErrorHandler+1)& (0+255),w,b
 12763  00477E  6EFE               	movwf	tosh,c
 12764  004780  5174               	movf	(_UART2_FramingErrorHandler+2)& (0+255),w,b
 12765  004782  6EFF               	movwf	tosu,c
 12766  004784  50FA               	movf	pclath,w,c
 12767  004786  0012               	return		;indir
 12768  004788                     i2u494_49:
 12769                           
 12770                           ;mcc_generated_files/uart2.c: 274:     if(U2ERRIRbits.RXFOIF){
 12771  004788  013D               	movlb	61	; () banked
 12772  00478A  A3E1               	btfss	225,1,b	;volatile
 12773  00478C  D014               	goto	i2u496_49
 12774                           
 12775                           ; BSR set to: 61
 12776                           ;mcc_generated_files/uart2.c: 275:         uart2RxStatusBuffer[uart2RxHead].oerr = 1;
 12777  00478E  0E32               	movlw	low _uart2RxStatusBuffer
 12778  004790  2459               	addwf	_uart2RxHead^0,w,c	;volatile
 12779  004792  6ED9               	movwf	fsr2l,c
 12780  004794  6ADA               	clrf	fsr2h,c
 12781  004796  0E01               	movlw	high _uart2RxStatusBuffer
 12782  004798  22DA               	addwfc	fsr2h,f,c
 12783  00479A  0101               	movlb	1	; () banked
 12784  00479C  84DF               	bsf	indf2,2,c
 12785                           
 12786                           ; BSR set to: 1
 12787                           ;mcc_generated_files/uart2.c: 276:         UART2_OverrunErrorHandler();
 12788  00479E  D801               	call	i2u496_48
 12789  0047A0  D00A               	goto	i2u496_49
 12790  0047A2                     i2u496_48:
 12791  0047A2  0005               	push	
 12792  0047A4  6EFA               	movwf	pclath,c
 12793  0047A6  516F               	movf	_UART2_OverrunErrorHandler& (0+255),w,b
 12794  0047A8  6EFD               	movwf	tosl,c
 12795  0047AA  5170               	movf	(_UART2_OverrunErrorHandler+1)& (0+255),w,b
 12796  0047AC  6EFE               	movwf	tosh,c
 12797  0047AE  5171               	movf	(_UART2_OverrunErrorHandler+2)& (0+255),w,b
 12798  0047B0  6EFF               	movwf	tosu,c
 12799  0047B2  50FA               	movf	pclath,w,c
 12800  0047B4  0012               	return		;indir
 12801  0047B6                     i2u496_49:
 12802                           
 12803                           ;mcc_generated_files/uart2.c: 279:     if(uart2RxStatusBuffer[uart2RxHead].status){
 12804  0047B6  0E32               	movlw	low _uart2RxStatusBuffer
 12805  0047B8  2459               	addwf	_uart2RxHead^0,w,c	;volatile
 12806  0047BA  6ED9               	movwf	fsr2l,c
 12807  0047BC  6ADA               	clrf	fsr2h,c
 12808  0047BE  0E01               	movlw	high _uart2RxStatusBuffer
 12809  0047C0  22DA               	addwfc	fsr2h,f,c
 12810  0047C2  50DF               	movf	indf2,w,c
 12811  0047C4  B4D8               	btfsc	status,2,c
 12812  0047C6  D00D               	goto	i2l5516
 12813                           
 12814                           ;mcc_generated_files/uart2.c: 280:         UART2_ErrorHandler();
 12815  0047C8  D801               	call	i2u498_48
 12816  0047CA  0012               	return	
 12817  0047CC                     i2u498_48:
 12818  0047CC  0005               	push	
 12819  0047CE  6EFA               	movwf	pclath,c
 12820  0047D0  0101               	movlb	1	; () banked
 12821  0047D2  516C               	movf	_UART2_ErrorHandler& (0+255),w,b
 12822  0047D4  6EFD               	movwf	tosl,c
 12823  0047D6  516D               	movf	(_UART2_ErrorHandler+1)& (0+255),w,b
 12824  0047D8  6EFE               	movwf	tosh,c
 12825  0047DA  516E               	movf	(_UART2_ErrorHandler+2)& (0+255),w,b
 12826  0047DC  6EFF               	movwf	tosu,c
 12827  0047DE  50FA               	movf	pclath,w,c
 12828  0047E0  0012               	return		;indir
 12829  0047E2                     i2l5516:
 12830                           
 12831                           ;mcc_generated_files/uart2.c: 282:         UART2_RxDataHandler();
 12832  0047E2  EC1A  F029         	call	_UART2_RxDataHandler	;wreg free
 12833  0047E6  0012               	return		;funcret
 12834  0047E8                     __end_of_UART2_Receive_ISR:
 12835                           	opt callstack 0
 12836                           
 12837 ;; *************** function _UART2_DefaultOverrunErrorHandler *****************
 12838 ;; Defined at:
 12839 ;;		line 300 in file "mcc_generated_files/uart2.c"
 12840 ;; Parameters:    Size  Location     Type
 12841 ;;		None
 12842 ;; Auto vars:     Size  Location     Type
 12843 ;;		None
 12844 ;; Return value:  Size  Location     Type
 12845 ;;                  1    wreg      void 
 12846 ;; Registers used:
 12847 ;;		None
 12848 ;; Tracked objects:
 12849 ;;		On entry : 3F/1
 12850 ;;		On exit  : 3F/1
 12851 ;;		Unchanged: 3F/0
 12852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12857 ;;Total ram usage:        0 bytes
 12858 ;; Hardware stack levels used:    1
 12859 ;; This function calls:
 12860 ;;		Nothing
 12861 ;; This function is called by:
 12862 ;;		_UART2_Initialize
 12863 ;;		_UART2_Receive_ISR
 12864 ;; This function uses a non-reentrant model
 12865 ;;
 12866                           
 12867                           	psect	text89
 12868  0054F2                     __ptext89:
 12869                           	opt callstack 0
 12870  0054F2                     _UART2_DefaultOverrunErrorHandler:
 12871                           	opt callstack 18
 12872                           
 12873                           ; BSR set to: 1
 12874                           
 12875                           ;incstack = 0
 12876  0054F2  0012               	return		;funcret
 12877  0054F4                     __end_of_UART2_DefaultOverrunErrorHandler:
 12878                           	opt callstack 0
 12879                           
 12880 ;; *************** function _UART2_DefaultFramingErrorHandler *****************
 12881 ;; Defined at:
 12882 ;;		line 298 in file "mcc_generated_files/uart2.c"
 12883 ;; Parameters:    Size  Location     Type
 12884 ;;		None
 12885 ;; Auto vars:     Size  Location     Type
 12886 ;;		None
 12887 ;; Return value:  Size  Location     Type
 12888 ;;                  1    wreg      void 
 12889 ;; Registers used:
 12890 ;;		None
 12891 ;; Tracked objects:
 12892 ;;		On entry : 3F/1
 12893 ;;		On exit  : 3F/1
 12894 ;;		Unchanged: 3F/0
 12895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12900 ;;Total ram usage:        0 bytes
 12901 ;; Hardware stack levels used:    1
 12902 ;; This function calls:
 12903 ;;		Nothing
 12904 ;; This function is called by:
 12905 ;;		_UART2_Initialize
 12906 ;;		_UART2_Receive_ISR
 12907 ;; This function uses a non-reentrant model
 12908 ;;
 12909                           
 12910                           	psect	text90
 12911  0054F4                     __ptext90:
 12912                           	opt callstack 0
 12913  0054F4                     _UART2_DefaultFramingErrorHandler:
 12914                           	opt callstack 18
 12915                           
 12916                           ; BSR set to: 1
 12917                           
 12918                           ; BSR set to: 1
 12919                           ;incstack = 0
 12920  0054F4  0012               	return		;funcret
 12921  0054F6                     __end_of_UART2_DefaultFramingErrorHandler:
 12922                           	opt callstack 0
 12923                           
 12924 ;; *************** function _UART2_DefaultErrorHandler *****************
 12925 ;; Defined at:
 12926 ;;		line 302 in file "mcc_generated_files/uart2.c"
 12927 ;; Parameters:    Size  Location     Type
 12928 ;;		None
 12929 ;; Auto vars:     Size  Location     Type
 12930 ;;		None
 12931 ;; Return value:  Size  Location     Type
 12932 ;;                  1    wreg      void 
 12933 ;; Registers used:
 12934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12935 ;; Tracked objects:
 12936 ;;		On entry : 3F/1
 12937 ;;		On exit  : 3F/0
 12938 ;;		Unchanged: 0/0
 12939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12944 ;;Total ram usage:        0 bytes
 12945 ;; Hardware stack levels used:    1
 12946 ;; Hardware stack levels required when called:    1
 12947 ;; This function calls:
 12948 ;;		_UART2_RxDataHandler
 12949 ;; This function is called by:
 12950 ;;		_UART2_Initialize
 12951 ;;		_UART2_Receive_ISR
 12952 ;; This function uses a non-reentrant model
 12953 ;;
 12954                           
 12955                           	psect	text91
 12956  0054E4                     __ptext91:
 12957                           	opt callstack 0
 12958  0054E4                     _UART2_DefaultErrorHandler:
 12959                           	opt callstack 17
 12960                           
 12961                           ; BSR set to: 1
 12962                           ;mcc_generated_files/uart2.c: 303:     UART2_RxDataHandler();
 12963                           
 12964                           ; BSR set to: 1
 12965                           ;incstack = 0
 12966  0054E4  EC1A  F029         	call	_UART2_RxDataHandler	;wreg free
 12967                           
 12968                           ; BSR set to: 0
 12969  0054E8  0012               	return		;funcret
 12970  0054EA                     __end_of_UART2_DefaultErrorHandler:
 12971                           	opt callstack 0
 12972                           
 12973 ;; *************** function _UART2_RxDataHandler *****************
 12974 ;; Defined at:
 12975 ;;		line 288 in file "mcc_generated_files/uart2.c"
 12976 ;; Parameters:    Size  Location     Type
 12977 ;;		None
 12978 ;; Auto vars:     Size  Location     Type
 12979 ;;		None
 12980 ;; Return value:  Size  Location     Type
 12981 ;;                  1    wreg      void 
 12982 ;; Registers used:
 12983 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12984 ;; Tracked objects:
 12985 ;;		On entry : 0/3D
 12986 ;;		On exit  : 3F/0
 12987 ;;		Unchanged: 0/0
 12988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12993 ;;Total ram usage:        0 bytes
 12994 ;; Hardware stack levels used:    1
 12995 ;; This function calls:
 12996 ;;		Nothing
 12997 ;; This function is called by:
 12998 ;;		_UART2_Receive_ISR
 12999 ;;		_UART2_DefaultErrorHandler
 13000 ;; This function uses a non-reentrant model
 13001 ;;
 13002                           
 13003                           	psect	text92
 13004  005234                     __ptext92:
 13005                           	opt callstack 0
 13006  005234                     _UART2_RxDataHandler:
 13007                           	opt callstack 18
 13008                           
 13009                           ;mcc_generated_files/uart2.c: 290:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 13010                           
 13011                           ; BSR set to: 0
 13012                           ;incstack = 0
 13013  005234  0E3A               	movlw	low _uart2RxBuffer
 13014  005236  2459               	addwf	_uart2RxHead^0,w,c	;volatile
 13015  005238  6ED9               	movwf	fsr2l,c
 13016  00523A  6ADA               	clrf	fsr2h,c
 13017  00523C  0E01               	movlw	high _uart2RxBuffer
 13018  00523E  22DA               	addwfc	fsr2h,f,c
 13019  005240  006F F743 FFDF     	movff	15824,indf2	;volatile
 13020  005246  2A59               	incf	_uart2RxHead^0,f,c	;volatile
 13021                           
 13022                           ;mcc_generated_files/uart2.c: 291:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 13023  005248  0E07               	movlw	7
 13024  00524A  6459               	cpfsgt	_uart2RxHead^0,c
 13025  00524C  D002               	goto	i2l4960
 13026                           
 13027                           ;mcc_generated_files/uart2.c: 292:     {;mcc_generated_files/uart2.c: 293:         uart2
      +                          RxHead = 0;
 13028  00524E  0E00               	movlw	0
 13029  005250  6E59               	movwf	_uart2RxHead^0,c	;volatile
 13030  005252                     i2l4960:
 13031                           
 13032                           ;mcc_generated_files/uart2.c: 295:     uart2RxCount++;
 13033  005252  0100               	movlb	0	; () banked
 13034  005254  2BA3               	incf	_uart2RxCount& (0+255),f,b	;volatile
 13035                           
 13036                           ; BSR set to: 0
 13037  005256  0012               	return		;funcret
 13038  005258                     __end_of_UART2_RxDataHandler:
 13039                           	opt callstack 0
 13040                           
 13041 ;; *************** function _TMR6_ISR *****************
 13042 ;; Defined at:
 13043 ;;		line 168 in file "mcc_generated_files/tmr6.c"
 13044 ;; Parameters:    Size  Location     Type
 13045 ;;		None
 13046 ;; Auto vars:     Size  Location     Type
 13047 ;;		None
 13048 ;; Return value:  Size  Location     Type
 13049 ;;                  1    wreg      void 
 13050 ;; Registers used:
 13051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 13052 ;; Tracked objects:
 13053 ;;		On entry : 0/0
 13054 ;;		On exit  : 0/0
 13055 ;;		Unchanged: 0/0
 13056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13061 ;;Total ram usage:        0 bytes
 13062 ;; Hardware stack levels used:    1
 13063 ;; Hardware stack levels required when called:    1
 13064 ;; This function calls:
 13065 ;;		Absolute function
 13066 ;;		_TMR6_DefaultInterruptHandler
 13067 ;; This function is called by:
 13068 ;;		Interrupt level 2
 13069 ;; This function uses a non-reentrant model
 13070 ;;
 13071                           
 13072                           	psect	text93
 13073  005110                     __ptext93:
 13074                           	opt callstack 0
 13075  005110                     _TMR6_ISR:
 13076                           	opt callstack 19
 13077                           
 13078                           ;mcc_generated_files/tmr6.c: 172:  PIR9bits.TMR6IF = 0;
 13079                           
 13080                           ; BSR set to: 0
 13081                           ;incstack = 0
 13082  005110  0139               	movlb	57	; () banked
 13083  005112  91A9               	bcf	169,0,b	;volatile
 13084                           
 13085                           ; BSR set to: 57
 13086                           ;mcc_generated_files/tmr6.c: 174:  if (TMR6_InterruptHandler) {
 13087  005114  0101               	movlb	1	; () banked
 13088  005116  5169               	movf	_TMR6_InterruptHandler& (0+255),w,b
 13089  005118  116A               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 13090  00511A  116B               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 13091  00511C  B4D8               	btfsc	status,2,c
 13092  00511E  0011               	retfie		f
 13093                           
 13094                           ; BSR set to: 1
 13095                           ;mcc_generated_files/tmr6.c: 175:   TMR6_InterruptHandler();
 13096  005120  D801               	call	i2u566_48
 13097  005122  0011               	retfie		f
 13098  005124                     i2u566_48:
 13099  005124  0005               	push	
 13100  005126  6EFA               	movwf	pclath,c
 13101  005128  5169               	movf	_TMR6_InterruptHandler& (0+255),w,b
 13102  00512A  6EFD               	movwf	tosl,c
 13103  00512C  516A               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 13104  00512E  6EFE               	movwf	tosh,c
 13105  005130  516B               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 13106  005132  6EFF               	movwf	tosu,c
 13107  005134  50FA               	movf	pclath,w,c
 13108  005136  0012               	return		;indir
 13109  005138                     __end_of_TMR6_ISR:
 13110                           	opt callstack 0
 13111                           
 13112 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 13113 ;; Defined at:
 13114 ;;		line 184 in file "mcc_generated_files/tmr6.c"
 13115 ;; Parameters:    Size  Location     Type
 13116 ;;		None
 13117 ;; Auto vars:     Size  Location     Type
 13118 ;;  i               1    2[COMRAM] unsigned char 
 13119 ;; Return value:  Size  Location     Type
 13120 ;;                  1    wreg      void 
 13121 ;; Registers used:
 13122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13123 ;; Tracked objects:
 13124 ;;		On entry : 3F/1
 13125 ;;		On exit  : 3F/1
 13126 ;;		Unchanged: 3F/0
 13127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13129 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13130 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13131 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13132 ;;Total ram usage:        3 bytes
 13133 ;; Hardware stack levels used:    1
 13134 ;; This function calls:
 13135 ;;		Nothing
 13136 ;; This function is called by:
 13137 ;;		_TMR6_Initialize
 13138 ;;		_TMR6_ISR
 13139 ;; This function uses a non-reentrant model
 13140 ;;
 13141                           
 13142                           	psect	text94
 13143  004E6E                     __ptext94:
 13144                           	opt callstack 0
 13145  004E6E                     _TMR6_DefaultInterruptHandler:
 13146                           	opt callstack 19
 13147                           
 13148                           ; BSR set to: 1
 13149                           ;mcc_generated_files/tmr6.c: 186:  uint8_t i;;mcc_generated_files/tmr6.c: 190:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 13150                           
 13151                           ;incstack = 0
 13152  004E6E  0E00               	movlw	0
 13153  004E70  6E03               	movwf	TMR6_DefaultInterruptHandler@i^0,c
 13154  004E72                     i2l5524:
 13155                           
 13156                           ; BSR set to: 1
 13157                           ;mcc_generated_files/tmr6.c: 191:   if (tickCount[i] != 0) {
 13158  004E72  5003               	movf	TMR6_DefaultInterruptHandler@i^0,w,c
 13159  004E74  0D02               	mullw	2
 13160  004E76  0E20               	movlw	low _tickCount
 13161  004E78  24F3               	addwf	243,w,c
 13162  004E7A  6ED9               	movwf	fsr2l,c
 13163  004E7C  0E01               	movlw	high _tickCount
 13164  004E7E  20F4               	addwfc	prodh,w,c
 13165  004E80  6EDA               	movwf	fsr2h,c
 13166  004E82  50DE               	movf	postinc2,w,c
 13167  004E84  10DE               	iorwf	postinc2,w,c
 13168  004E86  B4D8               	btfsc	status,2,c
 13169  004E88  D00B               	goto	i2l5528
 13170                           
 13171                           ; BSR set to: 1
 13172                           ;mcc_generated_files/tmr6.c: 192:    tickCount[i]--;
 13173  004E8A  5003               	movf	TMR6_DefaultInterruptHandler@i^0,w,c
 13174  004E8C  0D02               	mullw	2
 13175  004E8E  0E20               	movlw	low _tickCount
 13176  004E90  24F3               	addwf	243,w,c
 13177  004E92  6ED9               	movwf	fsr2l,c
 13178  004E94  0E01               	movlw	high _tickCount
 13179  004E96  20F4               	addwfc	prodh,w,c
 13180  004E98  6EDA               	movwf	fsr2h,c
 13181  004E9A  06DE               	decf	postinc2,f,c
 13182  004E9C  0E00               	movlw	0
 13183  004E9E  5ADD               	subwfb	postdec2,f,c
 13184  004EA0                     i2l5528:
 13185                           
 13186                           ; BSR set to: 1
 13187                           ;mcc_generated_files/tmr6.c: 194:  }
 13188  004EA0  2A03               	incf	TMR6_DefaultInterruptHandler@i^0,f,c
 13189                           
 13190                           ; BSR set to: 1
 13191  004EA2  0E08               	movlw	8
 13192  004EA4  6403               	cpfsgt	TMR6_DefaultInterruptHandler@i^0,c
 13193  004EA6  D7E5               	goto	i2l5524
 13194  004EA8  0012               	return	
 13195  004EAA                     __end_of_TMR6_DefaultInterruptHandler:
 13196                           	opt callstack 0
 13197                           
 13198 ;; *************** function _TMR5_ISR *****************
 13199 ;; Defined at:
 13200 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 13201 ;; Parameters:    Size  Location     Type
 13202 ;;		None
 13203 ;; Auto vars:     Size  Location     Type
 13204 ;;		None
 13205 ;; Return value:  Size  Location     Type
 13206 ;;                  1    wreg      void 
 13207 ;; Registers used:
 13208 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 13209 ;; Tracked objects:
 13210 ;;		On entry : 0/0
 13211 ;;		On exit  : 3F/1
 13212 ;;		Unchanged: 0/0
 13213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13218 ;;Total ram usage:        0 bytes
 13219 ;; Hardware stack levels used:    1
 13220 ;; Hardware stack levels required when called:    2
 13221 ;; This function calls:
 13222 ;;		_TMR5_CallBack
 13223 ;;		_TMR5_WriteTimer
 13224 ;; This function is called by:
 13225 ;;		Interrupt level 2
 13226 ;; This function uses a non-reentrant model
 13227 ;;
 13228                           
 13229                           	psect	text95
 13230  004FC0                     __ptext95:
 13231                           	opt callstack 0
 13232  004FC0                     _TMR5_ISR:
 13233                           	opt callstack 18
 13234                           
 13235                           ;mcc_generated_files/tmr5.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr5.c: 171:     PIR8bits.TMR5IF = 0;
 13236                           
 13237                           ; BSR set to: 1
 13238                           ;incstack = 0
 13239  004FC0  0139               	movlb	57	; () banked
 13240  004FC2  9DA8               	bcf	168,6,b	;volatile
 13241                           
 13242                           ; BSR set to: 57
 13243                           ;mcc_generated_files/tmr5.c: 172:     TMR5_WriteTimer(timer5ReloadVal);
 13244  004FC4  0060  F648  F004   	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 13245  004FCA  0060  F64C  F005   	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 13246  004FD0  EC2C  F029         	call	_TMR5_WriteTimer	;wreg free
 13247                           
 13248                           ; BSR set to: 57
 13249                           ;mcc_generated_files/tmr5.c: 175:     if (++CountCallBack >= 50)
 13250  004FD4  0101               	movlb	1	; () banked
 13251  004FD6  4B90               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 13252  004FD8  2B91               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 13253  004FDA  5191               	movf	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 13254  004FDC  E104               	bnz	i2u567_40
 13255  004FDE  0E32               	movlw	50
 13256  004FE0  5D90               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 13257  004FE2  A0D8               	btfss	status,0,c
 13258  004FE4  0011               	retfie		f
 13259  004FE6                     i2u567_40:
 13260                           
 13261                           ; BSR set to: 1
 13262                           ;mcc_generated_files/tmr5.c: 176:     {;mcc_generated_files/tmr5.c: 178:         TMR5_Ca
      +                          llBack();
 13263  004FE6  EC60  F029         	call	_TMR5_CallBack	;wreg free
 13264                           
 13265                           ;mcc_generated_files/tmr5.c: 181:         CountCallBack = 0;
 13266  004FEA  0E00               	movlw	0
 13267  004FEC  0101               	movlb	1	; () banked
 13268  004FEE  6F91               	movwf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 13269  004FF0  0E00               	movlw	0
 13270  004FF2  6F90               	movwf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 13271                           
 13272                           ; BSR set to: 1
 13273  004FF4  0011               	retfie		f
 13274  004FF6                     __end_of_TMR5_ISR:
 13275                           	opt callstack 0
 13276                           
 13277 ;; *************** function _TMR5_WriteTimer *****************
 13278 ;; Defined at:
 13279 ;;		line 129 in file "mcc_generated_files/tmr5.c"
 13280 ;; Parameters:    Size  Location     Type
 13281 ;;  timerVal        2    3[COMRAM] unsigned short 
 13282 ;; Auto vars:     Size  Location     Type
 13283 ;;		None
 13284 ;; Return value:  Size  Location     Type
 13285 ;;                  1    wreg      void 
 13286 ;; Registers used:
 13287 ;;		None
 13288 ;; Tracked objects:
 13289 ;;		On entry : 3F/39
 13290 ;;		On exit  : 3F/39
 13291 ;;		Unchanged: 3E/0
 13292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13293 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13296 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13297 ;;Total ram usage:        2 bytes
 13298 ;; Hardware stack levels used:    1
 13299 ;; This function calls:
 13300 ;;		Nothing
 13301 ;; This function is called by:
 13302 ;;		_TMR5_ISR
 13303 ;; This function uses a non-reentrant model
 13304 ;;
 13305                           
 13306                           	psect	text96
 13307  005258                     __ptext96:
 13308                           	opt callstack 0
 13309  005258                     _TMR5_WriteTimer:
 13310                           	opt callstack 19
 13311                           
 13312                           ; BSR set to: 57
 13313                           ;mcc_generated_files/tmr5.c: 129: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 130: {;mcc_generated_files/tmr5.c: 131:     if (T5CONbits.NOT_SYNC == 1)
 13314                           
 13315                           ; BSR set to: 1
 13316                           ;incstack = 0
 13317  005258  A49A               	btfss	154,2,c	;volatile
 13318  00525A  D009               	goto	i2l776
 13319                           
 13320                           ; BSR set to: 57
 13321                           ;mcc_generated_files/tmr5.c: 132:     {;mcc_generated_files/tmr5.c: 134:         T5CONbi
      +                          ts.TMR5ON = 0;
 13322  00525C  909A               	bcf	154,0,c	;volatile
 13323                           
 13324                           ;mcc_generated_files/tmr5.c: 137:         TMR5H = (timerVal >> 8);
 13325  00525E  0060  F017  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 13326                           
 13327                           ;mcc_generated_files/tmr5.c: 138:         TMR5L = timerVal;
 13328  005264  0060  F013  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 13329                           
 13330                           ;mcc_generated_files/tmr5.c: 141:         T5CONbits.TMR5ON =1;
 13331  00526A  809A               	bsf	154,0,c	;volatile
 13332                           
 13333                           ;mcc_generated_files/tmr5.c: 142:     }
 13334  00526C  0012               	return	
 13335  00526E                     i2l776:
 13336                           
 13337                           ; BSR set to: 57
 13338                           ;mcc_generated_files/tmr5.c: 144:     {;mcc_generated_files/tmr5.c: 146:         TMR5H =
      +                           (timerVal >> 8);
 13339  00526E  0060  F017  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 13340                           
 13341                           ;mcc_generated_files/tmr5.c: 147:         TMR5L = timerVal;
 13342  005274  0060  F013  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 13343                           
 13344                           ; BSR set to: 57
 13345  00527A  0012               	return		;funcret
 13346  00527C                     __end_of_TMR5_WriteTimer:
 13347                           	opt callstack 0
 13348                           
 13349 ;; *************** function _TMR5_CallBack *****************
 13350 ;; Defined at:
 13351 ;;		line 185 in file "mcc_generated_files/tmr5.c"
 13352 ;; Parameters:    Size  Location     Type
 13353 ;;		None
 13354 ;; Auto vars:     Size  Location     Type
 13355 ;;		None
 13356 ;; Return value:  Size  Location     Type
 13357 ;;                  1    wreg      void 
 13358 ;; Registers used:
 13359 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 13360 ;; Tracked objects:
 13361 ;;		On entry : 3F/1
 13362 ;;		On exit  : 0/0
 13363 ;;		Unchanged: 0/0
 13364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13369 ;;Total ram usage:        0 bytes
 13370 ;; Hardware stack levels used:    1
 13371 ;; Hardware stack levels required when called:    1
 13372 ;; This function calls:
 13373 ;;		Absolute function
 13374 ;;		_TMR5_DefaultInterruptHandler
 13375 ;; This function is called by:
 13376 ;;		_TMR5_ISR
 13377 ;; This function uses a non-reentrant model
 13378 ;;
 13379                           
 13380                           	psect	text97
 13381  0052C0                     __ptext97:
 13382                           	opt callstack 0
 13383  0052C0                     _TMR5_CallBack:
 13384                           	opt callstack 18
 13385                           
 13386                           ; BSR set to: 1
 13387                           ;mcc_generated_files/tmr5.c: 188:     if(TMR5_InterruptHandler)
 13388                           
 13389                           ; BSR set to: 57
 13390                           ;incstack = 0
 13391  0052C0  5166               	movf	_TMR5_InterruptHandler& (0+255),w,b
 13392  0052C2  1167               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 13393  0052C4  1168               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 13394  0052C6  B4D8               	btfsc	status,2,c
 13395  0052C8  0012               	return	
 13396                           
 13397                           ; BSR set to: 1
 13398                           ;mcc_generated_files/tmr5.c: 189:     {;mcc_generated_files/tmr5.c: 190:         TMR5_In
      +                          terruptHandler();
 13399  0052CA  D801               	call	i2u503_48
 13400  0052CC  0012               	return	
 13401  0052CE                     i2u503_48:
 13402  0052CE  0005               	push	
 13403  0052D0  6EFA               	movwf	pclath,c
 13404  0052D2  5166               	movf	_TMR5_InterruptHandler& (0+255),w,b
 13405  0052D4  6EFD               	movwf	tosl,c
 13406  0052D6  5167               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 13407  0052D8  6EFE               	movwf	tosh,c
 13408  0052DA  5168               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 13409  0052DC  6EFF               	movwf	tosu,c
 13410  0052DE  50FA               	movf	pclath,w,c
 13411  0052E0  0012               	return		;indir
 13412  0052E2                     __end_of_TMR5_CallBack:
 13413                           	opt callstack 0
 13414                           
 13415 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 13416 ;; Defined at:
 13417 ;;		line 198 in file "mcc_generated_files/tmr5.c"
 13418 ;; Parameters:    Size  Location     Type
 13419 ;;		None
 13420 ;; Auto vars:     Size  Location     Type
 13421 ;;		None
 13422 ;; Return value:  Size  Location     Type
 13423 ;;                  1    wreg      void 
 13424 ;; Registers used:
 13425 ;;		wreg, status,2, status,0
 13426 ;; Tracked objects:
 13427 ;;		On entry : 3F/1
 13428 ;;		On exit  : 3F/1
 13429 ;;		Unchanged: 3F/0
 13430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13433 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13434 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13435 ;;Total ram usage:        1 bytes
 13436 ;; Hardware stack levels used:    1
 13437 ;; This function calls:
 13438 ;;		Nothing
 13439 ;; This function is called by:
 13440 ;;		_TMR5_Initialize
 13441 ;;		_TMR5_CallBack
 13442 ;; This function uses a non-reentrant model
 13443 ;;
 13444                           
 13445                           	psect	text98
 13446  005350                     __ptext98:
 13447                           	opt callstack 0
 13448  005350                     _TMR5_DefaultInterruptHandler:
 13449                           	opt callstack 18
 13450                           
 13451                           ; BSR set to: 1
 13452                           ;mcc_generated_files/tmr5.c: 201:   LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 13453                           
 13454                           ;incstack = 0
 13455  005350  A0BE               	btfss	190,0,c	;volatile
 13456  005352  D002               	goto	i2u469_40
 13457  005354  0E01               	movlw	1
 13458  005356  D001               	goto	i2u469_46
 13459  005358                     i2u469_40:
 13460  005358  0E00               	movlw	0
 13461  00535A                     i2u469_46:
 13462  00535A  0AFF               	xorlw	255
 13463  00535C  6E04               	movwf	??_TMR5_DefaultInterruptHandler^0,c
 13464  00535E  50BE               	movf	190,w,c	;volatile
 13465  005360  1804               	xorwf	??_TMR5_DefaultInterruptHandler^0,w,c
 13466  005362  0BFE               	andlw	-2
 13467  005364  1804               	xorwf	??_TMR5_DefaultInterruptHandler^0,w,c
 13468  005366  6EBE               	movwf	190,c	;volatile
 13469                           
 13470                           ; BSR set to: 1
 13471  005368  0012               	return		;funcret
 13472  00536A                     __end_of_TMR5_DefaultInterruptHandler:
 13473                           	opt callstack 0
 13474                           
 13475                           ;
 13476                           ; Interrupt Vector Table @ 0x8
 13477                           ;
 13478                           
 13479                           	psect	ivt0x8
 13480  000008                     __pivt0x8:
 13481                           	opt callstack 0
 13482  000008                     ivt0x8_base:
 13483                           	opt callstack 0
 13484                           
 13485                           ; Vector 0 : SWINT
 13486  000008  153B               	dw	_Default_ISR shr (0+2)
 13487                           
 13488                           ; Vector 1 : HLVD
 13489  00000A  153B               	dw	_Default_ISR shr (0+2)
 13490                           
 13491                           ; Vector 2 : OSF
 13492  00000C  153B               	dw	_Default_ISR shr (0+2)
 13493                           
 13494                           ; Vector 3 : CSW
 13495  00000E  153B               	dw	_Default_ISR shr (0+2)
 13496                           
 13497                           ; Vector 4 : NVM
 13498  000010  153B               	dw	_Default_ISR shr (0+2)
 13499                           
 13500                           ; Vector 5 : SCAN
 13501  000012  153B               	dw	_Default_ISR shr (0+2)
 13502                           
 13503                           ; Vector 6 : CRC
 13504  000014  153B               	dw	_Default_ISR shr (0+2)
 13505                           
 13506                           ; Vector 7 : IOC
 13507  000016  153B               	dw	_Default_ISR shr (0+2)
 13508                           
 13509                           ; Vector 8 : INT0
 13510  000018  153B               	dw	_Default_ISR shr (0+2)
 13511                           
 13512                           ; Vector 9 : ZCD
 13513  00001A  153B               	dw	_Default_ISR shr (0+2)
 13514                           
 13515                           ; Vector 10 : AD
 13516  00001C  153B               	dw	_Default_ISR shr (0+2)
 13517                           
 13518                           ; Vector 11 : ADT
 13519  00001E  153B               	dw	_Default_ISR shr (0+2)
 13520                           
 13521                           ; Vector 12 : CMP1
 13522  000020  153B               	dw	_Default_ISR shr (0+2)
 13523                           
 13524                           ; Vector 13 : SMT1
 13525  000022  153B               	dw	_Default_ISR shr (0+2)
 13526                           
 13527                           ; Vector 14 : SMT1PRA
 13528  000024  153B               	dw	_Default_ISR shr (0+2)
 13529                           
 13530                           ; Vector 15 : SMT1PRW
 13531  000026  153B               	dw	_Default_ISR shr (0+2)
 13532                           
 13533                           ; Vector 16 : DMA1SCNT
 13534  000028  153B               	dw	_Default_ISR shr (0+2)
 13535                           
 13536                           ; Vector 17 : DMA1DCNT
 13537  00002A  153B               	dw	_Default_ISR shr (0+2)
 13538                           
 13539                           ; Vector 18 : DMA1OR
 13540  00002C  153B               	dw	_Default_ISR shr (0+2)
 13541                           
 13542                           ; Vector 19 : DMA1A
 13543  00002E  153B               	dw	_Default_ISR shr (0+2)
 13544                           
 13545                           ; Vector 20 : SPI1RX
 13546  000030  153B               	dw	_Default_ISR shr (0+2)
 13547                           
 13548                           ; Vector 21 : SPI1TX
 13549  000032  153B               	dw	_Default_ISR shr (0+2)
 13550                           
 13551                           ; Vector 22 : SPI1
 13552  000034  153B               	dw	_Default_ISR shr (0+2)
 13553                           
 13554                           ; Vector 23 : I2C1RX
 13555  000036  153B               	dw	_Default_ISR shr (0+2)
 13556                           
 13557                           ; Vector 24 : I2C1TX
 13558  000038  153B               	dw	_Default_ISR shr (0+2)
 13559                           
 13560                           ; Vector 25 : I2C1
 13561  00003A  153B               	dw	_Default_ISR shr (0+2)
 13562                           
 13563                           ; Vector 26 : I2C1E
 13564  00003C  153B               	dw	_Default_ISR shr (0+2)
 13565                           
 13566                           ; Vector 27 : U1RX
 13567  00003E  1469               	dw	_UART1_rx_vect_isr shr (0+2)
 13568                           
 13569                           ; Vector 28 : U1TX
 13570  000040  1460               	dw	_UART1_tx_vect_isr shr (0+2)
 13571                           
 13572                           ; Vector 29 : U1E
 13573  000042  153B               	dw	_Default_ISR shr (0+2)
 13574                           
 13575                           ; Vector 30 : U1
 13576  000044  153B               	dw	_Default_ISR shr (0+2)
 13577                           
 13578                           ; Vector 31 : TMR0
 13579  000046  153B               	dw	_Default_ISR shr (0+2)
 13580                           
 13581                           ; Vector 32 : TMR1
 13582  000048  153B               	dw	_Default_ISR shr (0+2)
 13583                           
 13584                           ; Vector 33 : TMR1G
 13585  00004A  153B               	dw	_Default_ISR shr (0+2)
 13586                           
 13587                           ; Vector 34 : TMR2
 13588  00004C  153B               	dw	_Default_ISR shr (0+2)
 13589                           
 13590                           ; Vector 35 : CCP1
 13591  00004E  153B               	dw	_Default_ISR shr (0+2)
 13592                           
 13593                           ; Vector 36 : Undefined
 13594  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 13595                           
 13596                           ; Vector 37 : NCO1
 13597  000052  153B               	dw	_Default_ISR shr (0+2)
 13598                           
 13599                           ; Vector 38 : CWG1
 13600  000054  153B               	dw	_Default_ISR shr (0+2)
 13601                           
 13602                           ; Vector 39 : CLC1
 13603  000056  153B               	dw	_Default_ISR shr (0+2)
 13604                           
 13605                           ; Vector 40 : INT1
 13606  000058  153B               	dw	_Default_ISR shr (0+2)
 13607                           
 13608                           ; Vector 41 : CMP2
 13609  00005A  153B               	dw	_Default_ISR shr (0+2)
 13610                           
 13611                           ; Vector 42 : DMA2SCNT
 13612  00005C  153B               	dw	_Default_ISR shr (0+2)
 13613                           
 13614                           ; Vector 43 : DMA2DCNT
 13615  00005E  153B               	dw	_Default_ISR shr (0+2)
 13616                           
 13617                           ; Vector 44 : DMA2OR
 13618  000060  153B               	dw	_Default_ISR shr (0+2)
 13619                           
 13620                           ; Vector 45 : DMA2A
 13621  000062  153B               	dw	_Default_ISR shr (0+2)
 13622                           
 13623                           ; Vector 46 : I2C2RX
 13624  000064  153B               	dw	_Default_ISR shr (0+2)
 13625                           
 13626                           ; Vector 47 : I2C2TX
 13627  000066  153B               	dw	_Default_ISR shr (0+2)
 13628                           
 13629                           ; Vector 48 : I2C2
 13630  000068  153B               	dw	_Default_ISR shr (0+2)
 13631                           
 13632                           ; Vector 49 : I2C2E
 13633  00006A  153B               	dw	_Default_ISR shr (0+2)
 13634                           
 13635                           ; Vector 50 : U2RX
 13636  00006C  1484               	dw	_UART2_rx_vect_isr shr (0+2)
 13637                           
 13638                           ; Vector 51 : U2TX
 13639  00006E  147B               	dw	_UART2_tx_vect_isr shr (0+2)
 13640                           
 13641                           ; Vector 52 : U2E
 13642  000070  153B               	dw	_Default_ISR shr (0+2)
 13643                           
 13644                           ; Vector 53 : U2
 13645  000072  153B               	dw	_Default_ISR shr (0+2)
 13646                           
 13647                           ; Vector 54 : TMR3
 13648  000074  153B               	dw	_Default_ISR shr (0+2)
 13649                           
 13650                           ; Vector 55 : TMR3G
 13651  000076  153B               	dw	_Default_ISR shr (0+2)
 13652                           
 13653                           ; Vector 56 : TMR4
 13654  000078  153B               	dw	_Default_ISR shr (0+2)
 13655                           
 13656                           ; Vector 57 : CCP2
 13657  00007A  153B               	dw	_Default_ISR shr (0+2)
 13658                           
 13659                           ; Vector 58 : Undefined
 13660  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 13661                           
 13662                           ; Vector 59 : CWG2
 13663  00007E  153B               	dw	_Default_ISR shr (0+2)
 13664                           
 13665                           ; Vector 60 : CLC2
 13666  000080  153B               	dw	_Default_ISR shr (0+2)
 13667                           
 13668                           ; Vector 61 : INT2
 13669  000082  153B               	dw	_Default_ISR shr (0+2)
 13670                           
 13671                           ; Vector 62 : Undefined
 13672  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 13673                           
 13674                           ; Vector 63 : Undefined
 13675  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 13676                           
 13677                           ; Vector 64 : Undefined
 13678  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 13679                           
 13680                           ; Vector 65 : Undefined
 13681  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 13682                           
 13683                           ; Vector 66 : Undefined
 13684  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 13685                           
 13686                           ; Vector 67 : Undefined
 13687  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 13688                           
 13689                           ; Vector 68 : Undefined
 13690  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 13691                           
 13692                           ; Vector 69 : Undefined
 13693  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 13694                           
 13695                           ; Vector 70 : TMR5
 13696  000094  13F0               	dw	_TMR5_ISR shr (0+2)
 13697                           
 13698                           ; Vector 71 : TMR5G
 13699  000096  153B               	dw	_Default_ISR shr (0+2)
 13700                           
 13701                           ; Vector 72 : TMR6
 13702  000098  1444               	dw	_TMR6_ISR shr (0+2)
 13703                           
 13704                           ; Vector 73 : CCP3
 13705  00009A  153B               	dw	_Default_ISR shr (0+2)
 13706                           
 13707                           ; Vector 74 : CWG3
 13708  00009C  153B               	dw	_Default_ISR shr (0+2)
 13709                           
 13710                           ; Vector 75 : CLC3
 13711  00009E  153B               	dw	_Default_ISR shr (0+2)
 13712                           
 13713                           ; Vector 76 : Undefined
 13714  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 13715                           
 13716                           ; Vector 77 : Undefined
 13717  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 13718                           
 13719                           ; Vector 78 : Undefined
 13720  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 13721                           
 13722                           ; Vector 79 : Undefined
 13723  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 13724                           
 13725                           ; Vector 80 : CCP4
 13726  0000A8  153B               	dw	_Default_ISR shr (0+2)
 13727                           
 13728                           ; Vector 81 : CLC4
 13729  0000AA  153B               	dw	_Default_ISR shr (0+2)
 13730  0000AC                     ivt0x8_undefint:
 13731                           	opt callstack 0
 13732  0000AC  00FF               	reset	
 13733                           
 13734                           	psect	text99
 13735  000000                     __ptext99:
 13736                           	opt callstack 0
 13737                           
 13738                           	psect	rparam
 13739  0000                     tosu	equ	0x3FFF
 13740                           tosh	equ	0x3FFE
 13741                           tosl	equ	0x3FFD
 13742                           stkptr	equ	0x3FFC
 13743                           pclatu	equ	0x3FFB
 13744                           pclath	equ	0x3FFA
 13745                           pcl	equ	0x3FF9
 13746                           tblptru	equ	0x3FF8
 13747                           tblptrh	equ	0x3FF7
 13748                           tblptrl	equ	0x3FF6
 13749                           tablat	equ	0x3FF5
 13750                           prodh	equ	0x3FF4
 13751                           prodl	equ	0x3FF3
 13752                           indf0	equ	0x3FEF
 13753                           postinc0	equ	0x3FEE
 13754                           postdec0	equ	0x3FED
 13755                           preinc0	equ	0x3FEC
 13756                           plusw0	equ	0x3FEB
 13757                           fsr0h	equ	0x3FEA
 13758                           fsr0l	equ	0x3FE9
 13759                           wreg	equ	0x3FE8
 13760                           indf1	equ	0x3FE7
 13761                           postinc1	equ	0x3FE6
 13762                           postdec1	equ	0x3FE5
 13763                           preinc1	equ	0x3FE4
 13764                           plusw1	equ	0x3FE3
 13765                           fsr1h	equ	0x3FE2
 13766                           fsr1l	equ	0x3FE1
 13767                           bsr	equ	0x3FE0
 13768                           indf2	equ	0x3FDF
 13769                           postinc2	equ	0x3FDE
 13770                           postdec2	equ	0x3FDD
 13771                           preinc2	equ	0x3FDC
 13772                           plusw2	equ	0x3FDB
 13773                           fsr2h	equ	0x3FDA
 13774                           fsr2l	equ	0x3FD9
 13775                           status	equ	0x3FD8


Data Sizes:
    Strings     78
    Constant    0
    Data        68
    BSS         209
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     85      90
    BANK0           160     62      78
    BANK1           256      0     224
    BANK2           256    128     160
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[32]), 
		 -> STR_16(CODE[4]), STR_14(CODE[4]), STR_12(CODE[4]), STR_10(CODE[4]), 
		 -> STR_8(CODE[4]), STR_6(CODE[4]), STR_4(CODE[5]), main@buffer(BANK0[24]), 
		 -> work_sw@buffer(BANK2[128]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 128
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK2[32]), 
		 -> STR_16(CODE[4]), STR_14(CODE[4]), STR_12(CODE[4]), STR_10(CODE[4]), 
		 -> STR_8(CODE[4]), STR_6(CODE[4]), STR_4(CODE[5]), main@buffer(BANK0[24]), 
		 -> work_sw@buffer(BANK2[128]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_15(CODE[3]), STR_13(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), 
		 -> STR_7(CODE[3]), STR_5(CODE[3]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_3(CODE[12]), STR_2(CODE[17]), STR_1(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    S3191_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_15(CODE[3]), STR_13(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), 
		 -> STR_7(CODE[3]), STR_5(CODE[3]), STR_3(CODE[12]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 17
		 -> STR_15(CODE[3]), STR_13(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), 
		 -> STR_7(CODE[3]), STR_5(CODE[3]), STR_3(CODE[12]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), STR_16(CODE[4]), STR_14(CODE[4]), 
		 -> STR_12(CODE[4]), STR_10(CODE[4]), STR_8(CODE[4]), STR_6(CODE[4]), 
		 -> STR_4(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), STR_16(CODE[4]), STR_14(CODE[4]), 
		 -> STR_12(CODE[4]), STR_10(CODE[4]), STR_8(CODE[4]), STR_6(CODE[4]), 
		 -> STR_4(CODE[5]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), STR_16(CODE[4]), 
		 -> STR_14(CODE[4]), STR_12(CODE[4]), STR_10(CODE[4]), STR_8(CODE[4]), 
		 -> STR_6(CODE[4]), STR_4(CODE[5]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    eaDogM_WriteStringAtPos@strPtr	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    eaDogM_WriteString@strPtr	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    once@once_flag	PTR _Bool  size(2) Largest target is 41
		 -> IO(BANK1[41]), 

    sounds	PTR struct OUT_data1 size(2) Largest target is 41
		 -> IO(BANK1[41]), 

    switches	PTR struct IN_data size(2) Largest target is 41
		 -> IO(BANK1[41]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    UART2_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    UART2_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultErrorHandler(), 

    UART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultOverrunErrorHandler(), 

    UART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultFramingErrorHandler(), 

    UART2_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultErrorHandler(), Absolute function(), 

    UART2_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultOverrunErrorHandler(), Absolute function(), 

    UART2_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultFramingErrorHandler(), Absolute function(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _eaDogM_WriteStringAtPos->_eaDogM_WriteString
    _eaDogM_WriteString->_strlen
    _eaDogM_WriteString->_wdtdelay
    _rand->___omul
    _led_lightshow->___awdiv
    _init_display->_send_lcd_cmd
    _init_display->_send_lcd_cmd_long
    _send_lcd_cmd_long->_wdtdelay
    _eaDogM_WriteCommand->_send_lcd_cmd
    _send_lcd_cmd->_wdtdelay
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART2_Initialize->_UART2_SetErrorHandler
    _UART2_Initialize->_UART2_SetFramingErrorHandler
    _UART2_Initialize->_UART2_SetOverrunErrorHandler
    _UART2_Initialize->_UART2_SetRxInterruptHandler
    _UART2_Initialize->_UART2_SetTxInterruptHandler
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _WaitMs->_StartTimer
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART2_Write
    _abs->___aomod
    _calc_pot->___fltol
    _lp_filter->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___fldiv->___flsub
    ___fltol->_lp_filter

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    _TMR6_ISR->_TMR6_DefaultInterruptHandler

Critical Paths under _TMR5_ISR in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    _TMR5_CallBack->_TMR5_DefaultInterruptHandler

Critical Paths under _main in BANK0

    _main->_Digital232_RW
    _work_sw->_sprintf
    _sprintf->_vfprintf
    _Digital232_init->_printf
    _Digital232_RW->_calc_pot
    _printf->_vfprintf
    _calc_pot->___fltol
    ___fltol->_lp_filter

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_work_sw

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0   99848
                                             34 BANK0     28    28      0
                      _Digital232_RW
                    _Digital232_init
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                            ___awdiv
                            ___fldiv
                           ___xxtofl
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                      _led_lightshow
                               _once
                               _rand
                            _sprintf
                              _srand
                            _work_sw
 ---------------------------------------------------------------------------------
 (1) _work_sw                                            128   128      0   18545
                                              0 BANK2    128   128      0
                         _StartTimer
                          _TimerDone
            _eaDogM_WriteStringAtPos
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16     9      7   14221
                                              4 BANK0     16     9      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     1      3    2786
                                             13 COMRAM     4     1      3
                 _eaDogM_WriteString
                       _send_lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   4     2      2    1419
                                              9 COMRAM     4     2      2
                  _SPI1_Exchange8bit
                             _strlen
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (1) _srand                                                6     4      2     211
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _rand                                                10     8      2     456
                                             29 COMRAM    10     8      2
                             ___omul
 ---------------------------------------------------------------------------------
 (2) ___omul                                              24     8     16     456
                                              5 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (1) _once                                                 2     0      2     332
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _led_lightshow                                        5     3      2    2403
                                             13 COMRAM     5     3      2
                         _StartTimer
                          _TimerDone
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     805
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    2140
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     1      0     734
                                              9 COMRAM     1     1      0
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     1      0     765
                                             10 COMRAM     1     1      0
                       _send_lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd                                         1     1      0     734
                                              9 COMRAM     1     1      0
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (4) _wdtdelay                                             4     0      4     672
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _SPI1_Exchange8bit                                    1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1486
                    _ADCC_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0     605
              _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetOverrunErrorHandler                         3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetFramingErrorHandler                         3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetErrorHandler                                3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     605
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     121
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     121
                                              8 COMRAM     2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      34
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Digital232_init                                      0     0      0   17220
               _ADCC_StartConversion
                         _StartTimer
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                             _printf
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2    1834
                                             10 COMRAM     2     0      2
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _Digital232_RW                                        4     4      0   34104
                                             30 BANK0      4     4      0
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
                 _PWM8_LoadDutyValue
                         _StartTimer
                          _TimerDone
                         _UART2_Read
                        _UART2_Write
                  _UART2_is_rx_ready
                           _calc_pot
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     3      3   13996
                                              4 BANK0      6     3      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             5     1      4   13369
                                             84 COMRAM     1     1      0
                                              0 BANK0      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           37    33      4   12617
                                             70 COMRAM    14    10      4
                               _dtoa
                              _fputc
                               _stoa
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2922
                                             16 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    7129
                                             34 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4863
                                             23 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     400
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2170
                                             16 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1670
                                              7 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      93
                                              6 COMRAM     1     1      0
                        _UART2_Write
 ---------------------------------------------------------------------------------
 (8) _UART2_Write                                          1     1      0      62
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _calc_pot                                             4     2      2   18030
                                             26 BANK0      4     2      2
                            ___flmul
                            ___fltol
                           ___xxtofl
                          _lp_filter
 ---------------------------------------------------------------------------------
 (3) _lp_filter                                           22    14      8   13376
                                             79 COMRAM     2     2      0
                                              0 BANK0     20    12      8
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    3827
                                             46 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    3442
                                              5 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3236
                                             21 COMRAM    25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    2183
                                             54 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     746
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     517
                                             81 COMRAM     4     4      0
                                             20 BANK0      6     2      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                          _lp_filter (ARG)
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      37
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            3     3      0      31
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _StartTimer                                           5     3      2    1322
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   4     2      2     332
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             4     2      2       0
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART2_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART2_DefaultErrorHandler *
   _UART2_DefaultFramingErrorHandler *
   _UART2_DefaultOverrunErrorHandler *
                _UART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART2_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART2_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART2_DefaultErrorHandler                           0     0      0       0
                _UART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART2_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TMR6_ISR                                            0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _TMR6_DefaultInterruptHandler                        3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TMR5_ISR                                            0     0      0     229
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR5_WriteTimer                                     2     0      2     229
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR5_DefaultInterruptHandler                        1     1      0       0
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Digital232_RW
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
     _PWM8_LoadDutyValue
     _StartTimer
     _TimerDone
     _UART2_Read
     _UART2_Write
     _UART2_is_rx_ready
     _calc_pot
       ___flmul
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _lp_filter (ARG)
           ___fladd
           ___fldiv
             ___fladd (ARG)
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
                 ___fladd (ARG)
                 ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl (ARG)
       ___xxtofl
       _lp_filter
         ___fladd
         ___fldiv
           ___fladd (ARG)
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
               ___fladd (ARG)
               ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___flsub
           ___fladd
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
         ___xxtofl (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART2_Write
               _fputs
                 _fputc
                   _putch
                     _UART2_Write
               _strlen
           _fputc
             _putch
               _UART2_Write
           _stoa
             _fputc
               _putch
                 _UART2_Write
             _strlen
   _Digital232_init
     _ADCC_StartConversion
     _StartTimer
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART2_Write
               _fputs
                 _fputc
                   _putch
                     _UART2_Write
               _strlen
           _fputc
             _putch
               _UART2_Write
           _stoa
             _fputc
               _putch
                 _UART2_Write
             _strlen
   _SYSTEM_Initialize
     _ADCC_Initialize
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   ___awdiv
   ___fldiv
     ___fladd (ARG)
     ___flmul (ARG)
       ___fladd (ARG)
       ___xxtofl (ARG)
     ___flsub (ARG)
       ___fladd
       ___flmul (ARG)
         ___fladd (ARG)
         ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _eaDogM_WriteCommand
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _SPI1_Exchange8bit
       _strlen
       _wdtdelay
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
   _init_display
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _led_lightshow
     _StartTimer
     _TimerDone
     ___awdiv
   _once
   _rand
     ___omul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _UART2_Write
             _fputs
               _fputc
                 _putch
                   _UART2_Write
             _strlen
         _fputc
           _putch
             _UART2_Write
         _stoa
           _fputc
             _putch
               _UART2_Write
           _strlen
   _srand
   _work_sw
     _StartTimer
     _TimerDone
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _SPI1_Exchange8bit
         _strlen
         _wdtdelay
       _send_lcd_cmd
         _SPI1_Exchange8bit
         _wdtdelay
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART2_Write
               _fputs
                 _fputc
                   _putch
                     _UART2_Write
               _strlen
           _fputc
             _putch
               _UART2_Write
           _stoa
             _fputc
               _putch
                 _UART2_Write
             _strlen

 _Default_ISR (ROOT)

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *
     Absolute function(Fake) *
     _UART2_DefaultErrorHandler *
       _UART2_RxDataHandler
     _UART2_DefaultFramingErrorHandler *
     _UART2_DefaultOverrunErrorHandler *
     _UART2_RxDataHandler *

 _TMR6_ISR (ROOT)
   Absolute function(Fake) *
   _TMR6_DefaultInterruptHandler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     80      A0       9       62.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      E0       7       87.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3E      4E       5       48.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     55      5A       1       94.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     228      58        0.0%
DATA                 0      0     228       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Sep 12 16:23:57 2019

                           _SPI1_Exchange8bit 5336                                  ___fldiv@aexp 004F  
                                ___fldiv@bexp 004E              __end_of_TMR5_SetInterruptHandler 548A  
                   __end_of_UART2_is_rx_ready 54DE                                  ___fldiv@sign 0047  
                          ?_SPI1_Exchange8bit 0001                                   __CFG_CP$OFF 000000  
                                          l68 5314                                            _IO 01A9  
                                ___awdiv@sign 000B                        __end_of_FVR_Initialize 54D8  
                           ??_TMR5_WriteTimer 0006                                   __CFG_LVP$ON 000000  
                               work_sw@buffer 0200                                           l494 4DC8  
                                         _GIE 01FE97                                           l989 5344  
                                         _abs 4E30                           ??_SPI1_Exchange8bit 0006  
                                         _pad 43F2                       __size_of_PMD_Initialize 0022  
               eaDogM_WriteStringAtPos@strPtr 000F                               _TMR2_Initialize 52E2  
                                         prod 003FF3                                           tosl 003FFD  
                                         wreg 003FE8                                  ___flmul@aexp 0023  
                                ___flmul@bexp 0024                               send_lcd_cmd@cmd 000A  
                          _UART1_Transmit_ISR 5028                                 calc_pot@value 007A  
                                ___flmul@sign 0022                                  ___flmul@temp 002D  
                                ___flmul@prod 0029                                 __CFG_BBEN$OFF 000000  
                                __CFG_ZCD$OFF 000000                                  ___fltol@exp1 0079  
                                        ?_abs 0018                                          l2014 347A  
                                        l1206 2BCC                                          l2025 34E8  
                                        l2105 4E60                                          l2026 34E4  
                                        l1242 50CE                                          l1082 226E  
                                        l1171 372A                                          l2044 249A  
                                        l2061 2760                                          l2053 26CA  
                                        l2054 26C6                                          l1166 365C  
                                        l1078 21E8                                          l1087 22DC  
                                        l1265 4EBC                                          l1089 2322  
                                        l1371 30D8                                          l2092 3C28  
                                        l2085 3BA2                                          l1358 442C  
                                        l1369 30CC                                          l1398 3A5A  
                        _ADCC_StartConversion 549E                                          l1960 28E0  
                                        l6104 456A                                          l6114 4C0C  
                                        l7004 42E0                                          l6212 3E60  
                                        l6124 4DFC                                          l6116 4C10  
                                        l6140 4436                                          l7022 4320  
                                        l7014 42F8                                          l6134 4412  
                                        ?_pad 0018                                          l1975 29D4  
                                        l1959 2902                                          l7016 4304  
                                        l7008 42F0                                          l7040 3BDE  
                                        l7032 3BBA                                          l1984 2A3C  
                                        l6232 3F12                                          l6224 3ED6  
                                        l6216 3E7A                                          l6208 3E3C  
                                        l6128 4E18                                          l6144 4452  
                                        l6320 3A94                                          l1985 2A38  
                                        l7050 3C4E                                          l7042 3BEA  
                                        l6170 3D0C                                          l6218 3E8E  
                                        l6138 4424                                          l6242 30B0  
                                        l6330 3AFC                                          l6306 3A0E  
                                        l7052 3C5A                                          l7044 3C10  
                                        l6164 3CE4                                          l6228 3EEC  
                                        l6092 4DEA                                          l6148 4486  
                                        l6260 3106                                          l6324 3AB2  
                                        l6316 3A78                                          l7038 3BD8  
                                        l6430 28EE                                          l7310 3F64  
                                        l6094 4DEC                                          l6078 4DB2  
                                        l6270 3242                                          l6334 3B16  
                                        l6432 28F2                                          l6352 27CA  
                                        l6176 3D32                                          l6192 3DB8  
                                        l6256 30F6                                          l6600 39AA  
                                        l7304 50D8                                          l6530 2AC0  
                                        l6418 2890                                          l6178 3D46  
                                        l6290 32A6                                          l6338 3B32  
                                        l7068 3C9E                                          l6620 3322  
                                        l6532 2AC2                                          l6380 2816  
                                        l6356 27CE                                          l6196 3DDE  
                                        l6188 3DA2                                          l7500 3704  
                                        l7340 4928                                          l7324 47F4  
                                        l7254 4D5E                                          l6702 34AE  
                                        l6526 2AB8                                          l6518 2A92  
                                        l6454 2948                                          l6446 2926  
                                        l6294 32C0                                          l6640 3362  
                                        l6624 3326                                          l6456 294C  
                                        l6464 295E                                          l6376 2812  
                                        l7520 374C                                          l7352 494E  
                                        l7600 2B60                                          l7328 4818  
                                        l6730 358A                                          l6722 353C  
                                        l6482 29F8                                          l6474 29C4  
                                        l7514 372E                                          l7354 4956  
                                        l7346 4938                                          l7610 2BB0  
                                        l6652 339A                                          l6644 3366  
                                        l6492 2A0E                                          l6388 2836  
                                        l7452 35BE                                          l7372 498E  
                                        l7364 4976                                          l7620 2BF8  
                                        l7604 2B8C                                          l6726 3560  
                                        l6590 398E                                          l6574 38E4  
                                        l7526 3776                                          l7614 2BD6  
                                        l7710 510C                                          l6736 3598  
                                        l6760 244A                                          l6584 3950  
                                        l7480 3650                                          l7472 3638  
                                        l7456 35EA                                          l7368 4980  
                                        l7632 2C48                                          l6914 517C  
                                        l6738 359A                                          l6690 3478  
                                        l6666 33D0                                          l6658 33B8  
                                        l6834 2690                                          l6762 245A  
                                        l6498 2A18                                          l6594 3998  
                                        l7546 37B2                                          l7490 36A2  
                                        l7626 2C20                                          l6684 3452  
                                        l6676 342A                                          l6828 2672  
                                        l6924 2DC6                                          l7476 3644  
                                        l7468 362C                                          l7644 2C84  
                                        l7804 2274                                          l7820 22EC  
                                        l6870 2780                                          l6854 271E  
                                        l6758 2446                                          l6942 3030  
                                        l7486 3666                                          l7662 2CD0  
                                        l7582 2B16                                          l7574 2AF4  
                                        l6696 3490                                          l6776 2486  
                                        l6928 2DDE                                          l7488 366E  
                                        l7680 2D28                                          l7664 2CDE  
                                        l7648 2C8E                                          l7840 2398  
                                        l6858 273C                                          l6786 24B8  
                                        l6778 248A                                          l7690 2D58  
                                        l7586 2B1C                                          l6980 4BD8  
                                        l7684 2D30                                          l7668 2CE8  
                                        l6972 4ADE                                          l7860 23F4  
                                        l7764 215E                                          l7756 2140  
                                        l6966 4AB6                                          l7696 2D80  
                                        l7856 23DE                                          l6978 4BB4  
                                        l7778 2198                                          l7786 21EE  
                                        l6988 428E                                          l7796 221E  
                                        STR_1 2001                                          STR_2 2012  
                                        STR_3 2023                                          STR_4 202F  
                                        STR_5 204C                                          STR_6 2048  
                                        STR_7 204C                                          STR_8 2038  
                                        STR_9 204C                                          _LATA 003FBA  
                                        _LATB 003FBB                                          _LATC 003FBC  
                                        _LATD 003FBD                                          _LATE 003FBE  
                                        _T2PR 003FAB                                          u6010 45AA  
                                        u6020 4C3A                                          u6200 3E92  
                                        u6121 3D12                                          _T6PR 003F93  
                                        u6027 4C2C                                          u7100 34DE  
                                        u6140 3D4A                                          u6300 3250  
                                        _PMD0 0039C0                                          _PMD1 0039C1  
                                        u6230 3082                                          _PMD2 0039C2  
                                        _PMD3 0039C3                                          u6320 3272  
                                        u6240 3084                                          _PMD4 0039C4  
                                        u6321 3270                                          _PMD5 0039C5  
                                        u6090 4E3E                                          u6330 3280  
                                        _PMD6 0039C6                                          _PMD7 0039C7  
                                        u7140 354A                                          u6340 3284  
                                        u8100 2C30                                          u7150 356E  
                                        u6270 30C2                                          u6430 3AA8  
                                        u7320 272C                                          u7240 24A6  
                                        u6360 3290                                          u6440 3ADC  
                                        u8200 2CF8                                          u8120 2C58  
                                        u8040 2BA4                                          u7330 274A  
                                        u6290 30F0                                          u8210 2D08  
                                        u8050 2BC0                                          u7420 427C  
                                        u6620 290A                                          u6381 39EA  
                                        u7430 42B4                                          u6470 3B46  
                                        u8230 2D40                                          u8150 2C9E  
                                        u6447 3ACE                                          u7280 26C0  
                                        u7360 2DAC                                          u8240 2D50  
                                        u8160 2CAE                                          u8080 2C08  
                                        u6570 28B4                                          u8250 2D68  
                                        u7435 42AA                                          u6580 28C4  
                                        u8260 2D78                                          u7470 430A  
                                        u7550 3C64                                          u6830 2A9E  
                                        u6750 2A1C                                          u6590 28C6  
                                        u6910 3860                                          u8270 2D90  
                                        u7640 54B8                                          u6770 2A32  
                                        u8290 4174                                          u7635 4F46  
                                        u7740 495A                                          u8540 23C8  
                                        u5990 4562                                          u7910 378A  
                                        u8295 4162                                          u7681 47EE  
                                        u7930 379E                                          u7595 4D18  
                                        u7596 4D1A                                          _PLLR 01CEE0  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                                 __CFG_FCMEN$ON 000000  
                         ?_UART1_Transmit_ISR 0001                        led_lightshow@alive_led 00A0  
                                        abs@a 0018                                          _dbuf 0280  
                                        _main 2050                                          _dtoa 304A  
                                        _rand 4078                                          _seed 0196  
                                        _once 50E6                                          _prec 009E  
                                        _nout 018A                                          pad@i 001F  
                       __end_of_Digital232_RW 37E2                                          pad@p 001C  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf1 003FE7                                          indf2 003FDF  
                                        fsr1l 003FE1                                          pad@w 0021  
                                        fsr2l 003FD9                                          _stoa 39E0  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                               _timer5ReloadVal 0192  
                              ?_led_lightshow 000E                     __end_of_SPI1_Exchange8bit 5350  
                             ___fldiv@new_exp 0048                 ??_UART1_SetTxInterruptHandler 0009  
               ??_UART2_SetRxInterruptHandler 0009                                 __CFG_CSWEN$ON 000000  
                           _UART1_rx_vect_isr 51A4                                  ___param_bank 000000  
                                 ?_UART2_Read 0001                            ?_UART1_rx_vect_isr 0001  
                                       ??_abs 001A                                         ??_pad 001E  
                             ?_FVR_Initialize 0001                __size_of_OSCILLATOR_Initialize 001C  
                        ??_UART1_Transmit_ISR 0001                 __end_of_OSCILLATOR_Initialize 531A  
                               ___fltol@sign1 0078                               __end_of___aodiv 3E10  
                                       _ADCAP 003EF5                                         _ADACT 003EFE  
                             __end_of___fladd 2AE6                                         ?_main 0001  
                                       ?_dtoa 0023                                         _ADCLK 003EFF  
                             __end_of___aomod 3F44                                         _ADPCH 003EF1  
                             __end_of___fldiv 35A2                                         ?_rand 001E  
                                       _ADREF 003EFD                               __end_of___awdiv 499C  
                                       ?_once 0006                                         STR_10 203C  
                                       STR_11 204C                                         STR_12 2040  
                                       STR_13 204C                                         STR_14 2044  
                                       STR_15 204C                                         STR_16 2034  
                               __CFG_WDTE$OFF 000000                                         _ADRPT 003EEC  
                             __end_of___flmul 279E                               __end_of___flsub 4B46  
                             __end_of___fltol 433A                                         ?_stoa 0011  
                             ___awdiv@divisor 0008                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                      eaDogM_WriteStringAtPos@c 000E  
                                       _U1P1L 003DEC                                         _U1P3H 003DF1  
                                       _T2CON 003FAC                                         _U1P2L 003DEE  
                                       _U1P3L 003DF0                                         _U2P1L 003DD4  
                                       _U2P2L 003DD6                                         _U2P3L 003DD8  
                    eaDogM_WriteStringAtPos@r 0011                                         _T5CLK 003F9D  
                                       _T2HLT 003FAD                                         _T5CON 003F9A  
                                       _T6CON 003F94                                __CFG_DEBUG$OFF 000000  
                                       _T6HLT 003F95                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         _T2RST 003FAF  
                                       _U1RXB 003DE8                                         _U2UIR 003DE0  
                                       _U1TXB 003DEA                                         _U2RXB 003DD0  
                                       _U2TXB 003DD2                                         i2l344 5054  
                                       _T6TMR 003F92                                         i2l518 5086  
                                       _T6RST 003F97                           ??_UART1_rx_vect_isr 0001  
                                       i2l776 526E                               ___awdiv@counter 000A  
                                       _OSCEN 0039DD                                  vfpfcnvrt@fmt 0049  
                                       _TMR5H 003F99                                         _TMR5L 003F98  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                   _Default_ISR 54EC  
                    eaDogM_WriteString@strPtr 000A                       ??_ADCC_IsConversionDone 0006  
           __size_of_TMR6_SetInterruptHandler 0014                     ?_TMR6_SetInterruptHandler 0006  
                           _UART1_tx_vect_isr 5180                                 __CFG_WRTB$OFF 000000  
                               __CFG_WRTC$OFF 000000                                 __CFG_WRTD$OFF 000000  
                            __end_of_TMR5_ISR 4FF6                              __end_of_TMR6_ISR 5138  
                                       _flags 0056                               _Digital232_init 4186  
                       ?_ADCC_StartConversion 0001                                         _fputc 4552  
                  __size_of_send_lcd_cmd_long 0024                                         _fputs 4DF2  
                          __CFG_MCLRE$EXTMCLR 000000                            ?_UART1_tx_vect_isr 0001  
                                       _srand 4F54                                         pad@fp 0018  
                                       _width 018C                                         _putch 54C6  
                                       dtoa@d 0025                                         dtoa@i 0045  
                                       main@y 009D                                         dtoa@n 003D  
                                       dtoa@p 0037                                         dtoa@s 003B  
                                       dtoa@w 0039                              led_lightshow@seq 0012  
                                       pclath 003FFA                                         tablat 003FF5  
                   ??_eaDogM_WriteStringAtPos 0011                                         plusw1 003FE3  
                                       plusw2 003FDB                                         stoa@i 001D  
                                       stoa@l 0025                                         stoa@p 0023  
                                       stoa@s 0013                                         stoa@w 001F  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 5426  
                 _UART1_SetRxInterruptHandler 5412                               __end_of_sprintf 4CE2  
                             __end_of_work_sw 4914      __end_of_UART1_DefaultFramingErrorHandler 54F2  
   __size_of_UART1_DefaultFramingErrorHandler 0002            ??_UART1_DefaultFramingErrorHandler 0001  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 54F0  
                         ??_UART1_tx_vect_isr 0001                     __end_of_UART1_rx_vect_isr 51C8  
                    __size_of_SPI1_Initialize 0018                ??_TMR6_DefaultInterruptHandler 0001  
                             _TMR5_Initialize 4C4E                ??_UART2_SetOverrunErrorHandler 0009  
                             __initialization 499C                             _UART2_rx_vect_isr 5210  
              eaDogM_WriteString@bytesWritten 000D                                  __end_of_main 241A  
                                __end_of_dtoa 32F6                                  __end_of_rand 4186  
                                __end_of_once 5110                                  __end_of_stoa 3B54  
                  __size_of_UART2_is_rx_ready 0006                                __CFG_SAFEN$OFF 000000  
                 ??_UART1_DefaultErrorHandler 0001                            ?_UART2_rx_vect_isr 0001  
                     __end_of_TMR2_Initialize 52FE                                  ?_UART2_Write 0001  
                                      ??_main 0082                                        ??_dtoa 002D  
                                      ??_rand 0020                                        ??_once 0008  
                              __CFG_PR1WAY$ON 000000                      _TMR5_SetInterruptHandler 5476  
                                      ??_stoa 0015                                 __activetblptr 000003  
        __size_of_UART1_SetTxInterruptHandler 0014                           ??_UART2_rx_vect_isr 0001  
                         eaDogM_WriteString@i 000C                     __end_of_UART1_tx_vect_isr 51A4  
        __size_of_UART2_SetRxInterruptHandler 0014                                __CFG_MVECEN$ON 000000  
                             _TMR6_Initialize 508C                               _PWM8_Initialize 5382  
                 __end_of_UART2_RxDataHandler 5258                              _UART1_Initialize 433A  
                           _UART2_tx_vect_isr 51EC                            _UART2_Transmit_ISR 505A  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        ?_fputc 0008  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 0011                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0006  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 4F1C  
                                      ?_srand 0006                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _ANSELD 003A70  
                                      _ANSELE 003A80                            ?_UART2_tx_vect_isr 0001  
                              TimerDone@timer 0008                                        _RB1I2C 003A5A  
                                      _RB2I2C 003A5B                                        _RD0I2C 003A7A  
                                      _U1CON0 003DF2                                        _U1CON1 003DF3  
                                      _U1CON2 003DF4                                        _RC3I2C 003A6A  
                                      _RD1I2C 003A7B                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _U2CON0 003DDA                                        _U2CON1 003DDB  
                                      _U1BRGL 003DF5                                        _U2CON2 003DDC  
                                      _U2BRGH 003DDE                                        _U2FIFO 003DDF  
                                      _U2BRGL 003DDD                                        _T5GATE 003F9C  
                         __size_of_UART2_Read 0044                                        _T5GCON 003F9B  
                                      _RC3PPS 003A13                                        _RD1PPS 003A19  
                                      _RB6PPS 003A0E                                        _RC5PPS 003A15  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                        _RC6PPS 003A16  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                              __CFG_WDTCCS$SC 000000                                        i2l5524 4E72  
                                      i2l5516 47E2                                        i2l5528 4EA0  
                                      i2l5464 5050                                        i2l4940 51E6  
                                      i2l5484 4744                                        i2l4960 5252  
                                      i2l5496 5082                                        _FVRCON 003EC1  
                               ?_init_display 0001                                        _IVTADH 00389E  
                                      _IVTADL 00389D                                        _IVTADU 00389F  
                __size_of_eaDogM_WriteCommand 000A                                        _OSCFRQ 0039DF  
                            __end_of_calc_pot 4078                           ?_UART2_Transmit_ISR 0001  
                             ??_led_lightshow 0010                         _UART1_SetErrorHandler 544E  
                            __end_of___xxtofl 3CB8                    ??_ADCC_GetConversionResult 0008  
                       SPI1_Exchange8bit@data 0006                           ?_PWM8_LoadDutyValue 0006  
                         ??_UART2_tx_vect_isr 0001                     __end_of_UART2_rx_vect_isr 5234  
                  __size_of_SPI1_Exchange8bit 001A                                __CFG_XINST$OFF 000000  
                            _UART2_Initialize 44A4                                        _WaitMs 50BA  
                                _CCPTMRS1bits 003F5F                     _UART2_OverrunErrorHandler 016F  
                                vfprintf@cfmt 0055                           _uart2RxStatusBuffer 0132  
          __size_of_UART2_DefaultErrorHandler 0006                                        ___omul 47E8  
                                   ??___aodiv 0016                                     ??___fladd 000E  
                                   ??___aomod 0016                                     ??___fldiv 003F  
                                   ??___awdiv 000A                                __CFG_STVREN$ON 000000  
                                   ??___flmul 001E                                     ??___flsub 0037  
                                   ??___fltol 0052                    ?_UART2_DefaultErrorHandler 0001  
                        send_lcd_cmd_long@cmd 000A                                        clear_0 49E0  
                                      clear_1 49EC                                        clear_2 49F8  
                         UART2_Read@readValue 0006                              ___awdiv@quotient 000C  
                        ??_UART2_Transmit_ISR 0001                                        _printf 531A  
                                      pad@buf 001A                            _eaDogM_WriteString 4A82  
                                      _sounds 01A5                                        dtoa@fp 0023  
                                      _strlen 4BFE                            __size_of_TimerDone 0024  
                     __end_of_Digital232_init 426E                          ??_PWM8_LoadDutyValue 0008  
                             _ADCC_Initialize 4B46                                        fputc@c 0008  
                              _PMD_Initialize 529E                                        fputs@c 0015  
                                      fputs@i 0016                                        fputs@s 0011  
                   __end_of_UART2_tx_vect_isr 5210                                  __mediumconst 0000  
                                      tblptrh 003FF7                                        tblptrl 003FF6  
                                      tblptru 003FF8                                        srand@s 0006  
                      ??_ADCC_StartConversion 0006                           ?_eaDogM_WriteString 000A  
                            __end_of_wdtdelay 4EE4                                        stoa@cp 0021  
                                      stoa@fp 0011                              __end_of_vfprintf 4BFE  
                                 lp_filter@bn 0064                                 wdtdelay@delay 0006  
                                  _StartTimer 4FF6      TMR5_SetInterruptHandler@InterruptHandler 0006  
    TMR6_SetInterruptHandler@InterruptHandler 0006   UART2_SetTxInterruptHandler@InterruptHandler 0006  
 UART2_SetRxInterruptHandler@InterruptHandler 0006   UART1_SetTxInterruptHandler@InterruptHandler 0006  
 UART1_SetRxInterruptHandler@InterruptHandler 0006          __end_of_UART1_SetOverrunErrorHandler 543A  
       __size_of_UART1_SetOverrunErrorHandler 0014                  _UART1_SetOverrunErrorHandler 5426  
                   _UART1_DefaultErrorHandler 54DE                                     ??_sprintf 0056  
                                   ??_work_sw 0056                 __size_of_INTERRUPT_Initialize 0048  
                              ??_init_display 000B                  __size_of_UART1_RxDataHandler 0024  
                     __end_of_TMR5_Initialize 4C9A                                  ___xxtofl@arg 0010  
                                ___xxtofl@exp 000F                             _SYSTEM_Initialize 4F8A  
                                ___xxtofl@val 0006                                    __accesstop 0060  
                     __end_of__initialization 4A14                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                    __size_of_UART1_rx_vect_isr 0024  
                                  ___fltol@f1 0074                               _TMR5_WriteTimer 5258  
                        ??_eaDogM_WriteString 000C                                __pcstackCOMRAM 0001  
                       _UART2_SetErrorHandler 53EA                                  __pidataBANK0 54EA  
                                __pidataBANK1 4D6E                           ??_SYSTEM_Initialize 000B  
                                   ?_TMR5_ISR 0001                                     ?_TMR6_ISR 0001  
                              ivt0x8_undefint 00AC                                 __end_of_fputc 4600  
                               __end_of_fputs 4E30                             ??_SPI1_Initialize 0006  
           __end_of_UART2_DefaultErrorHandler 54EA                                 __end_of_srand 4F8A  
                       __end_of_TMR5_CallBack 52E2                                 __end_of_putch 54D0  
                            ?_TMR2_Initialize 0001                       __end_of_PWM8_Initialize 539A  
                     __end_of_TMR6_Initialize 50BA                        __end_of_PMD_Initialize 52C0  
                           lp_filter@lp_speed 006C                    __size_of_UART1_tx_vect_isr 0024  
                   _UART1_FramingErrorHandler 017B                   ADCC_StartConversion@channel 0006  
                    _UART2_RxInterruptHandler 0187                                       ??_fputc 000C  
                   __end_of_SYSTEM_Initialize 4FC0                                       ??_fputs 0015  
                             __CFG_IVT1WAY$ON 000000                                       ??_srand 0008  
                                     ??_putch 0007                                    __pbssBANK0 009E  
                                  __pbssBANK1 0100                                    __pbssBANK2 0280  
               ?_UART1_SetOverrunErrorHandler 0006                        ?_UART1_SetErrorHandler 0006  
                           __end_of_TimerDone 5180                  ?_UART2_SetTxInterruptHandler 0006  
                  __size_of_UART2_rx_vect_isr 0024                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                          __size_of_lp_filter 02B0                              ??_FVR_Initialize 0006  
                                     ?_WaitMs 000B                                       ?___omul 0006  
                                ??_UART2_Read 0006                               __CFG_PPS1WAY$ON 000000  
            __end_of_TMR6_SetInterruptHandler 5476          __end_of_UART2_SetFramingErrorHandler 53EA  
       __size_of_UART2_SetFramingErrorHandler 0014                  _UART2_SetFramingErrorHandler 53D6  
                     __end_of_ADCC_Initialize 4BA2                                 ?_send_lcd_cmd 0001  
                                  ??_TMR5_ISR 0006                                    ??_TMR6_ISR 0004  
                         ___omul@multiplicand 000E                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                                       ?_printf 0064  
                             ?_PMD_Initialize 0001                             _UART1_Receive_ISR 46AC  
                                     ?_strlen 0006                               StartTimer@count 0006  
                                     _U1ERRIE 003DFA                                       _U1ERRIR 003DF9  
                                     _U2ERRIE 003DE2                                       _U2ERRIR 003DE1  
                                   ?_calc_pot 007A                               StartTimer@timer 000A  
                            ?_Digital232_init 0001                           __CFG_PWRTS$PWRT_OFF 000000  
                                ?_Default_ISR 0001                            ?_UART1_Receive_ISR 0001  
                  __size_of_UART2_tx_vect_isr 0024                          __size_of_UART2_Write 0042  
                                     _U1RXPPS 003AE5                                     ?___xxtofl 0006  
                                     _U2RXPPS 003AE8                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                                       _IVTLOCK 003FD4  
                          __size_of_vfpfcnvrt 01FE                                       _SPI1CLK 003D1C  
                                     _SPI1RXB 003D10                                       _SPI1TXB 003D11  
                                     _OSCTUNE 0039DE                                       _PWM8DCH 003F61  
                                     _PWM8DCL 003F60                                       _PWM8CON 003F62  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                __size_of_ADCC_IsConversionDone 000E  
                                 ?_StartTimer 0006                 __end_of_ADCC_IsConversionDone 54BC  
                         ??_UART1_Receive_ISR 0001                       __end_of_TMR5_WriteTimer 527C  
                          __end_of_UART2_Read 4D6E                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0006                                       __Hparam 0000  
                      ?_UART2_SetErrorHandler 0006                                       __Lparam 0000  
                    __end_of_UART1_Initialize 43F2                 ??_UART2_SetTxInterruptHandler 0009  
                  ??_TMR5_SetInterruptHandler 0009                               __size_of_WaitMs 002C  
                              ??_send_lcd_cmd 000A                                       ___aodiv 3CB8  
                                     ___fladd 279E                                       ___aomod 3E10  
                                     ___fldiv 32F6                                       ___awdiv 4914  
                             __size_of___omul 009A                                       ___flmul 241A  
                                     ___flsub 4AE8                                       ___fltol 426E  
                                   ?_wdtdelay 0006                     __end_of_UART1_Receive_ISR 474A  
                                   ?_vfprintf 0060                                  __psmallconst 2000  
               ?_UART2_SetFramingErrorHandler 0006                          __end_of_init_display 4A82  
                                     __pcinit 499C                           _eaDogM_WriteCommand 54BC  
                            ?_PWM8_Initialize 0001                              ?_TMR6_Initialize 0001  
                                     __ramtop 2000                   __size_of_UART1_Transmit_ISR 0032  
                                     __ptext0 2050                                       __ptext1 4882  
                                     __ptext2 4C9A                                       __ptext3 527C  
                                     __ptext4 4A82                                       __ptext5 4F54  
                                     __ptext6 4078                                       __ptext7 47E8  
                                     __ptext8 50E6                                       __ptext9 2AE6  
                           _UART2_Receive_ISR 474A                               __size_of_printf 001C  
                             __CFG_WRTAPP$OFF 000000                               __size_of_strlen 0050  
                                  ??_calc_pot 007C      __end_of_UART2_DefaultOverrunErrorHandler 54F4  
   __size_of_UART2_DefaultOverrunErrorHandler 0002            ??_UART2_DefaultOverrunErrorHandler 0001  
           ?_UART2_DefaultOverrunErrorHandler 0001              _UART2_DefaultOverrunErrorHandler 54F2  
                       _OSCILLATOR_Initialize 52FE                                  __size_of_abs 003E  
                      __size_of_Digital232_RW 0240                                  __size_of_pad 00B2  
                          ?_UART2_Receive_ISR 0001                                    ??___xxtofl 000A  
                           __end_of_lp_filter 304A                      ??_PIN_MANAGER_Initialize 0006  
                             __CFG_WRTSAF$OFF 000000                                     _T5CONbits 003F9A  
                    __end_of_UART2_Initialize 4552                                       _otto_b1 01D2  
                  __size_of_SYSTEM_Initialize 0036                                       _sprintf 4C9A  
                          led_lightshow@cylon 00AD                          end_of_initialization 4A14  
                                     _work_sw 4882                           ??_UART2_Receive_ISR 0001  
                          led_lightshow@speed 000E                          ?_eaDogM_WriteCommand 0001  
                              ___omul@product 0016                                       fputc@fp 000A  
         __end_of_UART1_SetTxInterruptHandler 5412                   _UART1_SetTxInterruptHandler 53FE  
                                     fputs@fp 0013           __end_of_UART2_SetRxInterruptHandler 53C2  
                 _UART2_SetRxInterruptHandler 53AE                ??_UART1_SetOverrunErrorHandler 0009  
                           __end_of_vfpfcnvrt 39E0                                     _SPI1TCNTL 003D12  
                                     postdec1 003FE5                                       postdec2 003FDD  
                                     postinc0 003FEE                                       postinc1 003FE6  
                                     postinc2 003FDE                                    ??_wdtdelay 000A  
                            ?_ADCC_Initialize 0001                   ??_UART2_DefaultErrorHandler 0001  
                         __size_of_StartTimer 0032                                    ??_vfprintf 0055  
                                lp_filter@new 0060                     __end_of_UART2_Receive_ISR 47E8  
                              wdtdelay@dcount 0162                           _UART1_RxDataHandler 51C8  
                       __CFG_WDTCPS$WDTCPS_31 000000                                       strlen@a 0008  
                                     strlen@s 0006                      _TMR6_SetInterruptHandler 5462  
                       _TMR5_InterruptHandler 0166                                   ___fladd@grs 0015  
        __size_of_UART2_SetTxInterruptHandler 0014                         WaitMs@numMilliseconds 000B  
                               ___xxtofl@sign 000E                      ?_eaDogM_WriteStringAtPos 000E  
                                 ___fldiv@grs 004A                                   ___fldiv@rem 0043  
                            __CFG_FEXTOSC$ECH 000000                          ?_UART1_RxDataHandler 0001  
                            ?_TMR5_WriteTimer 0004                         ??_eaDogM_WriteCommand 000B  
                     TMR5_WriteTimer@timerVal 0004                  __size_of_UART2_RxDataHandler 0024  
                                 ___flmul@grs 0025                                    main@buffer 0084  
                             _SPI1_Initialize 536A                                 _Digital232_RW 35A2  
                       __end_of_led_lightshow 2D9A                                led_lightshow@j 018E  
                              __end_of_WaitMs 50E6                  __end_of_INTERRUPT_Initialize 4D2A  
                  __size_of_UART1_Receive_ISR 009E                                __end_of___omul 4882  
                                 vfpfcnvrt@ap 004A                                   vfpfcnvrt@cp 0053  
                                 vfpfcnvrt@fp 0047                                   vfpfcnvrt@ll 004B  
                           __size_of_TMR5_ISR 0036                             __size_of_TMR6_ISR 0028  
                 __size_of_UART2_Transmit_ISR 0032                        ?_OSCILLATOR_Initialize 0001  
           __size_of_ADCC_GetConversionResult 0014                     ?_ADCC_GetConversionResult 0006  
                              __end_of_printf 5336                   __size_of_PWM8_LoadDutyValue 0038  
                              __end_of_strlen 4C4E                ??_UART2_SetFramingErrorHandler 0009  
                         start_initialization 499C          __end_of_TMR5_DefaultInterruptHandler 536A  
       __size_of_TMR5_DefaultInterruptHandler 001A                  _TMR5_DefaultInterruptHandler 5350  
             __size_of_PIN_MANAGER_Initialize 00AC                                   __end_of_abs 4E6E  
                                 __end_of_pad 44A4                          __size_of_Default_ISR 0002  
                     ??_UART1_SetErrorHandler 0009                     _UART2_DefaultErrorHandler 54E4  
                        __end_of_send_lcd_cmd 4F1C                         ??_UART1_RxDataHandler 0001  
               __size_of_ADCC_StartConversion 0010                                   putch@txData 0007  
                                  ivt0x8_base 0008                                 _uart1RxBuffer 0152  
                           ___omul@multiplier 0006                                 _uart1TxBuffer 015A  
                               _uart2RxBuffer 013A                                ?_Digital232_RW 0001  
                               _uart2TxBuffer 0142                              __CFG_LPBOREN$OFF 000000  
                                    ??_WaitMs 000D                         __size_of_init_display 0068  
                                 vfprintf@fmt 0062                   __size_of_eaDogM_WriteString 0066  
                            ??_PMD_Initialize 0006                                     _TimerDone 515C  
                                    ??___omul 0016                                   __pdataBANK0 00AC  
                                 __pdataBANK1 019E                    __size_of_UART2_Receive_ISR 009E  
                           UART2_Write@txData 0006                                      ??_printf 0056  
                                    ??_strlen 0008               __end_of_eaDogM_WriteStringAtPos 529E  
                                   ___fladd@a 000A                                     ___fladd@b 0006  
                                   ___fldiv@a 003B                                     ___fldiv@b 0037  
                                   ___flmul@a 001A                                     ___flmul@b 0016  
                                 __pbssCOMRAM 0056                                     ___flsub@a 0033  
                                   ___flsub@b 002F                            _UART1_ErrorHandler 0175  
                   _UART2_FramingErrorHandler 0172                                 __pcstackBANK0 0060  
                               __pcstackBANK2 0200                              ___aodiv@dividend 0006  
                           __size_of_calc_pot 0134                      __size_of_TMR2_Initialize 001C  
                                ??_StartTimer 0008                             __size_of___xxtofl 0164  
                     __end_of_SPI1_Initialize 5382                      _UART1_RxInterruptHandler 0181  
                    _UART2_TxInterruptHandler 0184                 ?_TMR5_DefaultInterruptHandler 0001  
                              Digital232_RW@i 0080                                Digital232_RW@j 0081  
                              Digital232_RW@x 00A2                                  _init_display 4A1A  
                      __size_of_TMR5_CallBack 0022                   PWM8_LoadDutyValue@dutyValue 0006  
                     ??_UART2_SetErrorHandler 0009                  ?_UART1_SetRxInterruptHandler 0006  
                       _TMR6_InterruptHandler 0169                                _lp_filter$3690 0068  
                      _PIN_MANAGER_Initialize 4600                                     _dtoa$2719 0035  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 544E  
       __size_of_UART1_SetFramingErrorHandler 0014                  _UART1_SetFramingErrorHandler 543A  
                                  ?_TimerDone 0001                                      ?___aodiv 0006  
                                    ?___fladd 0006                                      ?___aomod 0006  
                                    ?___fldiv 0037                                      ?___awdiv 0006  
                            ___aodiv@quotient 0018                                      ?___flmul 0016  
                                    ?___flsub 002F                                      ?___fltol 0074  
                          ??_UART1_Initialize 0009                            __end_of_StartTimer 5028  
                            _uart1RxLastError 0195                                 ??_UART2_Write 0006  
                           __size_of_wdtdelay 003A                             __size_of_vfprintf 005C  
                      __CFG_BBSIZE$BBSIZE_512 000000                                   __smallconst 2000  
    __end_of_UART1_DefaultOverrunErrorHandler 54F0     __size_of_UART1_DefaultOverrunErrorHandler 0002  
          ??_UART1_DefaultOverrunErrorHandler 0001             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler 54EE                             ?_UART2_Initialize 0001  
                                    ?_sprintf 0064                                __size_of_fputc 00AE  
                                    _T2CLKCON 003FAE                                __size_of_fputs 003E  
                                   _lp_filter 2D9A                                   _U1ERRIRbits 003DF9  
                                    ?_work_sw 0001                                __size_of_srand 0036  
                          ??_UART2_Initialize 0009                                __size_of_putch 000A  
                    __size_of_Digital232_init 00E8                          _INTERRUPT_Initialize 4CE2  
                                    _T6CLKCON 003F96                               ??_Digital232_RW 007E  
                            _uart2RxLastError 0194                         _ADCC_IsConversionDone 54AE  
                                 _U2ERRIRbits 003DE1         UART2_SetErrorHandler@interruptHandler 0006  
       UART1_SetErrorHandler@interruptHandler 0006                                      _LATCbits 003FBC  
                                    _LATEbits 003FBE                                      _IPR3bits 003983  
                                    _PIE3bits 003993                                     _tickCount 0120  
                                    _IPR6bits 003986                                      _IPR8bits 003988  
                                    _PIE6bits 003996                                      _IPR9bits 003989  
                                    _PIE8bits 003998                           __CFG_BORV$VBOR_2P45 000000  
                                    _PIE9bits 003999                 ??_UART1_SetRxInterruptHandler 0009  
                                    i2u503_48 52CE                                      _PIR2bits 0039A2  
                                    _SPI1BAUD 003D19                                      _PIR4bits 0039A4  
                                    _SPI1CON0 003D14                                      _SPI1CON1 003D15  
                                    _SPI1CON2 003D16                                      i2u560_48 51B4  
                                    i2u562_48 51FC                                      i2u490_48 472E  
                                    i2u469_40 5358                                      i2u564_48 5220  
                                    i2u469_46 535A                                      i2u567_40 4FE6  
                                    i2u566_48 5124                                      i2u494_48 4774  
                                    i2u486_48 46D6                                      i2u558_48 5190  
                                    i2u494_49 4788                                      i2u486_49 46EA  
                                    _PIR8bits 0039A8                                      i2u496_48 47A2  
                                    i2u488_48 4704                                      i2u496_49 47B6  
                                    i2u488_49 4718                                      _PIR9bits 0039A9  
                                    i2u498_48 47CC                    ??_TMR6_SetInterruptHandler 0009  
                    __size_of_TMR5_Initialize 004C                    __end_of_UART1_Transmit_ISR 505A  
                                    _TMR5_ISR 4FC0                                      _TMR6_ISR 5110  
               ?_UART1_SetFramingErrorHandler 0006                                     _vfpfcnvrt 37E2  
                               _TMR5_CallBack 52C0                           _UART2_RxDataHandler 5234  
                                  _ADCON0bits 003EF8                       __size_of_FVR_Initialize 0008  
                       __size_of_send_lcd_cmd 0038             __size_of_TMR5_SetInterruptHandler 0014  
                   ?_TMR5_SetInterruptHandler 0006                            _UART2_ErrorHandler 016C  
                         __end_of_UART2_Write 4DF2                      __size_of_PWM8_Initialize 0018  
                    __size_of_TMR6_Initialize 002E                              ?_SPI1_Initialize 0001  
                                 _INTCON0bits 003FD2                                     copy_data0 49B0  
                                  ?_lp_filter 0060                         ?_INTERRUPT_Initialize 0001  
                        ?_UART2_RxDataHandler 0001                        _uart1TxBufferRemaining 00A9  
                           ??_TMR2_Initialize 0006                ??_TMR5_DefaultInterruptHandler 0004  
         __end_of_UART2_SetTxInterruptHandler 53AE                   _UART2_SetTxInterruptHandler 539A  
                                _uart1RxCount 00A7                                  _uart2RxCount 00A3  
                                    __Hrparam 0000              __size_of_eaDogM_WriteStringAtPos 0022  
            __end_of_ADCC_GetConversionResult 549E                       __CFG_RSTOSC$EXTOSC_4PLL 000000  
                                  vfprintf@ap 0063                                      __Lrparam 0000  
                                  vfprintf@fp 0060                            __CFG_BOREN$SBORDIS 000000  
                                 ??_TimerDone 0006                       ??_OSCILLATOR_Initialize 0006  
                                _send_lcd_cmd 4EE4                              __size_of___aodiv 0158  
                            __size_of___fladd 0348                              __size_of___aomod 0134  
                            __size_of___fldiv 02AC                              __size_of___awdiv 0088  
                            __size_of___flmul 0384                              __size_of___flsub 005E  
                            __size_of___fltol 00CC                                ?_TMR5_CallBack 0001  
                                  ?_vfpfcnvrt 0047                               ___aodiv@divisor 000E  
                             ___aodiv@counter 0016          __size_of_UART1_SetRxInterruptHandler 0014  
                                    _calc_pot 3F44                                    sprintf@fmt 0066  
                             lp_filter@smooth 0100                                      ___xxtofl 3B54  
                    __size_of_ADCC_Initialize 005C                   __end_of_eaDogM_WriteCommand 54C6  
                                    __pivt0x8 0008                                      __ptext10 4914  
                                    __ptext11 4A1A                                      __ptext20 53AE  
                                    __ptext12 5138                                      __ptext21 53C2  
                                    __ptext13 54BC                                      __ptext30 508C  
                                    __ptext22 53D6                                      __ptext14 4EE4  
                                    __ptext31 5462                                      __ptext23 53EA  
                                    __ptext15 4EAA                                      __ptext40 4CE2  
                                    __ptext32 4C4E                                      __ptext24 433A  
                                    __ptext16 5336                                      __ptext41 54D0  
                                    __ptext33 5476                                      __ptext25 53FE  
                                    __ptext17 4F8A                                      __ptext50 304A  
                                    __ptext42 4B46                                      __ptext34 52E2  
                                    __ptext26 5412                                      __ptext18 44A4  
                                    __ptext51 43F2                                      __ptext43 4186  
                                    __ptext35 536A                                      __ptext27 5426  
                                    __ptext19 539A                                      __ptext60 3F44  
                                    __ptext52 4BFE                                      __ptext44 50BA  
                                    __ptext36 5382                                      __ptext28 543A  
                                    __ptext61 2D9A                                      __ptext53 4DF2  
                                    __ptext45 35A2                                      __ptext37 529E  
                                    __ptext29 544E                                      __ptext70 515C  
                                    __ptext62 4AE8                                      __ptext54 4552  
                                    __ptext46 531A                                      __ptext38 4600  
                                    __ptext71 4FF6                                      __ptext63 279E  
                                    __ptext55 54C6                                      __ptext47 4BA2  
                                    __ptext39 52FE                                      __ptext80 46AC  
                                    __ptext72 4F1C                                      __ptext64 241A  
                                    __ptext56 4DB0                                      __ptext48 37E2  
                                    __ptext81 54EE                                      __ptext73 549E  
                                    __ptext65 32F6                                      __ptext57 4E30  
                                    __ptext49 39E0                                      __ptext90 54F4  
                                    __ptext82 54F0                                      __ptext74 54AE  
                                    __ptext66 3B54                                      __ptext58 3E10  
                                    __ptext91 54E4                                      __ptext83 54DE  
                                    __ptext75 548A                                      __ptext67 426E  
                                    __ptext59 3CB8                                      __ptext92 5234  
                                    __ptext84 51C8                                      __ptext76 54EC  
                                    __ptext68 54D8                                      __ptext93 5110  
                                    __ptext85 51EC                                      __ptext77 5180  
                                    __ptext69 4D2A                                      __ptext94 4E6E  
                                    __ptext86 505A                                      __ptext78 5028  
                                    __ptext95 4FC0                                      __ptext87 5210  
                                    __ptext79 51A4                                      __ptext96 5258  
                                    __ptext88 474A                                      __ptext97 52C0  
                                    __ptext89 54F2                                      __ptext98 5350  
                                    __ptext99 0000                        ?_ADCC_IsConversionDone 0001  
              __size_of_UART1_SetErrorHandler 0014                 TMR6_DefaultInterruptHandler@i 0003  
               __end_of_UART1_SetErrorHandler 5462                              __size_of_sprintf 0048  
                       ??_UART2_RxDataHandler 0001                              __size_of_work_sw 0092  
                         led_lightshow@LED_UP 00AC                                 __size_of_main 03CA  
                               __size_of_dtoa 02AC                                 __size_of_rand 010E  
                               __size_of_once 002A                                 __size_of_stoa 0174  
    __end_of_UART2_DefaultFramingErrorHandler 54F6     __size_of_UART2_DefaultFramingErrorHandler 0002  
          ??_UART2_DefaultFramingErrorHandler 0001             ?_UART2_DefaultFramingErrorHandler 0001  
            _UART2_DefaultFramingErrorHandler 54F4                          __CFG_WDTCWS$WDTCWS_7 000000  
                                 _IVTLOCKbits 003FD4                             ??_Digital232_init 0056  
                    __size_of_TMR5_WriteTimer 0024                     _UART1_OverrunErrorHandler 0178  
                                   stoa@F1139 019E  UART2_SetOverrunErrorHandler@interruptHandler 0006  
UART1_SetOverrunErrorHandler@interruptHandler 0006            __size_of_UART1_DefaultErrorHandler 0006  
                __end_of_ADCC_StartConversion 54AE                    ?_UART1_DefaultErrorHandler 0001  
                                    _wdtdelay 4EAA                    __end_of_UART2_Transmit_ISR 508C  
                                    _vfprintf 4BA2                                     printf@fmt 0064  
                  __end_of_PWM8_LoadDutyValue 4F54                                      _switches 01A7  
                                 _UART2_Write 4DB0                             ??_TMR5_Initialize 0009  
                            ___aomod@dividend 0006                                 ??_Default_ISR 0001  
              ??_UART1_SetFramingErrorHandler 0009                   __end_of_UART1_RxDataHandler 51EC  
                                 _uart1RxHead 005A                                   _uart1TxHead 00AB  
                                 _uart2RxHead 0059                                   _uart1RxTail 00A8  
                                 _uart2TxHead 00A6                                   _uart1TxTail 00AA  
                                 _uart2RxTail 0058                        __size_of_led_lightshow 02B4  
                                 _uart2TxTail 00A5                        ??_INTERRUPT_Initialize 0006  
        __end_of_TMR6_DefaultInterruptHandler 4EAA         __size_of_TMR6_DefaultInterruptHandler 003C  
                _TMR6_DefaultInterruptHandler 4E6E                                   ??_lp_filter 0050  
        __end_of_UART2_SetOverrunErrorHandler 53D6         __size_of_UART2_SetOverrunErrorHandler 0014  
                _UART2_SetOverrunErrorHandler 53C2                                      intlevel2 0000  
                                   sprintf@ap 006D                             _send_lcd_cmd_long 5138  
                     ?_PIN_MANAGER_Initialize 0001                             ??_TMR6_Initialize 0009  
                           ??_PWM8_Initialize 0006                             __CFG_CLKOUTEN$OFF 000000  
                          ?_send_lcd_cmd_long 0001                    __end_of_eaDogM_WriteString 4AE8  
              __size_of_UART2_SetErrorHandler 0014                 __end_of_UART2_SetErrorHandler 53FE  
                         _uart1RxStatusBuffer 014A                                    _SPI1SCKPPS 003ADE  
                                  _SPI1SDIPPS 003ADF                               ??_TMR5_CallBack 0005  
                         ??_send_lcd_cmd_long 000A                                      printf@ap 0069  
                      eaDogM_WriteCommand@cmd 000B                                    _UART2_Read 4D2A  
UART2_SetFramingErrorHandler@interruptHandler 0006  UART1_SetFramingErrorHandler@interruptHandler 0006  
                    _ADCC_GetConversionResult 548A             __end_of_UART1_DefaultErrorHandler 54E4  
                             ___aomod@divisor 000E                                   ??_vfpfcnvrt 004B  
                                    stoa@nuls 0016                               ___aomod@counter 0016  
                           _UART2_is_rx_ready 54D8                        _uart2TxBufferRemaining 00A4  
                              _FVR_Initialize 54D0                                 lp_filter@lp_x 0070  
                                    sprintf@f 006E                                      sprintf@s 0064  
                               lp_filter@slow 0066                            ?_UART2_is_rx_ready 0001  
                       TMR5_ISR@CountCallBack 0190                     __size_of_UART1_Initialize 00B8  
                    _UART1_TxInterruptHandler 017E                           ??_UART2_is_rx_ready 0006  
                   __end_of_send_lcd_cmd_long 515C                                 ___fladd@signs 0012  
                         __end_of_Default_ISR 54EE                                  ___aodiv@sign 0017  
              __end_of_PIN_MANAGER_Initialize 46AC                             ??_ADCC_Initialize 0006  
               ?_TMR6_DefaultInterruptHandler 0001                 ?_UART2_SetOverrunErrorHandler 0006  
                                ___fladd@aexp 0013                                  ___fladd@bexp 0014  
                ?_UART1_SetTxInterruptHandler 0006                       _eaDogM_WriteStringAtPos 527C  
                ?_UART2_SetRxInterruptHandler 0006                                  ___aomod@sign 0017  
                               once@once_flag 0006                                 _led_lightshow 2AE6  
                   __size_of_UART2_Initialize 00AE  
