

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Aug 31 16:35:12 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1,inline
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1,inline
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=4,class=CODE,delta=1
    79                           	psect	text63,global,reloc=4,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=4,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=4,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=4,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=4,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=4,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   102                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   105  0000                     
   106                           ; Version 2.10
   107                           ; Generated 31/07/2019 GMT
   108                           ; 
   109                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   110                           ; All rights reserved.
   111                           ; 
   112                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   113                           ; 
   114                           ; Redistribution and use in source and binary forms, with or without modification, are
   115                           ; permitted provided that the following conditions are met:
   116                           ; 
   117                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   118                           ;        conditions and the following disclaimer.
   119                           ; 
   120                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   121                           ;        of conditions and the following disclaimer in the documentation and/or other
   122                           ;        materials provided with the distribution.
   123                           ; 
   124                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   125                           ;        software without specific prior written permission.
   126                           ; 
   127                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   128                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   129                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   130                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   131                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   132                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   133                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   134                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   135                           ; 
   136                           ; 
   137                           ; Code-generator required, PIC18F47K42 Definitions
   138                           ; 
   139                           ; SFR Addresses
   140  0000                     
   141                           	psect	idataBANK0
   142  003F0A                     __pidataBANK0:
   143                           	opt callstack 0
   144                           
   145                           ;initializer for _sounds
   146  003F0A  69                 	db	low (_IO+6)
   147  003F0B  01                 	db	high (_IO+6)
   148                           
   149                           ;initializer for _switches
   150  003F0C  63                 	db	low _IO
   151  003F0D  01                 	db	high _IO
   152                           
   153                           ;initializer for led_lightshow@LED_UP
   154  003F0E  01                 	db	1
   155                           
   156                           ;initializer for led_lightshow@cylon
   157  003F0F  FF                 	db	255
   158                           
   159                           	psect	idataBANK1
   160  003B30                     __pidataBANK1:
   161                           	opt callstack 0
   162                           
   163                           ;initializer for stoa@F1139
   164  003B30  28                 	db	40
   165  003B31  6E                 	db	110
   166  003B32  75                 	db	117
   167  003B33  6C                 	db	108
   168  003B34  6C                 	db	108
   169  003B35  29                 	db	41
   170  003B36  00                 	db	0
   171                           
   172                           ;initializer for _IO
   173  003B37  00                 	db	0
   174  003B38  00                 	db	0
   175  003B39  00                 	db	0
   176  003B3A  00                 	db	0
   177  003B3B  00                 	db	0
   178  003B3C  00                 	db	0
   179  003B3D  00                 	db	0
   180  003B3E  00                 	db	0
   181  003B3F  00                 	db	0
   182  003B40  00                 	db	0
   183  003B41  00                 	db	0
   184  003B42  00                 	db	0
   185  003B43  00                 	db	0
   186  003B44  00                 	db	0
   187  003B45  00                 	db	0
   188  003B46  00                 	db	0
   189  003B47  00                 	db	0
   190  003B48  00                 	db	0
   191  003B49  00                 	db	0
   192  003B4A  32                 	db	50
   193  003B4B  00                 	db	0
   194  003B4C  0000               	dw	0
   195  003B4E  000A               	dw	10
   196  003B50  0000               	dw	0
   197  003B52  0000               	dw	0
   198  003B54  01                 	db	1
   199  003B55  00                 	db	0
   200  003B56  00                 	db	0
   201  0000                     _IVTADL	set	14493
   202  0000                     _IVTADH	set	14494
   203  0000                     _IVTADU	set	14495
   204  0000                     _PIR2bits	set	14754
   205  0000                     _PIE8bits	set	14744
   206  0000                     _PIR8bits	set	14760
   207  0000                     _PIE9bits	set	14745
   208  0000                     _PIR9bits	set	14761
   209  0000                     _PIR4bits	set	14756
   210  0000                     _PIE6bits	set	14742
   211  0000                     _PIE3bits	set	14739
   212  0000                     _IPR8bits	set	14728
   213  0000                     _IPR9bits	set	14729
   214  0000                     _IPR3bits	set	14723
   215  0000                     _IPR6bits	set	14726
   216  0000                     _PMD7	set	14791
   217  0000                     _PMD6	set	14790
   218  0000                     _PMD5	set	14789
   219  0000                     _PMD4	set	14788
   220  0000                     _PMD3	set	14787
   221  0000                     _PMD2	set	14786
   222  0000                     _PMD1	set	14785
   223  0000                     _PMD0	set	14784
   224  0000                     _OSCTUNE	set	14814
   225  0000                     _OSCFRQ	set	14815
   226  0000                     _OSCEN	set	14813
   227  0000                     _OSCCON3	set	14811
   228  0000                     _OSCCON1	set	14809
   229  0000                     _PLLR	set	118496
   230  0000                     _SPI1SDIPPS	set	15071
   231  0000                     _U1RXPPS	set	15077
   232  0000                     _RC6PPS	set	14870
   233  0000                     _RC5PPS	set	14869
   234  0000                     _RD1PPS	set	14873
   235  0000                     _RC3PPS	set	14867
   236  0000                     _RB6PPS	set	14862
   237  0000                     _SPI1SCKPPS	set	15070
   238  0000                     _U2RXPPS	set	15080
   239  0000                     _SLRCONE	set	14979
   240  0000                     _SLRCOND	set	14963
   241  0000                     _SLRCONC	set	14947
   242  0000                     _SLRCONB	set	14931
   243  0000                     _SLRCONA	set	14915
   244  0000                     _ODCOND	set	14962
   245  0000                     _ODCONC	set	14946
   246  0000                     _ODCONB	set	14930
   247  0000                     _ODCONA	set	14914
   248  0000                     _ODCONE	set	14978
   249  0000                     _RD1I2C	set	14971
   250  0000                     _RD0I2C	set	14970
   251  0000                     _RC4I2C	set	14955
   252  0000                     _RC3I2C	set	14954
   253  0000                     _RB2I2C	set	14939
   254  0000                     _RB1I2C	set	14938
   255  0000                     _WPUC	set	14945
   256  0000                     _WPUA	set	14913
   257  0000                     _WPUB	set	14929
   258  0000                     _WPUE	set	14977
   259  0000                     _WPUD	set	14961
   260  0000                     _ANSELA	set	14912
   261  0000                     _ANSELE	set	14976
   262  0000                     _ANSELB	set	14928
   263  0000                     _ANSELC	set	14944
   264  0000                     _ANSELD	set	14960
   265  0000                     _SPI1RXB	set	15632
   266  0000                     _SPI1TXB	set	15633
   267  0000                     _SPI1TCNTL	set	15634
   268  0000                     _SPI1CON0	set	15636
   269  0000                     _SPI1CLK	set	15644
   270  0000                     _SPI1BAUD	set	15641
   271  0000                     _SPI1CON2	set	15638
   272  0000                     _SPI1CON1	set	15637
   273  0000                     _U2RXB	set	15824
   274  0000                     _U2TXB	set	15826
   275  0000                     _U2ERRIRbits	set	15841
   276  0000                     _U2ERRIE	set	15842
   277  0000                     _U2ERRIR	set	15841
   278  0000                     _U2UIR	set	15840
   279  0000                     _U2FIFO	set	15839
   280  0000                     _U2BRGH	set	15838
   281  0000                     _U2BRGL	set	15837
   282  0000                     _U2CON2	set	15836
   283  0000                     _U2CON1	set	15835
   284  0000                     _U2CON0	set	15834
   285  0000                     _U2P3L	set	15832
   286  0000                     _U2P2L	set	15830
   287  0000                     _U2P1L	set	15828
   288  0000                     _U1RXB	set	15848
   289  0000                     _U1TXB	set	15850
   290  0000                     _U1ERRIRbits	set	15865
   291  0000                     _U1ERRIE	set	15866
   292  0000                     _U1ERRIR	set	15865
   293  0000                     _U1UIR	set	15864
   294  0000                     _U1FIFO	set	15863
   295  0000                     _U1BRGH	set	15862
   296  0000                     _U1BRGL	set	15861
   297  0000                     _U1CON2	set	15860
   298  0000                     _U1CON1	set	15859
   299  0000                     _U1CON0	set	15858
   300  0000                     _U1P3H	set	15857
   301  0000                     _U1P3L	set	15856
   302  0000                     _U1P2H	set	15855
   303  0000                     _U1P2L	set	15854
   304  0000                     _U1P1H	set	15853
   305  0000                     _U1P1L	set	15852
   306  0000                     _ADRESL	set	16111
   307  0000                     _ADRESH	set	16112
   308  0000                     _ADCON0bits	set	16120
   309  0000                     _ADCON0	set	16120
   310  0000                     _ADCLK	set	16127
   311  0000                     _ADACT	set	16126
   312  0000                     _ADREF	set	16125
   313  0000                     _ADSTAT	set	16124
   314  0000                     _ADCON3	set	16123
   315  0000                     _ADCON2	set	16122
   316  0000                     _ADCON1	set	16121
   317  0000                     _ADPREH	set	16119
   318  0000                     _ADPREL	set	16118
   319  0000                     _ADCAP	set	16117
   320  0000                     _ADACQH	set	16116
   321  0000                     _ADACQL	set	16115
   322  0000                     _ADPCH	set	16113
   323  0000                     _ADRPT	set	16108
   324  0000                     _ADACCU	set	16106
   325  0000                     _ADSTPTH	set	16101
   326  0000                     _ADSTPTL	set	16100
   327  0000                     _ADUTHH	set	16097
   328  0000                     _ADUTHL	set	16096
   329  0000                     _ADLTHH	set	16095
   330  0000                     _ADLTHL	set	16094
   331  0000                     _CCPTMRS1bits	set	16223
   332  0000                     _LATCbits	set	16316
   333  0000                     _LATEbits	set	16318
   334  0000                     _T5CONbits	set	16282
   335  0000                     _T5CON	set	16282
   336  0000                     _TMR5L	set	16280
   337  0000                     _TMR5H	set	16281
   338  0000                     _T5CLK	set	16285
   339  0000                     _T5GATE	set	16284
   340  0000                     _T5GCON	set	16283
   341  0000                     _T6CON	set	16276
   342  0000                     _T6TMR	set	16274
   343  0000                     _T6PR	set	16275
   344  0000                     _T6RST	set	16279
   345  0000                     _T6HLT	set	16277
   346  0000                     _T6CLKCON	set	16278
   347  0000                     _PWM8DCL	set	16224
   348  0000                     _PWM8DCH	set	16225
   349  0000                     _PWM8CON	set	16226
   350  0000                     _T2CON	set	16300
   351  0000                     _T2TMR	set	16298
   352  0000                     _T2PR	set	16299
   353  0000                     _T2RST	set	16303
   354  0000                     _T2HLT	set	16301
   355  0000                     _T2CLKCON	set	16302
   356  0000                     _IVTLOCKbits	set	16340
   357  0000                     _IVTLOCK	set	16340
   358  0000                     _INTCON0bits	set	16338
   359  0000                     _TRISD	set	16325
   360  0000                     _TRISC	set	16324
   361  0000                     _TRISB	set	16323
   362  0000                     _TRISA	set	16322
   363  0000                     _TRISE	set	16326
   364  0000                     _LATC	set	16316
   365  0000                     _LATB	set	16315
   366  0000                     _LATA	set	16314
   367  0000                     _LATD	set	16317
   368  0000                     _LATE	set	16318
   369  0000                     _GIE	set	130711
   370                           
   371                           	psect	smallconst
   372  002000                     __psmallconst:
   373                           	opt callstack 0
   374  002000  00                 	db	0
   375  002001                     STR_1:
   376                           
   377                           ; BSR set to: 0
   378  002001  20                 	db	32
   379  002002  48                 	db	72	;'H'
   380  002003  20                 	db	32
   381  002004  25                 	db	37
   382  002005  69                 	db	105	;'i'
   383  002006  2C                 	db	44
   384  002007  20                 	db	32
   385  002008  4D                 	db	77	;'M'
   386  002009  20                 	db	32
   387  00200A  25                 	db	37
   388  00200B  69                 	db	105	;'i'
   389  00200C  20                 	db	32
   390  00200D  20                 	db	32
   391  00200E  20                 	db	32
   392  00200F  20                 	db	32
   393  002010  20                 	db	32
   394  002011  00                 	db	0
   395  002012                     STR_2:
   396                           
   397                           ; BSR set to: 0
   398  002012  20                 	db	32
   399  002013  53                 	db	83	;'S'
   400  002014  63                 	db	99	;'c'
   401  002015  6F                 	db	111	;'o'
   402  002016  72                 	db	114	;'r'
   403  002017  65                 	db	101	;'e'
   404  002018  20                 	db	32
   405  002019  25                 	db	37
   406  00201A  69                 	db	105	;'i'
   407  00201B  20                 	db	32
   408  00201C  25                 	db	37
   409  00201D  69                 	db	105	;'i'
   410  00201E  20                 	db	32
   411  00201F  20                 	db	32
   412  002020  20                 	db	32
   413  002021  20                 	db	32
   414  002022  00                 	db	0
   415  002023                     STR_3:
   416                           
   417                           ; BSR set to: 0
   418  002023  20                 	db	32
   419  002024  44                 	db	68	;'D'
   420  002025  6F                 	db	111	;'o'
   421  002026  6E                 	db	110	;'n'
   422  002027  65                 	db	101	;'e'
   423  002028  2C                 	db	44
   424  002029  20                 	db	32
   425  00202A  4F                 	db	79	;'O'
   426  00202B  4B                 	db	75	;'K'
   427  00202C  20                 	db	32
   428  00202D  00                 	db	0
   429  00202E                     STR_15:
   430                           
   431                           ; BSR set to: 0
   432  00202E  52                 	db	82	;'R'
   433  00202F  30                 	db	48	;'0'
   434  002030  0D                 	db	13
   435  002031  00                 	db	0
   436  002032                     STR_7:
   437                           
   438                           ; BSR set to: 0
   439  002032  54                 	db	84	;'T'
   440  002033  32                 	db	50	;'2'
   441  002034  0D                 	db	13
   442  002035  00                 	db	0
   443  002036                     STR_9:
   444                           
   445                           ; BSR set to: 0
   446  002036  43                 	db	67	;'C'
   447  002037  34                 	db	52	;'4'
   448  002038  0D                 	db	13
   449  002039  00                 	db	0
   450  00203A                     STR_11:
   451                           
   452                           ; BSR set to: 0
   453  00203A  46                 	db	70	;'F'
   454  00203B  34                 	db	52	;'4'
   455  00203C  0D                 	db	13
   456  00203D  00                 	db	0
   457  00203E                     STR_13:
   458                           
   459                           ; BSR set to: 0
   460  00203E  4D                 	db	77	;'M'
   461  00203F  34                 	db	52	;'4'
   462  002040  0D                 	db	13
   463  002041  00                 	db	0
   464  002042                     STR_5:
   465                           
   466                           ; BSR set to: 0
   467  002042  58                 	db	88	;'X'
   468  002043  51                 	db	81	;'Q'
   469  002044  0D                 	db	13
   470  002045  00                 	db	0
   471  002046                     STR_4:
   472                           
   473                           ; BSR set to: 0
   474  002046  25                 	db	37
   475  002047  73                 	db	115	;'s'
   476  002048  00                 	db	0
   477  0000                     
   478                           ; #config settings
   479  002049  00                 	db	0	; dummy byte at the end
   480  0000                     
   481                           	psect	cinit
   482  00354E                     __pcinit:
   483                           	opt callstack 0
   484  00354E                     start_initialization:
   485                           	opt callstack 0
   486  00354E                     __initialization:
   487                           	opt callstack 0
   488                           
   489                           ; Initialize objects allocated to BANK1 (39 bytes)
   490                           ; load TBLPTR registers with __pidataBANK1
   491  00354E  0E30               	movlw	low __pidataBANK1
   492  003550  6EF6               	movwf	tblptrl,c
   493  003552  0E3B               	movlw	high __pidataBANK1
   494  003554  6EF7               	movwf	tblptrh,c
   495  003556  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   496  003558  6EF8               	movwf	tblptru,c
   497  00355A  EE00  F15C         	lfsr	0,__pdataBANK1
   498  00355E  EE10 F027          	lfsr	1,39
   499  003562                     copy_data0:
   500  003562  0009               	tblrd		*+
   501  003564  006F FFD7 FFEE     	movff	tablat,postinc0
   502  00356A  50E5               	movf	postdec1,w,c
   503  00356C  50E1               	movf	fsr1l,w,c
   504  00356E  E1F9               	bnz	copy_data0
   505                           
   506                           ; Initialize objects allocated to BANK0 (6 bytes)
   507                           ; load TBLPTR registers with __pidataBANK0
   508  003570  0E0A               	movlw	low __pidataBANK0
   509  003572  6EF6               	movwf	tblptrl,c
   510  003574  0E3F               	movlw	high __pidataBANK0
   511  003576  6EF7               	movwf	tblptrh,c
   512  003578  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   513  00357A  6EF8               	movwf	tblptru,c
   514  00357C  EE00  F0F8         	lfsr	0,__pdataBANK0
   515  003580  EE10 F006          	lfsr	1,6
   516  003584                     copy_data1:
   517  003584  0009               	tblrd		*+
   518  003586  006F FFD7 FFEE     	movff	tablat,postinc0
   519  00358C  50E5               	movf	postdec1,w,c
   520  00358E  50E1               	movf	fsr1l,w,c
   521  003590  E1F9               	bnz	copy_data1
   522                           
   523                           ; Clear objects allocated to BANK1 (92 bytes)
   524  003592  EE00  F100         	lfsr	0,__pbssBANK1
   525  003596  0E5C               	movlw	92
   526  003598                     clear_0:
   527  003598  6AEE               	clrf	postinc0,c
   528  00359A  06E8               	decf	wreg,f,c
   529  00359C  E1FD               	bnz	clear_0
   530                           
   531                           ; Clear objects allocated to BANK0 (66 bytes)
   532  00359E  EE00  F0B6         	lfsr	0,__pbssBANK0
   533  0035A2  0E42               	movlw	66
   534  0035A4                     clear_1:
   535  0035A4  6AEE               	clrf	postinc0,c
   536  0035A6  06E8               	decf	wreg,f,c
   537  0035A8  E1FD               	bnz	clear_1
   538                           
   539                           ; Clear objects allocated to COMRAM (5 bytes)
   540  0035AA  6A5A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   541  0035AC  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   542  0035AE  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   543  0035B0  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   544  0035B2  6A56               	clrf	__pbssCOMRAM& (0+255),c
   545                           
   546                           ;
   547                           ; Setup IVTBASE
   548                           ;
   549  0035B4  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   550  0035B6  6ED5               	movwf	213,c
   551  0035B8  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   552  0035BA  6ED6               	movwf	214,c
   553  0035BC  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   554  0035BE  6ED7               	movwf	215,c
   555  0035C0                     end_of_initialization:
   556                           	opt callstack 0
   557  0035C0                     __end_of__initialization:
   558                           	opt callstack 0
   559  0035C0  0100               	movlb	0
   560  0035C2  EF8D  F012         	goto	_main	;jump to C main() function
   561                           
   562                           	psect	bssCOMRAM
   563  000056                     __pbssCOMRAM:
   564                           	opt callstack 0
   565  000056                     _flags:
   566                           	opt callstack 0
   567  000056                     	ds	2
   568  000058                     _uart2RxTail:
   569                           	opt callstack 0
   570  000058                     	ds	1
   571  000059                     _uart2RxHead:
   572                           	opt callstack 0
   573  000059                     	ds	1
   574  00005A                     _uart1RxHead:
   575                           	opt callstack 0
   576  00005A                     	ds	1
   577                           
   578                           	psect	bssBANK0
   579  0000B6                     __pbssBANK0:
   580                           	opt callstack 0
   581  0000B6                     wdtdelay@dcount:
   582                           	opt callstack 0
   583  0000B6                     	ds	4
   584  0000BA                     _TMR5_InterruptHandler:
   585                           	opt callstack 0
   586  0000BA                     	ds	3
   587  0000BD                     _TMR6_InterruptHandler:
   588                           	opt callstack 0
   589  0000BD                     	ds	3
   590  0000C0                     _UART2_ErrorHandler:
   591                           	opt callstack 0
   592  0000C0                     	ds	3
   593  0000C3                     _UART2_OverrunErrorHandler:
   594                           	opt callstack 0
   595  0000C3                     	ds	3
   596  0000C6                     _UART2_FramingErrorHandler:
   597                           	opt callstack 0
   598  0000C6                     	ds	3
   599  0000C9                     _UART1_ErrorHandler:
   600                           	opt callstack 0
   601  0000C9                     	ds	3
   602  0000CC                     _UART1_OverrunErrorHandler:
   603                           	opt callstack 0
   604  0000CC                     	ds	3
   605  0000CF                     _UART1_FramingErrorHandler:
   606                           	opt callstack 0
   607  0000CF                     	ds	3
   608  0000D2                     _UART1_TxInterruptHandler:
   609                           	opt callstack 0
   610  0000D2                     	ds	3
   611  0000D5                     _UART1_RxInterruptHandler:
   612                           	opt callstack 0
   613  0000D5                     	ds	3
   614  0000D8                     _UART2_TxInterruptHandler:
   615                           	opt callstack 0
   616  0000D8                     	ds	3
   617  0000DB                     _UART2_RxInterruptHandler:
   618                           	opt callstack 0
   619  0000DB                     	ds	3
   620  0000DE                     _nout:
   621                           	opt callstack 0
   622  0000DE                     	ds	2
   623  0000E0                     _width:
   624                           	opt callstack 0
   625  0000E0                     	ds	2
   626  0000E2                     _prec:
   627                           	opt callstack 0
   628  0000E2                     	ds	2
   629  0000E4                     led_lightshow@alive_led:
   630                           	opt callstack 0
   631  0000E4                     	ds	2
   632  0000E6                     led_lightshow@j:
   633                           	opt callstack 0
   634  0000E6                     	ds	2
   635  0000E8                     TMR5_ISR@CountCallBack:
   636                           	opt callstack 0
   637  0000E8                     	ds	2
   638  0000EA                     _timer5ReloadVal:
   639                           	opt callstack 0
   640  0000EA                     	ds	2
   641  0000EC                     Digital232_RW@x:
   642                           	opt callstack 0
   643  0000EC                     	ds	1
   644  0000ED                     _uart2RxLastError:
   645                           	opt callstack 0
   646  0000ED                     	ds	1
   647  0000EE                     _uart2RxCount:
   648                           	opt callstack 0
   649  0000EE                     	ds	1
   650  0000EF                     _uart2TxBufferRemaining:
   651                           	opt callstack 0
   652  0000EF                     	ds	1
   653  0000F0                     _uart2TxTail:
   654                           	opt callstack 0
   655  0000F0                     	ds	1
   656  0000F1                     _uart2TxHead:
   657                           	opt callstack 0
   658  0000F1                     	ds	1
   659  0000F2                     _uart1RxLastError:
   660                           	opt callstack 0
   661  0000F2                     	ds	1
   662  0000F3                     _uart1RxCount:
   663                           	opt callstack 0
   664  0000F3                     	ds	1
   665  0000F4                     _uart1RxTail:
   666                           	opt callstack 0
   667  0000F4                     	ds	1
   668  0000F5                     _uart1TxBufferRemaining:
   669                           	opt callstack 0
   670  0000F5                     	ds	1
   671  0000F6                     _uart1TxTail:
   672                           	opt callstack 0
   673  0000F6                     	ds	1
   674  0000F7                     _uart1TxHead:
   675                           	opt callstack 0
   676  0000F7                     	ds	1
   677                           
   678                           	psect	dataBANK0
   679  0000F8                     __pdataBANK0:
   680                           	opt callstack 0
   681  0000F8                     _sounds:
   682                           	opt callstack 0
   683  0000F8                     	ds	2
   684  0000FA                     _switches:
   685                           	opt callstack 0
   686  0000FA                     	ds	2
   687  0000FC                     led_lightshow@LED_UP:
   688                           	opt callstack 0
   689  0000FC                     	ds	1
   690  0000FD                     led_lightshow@cylon:
   691                           	opt callstack 0
   692  0000FD                     	ds	1
   693                           
   694                           	psect	bssBANK1
   695  000100                     __pbssBANK1:
   696                           	opt callstack 0
   697  000100                     _tickCount:
   698                           	opt callstack 0
   699  000100                     	ds	12
   700  00010C                     _uart2RxStatusBuffer:
   701                           	opt callstack 0
   702  00010C                     	ds	8
   703  000114                     _uart2RxBuffer:
   704                           	opt callstack 0
   705  000114                     	ds	8
   706  00011C                     _uart2TxBuffer:
   707                           	opt callstack 0
   708  00011C                     	ds	8
   709  000124                     _uart1RxStatusBuffer:
   710                           	opt callstack 0
   711  000124                     	ds	8
   712  00012C                     _uart1RxBuffer:
   713                           	opt callstack 0
   714  00012C                     	ds	8
   715  000134                     _uart1TxBuffer:
   716                           	opt callstack 0
   717  000134                     	ds	8
   718  00013C                     _dbuf:
   719                           	opt callstack 0
   720  00013C                     	ds	32
   721                           
   722                           	psect	dataBANK1
   723  00015C                     __pdataBANK1:
   724                           	opt callstack 0
   725  00015C                     stoa@F1139:
   726                           	opt callstack 0
   727  00015C                     	ds	7
   728  000163                     _IO:
   729                           	opt callstack 0
   730  000163                     	ds	32
   731                           
   732                           	psect	cstackBANK0
   733  000060                     __pcstackBANK0:
   734                           	opt callstack 0
   735  000060                     ?_vfprintf:
   736                           	opt callstack 0
   737  000060                     vfprintf@fp:
   738                           	opt callstack 0
   739                           
   740                           ; 2 bytes @ 0x0
   741  000060                     	ds	2
   742  000062                     vfprintf@fmt:
   743                           	opt callstack 0
   744                           
   745                           ; 1 bytes @ 0x2
   746  000062                     	ds	1
   747  000063                     vfprintf@ap:
   748                           	opt callstack 0
   749                           
   750                           ; 1 bytes @ 0x3
   751  000063                     	ds	1
   752  000064                     ?_sprintf:
   753                           	opt callstack 0
   754  000064                     ?_printf:
   755                           	opt callstack 0
   756  000064                     sprintf@s:
   757                           	opt callstack 0
   758  000064                     printf@fmt:
   759                           	opt callstack 0
   760                           
   761                           ; 1 bytes @ 0x4
   762  000064                     	ds	1
   763  000065                     sprintf@fmt:
   764                           	opt callstack 0
   765                           
   766                           ; 1 bytes @ 0x5
   767  000065                     	ds	4
   768  000069                     printf@ap:
   769                           	opt callstack 0
   770                           
   771                           ; 1 bytes @ 0x9
   772  000069                     	ds	1
   773  00006A                     ??_Digital232_RW:
   774                           
   775                           ; 1 bytes @ 0xA
   776  00006A                     	ds	2
   777  00006C                     Digital232_RW@i:
   778                           	opt callstack 0
   779  00006C                     sprintf@ap:
   780                           	opt callstack 0
   781                           
   782                           ; 1 bytes @ 0xC
   783  00006C                     	ds	1
   784  00006D                     Digital232_RW@j:
   785                           	opt callstack 0
   786  00006D                     sprintf@f:
   787                           	opt callstack 0
   788                           
   789                           ; 5 bytes @ 0xD
   790  00006D                     	ds	5
   791  000072                     work_sw@buffer:
   792                           	opt callstack 0
   793                           
   794                           ; 64 bytes @ 0x12
   795  000072                     	ds	64
   796  0000B2                     ??_main:
   797                           
   798                           ; 1 bytes @ 0x52
   799  0000B2                     	ds	3
   800  0000B5                     main@y:
   801                           	opt callstack 0
   802                           
   803                           ; 1 bytes @ 0x55
   804  0000B5                     	ds	1
   805                           
   806                           	psect	cstackCOMRAM
   807  000001                     __pcstackCOMRAM:
   808                           	opt callstack 0
   809  000001                     
   810                           ; 1 bytes @ 0x0
   811  000001                     	ds	2
   812  000003                     TMR6_DefaultInterruptHandler@i:
   813                           	opt callstack 0
   814                           
   815                           ; 1 bytes @ 0x2
   816  000003                     	ds	1
   817  000004                     ??_TMR5_DefaultInterruptHandler:
   818  000004                     TMR5_WriteTimer@timerVal:
   819                           	opt callstack 0
   820                           
   821                           ; 2 bytes @ 0x3
   822  000004                     	ds	1
   823  000005                     
   824                           ; 1 bytes @ 0x4
   825  000005                     	ds	1
   826  000006                     ?_strlen:
   827                           	opt callstack 0
   828  000006                     ?_ADCC_GetConversionResult:
   829                           	opt callstack 0
   830  000006                     ?___awdiv:
   831                           	opt callstack 0
   832  000006                     ?___aodiv:
   833                           	opt callstack 0
   834  000006                     ?___aomod:
   835                           	opt callstack 0
   836  000006                     INTERRUPT_Initialize@state:
   837                           	opt callstack 0
   838  000006                     UART2_Read@readValue:
   839                           	opt callstack 0
   840  000006                     UART2_Write@txData:
   841                           	opt callstack 0
   842  000006                     ADCC_StartConversion@channel:
   843                           	opt callstack 0
   844  000006                     SPI1_Exchange8bit@data:
   845                           	opt callstack 0
   846  000006                     PWM8_LoadDutyValue@dutyValue:
   847                           	opt callstack 0
   848  000006                     StartTimer@count:
   849                           	opt callstack 0
   850  000006                     ___awdiv@dividend:
   851                           	opt callstack 0
   852  000006                     strlen@s:
   853                           	opt callstack 0
   854  000006                     UART1_SetFramingErrorHandler@interruptHandler:
   855                           	opt callstack 0
   856  000006                     UART1_SetOverrunErrorHandler@interruptHandler:
   857                           	opt callstack 0
   858  000006                     UART1_SetErrorHandler@interruptHandler:
   859                           	opt callstack 0
   860  000006                     UART1_SetRxInterruptHandler@InterruptHandler:
   861                           	opt callstack 0
   862  000006                     UART1_SetTxInterruptHandler@InterruptHandler:
   863                           	opt callstack 0
   864  000006                     UART2_SetFramingErrorHandler@interruptHandler:
   865                           	opt callstack 0
   866  000006                     UART2_SetOverrunErrorHandler@interruptHandler:
   867                           	opt callstack 0
   868  000006                     UART2_SetErrorHandler@interruptHandler:
   869                           	opt callstack 0
   870  000006                     UART2_SetRxInterruptHandler@InterruptHandler:
   871                           	opt callstack 0
   872  000006                     UART2_SetTxInterruptHandler@InterruptHandler:
   873                           	opt callstack 0
   874  000006                     TMR6_SetInterruptHandler@InterruptHandler:
   875                           	opt callstack 0
   876  000006                     TMR5_SetInterruptHandler@InterruptHandler:
   877                           	opt callstack 0
   878  000006                     wdtdelay@delay:
   879                           	opt callstack 0
   880  000006                     ___aodiv@dividend:
   881                           	opt callstack 0
   882  000006                     ___aomod@dividend:
   883                           	opt callstack 0
   884                           
   885                           ; 8 bytes @ 0x5
   886  000006                     	ds	1
   887  000007                     putch@txData:
   888                           	opt callstack 0
   889                           
   890                           ; 1 bytes @ 0x6
   891  000007                     	ds	1
   892  000008                     ??_StartTimer:
   893  000008                     ??_PWM8_LoadDutyValue:
   894  000008                     ??_ADCC_GetConversionResult:
   895  000008                     TimerDone@timer:
   896                           	opt callstack 0
   897  000008                     ___awdiv@divisor:
   898                           	opt callstack 0
   899  000008                     fputc@c:
   900                           	opt callstack 0
   901  000008                     strlen@a:
   902                           	opt callstack 0
   903                           
   904                           ; 2 bytes @ 0x7
   905  000008                     	ds	1
   906  000009                     ??_TMR5_Initialize:
   907  000009                     
   908                           ; 1 bytes @ 0x8
   909  000009                     	ds	1
   910  00000A                     StartTimer@timer:
   911                           	opt callstack 0
   912  00000A                     send_lcd_cmd@cmd:
   913                           	opt callstack 0
   914  00000A                     send_lcd_cmd_long@cmd:
   915                           	opt callstack 0
   916  00000A                     ___awdiv@counter:
   917                           	opt callstack 0
   918  00000A                     eaDogM_WriteString@strPtr:
   919                           	opt callstack 0
   920  00000A                     fputc@fp:
   921                           	opt callstack 0
   922                           
   923                           ; 2 bytes @ 0x9
   924  00000A                     	ds	1
   925  00000B                     eaDogM_WriteCommand@cmd:
   926                           	opt callstack 0
   927  00000B                     ___awdiv@sign:
   928                           	opt callstack 0
   929  00000B                     WaitMs@numMilliseconds:
   930                           	opt callstack 0
   931                           
   932                           ; 2 bytes @ 0xA
   933  00000B                     	ds	1
   934  00000C                     ??_fputc:
   935  00000C                     ??_eaDogM_WriteString:
   936  00000C                     ___awdiv@quotient:
   937                           	opt callstack 0
   938                           
   939                           ; 2 bytes @ 0xB
   940  00000C                     	ds	1
   941  00000D                     
   942                           ; 1 bytes @ 0xC
   943  00000D                     	ds	1
   944  00000E                     eaDogM_WriteString@i:
   945                           	opt callstack 0
   946  00000E                     led_lightshow@speed:
   947                           	opt callstack 0
   948  00000E                     ___aodiv@divisor:
   949                           	opt callstack 0
   950  00000E                     ___aomod@divisor:
   951                           	opt callstack 0
   952                           
   953                           ; 8 bytes @ 0xD
   954  00000E                     	ds	1
   955  00000F                     eaDogM_WriteString@bytesWritten:
   956                           	opt callstack 0
   957                           
   958                           ; 1 bytes @ 0xE
   959  00000F                     	ds	1
   960  000010                     ??_led_lightshow:
   961  000010                     eaDogM_WriteStringAtPos@c:
   962                           	opt callstack 0
   963                           
   964                           ; 1 bytes @ 0xF
   965  000010                     	ds	1
   966  000011                     ?_stoa:
   967                           	opt callstack 0
   968  000011                     eaDogM_WriteStringAtPos@strPtr:
   969                           	opt callstack 0
   970  000011                     stoa@fp:
   971                           	opt callstack 0
   972  000011                     fputs@s:
   973                           	opt callstack 0
   974                           
   975                           ; 2 bytes @ 0x10
   976  000011                     	ds	1
   977  000012                     led_lightshow@seq:
   978                           	opt callstack 0
   979                           
   980                           ; 1 bytes @ 0x11
   981  000012                     	ds	1
   982  000013                     eaDogM_WriteStringAtPos@r:
   983                           	opt callstack 0
   984  000013                     stoa@s:
   985                           	opt callstack 0
   986  000013                     fputs@fp:
   987                           	opt callstack 0
   988                           
   989                           ; 2 bytes @ 0x12
   990  000013                     	ds	2
   991  000015                     ??_stoa:
   992  000015                     fputs@c:
   993                           	opt callstack 0
   994                           
   995                           ; 1 bytes @ 0x14
   996  000015                     	ds	1
   997  000016                     ___aodiv@counter:
   998                           	opt callstack 0
   999  000016                     ___aomod@counter:
  1000                           	opt callstack 0
  1001  000016                     fputs@i:
  1002                           	opt callstack 0
  1003  000016                     stoa@nuls:
  1004                           	opt callstack 0
  1005                           
  1006                           ; 7 bytes @ 0x15
  1007  000016                     	ds	1
  1008  000017                     ___aodiv@sign:
  1009                           	opt callstack 0
  1010  000017                     ___aomod@sign:
  1011                           	opt callstack 0
  1012                           
  1013                           ; 1 bytes @ 0x16
  1014  000017                     	ds	1
  1015  000018                     ?_abs:
  1016                           	opt callstack 0
  1017  000018                     ?_pad:
  1018                           	opt callstack 0
  1019  000018                     pad@fp:
  1020                           	opt callstack 0
  1021  000018                     abs@a:
  1022                           	opt callstack 0
  1023  000018                     ___aodiv@quotient:
  1024                           	opt callstack 0
  1025                           
  1026                           ; 8 bytes @ 0x17
  1027  000018                     	ds	2
  1028  00001A                     ??_abs:
  1029  00001A                     pad@buf:
  1030                           	opt callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x19
  1033  00001A                     	ds	2
  1034  00001C                     pad@p:
  1035                           	opt callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x1B
  1038  00001C                     	ds	1
  1039  00001D                     stoa@i:
  1040                           	opt callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x1C
  1043  00001D                     	ds	1
  1044  00001E                     ??_pad:
  1045                           
  1046                           ; 1 bytes @ 0x1D
  1047  00001E                     	ds	1
  1048  00001F                     pad@i:
  1049                           	opt callstack 0
  1050  00001F                     stoa@w:
  1051                           	opt callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x1E
  1054  00001F                     	ds	2
  1055  000021                     pad@w:
  1056                           	opt callstack 0
  1057  000021                     stoa@cp:
  1058                           	opt callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x20
  1061  000021                     	ds	2
  1062  000023                     ?_dtoa:
  1063                           	opt callstack 0
  1064  000023                     dtoa@fp:
  1065                           	opt callstack 0
  1066  000023                     stoa@p:
  1067                           	opt callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x22
  1070  000023                     	ds	2
  1071  000025                     stoa@l:
  1072                           	opt callstack 0
  1073  000025                     dtoa@d:
  1074                           	opt callstack 0
  1075                           
  1076                           ; 8 bytes @ 0x24
  1077  000025                     	ds	8
  1078  00002D                     ??_dtoa:
  1079                           
  1080                           ; 1 bytes @ 0x2C
  1081  00002D                     	ds	8
  1082  000035                     _dtoa$2573:
  1083                           	opt callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x34
  1086  000035                     	ds	2
  1087  000037                     dtoa@p:
  1088                           	opt callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x36
  1091  000037                     	ds	2
  1092  000039                     dtoa@w:
  1093                           	opt callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x38
  1096  000039                     	ds	2
  1097  00003B                     dtoa@s:
  1098                           	opt callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x3A
  1101  00003B                     	ds	2
  1102  00003D                     dtoa@n:
  1103                           	opt callstack 0
  1104                           
  1105                           ; 8 bytes @ 0x3C
  1106  00003D                     	ds	8
  1107  000045                     dtoa@i:
  1108                           	opt callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x44
  1111  000045                     	ds	2
  1112  000047                     ?_vfpfcnvrt:
  1113                           	opt callstack 0
  1114  000047                     vfpfcnvrt@fp:
  1115                           	opt callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x46
  1118  000047                     	ds	2
  1119  000049                     vfpfcnvrt@fmt:
  1120                           	opt callstack 0
  1121                           
  1122                           ; 1 bytes @ 0x48
  1123  000049                     	ds	1
  1124  00004A                     vfpfcnvrt@ap:
  1125                           	opt callstack 0
  1126                           
  1127                           ; 1 bytes @ 0x49
  1128  00004A                     	ds	1
  1129  00004B                     vfpfcnvrt@ll:
  1130                           	opt callstack 0
  1131                           
  1132                           ; 8 bytes @ 0x4A
  1133  00004B                     	ds	8
  1134  000053                     vfpfcnvrt@cp:
  1135                           	opt callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x52
  1138  000053                     	ds	2
  1139  000055                     vfprintf@cfmt:
  1140                           	opt callstack 0
  1141                           
  1142                           ; 1 bytes @ 0x54
  1143  000055                     	ds	1
  1144  000056                     
  1145                           ; 1 bytes @ 0x55
  1146 ;;
  1147 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1148 ;;
  1149 ;; *************** function _main *****************
  1150 ;; Defined at:
  1151 ;;		line 87 in file "main.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;		None
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;  y               1   85[BANK0 ] unsigned char 
  1156 ;;  x               1    0        unsigned char 
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      void 
  1159 ;; Registers used:
  1160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 3E/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1167 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1168 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1169 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1170 ;;Total ram usage:        4 bytes
  1171 ;; Hardware stack levels required when called:   14
  1172 ;; This function calls:
  1173 ;;		_Digital232_RW
  1174 ;;		_Digital232_init
  1175 ;;		_SYSTEM_Initialize
  1176 ;;		_StartTimer
  1177 ;;		_TimerDone
  1178 ;;		_eaDogM_WriteCommand
  1179 ;;		_eaDogM_WriteStringAtPos
  1180 ;;		_init_display
  1181 ;;		_led_lightshow
  1182 ;;		_work_sw
  1183 ;; This function is called by:
  1184 ;;		Startup code after reset
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           	psect	text0
  1189  00251A                     __ptext0:
  1190                           	opt callstack 0
  1191  00251A                     _main:
  1192                           	opt callstack 17
  1193                           
  1194                           ;incstack = 0
  1195  00251A  0E00               	movlw	0
  1196  00251C  0100               	movlb	0	; () banked
  1197  00251E  6FB5               	movwf	main@y& (0+255),b
  1198                           
  1199                           ; BSR set to: 0
  1200                           ;main.c: 91:  SYSTEM_Initialize();
  1201  002520  ECF5  F01C         	call	_SYSTEM_Initialize	;wreg free
  1202                           
  1203                           ; BSR set to: 61
  1204                           ;main.c: 98:  (INTCON0bits.GIEH = 1);
  1205  002524  8ED2               	bsf	210,7,c	;volatile
  1206                           
  1207                           ; BSR set to: 61
  1208                           ;main.c: 101:  (INTCON0bits.GIEL = 1);
  1209  002526  8CD2               	bsf	210,6,c	;volatile
  1210                           
  1211                           ; BSR set to: 61
  1212                           ;main.c: 109:  IO.input_ok = 0;
  1213  002528  0E00               	movlw	0
  1214  00252A  0101               	movlb	1	; () banked
  1215  00252C  6F6D               	movwf	(_IO+10)& (0+255),b
  1216                           
  1217                           ; BSR set to: 1
  1218                           ;main.c: 110:  IO.output_ok = 0;
  1219  00252E  0E00               	movlw	0
  1220  002530  6F6E               	movwf	(_IO+11)& (0+255),b
  1221                           
  1222                           ; BSR set to: 1
  1223                           ;main.c: 111:  IO.d232 = D232_IDLE;
  1224  002532  0E00               	movlw	0
  1225  002534  6F70               	movwf	(_IO+13)& (0+255),b
  1226                           
  1227                           ; BSR set to: 1
  1228                           ;main.c: 112:  IO.io = IO_IDLE;
  1229  002536  0E00               	movlw	0
  1230  002538  6F6F               	movwf	(_IO+12)& (0+255),b
  1231                           
  1232                           ; BSR set to: 1
  1233                           ;main.c: 114:  init_display();
  1234  00253A  ECE3  F01A         	call	_init_display	;wreg free
  1235                           
  1236                           ; BSR set to: 0
  1237                           ;main.c: 115:  eaDogM_WriteCommand(0b00001100);
  1238  00253E  0E0C               	movlw	12
  1239  002540  EC7B  F01F         	call	_eaDogM_WriteCommand
  1240                           
  1241                           ; BSR set to: 0
  1242                           ;main.c: 117:  StartTimer(TMR_INIT, 1000);
  1243  002544  0E03               	movlw	3
  1244  002546  6E07               	movwf	(StartTimer@count+1)^0,c
  1245  002548  0EE8               	movlw	232
  1246  00254A  6E06               	movwf	StartTimer@count^0,c
  1247  00254C  0E01               	movlw	1
  1248  00254E  EC0E  F01D         	call	_StartTimer
  1249                           
  1250                           ;main.c: 118:  Digital232_init();
  1251  002552  EC93  F016         	call	_Digital232_init	;wreg free
  1252                           
  1253                           ;main.c: 119:  eaDogM_WriteStringAtPos(0, 0, " Done, OK ");
  1254  002556  0E00               	movlw	0
  1255  002558  6E10               	movwf	eaDogM_WriteStringAtPos@c^0,c
  1256  00255A  0E23               	movlw	low STR_3
  1257  00255C  6E11               	movwf	eaDogM_WriteStringAtPos@strPtr^0,c
  1258  00255E  5011               	movf	eaDogM_WriteStringAtPos@strPtr^0,w,c
  1259  002560  A4D8               	btfss	status,2,c
  1260  002562  0E20               	movlw	high __smallconst
  1261  002564  6E12               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)^0,c
  1262  002566  0E00               	movlw	0
  1263  002568  EC60  F01E         	call	_eaDogM_WriteStringAtPos
  1264  00256C                     l6424:
  1265                           
  1266                           ;main.c: 123:   work_sw();
  1267  00256C  EC66  F01A         	call	_work_sw	;wreg free
  1268                           
  1269                           ;main.c: 124:   if (Digital232_RW() && switches->detonator)
  1270  002570  EC7B  F011         	call	_Digital232_RW	;wreg free
  1271  002574  0900               	iorlw	0
  1272  002576  A4D8               	btfss	status,2,c
  1273                           
  1274                           ; BSR set to: 1
  1275  002578  A363               	btfss	_IO& (0+255),1,b
  1276  00257A  D007               	goto	l6432
  1277                           
  1278                           ; BSR set to: 1
  1279                           ;main.c: 125:    led_lightshow(IO.seq_value, 1);
  1280  00257C  0E00               	movlw	0
  1281  00257E  6E0F               	movwf	(led_lightshow@speed+1)^0,c
  1282  002580  0E01               	movlw	1
  1283  002582  6E0E               	movwf	led_lightshow@speed^0,c
  1284  002584  5173               	movf	(_IO+16)& (0+255),w,b
  1285  002586  EC07  F017         	call	_led_lightshow
  1286  00258A                     l6432:
  1287                           
  1288                           ;main.c: 127:   if (!switches->detonator) {
  1289  00258A  0101               	movlb	1	; () banked
  1290  00258C  B363               	btfsc	_IO& (0+255),1,b
  1291  00258E  D0A4               	goto	l6478
  1292                           
  1293                           ; BSR set to: 1
  1294                           ;main.c: 128:    IO.outbytes[1] = IO.outbytes[1] | 0x02;
  1295  002590  5169               	movf	(_IO+6)& (0+255),w,b
  1296  002592  0902               	iorlw	2
  1297  002594  6F69               	movwf	(_IO+6)& (0+255),b
  1298                           
  1299                           ; BSR set to: 1
  1300                           ;main.c: 129:    if (IO.outbytes[2]&0b00000001) {
  1301  002596  A16A               	btfss	(_IO+7)& (0+255),0,b
  1302  002598  D037               	goto	l6452
  1303                           
  1304                           ; BSR set to: 1
  1305                           ;main.c: 130:     if (TimerDone(TMR_EXTRA)) {
  1306  00259A  0E04               	movlw	4
  1307  00259C  ECD0  F01D         	call	_TimerDone
  1308  0025A0  0900               	iorlw	0
  1309  0025A2  B4D8               	btfsc	status,2,c
  1310  0025A4  D031               	goto	l6452
  1311                           
  1312                           ;main.c: 131:      IO.outbytes[1] = IO.outbytes[1] | 0x04;
  1313  0025A6  0101               	movlb	1	; () banked
  1314  0025A8  5169               	movf	(_IO+6)& (0+255),w,b
  1315  0025AA  0904               	iorlw	4
  1316  0025AC  6F69               	movwf	(_IO+6)& (0+255),b
  1317                           
  1318                           ; BSR set to: 1
  1319                           ;main.c: 132:      IO.hits++;
  1320  0025AE  2B74               	incf	(_IO+17)& (0+255),f,b
  1321                           
  1322                           ; BSR set to: 1
  1323                           ;main.c: 133:      if (IO.speed_update && IO.speed-- < 2) {
  1324  0025B0  5180               	movf	(_IO+29)& (0+255),w,b
  1325  0025B2  B4D8               	btfsc	status,2,c
  1326  0025B4  D024               	goto	l1057
  1327                           
  1328                           ; BSR set to: 1
  1329  0025B6  517A               	movf	(_IO+23)& (0+255),w,b
  1330  0025B8  0100               	movlb	0	; () banked
  1331  0025BA  6FB2               	movwf	??_main& (0+255),b
  1332  0025BC  0101               	movlb	1	; () banked
  1333  0025BE  517B               	movf	(_IO+24)& (0+255),w,b
  1334  0025C0  0100               	movlb	0	; () banked
  1335  0025C2  6FB3               	movwf	(??_main+1)& (0+255),b
  1336  0025C4  0E01               	movlw	1
  1337  0025C6  0101               	movlb	1	; () banked
  1338  0025C8  5F7A               	subwf	(_IO+23)& (0+255),f,b
  1339  0025CA  0E00               	movlw	0
  1340  0025CC  5B7B               	subwfb	(_IO+24)& (0+255),f,b
  1341  0025CE  0100               	movlb	0	; () banked
  1342  0025D0  51B3               	movf	(??_main+1)& (0+255),w,b
  1343  0025D2  E115               	bnz	l1057
  1344  0025D4  0E02               	movlw	2
  1345  0025D6  5DB2               	subwf	??_main& (0+255),w,b
  1346  0025D8  B0D8               	btfsc	status,0,c
  1347  0025DA  D011               	goto	l1057
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;main.c: 134:       IO.speed = 10;
  1351  0025DC  0E00               	movlw	0
  1352  0025DE  0101               	movlb	1	; () banked
  1353  0025E0  6F7B               	movwf	(_IO+24)& (0+255),b
  1354  0025E2  0E0A               	movlw	10
  1355  0025E4  6F7A               	movwf	(_IO+23)& (0+255),b
  1356                           
  1357                           ;main.c: 135:       IO.sequence_done = 1;
  1358  0025E6  0E01               	movlw	1
  1359  0025E8  6F81               	movwf	(_IO+30)& (0+255),b
  1360                           
  1361                           ;main.c: 136:       IO.seq_value = 2;
  1362  0025EA  0E02               	movlw	2
  1363  0025EC  6F73               	movwf	(_IO+16)& (0+255),b
  1364                           
  1365                           ;main.c: 137:       IO.slower = 0;
  1366  0025EE  0E00               	movlw	0
  1367  0025F0  6F7D               	movwf	(_IO+26)& (0+255),b
  1368  0025F2  0E00               	movlw	0
  1369  0025F4  6F7C               	movwf	(_IO+25)& (0+255),b
  1370                           
  1371                           ; BSR set to: 1
  1372                           ;main.c: 138:       IO.stats = IO.score;
  1373  0025F6  C176  F177         	movff	_IO+19,_IO+20
  1374                           
  1375                           ;main.c: 139:       IO.win = 1;
  1376  0025FA  0E01               	movlw	1
  1377  0025FC  6F82               	movwf	(_IO+31)& (0+255),b
  1378  0025FE                     l1057:
  1379                           
  1380                           ;main.c: 141:      IO.speed_update = 0;
  1381  0025FE  0E00               	movlw	0
  1382  002600  0101               	movlb	1	; () banked
  1383  002602  6F80               	movwf	(_IO+29)& (0+255),b
  1384                           
  1385                           ;main.c: 142:      IO.misses = 0;
  1386  002604  0E00               	movlw	0
  1387  002606  6F75               	movwf	(_IO+18)& (0+255),b
  1388  002608                     l6452:
  1389                           
  1390                           ;main.c: 146:    if (IO.outbytes[2]&0b10000000) {
  1391  002608  0101               	movlb	1	; () banked
  1392  00260A  AF6A               	btfss	(_IO+7)& (0+255),7,b
  1393  00260C  D037               	goto	l6468
  1394                           
  1395                           ; BSR set to: 1
  1396                           ;main.c: 147:     if (TimerDone(TMR_EXTRA)) {
  1397  00260E  0E04               	movlw	4
  1398  002610  ECD0  F01D         	call	_TimerDone
  1399  002614  0900               	iorlw	0
  1400  002616  B4D8               	btfsc	status,2,c
  1401  002618  D031               	goto	l6468
  1402                           
  1403                           ;main.c: 148:      IO.outbytes[1] = IO.outbytes[1] | 0x01;
  1404  00261A  0101               	movlb	1	; () banked
  1405  00261C  5169               	movf	(_IO+6)& (0+255),w,b
  1406  00261E  0901               	iorlw	1
  1407  002620  6F69               	movwf	(_IO+6)& (0+255),b
  1408                           
  1409                           ; BSR set to: 1
  1410                           ;main.c: 149:      IO.hits++;
  1411  002622  2B74               	incf	(_IO+17)& (0+255),f,b
  1412                           
  1413                           ; BSR set to: 1
  1414                           ;main.c: 150:      if (IO.speed_update && IO.speed-- < 2) {
  1415  002624  5180               	movf	(_IO+29)& (0+255),w,b
  1416  002626  B4D8               	btfsc	status,2,c
  1417  002628  D024               	goto	l1060
  1418                           
  1419                           ; BSR set to: 1
  1420  00262A  517A               	movf	(_IO+23)& (0+255),w,b
  1421  00262C  0100               	movlb	0	; () banked
  1422  00262E  6FB2               	movwf	??_main& (0+255),b
  1423  002630  0101               	movlb	1	; () banked
  1424  002632  517B               	movf	(_IO+24)& (0+255),w,b
  1425  002634  0100               	movlb	0	; () banked
  1426  002636  6FB3               	movwf	(??_main+1)& (0+255),b
  1427  002638  0E01               	movlw	1
  1428  00263A  0101               	movlb	1	; () banked
  1429  00263C  5F7A               	subwf	(_IO+23)& (0+255),f,b
  1430  00263E  0E00               	movlw	0
  1431  002640  5B7B               	subwfb	(_IO+24)& (0+255),f,b
  1432  002642  0100               	movlb	0	; () banked
  1433  002644  51B3               	movf	(??_main+1)& (0+255),w,b
  1434  002646  E115               	bnz	l1060
  1435  002648  0E02               	movlw	2
  1436  00264A  5DB2               	subwf	??_main& (0+255),w,b
  1437  00264C  B0D8               	btfsc	status,0,c
  1438  00264E  D011               	goto	l1060
  1439                           
  1440                           ; BSR set to: 0
  1441                           ;main.c: 151:       IO.speed = 10;
  1442  002650  0E00               	movlw	0
  1443  002652  0101               	movlb	1	; () banked
  1444  002654  6F7B               	movwf	(_IO+24)& (0+255),b
  1445  002656  0E0A               	movlw	10
  1446  002658  6F7A               	movwf	(_IO+23)& (0+255),b
  1447                           
  1448                           ;main.c: 152:       IO.sequence_done = 1;
  1449  00265A  0E01               	movlw	1
  1450  00265C  6F81               	movwf	(_IO+30)& (0+255),b
  1451                           
  1452                           ;main.c: 153:       IO.seq_value = 2;
  1453  00265E  0E02               	movlw	2
  1454  002660  6F73               	movwf	(_IO+16)& (0+255),b
  1455                           
  1456                           ;main.c: 154:       IO.slower = 0;
  1457  002662  0E00               	movlw	0
  1458  002664  6F7D               	movwf	(_IO+26)& (0+255),b
  1459  002666  0E00               	movlw	0
  1460  002668  6F7C               	movwf	(_IO+25)& (0+255),b
  1461                           
  1462                           ; BSR set to: 1
  1463                           ;main.c: 155:       IO.stats = IO.score;
  1464  00266A  C176  F177         	movff	_IO+19,_IO+20
  1465                           
  1466                           ;main.c: 156:       IO.win = 1;
  1467  00266E  0E01               	movlw	1
  1468  002670  6F82               	movwf	(_IO+31)& (0+255),b
  1469  002672                     l1060:
  1470                           
  1471                           ;main.c: 158:      IO.speed_update = 0;
  1472  002672  0E00               	movlw	0
  1473  002674  0101               	movlb	1	; () banked
  1474  002676  6F80               	movwf	(_IO+29)& (0+255),b
  1475                           
  1476                           ;main.c: 159:      IO.misses = 0;
  1477  002678  0E00               	movlw	0
  1478  00267A  6F75               	movwf	(_IO+18)& (0+255),b
  1479  00267C                     l6468:
  1480                           
  1481                           ;main.c: 163:    if (IO.outbytes[2]&0b01111110) {
  1482  00267C  0060  F5A8  F0B2   	movff	_IO+7,??_main
  1483  002682  0E7E               	movlw	126
  1484  002684  0100               	movlb	0	; () banked
  1485  002686  17B2               	andwf	??_main& (0+255),f,b
  1486  002688  B4D8               	btfsc	status,2,c
  1487  00268A  D770               	goto	l6424
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;main.c: 164:     if (IO.speed_update && (IO.misses++ > 6)) {
  1491  00268C  0101               	movlb	1	; () banked
  1492  00268E  5180               	movf	(_IO+29)& (0+255),w,b
  1493  002690  B4D8               	btfsc	status,2,c
  1494  002692  D76C               	goto	l6424
  1495                           
  1496                           ; BSR set to: 1
  1497  002694  EE20  F175         	lfsr	2,_IO+18
  1498  002698  006F FF7C  F0B2    	movff	indf2,??_main
  1499  00269E  0E01               	movlw	1
  1500  0026A0  26DF               	addwf	indf2,f,c
  1501  0026A2  0E06               	movlw	6
  1502  0026A4  0100               	movlb	0	; () banked
  1503  0026A6  65B2               	cpfsgt	??_main& (0+255),b
  1504  0026A8  D761               	goto	l6424
  1505                           
  1506                           ; BSR set to: 0
  1507                           ;main.c: 165:      if (IO.score-- < 10)
  1508  0026AA  EE20  F176         	lfsr	2,_IO+19
  1509  0026AE  006F FF7C  F0B2    	movff	indf2,??_main
  1510  0026B4  0E01               	movlw	1
  1511  0026B6  5EDF               	subwf	indf2,f,c
  1512  0026B8  0E0A               	movlw	10
  1513  0026BA  61B2               	cpfslt	??_main& (0+255),b
  1514  0026BC  D003               	goto	l1063
  1515                           
  1516                           ; BSR set to: 0
  1517                           ;main.c: 166:       IO.score = 10;
  1518  0026BE  0E0A               	movlw	10
  1519  0026C0  0101               	movlb	1	; () banked
  1520  0026C2  6F76               	movwf	(_IO+19)& (0+255),b
  1521  0026C4                     l1063:
  1522                           
  1523                           ;main.c: 167:      IO.misses = 0;
  1524  0026C4  0E00               	movlw	0
  1525  0026C6  0101               	movlb	1	; () banked
  1526  0026C8  6F75               	movwf	(_IO+18)& (0+255),b
  1527                           
  1528                           ;main.c: 168:      IO.slower = 10;
  1529  0026CA  0E00               	movlw	0
  1530  0026CC  6F7D               	movwf	(_IO+26)& (0+255),b
  1531  0026CE  0E0A               	movlw	10
  1532  0026D0  6F7C               	movwf	(_IO+25)& (0+255),b
  1533                           
  1534                           ;main.c: 169:      IO.speed_update = 0;
  1535  0026D2  0E00               	movlw	0
  1536  0026D4  6F80               	movwf	(_IO+29)& (0+255),b
  1537  0026D6  D74A               	goto	l6424
  1538  0026D8                     l6478:
  1539                           
  1540                           ; BSR set to: 1
  1541                           ;main.c: 173:    StartTimer(TMR_EXTRA, 500);
  1542  0026D8  0E01               	movlw	1
  1543  0026DA  6E07               	movwf	(StartTimer@count+1)^0,c
  1544  0026DC  0EF4               	movlw	244
  1545  0026DE  6E06               	movwf	StartTimer@count^0,c
  1546  0026E0  0E04               	movlw	4
  1547  0026E2  EC0E  F01D         	call	_StartTimer
  1548                           
  1549                           ;main.c: 174:    IO.outbytes[1] = IO.outbytes[1] & (~0x02);
  1550  0026E6  0101               	movlb	1	; () banked
  1551  0026E8  5169               	movf	(_IO+6)& (0+255),w,b
  1552  0026EA  0BFD               	andlw	253
  1553  0026EC  6F69               	movwf	(_IO+6)& (0+255),b
  1554                           
  1555                           ; BSR set to: 1
  1556                           ;main.c: 175:    IO.outbytes[1] = IO.outbytes[1] & (~0x04);
  1557  0026EE  5169               	movf	(_IO+6)& (0+255),w,b
  1558  0026F0  0BFB               	andlw	251
  1559  0026F2  6F69               	movwf	(_IO+6)& (0+255),b
  1560                           
  1561                           ; BSR set to: 1
  1562                           ;main.c: 176:    IO.outbytes[1] = IO.outbytes[1] & (~0x01);
  1563  0026F4  5169               	movf	(_IO+6)& (0+255),w,b
  1564  0026F6  0BFE               	andlw	254
  1565  0026F8  6F69               	movwf	(_IO+6)& (0+255),b
  1566                           
  1567                           ; BSR set to: 1
  1568                           ;main.c: 177:    IO.speed_update = 1;
  1569  0026FA  0E01               	movlw	1
  1570  0026FC  6F80               	movwf	(_IO+29)& (0+255),b
  1571                           
  1572                           ; BSR set to: 1
  1573                           ;main.c: 178:    if (TimerDone(TMR_SEQ)) {
  1574  0026FE  0E05               	movlw	5
  1575  002700  ECD0  F01D         	call	_TimerDone
  1576  002704  0900               	iorlw	0
  1577  002706  B4D8               	btfsc	status,2,c
  1578  002708  D731               	goto	l6424
  1579                           
  1580                           ;main.c: 179:     IO.seq_value = 0;
  1581  00270A  0E00               	movlw	0
  1582  00270C  0101               	movlb	1	; () banked
  1583  00270E  6F73               	movwf	(_IO+16)& (0+255),b
  1584                           
  1585                           ;main.c: 180:     if (IO.win) {
  1586  002710  5182               	movf	(_IO+31)& (0+255),w,b
  1587  002712  B4D8               	btfsc	status,2,c
  1588  002714  D72B               	goto	l6424
  1589                           
  1590                           ; BSR set to: 1
  1591                           ;main.c: 181:      IO.win = 0;
  1592  002716  0E00               	movlw	0
  1593  002718  6F82               	movwf	(_IO+31)& (0+255),b
  1594                           
  1595                           ;main.c: 182:      IO.hits = 0;
  1596  00271A  0E00               	movlw	0
  1597  00271C  6F74               	movwf	(_IO+17)& (0+255),b
  1598                           
  1599                           ;main.c: 183:      IO.misses = 0;
  1600  00271E  0E00               	movlw	0
  1601  002720  6F75               	movwf	(_IO+18)& (0+255),b
  1602                           
  1603                           ;main.c: 184:      IO.clock = 0;
  1604  002722  0E00               	movlw	0
  1605  002724  6F7F               	movwf	(_IO+28)& (0+255),b
  1606  002726  0E00               	movlw	0
  1607  002728  6F7E               	movwf	(_IO+27)& (0+255),b
  1608                           
  1609                           ;main.c: 187:   }
  1610  00272A  D720               	goto	l6424
  1611  00272C                     __end_of_main:
  1612                           	opt callstack 0
  1613                           
  1614 ;; *************** function _work_sw *****************
  1615 ;; Defined at:
  1616 ;;		line 71 in file "main.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;		None
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  buffer         64   18[BANK0 ] unsigned char [64]
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      void 
  1623 ;; Registers used:
  1624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1631 ;;      Locals:         0      64       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1633 ;;      Totals:         0      64       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1634 ;;Total ram usage:       64 bytes
  1635 ;; Hardware stack levels used:    1
  1636 ;; Hardware stack levels required when called:   13
  1637 ;; This function calls:
  1638 ;;		_StartTimer
  1639 ;;		_TimerDone
  1640 ;;		_eaDogM_WriteStringAtPos
  1641 ;;		_sprintf
  1642 ;; This function is called by:
  1643 ;;		_main
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           	psect	text1
  1648  0034CC                     __ptext1:
  1649                           	opt callstack 0
  1650  0034CC                     _work_sw:
  1651                           	opt callstack 17
  1652                           
  1653                           ;main.c: 73:  char buffer[64];;main.c: 74:  if (TimerDone(TMR_INIT)) {
  1654                           
  1655                           ;incstack = 0
  1656  0034CC  0E01               	movlw	1
  1657  0034CE  ECD0  F01D         	call	_TimerDone
  1658  0034D2  0900               	iorlw	0
  1659  0034D4  B4D8               	btfsc	status,2,c
  1660  0034D6  0012               	return	
  1661                           
  1662                           ;main.c: 75:   IO.clock++;
  1663  0034D8  0101               	movlb	1	; () banked
  1664  0034DA  4B7E               	infsnz	(_IO+27)& (0+255),f,b
  1665  0034DC  2B7F               	incf	(_IO+28)& (0+255),f,b
  1666                           
  1667                           ; BSR set to: 1
  1668                           ;main.c: 76:   sprintf(buffer, " H %i, M %i     ", IO.hits, IO.misses);
  1669  0034DE  0E72               	movlw	low work_sw@buffer
  1670  0034E0  0100               	movlb	0	; () banked
  1671  0034E2  6F64               	movwf	sprintf@s& (0+255),b
  1672  0034E4  0E01               	movlw	low STR_1
  1673  0034E6  6F65               	movwf	sprintf@fmt& (0+255),b
  1674  0034E8  0060  F5D0  F066   	movff	_IO+17,?_sprintf+2
  1675  0034EE  6B67               	clrf	(?_sprintf+3)& (0+255),b
  1676  0034F0  0060  F5D4  F068   	movff	_IO+18,?_sprintf+4
  1677  0034F6  6B69               	clrf	(?_sprintf+5)& (0+255),b
  1678  0034F8  EC64  F01C         	call	_sprintf	;wreg free
  1679                           
  1680                           ; BSR set to: 0
  1681                           ;main.c: 77:   eaDogM_WriteStringAtPos(1, 0, buffer);
  1682  0034FC  0E00               	movlw	0
  1683  0034FE  6E10               	movwf	eaDogM_WriteStringAtPos@c^0,c
  1684  003500  0E72               	movlw	low work_sw@buffer
  1685  003502  6E11               	movwf	eaDogM_WriteStringAtPos@strPtr^0,c
  1686  003504  6A12               	clrf	(eaDogM_WriteStringAtPos@strPtr+1)^0,c
  1687  003506  0E01               	movlw	1
  1688  003508  EC60  F01E         	call	_eaDogM_WriteStringAtPos
  1689                           
  1690                           ;main.c: 78:   sprintf(buffer, " Score %i %i    ", IO.score, IO.clock);
  1691  00350C  0E72               	movlw	low work_sw@buffer
  1692  00350E  0100               	movlb	0	; () banked
  1693  003510  6F64               	movwf	sprintf@s& (0+255),b
  1694  003512  0E12               	movlw	low STR_2
  1695  003514  6F65               	movwf	sprintf@fmt& (0+255),b
  1696  003516  0060  F5D8  F066   	movff	_IO+19,?_sprintf+2
  1697  00351C  6B67               	clrf	(?_sprintf+3)& (0+255),b
  1698  00351E  0060  F5F8  F068   	movff	_IO+27,?_sprintf+4
  1699  003524  0060  F5FC  F069   	movff	_IO+28,?_sprintf+5
  1700  00352A  EC64  F01C         	call	_sprintf	;wreg free
  1701                           
  1702                           ; BSR set to: 0
  1703                           ;main.c: 79:   eaDogM_WriteStringAtPos(2, 0, buffer);
  1704  00352E  0E00               	movlw	0
  1705  003530  6E10               	movwf	eaDogM_WriteStringAtPos@c^0,c
  1706  003532  0E72               	movlw	low work_sw@buffer
  1707  003534  6E11               	movwf	eaDogM_WriteStringAtPos@strPtr^0,c
  1708  003536  6A12               	clrf	(eaDogM_WriteStringAtPos@strPtr+1)^0,c
  1709  003538  0E02               	movlw	2
  1710  00353A  EC60  F01E         	call	_eaDogM_WriteStringAtPos
  1711                           
  1712                           ;main.c: 80:   StartTimer(TMR_INIT, 1000);
  1713  00353E  0E03               	movlw	3
  1714  003540  6E07               	movwf	(StartTimer@count+1)^0,c
  1715  003542  0EE8               	movlw	232
  1716  003544  6E06               	movwf	StartTimer@count^0,c
  1717  003546  0E01               	movlw	1
  1718  003548  EC0E  F01D         	call	_StartTimer
  1719  00354C  0012               	return		;funcret
  1720  00354E                     __end_of_work_sw:
  1721                           	opt callstack 0
  1722                           
  1723 ;; *************** function _sprintf *****************
  1724 ;; Defined at:
  1725 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  s               1    4[BANK0 ] PTR unsigned char 
  1728 ;;		 -> work_sw@buffer(64), 
  1729 ;;  fmt             1    5[BANK0 ] PTR const unsigned char 
  1730 ;;		 -> STR_2(17), STR_1(17), 
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;  f               5   13[BANK0 ] struct _IO_FILE
  1733 ;;  ret             2    0        int 
  1734 ;;  ap              1   12[BANK0 ] PTR void [1]
  1735 ;;		 -> ?_printf(2), ?_sprintf(2), 
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  2    4[BANK0 ] int 
  1738 ;; Registers used:
  1739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1740 ;; Tracked objects:
  1741 ;;		On entry : 3F/0
  1742 ;;		On exit  : 3F/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1745 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1746 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1748 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1749 ;;Total ram usage:       14 bytes
  1750 ;; Hardware stack levels used:    1
  1751 ;; Hardware stack levels required when called:   12
  1752 ;; This function calls:
  1753 ;;		_vfprintf
  1754 ;; This function is called by:
  1755 ;;		_work_sw
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           	psect	text2
  1760  0038C8                     __ptext2:
  1761                           	opt callstack 0
  1762  0038C8                     _sprintf:
  1763                           	opt callstack 17
  1764                           
  1765                           ; BSR set to: 0
  1766                           
  1767                           ;incstack = 0
  1768  0038C8  0E66               	movlw	low (?_sprintf+2)
  1769  0038CA  6F6C               	movwf	sprintf@ap& (0+255),b
  1770  0038CC  0060  F190  F06D   	movff	sprintf@s,sprintf@f
  1771                           
  1772                           ; BSR set to: 0
  1773  0038D2  0E00               	movlw	0
  1774  0038D4  6F6F               	movwf	(sprintf@f+2)& (0+255),b
  1775  0038D6  0E00               	movlw	0
  1776  0038D8  6F6E               	movwf	(sprintf@f+1)& (0+255),b
  1777                           
  1778                           ; BSR set to: 0
  1779  0038DA  0E00               	movlw	0
  1780  0038DC  6F71               	movwf	(sprintf@f+4)& (0+255),b
  1781  0038DE  0E00               	movlw	0
  1782  0038E0  6F70               	movwf	(sprintf@f+3)& (0+255),b
  1783                           
  1784                           ; BSR set to: 0
  1785  0038E2  0E6D               	movlw	low sprintf@f
  1786  0038E4  6F60               	movwf	vfprintf@fp& (0+255),b
  1787  0038E6  6B61               	clrf	(vfprintf@fp+1)& (0+255),b
  1788  0038E8  0060  F194  F062   	movff	sprintf@fmt,vfprintf@fmt
  1789  0038EE  0E6C               	movlw	low sprintf@ap
  1790  0038F0  6F63               	movwf	vfprintf@ap& (0+255),b
  1791  0038F2  EC45  F01B         	call	_vfprintf	;wreg free
  1792                           
  1793                           ; BSR set to: 0
  1794  0038F6  5164               	movf	sprintf@s& (0+255),w,b
  1795  0038F8  256E               	addwf	(sprintf@f+1)& (0+255),w,b
  1796  0038FA  6ED9               	movwf	fsr2l,c
  1797  0038FC  6ADA               	clrf	fsr2h,c
  1798  0038FE  0E00               	movlw	0
  1799  003900  6EDF               	movwf	indf2,c
  1800                           
  1801                           ; BSR set to: 0
  1802  003902  0012               	return		;funcret
  1803  003904                     __end_of_sprintf:
  1804                           	opt callstack 0
  1805                           
  1806 ;; *************** function _eaDogM_WriteStringAtPos *****************
  1807 ;; Defined at:
  1808 ;;		line 121 in file "eadog.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;  r               1    wreg     const unsigned char 
  1811 ;;  c               1   15[COMRAM] const unsigned char 
  1812 ;;  strPtr          2   16[COMRAM] PTR unsigned char 
  1813 ;;		 -> STR_3(11), work_sw@buffer(64), 
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;  r               1   18[COMRAM] const unsigned char 
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      void 
  1818 ;; Registers used:
  1819 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1825 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1826 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1828 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1829 ;;Total ram usage:        4 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; Hardware stack levels required when called:    6
  1832 ;; This function calls:
  1833 ;;		_eaDogM_WriteString
  1834 ;;		_send_lcd_cmd
  1835 ;; This function is called by:
  1836 ;;		_work_sw
  1837 ;;		_main
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           	psect	text3
  1842  003CC0                     __ptext3:
  1843                           	opt callstack 0
  1844  003CC0                     _eaDogM_WriteStringAtPos:
  1845                           	opt callstack 23
  1846                           
  1847                           ; BSR set to: 0
  1848                           ;incstack = 0
  1849                           ;eaDogM_WriteStringAtPos@r stored from wreg
  1850  003CC0  6E13               	movwf	eaDogM_WriteStringAtPos@r^0,c
  1851                           
  1852                           ;eadog.c: 121: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 122: {;eadog.c: 123:  send_lcd_cmd((0b10000000 + (r * 16) + c));
  1853  003CC2  5013               	movf	eaDogM_WriteStringAtPos@r^0,w,c
  1854  003CC4  0D10               	mullw	16
  1855  003CC6  50F3               	movf	243,w,c
  1856  003CC8  2410               	addwf	eaDogM_WriteStringAtPos@c^0,w,c
  1857  003CCA  0F80               	addlw	128
  1858  003CCC  ECBE  F01D         	call	_send_lcd_cmd
  1859                           
  1860                           ; BSR set to: 0
  1861                           ;eadog.c: 124:  eaDogM_WriteString(strPtr);
  1862  003CD0  0060  F044  F00A   	movff	eaDogM_WriteStringAtPos@strPtr,eaDogM_WriteString@strPtr
  1863  003CD6  0060  F048  F00B   	movff	eaDogM_WriteStringAtPos@strPtr+1,eaDogM_WriteString@strPtr+1
  1864  003CDC  EC7A  F017         	call	_eaDogM_WriteString	;wreg free
  1865  003CE0  0012               	return		;funcret
  1866  003CE2                     __end_of_eaDogM_WriteStringAtPos:
  1867                           	opt callstack 0
  1868                           
  1869 ;; *************** function _eaDogM_WriteString *****************
  1870 ;; Defined at:
  1871 ;;		line 105 in file "eadog.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;  strPtr          2    9[COMRAM] PTR unsigned char 
  1874 ;;		 -> STR_3(11), work_sw@buffer(64), 
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;  bytesWritten    1   14[COMRAM] unsigned char 
  1877 ;;  i               1   13[COMRAM] unsigned char 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      void 
  1880 ;; Registers used:
  1881 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1882 ;; Tracked objects:
  1883 ;;		On entry : 3F/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1887 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1888 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1889 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1890 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1891 ;;Total ram usage:        6 bytes
  1892 ;; Hardware stack levels used:    1
  1893 ;; Hardware stack levels required when called:    5
  1894 ;; This function calls:
  1895 ;;		_SPI1_Exchange8bit
  1896 ;;		_strlen
  1897 ;;		_wdtdelay
  1898 ;; This function is called by:
  1899 ;;		_eaDogM_WriteStringAtPos
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           	psect	text4
  1904  002EF4                     __ptext4:
  1905                           	opt callstack 0
  1906  002EF4                     _eaDogM_WriteString:
  1907                           	opt callstack 23
  1908                           
  1909                           ; BSR set to: 0
  1910                           ;eadog.c: 105: void eaDogM_WriteString(char *strPtr);eadog.c: 106: {;eadog.c: 107:  uint
      +                          8_t i = strlen(strPtr);
  1911                           
  1912                           ;incstack = 0
  1913  002EF4  0060  F028  F006   	movff	eaDogM_WriteString@strPtr,strlen@s
  1914  002EFA  0060  F02C  F007   	movff	eaDogM_WriteString@strPtr+1,strlen@s+1
  1915  002F00  EC72  F01B         	call	_strlen	;wreg free
  1916  002F04  5006               	movf	?_strlen^0,w,c
  1917  002F06  6E0E               	movwf	eaDogM_WriteString@i^0,c
  1918                           
  1919                           ;eadog.c: 108:  uint8_t bytesWritten = 0;
  1920  002F08  0E00               	movlw	0
  1921  002F0A  6E0F               	movwf	eaDogM_WriteString@bytesWritten^0,c
  1922  002F0C  82BC               	bsf	188,1,c	;volatile
  1923  002F0E  94BC               	bcf	188,2,c	;volatile
  1924                           
  1925                           ;eadog.c: 112:  if (i > 64) strPtr[64] = 0;
  1926  002F10  0E40               	movlw	64
  1927  002F12  640E               	cpfsgt	eaDogM_WriteString@i^0,c
  1928  002F14  D046               	goto	l5884
  1929  002F16  0E40               	movlw	64
  1930  002F18  240A               	addwf	eaDogM_WriteString@strPtr^0,w,c
  1931  002F1A  6E0C               	movwf	??_eaDogM_WriteString^0,c
  1932  002F1C  0E00               	movlw	0
  1933  002F1E  200B               	addwfc	(eaDogM_WriteString@strPtr+1)^0,w,c
  1934  002F20  6E0D               	movwf	(??_eaDogM_WriteString+1)^0,c
  1935  002F22  0060  F033  FFF6   	movff	??_eaDogM_WriteString,tblptrl
  1936  002F28  0060  F037  FFF7   	movff	??_eaDogM_WriteString+1,tblptrh
  1937  002F2E  0E00               	movlw	low (__smallconst shr (0+16))
  1938  002F30  6EF8               	movwf	tblptru,c
  1939  002F32  0E1F               	movlw	(high __ramtop+-1)
  1940  002F34  64F7               	cpfsgt	tblptrh,c
  1941  002F36  D004               	bra	u5087
  1942  002F38  0E00               	movlw	0
  1943  002F3A  6EF5               	movwf	tablat,c
  1944  002F3C  000C               	tblwt		*
  1945  002F3E  D008               	bra	u5080
  1946  002F40                     u5087:
  1947  002F40  006F FFDB FFE1     	movff	tblptrl,fsr1l
  1948  002F46  006F FFDF FFE2     	movff	tblptrh,fsr1h
  1949  002F4C  0E00               	movlw	0
  1950  002F4E  6EE7               	movwf	indf1,c
  1951  002F50                     u5080:
  1952  002F50  D028               	goto	l5884
  1953  002F52                     l5878:
  1954                           
  1955                           ;eadog.c: 115:   wdtdelay(11);
  1956  002F52  0E0B               	movlw	11
  1957  002F54  6E06               	movwf	wdtdelay@delay^0,c
  1958  002F56  0E00               	movlw	0
  1959  002F58  6E07               	movwf	(wdtdelay@delay+1)^0,c
  1960  002F5A  0E00               	movlw	0
  1961  002F5C  6E08               	movwf	(wdtdelay@delay+2)^0,c
  1962  002F5E  0E00               	movlw	0
  1963  002F60  6E09               	movwf	(wdtdelay@delay+3)^0,c
  1964  002F62  ECA0  F01C         	call	_wdtdelay	;wreg free
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;eadog.c: 116:   SPI1_Exchange8bit(strPtr[bytesWritten]);
  1968  002F66  500F               	movf	eaDogM_WriteString@bytesWritten^0,w,c
  1969  002F68  240A               	addwf	eaDogM_WriteString@strPtr^0,w,c
  1970  002F6A  6E0C               	movwf	??_eaDogM_WriteString^0,c
  1971  002F6C  0E00               	movlw	0
  1972  002F6E  200B               	addwfc	(eaDogM_WriteString@strPtr+1)^0,w,c
  1973  002F70  6E0D               	movwf	(??_eaDogM_WriteString+1)^0,c
  1974  002F72  0060  F033  FFF6   	movff	??_eaDogM_WriteString,tblptrl
  1975  002F78  0060  F037  FFF7   	movff	??_eaDogM_WriteString+1,tblptrh
  1976  002F7E  0E00               	movlw	low (__smallconst shr (0+16))
  1977  002F80  6EF8               	movwf	tblptru,c
  1978  002F82  0E1F               	movlw	(high __ramtop+-1)
  1979  002F84  64F7               	cpfsgt	tblptrh,c
  1980  002F86  D003               	bra	u5097
  1981  002F88  0008               	tblrd		*
  1982  002F8A  50F5               	movf	tablat,w,c
  1983  002F8C  D007               	bra	u5090
  1984  002F8E                     u5097:
  1985  002F8E  006F FFDB FFE1     	movff	tblptrl,fsr1l
  1986  002F94  006F FFDF FFE2     	movff	tblptrh,fsr1h
  1987  002F9A  50E7               	movf	indf1,w,c
  1988  002F9C                     u5090:
  1989  002F9C  ECBE  F01E         	call	_SPI1_Exchange8bit
  1990                           
  1991                           ; BSR set to: 61
  1992                           ;eadog.c: 117:   bytesWritten++;
  1993  002FA0  2A0F               	incf	eaDogM_WriteString@bytesWritten^0,f,c
  1994  002FA2                     l5884:
  1995                           
  1996                           ;eadog.c: 114:  while (bytesWritten < i) {
  1997  002FA2  500E               	movf	eaDogM_WriteString@i^0,w,c
  1998  002FA4  5C0F               	subwf	eaDogM_WriteString@bytesWritten^0,w,c
  1999  002FA6  B0D8               	btfsc	status,0,c
  2000  002FA8  0012               	return	
  2001  002FAA  D7D3               	goto	l5878
  2002  002FAC                     __end_of_eaDogM_WriteString:
  2003                           	opt callstack 0
  2004                           
  2005 ;; *************** function _led_lightshow *****************
  2006 ;; Defined at:
  2007 ;;		line 142 in file "d232.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;  seq             1    wreg     unsigned char 
  2010 ;;  speed           2   13[COMRAM] unsigned short 
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;  seq             1   17[COMRAM] unsigned char 
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      void 
  2015 ;; Registers used:
  2016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2017 ;; Tracked objects:
  2018 ;;		On entry : 3F/1
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2022 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2023 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2024 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2025 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2026 ;;Total ram usage:        5 bytes
  2027 ;; Hardware stack levels used:    1
  2028 ;; Hardware stack levels required when called:    5
  2029 ;; This function calls:
  2030 ;;		_StartTimer
  2031 ;;		___awdiv
  2032 ;; This function is called by:
  2033 ;;		_main
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           	psect	text5
  2038  002E0E                     __ptext5:
  2039                           	opt callstack 0
  2040  002E0E                     _led_lightshow:
  2041                           	opt callstack 25
  2042                           
  2043                           ;incstack = 0
  2044                           ;led_lightshow@seq stored from wreg
  2045  002E0E  6E12               	movwf	led_lightshow@seq^0,c
  2046                           
  2047                           ;d232.c: 142: void led_lightshow(uint8_t seq, uint16_t speed);d232.c: 143: {;d232.c: 144
      +                          :  static uint16_t j = 0;;d232.c: 145:  static uint8_t cylon = 0xff;;d232.c: 146:  stati
      +                          c int16_t alive_led = 0;;d232.c: 147:  static _Bool LED_UP = 1;;d232.c: 149:  if (seq ==
      +                           1) {
  2048  002E10  0412               	decf	led_lightshow@seq^0,w,c
  2049  002E12  A4D8               	btfss	status,2,c
  2050  002E14  D003               	goto	l6360
  2051                           
  2052                           ;d232.c: 150:   IO.outbytes[2] = IO.inbytes[0];
  2053  002E16  C163  F16A         	movff	_IO,_IO+7
  2054                           
  2055                           ;d232.c: 151:   return;
  2056  002E1A  0012               	return	
  2057  002E1C                     l6360:
  2058                           
  2059                           ;d232.c: 154:  if (seq == 2) {
  2060  002E1C  0E02               	movlw	2
  2061  002E1E  1812               	xorwf	led_lightshow@seq^0,w,c
  2062  002E20  A4D8               	btfss	status,2,c
  2063  002E22  D010               	goto	l6372
  2064                           
  2065                           ;d232.c: 155:   if (IO.sequence_done) {
  2066  002E24  0101               	movlb	1	; () banked
  2067  002E26  5181               	movf	(_IO+30)& (0+255),w,b
  2068  002E28  B4D8               	btfsc	status,2,c
  2069  002E2A  D009               	goto	l6368
  2070                           
  2071                           ; BSR set to: 1
  2072                           ;d232.c: 156:    IO.sequence_done = 0;
  2073  002E2C  0E00               	movlw	0
  2074  002E2E  6F81               	movwf	(_IO+30)& (0+255),b
  2075                           
  2076                           ; BSR set to: 1
  2077                           ;d232.c: 157:    StartTimer(TMR_SEQ, 3000);
  2078  002E30  0E0B               	movlw	11
  2079  002E32  6E07               	movwf	(StartTimer@count+1)^0,c
  2080  002E34  0EB8               	movlw	184
  2081  002E36  6E06               	movwf	StartTimer@count^0,c
  2082  002E38  0E05               	movlw	5
  2083  002E3A  EC0E  F01D         	call	_StartTimer
  2084  002E3E                     l6368:
  2085                           
  2086                           ;d232.c: 159:   IO.outbytes[2] = 0xff;
  2087  002E3E  0101               	movlb	1	; () banked
  2088  002E40  696A               	setf	(_IO+7)& (0+255),b
  2089  002E42  0012               	return	
  2090  002E44                     l6372:
  2091                           
  2092                           ;d232.c: 163:  if (j++ >= speed) {
  2093  002E44  0100               	movlb	0	; () banked
  2094  002E46  51E6               	movf	led_lightshow@j& (0+255),w,b
  2095  002E48  6E10               	movwf	??_led_lightshow^0,c
  2096  002E4A  51E7               	movf	(led_lightshow@j+1)& (0+255),w,b
  2097  002E4C  6E11               	movwf	(??_led_lightshow+1)^0,c
  2098  002E4E  4BE6               	infsnz	led_lightshow@j& (0+255),f,b
  2099  002E50  2BE7               	incf	(led_lightshow@j+1)& (0+255),f,b
  2100  002E52  500E               	movf	led_lightshow@speed^0,w,c
  2101  002E54  5C10               	subwf	??_led_lightshow^0,w,c
  2102  002E56  500F               	movf	(led_lightshow@speed+1)^0,w,c
  2103  002E58  5811               	subwfb	(??_led_lightshow+1)^0,w,c
  2104  002E5A  A0D8               	btfss	status,0,c
  2105  002E5C  0012               	return	
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;d232.c: 167:    IO.outbytes[2] = cylon;
  2109  002E5E  C0FD  F16A         	movff	led_lightshow@cylon,_IO+7
  2110                           
  2111                           ; BSR set to: 0
  2112                           ;d232.c: 170:   if (LED_UP && (alive_led != 0)) {
  2113  002E62  51FC               	movf	led_lightshow@LED_UP& (0+255),w,b
  2114  002E64  B4D8               	btfsc	status,2,c
  2115  002E66  D00C               	goto	l6384
  2116                           
  2117                           ; BSR set to: 0
  2118  002E68  51E4               	movf	led_lightshow@alive_led& (0+255),w,b
  2119  002E6A  11E5               	iorwf	(led_lightshow@alive_led+1)& (0+255),w,b
  2120  002E6C  B4D8               	btfsc	status,2,c
  2121  002E6E  D008               	goto	l6384
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;d232.c: 171:    alive_led = alive_led * 2;
  2125  002E70  90D8               	bcf	status,0,c
  2126  002E72  35E4               	rlcf	led_lightshow@alive_led& (0+255),w,b
  2127  002E74  6FE4               	movwf	led_lightshow@alive_led& (0+255),b
  2128  002E76  35E5               	rlcf	(led_lightshow@alive_led+1)& (0+255),w,b
  2129  002E78  6FE5               	movwf	(led_lightshow@alive_led+1)& (0+255),b
  2130                           
  2131                           ;d232.c: 172:    cylon = cylon << 1;
  2132  002E7A  51FD               	movf	led_lightshow@cylon& (0+255),w,b
  2133  002E7C  25FD               	addwf	led_lightshow@cylon& (0+255),w,b
  2134  002E7E  D018               	goto	L1
  2135  002E80                     l6384:
  2136                           
  2137                           ; BSR set to: 0
  2138                           ;d232.c: 174:    if (alive_led != 0) alive_led = alive_led / 2;
  2139  002E80  51E4               	movf	led_lightshow@alive_led& (0+255),w,b
  2140  002E82  11E5               	iorwf	(led_lightshow@alive_led+1)& (0+255),w,b
  2141  002E84  B4D8               	btfsc	status,2,c
  2142  002E86  D012               	goto	l6388
  2143                           
  2144                           ; BSR set to: 0
  2145  002E88  0060  F390  F006   	movff	led_lightshow@alive_led,___awdiv@dividend
  2146  002E8E  0060  F394  F007   	movff	led_lightshow@alive_led+1,___awdiv@dividend+1
  2147  002E94  0E00               	movlw	0
  2148  002E96  6E09               	movwf	(___awdiv@divisor+1)^0,c
  2149  002E98  0E02               	movlw	2
  2150  002E9A  6E08               	movwf	___awdiv@divisor^0,c
  2151  002E9C  EC22  F01A         	call	___awdiv	;wreg free
  2152  002EA0  0060  F018  F0E4   	movff	?___awdiv,led_lightshow@alive_led
  2153  002EA6  0060  F01C  F0E5   	movff	?___awdiv+1,led_lightshow@alive_led+1
  2154  002EAC                     l6388:
  2155                           
  2156                           ; BSR set to: 0
  2157                           ;d232.c: 175:    cylon = cylon >> 1;
  2158  002EAC  90D8               	bcf	status,0,c
  2159  002EAE  31FD               	rrcf	led_lightshow@cylon& (0+255),w,b
  2160  002EB0                     L1:
  2161  002EB0  6FFD               	movwf	led_lightshow@cylon& (0+255),b
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;d232.c: 177:   if (alive_led < 2) {
  2165  002EB2  BFE5               	btfsc	(led_lightshow@alive_led+1)& (0+255),7,b
  2166  002EB4  D006               	goto	u5490
  2167  002EB6  51E5               	movf	(led_lightshow@alive_led+1)& (0+255),w,b
  2168  002EB8  E10A               	bnz	l6394
  2169  002EBA  0E02               	movlw	2
  2170  002EBC  5DE4               	subwf	led_lightshow@alive_led& (0+255),w,b
  2171  002EBE  B0D8               	btfsc	status,0,c
  2172  002EC0  D006               	goto	l6394
  2173  002EC2                     u5490:
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;d232.c: 178:    alive_led = 2;
  2177  002EC2  0E00               	movlw	0
  2178  002EC4  6FE5               	movwf	(led_lightshow@alive_led+1)& (0+255),b
  2179  002EC6  0E02               	movlw	2
  2180  002EC8  6FE4               	movwf	led_lightshow@alive_led& (0+255),b
  2181                           
  2182                           ;d232.c: 179:    LED_UP = 1;
  2183  002ECA  0E01               	movlw	1
  2184  002ECC  D00D               	goto	L2
  2185  002ECE                     l6394:
  2186                           
  2187                           ; BSR set to: 0
  2188                           ;d232.c: 181:    if (alive_led > 128) {
  2189  002ECE  BFE5               	btfsc	(led_lightshow@alive_led+1)& (0+255),7,b
  2190  002ED0  D00C               	goto	l1156
  2191  002ED2  51E5               	movf	(led_lightshow@alive_led+1)& (0+255),w,b
  2192  002ED4  E104               	bnz	u5500
  2193  002ED6  0E81               	movlw	129
  2194  002ED8  5DE4               	subwf	led_lightshow@alive_led& (0+255),w,b
  2195  002EDA  A0D8               	btfss	status,0,c
  2196  002EDC  D006               	goto	l1156
  2197  002EDE                     u5500:
  2198                           
  2199                           ; BSR set to: 0
  2200                           ;d232.c: 182:     alive_led = 128;
  2201  002EDE  0E00               	movlw	0
  2202  002EE0  6FE5               	movwf	(led_lightshow@alive_led+1)& (0+255),b
  2203  002EE2  0E80               	movlw	128
  2204  002EE4  6FE4               	movwf	led_lightshow@alive_led& (0+255),b
  2205                           
  2206                           ;d232.c: 183:     LED_UP = 0;
  2207  002EE6  0E00               	movlw	0
  2208  002EE8                     L2:
  2209  002EE8  6FFC               	movwf	led_lightshow@LED_UP& (0+255),b
  2210  002EEA                     l1156:
  2211                           
  2212                           ; BSR set to: 0
  2213                           ;d232.c: 186:   j = 0;
  2214  002EEA  0E00               	movlw	0
  2215  002EEC  6FE7               	movwf	(led_lightshow@j+1)& (0+255),b
  2216  002EEE  0E00               	movlw	0
  2217  002EF0  6FE6               	movwf	led_lightshow@j& (0+255),b
  2218  002EF2  0012               	return		;funcret
  2219  002EF4                     __end_of_led_lightshow:
  2220                           	opt callstack 0
  2221                           
  2222 ;; *************** function ___awdiv *****************
  2223 ;; Defined at:
  2224 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;  dividend        2    5[COMRAM] int 
  2227 ;;  divisor         2    7[COMRAM] int 
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  quotient        2   11[COMRAM] int 
  2230 ;;  sign            1   10[COMRAM] unsigned char 
  2231 ;;  counter         1    9[COMRAM] unsigned char 
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  2    5[COMRAM] int 
  2234 ;; Registers used:
  2235 ;;		wreg, status,2, status,0
  2236 ;; Tracked objects:
  2237 ;;		On entry : 3F/0
  2238 ;;		On exit  : 3F/0
  2239 ;;		Unchanged: 3F/0
  2240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2241 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2242 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2244 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2245 ;;Total ram usage:        8 bytes
  2246 ;; Hardware stack levels used:    1
  2247 ;; Hardware stack levels required when called:    4
  2248 ;; This function calls:
  2249 ;;		Nothing
  2250 ;; This function is called by:
  2251 ;;		_led_lightshow
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           	psect	text6
  2256  003444                     __ptext6:
  2257                           	opt callstack 0
  2258  003444                     ___awdiv:
  2259                           	opt callstack 25
  2260                           
  2261                           ; BSR set to: 0
  2262                           
  2263                           ;incstack = 0
  2264  003444  0E00               	movlw	0
  2265  003446  6E0B               	movwf	___awdiv@sign^0,c
  2266                           
  2267                           ; BSR set to: 0
  2268  003448  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  2269  00344A  D006               	goto	l6136
  2270                           
  2271                           ; BSR set to: 0
  2272  00344C  6C08               	negf	___awdiv@divisor^0,c
  2273  00344E  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  2274  003450  B0D8               	btfsc	status,0,c
  2275  003452  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  2276                           
  2277                           ; BSR set to: 0
  2278  003454  0E01               	movlw	1
  2279  003456  6E0B               	movwf	___awdiv@sign^0,c
  2280  003458                     l6136:
  2281                           
  2282                           ; BSR set to: 0
  2283  003458  AE07               	btfss	(___awdiv@dividend+1)^0,7,c
  2284  00345A  D006               	goto	l6142
  2285                           
  2286                           ; BSR set to: 0
  2287  00345C  6C06               	negf	___awdiv@dividend^0,c
  2288  00345E  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  2289  003460  B0D8               	btfsc	status,0,c
  2290  003462  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  2291                           
  2292                           ; BSR set to: 0
  2293  003464  0E01               	movlw	1
  2294  003466  1A0B               	xorwf	___awdiv@sign^0,f,c
  2295  003468                     l6142:
  2296                           
  2297                           ; BSR set to: 0
  2298  003468  0E00               	movlw	0
  2299  00346A  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  2300  00346C  0E00               	movlw	0
  2301  00346E  6E0C               	movwf	___awdiv@quotient^0,c
  2302                           
  2303                           ; BSR set to: 0
  2304  003470  5008               	movf	___awdiv@divisor^0,w,c
  2305  003472  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  2306  003474  B4D8               	btfsc	status,2,c
  2307  003476  D01C               	goto	l6164
  2308                           
  2309                           ; BSR set to: 0
  2310  003478  0E01               	movlw	1
  2311  00347A  6E0A               	movwf	___awdiv@counter^0,c
  2312  00347C  D004               	goto	l6150
  2313  00347E                     l6148:
  2314                           
  2315                           ; BSR set to: 0
  2316  00347E  90D8               	bcf	status,0,c
  2317  003480  3608               	rlcf	___awdiv@divisor^0,f,c
  2318  003482  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  2319  003484  2A0A               	incf	___awdiv@counter^0,f,c
  2320  003486                     l6150:
  2321                           
  2322                           ; BSR set to: 0
  2323  003486  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  2324  003488  D7FA               	goto	l6148
  2325  00348A                     u5210:
  2326                           
  2327                           ; BSR set to: 0
  2328  00348A  90D8               	bcf	status,0,c
  2329  00348C  360C               	rlcf	___awdiv@quotient^0,f,c
  2330  00348E  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  2331                           
  2332                           ; BSR set to: 0
  2333  003490  5008               	movf	___awdiv@divisor^0,w,c
  2334  003492  5C06               	subwf	___awdiv@dividend^0,w,c
  2335  003494  5009               	movf	(___awdiv@divisor+1)^0,w,c
  2336  003496  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  2337  003498  A0D8               	btfss	status,0,c
  2338  00349A  D005               	goto	l6160
  2339                           
  2340                           ; BSR set to: 0
  2341  00349C  5008               	movf	___awdiv@divisor^0,w,c
  2342  00349E  5E06               	subwf	___awdiv@dividend^0,f,c
  2343  0034A0  5009               	movf	(___awdiv@divisor+1)^0,w,c
  2344  0034A2  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  2345                           
  2346                           ; BSR set to: 0
  2347  0034A4  800C               	bsf	___awdiv@quotient^0,0,c
  2348  0034A6                     l6160:
  2349                           
  2350                           ; BSR set to: 0
  2351  0034A6  90D8               	bcf	status,0,c
  2352  0034A8  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  2353  0034AA  3208               	rrcf	___awdiv@divisor^0,f,c
  2354                           
  2355                           ; BSR set to: 0
  2356  0034AC  2E0A               	decfsz	___awdiv@counter^0,f,c
  2357  0034AE  D7ED               	goto	u5210
  2358  0034B0                     l6164:
  2359                           
  2360                           ; BSR set to: 0
  2361  0034B0  500B               	movf	___awdiv@sign^0,w,c
  2362  0034B2  B4D8               	btfsc	status,2,c
  2363  0034B4  D004               	goto	l6168
  2364                           
  2365                           ; BSR set to: 0
  2366  0034B6  6C0C               	negf	___awdiv@quotient^0,c
  2367  0034B8  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  2368  0034BA  B0D8               	btfsc	status,0,c
  2369  0034BC  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  2370  0034BE                     l6168:
  2371                           
  2372                           ; BSR set to: 0
  2373  0034BE  0060  F030  F006   	movff	___awdiv@quotient,?___awdiv
  2374  0034C4  0060  F034  F007   	movff	___awdiv@quotient+1,?___awdiv+1
  2375                           
  2376                           ; BSR set to: 0
  2377  0034CA  0012               	return		;funcret
  2378  0034CC                     __end_of___awdiv:
  2379                           	opt callstack 0
  2380                           
  2381 ;; *************** function _init_display *****************
  2382 ;; Defined at:
  2383 ;;		line 27 in file "eadog.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;		None
  2386 ;; Auto vars:     Size  Location     Type
  2387 ;;		None
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  1    wreg      void 
  2390 ;; Registers used:
  2391 ;;		wreg, status,2, status,0, cstack
  2392 ;; Tracked objects:
  2393 ;;		On entry : 3F/1
  2394 ;;		On exit  : 3F/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2401 ;;Total ram usage:        0 bytes
  2402 ;; Hardware stack levels used:    1
  2403 ;; Hardware stack levels required when called:    6
  2404 ;; This function calls:
  2405 ;;		_send_lcd_cmd
  2406 ;;		_send_lcd_cmd_long
  2407 ;;		_wdtdelay
  2408 ;; This function is called by:
  2409 ;;		_main
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           	psect	text7
  2414  0035C6                     __ptext7:
  2415                           	opt callstack 0
  2416  0035C6                     _init_display:
  2417                           	opt callstack 24
  2418                           
  2419                           ; BSR set to: 1
  2420                           
  2421                           ; BSR set to: 0
  2422                           ;incstack = 0
  2423                           ;eadog.c: 29:  do { LATCbits.LATC2 = 1; } while(0);
  2424  0035C6  84BC               	bsf	188,2,c	;volatile
  2425                           
  2426                           ; BSR set to: 1
  2427                           ;eadog.c: 30:  wdtdelay(350000);
  2428  0035C8  0E30               	movlw	48
  2429  0035CA  6E06               	movwf	wdtdelay@delay^0,c
  2430  0035CC  0E57               	movlw	87
  2431  0035CE  6E07               	movwf	(wdtdelay@delay+1)^0,c
  2432  0035D0  0E05               	movlw	5
  2433  0035D2  6E08               	movwf	(wdtdelay@delay+2)^0,c
  2434  0035D4  0E00               	movlw	0
  2435  0035D6  6E09               	movwf	(wdtdelay@delay+3)^0,c
  2436  0035D8  ECA0  F01C         	call	_wdtdelay	;wreg free
  2437                           
  2438                           ;eadog.c: 31:  send_lcd_cmd(0x39);
  2439  0035DC  0E39               	movlw	57
  2440  0035DE  ECBE  F01D         	call	_send_lcd_cmd
  2441                           
  2442                           ;eadog.c: 32:  send_lcd_cmd(0x1d);
  2443  0035E2  0E1D               	movlw	29
  2444  0035E4  ECBE  F01D         	call	_send_lcd_cmd
  2445                           
  2446                           ;eadog.c: 33:  send_lcd_cmd(0x50);
  2447  0035E8  0E50               	movlw	80
  2448  0035EA  ECBE  F01D         	call	_send_lcd_cmd
  2449                           
  2450                           ;eadog.c: 34:  send_lcd_cmd(0x6c);
  2451  0035EE  0E6C               	movlw	108
  2452  0035F0  ECBE  F01D         	call	_send_lcd_cmd
  2453                           
  2454                           ;eadog.c: 35:  send_lcd_cmd(0x76);
  2455  0035F4  0E76               	movlw	118
  2456  0035F6  ECBE  F01D         	call	_send_lcd_cmd
  2457                           
  2458                           ;eadog.c: 36:  send_lcd_cmd_long(0x38);
  2459  0035FA  0E38               	movlw	56
  2460  0035FC  ECAC  F01D         	call	_send_lcd_cmd_long
  2461                           
  2462                           ;eadog.c: 37:  send_lcd_cmd(0x0f);
  2463  003600  0E0F               	movlw	15
  2464  003602  ECBE  F01D         	call	_send_lcd_cmd
  2465                           
  2466                           ;eadog.c: 38:  send_lcd_cmd_long(0x01);
  2467  003606  0E01               	movlw	1
  2468  003608  ECAC  F01D         	call	_send_lcd_cmd_long
  2469                           
  2470                           ;eadog.c: 39:  send_lcd_cmd(0x02);
  2471  00360C  0E02               	movlw	2
  2472  00360E  ECBE  F01D         	call	_send_lcd_cmd
  2473                           
  2474                           ;eadog.c: 40:  send_lcd_cmd(0x06);
  2475  003612  0E06               	movlw	6
  2476  003614  ECBE  F01D         	call	_send_lcd_cmd
  2477                           
  2478                           ;eadog.c: 41:  wdtdelay(800);
  2479  003618  0E20               	movlw	32
  2480  00361A  6E06               	movwf	wdtdelay@delay^0,c
  2481  00361C  0E03               	movlw	3
  2482  00361E  6E07               	movwf	(wdtdelay@delay+1)^0,c
  2483  003620  0E00               	movlw	0
  2484  003622  6E08               	movwf	(wdtdelay@delay+2)^0,c
  2485  003624  0E00               	movlw	0
  2486  003626  6E09               	movwf	(wdtdelay@delay+3)^0,c
  2487  003628  ECA0  F01C         	call	_wdtdelay	;wreg free
  2488                           
  2489                           ; BSR set to: 0
  2490  00362C  0012               	return		;funcret
  2491  00362E                     __end_of_init_display:
  2492                           	opt callstack 0
  2493                           
  2494 ;; *************** function _send_lcd_cmd_long *****************
  2495 ;; Defined at:
  2496 ;;		line 70 in file "eadog.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;  cmd             1    wreg     const unsigned char 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;  cmd             1    9[COMRAM] const unsigned char 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, status,0, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 3F/0
  2507 ;;		On exit  : 3F/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2511 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2513 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2514 ;;Total ram usage:        1 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    5
  2517 ;; This function calls:
  2518 ;;		_SPI1_Exchange8bit
  2519 ;;		_wdtdelay
  2520 ;; This function is called by:
  2521 ;;		_init_display
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           	psect	text8
  2526  003B58                     __ptext8:
  2527                           	opt callstack 0
  2528  003B58                     _send_lcd_cmd_long:
  2529                           	opt callstack 24
  2530                           
  2531                           ; BSR set to: 0
  2532                           ;incstack = 0
  2533                           ;send_lcd_cmd_long@cmd stored from wreg
  2534  003B58  6E0A               	movwf	send_lcd_cmd_long@cmd^0,c
  2535                           
  2536                           ;eadog.c: 70: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 71: {;eadog.c: 7
      +                          2:  do { LATCbits.LATC1 = 0; } while(0);
  2537  003B5A  92BC               	bcf	188,1,c	;volatile
  2538                           
  2539                           ;eadog.c: 73:  do { LATCbits.LATC2 = 0; } while(0);
  2540  003B5C  94BC               	bcf	188,2,c	;volatile
  2541                           
  2542                           ;eadog.c: 74:  SPI1_Exchange8bit(cmd);
  2543  003B5E  500A               	movf	send_lcd_cmd_long@cmd^0,w,c
  2544  003B60  ECBE  F01E         	call	_SPI1_Exchange8bit
  2545                           
  2546                           ; BSR set to: 61
  2547                           ;eadog.c: 75:  wdtdelay(800);
  2548  003B64  0E20               	movlw	32
  2549  003B66  6E06               	movwf	wdtdelay@delay^0,c
  2550  003B68  0E03               	movlw	3
  2551  003B6A  6E07               	movwf	(wdtdelay@delay+1)^0,c
  2552  003B6C  0E00               	movlw	0
  2553  003B6E  6E08               	movwf	(wdtdelay@delay+2)^0,c
  2554  003B70  0E00               	movlw	0
  2555  003B72  6E09               	movwf	(wdtdelay@delay+3)^0,c
  2556  003B74  ECA0  F01C         	call	_wdtdelay	;wreg free
  2557                           
  2558                           ; BSR set to: 0
  2559  003B78  82BC               	bsf	188,1,c	;volatile
  2560                           
  2561                           ; BSR set to: 0
  2562  003B7A  0012               	return		;funcret
  2563  003B7C                     __end_of_send_lcd_cmd_long:
  2564                           	opt callstack 0
  2565                           
  2566 ;; *************** function _eaDogM_WriteCommand *****************
  2567 ;; Defined at:
  2568 ;;		line 84 in file "eadog.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;  cmd             1    wreg     const unsigned char 
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;  cmd             1   10[COMRAM] const unsigned char 
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  1    wreg      void 
  2575 ;; Registers used:
  2576 ;;		wreg, status,2, status,0, cstack
  2577 ;; Tracked objects:
  2578 ;;		On entry : 3F/0
  2579 ;;		On exit  : 3F/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2583 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2585 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2586 ;;Total ram usage:        1 bytes
  2587 ;; Hardware stack levels used:    1
  2588 ;; Hardware stack levels required when called:    6
  2589 ;; This function calls:
  2590 ;;		_send_lcd_cmd
  2591 ;; This function is called by:
  2592 ;;		_main
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           	psect	text9
  2597  003EF6                     __ptext9:
  2598                           	opt callstack 0
  2599  003EF6                     _eaDogM_WriteCommand:
  2600                           	opt callstack 24
  2601                           
  2602                           ; BSR set to: 0
  2603                           ;incstack = 0
  2604                           ;eaDogM_WriteCommand@cmd stored from wreg
  2605  003EF6  6E0B               	movwf	eaDogM_WriteCommand@cmd^0,c
  2606                           
  2607                           ;eadog.c: 84: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 85: {;eadog.c: 86:  s
      +                          end_lcd_cmd(cmd);
  2608  003EF8  500B               	movf	eaDogM_WriteCommand@cmd^0,w,c
  2609  003EFA  ECBE  F01D         	call	_send_lcd_cmd
  2610                           
  2611                           ; BSR set to: 0
  2612  003EFE  0012               	return		;funcret
  2613  003F00                     __end_of_eaDogM_WriteCommand:
  2614                           	opt callstack 0
  2615                           
  2616 ;; *************** function _send_lcd_cmd *****************
  2617 ;; Defined at:
  2618 ;;		line 58 in file "eadog.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;  cmd             1    wreg     const unsigned char 
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;  cmd             1    9[COMRAM] const unsigned char 
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  1    wreg      void 
  2625 ;; Registers used:
  2626 ;;		wreg, status,2, status,0, cstack
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 3F/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2633 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2635 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2636 ;;Total ram usage:        1 bytes
  2637 ;; Hardware stack levels used:    1
  2638 ;; Hardware stack levels required when called:    5
  2639 ;; This function calls:
  2640 ;;		_SPI1_Exchange8bit
  2641 ;;		_wdtdelay
  2642 ;; This function is called by:
  2643 ;;		_init_display
  2644 ;;		_eaDogM_WriteCommand
  2645 ;;		_eaDogM_WriteStringAtPos
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           	psect	text10
  2650  003B7C                     __ptext10:
  2651                           	opt callstack 0
  2652  003B7C                     _send_lcd_cmd:
  2653                           	opt callstack 23
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;incstack = 0
  2657                           ;send_lcd_cmd@cmd stored from wreg
  2658  003B7C  6E0A               	movwf	send_lcd_cmd@cmd^0,c
  2659                           
  2660                           ;eadog.c: 58: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 59: {;eadog.c: 60:  d
      +                          o { LATCbits.LATC1 = 0; } while(0);
  2661  003B7E  92BC               	bcf	188,1,c	;volatile
  2662                           
  2663                           ;eadog.c: 61:  do { LATCbits.LATC2 = 0; } while(0);
  2664  003B80  94BC               	bcf	188,2,c	;volatile
  2665                           
  2666                           ;eadog.c: 62:  SPI1_Exchange8bit(cmd);
  2667  003B82  500A               	movf	send_lcd_cmd@cmd^0,w,c
  2668  003B84  ECBE  F01E         	call	_SPI1_Exchange8bit
  2669                           
  2670                           ; BSR set to: 61
  2671                           ;eadog.c: 63:  wdtdelay(17);
  2672  003B88  0E11               	movlw	17
  2673  003B8A  6E06               	movwf	wdtdelay@delay^0,c
  2674  003B8C  0E00               	movlw	0
  2675  003B8E  6E07               	movwf	(wdtdelay@delay+1)^0,c
  2676  003B90  0E00               	movlw	0
  2677  003B92  6E08               	movwf	(wdtdelay@delay+2)^0,c
  2678  003B94  0E00               	movlw	0
  2679  003B96  6E09               	movwf	(wdtdelay@delay+3)^0,c
  2680  003B98  ECA0  F01C         	call	_wdtdelay	;wreg free
  2681                           
  2682                           ; BSR set to: 0
  2683  003B9C  82BC               	bsf	188,1,c	;volatile
  2684                           
  2685                           ; BSR set to: 0
  2686  003B9E  0012               	return		;funcret
  2687  003BA0                     __end_of_send_lcd_cmd:
  2688                           	opt callstack 0
  2689                           
  2690 ;; *************** function _wdtdelay *****************
  2691 ;; Defined at:
  2692 ;;		line 14 in file "eadog.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  delay           4    5[COMRAM] const unsigned long 
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;		None
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  1    wreg      void 
  2699 ;; Registers used:
  2700 ;;		wreg, status,2, status,0
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 3F/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2706 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2709 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2710 ;;Total ram usage:        4 bytes
  2711 ;; Hardware stack levels used:    1
  2712 ;; Hardware stack levels required when called:    4
  2713 ;; This function calls:
  2714 ;;		Nothing
  2715 ;; This function is called by:
  2716 ;;		_init_display
  2717 ;;		_send_lcd_cmd
  2718 ;;		_send_lcd_cmd_long
  2719 ;;		_eaDogM_WriteString
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           	psect	text11
  2724  003940                     __ptext11:
  2725                           	opt callstack 0
  2726  003940                     _wdtdelay:
  2727                           	opt callstack 23
  2728                           
  2729                           ;eadog.c: 14: void wdtdelay(const uint32_t delay);eadog.c: 15: {;eadog.c: 16:  static ui
      +                          nt32_t dcount;;eadog.c: 18:  for (dcount = 0; dcount <= delay; dcount++) {
  2730                           
  2731                           ; BSR set to: 0
  2732                           ;incstack = 0
  2733  003940  0E00               	movlw	0
  2734  003942  0100               	movlb	0	; () banked
  2735  003944  6FB6               	movwf	wdtdelay@dcount& (0+255),b
  2736  003946  0E00               	movlw	0
  2737  003948  6FB7               	movwf	(wdtdelay@dcount+1)& (0+255),b
  2738  00394A  0E00               	movlw	0
  2739  00394C  6FB8               	movwf	(wdtdelay@dcount+2)& (0+255),b
  2740  00394E  0E00               	movlw	0
  2741  003950  6FB9               	movwf	(wdtdelay@dcount+3)& (0+255),b
  2742  003952                     l1195:
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;eadog.c: 19:   __nop();
  2746  003952  F000               	nop	
  2747  003954  0004               	clrwdt		;# 
  2748                           
  2749                           ;eadog.c: 21:  };
  2750  003956  0E01               	movlw	1
  2751  003958  0100               	movlb	0	; () banked
  2752  00395A  27B6               	addwf	wdtdelay@dcount& (0+255),f,b
  2753  00395C  0E00               	movlw	0
  2754  00395E  23B7               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  2755  003960  23B8               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  2756  003962  23B9               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  2757  003964  51B6               	movf	wdtdelay@dcount& (0+255),w,b
  2758  003966  5C06               	subwf	wdtdelay@delay^0,w,c
  2759  003968  51B7               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  2760  00396A  5807               	subwfb	(wdtdelay@delay+1)^0,w,c
  2761  00396C  51B8               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  2762  00396E  5808               	subwfb	(wdtdelay@delay+2)^0,w,c
  2763  003970  51B9               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  2764  003972  5809               	subwfb	(wdtdelay@delay+3)^0,w,c
  2765  003974  A0D8               	btfss	status,0,c
  2766  003976  0012               	return	
  2767  003978  D7EC               	goto	l1195
  2768  00397A                     __end_of_wdtdelay:
  2769                           	opt callstack 0
  2770                           
  2771 ;; *************** function _SPI1_Exchange8bit *****************
  2772 ;; Defined at:
  2773 ;;		line 79 in file "mcc_generated_files/spi1.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;  data            1    wreg     unsigned char 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;  data            1    5[COMRAM] unsigned char 
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      unsigned char 
  2780 ;; Registers used:
  2781 ;;		wreg, status,2
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 3F/3D
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2788 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2790 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2791 ;;Total ram usage:        1 bytes
  2792 ;; Hardware stack levels used:    1
  2793 ;; Hardware stack levels required when called:    4
  2794 ;; This function calls:
  2795 ;;		Nothing
  2796 ;; This function is called by:
  2797 ;;		_send_lcd_cmd
  2798 ;;		_send_lcd_cmd_long
  2799 ;;		_eaDogM_WriteString
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           	psect	text12
  2804  003D7C                     __ptext12:
  2805                           	opt callstack 0
  2806  003D7C                     _SPI1_Exchange8bit:
  2807                           	opt callstack 23
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;incstack = 0
  2811                           ;SPI1_Exchange8bit@data stored from wreg
  2812  003D7C  6E06               	movwf	SPI1_Exchange8bit@data^0,c
  2813                           
  2814                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  2815  003D7E  0E01               	movlw	1
  2816  003D80  013D               	movlb	61	; () banked
  2817  003D82  6F12               	movwf	18,b	;volatile
  2818                           
  2819                           ; BSR set to: 61
  2820                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  2821  003D84  0060  F01B  FD11   	movff	SPI1_Exchange8bit@data,15633	;volatile
  2822  003D8A                     l987:
  2823                           
  2824                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  2825  003D8A  0139               	movlb	57	; () banked
  2826  003D8C  A9A2               	btfss	162,4,b	;volatile
  2827  003D8E  D7FD               	goto	l987
  2828                           
  2829                           ; BSR set to: 57
  2830                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  2831  003D90  013D               	movlb	61	; () banked
  2832  003D92  5110               	movf	16,w,b	;volatile
  2833                           
  2834                           ; BSR set to: 61
  2835  003D94  0012               	return		;funcret
  2836  003D96                     __end_of_SPI1_Exchange8bit:
  2837                           	opt callstack 0
  2838                           
  2839 ;; *************** function _SYSTEM_Initialize *****************
  2840 ;; Defined at:
  2841 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;		None
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;		None
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  1    wreg      void 
  2848 ;; Registers used:
  2849 ;;		wreg, status,2, status,0, cstack
  2850 ;; Tracked objects:
  2851 ;;		On entry : 3F/0
  2852 ;;		On exit  : 3F/3D
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2859 ;;Total ram usage:        0 bytes
  2860 ;; Hardware stack levels used:    1
  2861 ;; Hardware stack levels required when called:    6
  2862 ;; This function calls:
  2863 ;;		_ADCC_Initialize
  2864 ;;		_INTERRUPT_Initialize
  2865 ;;		_OSCILLATOR_Initialize
  2866 ;;		_PIN_MANAGER_Initialize
  2867 ;;		_PMD_Initialize
  2868 ;;		_PWM8_Initialize
  2869 ;;		_SPI1_Initialize
  2870 ;;		_TMR2_Initialize
  2871 ;;		_TMR5_Initialize
  2872 ;;		_TMR6_Initialize
  2873 ;;		_UART1_Initialize
  2874 ;;		_UART2_Initialize
  2875 ;; This function is called by:
  2876 ;;		_main
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           	psect	text13
  2881  0039EA                     __ptext13:
  2882                           	opt callstack 0
  2883  0039EA                     _SYSTEM_Initialize:
  2884                           	opt callstack 24
  2885                           
  2886                           ; BSR set to: 0
  2887                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  2888                           
  2889                           ; BSR set to: 61
  2890                           ;incstack = 0
  2891  0039EA  ECC0  F01B         	call	_INTERRUPT_Initialize	;wreg free
  2892                           
  2893                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  2894  0039EE  EC71  F01E         	call	_PMD_Initialize	;wreg free
  2895                           
  2896                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2897  0039F2  EC8A  F018         	call	_PIN_MANAGER_Initialize	;wreg free
  2898                           
  2899                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2900  0039F6  ECA2  F01E         	call	_OSCILLATOR_Initialize	;wreg free
  2901                           
  2902                           ; BSR set to: 57
  2903                           ;mcc_generated_files/mcc.c: 56:     TMR6_Initialize();
  2904  0039FA  EC57  F01D         	call	_TMR6_Initialize	;wreg free
  2905                           
  2906                           ; BSR set to: 57
  2907                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  2908  0039FE  EC17  F01B         	call	_ADCC_Initialize	;wreg free
  2909                           
  2910                           ; BSR set to: 62
  2911                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  2912  003A02  EC93  F01E         	call	_TMR2_Initialize	;wreg free
  2913                           
  2914                           ; BSR set to: 57
  2915                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
  2916  003A06  ECE4  F01E         	call	_PWM8_Initialize	;wreg free
  2917                           
  2918                           ;mcc_generated_files/mcc.c: 60:     TMR5_Initialize();
  2919  003A0A  EC9A  F01B         	call	_TMR5_Initialize	;wreg free
  2920                           
  2921                           ;mcc_generated_files/mcc.c: 61:     UART2_Initialize();
  2922  003A0E  ECE0  F018         	call	_UART2_Initialize	;wreg free
  2923                           
  2924                           ;mcc_generated_files/mcc.c: 62:     UART1_Initialize();
  2925  003A12  ECD6  F017         	call	_UART1_Initialize	;wreg free
  2926                           
  2927                           ; BSR set to: 57
  2928                           ;mcc_generated_files/mcc.c: 63:     SPI1_Initialize();
  2929  003A16  ECD8  F01E         	call	_SPI1_Initialize	;wreg free
  2930                           
  2931                           ; BSR set to: 61
  2932  003A1A  0012               	return		;funcret
  2933  003A1C                     __end_of_SYSTEM_Initialize:
  2934                           	opt callstack 0
  2935                           
  2936 ;; *************** function _UART2_Initialize *****************
  2937 ;; Defined at:
  2938 ;;		line 87 in file "mcc_generated_files/uart2.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;		None
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;		None
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  1    wreg      void 
  2945 ;; Registers used:
  2946 ;;		wreg, status,2, status,0, cstack
  2947 ;; Tracked objects:
  2948 ;;		On entry : 3F/39
  2949 ;;		On exit  : 3F/39
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2956 ;;Total ram usage:        0 bytes
  2957 ;; Hardware stack levels used:    1
  2958 ;; Hardware stack levels required when called:    5
  2959 ;; This function calls:
  2960 ;;		_UART2_SetErrorHandler
  2961 ;;		_UART2_SetFramingErrorHandler
  2962 ;;		_UART2_SetOverrunErrorHandler
  2963 ;;		_UART2_SetRxInterruptHandler
  2964 ;;		_UART2_SetTxInterruptHandler
  2965 ;; This function is called by:
  2966 ;;		_SYSTEM_Initialize
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970                           	psect	text14
  2971  0031C0                     __ptext14:
  2972                           	opt callstack 0
  2973  0031C0                     _UART2_Initialize:
  2974                           	opt callstack 24
  2975                           
  2976                           ; BSR set to: 57
  2977                           ;mcc_generated_files/uart2.c: 90:     PIE6bits.U2RXIE = 0;
  2978                           
  2979                           ; BSR set to: 61
  2980                           ;incstack = 0
  2981  0031C0  9596               	bcf	150,2,b	;volatile
  2982                           
  2983                           ; BSR set to: 57
  2984                           ;mcc_generated_files/uart2.c: 91:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
  2985  0031C2  0E0C               	movlw	low _UART2_Receive_ISR
  2986  0031C4  6E06               	movwf	UART2_SetRxInterruptHandler@InterruptHandler^0,c
  2987  0031C6  0E33               	movlw	high _UART2_Receive_ISR
  2988  0031C8  6E07               	movwf	(UART2_SetRxInterruptHandler@InterruptHandler+1)^0,c
  2989  0031CA  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
  2990  0031CC  6E08               	movwf	(UART2_SetRxInterruptHandler@InterruptHandler+2)^0,c
  2991  0031CE  EC05  F01F         	call	_UART2_SetRxInterruptHandler	;wreg free
  2992                           
  2993                           ; BSR set to: 57
  2994                           ;mcc_generated_files/uart2.c: 92:     PIE6bits.U2TXIE = 0;
  2995  0031D2  9796               	bcf	150,3,b	;volatile
  2996                           
  2997                           ;mcc_generated_files/uart2.c: 93:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
  2998  0031D4  0E7E               	movlw	low _UART2_Transmit_ISR
  2999  0031D6  6E06               	movwf	UART2_SetTxInterruptHandler@InterruptHandler^0,c
  3000  0031D8  0E3A               	movlw	high _UART2_Transmit_ISR
  3001  0031DA  6E07               	movwf	(UART2_SetTxInterruptHandler@InterruptHandler+1)^0,c
  3002  0031DC  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
  3003  0031DE  6E08               	movwf	(UART2_SetTxInterruptHandler@InterruptHandler+2)^0,c
  3004  0031E0  ECFB  F01E         	call	_UART2_SetTxInterruptHandler	;wreg free
  3005                           
  3006                           ; BSR set to: 57
  3007                           ;mcc_generated_files/uart2.c: 98:     U2P1L = 0x00;
  3008  0031E4  0E00               	movlw	0
  3009  0031E6  013D               	movlb	61	; () banked
  3010  0031E8  6FD4               	movwf	212,b	;volatile
  3011                           
  3012                           ; BSR set to: 61
  3013                           ;mcc_generated_files/uart2.c: 101:     U2P2L = 0x00;
  3014  0031EA  0E00               	movlw	0
  3015  0031EC  6FD6               	movwf	214,b	;volatile
  3016                           
  3017                           ; BSR set to: 61
  3018                           ;mcc_generated_files/uart2.c: 104:     U2P3L = 0x00;
  3019  0031EE  0E00               	movlw	0
  3020  0031F0  6FD8               	movwf	216,b	;volatile
  3021                           
  3022                           ; BSR set to: 61
  3023                           ;mcc_generated_files/uart2.c: 107:     U2CON0 = 0xB0;
  3024  0031F2  0EB0               	movlw	176
  3025  0031F4  6FDA               	movwf	218,b	;volatile
  3026                           
  3027                           ; BSR set to: 61
  3028                           ;mcc_generated_files/uart2.c: 110:     U2CON1 = 0x80;
  3029  0031F6  0E80               	movlw	128
  3030  0031F8  6FDB               	movwf	219,b	;volatile
  3031                           
  3032                           ; BSR set to: 61
  3033                           ;mcc_generated_files/uart2.c: 113:     U2CON2 = 0x00;
  3034  0031FA  0E00               	movlw	0
  3035  0031FC  6FDC               	movwf	220,b	;volatile
  3036                           
  3037                           ; BSR set to: 61
  3038                           ;mcc_generated_files/uart2.c: 116:     U2BRGL = 0x40;
  3039  0031FE  0E40               	movlw	64
  3040  003200  6FDD               	movwf	221,b	;volatile
  3041                           
  3042                           ; BSR set to: 61
  3043                           ;mcc_generated_files/uart2.c: 119:     U2BRGH = 0x03;
  3044  003202  0E03               	movlw	3
  3045  003204  6FDE               	movwf	222,b	;volatile
  3046                           
  3047                           ; BSR set to: 61
  3048                           ;mcc_generated_files/uart2.c: 122:     U2FIFO = 0x00;
  3049  003206  0E00               	movlw	0
  3050  003208  6FDF               	movwf	223,b	;volatile
  3051                           
  3052                           ; BSR set to: 61
  3053                           ;mcc_generated_files/uart2.c: 125:     U2UIR = 0x00;
  3054  00320A  0E00               	movlw	0
  3055  00320C  6FE0               	movwf	224,b	;volatile
  3056                           
  3057                           ; BSR set to: 61
  3058                           ;mcc_generated_files/uart2.c: 128:     U2ERRIR = 0x00;
  3059  00320E  0E00               	movlw	0
  3060  003210  6FE1               	movwf	225,b	;volatile
  3061                           
  3062                           ; BSR set to: 61
  3063                           ;mcc_generated_files/uart2.c: 131:     U2ERRIE = 0x00;
  3064  003212  0E00               	movlw	0
  3065  003214  6FE2               	movwf	226,b	;volatile
  3066                           
  3067                           ;mcc_generated_files/uart2.c: 134:     UART2_SetFramingErrorHandler(UART2_DefaultFraming
      +                          ErrorHandler);
  3068  003216  0E2C               	movlw	low _UART2_DefaultFramingErrorHandler
  3069  003218  6E06               	movwf	UART2_SetFramingErrorHandler@interruptHandler^0,c
  3070  00321A  0E3F               	movlw	high _UART2_DefaultFramingErrorHandler
  3071  00321C  6E07               	movwf	(UART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  3072  00321E  0E00               	movlw	low (_UART2_DefaultFramingErrorHandler shr (0+16))
  3073  003220  6E08               	movwf	(UART2_SetFramingErrorHandler@interruptHandler+2)^0,c
  3074  003222  EC19  F01F         	call	_UART2_SetFramingErrorHandler	;wreg free
  3075                           
  3076                           ;mcc_generated_files/uart2.c: 135:     UART2_SetOverrunErrorHandler(UART2_DefaultOverrun
      +                          ErrorHandler);
  3077  003226  0E2A               	movlw	low _UART2_DefaultOverrunErrorHandler
  3078  003228  6E06               	movwf	UART2_SetOverrunErrorHandler@interruptHandler^0,c
  3079  00322A  0E3F               	movlw	high _UART2_DefaultOverrunErrorHandler
  3080  00322C  6E07               	movwf	(UART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3081  00322E  0E00               	movlw	low (_UART2_DefaultOverrunErrorHandler shr (0+16))
  3082  003230  6E08               	movwf	(UART2_SetOverrunErrorHandler@interruptHandler+2)^0,c
  3083  003232  EC0F  F01F         	call	_UART2_SetOverrunErrorHandler	;wreg free
  3084                           
  3085                           ;mcc_generated_files/uart2.c: 136:     UART2_SetErrorHandler(UART2_DefaultErrorHandler);
  3086  003236  0E1C               	movlw	low _UART2_DefaultErrorHandler
  3087  003238  6E06               	movwf	UART2_SetErrorHandler@interruptHandler^0,c
  3088  00323A  0E3F               	movlw	high _UART2_DefaultErrorHandler
  3089  00323C  6E07               	movwf	(UART2_SetErrorHandler@interruptHandler+1)^0,c
  3090  00323E  0E00               	movlw	low (_UART2_DefaultErrorHandler shr (0+16))
  3091  003240  6E08               	movwf	(UART2_SetErrorHandler@interruptHandler+2)^0,c
  3092  003242  EC23  F01F         	call	_UART2_SetErrorHandler	;wreg free
  3093                           
  3094                           ; BSR set to: 61
  3095                           ;mcc_generated_files/uart2.c: 138:     uart2RxLastError.status = 0;
  3096  003246  0E00               	movlw	0
  3097  003248  0100               	movlb	0	; () banked
  3098  00324A  6FED               	movwf	_uart2RxLastError& (0+255),b	;volatile
  3099                           
  3100                           ; BSR set to: 0
  3101                           ;mcc_generated_files/uart2.c: 141:     uart2TxHead = 0;
  3102  00324C  0E00               	movlw	0
  3103  00324E  6FF1               	movwf	_uart2TxHead& (0+255),b	;volatile
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;mcc_generated_files/uart2.c: 142:     uart2TxTail = 0;
  3107  003250  0E00               	movlw	0
  3108  003252  6FF0               	movwf	_uart2TxTail& (0+255),b	;volatile
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;mcc_generated_files/uart2.c: 143:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
  3112  003254  0E08               	movlw	8
  3113  003256  6FEF               	movwf	_uart2TxBufferRemaining& (0+255),b	;volatile
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;mcc_generated_files/uart2.c: 144:     uart2RxHead = 0;
  3117  003258  0E00               	movlw	0
  3118  00325A  6E59               	movwf	_uart2RxHead^0,c	;volatile
  3119                           
  3120                           ; BSR set to: 0
  3121                           ;mcc_generated_files/uart2.c: 145:     uart2RxTail = 0;
  3122  00325C  0E00               	movlw	0
  3123  00325E  6E58               	movwf	_uart2RxTail^0,c	;volatile
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;mcc_generated_files/uart2.c: 146:     uart2RxCount = 0;
  3127  003260  0E00               	movlw	0
  3128  003262  6FEE               	movwf	_uart2RxCount& (0+255),b	;volatile
  3129                           
  3130                           ; BSR set to: 0
  3131                           ;mcc_generated_files/uart2.c: 149:     PIE6bits.U2RXIE = 1;
  3132  003264  0139               	movlb	57	; () banked
  3133  003266  8596               	bsf	150,2,b	;volatile
  3134                           
  3135                           ; BSR set to: 57
  3136  003268  0012               	return		;funcret
  3137  00326A                     __end_of_UART2_Initialize:
  3138                           	opt callstack 0
  3139                           
  3140 ;; *************** function _UART2_SetTxInterruptHandler *****************
  3141 ;; Defined at:
  3142 ;;		line 324 in file "mcc_generated_files/uart2.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  3145 ;;		 -> UART2_Transmit_ISR(1), 
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;		None
  3148 ;; Return value:  Size  Location     Type
  3149 ;;                  1    wreg      void 
  3150 ;; Registers used:
  3151 ;;		wreg, status,2, status,0
  3152 ;; Tracked objects:
  3153 ;;		On entry : 3F/39
  3154 ;;		On exit  : 3F/39
  3155 ;;		Unchanged: 3E/0
  3156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3157 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3160 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3161 ;;Total ram usage:        3 bytes
  3162 ;; Hardware stack levels used:    1
  3163 ;; Hardware stack levels required when called:    4
  3164 ;; This function calls:
  3165 ;;		Nothing
  3166 ;; This function is called by:
  3167 ;;		_UART2_Initialize
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           	psect	text15
  3172  003DF6                     __ptext15:
  3173                           	opt callstack 0
  3174  003DF6                     _UART2_SetTxInterruptHandler:
  3175                           	opt callstack 24
  3176                           
  3177                           ; BSR set to: 57
  3178                           ;mcc_generated_files/uart2.c: 325:     UART2_TxInterruptHandler = InterruptHandler;
  3179                           
  3180                           ; BSR set to: 57
  3181                           ;incstack = 0
  3182  003DF6  0060  F018  F0D8   	movff	UART2_SetTxInterruptHandler@InterruptHandler,_UART2_TxInterruptHandler
  3183  003DFC  0060  F01C  F0D9   	movff	UART2_SetTxInterruptHandler@InterruptHandler+1,_UART2_TxInterruptHandler+1
  3184  003E02  0060  F020  F0DA   	movff	UART2_SetTxInterruptHandler@InterruptHandler+2,_UART2_TxInterruptHandler+2
  3185                           
  3186                           ; BSR set to: 57
  3187  003E08  0012               	return		;funcret
  3188  003E0A                     __end_of_UART2_SetTxInterruptHandler:
  3189                           	opt callstack 0
  3190                           
  3191 ;; *************** function _UART2_SetRxInterruptHandler *****************
  3192 ;; Defined at:
  3193 ;;		line 320 in file "mcc_generated_files/uart2.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  3196 ;;		 -> UART2_Receive_ISR(1), 
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;		None
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  1    wreg      void 
  3201 ;; Registers used:
  3202 ;;		wreg, status,2, status,0
  3203 ;; Tracked objects:
  3204 ;;		On entry : 3F/39
  3205 ;;		On exit  : 3F/39
  3206 ;;		Unchanged: 3E/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3208 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3211 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3212 ;;Total ram usage:        3 bytes
  3213 ;; Hardware stack levels used:    1
  3214 ;; Hardware stack levels required when called:    4
  3215 ;; This function calls:
  3216 ;;		Nothing
  3217 ;; This function is called by:
  3218 ;;		_UART2_Initialize
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           	psect	text16
  3223  003E0A                     __ptext16:
  3224                           	opt callstack 0
  3225  003E0A                     _UART2_SetRxInterruptHandler:
  3226                           	opt callstack 24
  3227                           
  3228                           ; BSR set to: 57
  3229                           ;mcc_generated_files/uart2.c: 321:     UART2_RxInterruptHandler = InterruptHandler;
  3230                           
  3231                           ; BSR set to: 57
  3232                           ;incstack = 0
  3233  003E0A  0060  F018  F0DB   	movff	UART2_SetRxInterruptHandler@InterruptHandler,_UART2_RxInterruptHandler
  3234  003E10  0060  F01C  F0DC   	movff	UART2_SetRxInterruptHandler@InterruptHandler+1,_UART2_RxInterruptHandler+1
  3235  003E16  0060  F020  F0DD   	movff	UART2_SetRxInterruptHandler@InterruptHandler+2,_UART2_RxInterruptHandler+2
  3236                           
  3237                           ; BSR set to: 57
  3238  003E1C  0012               	return		;funcret
  3239  003E1E                     __end_of_UART2_SetRxInterruptHandler:
  3240                           	opt callstack 0
  3241                           
  3242 ;; *************** function _UART2_SetOverrunErrorHandler *****************
  3243 ;; Defined at:
  3244 ;;		line 310 in file "mcc_generated_files/uart2.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  3247 ;;		 -> UART2_DefaultOverrunErrorHandler(1), 
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;		None
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  1    wreg      void 
  3252 ;; Registers used:
  3253 ;;		wreg, status,2, status,0
  3254 ;; Tracked objects:
  3255 ;;		On entry : 3F/3D
  3256 ;;		On exit  : 3F/3D
  3257 ;;		Unchanged: 3E/0
  3258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3259 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3262 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3263 ;;Total ram usage:        3 bytes
  3264 ;; Hardware stack levels used:    1
  3265 ;; Hardware stack levels required when called:    4
  3266 ;; This function calls:
  3267 ;;		Nothing
  3268 ;; This function is called by:
  3269 ;;		_UART2_Initialize
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           	psect	text17
  3274  003E1E                     __ptext17:
  3275                           	opt callstack 0
  3276  003E1E                     _UART2_SetOverrunErrorHandler:
  3277                           	opt callstack 24
  3278                           
  3279                           ; BSR set to: 61
  3280                           ;mcc_generated_files/uart2.c: 311:     UART2_OverrunErrorHandler = interruptHandler;
  3281                           
  3282                           ; BSR set to: 57
  3283                           ;incstack = 0
  3284  003E1E  0060  F018  F0C3   	movff	UART2_SetOverrunErrorHandler@interruptHandler,_UART2_OverrunErrorHandler
  3285  003E24  0060  F01C  F0C4   	movff	UART2_SetOverrunErrorHandler@interruptHandler+1,_UART2_OverrunErrorHandler+1
  3286  003E2A  0060  F020  F0C5   	movff	UART2_SetOverrunErrorHandler@interruptHandler+2,_UART2_OverrunErrorHandler+2
  3287                           
  3288                           ; BSR set to: 61
  3289  003E30  0012               	return		;funcret
  3290  003E32                     __end_of_UART2_SetOverrunErrorHandler:
  3291                           	opt callstack 0
  3292                           
  3293 ;; *************** function _UART2_SetFramingErrorHandler *****************
  3294 ;; Defined at:
  3295 ;;		line 306 in file "mcc_generated_files/uart2.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  3298 ;;		 -> UART2_DefaultFramingErrorHandler(1), 
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;		None
  3301 ;; Return value:  Size  Location     Type
  3302 ;;                  1    wreg      void 
  3303 ;; Registers used:
  3304 ;;		wreg, status,2, status,0
  3305 ;; Tracked objects:
  3306 ;;		On entry : 3F/3D
  3307 ;;		On exit  : 3F/3D
  3308 ;;		Unchanged: 3E/0
  3309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3310 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3313 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3314 ;;Total ram usage:        3 bytes
  3315 ;; Hardware stack levels used:    1
  3316 ;; Hardware stack levels required when called:    4
  3317 ;; This function calls:
  3318 ;;		Nothing
  3319 ;; This function is called by:
  3320 ;;		_UART2_Initialize
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           
  3324                           	psect	text18
  3325  003E32                     __ptext18:
  3326                           	opt callstack 0
  3327  003E32                     _UART2_SetFramingErrorHandler:
  3328                           	opt callstack 24
  3329                           
  3330                           ; BSR set to: 61
  3331                           ;mcc_generated_files/uart2.c: 307:     UART2_FramingErrorHandler = interruptHandler;
  3332                           
  3333                           ; BSR set to: 61
  3334                           ;incstack = 0
  3335  003E32  0060  F018  F0C6   	movff	UART2_SetFramingErrorHandler@interruptHandler,_UART2_FramingErrorHandler
  3336  003E38  0060  F01C  F0C7   	movff	UART2_SetFramingErrorHandler@interruptHandler+1,_UART2_FramingErrorHandler+1
  3337  003E3E  0060  F020  F0C8   	movff	UART2_SetFramingErrorHandler@interruptHandler+2,_UART2_FramingErrorHandler+2
  3338                           
  3339                           ; BSR set to: 61
  3340  003E44  0012               	return		;funcret
  3341  003E46                     __end_of_UART2_SetFramingErrorHandler:
  3342                           	opt callstack 0
  3343                           
  3344 ;; *************** function _UART2_SetErrorHandler *****************
  3345 ;; Defined at:
  3346 ;;		line 314 in file "mcc_generated_files/uart2.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  3349 ;;		 -> UART2_DefaultErrorHandler(1), 
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;		None
  3352 ;; Return value:  Size  Location     Type
  3353 ;;                  1    wreg      void 
  3354 ;; Registers used:
  3355 ;;		wreg, status,2, status,0
  3356 ;; Tracked objects:
  3357 ;;		On entry : 3F/3D
  3358 ;;		On exit  : 3F/3D
  3359 ;;		Unchanged: 3E/0
  3360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3361 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3364 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3365 ;;Total ram usage:        3 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:    4
  3368 ;; This function calls:
  3369 ;;		Nothing
  3370 ;; This function is called by:
  3371 ;;		_UART2_Initialize
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text19
  3376  003E46                     __ptext19:
  3377                           	opt callstack 0
  3378  003E46                     _UART2_SetErrorHandler:
  3379                           	opt callstack 24
  3380                           
  3381                           ; BSR set to: 61
  3382                           ;mcc_generated_files/uart2.c: 315:     UART2_ErrorHandler = interruptHandler;
  3383                           
  3384                           ; BSR set to: 61
  3385                           ;incstack = 0
  3386  003E46  0060  F018  F0C0   	movff	UART2_SetErrorHandler@interruptHandler,_UART2_ErrorHandler
  3387  003E4C  0060  F01C  F0C1   	movff	UART2_SetErrorHandler@interruptHandler+1,_UART2_ErrorHandler+1
  3388  003E52  0060  F020  F0C2   	movff	UART2_SetErrorHandler@interruptHandler+2,_UART2_ErrorHandler+2
  3389                           
  3390                           ; BSR set to: 61
  3391  003E58  0012               	return		;funcret
  3392  003E5A                     __end_of_UART2_SetErrorHandler:
  3393                           	opt callstack 0
  3394                           
  3395 ;; *************** function _UART1_Initialize *****************
  3396 ;; Defined at:
  3397 ;;		line 87 in file "mcc_generated_files/uart1.c"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;		None
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;		None
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  1    wreg      void 
  3404 ;; Registers used:
  3405 ;;		wreg, status,2, status,0, cstack
  3406 ;; Tracked objects:
  3407 ;;		On entry : 3F/39
  3408 ;;		On exit  : 3F/39
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3415 ;;Total ram usage:        0 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; Hardware stack levels required when called:    5
  3418 ;; This function calls:
  3419 ;;		_UART1_SetErrorHandler
  3420 ;;		_UART1_SetFramingErrorHandler
  3421 ;;		_UART1_SetOverrunErrorHandler
  3422 ;;		_UART1_SetRxInterruptHandler
  3423 ;;		_UART1_SetTxInterruptHandler
  3424 ;; This function is called by:
  3425 ;;		_SYSTEM_Initialize
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           	psect	text20
  3430  002FAC                     __ptext20:
  3431                           	opt callstack 0
  3432  002FAC                     _UART1_Initialize:
  3433                           	opt callstack 24
  3434                           
  3435                           ; BSR set to: 57
  3436                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
  3437                           
  3438                           ; BSR set to: 61
  3439                           ;incstack = 0
  3440  002FAC  9793               	bcf	147,3,b	;volatile
  3441                           
  3442                           ; BSR set to: 57
  3443                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  3444  002FAE  0E6A               	movlw	low _UART1_Receive_ISR
  3445  002FB0  6E06               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
  3446  002FB2  0E32               	movlw	high _UART1_Receive_ISR
  3447  002FB4  6E07               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
  3448  002FB6  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
  3449  002FB8  6E08               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+2)^0,c
  3450  002FBA  EC37  F01F         	call	_UART1_SetRxInterruptHandler	;wreg free
  3451                           
  3452                           ; BSR set to: 57
  3453                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
  3454  002FBE  9993               	bcf	147,4,b	;volatile
  3455                           
  3456                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  3457  002FC0  0E4E               	movlw	low _UART1_Transmit_ISR
  3458  002FC2  6E06               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
  3459  002FC4  0E3A               	movlw	high _UART1_Transmit_ISR
  3460  002FC6  6E07               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
  3461  002FC8  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
  3462  002FCA  6E08               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+2)^0,c
  3463  002FCC  EC2D  F01F         	call	_UART1_SetTxInterruptHandler	;wreg free
  3464                           
  3465                           ; BSR set to: 57
  3466                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
  3467  002FD0  0E00               	movlw	0
  3468  002FD2  013D               	movlb	61	; () banked
  3469  002FD4  6FEC               	movwf	236,b	;volatile
  3470                           
  3471                           ; BSR set to: 61
  3472                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
  3473  002FD6  0E00               	movlw	0
  3474  002FD8  6FED               	movwf	237,b	;volatile
  3475                           
  3476                           ; BSR set to: 61
  3477                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
  3478  002FDA  0E00               	movlw	0
  3479  002FDC  6FEE               	movwf	238,b	;volatile
  3480                           
  3481                           ; BSR set to: 61
  3482                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
  3483  002FDE  0E00               	movlw	0
  3484  002FE0  6FEF               	movwf	239,b	;volatile
  3485                           
  3486                           ; BSR set to: 61
  3487                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
  3488  002FE2  0E00               	movlw	0
  3489  002FE4  6FF0               	movwf	240,b	;volatile
  3490                           
  3491                           ; BSR set to: 61
  3492                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
  3493  002FE6  0E00               	movlw	0
  3494  002FE8  6FF1               	movwf	241,b	;volatile
  3495                           
  3496                           ; BSR set to: 61
  3497                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0x90;
  3498  002FEA  0E90               	movlw	144
  3499  002FEC  6FF2               	movwf	242,b	;volatile
  3500                           
  3501                           ; BSR set to: 61
  3502                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
  3503  002FEE  0E80               	movlw	128
  3504  002FF0  6FF3               	movwf	243,b	;volatile
  3505                           
  3506                           ; BSR set to: 61
  3507                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
  3508  002FF2  0E00               	movlw	0
  3509  002FF4  6FF4               	movwf	244,b	;volatile
  3510                           
  3511                           ; BSR set to: 61
  3512                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x40;
  3513  002FF6  0E40               	movlw	64
  3514  002FF8  6FF5               	movwf	245,b	;volatile
  3515                           
  3516                           ; BSR set to: 61
  3517                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x03;
  3518  002FFA  0E03               	movlw	3
  3519  002FFC  6FF6               	movwf	246,b	;volatile
  3520                           
  3521                           ; BSR set to: 61
  3522                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
  3523  002FFE  0E00               	movlw	0
  3524  003000  6FF7               	movwf	247,b	;volatile
  3525                           
  3526                           ; BSR set to: 61
  3527                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
  3528  003002  0E00               	movlw	0
  3529  003004  6FF8               	movwf	248,b	;volatile
  3530                           
  3531                           ; BSR set to: 61
  3532                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
  3533  003006  0E00               	movlw	0
  3534  003008  6FF9               	movwf	249,b	;volatile
  3535                           
  3536                           ; BSR set to: 61
  3537                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
  3538  00300A  0E00               	movlw	0
  3539  00300C  6FFA               	movwf	250,b	;volatile
  3540                           
  3541                           ; BSR set to: 61
  3542                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  3543  00300E  0E28               	movlw	low _UART1_DefaultFramingErrorHandler
  3544  003010  6E06               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  3545  003012  0E3F               	movlw	high _UART1_DefaultFramingErrorHandler
  3546  003014  6E07               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  3547  003016  0E00               	movlw	low (_UART1_DefaultFramingErrorHandler shr (0+16))
  3548  003018  6E08               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+2)^0,c
  3549  00301A  EC4B  F01F         	call	_UART1_SetFramingErrorHandler	;wreg free
  3550                           
  3551                           ; BSR set to: 61
  3552                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  3553  00301E  0E26               	movlw	low _UART1_DefaultOverrunErrorHandler
  3554  003020  6E06               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  3555  003022  0E3F               	movlw	high _UART1_DefaultOverrunErrorHandler
  3556  003024  6E07               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3557  003026  0E00               	movlw	low (_UART1_DefaultOverrunErrorHandler shr (0+16))
  3558  003028  6E08               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+2)^0,c
  3559  00302A  EC41  F01F         	call	_UART1_SetOverrunErrorHandler	;wreg free
  3560                           
  3561                           ; BSR set to: 61
  3562                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  3563  00302E  0E16               	movlw	low _UART1_DefaultErrorHandler
  3564  003030  6E06               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  3565  003032  0E3F               	movlw	high _UART1_DefaultErrorHandler
  3566  003034  6E07               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  3567  003036  0E00               	movlw	low (_UART1_DefaultErrorHandler shr (0+16))
  3568  003038  6E08               	movwf	(UART1_SetErrorHandler@interruptHandler+2)^0,c
  3569  00303A  EC55  F01F         	call	_UART1_SetErrorHandler	;wreg free
  3570                           
  3571                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
  3572  00303E  0E00               	movlw	0
  3573  003040  0100               	movlb	0	; () banked
  3574  003042  6FF2               	movwf	_uart1RxLastError& (0+255),b	;volatile
  3575                           
  3576                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
  3577  003044  0E00               	movlw	0
  3578  003046  6FF7               	movwf	_uart1TxHead& (0+255),b	;volatile
  3579                           
  3580                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
  3581  003048  0E00               	movlw	0
  3582  00304A  6FF6               	movwf	_uart1TxTail& (0+255),b	;volatile
  3583                           
  3584                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  3585  00304C  0E08               	movlw	8
  3586  00304E  6FF5               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
  3587                           
  3588                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
  3589  003050  0E00               	movlw	0
  3590  003052  6E5A               	movwf	_uart1RxHead^0,c	;volatile
  3591                           
  3592                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
  3593  003054  0E00               	movlw	0
  3594  003056  6FF4               	movwf	_uart1RxTail& (0+255),b	;volatile
  3595                           
  3596                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
  3597  003058  0E00               	movlw	0
  3598  00305A  6FF3               	movwf	_uart1RxCount& (0+255),b	;volatile
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
  3602  00305C  0139               	movlb	57	; () banked
  3603  00305E  8793               	bsf	147,3,b	;volatile
  3604                           
  3605                           ; BSR set to: 57
  3606  003060  0012               	return		;funcret
  3607  003062                     __end_of_UART1_Initialize:
  3608                           	opt callstack 0
  3609                           
  3610 ;; *************** function _UART1_SetTxInterruptHandler *****************
  3611 ;; Defined at:
  3612 ;;		line 323 in file "mcc_generated_files/uart1.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  3615 ;;		 -> UART1_Transmit_ISR(1), 
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;		None
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  1    wreg      void 
  3620 ;; Registers used:
  3621 ;;		wreg, status,2, status,0
  3622 ;; Tracked objects:
  3623 ;;		On entry : 3F/39
  3624 ;;		On exit  : 3F/39
  3625 ;;		Unchanged: 3E/0
  3626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3627 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3630 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3631 ;;Total ram usage:        3 bytes
  3632 ;; Hardware stack levels used:    1
  3633 ;; Hardware stack levels required when called:    4
  3634 ;; This function calls:
  3635 ;;		Nothing
  3636 ;; This function is called by:
  3637 ;;		_UART1_Initialize
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           	psect	text21
  3642  003E5A                     __ptext21:
  3643                           	opt callstack 0
  3644  003E5A                     _UART1_SetTxInterruptHandler:
  3645                           	opt callstack 24
  3646                           
  3647                           ; BSR set to: 57
  3648                           ;mcc_generated_files/uart1.c: 324:     UART1_TxInterruptHandler = InterruptHandler;
  3649                           
  3650                           ; BSR set to: 57
  3651                           ;incstack = 0
  3652  003E5A  0060  F018  F0D2   	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  3653  003E60  0060  F01C  F0D3   	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  3654  003E66  0060  F020  F0D4   	movff	UART1_SetTxInterruptHandler@InterruptHandler+2,_UART1_TxInterruptHandler+2
  3655                           
  3656                           ; BSR set to: 57
  3657  003E6C  0012               	return		;funcret
  3658  003E6E                     __end_of_UART1_SetTxInterruptHandler:
  3659                           	opt callstack 0
  3660                           
  3661 ;; *************** function _UART1_SetRxInterruptHandler *****************
  3662 ;; Defined at:
  3663 ;;		line 319 in file "mcc_generated_files/uart1.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  3666 ;;		 -> UART1_Receive_ISR(1), 
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;		None
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  1    wreg      void 
  3671 ;; Registers used:
  3672 ;;		wreg, status,2, status,0
  3673 ;; Tracked objects:
  3674 ;;		On entry : 3F/39
  3675 ;;		On exit  : 3F/39
  3676 ;;		Unchanged: 3E/0
  3677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3678 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3681 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3682 ;;Total ram usage:        3 bytes
  3683 ;; Hardware stack levels used:    1
  3684 ;; Hardware stack levels required when called:    4
  3685 ;; This function calls:
  3686 ;;		Nothing
  3687 ;; This function is called by:
  3688 ;;		_UART1_Initialize
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           	psect	text22
  3693  003E6E                     __ptext22:
  3694                           	opt callstack 0
  3695  003E6E                     _UART1_SetRxInterruptHandler:
  3696                           	opt callstack 24
  3697                           
  3698                           ; BSR set to: 57
  3699                           ;mcc_generated_files/uart1.c: 320:     UART1_RxInterruptHandler = InterruptHandler;
  3700                           
  3701                           ; BSR set to: 57
  3702                           ;incstack = 0
  3703  003E6E  0060  F018  F0D5   	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  3704  003E74  0060  F01C  F0D6   	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  3705  003E7A  0060  F020  F0D7   	movff	UART1_SetRxInterruptHandler@InterruptHandler+2,_UART1_RxInterruptHandler+2
  3706                           
  3707                           ; BSR set to: 57
  3708  003E80  0012               	return		;funcret
  3709  003E82                     __end_of_UART1_SetRxInterruptHandler:
  3710                           	opt callstack 0
  3711                           
  3712 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  3713 ;; Defined at:
  3714 ;;		line 309 in file "mcc_generated_files/uart1.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  3717 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;		None
  3720 ;; Return value:  Size  Location     Type
  3721 ;;                  1    wreg      void 
  3722 ;; Registers used:
  3723 ;;		wreg, status,2, status,0
  3724 ;; Tracked objects:
  3725 ;;		On entry : 3F/3D
  3726 ;;		On exit  : 3F/3D
  3727 ;;		Unchanged: 3E/0
  3728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3729 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3732 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3733 ;;Total ram usage:        3 bytes
  3734 ;; Hardware stack levels used:    1
  3735 ;; Hardware stack levels required when called:    4
  3736 ;; This function calls:
  3737 ;;		Nothing
  3738 ;; This function is called by:
  3739 ;;		_UART1_Initialize
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           	psect	text23
  3744  003E82                     __ptext23:
  3745                           	opt callstack 0
  3746  003E82                     _UART1_SetOverrunErrorHandler:
  3747                           	opt callstack 24
  3748                           
  3749                           ; BSR set to: 61
  3750                           ;mcc_generated_files/uart1.c: 310:     UART1_OverrunErrorHandler = interruptHandler;
  3751                           
  3752                           ; BSR set to: 57
  3753                           ;incstack = 0
  3754  003E82  0060  F018  F0CC   	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  3755  003E88  0060  F01C  F0CD   	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  3756  003E8E  0060  F020  F0CE   	movff	UART1_SetOverrunErrorHandler@interruptHandler+2,_UART1_OverrunErrorHandler+2
  3757                           
  3758                           ; BSR set to: 61
  3759  003E94  0012               	return		;funcret
  3760  003E96                     __end_of_UART1_SetOverrunErrorHandler:
  3761                           	opt callstack 0
  3762                           
  3763 ;; *************** function _UART1_SetFramingErrorHandler *****************
  3764 ;; Defined at:
  3765 ;;		line 305 in file "mcc_generated_files/uart1.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  3768 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;		None
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  1    wreg      void 
  3773 ;; Registers used:
  3774 ;;		wreg, status,2, status,0
  3775 ;; Tracked objects:
  3776 ;;		On entry : 3F/3D
  3777 ;;		On exit  : 3F/3D
  3778 ;;		Unchanged: 3E/0
  3779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3780 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3783 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3784 ;;Total ram usage:        3 bytes
  3785 ;; Hardware stack levels used:    1
  3786 ;; Hardware stack levels required when called:    4
  3787 ;; This function calls:
  3788 ;;		Nothing
  3789 ;; This function is called by:
  3790 ;;		_UART1_Initialize
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794                           	psect	text24
  3795  003E96                     __ptext24:
  3796                           	opt callstack 0
  3797  003E96                     _UART1_SetFramingErrorHandler:
  3798                           	opt callstack 24
  3799                           
  3800                           ; BSR set to: 61
  3801                           ;mcc_generated_files/uart1.c: 306:     UART1_FramingErrorHandler = interruptHandler;
  3802                           
  3803                           ; BSR set to: 61
  3804                           ;incstack = 0
  3805  003E96  0060  F018  F0CF   	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  3806  003E9C  0060  F01C  F0D0   	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  3807  003EA2  0060  F020  F0D1   	movff	UART1_SetFramingErrorHandler@interruptHandler+2,_UART1_FramingErrorHandler+2
  3808                           
  3809                           ; BSR set to: 61
  3810  003EA8  0012               	return		;funcret
  3811  003EAA                     __end_of_UART1_SetFramingErrorHandler:
  3812                           	opt callstack 0
  3813                           
  3814 ;; *************** function _UART1_SetErrorHandler *****************
  3815 ;; Defined at:
  3816 ;;		line 313 in file "mcc_generated_files/uart1.c"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  3819 ;;		 -> UART1_DefaultErrorHandler(1), 
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;		None
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  1    wreg      void 
  3824 ;; Registers used:
  3825 ;;		wreg, status,2, status,0
  3826 ;; Tracked objects:
  3827 ;;		On entry : 3F/3D
  3828 ;;		On exit  : 3F/3D
  3829 ;;		Unchanged: 3E/0
  3830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3831 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3834 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3835 ;;Total ram usage:        3 bytes
  3836 ;; Hardware stack levels used:    1
  3837 ;; Hardware stack levels required when called:    4
  3838 ;; This function calls:
  3839 ;;		Nothing
  3840 ;; This function is called by:
  3841 ;;		_UART1_Initialize
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845                           	psect	text25
  3846  003EAA                     __ptext25:
  3847                           	opt callstack 0
  3848  003EAA                     _UART1_SetErrorHandler:
  3849                           	opt callstack 24
  3850                           
  3851                           ; BSR set to: 61
  3852                           ;mcc_generated_files/uart1.c: 314:     UART1_ErrorHandler = interruptHandler;
  3853                           
  3854                           ; BSR set to: 61
  3855                           ;incstack = 0
  3856  003EAA  0060  F018  F0C9   	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  3857  003EB0  0060  F01C  F0CA   	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  3858  003EB6  0060  F020  F0CB   	movff	UART1_SetErrorHandler@interruptHandler+2,_UART1_ErrorHandler+2
  3859                           
  3860                           ; BSR set to: 61
  3861  003EBC  0012               	return		;funcret
  3862  003EBE                     __end_of_UART1_SetErrorHandler:
  3863                           	opt callstack 0
  3864                           
  3865 ;; *************** function _TMR6_Initialize *****************
  3866 ;; Defined at:
  3867 ;;		line 67 in file "mcc_generated_files/tmr6.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;		None
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;		None
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  1    wreg      void 
  3874 ;; Registers used:
  3875 ;;		wreg, status,2, status,0, cstack
  3876 ;; Tracked objects:
  3877 ;;		On entry : 3F/39
  3878 ;;		On exit  : 3F/39
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3885 ;;Total ram usage:        0 bytes
  3886 ;; Hardware stack levels used:    1
  3887 ;; Hardware stack levels required when called:    5
  3888 ;; This function calls:
  3889 ;;		_TMR6_SetInterruptHandler
  3890 ;; This function is called by:
  3891 ;;		_SYSTEM_Initialize
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894                           
  3895                           	psect	text26
  3896  003AAE                     __ptext26:
  3897                           	opt callstack 0
  3898  003AAE                     _TMR6_Initialize:
  3899                           	opt callstack 24
  3900                           
  3901                           ; BSR set to: 57
  3902                           ;mcc_generated_files/tmr6.c: 72:  T6CLKCON = 0x01;
  3903                           
  3904                           ; BSR set to: 61
  3905                           ;incstack = 0
  3906  003AAE  0E01               	movlw	1
  3907  003AB0  6E96               	movwf	150,c	;volatile
  3908                           
  3909                           ;mcc_generated_files/tmr6.c: 75:  T6HLT = 0x00;
  3910  003AB2  0E00               	movlw	0
  3911  003AB4  6E95               	movwf	149,c	;volatile
  3912                           
  3913                           ;mcc_generated_files/tmr6.c: 78:  T6RST = 0x00;
  3914  003AB6  0E00               	movlw	0
  3915  003AB8  6E97               	movwf	151,c	;volatile
  3916                           
  3917                           ;mcc_generated_files/tmr6.c: 81:  T6PR = 0x03;
  3918  003ABA  0E03               	movlw	3
  3919  003ABC  6E93               	movwf	147,c	;volatile
  3920                           
  3921                           ;mcc_generated_files/tmr6.c: 84:  T6TMR = 0x00;
  3922  003ABE  0E00               	movlw	0
  3923  003AC0  6E92               	movwf	146,c	;volatile
  3924                           
  3925                           ; BSR set to: 57
  3926                           ;mcc_generated_files/tmr6.c: 87:  PIR9bits.TMR6IF = 0;
  3927  003AC2  91A9               	bcf	169,0,b	;volatile
  3928                           
  3929                           ; BSR set to: 57
  3930                           ;mcc_generated_files/tmr6.c: 90:  PIE9bits.TMR6IE = 1;
  3931  003AC4  8199               	bsf	153,0,b	;volatile
  3932                           
  3933                           ; BSR set to: 57
  3934                           ;mcc_generated_files/tmr6.c: 93:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
  3935  003AC6  0E04               	movlw	low _TMR6_DefaultInterruptHandler
  3936  003AC8  6E06               	movwf	TMR6_SetInterruptHandler@InterruptHandler^0,c
  3937  003ACA  0E39               	movlw	high _TMR6_DefaultInterruptHandler
  3938  003ACC  6E07               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)^0,c
  3939  003ACE  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
  3940  003AD0  6E08               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)^0,c
  3941  003AD2  EC5F  F01F         	call	_TMR6_SetInterruptHandler	;wreg free
  3942                           
  3943                           ; BSR set to: 57
  3944                           ;mcc_generated_files/tmr6.c: 96:  T6CON = 0xFF;
  3945  003AD6  6894               	setf	148,c	;volatile
  3946                           
  3947                           ; BSR set to: 57
  3948  003AD8  0012               	return		;funcret
  3949  003ADA                     __end_of_TMR6_Initialize:
  3950                           	opt callstack 0
  3951                           
  3952 ;; *************** function _TMR6_SetInterruptHandler *****************
  3953 ;; Defined at:
  3954 ;;		line 179 in file "mcc_generated_files/tmr6.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  3957 ;;		 -> TMR6_DefaultInterruptHandler(1), 
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;		None
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  1    wreg      void 
  3962 ;; Registers used:
  3963 ;;		wreg, status,2, status,0
  3964 ;; Tracked objects:
  3965 ;;		On entry : 3F/39
  3966 ;;		On exit  : 3F/39
  3967 ;;		Unchanged: 3E/0
  3968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3969 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3972 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3973 ;;Total ram usage:        3 bytes
  3974 ;; Hardware stack levels used:    1
  3975 ;; Hardware stack levels required when called:    4
  3976 ;; This function calls:
  3977 ;;		Nothing
  3978 ;; This function is called by:
  3979 ;;		_TMR6_Initialize
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           	psect	text27
  3984  003EBE                     __ptext27:
  3985                           	opt callstack 0
  3986  003EBE                     _TMR6_SetInterruptHandler:
  3987                           	opt callstack 24
  3988                           
  3989                           ; BSR set to: 57
  3990                           ;mcc_generated_files/tmr6.c: 179: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 180: {;mcc_generated_files/tmr6.c: 181:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
  3991                           
  3992                           ; BSR set to: 57
  3993                           ;incstack = 0
  3994  003EBE  0060  F018  F0BD   	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
  3995  003EC4  0060  F01C  F0BE   	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
  3996  003ECA  0060  F020  F0BF   	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
  3997                           
  3998                           ; BSR set to: 57
  3999  003ED0  0012               	return		;funcret
  4000  003ED2                     __end_of_TMR6_SetInterruptHandler:
  4001                           	opt callstack 0
  4002                           
  4003 ;; *************** function _TMR5_Initialize *****************
  4004 ;; Defined at:
  4005 ;;		line 66 in file "mcc_generated_files/tmr5.c"
  4006 ;; Parameters:    Size  Location     Type
  4007 ;;		None
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;		None
  4010 ;; Return value:  Size  Location     Type
  4011 ;;                  1    wreg      void 
  4012 ;; Registers used:
  4013 ;;		wreg, status,2, status,0, cstack
  4014 ;; Tracked objects:
  4015 ;;		On entry : 3F/3F
  4016 ;;		On exit  : 3F/39
  4017 ;;		Unchanged: 0/0
  4018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4021 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4022 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4023 ;;Total ram usage:        2 bytes
  4024 ;; Hardware stack levels used:    1
  4025 ;; Hardware stack levels required when called:    5
  4026 ;; This function calls:
  4027 ;;		_TMR5_SetInterruptHandler
  4028 ;; This function is called by:
  4029 ;;		_SYSTEM_Initialize
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           	psect	text28
  4034  003734                     __ptext28:
  4035                           	opt callstack 0
  4036  003734                     _TMR5_Initialize:
  4037                           	opt callstack 24
  4038                           
  4039                           ; BSR set to: 63
  4040                           ;mcc_generated_files/tmr5.c: 71:     T5GCON = 0x00;
  4041                           
  4042                           ; BSR set to: 57
  4043                           ;incstack = 0
  4044  003734  0E00               	movlw	0
  4045  003736  6E9B               	movwf	155,c	;volatile
  4046                           
  4047                           ;mcc_generated_files/tmr5.c: 74:     T5GATE = 0x00;
  4048  003738  0E00               	movlw	0
  4049  00373A  6E9C               	movwf	156,c	;volatile
  4050                           
  4051                           ;mcc_generated_files/tmr5.c: 77:     T5CLK = 0x01;
  4052  00373C  0E01               	movlw	1
  4053  00373E  6E9D               	movwf	157,c	;volatile
  4054                           
  4055                           ;mcc_generated_files/tmr5.c: 80:     TMR5H = 0x63;
  4056  003740  0E63               	movlw	99
  4057  003742  6E99               	movwf	153,c	;volatile
  4058                           
  4059                           ;mcc_generated_files/tmr5.c: 83:     TMR5L = 0xC0;
  4060  003744  0EC0               	movlw	192
  4061  003746  6E98               	movwf	152,c	;volatile
  4062                           
  4063                           ; BSR set to: 63
  4064                           ;mcc_generated_files/tmr5.c: 86:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  4065  003748  5098               	movf	152,w,c	;volatile
  4066  00374A  006F FE64  F009    	movff	16281,??_TMR5_Initialize	;volatile
  4067  003750  6A0A               	clrf	(??_TMR5_Initialize+1)^0,c
  4068  003752  0060  F024  F00A   	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  4069  003758  6A09               	clrf	??_TMR5_Initialize^0,c
  4070  00375A  1009               	iorwf	??_TMR5_Initialize^0,w,c
  4071  00375C  0100               	movlb	0	; () banked
  4072  00375E  6FEA               	movwf	_timer5ReloadVal& (0+255),b	;volatile
  4073  003760  500A               	movf	(??_TMR5_Initialize+1)^0,w,c
  4074  003762  6FEB               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;mcc_generated_files/tmr5.c: 89:     PIR8bits.TMR5IF = 0;
  4078  003764  0139               	movlb	57	; () banked
  4079  003766  9DA8               	bcf	168,6,b	;volatile
  4080                           
  4081                           ; BSR set to: 57
  4082                           ;mcc_generated_files/tmr5.c: 92:     PIE8bits.TMR5IE = 1;
  4083  003768  8D98               	bsf	152,6,b	;volatile
  4084                           
  4085                           ; BSR set to: 57
  4086                           ;mcc_generated_files/tmr5.c: 95:     TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandl
      +                          er);
  4087  00376A  0E96               	movlw	low _TMR5_DefaultInterruptHandler
  4088  00376C  6E06               	movwf	TMR5_SetInterruptHandler@InterruptHandler^0,c
  4089  00376E  0E3D               	movlw	high _TMR5_DefaultInterruptHandler
  4090  003770  6E07               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)^0,c
  4091  003772  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
  4092  003774  6E08               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)^0,c
  4093  003776  EC69  F01F         	call	_TMR5_SetInterruptHandler	;wreg free
  4094                           
  4095                           ; BSR set to: 57
  4096                           ;mcc_generated_files/tmr5.c: 98:     T5CON = 0x31;
  4097  00377A  0E31               	movlw	49
  4098  00377C  6E9A               	movwf	154,c	;volatile
  4099                           
  4100                           ; BSR set to: 57
  4101  00377E  0012               	return		;funcret
  4102  003780                     __end_of_TMR5_Initialize:
  4103                           	opt callstack 0
  4104                           
  4105 ;; *************** function _TMR5_SetInterruptHandler *****************
  4106 ;; Defined at:
  4107 ;;		line 194 in file "mcc_generated_files/tmr5.c"
  4108 ;; Parameters:    Size  Location     Type
  4109 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  4110 ;;		 -> TMR5_DefaultInterruptHandler(1), 
  4111 ;; Auto vars:     Size  Location     Type
  4112 ;;		None
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  1    wreg      void 
  4115 ;; Registers used:
  4116 ;;		wreg, status,2, status,0
  4117 ;; Tracked objects:
  4118 ;;		On entry : 3F/39
  4119 ;;		On exit  : 3F/39
  4120 ;;		Unchanged: 3E/0
  4121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4122 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4125 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4126 ;;Total ram usage:        3 bytes
  4127 ;; Hardware stack levels used:    1
  4128 ;; Hardware stack levels required when called:    4
  4129 ;; This function calls:
  4130 ;;		Nothing
  4131 ;; This function is called by:
  4132 ;;		_TMR5_Initialize
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136                           	psect	text29
  4137  003ED2                     __ptext29:
  4138                           	opt callstack 0
  4139  003ED2                     _TMR5_SetInterruptHandler:
  4140                           	opt callstack 24
  4141                           
  4142                           ; BSR set to: 57
  4143                           ;mcc_generated_files/tmr5.c: 195:     TMR5_InterruptHandler = InterruptHandler;
  4144                           
  4145                           ; BSR set to: 57
  4146                           ;incstack = 0
  4147  003ED2  0060  F018  F0BA   	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
  4148  003ED8  0060  F01C  F0BB   	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
  4149  003EDE  0060  F020  F0BC   	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
  4150                           
  4151                           ; BSR set to: 57
  4152  003EE4  0012               	return		;funcret
  4153  003EE6                     __end_of_TMR5_SetInterruptHandler:
  4154                           	opt callstack 0
  4155                           
  4156 ;; *************** function _TMR2_Initialize *****************
  4157 ;; Defined at:
  4158 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;		None
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;		None
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  1    wreg      void 
  4165 ;; Registers used:
  4166 ;;		wreg, status,2
  4167 ;; Tracked objects:
  4168 ;;		On entry : 3F/3E
  4169 ;;		On exit  : 3F/39
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4176 ;;Total ram usage:        0 bytes
  4177 ;; Hardware stack levels used:    1
  4178 ;; Hardware stack levels required when called:    4
  4179 ;; This function calls:
  4180 ;;		Nothing
  4181 ;; This function is called by:
  4182 ;;		_SYSTEM_Initialize
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           	psect	text30
  4187  003D26                     __ptext30:
  4188                           	opt callstack 0
  4189  003D26                     _TMR2_Initialize:
  4190                           	opt callstack 25
  4191                           
  4192                           ; BSR set to: 62
  4193                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
  4194                           
  4195                           ; BSR set to: 57
  4196                           ;incstack = 0
  4197  003D26  0E01               	movlw	1
  4198  003D28  6EAE               	movwf	174,c	;volatile
  4199                           
  4200                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  4201  003D2A  0E00               	movlw	0
  4202  003D2C  6EAD               	movwf	173,c	;volatile
  4203                           
  4204                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  4205  003D2E  0E00               	movlw	0
  4206  003D30  6EAF               	movwf	175,c	;volatile
  4207                           
  4208                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
  4209  003D32  0E63               	movlw	99
  4210  003D34  6EAB               	movwf	171,c	;volatile
  4211                           
  4212                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  4213  003D36  0E00               	movlw	0
  4214  003D38  6EAA               	movwf	170,c	;volatile
  4215                           
  4216                           ; BSR set to: 62
  4217                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  4218  003D3A  0139               	movlb	57	; () banked
  4219  003D3C  95A4               	bcf	164,2,b	;volatile
  4220                           
  4221                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
  4222  003D3E  0EC0               	movlw	192
  4223  003D40  6EAC               	movwf	172,c	;volatile
  4224                           
  4225                           ; BSR set to: 57
  4226  003D42  0012               	return		;funcret
  4227  003D44                     __end_of_TMR2_Initialize:
  4228                           	opt callstack 0
  4229                           
  4230 ;; *************** function _SPI1_Initialize *****************
  4231 ;; Defined at:
  4232 ;;		line 64 in file "mcc_generated_files/spi1.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;		None
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;		None
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  1    wreg      void 
  4239 ;; Registers used:
  4240 ;;		wreg, status,2
  4241 ;; Tracked objects:
  4242 ;;		On entry : 3F/39
  4243 ;;		On exit  : 3F/3D
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4250 ;;Total ram usage:        0 bytes
  4251 ;; Hardware stack levels used:    1
  4252 ;; Hardware stack levels required when called:    4
  4253 ;; This function calls:
  4254 ;;		Nothing
  4255 ;; This function is called by:
  4256 ;;		_SYSTEM_Initialize
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260                           	psect	text31
  4261  003DB0                     __ptext31:
  4262                           	opt callstack 0
  4263  003DB0                     _SPI1_Initialize:
  4264                           	opt callstack 25
  4265                           
  4266                           ; BSR set to: 57
  4267                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
  4268                           
  4269                           ; BSR set to: 57
  4270                           ;incstack = 0
  4271  003DB0  0E40               	movlw	64
  4272  003DB2  013D               	movlb	61	; () banked
  4273  003DB4  6F15               	movwf	21,b	;volatile
  4274                           
  4275                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
  4276  003DB6  0E03               	movlw	3
  4277  003DB8  6F16               	movwf	22,b	;volatile
  4278                           
  4279                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x0F;
  4280  003DBA  0E0F               	movlw	15
  4281  003DBC  6F19               	movwf	25,b	;volatile
  4282                           
  4283                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
  4284  003DBE  0E00               	movlw	0
  4285  003DC0  6F1C               	movwf	28,b	;volatile
  4286                           
  4287                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x82;
  4288  003DC2  0E82               	movlw	130
  4289  003DC4  6F14               	movwf	20,b	;volatile
  4290                           
  4291                           ; BSR set to: 61
  4292  003DC6  0012               	return		;funcret
  4293  003DC8                     __end_of_SPI1_Initialize:
  4294                           	opt callstack 0
  4295                           
  4296 ;; *************** function _PWM8_Initialize *****************
  4297 ;; Defined at:
  4298 ;;		line 58 in file "mcc_generated_files/pwm8.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;		None
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;		None
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  1    wreg      void 
  4305 ;; Registers used:
  4306 ;;		wreg, status,2
  4307 ;; Tracked objects:
  4308 ;;		On entry : 3F/39
  4309 ;;		On exit  : 3F/3F
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4316 ;;Total ram usage:        0 bytes
  4317 ;; Hardware stack levels used:    1
  4318 ;; Hardware stack levels required when called:    4
  4319 ;; This function calls:
  4320 ;;		Nothing
  4321 ;; This function is called by:
  4322 ;;		_SYSTEM_Initialize
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           
  4326                           	psect	text32
  4327  003DC8                     __ptext32:
  4328                           	opt callstack 0
  4329  003DC8                     _PWM8_Initialize:
  4330                           	opt callstack 25
  4331                           
  4332                           ; BSR set to: 57
  4333                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
  4334                           
  4335                           ; BSR set to: 61
  4336                           ;incstack = 0
  4337  003DC8  0E80               	movlw	128
  4338  003DCA  6E62               	movwf	98,c	;volatile
  4339                           
  4340                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x31;
  4341  003DCC  0E31               	movlw	49
  4342  003DCE  6E61               	movwf	97,c	;volatile
  4343                           
  4344                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0xC0;
  4345  003DD0  0EC0               	movlw	192
  4346  003DD2  6E60               	movwf	96,c	;volatile
  4347                           
  4348                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
  4349  003DD4  013F               	movlb	63	; () banked
  4350  003DD6  515F               	movf	95,w,b	;volatile
  4351  003DD8  0B3F               	andlw	-193
  4352  003DDA  0940               	iorlw	64
  4353  003DDC  6F5F               	movwf	95,b	;volatile
  4354                           
  4355                           ; BSR set to: 63
  4356  003DDE  0012               	return		;funcret
  4357  003DE0                     __end_of_PWM8_Initialize:
  4358                           	opt callstack 0
  4359                           
  4360 ;; *************** function _PMD_Initialize *****************
  4361 ;; Defined at:
  4362 ;;		line 84 in file "mcc_generated_files/mcc.c"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;		None
  4365 ;; Auto vars:     Size  Location     Type
  4366 ;;		None
  4367 ;; Return value:  Size  Location     Type
  4368 ;;                  1    wreg      void 
  4369 ;; Registers used:
  4370 ;;		wreg, status,2
  4371 ;; Tracked objects:
  4372 ;;		On entry : 3F/39
  4373 ;;		On exit  : 3F/39
  4374 ;;		Unchanged: 0/0
  4375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4380 ;;Total ram usage:        0 bytes
  4381 ;; Hardware stack levels used:    1
  4382 ;; Hardware stack levels required when called:    4
  4383 ;; This function calls:
  4384 ;;		Nothing
  4385 ;; This function is called by:
  4386 ;;		_SYSTEM_Initialize
  4387 ;; This function uses a non-reentrant model
  4388 ;;
  4389                           
  4390                           	psect	text33
  4391  003CE2                     __ptext33:
  4392                           	opt callstack 0
  4393  003CE2                     _PMD_Initialize:
  4394                           	opt callstack 25
  4395                           
  4396                           ; BSR set to: 57
  4397                           ;mcc_generated_files/mcc.c: 87:     PMD0 = 0x00;
  4398                           
  4399                           ; BSR set to: 63
  4400                           ;incstack = 0
  4401  003CE2  0E00               	movlw	0
  4402  003CE4  6FC0               	movwf	192,b	;volatile
  4403                           
  4404                           ;mcc_generated_files/mcc.c: 89:     PMD1 = 0x00;
  4405  003CE6  0E00               	movlw	0
  4406  003CE8  6FC1               	movwf	193,b	;volatile
  4407                           
  4408                           ;mcc_generated_files/mcc.c: 91:     PMD2 = 0x00;
  4409  003CEA  0E00               	movlw	0
  4410  003CEC  6FC2               	movwf	194,b	;volatile
  4411                           
  4412                           ;mcc_generated_files/mcc.c: 93:     PMD3 = 0x00;
  4413  003CEE  0E00               	movlw	0
  4414  003CF0  6FC3               	movwf	195,b	;volatile
  4415                           
  4416                           ;mcc_generated_files/mcc.c: 95:     PMD4 = 0x00;
  4417  003CF2  0E00               	movlw	0
  4418  003CF4  6FC4               	movwf	196,b	;volatile
  4419                           
  4420                           ;mcc_generated_files/mcc.c: 97:     PMD5 = 0x00;
  4421  003CF6  0E00               	movlw	0
  4422  003CF8  6FC5               	movwf	197,b	;volatile
  4423                           
  4424                           ;mcc_generated_files/mcc.c: 99:     PMD6 = 0x00;
  4425  003CFA  0E00               	movlw	0
  4426  003CFC  6FC6               	movwf	198,b	;volatile
  4427                           
  4428                           ;mcc_generated_files/mcc.c: 101:     PMD7 = 0x00;
  4429  003CFE  0E00               	movlw	0
  4430  003D00  6FC7               	movwf	199,b	;volatile
  4431                           
  4432                           ; BSR set to: 57
  4433  003D02  0012               	return		;funcret
  4434  003D04                     __end_of_PMD_Initialize:
  4435                           	opt callstack 0
  4436                           
  4437 ;; *************** function _PIN_MANAGER_Initialize *****************
  4438 ;; Defined at:
  4439 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4440 ;; Parameters:    Size  Location     Type
  4441 ;;		None
  4442 ;; Auto vars:     Size  Location     Type
  4443 ;;		None
  4444 ;; Return value:  Size  Location     Type
  4445 ;;                  1    wreg      void 
  4446 ;; Registers used:
  4447 ;;		wreg, status,2
  4448 ;; Tracked objects:
  4449 ;;		On entry : 3F/39
  4450 ;;		On exit  : 3F/3A
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4457 ;;Total ram usage:        0 bytes
  4458 ;; Hardware stack levels used:    1
  4459 ;; Hardware stack levels required when called:    4
  4460 ;; This function calls:
  4461 ;;		Nothing
  4462 ;; This function is called by:
  4463 ;;		_SYSTEM_Initialize
  4464 ;; This function uses a non-reentrant model
  4465 ;;
  4466                           
  4467                           	psect	text34
  4468  003114                     __ptext34:
  4469                           	opt callstack 0
  4470  003114                     _PIN_MANAGER_Initialize:
  4471                           	opt callstack 25
  4472                           
  4473                           ; BSR set to: 57
  4474                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x01;
  4475                           
  4476                           ; BSR set to: 57
  4477                           ;incstack = 0
  4478  003114  0E01               	movlw	1
  4479  003116  6EBE               	movwf	190,c	;volatile
  4480                           
  4481                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x02;
  4482  003118  0E02               	movlw	2
  4483  00311A  6EBD               	movwf	189,c	;volatile
  4484                           
  4485                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  4486  00311C  0E00               	movlw	0
  4487  00311E  6EBA               	movwf	186,c	;volatile
  4488                           
  4489                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  4490  003120  0E00               	movlw	0
  4491  003122  6EBB               	movwf	187,c	;volatile
  4492                           
  4493                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x06;
  4494  003124  0E06               	movlw	6
  4495  003126  6EBC               	movwf	188,c	;volatile
  4496                           
  4497                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x06;
  4498  003128  0E06               	movlw	6
  4499  00312A  6EC6               	movwf	198,c	;volatile
  4500                           
  4501                           ; BSR set to: 57
  4502                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  4503  00312C  68C2               	setf	194,c	;volatile
  4504                           
  4505                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  4506  00312E  0EBF               	movlw	191
  4507  003130  6EC3               	movwf	195,c	;volatile
  4508                           
  4509                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x91;
  4510  003132  0E91               	movlw	145
  4511  003134  6EC4               	movwf	196,c	;volatile
  4512                           
  4513                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFD;
  4514  003136  0EFD               	movlw	253
  4515  003138  6EC5               	movwf	197,c	;volatile
  4516                           
  4517                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFD;
  4518  00313A  0EFD               	movlw	253
  4519  00313C  013A               	movlb	58	; () banked
  4520  00313E  6F70               	movwf	112,b	;volatile
  4521                           
  4522                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
  4523  003140  0E00               	movlw	0
  4524  003142  6F60               	movwf	96,b	;volatile
  4525                           
  4526                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3F;
  4527  003144  0E3F               	movlw	63
  4528  003146  6F50               	movwf	80,b	;volatile
  4529                           
  4530                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x06;
  4531  003148  0E06               	movlw	6
  4532  00314A  6F80               	movwf	128,b	;volatile
  4533                           
  4534                           ; BSR set to: 58
  4535                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  4536  00314C  6940               	setf	64,b	;volatile
  4537                           
  4538                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  4539  00314E  0E00               	movlw	0
  4540  003150  6F71               	movwf	113,b	;volatile
  4541                           
  4542                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  4543  003152  0E00               	movlw	0
  4544  003154  6F81               	movwf	129,b	;volatile
  4545                           
  4546                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  4547  003156  0E00               	movlw	0
  4548  003158  6F51               	movwf	81,b	;volatile
  4549                           
  4550                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  4551  00315A  0E00               	movlw	0
  4552  00315C  6F41               	movwf	65,b	;volatile
  4553                           
  4554                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  4555  00315E  0E00               	movlw	0
  4556  003160  6F61               	movwf	97,b	;volatile
  4557                           
  4558                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  4559  003162  0E00               	movlw	0
  4560  003164  6F5A               	movwf	90,b	;volatile
  4561                           
  4562                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  4563  003166  0E00               	movlw	0
  4564  003168  6F5B               	movwf	91,b	;volatile
  4565                           
  4566                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  4567  00316A  0E00               	movlw	0
  4568  00316C  6F6A               	movwf	106,b	;volatile
  4569                           
  4570                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  4571  00316E  0E00               	movlw	0
  4572  003170  6F6B               	movwf	107,b	;volatile
  4573                           
  4574                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  4575  003172  0E00               	movlw	0
  4576  003174  6F7A               	movwf	122,b	;volatile
  4577                           
  4578                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  4579  003176  0E00               	movlw	0
  4580  003178  6F7B               	movwf	123,b	;volatile
  4581                           
  4582                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  4583  00317A  0E00               	movlw	0
  4584  00317C  6F82               	movwf	130,b	;volatile
  4585                           
  4586                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  4587  00317E  0E00               	movlw	0
  4588  003180  6F42               	movwf	66,b	;volatile
  4589                           
  4590                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
  4591  003182  0E00               	movlw	0
  4592  003184  6F52               	movwf	82,b	;volatile
  4593                           
  4594                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
  4595  003186  0E00               	movlw	0
  4596  003188  6F62               	movwf	98,b	;volatile
  4597                           
  4598                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  4599  00318A  0E00               	movlw	0
  4600  00318C  6F72               	movwf	114,b	;volatile
  4601                           
  4602                           ; BSR set to: 58
  4603                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  4604  00318E  6943               	setf	67,b	;volatile
  4605                           
  4606                           ; BSR set to: 58
  4607                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  4608  003190  6953               	setf	83,b	;volatile
  4609                           
  4610                           ; BSR set to: 58
  4611                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  4612  003192  6963               	setf	99,b	;volatile
  4613                           
  4614                           ; BSR set to: 58
  4615                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  4616  003194  6973               	setf	115,b	;volatile
  4617                           
  4618                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  4619  003196  0E07               	movlw	7
  4620  003198  6F83               	movwf	131,b	;volatile
  4621                           
  4622                           ;mcc_generated_files/pin_manager.c: 128:     U2RXPPS = 0x0F;
  4623  00319A  0E0F               	movlw	15
  4624  00319C  6FE8               	movwf	232,b	;volatile
  4625                           
  4626                           ;mcc_generated_files/pin_manager.c: 129:     SPI1SCKPPS = 0x13;
  4627  00319E  0E13               	movlw	19
  4628  0031A0  6FDE               	movwf	222,b	;volatile
  4629                           
  4630                           ;mcc_generated_files/pin_manager.c: 130:     RB6PPS = 0x16;
  4631  0031A2  0E16               	movlw	22
  4632  0031A4  6F0E               	movwf	14,b	;volatile
  4633                           
  4634                           ;mcc_generated_files/pin_manager.c: 131:     RC3PPS = 0x1E;
  4635  0031A6  0E1E               	movlw	30
  4636  0031A8  6F13               	movwf	19,b	;volatile
  4637                           
  4638                           ;mcc_generated_files/pin_manager.c: 132:     RD1PPS = 0x10;
  4639  0031AA  0E10               	movlw	16
  4640  0031AC  6F19               	movwf	25,b	;volatile
  4641                           
  4642                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
  4643  0031AE  0E1F               	movlw	31
  4644  0031B0  6F15               	movwf	21,b	;volatile
  4645                           
  4646                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
  4647  0031B2  0E13               	movlw	19
  4648  0031B4  6F16               	movwf	22,b	;volatile
  4649                           
  4650                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
  4651  0031B6  0E17               	movlw	23
  4652  0031B8  6FE5               	movwf	229,b	;volatile
  4653                           
  4654                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
  4655  0031BA  0E14               	movlw	20
  4656  0031BC  6FDF               	movwf	223,b	;volatile
  4657                           
  4658                           ; BSR set to: 58
  4659  0031BE  0012               	return		;funcret
  4660  0031C0                     __end_of_PIN_MANAGER_Initialize:
  4661                           	opt callstack 0
  4662                           
  4663 ;; *************** function _OSCILLATOR_Initialize *****************
  4664 ;; Defined at:
  4665 ;;		line 66 in file "mcc_generated_files/mcc.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;		None
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;		None
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  1    wreg      void 
  4672 ;; Registers used:
  4673 ;;		wreg, status,2
  4674 ;; Tracked objects:
  4675 ;;		On entry : 3F/3A
  4676 ;;		On exit  : 3F/39
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4683 ;;Total ram usage:        0 bytes
  4684 ;; Hardware stack levels used:    1
  4685 ;; Hardware stack levels required when called:    4
  4686 ;; This function calls:
  4687 ;;		Nothing
  4688 ;; This function is called by:
  4689 ;;		_SYSTEM_Initialize
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           	psect	text35
  4694  003D44                     __ptext35:
  4695                           	opt callstack 0
  4696  003D44                     _OSCILLATOR_Initialize:
  4697                           	opt callstack 25
  4698                           
  4699                           ; BSR set to: 58
  4700                           ;mcc_generated_files/mcc.c: 69:     OSCCON1 = 0x20;
  4701                           
  4702                           ; BSR set to: 58
  4703                           ;incstack = 0
  4704  003D44  0E20               	movlw	32
  4705  003D46  0139               	movlb	57	; () banked
  4706  003D48  6FD9               	movwf	217,b	;volatile
  4707                           
  4708                           ;mcc_generated_files/mcc.c: 71:     OSCCON3 = 0x00;
  4709  003D4A  0E00               	movlw	0
  4710  003D4C  6FDB               	movwf	219,b	;volatile
  4711                           
  4712                           ;mcc_generated_files/mcc.c: 73:     OSCEN = 0x00;
  4713  003D4E  0E00               	movlw	0
  4714  003D50  6FDD               	movwf	221,b	;volatile
  4715                           
  4716                           ;mcc_generated_files/mcc.c: 75:     OSCFRQ = 0x08;
  4717  003D52  0E08               	movlw	8
  4718  003D54  6FDF               	movwf	223,b	;volatile
  4719                           
  4720                           ;mcc_generated_files/mcc.c: 77:     OSCTUNE = 0x00;
  4721  003D56  0E00               	movlw	0
  4722  003D58  6FDE               	movwf	222,b	;volatile
  4723  003D5A                     l66:
  4724                           
  4725                           ; BSR set to: 57
  4726                           ;mcc_generated_files/mcc.c: 79:     while(PLLR == 0)
  4727  003D5A  B1DC               	btfsc	220,0,b	;volatile
  4728  003D5C  0012               	return	
  4729  003D5E  D7FD               	goto	l66
  4730  003D60                     __end_of_OSCILLATOR_Initialize:
  4731                           	opt callstack 0
  4732                           
  4733 ;; *************** function _INTERRUPT_Initialize *****************
  4734 ;; Defined at:
  4735 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4736 ;; Parameters:    Size  Location     Type
  4737 ;;		None
  4738 ;; Auto vars:     Size  Location     Type
  4739 ;;  state           1    5[COMRAM] _Bool 
  4740 ;; Return value:  Size  Location     Type
  4741 ;;                  1    wreg      void 
  4742 ;; Registers used:
  4743 ;;		wreg, status,2
  4744 ;; Tracked objects:
  4745 ;;		On entry : 3F/0
  4746 ;;		On exit  : 3F/39
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4750 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4752 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4753 ;;Total ram usage:        1 bytes
  4754 ;; Hardware stack levels used:    1
  4755 ;; Hardware stack levels required when called:    4
  4756 ;; This function calls:
  4757 ;;		Nothing
  4758 ;; This function is called by:
  4759 ;;		_SYSTEM_Initialize
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763                           	psect	text36
  4764  003780                     __ptext36:
  4765                           	opt callstack 0
  4766  003780                     _INTERRUPT_Initialize:
  4767                           	opt callstack 25
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
  4771                           
  4772                           ; BSR set to: 57
  4773                           ;incstack = 0
  4774  003780  8AD2               	bsf	210,5,c	;volatile
  4775                           
  4776                           ; BSR set to: 0
  4777                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
  4778  003782  0E00               	movlw	0
  4779  003784  BED2               	btfsc	16338,7,c	;volatile
  4780  003786  0E01               	movlw	1
  4781  003788  6E06               	movwf	INTERRUPT_Initialize@state^0,c
  4782                           
  4783                           ; BSR set to: 0
  4784                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
  4785  00378A  9ED2               	bcf	16338,7,c	;volatile
  4786                           
  4787                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
  4788  00378C  0E55               	movlw	85
  4789  00378E  6ED4               	movwf	212,c	;volatile
  4790                           
  4791                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
  4792  003790  0EAA               	movlw	170
  4793  003792  6ED4               	movwf	212,c	;volatile
  4794                           
  4795                           ; BSR set to: 0
  4796                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
  4797  003794  90D4               	bcf	212,0,c	;volatile
  4798                           
  4799                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
  4800  003796  0E00               	movlw	0
  4801  003798  0138               	movlb	56	; () banked
  4802  00379A  6F9F               	movwf	159,b	;volatile
  4803                           
  4804                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
  4805  00379C  0E00               	movlw	0
  4806  00379E  6F9E               	movwf	158,b	;volatile
  4807                           
  4808                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
  4809  0037A0  0E08               	movlw	8
  4810  0037A2  6F9D               	movwf	157,b	;volatile
  4811                           
  4812                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
  4813  0037A4  0E55               	movlw	85
  4814  0037A6  6ED4               	movwf	212,c	;volatile
  4815                           
  4816                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
  4817  0037A8  0EAA               	movlw	170
  4818  0037AA  6ED4               	movwf	212,c	;volatile
  4819                           
  4820                           ; BSR set to: 56
  4821                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
  4822  0037AC  80D4               	bsf	212,0,c	;volatile
  4823                           
  4824                           ; BSR set to: 56
  4825                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
  4826  0037AE  B006               	btfsc	INTERRUPT_Initialize@state^0,0,c
  4827  0037B0  D002               	bra	u5125
  4828  0037B2  9ED2               	bcf	16338,7,c	;volatile
  4829  0037B4  D001               	bra	u5126
  4830  0037B6                     u5125:
  4831  0037B6  8ED2               	bsf	16338,7,c	;volatile
  4832  0037B8                     u5126:
  4833                           
  4834                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR6bits.U2TXIP = 1;
  4835  0037B8  0139               	movlb	57	; () banked
  4836  0037BA  8786               	bsf	134,3,b	;volatile
  4837                           
  4838                           ; BSR set to: 57
  4839                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR6bits.U2RXIP = 1;
  4840  0037BC  8586               	bsf	134,2,b	;volatile
  4841                           
  4842                           ; BSR set to: 57
  4843                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR3bits.U1TXIP = 1;
  4844  0037BE  8983               	bsf	131,4,b	;volatile
  4845                           
  4846                           ; BSR set to: 57
  4847                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR3bits.U1RXIP = 1;
  4848  0037C0  8783               	bsf	131,3,b	;volatile
  4849                           
  4850                           ; BSR set to: 57
  4851                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR9bits.TMR6IP = 1;
  4852  0037C2  8189               	bsf	137,0,b	;volatile
  4853                           
  4854                           ; BSR set to: 57
  4855                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR8bits.TMR5IP = 1;
  4856  0037C4  8D88               	bsf	136,6,b	;volatile
  4857                           
  4858                           ; BSR set to: 57
  4859  0037C6  0012               	return		;funcret
  4860  0037C8                     __end_of_INTERRUPT_Initialize:
  4861                           	opt callstack 0
  4862                           
  4863 ;; *************** function _ADCC_Initialize *****************
  4864 ;; Defined at:
  4865 ;;		line 62 in file "mcc_generated_files/adcc.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;		None
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;		None
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  1    wreg      void 
  4872 ;; Registers used:
  4873 ;;		wreg, status,2
  4874 ;; Tracked objects:
  4875 ;;		On entry : 3F/39
  4876 ;;		On exit  : 3F/3E
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4883 ;;Total ram usage:        0 bytes
  4884 ;; Hardware stack levels used:    1
  4885 ;; Hardware stack levels required when called:    4
  4886 ;; This function calls:
  4887 ;;		Nothing
  4888 ;; This function is called by:
  4889 ;;		_SYSTEM_Initialize
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           	psect	text37
  4894  00362E                     __ptext37:
  4895                           	opt callstack 0
  4896  00362E                     _ADCC_Initialize:
  4897                           	opt callstack 25
  4898                           
  4899                           ; BSR set to: 57
  4900                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  4901                           
  4902                           ; BSR set to: 57
  4903                           ;incstack = 0
  4904  00362E  0E00               	movlw	0
  4905  003630  013E               	movlb	62	; () banked
  4906  003632  6FDE               	movwf	222,b	;volatile
  4907                           
  4908                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  4909  003634  0E00               	movlw	0
  4910  003636  6FDF               	movwf	223,b	;volatile
  4911                           
  4912                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  4913  003638  0E00               	movlw	0
  4914  00363A  6FE0               	movwf	224,b	;volatile
  4915                           
  4916                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  4917  00363C  0E00               	movlw	0
  4918  00363E  6FE1               	movwf	225,b	;volatile
  4919                           
  4920                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  4921  003640  0E00               	movlw	0
  4922  003642  6FE4               	movwf	228,b	;volatile
  4923                           
  4924                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  4925  003644  0E00               	movlw	0
  4926  003646  6FE5               	movwf	229,b	;volatile
  4927                           
  4928                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
  4929  003648  0E00               	movlw	0
  4930  00364A  6FEA               	movwf	234,b	;volatile
  4931                           
  4932                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
  4933  00364C  0E00               	movlw	0
  4934  00364E  6FEC               	movwf	236,b	;volatile
  4935                           
  4936                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  4937  003650  0E00               	movlw	0
  4938  003652  6FF1               	movwf	241,b	;volatile
  4939                           
  4940                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x00;
  4941  003654  0E00               	movlw	0
  4942  003656  6FF3               	movwf	243,b	;volatile
  4943                           
  4944                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x00;
  4945  003658  0E00               	movlw	0
  4946  00365A  6FF4               	movwf	244,b	;volatile
  4947                           
  4948                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
  4949  00365C  0E00               	movlw	0
  4950  00365E  6FF5               	movwf	245,b	;volatile
  4951                           
  4952                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
  4953  003660  0E00               	movlw	0
  4954  003662  6FF6               	movwf	246,b	;volatile
  4955                           
  4956                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
  4957  003664  0E00               	movlw	0
  4958  003666  6FF7               	movwf	247,b	;volatile
  4959                           
  4960                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
  4961  003668  0E00               	movlw	0
  4962  00366A  6FF9               	movwf	249,b	;volatile
  4963                           
  4964                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x02;
  4965  00366C  0E02               	movlw	2
  4966  00366E  6FFA               	movwf	250,b	;volatile
  4967                           
  4968                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x20;
  4969  003670  0E20               	movlw	32
  4970  003672  6FFB               	movwf	251,b	;volatile
  4971                           
  4972                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
  4973  003674  0E00               	movlw	0
  4974  003676  6FFC               	movwf	252,b	;volatile
  4975                           
  4976                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
  4977  003678  0E00               	movlw	0
  4978  00367A  6FFD               	movwf	253,b	;volatile
  4979                           
  4980                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
  4981  00367C  0E00               	movlw	0
  4982  00367E  6FFE               	movwf	254,b	;volatile
  4983                           
  4984                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x3F;
  4985  003680  0E3F               	movlw	63
  4986  003682  6FFF               	movwf	255,b	;volatile
  4987                           
  4988                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0xC4;
  4989  003684  0EC4               	movlw	196
  4990  003686  6FF8               	movwf	248,b	;volatile
  4991                           
  4992                           ; BSR set to: 62
  4993  003688  0012               	return		;funcret
  4994  00368A                     __end_of_ADCC_Initialize:
  4995                           	opt callstack 0
  4996                           
  4997 ;; *************** function _Digital232_init *****************
  4998 ;; Defined at:
  4999 ;;		line 9 in file "d232.c"
  5000 ;; Parameters:    Size  Location     Type
  5001 ;;		None
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;		None
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  1    wreg      void 
  5006 ;; Registers used:
  5007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5017 ;;Total ram usage:        0 bytes
  5018 ;; Hardware stack levels used:    1
  5019 ;; Hardware stack levels required when called:   13
  5020 ;; This function calls:
  5021 ;;		_ADCC_StartConversion
  5022 ;;		_StartTimer
  5023 ;;		_UART2_Read
  5024 ;;		_UART2_is_rx_ready
  5025 ;;		_WaitMs
  5026 ;;		_printf
  5027 ;; This function is called by:
  5028 ;;		_main
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           	psect	text38
  5033  002D26                     __ptext38:
  5034                           	opt callstack 0
  5035  002D26                     _Digital232_init:
  5036                           	opt callstack 17
  5037                           
  5038                           ;d232.c: 11:  printf("%s", "XQ\r");
  5039                           
  5040                           ; BSR set to: 62
  5041                           ;incstack = 0
  5042  002D26  0E46               	movlw	low STR_4
  5043  002D28  0100               	movlb	0	; () banked
  5044  002D2A  6F64               	movwf	printf@fmt& (0+255),b
  5045  002D2C  0E42               	movlw	low STR_5
  5046  002D2E  6F65               	movwf	(?_printf+1)& (0+255),b
  5047  002D30  5165               	movf	(?_printf+1)& (0+255),w,b
  5048  002D32  A4D8               	btfss	status,2,c
  5049  002D34  0E20               	movlw	high __smallconst
  5050  002D36  6F66               	movwf	(?_printf+2)& (0+255),b
  5051  002D38  ECB0  F01E         	call	_printf	;wreg free
  5052                           
  5053                           ; BSR set to: 0
  5054                           ;d232.c: 12:  WaitMs(5);
  5055  002D3C  0E00               	movlw	0
  5056  002D3E  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  5057  002D40  0E05               	movlw	5
  5058  002D42  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  5059  002D44  EC6D  F01D         	call	_WaitMs	;wreg free
  5060                           
  5061                           ;d232.c: 13:  printf("%s", "T2\r");
  5062  002D48  0E46               	movlw	low STR_4
  5063  002D4A  0100               	movlb	0	; () banked
  5064  002D4C  6F64               	movwf	printf@fmt& (0+255),b
  5065  002D4E  0E32               	movlw	low STR_7
  5066  002D50  6F65               	movwf	(?_printf+1)& (0+255),b
  5067  002D52  5165               	movf	(?_printf+1)& (0+255),w,b
  5068  002D54  A4D8               	btfss	status,2,c
  5069  002D56  0E20               	movlw	high __smallconst
  5070  002D58  6F66               	movwf	(?_printf+2)& (0+255),b
  5071  002D5A  ECB0  F01E         	call	_printf	;wreg free
  5072                           
  5073                           ;d232.c: 14:  WaitMs(800);
  5074  002D5E  0E03               	movlw	3
  5075  002D60  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  5076  002D62  0E20               	movlw	32
  5077  002D64  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  5078  002D66  EC6D  F01D         	call	_WaitMs	;wreg free
  5079                           
  5080                           ;d232.c: 15:  printf("%s", "C4\r");
  5081  002D6A  0E46               	movlw	low STR_4
  5082  002D6C  0100               	movlb	0	; () banked
  5083  002D6E  6F64               	movwf	printf@fmt& (0+255),b
  5084  002D70  0E36               	movlw	low STR_9
  5085  002D72  6F65               	movwf	(?_printf+1)& (0+255),b
  5086  002D74  5165               	movf	(?_printf+1)& (0+255),w,b
  5087  002D76  A4D8               	btfss	status,2,c
  5088  002D78  0E20               	movlw	high __smallconst
  5089  002D7A  6F66               	movwf	(?_printf+2)& (0+255),b
  5090  002D7C  ECB0  F01E         	call	_printf	;wreg free
  5091                           
  5092                           ; BSR set to: 0
  5093                           ;d232.c: 16:  WaitMs(5);
  5094  002D80  0E00               	movlw	0
  5095  002D82  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  5096  002D84  0E05               	movlw	5
  5097  002D86  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  5098  002D88  EC6D  F01D         	call	_WaitMs	;wreg free
  5099                           
  5100                           ;d232.c: 17:  printf("%s", "F4\r");
  5101  002D8C  0E46               	movlw	low STR_4
  5102  002D8E  0100               	movlb	0	; () banked
  5103  002D90  6F64               	movwf	printf@fmt& (0+255),b
  5104  002D92  0E3A               	movlw	low STR_11
  5105  002D94  6F65               	movwf	(?_printf+1)& (0+255),b
  5106  002D96  5165               	movf	(?_printf+1)& (0+255),w,b
  5107  002D98  A4D8               	btfss	status,2,c
  5108  002D9A  0E20               	movlw	high __smallconst
  5109  002D9C  6F66               	movwf	(?_printf+2)& (0+255),b
  5110  002D9E  ECB0  F01E         	call	_printf	;wreg free
  5111                           
  5112                           ; BSR set to: 0
  5113                           ;d232.c: 18:  WaitMs(5);
  5114  002DA2  0E00               	movlw	0
  5115  002DA4  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  5116  002DA6  0E05               	movlw	5
  5117  002DA8  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  5118  002DAA  EC6D  F01D         	call	_WaitMs	;wreg free
  5119                           
  5120                           ;d232.c: 19:  printf("%s", "M4\r");
  5121  002DAE  0E46               	movlw	low STR_4
  5122  002DB0  0100               	movlb	0	; () banked
  5123  002DB2  6F64               	movwf	printf@fmt& (0+255),b
  5124  002DB4  0E3E               	movlw	low STR_13
  5125  002DB6  6F65               	movwf	(?_printf+1)& (0+255),b
  5126  002DB8  5165               	movf	(?_printf+1)& (0+255),w,b
  5127  002DBA  A4D8               	btfss	status,2,c
  5128  002DBC  0E20               	movlw	high __smallconst
  5129  002DBE  6F66               	movwf	(?_printf+2)& (0+255),b
  5130  002DC0  ECB0  F01E         	call	_printf	;wreg free
  5131                           
  5132                           ;d232.c: 20:  WaitMs(5);
  5133  002DC4  0E00               	movlw	0
  5134  002DC6  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  5135  002DC8  0E05               	movlw	5
  5136  002DCA  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  5137  002DCC  EC6D  F01D         	call	_WaitMs	;wreg free
  5138                           
  5139                           ;d232.c: 21:  IO.d232 = D232_INIT;
  5140  002DD0  0E01               	movlw	1
  5141  002DD2  0101               	movlb	1	; () banked
  5142  002DD4  6F70               	movwf	(_IO+13)& (0+255),b
  5143                           
  5144                           ; BSR set to: 1
  5145                           ;d232.c: 25:  if (UART2_is_rx_ready())
  5146  002DD6  EC88  F01F         	call	_UART2_is_rx_ready	;wreg free
  5147  002DDA  0900               	iorlw	0
  5148  002DDC  A4D8               	btfss	status,2,c
  5149                           
  5150                           ; BSR set to: 0
  5151                           ;d232.c: 26:   UART2_Read();
  5152  002DDE  EC05  F01C         	call	_UART2_Read	;wreg free
  5153                           
  5154                           ;d232.c: 27:  IO.io = IO_INIT;
  5155  002DE2  0E01               	movlw	1
  5156  002DE4  0101               	movlb	1	; () banked
  5157  002DE6  6F6F               	movwf	(_IO+12)& (0+255),b
  5158                           
  5159                           ; BSR set to: 1
  5160                           ;d232.c: 28:  IO.srq = S_IDLE;
  5161  002DE8  0E00               	movlw	0
  5162  002DEA  6F71               	movwf	(_IO+14)& (0+255),b
  5163                           
  5164                           ; BSR set to: 1
  5165                           ;d232.c: 29:  IO.srq_value = 0;
  5166  002DEC  0E00               	movlw	0
  5167  002DEE  6F72               	movwf	(_IO+15)& (0+255),b
  5168                           
  5169                           ; BSR set to: 1
  5170                           ;d232.c: 30:  IO.button_value = 0;
  5171  002DF0  0E00               	movlw	0
  5172  002DF2  6F79               	movwf	(_IO+22)& (0+255),b
  5173  002DF4  0E00               	movlw	0
  5174  002DF6  6F78               	movwf	(_IO+21)& (0+255),b
  5175                           
  5176                           ; BSR set to: 1
  5177                           ;d232.c: 31:  ADCC_StartConversion(channel_ANA0);
  5178  002DF8  0E00               	movlw	0
  5179  002DFA  EC73  F01F         	call	_ADCC_StartConversion
  5180                           
  5181                           ; BSR set to: 62
  5182                           ;d232.c: 32:  StartTimer(TMR_SPS, 10);
  5183  002DFE  0E00               	movlw	0
  5184  002E00  6E07               	movwf	(StartTimer@count+1)^0,c
  5185  002E02  0E0A               	movlw	10
  5186  002E04  6E06               	movwf	StartTimer@count^0,c
  5187  002E06  0E03               	movlw	3
  5188  002E08  EC0E  F01D         	call	_StartTimer
  5189  002E0C  0012               	return		;funcret
  5190  002E0E                     __end_of_Digital232_init:
  5191                           	opt callstack 0
  5192                           
  5193 ;; *************** function _WaitMs *****************
  5194 ;; Defined at:
  5195 ;;		line 31 in file "timers.c"
  5196 ;; Parameters:    Size  Location     Type
  5197 ;;  numMilliseco    2   10[COMRAM] const unsigned short 
  5198 ;; Auto vars:     Size  Location     Type
  5199 ;;		None
  5200 ;; Return value:  Size  Location     Type
  5201 ;;                  1    wreg      void 
  5202 ;; Registers used:
  5203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5204 ;; Tracked objects:
  5205 ;;		On entry : 3F/0
  5206 ;;		On exit  : 0/0
  5207 ;;		Unchanged: 0/0
  5208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5209 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5212 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5213 ;;Total ram usage:        2 bytes
  5214 ;; Hardware stack levels used:    1
  5215 ;; Hardware stack levels required when called:    5
  5216 ;; This function calls:
  5217 ;;		_StartTimer
  5218 ;;		_TimerDone
  5219 ;; This function is called by:
  5220 ;;		_Digital232_init
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           
  5224                           	psect	text39
  5225  003ADA                     __ptext39:
  5226                           	opt callstack 0
  5227  003ADA                     _WaitMs:
  5228                           	opt callstack 24
  5229                           
  5230                           ; BSR set to: 0
  5231                           ;timers.c: 31: void WaitMs(const uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  5232                           
  5233                           ;incstack = 0
  5234  003ADA  0060  F02C  F006   	movff	WaitMs@numMilliseconds,StartTimer@count
  5235  003AE0  0060  F030  F007   	movff	WaitMs@numMilliseconds+1,StartTimer@count+1
  5236  003AE6  0E00               	movlw	0
  5237  003AE8  EC0E  F01D         	call	_StartTimer
  5238                           
  5239                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  5240  003AEC  D005               	goto	l6120
  5241  003AEE                     l1172:
  5242                           
  5243                           ;timers.c: 35:   __nop();
  5244  003AEE  F000               	nop	
  5245                           
  5246                           ;timers.c: 36:   __nop();
  5247  003AF0  F000               	nop	
  5248                           
  5249                           ;timers.c: 37:   __nop();
  5250  003AF2  F000               	nop	
  5251                           
  5252                           ;timers.c: 38:   __nop();
  5253  003AF4  F000               	nop	
  5254  003AF6  0004               	clrwdt		;# 
  5255  003AF8                     l6120:
  5256                           
  5257                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  5258  003AF8  0E00               	movlw	0
  5259  003AFA  ECD0  F01D         	call	_TimerDone
  5260  003AFE  0900               	iorlw	0
  5261  003B00  A4D8               	btfss	status,2,c
  5262  003B02  0012               	return	
  5263  003B04  D7F4               	goto	l1172
  5264  003B06                     __end_of_WaitMs:
  5265                           	opt callstack 0
  5266                           
  5267 ;; *************** function _ADCC_StartConversion *****************
  5268 ;; Defined at:
  5269 ;;		line 113 in file "mcc_generated_files/adcc.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;  channel         1    wreg     enum E15799
  5272 ;; Auto vars:     Size  Location     Type
  5273 ;;  channel         1    5[COMRAM] enum E15799
  5274 ;; Return value:  Size  Location     Type
  5275 ;;                  1    wreg      void 
  5276 ;; Registers used:
  5277 ;;		wreg
  5278 ;; Tracked objects:
  5279 ;;		On entry : 3F/1
  5280 ;;		On exit  : 3F/3E
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5284 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5286 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5287 ;;Total ram usage:        1 bytes
  5288 ;; Hardware stack levels used:    1
  5289 ;; Hardware stack levels required when called:    4
  5290 ;; This function calls:
  5291 ;;		Nothing
  5292 ;; This function is called by:
  5293 ;;		_Digital232_init
  5294 ;; This function uses a non-reentrant model
  5295 ;;
  5296                           
  5297                           	psect	text40
  5298  003EE6                     __ptext40:
  5299                           	opt callstack 0
  5300  003EE6                     _ADCC_StartConversion:
  5301                           	opt callstack 25
  5302                           
  5303                           ;incstack = 0
  5304                           ;ADCC_StartConversion@channel stored from wreg
  5305  003EE6  6E06               	movwf	ADCC_StartConversion@channel^0,c
  5306                           
  5307                           ;mcc_generated_files/adcc.c: 113: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 114: {;mcc_generated_files/adcc.c: 116:     ADPCH = channel;
  5308  003EE8  0060  F01B  FEF1   	movff	ADCC_StartConversion@channel,16113	;volatile
  5309                           
  5310                           ;mcc_generated_files/adcc.c: 119:     ADCON0bits.ADON = 1;
  5311  003EEE  013E               	movlb	62	; () banked
  5312  003EF0  8FF8               	bsf	248,7,b	;volatile
  5313                           
  5314                           ; BSR set to: 62
  5315                           ;mcc_generated_files/adcc.c: 122:     ADCON0bits.ADGO = 1;
  5316  003EF2  81F8               	bsf	248,0,b	;volatile
  5317                           
  5318                           ; BSR set to: 62
  5319  003EF4  0012               	return		;funcret
  5320  003EF6                     __end_of_ADCC_StartConversion:
  5321                           	opt callstack 0
  5322                           
  5323 ;; *************** function _Digital232_RW *****************
  5324 ;; Defined at:
  5325 ;;		line 35 in file "d232.c"
  5326 ;; Parameters:    Size  Location     Type
  5327 ;;		None
  5328 ;; Auto vars:     Size  Location     Type
  5329 ;;  j               1   13[BANK0 ] unsigned char 
  5330 ;;  i               1   12[BANK0 ] unsigned char 
  5331 ;; Return value:  Size  Location     Type
  5332 ;;                  1    wreg      _Bool 
  5333 ;; Registers used:
  5334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5335 ;; Tracked objects:
  5336 ;;		On entry : 0/0
  5337 ;;		On exit  : 3F/1
  5338 ;;		Unchanged: 0/0
  5339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5341 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5342 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5343 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5344 ;;Total ram usage:        4 bytes
  5345 ;; Hardware stack levels used:    1
  5346 ;; Hardware stack levels required when called:   13
  5347 ;; This function calls:
  5348 ;;		_ADCC_GetConversionResult
  5349 ;;		_PWM8_LoadDutyValue
  5350 ;;		_StartTimer
  5351 ;;		_TimerDone
  5352 ;;		_UART2_Read
  5353 ;;		_UART2_Write
  5354 ;;		_UART2_is_rx_ready
  5355 ;;		_printf
  5356 ;; This function is called by:
  5357 ;;		_main
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           	psect	text41
  5362  0022F6                     __ptext41:
  5363                           	opt callstack 0
  5364  0022F6                     _Digital232_RW:
  5365                           	opt callstack 17
  5366                           
  5367                           ; BSR set to: 62
  5368                           ;incstack = 0
  5369  0022F6  0E00               	movlw	0
  5370  0022F8  0100               	movlb	0	; () banked
  5371  0022FA  6F6D               	movwf	Digital232_RW@j& (0+255),b
  5372                           
  5373                           ; BSR set to: 0
  5374                           ;d232.c: 38:  static uint8_t x = 0;;d232.c: 41:  if (!TimerDone(TMR_SPS)) {
  5375  0022FC  0E03               	movlw	3
  5376  0022FE  ECD0  F01D         	call	_TimerDone
  5377  002302  0900               	iorlw	0
  5378  002304  A4D8               	btfss	status,2,c
  5379  002306  D005               	goto	l6244
  5380                           
  5381                           ;d232.c: 42:   IO.io = IO_IDLE;
  5382  002308  0E00               	movlw	0
  5383  00230A  0101               	movlb	1	; () banked
  5384  00230C  6F6F               	movwf	(_IO+12)& (0+255),b
  5385                           
  5386                           ; BSR set to: 1
  5387                           ;d232.c: 43:   return 0;
  5388  00230E  0E00               	movlw	0
  5389  002310  0012               	return	
  5390  002312                     l6244:
  5391                           
  5392                           ;d232.c: 46:  StartTimer(TMR_SPS, 10 + IO.speed + IO.slower);
  5393  002312  0101               	movlb	1	; () banked
  5394  002314  517C               	movf	(_IO+25)& (0+255),w,b
  5395  002316  257A               	addwf	(_IO+23)& (0+255),w,b
  5396  002318  0100               	movlb	0	; () banked
  5397  00231A  6F6A               	movwf	??_Digital232_RW& (0+255),b
  5398  00231C  0101               	movlb	1	; () banked
  5399  00231E  517D               	movf	(_IO+26)& (0+255),w,b
  5400  002320  217B               	addwfc	(_IO+24)& (0+255),w,b
  5401  002322  0100               	movlb	0	; () banked
  5402  002324  6F6B               	movwf	(??_Digital232_RW+1)& (0+255),b
  5403  002326  0E0A               	movlw	10
  5404  002328  256A               	addwf	??_Digital232_RW& (0+255),w,b
  5405  00232A  6E06               	movwf	StartTimer@count^0,c
  5406  00232C  0E00               	movlw	0
  5407  00232E  216B               	addwfc	(??_Digital232_RW+1)& (0+255),w,b
  5408  002330  6E07               	movwf	(StartTimer@count+1)^0,c
  5409  002332  0E03               	movlw	3
  5410  002334  EC0E  F01D         	call	_StartTimer
  5411                           
  5412                           ;d232.c: 51:  IO.srq = S_IDLE;
  5413  002338  0E00               	movlw	0
  5414  00233A  0101               	movlb	1	; () banked
  5415  00233C  6F71               	movwf	(_IO+14)& (0+255),b
  5416                           
  5417                           ; BSR set to: 1
  5418                           ;d232.c: 53:  if (UART2_is_rx_ready()) {
  5419  00233E  EC88  F01F         	call	_UART2_is_rx_ready	;wreg free
  5420  002342  0900               	iorlw	0
  5421  002344  B4D8               	btfsc	status,2,c
  5422  002346  D040               	goto	l6274
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;d232.c: 54:   j = UART2_Read();
  5426  002348  EC05  F01C         	call	_UART2_Read	;wreg free
  5427  00234C  0100               	movlb	0	; () banked
  5428  00234E  6F6D               	movwf	Digital232_RW@j& (0+255),b
  5429                           
  5430                           ;d232.c: 58:   switch (IO.srq) {
  5431  002350  D021               	goto	l6272
  5432  002352                     l6252:
  5433                           
  5434                           ; BSR set to: 0
  5435                           ;d232.c: 60:    if (j == 'S')
  5436  002352  0E53               	movlw	83
  5437  002354  196D               	xorwf	Digital232_RW@j& (0+255),w,b
  5438  002356  A4D8               	btfss	status,2,c
  5439  002358  D037               	goto	l6274
  5440                           
  5441                           ; BSR set to: 0
  5442                           ;d232.c: 61:     IO.srq = S_S;
  5443  00235A  0E01               	movlw	1
  5444  00235C  D018               	goto	L7
  5445  00235E                     l6256:
  5446                           
  5447                           ; BSR set to: 0
  5448                           ;d232.c: 64:    if (j == 'R')
  5449  00235E  0E52               	movlw	82
  5450  002360  196D               	xorwf	Digital232_RW@j& (0+255),w,b
  5451  002362  A4D8               	btfss	status,2,c
  5452  002364  D031               	goto	l6274
  5453                           
  5454                           ; BSR set to: 0
  5455                           ;d232.c: 65:     IO.srq = S_R;
  5456  002366  0E02               	movlw	2
  5457  002368  D012               	goto	L7
  5458  00236A                     l6260:
  5459                           
  5460                           ; BSR set to: 0
  5461                           ;d232.c: 68:    if (j == 'Q')
  5462  00236A  0E51               	movlw	81
  5463  00236C  196D               	xorwf	Digital232_RW@j& (0+255),w,b
  5464  00236E  A4D8               	btfss	status,2,c
  5465  002370  D02B               	goto	l6274
  5466                           
  5467                           ; BSR set to: 0
  5468                           ;d232.c: 69:     IO.srq = S_Q;
  5469  002372  0E03               	movlw	3
  5470  002374  D00C               	goto	L7
  5471  002376                     l6264:
  5472                           
  5473                           ; BSR set to: 0
  5474                           ;d232.c: 72:    if (j == ' ')
  5475  002376  0E20               	movlw	32
  5476  002378  196D               	xorwf	Digital232_RW@j& (0+255),w,b
  5477  00237A  A4D8               	btfss	status,2,c
  5478  00237C  D025               	goto	l6274
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;d232.c: 73:     IO.srq = S_NUM;
  5482  00237E  0E04               	movlw	4
  5483  002380  D006               	goto	L7
  5484  002382                     l1117:
  5485                           
  5486                           ; BSR set to: 0
  5487                           ;d232.c: 76:    IO.srq_value = j;
  5488  002382  0060  F1B4  F172   	movff	Digital232_RW@j,_IO+15
  5489                           
  5490                           ; BSR set to: 0
  5491                           ;d232.c: 77:    IO.srq = S_UPDATE;
  5492  002388  0E05               	movlw	5
  5493  00238A  D001               	goto	L7
  5494  00238C                     l6270:
  5495                           
  5496                           ; BSR set to: 0
  5497                           ;d232.c: 80:    IO.srq = S_IDLE;
  5498  00238C  0E00               	movlw	0
  5499  00238E                     L7:
  5500  00238E  0101               	movlb	1	; () banked
  5501  002390  6F71               	movwf	(_IO+14)& (0+255),b
  5502                           
  5503                           ;d232.c: 81:   }
  5504  002392  D01A               	goto	l6274
  5505  002394                     l6272:
  5506                           
  5507                           ; BSR set to: 0
  5508  002394  0101               	movlb	1	; () banked
  5509  002396  5171               	movf	(_IO+14)& (0+255),w,b
  5510  002398  0100               	movlb	0	; () banked
  5511  00239A  6F6A               	movwf	??_Digital232_RW& (0+255),b
  5512  00239C  6B6B               	clrf	(??_Digital232_RW+1)& (0+255),b
  5513                           
  5514                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5515                           ; Switch size 1, requested type "simple"
  5516                           ; Number of cases is 1, Range of values is 0 to 0
  5517                           ; switch strategies available:
  5518                           ; Name         Instructions Cycles
  5519                           ; simple_byte            4     3 (average)
  5520                           ;	Chosen strategy is simple_byte
  5521  00239E  516B               	movf	(??_Digital232_RW+1)& (0+255),w,b
  5522  0023A0  0A00               	xorlw	0	; case 0
  5523  0023A2  A4D8               	btfss	status,2,c
  5524  0023A4  D7F3               	goto	l6270
  5525                           
  5526                           ; BSR set to: 0
  5527                           ; Switch size 1, requested type "simple"
  5528                           ; Number of cases is 5, Range of values is 0 to 4
  5529                           ; switch strategies available:
  5530                           ; Name         Instructions Cycles
  5531                           ; simple_byte           16     9 (average)
  5532                           ;	Chosen strategy is simple_byte
  5533  0023A6  516A               	movf	??_Digital232_RW& (0+255),w,b
  5534  0023A8  0A00               	xorlw	0	; case 0
  5535  0023AA  B4D8               	btfsc	status,2,c
  5536  0023AC  D7D2               	goto	l6252
  5537  0023AE  0A01               	xorlw	1	; case 1
  5538  0023B0  B4D8               	btfsc	status,2,c
  5539  0023B2  D7D5               	goto	l6256
  5540  0023B4  0A03               	xorlw	3	; case 2
  5541  0023B6  B4D8               	btfsc	status,2,c
  5542  0023B8  D7D8               	goto	l6260
  5543  0023BA  0A01               	xorlw	1	; case 3
  5544  0023BC  B4D8               	btfsc	status,2,c
  5545  0023BE  D7DB               	goto	l6264
  5546  0023C0  0A07               	xorlw	7	; case 4
  5547  0023C2  B4D8               	btfsc	status,2,c
  5548  0023C4  D7DE               	goto	l1117
  5549  0023C6  D7E2               	goto	l6270
  5550  0023C8                     l6274:
  5551                           
  5552                           ;d232.c: 84:  UART2_Write('D');
  5553  0023C8  0E44               	movlw	68
  5554  0023CA  ECE4  F01B         	call	_UART2_Write
  5555                           
  5556                           ;d232.c: 85:  UART2_Write(IO.outbytes[4]);
  5557  0023CE  0101               	movlb	1	; () banked
  5558  0023D0  516C               	movf	(_IO+9)& (0+255),w,b
  5559  0023D2  ECE4  F01B         	call	_UART2_Write
  5560                           
  5561                           ;d232.c: 86:  UART2_Write(IO.outbytes[3]);
  5562  0023D6  0101               	movlb	1	; () banked
  5563  0023D8  516B               	movf	(_IO+8)& (0+255),w,b
  5564  0023DA  ECE4  F01B         	call	_UART2_Write
  5565                           
  5566                           ;d232.c: 87:  UART2_Write(IO.outbytes[2]);
  5567  0023DE  0101               	movlb	1	; () banked
  5568  0023E0  516A               	movf	(_IO+7)& (0+255),w,b
  5569  0023E2  ECE4  F01B         	call	_UART2_Write
  5570                           
  5571                           ;d232.c: 88:  UART2_Write(IO.outbytes[1]);
  5572  0023E6  0101               	movlb	1	; () banked
  5573  0023E8  5169               	movf	(_IO+6)& (0+255),w,b
  5574  0023EA  ECE4  F01B         	call	_UART2_Write
  5575                           
  5576                           ;d232.c: 89:  UART2_Write(IO.outbytes[0]);
  5577  0023EE  0101               	movlb	1	; () banked
  5578  0023F0  5168               	movf	(_IO+5)& (0+255),w,b
  5579  0023F2  ECE4  F01B         	call	_UART2_Write
  5580                           
  5581                           ;d232.c: 90:  UART2_Write('\r');
  5582  0023F6  0E0D               	movlw	13
  5583  0023F8  ECE4  F01B         	call	_UART2_Write
  5584                           
  5585                           ; BSR set to: 57
  5586                           ;d232.c: 91:  printf("%s", "R0\r");
  5587  0023FC  0E46               	movlw	low STR_4
  5588  0023FE  0100               	movlb	0	; () banked
  5589  002400  6F64               	movwf	printf@fmt& (0+255),b
  5590  002402  0E2E               	movlw	low STR_15
  5591  002404  6F65               	movwf	(?_printf+1)& (0+255),b
  5592  002406  5165               	movf	(?_printf+1)& (0+255),w,b
  5593  002408  A4D8               	btfss	status,2,c
  5594  00240A  0E20               	movlw	high __smallconst
  5595  00240C  6F66               	movwf	(?_printf+2)& (0+255),b
  5596  00240E  ECB0  F01E         	call	_printf	;wreg free
  5597                           
  5598                           ; BSR set to: 0
  5599                           ;d232.c: 92:  IO.output_ok = 1;
  5600  002412  0E01               	movlw	1
  5601  002414  0101               	movlb	1	; () banked
  5602  002416  6F6E               	movwf	(_IO+11)& (0+255),b
  5603                           
  5604                           ; BSR set to: 1
  5605                           ;d232.c: 93:  IO.io = IO_OUT;
  5606  002418  0E02               	movlw	2
  5607  00241A  6F6F               	movwf	(_IO+12)& (0+255),b
  5608                           
  5609                           ; BSR set to: 1
  5610                           ;d232.c: 97:  StartTimer(TMR_RXTO, 250);
  5611  00241C  0E00               	movlw	0
  5612  00241E  6E07               	movwf	(StartTimer@count+1)^0,c
  5613  002420  0EFA               	movlw	250
  5614  002422  6E06               	movwf	StartTimer@count^0,c
  5615  002424  0E02               	movlw	2
  5616  002426  EC0E  F01D         	call	_StartTimer
  5617                           
  5618                           ;d232.c: 98:  while (!UART2_is_rx_ready()) {
  5619  00242A  D015               	goto	l6298
  5620  00242C                     l6284:
  5621                           
  5622                           ; BSR set to: 0
  5623                           ;d232.c: 99:   if (TimerDone(TMR_RXTO)) {
  5624  00242C  0E02               	movlw	2
  5625  00242E  ECD0  F01D         	call	_TimerDone
  5626  002432  0900               	iorlw	0
  5627  002434  B4D8               	btfsc	status,2,c
  5628  002436  D00F               	goto	l6298
  5629                           
  5630                           ;d232.c: 100:    PWM8_LoadDutyValue(x++);
  5631  002438  0060  F3B0  F006   	movff	Digital232_RW@x,PWM8_LoadDutyValue@dutyValue
  5632  00243E  6A07               	clrf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  5633  002440  ECBD  F01C         	call	_PWM8_LoadDutyValue	;wreg free
  5634  002444  0100               	movlb	0	; () banked
  5635  002446  2BEC               	incf	Digital232_RW@x& (0+255),f,b
  5636                           
  5637                           ; BSR set to: 0
  5638                           ;d232.c: 101:    if (x > 3)
  5639  002448  0E03               	movlw	3
  5640  00244A  65EC               	cpfsgt	Digital232_RW@x& (0+255),b
  5641  00244C  D002               	goto	l1122
  5642                           
  5643                           ; BSR set to: 0
  5644                           ;d232.c: 102:     x = 0;
  5645  00244E  0E00               	movlw	0
  5646  002450  6FEC               	movwf	Digital232_RW@x& (0+255),b
  5647  002452                     l1122:
  5648                           
  5649                           ; BSR set to: 0
  5650                           ;d232.c: 103:    IO.io = IO_FAIL;
  5651  002452  0E06               	movlw	6
  5652  002454  D75A               	goto	L8
  5653  002456                     l6298:
  5654                           
  5655                           ;d232.c: 98:  while (!UART2_is_rx_ready()) {
  5656  002456  EC88  F01F         	call	_UART2_is_rx_ready	;wreg free
  5657  00245A  0900               	iorlw	0
  5658  00245C  B4D8               	btfsc	status,2,c
  5659  00245E  D7E6               	goto	l6284
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;d232.c: 111:  i = 0;
  5663  002460  0E00               	movlw	0
  5664  002462  6F6C               	movwf	Digital232_RW@i& (0+255),b
  5665                           
  5666                           ; BSR set to: 0
  5667                           ;d232.c: 112:  StartTimer(TMR_RXTO, 250);
  5668  002464  0E00               	movlw	0
  5669  002466  6E07               	movwf	(StartTimer@count+1)^0,c
  5670  002468  0EFA               	movlw	250
  5671  00246A  6E06               	movwf	StartTimer@count^0,c
  5672  00246C  0E02               	movlw	2
  5673  00246E  EC0E  F01D         	call	_StartTimer
  5674                           
  5675                           ;d232.c: 113:  while (!TimerDone(TMR_RXTO) && (i < 6)) {
  5676  002472  D015               	goto	l6310
  5677  002474                     l6304:
  5678                           
  5679                           ; BSR set to: 0
  5680                           ;d232.c: 114:   if (UART2_is_rx_ready()) {
  5681  002474  EC88  F01F         	call	_UART2_is_rx_ready	;wreg free
  5682  002478  0900               	iorlw	0
  5683  00247A  B4D8               	btfsc	status,2,c
  5684  00247C  D010               	goto	l6310
  5685                           
  5686                           ; BSR set to: 0
  5687                           ;d232.c: 115:    IO.inbytes[4 - i] = UART2_Read();
  5688  00247E  EC05  F01C         	call	_UART2_Read	;wreg free
  5689  002482  0100               	movlb	0	; () banked
  5690  002484  6F6A               	movwf	??_Digital232_RW& (0+255),b
  5691  002486  516C               	movf	Digital232_RW@i& (0+255),w,b
  5692  002488  0867               	sublw	low (_IO+4)
  5693  00248A  6ED9               	movwf	fsr2l,c
  5694  00248C  0E00               	movlw	0
  5695  00248E  A0D8               	btfss	status,0,c
  5696  002490  2AE8               	incf	wreg,f,c
  5697  002492  0801               	sublw	high (_IO+4)
  5698  002494  6EDA               	movwf	fsr2h,c
  5699  002496  0060  F1AB  FFDF   	movff	??_Digital232_RW,indf2
  5700                           
  5701                           ; BSR set to: 0
  5702                           ;d232.c: 116:    i++;
  5703  00249C  2B6C               	incf	Digital232_RW@i& (0+255),f,b
  5704  00249E                     l6310:
  5705                           
  5706                           ;d232.c: 113:  while (!TimerDone(TMR_RXTO) && (i < 6)) {
  5707  00249E  0E02               	movlw	2
  5708  0024A0  ECD0  F01D         	call	_TimerDone
  5709  0024A4  0900               	iorlw	0
  5710  0024A6  A4D8               	btfss	status,2,c
  5711  0024A8  D004               	goto	u5370
  5712  0024AA  0E05               	movlw	5
  5713  0024AC  0100               	movlb	0	; () banked
  5714  0024AE  656C               	cpfsgt	Digital232_RW@i& (0+255),b
  5715  0024B0  D7E1               	goto	l6304
  5716  0024B2                     u5370:
  5717                           
  5718                           ;d232.c: 119:  if (TimerDone(TMR_RXTO) || i < 6) {
  5719  0024B2  0E02               	movlw	2
  5720  0024B4  ECD0  F01D         	call	_TimerDone
  5721  0024B8  0900               	iorlw	0
  5722  0024BA  A4D8               	btfss	status,2,c
  5723  0024BC  D004               	goto	u5390
  5724  0024BE  0E06               	movlw	6
  5725  0024C0  0100               	movlb	0	; () banked
  5726  0024C2  616C               	cpfslt	Digital232_RW@i& (0+255),b
  5727  0024C4  D00A               	goto	l6330
  5728  0024C6                     u5390:
  5729                           
  5730                           ;d232.c: 120:   PWM8_LoadDutyValue(x++);
  5731  0024C6  0060  F3B0  F006   	movff	Digital232_RW@x,PWM8_LoadDutyValue@dutyValue
  5732  0024CC  6A07               	clrf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  5733  0024CE  ECBD  F01C         	call	_PWM8_LoadDutyValue	;wreg free
  5734  0024D2  0100               	movlb	0	; () banked
  5735  0024D4  2BEC               	incf	Digital232_RW@x& (0+255),f,b
  5736                           
  5737                           ; BSR set to: 0
  5738                           ;d232.c: 121:   if (x > 16)
  5739  0024D6  0E10               	movlw	16
  5740  0024D8  D7B8               	goto	L9
  5741  0024DA                     l6330:
  5742                           
  5743                           ; BSR set to: 0
  5744                           ;d232.c: 127:  if (UART2_is_rx_ready())
  5745  0024DA  EC88  F01F         	call	_UART2_is_rx_ready	;wreg free
  5746  0024DE  0900               	iorlw	0
  5747  0024E0  A4D8               	btfss	status,2,c
  5748                           
  5749                           ; BSR set to: 0
  5750                           ;d232.c: 128:   UART2_Read();
  5751  0024E2  EC05  F01C         	call	_UART2_Read	;wreg free
  5752                           
  5753                           ;d232.c: 130:  IO.input_ok = 1;
  5754  0024E6  0E01               	movlw	1
  5755  0024E8  0101               	movlb	1	; () banked
  5756  0024EA  6F6D               	movwf	(_IO+10)& (0+255),b
  5757                           
  5758                           ; BSR set to: 1
  5759                           ;d232.c: 131:  IO.io = IO_IN;
  5760  0024EC  0E03               	movlw	3
  5761  0024EE  6F6F               	movwf	(_IO+12)& (0+255),b
  5762                           
  5763                           ; BSR set to: 1
  5764                           ;d232.c: 132:  IO.d232 = D232_OUT_IN;
  5765  0024F0  0E02               	movlw	2
  5766  0024F2  6F70               	movwf	(_IO+13)& (0+255),b
  5767                           
  5768                           ; BSR set to: 1
  5769                           ;d232.c: 136:  IO.button_value = ADCC_GetConversionResult();
  5770  0024F4  ECF0  F01E         	call	_ADCC_GetConversionResult	;wreg free
  5771  0024F8  0060  F018  F178   	movff	?_ADCC_GetConversionResult,_IO+21
  5772  0024FE  0060  F01C  F179   	movff	?_ADCC_GetConversionResult+1,_IO+22
  5773                           
  5774                           ; BSR set to: 62
  5775                           ;d232.c: 137:  PWM8_LoadDutyValue(199);
  5776  002504  0E00               	movlw	0
  5777  002506  6E07               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  5778  002508  0EC7               	movlw	199
  5779  00250A  6E06               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  5780  00250C  ECBD  F01C         	call	_PWM8_LoadDutyValue	;wreg free
  5781                           
  5782                           ;d232.c: 138:  IO.io = IO_UPDATE;
  5783  002510  0E05               	movlw	5
  5784  002512  0101               	movlb	1	; () banked
  5785  002514  6F6F               	movwf	(_IO+12)& (0+255),b
  5786                           
  5787                           ; BSR set to: 1
  5788                           ;d232.c: 139:  return 1;
  5789  002516  0E01               	movlw	1
  5790                           
  5791                           ; BSR set to: 1
  5792  002518  0012               	return		;funcret
  5793  00251A                     __end_of_Digital232_RW:
  5794                           	opt callstack 0
  5795                           
  5796 ;; *************** function _printf *****************
  5797 ;; Defined at:
  5798 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;  fmt             1    4[BANK0 ] PTR const unsigned char 
  5801 ;;		 -> STR_14(3), STR_12(3), STR_10(3), STR_8(3), 
  5802 ;;		 -> STR_6(3), STR_4(3), 
  5803 ;; Auto vars:     Size  Location     Type
  5804 ;;  ret             2    0        int 
  5805 ;;  ap              1    9[BANK0 ] PTR void [1]
  5806 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5807 ;; Return value:  Size  Location     Type
  5808 ;;                  2    4[BANK0 ] int 
  5809 ;; Registers used:
  5810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5811 ;; Tracked objects:
  5812 ;;		On entry : 3F/0
  5813 ;;		On exit  : 3F/0
  5814 ;;		Unchanged: 0/0
  5815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5816 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5817 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5819 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5820 ;;Total ram usage:        6 bytes
  5821 ;; Hardware stack levels used:    1
  5822 ;; Hardware stack levels required when called:   12
  5823 ;; This function calls:
  5824 ;;		_vfprintf
  5825 ;; This function is called by:
  5826 ;;		_Digital232_init
  5827 ;;		_Digital232_RW
  5828 ;; This function uses a non-reentrant model
  5829 ;;
  5830                           
  5831                           	psect	text42
  5832  003D60                     __ptext42:
  5833                           	opt callstack 0
  5834  003D60                     _printf:
  5835                           	opt callstack 17
  5836                           
  5837                           ; BSR set to: 0
  5838                           
  5839                           ; BSR set to: 1
  5840                           ;incstack = 0
  5841  003D60  0E65               	movlw	low (?_printf+1)
  5842  003D62  6F69               	movwf	printf@ap& (0+255),b
  5843                           
  5844                           ; BSR set to: 0
  5845  003D64  0E00               	movlw	0
  5846  003D66  6F60               	movwf	vfprintf@fp& (0+255),b
  5847  003D68  0E00               	movlw	0
  5848  003D6A  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  5849  003D6C  0060  F190  F062   	movff	printf@fmt,vfprintf@fmt
  5850  003D72  0E69               	movlw	low printf@ap
  5851  003D74  6F63               	movwf	vfprintf@ap& (0+255),b
  5852  003D76  EC45  F01B         	call	_vfprintf	;wreg free
  5853                           
  5854                           ; BSR set to: 0
  5855  003D7A  0012               	return		;funcret
  5856  003D7C                     __end_of_printf:
  5857                           	opt callstack 0
  5858                           
  5859 ;; *************** function _vfprintf *****************
  5860 ;; Defined at:
  5861 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  5862 ;; Parameters:    Size  Location     Type
  5863 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  5864 ;;		 -> sprintf@f(5), NULL(0), 
  5865 ;;  fmt             1    2[BANK0 ] PTR const unsigned char 
  5866 ;;		 -> STR_14(3), STR_12(3), STR_10(3), STR_8(3), 
  5867 ;;		 -> STR_6(3), STR_4(3), STR_2(17), STR_1(17), 
  5868 ;;  ap              1    3[BANK0 ] PTR PTR void 
  5869 ;;		 -> printf@ap(1), sprintf@ap(1), 
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;  cfmt            1   84[COMRAM] PTR unsigned char 
  5872 ;;		 -> STR_14(3), STR_12(3), STR_10(3), STR_8(3), 
  5873 ;;		 -> STR_6(3), STR_4(3), STR_2(17), STR_1(17), 
  5874 ;; Return value:  Size  Location     Type
  5875 ;;                  2    0[BANK0 ] int 
  5876 ;; Registers used:
  5877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5878 ;; Tracked objects:
  5879 ;;		On entry : 3F/0
  5880 ;;		On exit  : 3F/0
  5881 ;;		Unchanged: 0/0
  5882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5883 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5884 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5886 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5887 ;;Total ram usage:        5 bytes
  5888 ;; Hardware stack levels used:    1
  5889 ;; Hardware stack levels required when called:   11
  5890 ;; This function calls:
  5891 ;;		_vfpfcnvrt
  5892 ;; This function is called by:
  5893 ;;		_sprintf
  5894 ;;		_printf
  5895 ;; This function uses a non-reentrant model
  5896 ;;
  5897                           
  5898                           	psect	text43
  5899  00368A                     __ptext43:
  5900                           	opt callstack 0
  5901  00368A                     _vfprintf:
  5902                           	opt callstack 17
  5903                           
  5904                           ; BSR set to: 0
  5905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  5906                           
  5907                           ; BSR set to: 0
  5908                           ;incstack = 0
  5909  00368A  0060  F188  F055   	movff	vfprintf@fmt,vfprintf@cfmt
  5910                           
  5911                           ; BSR set to: 0
  5912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  5913  003690  0E00               	movlw	0
  5914  003692  6FDF               	movwf	(_nout+1)& (0+255),b
  5915  003694  0E00               	movlw	0
  5916  003696  6FDE               	movwf	_nout& (0+255),b
  5917                           
  5918                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  5919  003698  D012               	goto	l5892
  5920  00369A                     l5890:
  5921                           
  5922                           ; BSR set to: 0
  5923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  5924  00369A  0060  F180  F047   	movff	vfprintf@fp,vfpfcnvrt@fp
  5925  0036A0  0060  F184  F048   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5926  0036A6  0E55               	movlw	low vfprintf@cfmt
  5927  0036A8  6E49               	movwf	vfpfcnvrt@fmt^0,c
  5928  0036AA  0060  F18C  F04A   	movff	vfprintf@ap,vfpfcnvrt@ap
  5929  0036B0  EC96  F013         	call	_vfpfcnvrt	;wreg free
  5930  0036B4  5047               	movf	?_vfpfcnvrt^0,w,c
  5931  0036B6  0100               	movlb	0	; () banked
  5932  0036B8  27DE               	addwf	_nout& (0+255),f,b
  5933  0036BA  5048               	movf	(?_vfpfcnvrt+1)^0,w,c
  5934  0036BC  23DF               	addwfc	(_nout+1)& (0+255),f,b
  5935  0036BE                     l5892:
  5936                           
  5937                           ; BSR set to: 0
  5938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  5939  0036BE  0060  F157  FFF6   	movff	vfprintf@cfmt,tblptrl
  5940  0036C4                     	if	1	;There is more than 1 active tblptr byte
  5941  0036C4  0E20               	movlw	high __smallconst
  5942  0036C6  6EF7               	movwf	tblptrh,c
  5943  0036C8                     	endif
  5944  0036C8                     	if	0	;tblptru may be non-zero
  5945  0036C8                     	endif
  5946  0036C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5947  0036C8  0E00               	movlw	low (__smallconst shr (0+16))
  5948  0036CA  6EF8               	movwf	tblptru,c
  5949  0036CC                     	endif
  5950  0036CC  0008               	tblrd		*
  5951  0036CE  50F5               	movf	tablat,w,c
  5952  0036D0  0900               	iorlw	0
  5953  0036D2  A4D8               	btfss	status,2,c
  5954  0036D4  D7E2               	goto	l5890
  5955                           
  5956                           ; BSR set to: 0
  5957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  5958  0036D6  0060  F378  F060   	movff	_nout,?_vfprintf
  5959  0036DC  0060  F37C  F061   	movff	_nout+1,?_vfprintf+1
  5960                           
  5961                           ; BSR set to: 0
  5962  0036E2  0012               	return		;funcret
  5963  0036E4                     __end_of_vfprintf:
  5964                           	opt callstack 0
  5965                           
  5966 ;; *************** function _vfpfcnvrt *****************
  5967 ;; Defined at:
  5968 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;  fp              2   70[COMRAM] PTR struct _IO_FILE
  5971 ;;		 -> sprintf@f(5), NULL(0), 
  5972 ;;  fmt             1   72[COMRAM] PTR PTR unsigned char 
  5973 ;;		 -> vfprintf@cfmt(1), 
  5974 ;;  ap              1   73[COMRAM] PTR PTR void 
  5975 ;;		 -> printf@ap(1), sprintf@ap(1), 
  5976 ;; Auto vars:     Size  Location     Type
  5977 ;;  ll              8   74[COMRAM] long long 
  5978 ;;  llu             8    0        unsigned long long 
  5979 ;;  f               4    0        unsigned long long 
  5980 ;;  vp              3    0        PTR void 
  5981 ;;  ct              3    0        unsigned char [3]
  5982 ;;  cp              2   82[COMRAM] PTR unsigned char 
  5983 ;;		 -> ?_printf(2), ?_sprintf(2), STR_15(4), STR_13(4), 
  5984 ;;		 -> STR_11(4), STR_9(4), STR_7(4), STR_5(4), 
  5985 ;;  i               2    0        int 
  5986 ;;  done            2    0        int 
  5987 ;;  c               1    0        unsigned char 
  5988 ;; Return value:  Size  Location     Type
  5989 ;;                  2   70[COMRAM] int 
  5990 ;; Registers used:
  5991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5992 ;; Tracked objects:
  5993 ;;		On entry : 3F/0
  5994 ;;		On exit  : 0/0
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5997 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5998 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6000 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6001 ;;Total ram usage:       14 bytes
  6002 ;; Hardware stack levels used:    1
  6003 ;; Hardware stack levels required when called:   10
  6004 ;; This function calls:
  6005 ;;		_dtoa
  6006 ;;		_fputc
  6007 ;;		_stoa
  6008 ;; This function is called by:
  6009 ;;		_vfprintf
  6010 ;; This function uses a non-reentrant model
  6011 ;;
  6012                           
  6013                           	psect	text44
  6014  00272C                     __ptext44:
  6015                           	opt callstack 0
  6016  00272C                     _vfpfcnvrt:
  6017                           	opt callstack 17
  6018                           
  6019                           ; BSR set to: 0
  6020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  6021                           
  6022                           ; BSR set to: 0
  6023                           ;incstack = 0
  6024  00272C  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6025  00272E  6ED9               	movwf	fsr2l,c
  6026  002730  6ADA               	clrf	fsr2h,c
  6027  002732  006F FF7F FFF6     	movff	indf2,tblptrl
  6028  002738                     	if	1	;There is more than 1 active tblptr byte
  6029  002738  0E20               	movlw	high __smallconst
  6030  00273A  6EF7               	movwf	tblptrh,c
  6031  00273C                     	endif
  6032  00273C                     	if	0	;tblptru may be non-zero
  6033  00273C                     	endif
  6034  00273C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6035  00273C  0E00               	movlw	low (__smallconst shr (0+16))
  6036  00273E  6EF8               	movwf	tblptru,c
  6037  002740                     	endif
  6038  002740  0008               	tblrd		*
  6039  002742  50F5               	movf	tablat,w,c
  6040  002744  0A25               	xorlw	37
  6041  002746  A4D8               	btfss	status,2,c
  6042  002748  D0D3               	goto	l5814
  6043                           
  6044                           ; BSR set to: 0
  6045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  6046  00274A  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6047  00274C  6ED9               	movwf	fsr2l,c
  6048  00274E  6ADA               	clrf	fsr2h,c
  6049  002750  2ADF               	incf	indf2,f,c
  6050                           
  6051                           ; BSR set to: 0
  6052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  6053  002752  0E00               	movlw	0
  6054  002754  6FE1               	movwf	(_width+1)& (0+255),b
  6055  002756  0E00               	movlw	0
  6056  002758  6FE0               	movwf	_width& (0+255),b
  6057  00275A  0060  F380  F056   	movff	_width,_flags
  6058  002760  0060  F384  F057   	movff	_width+1,_flags+1
  6059                           
  6060                           ; BSR set to: 0
  6061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  6062  002766  69E2               	setf	_prec& (0+255),b
  6063  002768  69E3               	setf	(_prec+1)& (0+255),b
  6064                           
  6065                           ; BSR set to: 0
  6066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  6067  00276A  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6068  00276C  6ED9               	movwf	fsr2l,c
  6069  00276E  6ADA               	clrf	fsr2h,c
  6070  002770  006F FF7F FFF6     	movff	indf2,tblptrl
  6071  002776                     	if	1	;There is more than 1 active tblptr byte
  6072  002776  0E20               	movlw	high __smallconst
  6073  002778  6EF7               	movwf	tblptrh,c
  6074  00277A                     	endif
  6075  00277A                     	if	0	;tblptru may be non-zero
  6076  00277A                     	endif
  6077  00277A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6078  00277A  0E00               	movlw	low (__smallconst shr (0+16))
  6079  00277C  6EF8               	movwf	tblptru,c
  6080  00277E                     	endif
  6081  00277E  0008               	tblrd		*
  6082  002780  50F5               	movf	tablat,w,c
  6083  002782  0A64               	xorlw	100
  6084  002784  B4D8               	btfsc	status,2,c
  6085  002786  D00F               	goto	u5030
  6086                           
  6087                           ; BSR set to: 0
  6088  002788  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6089  00278A  6ED9               	movwf	fsr2l,c
  6090  00278C  6ADA               	clrf	fsr2h,c
  6091  00278E  006F FF7F FFF6     	movff	indf2,tblptrl
  6092  002794                     	if	1	;There is more than 1 active tblptr byte
  6093  002794  0E20               	movlw	high __smallconst
  6094  002796  6EF7               	movwf	tblptrh,c
  6095  002798                     	endif
  6096  002798                     	if	0	;tblptru may be non-zero
  6097  002798                     	endif
  6098  002798                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6099  002798  0E00               	movlw	low (__smallconst shr (0+16))
  6100  00279A  6EF8               	movwf	tblptru,c
  6101  00279C                     	endif
  6102  00279C  0008               	tblrd		*
  6103  00279E  50F5               	movf	tablat,w,c
  6104  0027A0  0A69               	xorlw	105
  6105  0027A2  A4D8               	btfss	status,2,c
  6106  0027A4  D042               	goto	l5788
  6107  0027A6                     u5030:
  6108                           
  6109                           ; BSR set to: 0
  6110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  6111  0027A6  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6112  0027A8  6ED9               	movwf	fsr2l,c
  6113  0027AA  6ADA               	clrf	fsr2h,c
  6114  0027AC  2ADF               	incf	indf2,f,c
  6115                           
  6116                           ; BSR set to: 0
  6117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  6118  0027AE  504A               	movf	vfpfcnvrt@ap^0,w,c
  6119  0027B0  6ED9               	movwf	fsr2l,c
  6120  0027B2  6ADA               	clrf	fsr2h,c
  6121  0027B4  50DF               	movf	indf2,w,c
  6122  0027B6  2ADF               	incf	indf2,f,c
  6123  0027B8  2ADF               	incf	indf2,f,c
  6124  0027BA  6ED9               	movwf	fsr2l,c
  6125  0027BC  6ADA               	clrf	fsr2h,c
  6126  0027BE  006F FF78  F04B    	movff	postinc2,vfpfcnvrt@ll
  6127  0027C4  006F FF74  F04C    	movff	postdec2,vfpfcnvrt@ll+1
  6128  0027CA  0E00               	movlw	0
  6129  0027CC  BE4C               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  6130  0027CE  0EFF               	movlw	-1
  6131  0027D0  6E4D               	movwf	(vfpfcnvrt@ll+2)^0,c
  6132  0027D2  6E4E               	movwf	(vfpfcnvrt@ll+3)^0,c
  6133  0027D4  6E4F               	movwf	(vfpfcnvrt@ll+4)^0,c
  6134  0027D6  6E50               	movwf	(vfpfcnvrt@ll+5)^0,c
  6135  0027D8  6E51               	movwf	(vfpfcnvrt@ll+6)^0,c
  6136  0027DA  6E52               	movwf	(vfpfcnvrt@ll+7)^0,c
  6137                           
  6138                           ; BSR set to: 0
  6139                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  6140  0027DC  0060  F11C  F023   	movff	vfpfcnvrt@fp,dtoa@fp
  6141  0027E2  0060  F120  F024   	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6142  0027E8  0060  F12C  F025   	movff	vfpfcnvrt@ll,dtoa@d
  6143  0027EE  0060  F130  F026   	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6144  0027F4  0060  F134  F027   	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6145  0027FA  0060  F138  F028   	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6146  002800  0060  F13C  F029   	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6147  002806  0060  F140  F02A   	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6148  00280C  0060  F144  F02B   	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6149  002812  0060  F148  F02C   	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6150  002818  EC25  F010         	call	_dtoa	;wreg free
  6151  00281C  0060  F08C  F047   	movff	?_dtoa,?_vfpfcnvrt
  6152  002822  0060  F090  F048   	movff	?_dtoa+1,?_vfpfcnvrt+1
  6153  002828  0012               	return	
  6154  00282A                     l5788:
  6155                           
  6156                           ; BSR set to: 0
  6157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  6158  00282A  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6159  00282C  6ED9               	movwf	fsr2l,c
  6160  00282E  6ADA               	clrf	fsr2h,c
  6161  002830  006F FF7F FFF6     	movff	indf2,tblptrl
  6162  002836                     	if	1	;There is more than 1 active tblptr byte
  6163  002836  0E20               	movlw	high __smallconst
  6164  002838  6EF7               	movwf	tblptrh,c
  6165  00283A                     	endif
  6166  00283A                     	if	0	;tblptru may be non-zero
  6167  00283A                     	endif
  6168  00283A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6169  00283A  0E00               	movlw	low (__smallconst shr (0+16))
  6170  00283C  6EF8               	movwf	tblptru,c
  6171  00283E                     	endif
  6172  00283E  0008               	tblrd		*
  6173  002840  50F5               	movf	tablat,w,c
  6174  002842  0A73               	xorlw	115
  6175  002844  A4D8               	btfss	status,2,c
  6176  002846  D027               	goto	l5798
  6177                           
  6178                           ; BSR set to: 0
  6179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  6180  002848  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6181  00284A  6ED9               	movwf	fsr2l,c
  6182  00284C  6ADA               	clrf	fsr2h,c
  6183  00284E  2ADF               	incf	indf2,f,c
  6184                           
  6185                           ; BSR set to: 0
  6186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  6187  002850  504A               	movf	vfpfcnvrt@ap^0,w,c
  6188  002852  6ED9               	movwf	fsr2l,c
  6189  002854  6ADA               	clrf	fsr2h,c
  6190  002856  0E02               	movlw	2
  6191  002858  26DF               	addwf	indf2,f,c
  6192  00285A  5CDF               	subwf	indf2,w,c
  6193  00285C  6ED9               	movwf	fsr2l,c
  6194  00285E  6ADA               	clrf	fsr2h,c
  6195  002860  006F FF78  F053    	movff	postinc2,vfpfcnvrt@cp
  6196  002866  006F FF78  F054    	movff	postinc2,vfpfcnvrt@cp+1
  6197                           
  6198                           ; BSR set to: 0
  6199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  6200  00286C  0060  F11C  F011   	movff	vfpfcnvrt@fp,stoa@fp
  6201  002872  0060  F120  F012   	movff	vfpfcnvrt@fp+1,stoa@fp+1
  6202  002878  0060  F14C  F013   	movff	vfpfcnvrt@cp,stoa@s
  6203  00287E  0060  F150  F014   	movff	vfpfcnvrt@cp+1,stoa@s+1
  6204  002884  EC93  F014         	call	_stoa	;wreg free
  6205  002888  0060  F044  F047   	movff	?_stoa,?_vfpfcnvrt
  6206  00288E  0060  F048  F048   	movff	?_stoa+1,?_vfpfcnvrt+1
  6207  002894  0012               	return	
  6208  002896                     l5798:
  6209                           
  6210                           ; BSR set to: 0
  6211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  6212  002896  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6213  002898  6ED9               	movwf	fsr2l,c
  6214  00289A  6ADA               	clrf	fsr2h,c
  6215  00289C  006F FF7F FFF6     	movff	indf2,tblptrl
  6216  0028A2                     	if	1	;There is more than 1 active tblptr byte
  6217  0028A2  0E20               	movlw	high __smallconst
  6218  0028A4  6EF7               	movwf	tblptrh,c
  6219  0028A6                     	endif
  6220  0028A6                     	if	0	;tblptru may be non-zero
  6221  0028A6                     	endif
  6222  0028A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6223  0028A6  0E00               	movlw	low (__smallconst shr (0+16))
  6224  0028A8  6EF8               	movwf	tblptru,c
  6225  0028AA                     	endif
  6226  0028AA  0008               	tblrd		*
  6227  0028AC  50F5               	movf	tablat,w,c
  6228  0028AE  0A25               	xorlw	37
  6229  0028B0  A4D8               	btfss	status,2,c
  6230  0028B2  D015               	goto	l5808
  6231                           
  6232                           ; BSR set to: 0
  6233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  6234  0028B4  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6235  0028B6  6ED9               	movwf	fsr2l,c
  6236  0028B8  6ADA               	clrf	fsr2h,c
  6237  0028BA  2ADF               	incf	indf2,f,c
  6238                           
  6239                           ; BSR set to: 0
  6240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  6241  0028BC  0E00               	movlw	0
  6242  0028BE  6E09               	movwf	(fputc@c+1)^0,c
  6243  0028C0  0E25               	movlw	37
  6244  0028C2  6E08               	movwf	fputc@c^0,c
  6245  0028C4  0060  F11C  F00A   	movff	vfpfcnvrt@fp,fputc@fp
  6246  0028CA  0060  F120  F00B   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6247  0028D0  ECD7  F019         	call	_fputc	;wreg free
  6248  0028D4                     l5804:
  6249                           
  6250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  6251  0028D4  0E00               	movlw	0
  6252  0028D6  6E48               	movwf	(?_vfpfcnvrt+1)^0,c
  6253  0028D8  0E01               	movlw	1
  6254  0028DA  6E47               	movwf	?_vfpfcnvrt^0,c
  6255  0028DC  0012               	return	
  6256  0028DE                     l5808:
  6257                           
  6258                           ; BSR set to: 0
  6259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  6260  0028DE  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6261  0028E0  6ED9               	movwf	fsr2l,c
  6262  0028E2  6ADA               	clrf	fsr2h,c
  6263  0028E4  2ADF               	incf	indf2,f,c
  6264                           
  6265                           ; BSR set to: 0
  6266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  6267  0028E6  0E00               	movlw	0
  6268  0028E8  6E48               	movwf	(?_vfpfcnvrt+1)^0,c
  6269  0028EA  0E00               	movlw	0
  6270  0028EC  6E47               	movwf	?_vfpfcnvrt^0,c
  6271  0028EE  0012               	return	
  6272  0028F0                     l5814:
  6273                           
  6274                           ; BSR set to: 0
  6275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  6276  0028F0  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6277  0028F2  6ED9               	movwf	fsr2l,c
  6278  0028F4  6ADA               	clrf	fsr2h,c
  6279  0028F6  006F FF7F FFF6     	movff	indf2,tblptrl
  6280  0028FC                     	if	1	;There is more than 1 active tblptr byte
  6281  0028FC  0E20               	movlw	high __smallconst
  6282  0028FE  6EF7               	movwf	tblptrh,c
  6283  002900                     	endif
  6284  002900                     	if	0	;tblptru may be non-zero
  6285  002900                     	endif
  6286  002900                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6287  002900  0E00               	movlw	low (__smallconst shr (0+16))
  6288  002902  6EF8               	movwf	tblptru,c
  6289  002904                     	endif
  6290  002904  0008               	tblrd		*
  6291  002906  50F5               	movf	tablat,w,c
  6292  002908  6E08               	movwf	fputc@c^0,c
  6293  00290A  6A09               	clrf	(fputc@c+1)^0,c
  6294  00290C  0060  F11C  F00A   	movff	vfpfcnvrt@fp,fputc@fp
  6295  002912  0060  F120  F00B   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6296  002918  ECD7  F019         	call	_fputc	;wreg free
  6297                           
  6298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  6299  00291C  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6300  00291E  6ED9               	movwf	fsr2l,c
  6301  002920  6ADA               	clrf	fsr2h,c
  6302  002922  2ADF               	incf	indf2,f,c
  6303  002924  D7D7               	goto	l5804
  6304  002926                     __end_of_vfpfcnvrt:
  6305                           	opt callstack 0
  6306                           
  6307 ;; *************** function _stoa *****************
  6308 ;; Defined at:
  6309 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6310 ;; Parameters:    Size  Location     Type
  6311 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6312 ;;		 -> sprintf@f(5), NULL(0), 
  6313 ;;  s               2   18[COMRAM] PTR unsigned char 
  6314 ;;		 -> ?_printf(2), ?_sprintf(2), STR_15(4), STR_13(4), 
  6315 ;;		 -> STR_11(4), STR_9(4), STR_7(4), STR_5(4), 
  6316 ;; Auto vars:     Size  Location     Type
  6317 ;;  nuls            7   21[COMRAM] unsigned char [7]
  6318 ;;  l               2   36[COMRAM] int 
  6319 ;;  p               2   34[COMRAM] int 
  6320 ;;  cp              2   32[COMRAM] PTR unsigned char 
  6321 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), STR_15(4), 
  6322 ;;		 -> STR_13(4), STR_11(4), STR_9(4), STR_7(4), 
  6323 ;;		 -> STR_5(4), 
  6324 ;;  w               2   30[COMRAM] int 
  6325 ;;  i               2   28[COMRAM] int 
  6326 ;; Return value:  Size  Location     Type
  6327 ;;                  2   16[COMRAM] int 
  6328 ;; Registers used:
  6329 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6330 ;; Tracked objects:
  6331 ;;		On entry : 3F/0
  6332 ;;		On exit  : 0/0
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6335 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6336 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6337 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6338 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6339 ;;Total ram usage:       22 bytes
  6340 ;; Hardware stack levels used:    1
  6341 ;; Hardware stack levels required when called:    7
  6342 ;; This function calls:
  6343 ;;		_fputc
  6344 ;;		_strlen
  6345 ;; This function is called by:
  6346 ;;		_vfpfcnvrt
  6347 ;; This function uses a non-reentrant model
  6348 ;;
  6349                           
  6350                           	psect	text45
  6351  002926                     __ptext45:
  6352                           	opt callstack 0
  6353  002926                     _stoa:
  6354                           	opt callstack 19
  6355                           
  6356                           ; BSR set to: 0
  6357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  6358                           
  6359                           ;incstack = 0
  6360  002926  EE20  F15C         	lfsr	2,stoa@F1139
  6361  00292A  EE10  F016         	lfsr	1,stoa@nuls
  6362  00292E  0E06               	movlw	6
  6363  002930                     u4891:
  6364  002930  006F FF6F FFE3     	movff	plusw2,plusw1
  6365  002936  06E8               	decf	wreg,f,c
  6366  002938  E2FB               	bc	u4891
  6367                           
  6368                           ; BSR set to: 0
  6369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  6370  00293A  0060  F04C  F021   	movff	stoa@s,stoa@cp
  6371  002940  0060  F050  F022   	movff	stoa@s+1,stoa@cp+1
  6372                           
  6373                           ; BSR set to: 0
  6374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  6375  002946  5021               	movf	stoa@cp^0,w,c
  6376  002948  1022               	iorwf	(stoa@cp+1)^0,w,c
  6377  00294A  A4D8               	btfss	status,2,c
  6378  00294C  D003               	goto	l5722
  6379                           
  6380                           ; BSR set to: 0
  6381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  6382  00294E  0E16               	movlw	low stoa@nuls
  6383  002950  6E21               	movwf	stoa@cp^0,c
  6384  002952  6A22               	clrf	(stoa@cp+1)^0,c
  6385  002954                     l5722:
  6386                           
  6387                           ; BSR set to: 0
  6388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  6389  002954  0060  F084  F006   	movff	stoa@cp,strlen@s
  6390  00295A  0060  F088  F007   	movff	stoa@cp+1,strlen@s+1
  6391  002960  EC72  F01B         	call	_strlen	;wreg free
  6392  002964  0060  F018  F025   	movff	?_strlen,stoa@l
  6393  00296A  0060  F01C  F026   	movff	?_strlen+1,stoa@l+1
  6394                           
  6395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  6396  002970  0060  F388  F023   	movff	_prec,stoa@p
  6397  002976  0060  F38C  F024   	movff	_prec+1,stoa@p+1
  6398                           
  6399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  6400  00297C  BE24               	btfsc	(stoa@p+1)^0,7,c
  6401  00297E  D010               	goto	l1328
  6402  002980  5025               	movf	stoa@l^0,w,c
  6403  002982  5C23               	subwf	stoa@p^0,w,c
  6404  002984  5024               	movf	(stoa@p+1)^0,w,c
  6405  002986  0A80               	xorlw	128
  6406  002988  6E15               	movwf	??_stoa^0,c
  6407  00298A  5026               	movf	(stoa@l+1)^0,w,c
  6408  00298C  0A80               	xorlw	128
  6409  00298E  5815               	subwfb	??_stoa^0,w,c
  6410  002990  B0D8               	btfsc	status,0,c
  6411  002992  D006               	goto	l1328
  6412  002994  0060  F08C  F025   	movff	stoa@p,stoa@l
  6413  00299A  0060  F090  F026   	movff	stoa@p+1,stoa@l+1
  6414  0029A0                     l1328:
  6415                           
  6416                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
  6417  0029A0  0060  F094  F023   	movff	stoa@l,stoa@p
  6418  0029A6  0060  F098  F024   	movff	stoa@l+1,stoa@p+1
  6419                           
  6420                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
  6421  0029AC  0060  F380  F01F   	movff	_width,stoa@w
  6422  0029B2  0060  F384  F020   	movff	_width+1,stoa@w+1
  6423                           
  6424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  6425  0029B8  A056               	btfss	_flags^0,0,c
  6426  0029BA  D00F               	goto	l5736
  6427  0029BC  D018               	goto	u4940
  6428  0029BE                     l5732:
  6429                           
  6430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  6431  0029BE  0E00               	movlw	0
  6432  0029C0  6E09               	movwf	(fputc@c+1)^0,c
  6433  0029C2  0E20               	movlw	32
  6434  0029C4  6E08               	movwf	fputc@c^0,c
  6435  0029C6  0060  F044  F00A   	movff	stoa@fp,fputc@fp
  6436  0029CC  0060  F048  F00B   	movff	stoa@fp+1,fputc@fp+1
  6437  0029D2  ECD7  F019         	call	_fputc	;wreg free
  6438                           
  6439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
  6440  0029D6  4A25               	infsnz	stoa@l^0,f,c
  6441  0029D8  2A26               	incf	(stoa@l+1)^0,f,c
  6442  0029DA                     l5736:
  6443                           
  6444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  6445  0029DA  501F               	movf	stoa@w^0,w,c
  6446  0029DC  5C25               	subwf	stoa@l^0,w,c
  6447  0029DE  5026               	movf	(stoa@l+1)^0,w,c
  6448  0029E0  0A80               	xorlw	128
  6449  0029E2  6E15               	movwf	??_stoa^0,c
  6450  0029E4  5020               	movf	(stoa@w+1)^0,w,c
  6451  0029E6  0A80               	xorlw	128
  6452  0029E8  5815               	subwfb	??_stoa^0,w,c
  6453  0029EA  A0D8               	btfss	status,0,c
  6454  0029EC  D7E8               	goto	l5732
  6455  0029EE                     u4940:
  6456                           
  6457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  6458  0029EE  0E00               	movlw	0
  6459  0029F0  6E1E               	movwf	(stoa@i+1)^0,c
  6460  0029F2  0E00               	movlw	0
  6461  0029F4  6E1D               	movwf	stoa@i^0,c
  6462                           
  6463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  6464  0029F6  D025               	goto	l5746
  6465  0029F8                     l5740:
  6466                           
  6467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  6468  0029F8  0060  F087  FFF6   	movff	stoa@cp,tblptrl
  6469  0029FE  0060  F08B  FFF7   	movff	stoa@cp+1,tblptrh
  6470  002A04  0E00               	movlw	low (__smallconst shr (0+16))
  6471  002A06  6EF8               	movwf	tblptru,c
  6472  002A08  0E1F               	movlw	(high __ramtop+-1)
  6473  002A0A  64F7               	cpfsgt	tblptrh,c
  6474  002A0C  D003               	bra	u4957
  6475  002A0E  0008               	tblrd		*
  6476  002A10  50F5               	movf	tablat,w,c
  6477  002A12  D007               	bra	u4950
  6478  002A14                     u4957:
  6479  002A14  006F FFDB FFE1     	movff	tblptrl,fsr1l
  6480  002A1A  006F FFDF FFE2     	movff	tblptrh,fsr1h
  6481  002A20  50E7               	movf	indf1,w,c
  6482  002A22                     u4950:
  6483  002A22  6E15               	movwf	??_stoa^0,c
  6484  002A24  5015               	movf	??_stoa^0,w,c
  6485  002A26  6E08               	movwf	fputc@c^0,c
  6486  002A28  6A09               	clrf	(fputc@c+1)^0,c
  6487  002A2A  0060  F044  F00A   	movff	stoa@fp,fputc@fp
  6488  002A30  0060  F048  F00B   	movff	stoa@fp+1,fputc@fp+1
  6489  002A36  ECD7  F019         	call	_fputc	;wreg free
  6490                           
  6491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  6492  002A3A  4A21               	infsnz	stoa@cp^0,f,c
  6493  002A3C  2A22               	incf	(stoa@cp+1)^0,f,c
  6494                           
  6495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
  6496  002A3E  4A1D               	infsnz	stoa@i^0,f,c
  6497  002A40  2A1E               	incf	(stoa@i+1)^0,f,c
  6498  002A42                     l5746:
  6499                           
  6500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  6501  002A42  5023               	movf	stoa@p^0,w,c
  6502  002A44  5C1D               	subwf	stoa@i^0,w,c
  6503  002A46  501E               	movf	(stoa@i+1)^0,w,c
  6504  002A48  0A80               	xorlw	128
  6505  002A4A  6E15               	movwf	??_stoa^0,c
  6506  002A4C  5024               	movf	(stoa@p+1)^0,w,c
  6507  002A4E  0A80               	xorlw	128
  6508  002A50  5815               	subwfb	??_stoa^0,w,c
  6509  002A52  A0D8               	btfss	status,0,c
  6510  002A54  D7D1               	goto	l5740
  6511                           
  6512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  6513  002A56  B056               	btfsc	_flags^0,0,c
  6514  002A58  D00F               	goto	l5754
  6515  002A5A  D018               	goto	u4980
  6516  002A5C                     l5750:
  6517                           
  6518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  6519  002A5C  0E00               	movlw	0
  6520  002A5E  6E09               	movwf	(fputc@c+1)^0,c
  6521  002A60  0E20               	movlw	32
  6522  002A62  6E08               	movwf	fputc@c^0,c
  6523  002A64  0060  F044  F00A   	movff	stoa@fp,fputc@fp
  6524  002A6A  0060  F048  F00B   	movff	stoa@fp+1,fputc@fp+1
  6525  002A70  ECD7  F019         	call	_fputc	;wreg free
  6526                           
  6527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
  6528  002A74  4A25               	infsnz	stoa@l^0,f,c
  6529  002A76  2A26               	incf	(stoa@l+1)^0,f,c
  6530  002A78                     l5754:
  6531                           
  6532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  6533  002A78  501F               	movf	stoa@w^0,w,c
  6534  002A7A  5C25               	subwf	stoa@l^0,w,c
  6535  002A7C  5026               	movf	(stoa@l+1)^0,w,c
  6536  002A7E  0A80               	xorlw	128
  6537  002A80  6E15               	movwf	??_stoa^0,c
  6538  002A82  5020               	movf	(stoa@w+1)^0,w,c
  6539  002A84  0A80               	xorlw	128
  6540  002A86  5815               	subwfb	??_stoa^0,w,c
  6541  002A88  A0D8               	btfss	status,0,c
  6542  002A8A  D7E8               	goto	l5750
  6543  002A8C                     u4980:
  6544                           
  6545                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
  6546                           
  6547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 586:     }
  6548  002A8C  0060  F094  F011   	movff	stoa@l,?_stoa
  6549  002A92  0060  F098  F012   	movff	stoa@l+1,?_stoa+1
  6550  002A98  0012               	return		;funcret
  6551  002A9A                     __end_of_stoa:
  6552                           	opt callstack 0
  6553                           
  6554 ;; *************** function _dtoa *****************
  6555 ;; Defined at:
  6556 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6557 ;; Parameters:    Size  Location     Type
  6558 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  6559 ;;		 -> sprintf@f(5), NULL(0), 
  6560 ;;  d               8   36[COMRAM] long long 
  6561 ;; Auto vars:     Size  Location     Type
  6562 ;;  n               8   60[COMRAM] long long 
  6563 ;;  i               2   68[COMRAM] int 
  6564 ;;  s               2   58[COMRAM] int 
  6565 ;;  w               2   56[COMRAM] int 
  6566 ;;  p               2   54[COMRAM] int 
  6567 ;; Return value:  Size  Location     Type
  6568 ;;                  2   34[COMRAM] int 
  6569 ;; Registers used:
  6570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6571 ;; Tracked objects:
  6572 ;;		On entry : 3F/0
  6573 ;;		On exit  : 0/0
  6574 ;;		Unchanged: 0/0
  6575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6576 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6577 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6578 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6579 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6580 ;;Total ram usage:       36 bytes
  6581 ;; Hardware stack levels used:    1
  6582 ;; Hardware stack levels required when called:    9
  6583 ;; This function calls:
  6584 ;;		___aodiv
  6585 ;;		___aomod
  6586 ;;		_abs
  6587 ;;		_pad
  6588 ;; This function is called by:
  6589 ;;		_vfpfcnvrt
  6590 ;; This function uses a non-reentrant model
  6591 ;;
  6592                           
  6593                           	psect	text46
  6594  00204A                     __ptext46:
  6595                           	opt callstack 0
  6596  00204A                     _dtoa:
  6597                           	opt callstack 17
  6598                           
  6599                           ; BSR set to: 0
  6600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
  6601                           
  6602                           ;incstack = 0
  6603  00204A  0060  F094  F03D   	movff	dtoa@d,dtoa@n
  6604  002050  0060  F098  F03E   	movff	dtoa@d+1,dtoa@n+1
  6605  002056  0060  F09C  F03F   	movff	dtoa@d+2,dtoa@n+2
  6606  00205C  0060  F0A0  F040   	movff	dtoa@d+3,dtoa@n+3
  6607  002062  0060  F0A4  F041   	movff	dtoa@d+4,dtoa@n+4
  6608  002068  0060  F0A8  F042   	movff	dtoa@d+5,dtoa@n+5
  6609  00206E  0060  F0AC  F043   	movff	dtoa@d+6,dtoa@n+6
  6610  002074  0060  F0B0  F044   	movff	dtoa@d+7,dtoa@n+7
  6611                           
  6612                           ; BSR set to: 0
  6613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  6614  00207A  AE44               	btfss	(dtoa@n+7)^0,7,c
  6615  00207C  D002               	goto	u4740
  6616  00207E  0E01               	movlw	1
  6617  002080  D001               	goto	u4750
  6618  002082                     u4740:
  6619  002082  0E00               	movlw	0
  6620  002084                     u4750:
  6621  002084  6E3B               	movwf	dtoa@s^0,c
  6622  002086  6A3C               	clrf	(dtoa@s+1)^0,c
  6623                           
  6624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  6625  002088  503B               	movf	dtoa@s^0,w,c
  6626  00208A  103C               	iorwf	(dtoa@s+1)^0,w,c
  6627  00208C  B4D8               	btfsc	status,2,c
  6628  00208E  D010               	goto	l5658
  6629                           
  6630                           ; BSR set to: 0
  6631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  6632  002090  1E44               	comf	(dtoa@n+7)^0,f,c
  6633  002092  1E43               	comf	(dtoa@n+6)^0,f,c
  6634  002094  1E42               	comf	(dtoa@n+5)^0,f,c
  6635  002096  1E41               	comf	(dtoa@n+4)^0,f,c
  6636  002098  1E40               	comf	(dtoa@n+3)^0,f,c
  6637  00209A  1E3F               	comf	(dtoa@n+2)^0,f,c
  6638  00209C  1E3E               	comf	(dtoa@n+1)^0,f,c
  6639  00209E  6C3D               	negf	dtoa@n^0,c
  6640  0020A0  0E00               	movlw	0
  6641  0020A2  223E               	addwfc	(dtoa@n+1)^0,f,c
  6642  0020A4  223F               	addwfc	(dtoa@n+2)^0,f,c
  6643  0020A6  2240               	addwfc	(dtoa@n+3)^0,f,c
  6644  0020A8  2241               	addwfc	(dtoa@n+4)^0,f,c
  6645  0020AA  2242               	addwfc	(dtoa@n+5)^0,f,c
  6646  0020AC  2243               	addwfc	(dtoa@n+6)^0,f,c
  6647  0020AE  2244               	addwfc	(dtoa@n+7)^0,f,c
  6648  0020B0                     l5658:
  6649                           
  6650                           ; BSR set to: 0
  6651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  6652  0020B0  AFE3               	btfss	(_prec+1)& (0+255),7,b
  6653                           
  6654                           ; BSR set to: 0
  6655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  6656  0020B2  9256               	bcf	_flags^0,1,c
  6657                           
  6658                           ; BSR set to: 0
  6659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  6660  0020B4  BFE3               	btfsc	(_prec+1)& (0+255),7,b
  6661  0020B6  D005               	goto	u4780
  6662  0020B8  51E3               	movf	(_prec+1)& (0+255),w,b
  6663  0020BA  E108               	bnz	l1299
  6664  0020BC  05E2               	decf	_prec& (0+255),w,b
  6665  0020BE  B0D8               	btfsc	status,0,c
  6666  0020C0  D005               	goto	l1299
  6667  0020C2                     u4780:
  6668                           
  6669                           ; BSR set to: 0
  6670  0020C2  0E00               	movlw	0
  6671  0020C4  6E38               	movwf	(dtoa@p+1)^0,c
  6672  0020C6  0E01               	movlw	1
  6673  0020C8  6E37               	movwf	dtoa@p^0,c
  6674  0020CA  D006               	goto	l1301
  6675  0020CC                     l1299:
  6676                           
  6677                           ; BSR set to: 0
  6678  0020CC  0060  F388  F037   	movff	_prec,dtoa@p
  6679  0020D2  0060  F38C  F038   	movff	_prec+1,dtoa@p+1
  6680  0020D8                     l1301:
  6681                           
  6682                           ; BSR set to: 0
  6683                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
  6684  0020D8  0060  F380  F039   	movff	_width,dtoa@w
  6685  0020DE  0060  F384  F03A   	movff	_width+1,dtoa@w+1
  6686                           
  6687                           ; BSR set to: 0
  6688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  6689  0020E4  503B               	movf	dtoa@s^0,w,c
  6690  0020E6  103C               	iorwf	(dtoa@s+1)^0,w,c
  6691  0020E8  A4D8               	btfss	status,2,c
  6692  0020EA  D002               	goto	u4800
  6693                           
  6694                           ; BSR set to: 0
  6695  0020EC  A456               	btfss	_flags^0,2,c
  6696  0020EE  D003               	goto	l5672
  6697  0020F0                     u4800:
  6698                           
  6699                           ; BSR set to: 0
  6700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
  6701  0020F0  0639               	decf	dtoa@w^0,f,c
  6702  0020F2  A0D8               	btfss	status,0,c
  6703  0020F4  063A               	decf	(dtoa@w+1)^0,f,c
  6704  0020F6                     l5672:
  6705                           
  6706                           ; BSR set to: 0
  6707                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  6708  0020F6  0E00               	movlw	0
  6709  0020F8  6E46               	movwf	(dtoa@i+1)^0,c
  6710  0020FA  0E1F               	movlw	31
  6711  0020FC  6E45               	movwf	dtoa@i^0,c
  6712                           
  6713                           ; BSR set to: 0
  6714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  6715  0020FE  0E00               	movlw	0
  6716  002100  0101               	movlb	1	; () banked
  6717  002102  6F5B               	movwf	(_dbuf+31)& (0+255),b
  6718                           
  6719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6720  002104  D09E               	goto	l5686
  6721  002106                     l5676:
  6722                           
  6723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
  6724  002106  0645               	decf	dtoa@i^0,f,c
  6725  002108  A0D8               	btfss	status,0,c
  6726  00210A  0646               	decf	(dtoa@i+1)^0,f,c
  6727                           
  6728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  6729  00210C  0E3C               	movlw	low _dbuf
  6730  00210E  2445               	addwf	dtoa@i^0,w,c
  6731  002110  6ED9               	movwf	fsr2l,c
  6732  002112  0E01               	movlw	high _dbuf
  6733  002114  2046               	addwfc	(dtoa@i+1)^0,w,c
  6734  002116  6EDA               	movwf	fsr2h,c
  6735  002118  0060  F0F4  F006   	movff	dtoa@n,___aomod@dividend
  6736  00211E  0060  F0F8  F007   	movff	dtoa@n+1,___aomod@dividend+1
  6737  002124  0060  F0FC  F008   	movff	dtoa@n+2,___aomod@dividend+2
  6738  00212A  0060  F100  F009   	movff	dtoa@n+3,___aomod@dividend+3
  6739  002130  0060  F104  F00A   	movff	dtoa@n+4,___aomod@dividend+4
  6740  002136  0060  F108  F00B   	movff	dtoa@n+5,___aomod@dividend+5
  6741  00213C  0060  F10C  F00C   	movff	dtoa@n+6,___aomod@dividend+6
  6742  002142  0060  F110  F00D   	movff	dtoa@n+7,___aomod@dividend+7
  6743  002148  0E0A               	movlw	10
  6744  00214A  6E0E               	movwf	___aomod@divisor^0,c
  6745  00214C  0E00               	movlw	0
  6746  00214E  6E0F               	movwf	(___aomod@divisor+1)^0,c
  6747  002150  0E00               	movlw	0
  6748  002152  6E10               	movwf	(___aomod@divisor+2)^0,c
  6749  002154  0E00               	movlw	0
  6750  002156  6E11               	movwf	(___aomod@divisor+3)^0,c
  6751  002158  0E00               	movlw	0
  6752  00215A  6E12               	movwf	(___aomod@divisor+4)^0,c
  6753  00215C  0E00               	movlw	0
  6754  00215E  6E13               	movwf	(___aomod@divisor+5)^0,c
  6755  002160  0E00               	movlw	0
  6756  002162  6E14               	movwf	(___aomod@divisor+6)^0,c
  6757  002164  0E00               	movlw	0
  6758  002166  6E15               	movwf	(___aomod@divisor+7)^0,c
  6759  002168  ECF9  F015         	call	___aomod	;wreg free
  6760  00216C  0060  F018  F02D   	movff	?___aomod,??_dtoa
  6761  002172  0060  F01C  F02E   	movff	?___aomod+1,??_dtoa+1
  6762  002178  0060  F020  F02F   	movff	?___aomod+2,??_dtoa+2
  6763  00217E  0060  F024  F030   	movff	?___aomod+3,??_dtoa+3
  6764  002184  0060  F028  F031   	movff	?___aomod+4,??_dtoa+4
  6765  00218A  0060  F02C  F032   	movff	?___aomod+5,??_dtoa+5
  6766  002190  0060  F030  F033   	movff	?___aomod+6,??_dtoa+6
  6767  002196  0060  F034  F034   	movff	?___aomod+7,??_dtoa+7
  6768  00219C  0060  F0B4  F018   	movff	??_dtoa,abs@a
  6769  0021A2  0060  F0BC  F019   	movff	??_dtoa+2,abs@a+1
  6770  0021A8  EC45  F01C         	call	_abs	;wreg free
  6771  0021AC  5018               	movf	?_abs^0,w,c
  6772  0021AE  0F30               	addlw	48
  6773  0021B0  6EDF               	movwf	indf2,c
  6774                           
  6775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
  6776  0021B2  0637               	decf	dtoa@p^0,f,c
  6777  0021B4  A0D8               	btfss	status,0,c
  6778  0021B6  0638               	decf	(dtoa@p+1)^0,f,c
  6779                           
  6780                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
  6781  0021B8  0639               	decf	dtoa@w^0,f,c
  6782  0021BA  A0D8               	btfss	status,0,c
  6783  0021BC  063A               	decf	(dtoa@w+1)^0,f,c
  6784                           
  6785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  6786  0021BE  0060  F0F4  F006   	movff	dtoa@n,___aodiv@dividend
  6787  0021C4  0060  F0F8  F007   	movff	dtoa@n+1,___aodiv@dividend+1
  6788  0021CA  0060  F0FC  F008   	movff	dtoa@n+2,___aodiv@dividend+2
  6789  0021D0  0060  F100  F009   	movff	dtoa@n+3,___aodiv@dividend+3
  6790  0021D6  0060  F104  F00A   	movff	dtoa@n+4,___aodiv@dividend+4
  6791  0021DC  0060  F108  F00B   	movff	dtoa@n+5,___aodiv@dividend+5
  6792  0021E2  0060  F10C  F00C   	movff	dtoa@n+6,___aodiv@dividend+6
  6793  0021E8  0060  F110  F00D   	movff	dtoa@n+7,___aodiv@dividend+7
  6794  0021EE  0E0A               	movlw	10
  6795  0021F0  6E0E               	movwf	___aodiv@divisor^0,c
  6796  0021F2  0E00               	movlw	0
  6797  0021F4  6E0F               	movwf	(___aodiv@divisor+1)^0,c
  6798  0021F6  0E00               	movlw	0
  6799  0021F8  6E10               	movwf	(___aodiv@divisor+2)^0,c
  6800  0021FA  0E00               	movlw	0
  6801  0021FC  6E11               	movwf	(___aodiv@divisor+3)^0,c
  6802  0021FE  0E00               	movlw	0
  6803  002200  6E12               	movwf	(___aodiv@divisor+4)^0,c
  6804  002202  0E00               	movlw	0
  6805  002204  6E13               	movwf	(___aodiv@divisor+5)^0,c
  6806  002206  0E00               	movlw	0
  6807  002208  6E14               	movwf	(___aodiv@divisor+6)^0,c
  6808  00220A  0E00               	movlw	0
  6809  00220C  6E15               	movwf	(___aodiv@divisor+7)^0,c
  6810  00220E  EC4D  F015         	call	___aodiv	;wreg free
  6811  002212  0060  F018  F03D   	movff	?___aodiv,dtoa@n
  6812  002218  0060  F01C  F03E   	movff	?___aodiv+1,dtoa@n+1
  6813  00221E  0060  F020  F03F   	movff	?___aodiv+2,dtoa@n+2
  6814  002224  0060  F024  F040   	movff	?___aodiv+3,dtoa@n+3
  6815  00222A  0060  F028  F041   	movff	?___aodiv+4,dtoa@n+4
  6816  002230  0060  F02C  F042   	movff	?___aodiv+5,dtoa@n+5
  6817  002236  0060  F030  F043   	movff	?___aodiv+6,dtoa@n+6
  6818  00223C  0060  F034  F044   	movff	?___aodiv+7,dtoa@n+7
  6819  002242                     l5686:
  6820                           
  6821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6822  002242  BE46               	btfsc	(dtoa@i+1)^0,7,c
  6823  002244  D01F               	goto	u4850
  6824  002246  5046               	movf	(dtoa@i+1)^0,w,c
  6825  002248  E103               	bnz	u4810
  6826  00224A  0445               	decf	dtoa@i^0,w,c
  6827  00224C  A0D8               	btfss	status,0,c
  6828  00224E  D01A               	goto	u4850
  6829  002250                     u4810:
  6830  002250  503D               	movf	dtoa@n^0,w,c
  6831  002252  103E               	iorwf	(dtoa@n+1)^0,w,c
  6832  002254  103F               	iorwf	(dtoa@n+2)^0,w,c
  6833  002256  1040               	iorwf	(dtoa@n+3)^0,w,c
  6834  002258  1041               	iorwf	(dtoa@n+4)^0,w,c
  6835  00225A  1042               	iorwf	(dtoa@n+5)^0,w,c
  6836  00225C  1043               	iorwf	(dtoa@n+6)^0,w,c
  6837  00225E  1044               	iorwf	(dtoa@n+7)^0,w,c
  6838  002260  A4D8               	btfss	status,2,c
  6839  002262  D751               	goto	l5676
  6840  002264  BE38               	btfsc	(dtoa@p+1)^0,7,c
  6841  002266  D005               	goto	u4830
  6842  002268  5038               	movf	(dtoa@p+1)^0,w,c
  6843  00226A  E102               	bnz	u4831
  6844  00226C  0437               	decf	dtoa@p^0,w,c
  6845  00226E  B0D8               	btfsc	status,0,c
  6846  002270                     u4831:
  6847  002270  D74A               	goto	l5676
  6848  002272                     u4830:
  6849  002272  BE3A               	btfsc	(dtoa@w+1)^0,7,c
  6850  002274  D007               	goto	u4850
  6851  002276  503A               	movf	(dtoa@w+1)^0,w,c
  6852  002278  E103               	bnz	u4840
  6853  00227A  0439               	decf	dtoa@w^0,w,c
  6854  00227C  A0D8               	btfss	status,0,c
  6855  00227E  D002               	goto	u4850
  6856  002280                     u4840:
  6857  002280  B256               	btfsc	_flags^0,1,c
  6858  002282  D741               	goto	l5676
  6859  002284                     u4850:
  6860                           
  6861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  6862  002284  503B               	movf	dtoa@s^0,w,c
  6863  002286  103C               	iorwf	(dtoa@s+1)^0,w,c
  6864  002288  A4D8               	btfss	status,2,c
  6865  00228A  D002               	goto	u4870
  6866  00228C  A456               	btfss	_flags^0,2,c
  6867  00228E  D018               	goto	l5710
  6868  002290                     u4870:
  6869                           
  6870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
  6871  002290  0645               	decf	dtoa@i^0,f,c
  6872  002292  A0D8               	btfss	status,0,c
  6873  002294  0646               	decf	(dtoa@i+1)^0,f,c
  6874                           
  6875                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  6876  002296  503B               	movf	dtoa@s^0,w,c
  6877  002298  103C               	iorwf	(dtoa@s+1)^0,w,c
  6878  00229A  A4D8               	btfss	status,2,c
  6879  00229C  D004               	goto	l5706
  6880  00229E  0E00               	movlw	0
  6881  0022A0  6E36               	movwf	(_dtoa$2573+1)^0,c
  6882  0022A2  0E2B               	movlw	43
  6883  0022A4  D003               	goto	L10
  6884  0022A6                     l5706:
  6885  0022A6  0E00               	movlw	0
  6886  0022A8  6E36               	movwf	(_dtoa$2573+1)^0,c
  6887  0022AA  0E2D               	movlw	45
  6888  0022AC                     L10:
  6889  0022AC  6E35               	movwf	_dtoa$2573^0,c
  6890  0022AE  0E3C               	movlw	low _dbuf
  6891  0022B0  2445               	addwf	dtoa@i^0,w,c
  6892  0022B2  6ED9               	movwf	fsr2l,c
  6893  0022B4  0E01               	movlw	high _dbuf
  6894  0022B6  2046               	addwfc	(dtoa@i+1)^0,w,c
  6895  0022B8  6EDA               	movwf	fsr2h,c
  6896  0022BA  0060  F0D7  FFDF   	movff	_dtoa$2573,indf2
  6897  0022C0                     l5710:
  6898                           
  6899                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  6900  0022C0  0060  F08C  F018   	movff	dtoa@fp,pad@fp
  6901  0022C6  0060  F090  F019   	movff	dtoa@fp+1,pad@fp+1
  6902  0022CC  0E3C               	movlw	low _dbuf
  6903  0022CE  2445               	addwf	dtoa@i^0,w,c
  6904  0022D0  6E1A               	movwf	pad@buf^0,c
  6905  0022D2  0E01               	movlw	high _dbuf
  6906  0022D4  2046               	addwfc	(dtoa@i+1)^0,w,c
  6907  0022D6  6E1B               	movwf	(pad@buf+1)^0,c
  6908  0022D8  0060  F0E4  F01C   	movff	dtoa@w,pad@p
  6909  0022DE  0060  F0E8  F01D   	movff	dtoa@w+1,pad@p+1
  6910  0022E4  EC31  F018         	call	_pad	;wreg free
  6911  0022E8  0060  F060  F023   	movff	?_pad,?_dtoa
  6912  0022EE  0060  F064  F024   	movff	?_pad+1,?_dtoa+1
  6913  0022F4  0012               	return		;funcret
  6914  0022F6                     __end_of_dtoa:
  6915                           	opt callstack 0
  6916                           
  6917 ;; *************** function _pad *****************
  6918 ;; Defined at:
  6919 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6920 ;; Parameters:    Size  Location     Type
  6921 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  6922 ;;		 -> sprintf@f(5), NULL(0), 
  6923 ;;  buf             2   25[COMRAM] PTR unsigned char 
  6924 ;;		 -> dbuf(32), 
  6925 ;;  p               2   27[COMRAM] int 
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;  w               2   32[COMRAM] int 
  6928 ;;  i               2   30[COMRAM] int 
  6929 ;; Return value:  Size  Location     Type
  6930 ;;                  2   23[COMRAM] int 
  6931 ;; Registers used:
  6932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6933 ;; Tracked objects:
  6934 ;;		On entry : 0/1
  6935 ;;		On exit  : 0/0
  6936 ;;		Unchanged: 0/0
  6937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6938 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6939 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6940 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6941 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6942 ;;Total ram usage:       11 bytes
  6943 ;; Hardware stack levels used:    1
  6944 ;; Hardware stack levels required when called:    8
  6945 ;; This function calls:
  6946 ;;		_fputc
  6947 ;;		_fputs
  6948 ;;		_strlen
  6949 ;; This function is called by:
  6950 ;;		_dtoa
  6951 ;; This function uses a non-reentrant model
  6952 ;;
  6953                           
  6954                           	psect	text47
  6955  003062                     __ptext47:
  6956                           	opt callstack 0
  6957  003062                     _pad:
  6958                           	opt callstack 17
  6959                           
  6960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  6961                           
  6962                           ;incstack = 0
  6963  003062  A056               	btfss	_flags^0,0,c
  6964  003064  D00E               	goto	l5550
  6965                           
  6966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  6967  003066  0060  F068  F011   	movff	pad@buf,fputs@s
  6968  00306C  0060  F06C  F012   	movff	pad@buf+1,fputs@s+1
  6969  003072  0060  F060  F013   	movff	pad@fp,fputs@fp
  6970  003078  0060  F064  F014   	movff	pad@fp+1,fputs@fp+1
  6971  00307E  EC26  F01C         	call	_fputs	;wreg free
  6972  003082                     l5550:
  6973                           
  6974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  6975  003082  BE1D               	btfsc	(pad@p+1)^0,7,c
  6976  003084  D007               	goto	l5554
  6977  003086  0060  F070  F021   	movff	pad@p,pad@w
  6978  00308C  0060  F074  F022   	movff	pad@p+1,pad@w+1
  6979  003092  D004               	goto	l1288
  6980  003094                     l5554:
  6981  003094  0E00               	movlw	0
  6982  003096  6E22               	movwf	(pad@w+1)^0,c
  6983  003098  0E00               	movlw	0
  6984  00309A  6E21               	movwf	pad@w^0,c
  6985  00309C                     l1288:
  6986                           
  6987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  6988  00309C  0E00               	movlw	0
  6989  00309E  6E20               	movwf	(pad@i+1)^0,c
  6990  0030A0  0E00               	movlw	0
  6991  0030A2  6E1F               	movwf	pad@i^0,c
  6992                           
  6993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  6994  0030A4  D00E               	goto	l5560
  6995  0030A6                     l5556:
  6996                           
  6997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  6998  0030A6  0E00               	movlw	0
  6999  0030A8  6E09               	movwf	(fputc@c+1)^0,c
  7000  0030AA  0E20               	movlw	32
  7001  0030AC  6E08               	movwf	fputc@c^0,c
  7002  0030AE  0060  F060  F00A   	movff	pad@fp,fputc@fp
  7003  0030B4  0060  F064  F00B   	movff	pad@fp+1,fputc@fp+1
  7004  0030BA  ECD7  F019         	call	_fputc	;wreg free
  7005                           
  7006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
  7007  0030BE  4A1F               	infsnz	pad@i^0,f,c
  7008  0030C0  2A20               	incf	(pad@i+1)^0,f,c
  7009  0030C2                     l5560:
  7010                           
  7011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  7012  0030C2  5021               	movf	pad@w^0,w,c
  7013  0030C4  5C1F               	subwf	pad@i^0,w,c
  7014  0030C6  5020               	movf	(pad@i+1)^0,w,c
  7015  0030C8  0A80               	xorlw	128
  7016  0030CA  6E1E               	movwf	??_pad^0,c
  7017  0030CC  5022               	movf	(pad@w+1)^0,w,c
  7018  0030CE  0A80               	xorlw	128
  7019  0030D0  581E               	subwfb	??_pad^0,w,c
  7020  0030D2  A0D8               	btfss	status,0,c
  7021  0030D4  D7E8               	goto	l5556
  7022                           
  7023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  7024  0030D6  B056               	btfsc	_flags^0,0,c
  7025  0030D8  D00E               	goto	l5564
  7026                           
  7027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  7028  0030DA  0060  F068  F011   	movff	pad@buf,fputs@s
  7029  0030E0  0060  F06C  F012   	movff	pad@buf+1,fputs@s+1
  7030  0030E6  0060  F060  F013   	movff	pad@fp,fputs@fp
  7031  0030EC  0060  F064  F014   	movff	pad@fp+1,fputs@fp+1
  7032  0030F2  EC26  F01C         	call	_fputs	;wreg free
  7033  0030F6                     l5564:
  7034                           
  7035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  7036  0030F6  0060  F068  F006   	movff	pad@buf,strlen@s
  7037  0030FC  0060  F06C  F007   	movff	pad@buf+1,strlen@s+1
  7038  003102  EC72  F01B         	call	_strlen	;wreg free
  7039  003106  5021               	movf	pad@w^0,w,c
  7040  003108  2406               	addwf	?_strlen^0,w,c
  7041  00310A  6E18               	movwf	?_pad^0,c
  7042  00310C  5022               	movf	(pad@w+1)^0,w,c
  7043  00310E  2007               	addwfc	(?_strlen+1)^0,w,c
  7044  003110  6E19               	movwf	(?_pad+1)^0,c
  7045  003112  0012               	return		;funcret
  7046  003114                     __end_of_pad:
  7047                           	opt callstack 0
  7048                           
  7049 ;; *************** function _strlen *****************
  7050 ;; Defined at:
  7051 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
  7052 ;; Parameters:    Size  Location     Type
  7053 ;;  s               2    5[COMRAM] PTR const unsigned char 
  7054 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  7055 ;;		 -> STR_15(4), STR_13(4), STR_11(4), STR_9(4), 
  7056 ;;		 -> STR_7(4), STR_5(4), STR_3(11), work_sw@buffer(64), 
  7057 ;; Auto vars:     Size  Location     Type
  7058 ;;  a               2    7[COMRAM] PTR const unsigned char 
  7059 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  7060 ;;		 -> STR_15(4), STR_13(4), STR_11(4), STR_9(4), 
  7061 ;;		 -> STR_7(4), STR_5(4), STR_3(11), work_sw@buffer(64), 
  7062 ;; Return value:  Size  Location     Type
  7063 ;;                  2    5[COMRAM] unsigned int 
  7064 ;; Registers used:
  7065 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7066 ;; Tracked objects:
  7067 ;;		On entry : 0/0
  7068 ;;		On exit  : 0/0
  7069 ;;		Unchanged: 0/0
  7070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7071 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7072 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7074 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7075 ;;Total ram usage:        4 bytes
  7076 ;; Hardware stack levels used:    1
  7077 ;; Hardware stack levels required when called:    4
  7078 ;; This function calls:
  7079 ;;		Nothing
  7080 ;; This function is called by:
  7081 ;;		_eaDogM_WriteString
  7082 ;;		_pad
  7083 ;;		_stoa
  7084 ;; This function uses a non-reentrant model
  7085 ;;
  7086                           
  7087                           	psect	text48
  7088  0036E4                     __ptext48:
  7089                           	opt callstack 0
  7090  0036E4                     _strlen:
  7091                           	opt callstack 21
  7092                           
  7093                           ;incstack = 0
  7094  0036E4  0060  F018  F008   	movff	strlen@s,strlen@a
  7095  0036EA  0060  F01C  F009   	movff	strlen@s+1,strlen@a+1
  7096  0036F0  D002               	goto	l5532
  7097  0036F2                     l5530:
  7098  0036F2  4A06               	infsnz	strlen@s^0,f,c
  7099  0036F4  2A07               	incf	(strlen@s+1)^0,f,c
  7100  0036F6                     l5532:
  7101  0036F6  0060  F01B  FFF6   	movff	strlen@s,tblptrl
  7102  0036FC  0060  F01F  FFF7   	movff	strlen@s+1,tblptrh
  7103  003702  0E00               	movlw	low (__smallconst shr (0+16))
  7104  003704  6EF8               	movwf	tblptru,c
  7105  003706  0E1F               	movlw	(high __ramtop+-1)
  7106  003708  64F7               	cpfsgt	tblptrh,c
  7107  00370A  D003               	bra	u4537
  7108  00370C  0008               	tblrd		*
  7109  00370E  50F5               	movf	tablat,w,c
  7110  003710  D007               	bra	u4530
  7111  003712                     u4537:
  7112  003712  006F FFDB FFE1     	movff	tblptrl,fsr1l
  7113  003718  006F FFDF FFE2     	movff	tblptrh,fsr1h
  7114  00371E  50E7               	movf	indf1,w,c
  7115  003720                     u4530:
  7116  003720  0900               	iorlw	0
  7117  003722  A4D8               	btfss	status,2,c
  7118  003724  D7E6               	goto	l5530
  7119  003726  5008               	movf	strlen@a^0,w,c
  7120  003728  5C06               	subwf	strlen@s^0,w,c
  7121  00372A  6E06               	movwf	?_strlen^0,c
  7122  00372C  5009               	movf	(strlen@a+1)^0,w,c
  7123  00372E  5807               	subwfb	(strlen@s+1)^0,w,c
  7124  003730  6E07               	movwf	(?_strlen+1)^0,c
  7125  003732  0012               	return		;funcret
  7126  003734                     __end_of_strlen:
  7127                           	opt callstack 0
  7128                           
  7129 ;; *************** function _fputs *****************
  7130 ;; Defined at:
  7131 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
  7132 ;; Parameters:    Size  Location     Type
  7133 ;;  s               2   16[COMRAM] PTR const unsigned char 
  7134 ;;		 -> dbuf(32), 
  7135 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  7136 ;;		 -> sprintf@f(5), NULL(0), 
  7137 ;; Auto vars:     Size  Location     Type
  7138 ;;  i               2   21[COMRAM] int 
  7139 ;;  c               1   20[COMRAM] unsigned char 
  7140 ;; Return value:  Size  Location     Type
  7141 ;;                  2   16[COMRAM] int 
  7142 ;; Registers used:
  7143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7144 ;; Tracked objects:
  7145 ;;		On entry : 0/1
  7146 ;;		On exit  : 0/0
  7147 ;;		Unchanged: 0/0
  7148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7149 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7150 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7152 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7153 ;;Total ram usage:        7 bytes
  7154 ;; Hardware stack levels used:    1
  7155 ;; Hardware stack levels required when called:    7
  7156 ;; This function calls:
  7157 ;;		_fputc
  7158 ;; This function is called by:
  7159 ;;		_pad
  7160 ;; This function uses a non-reentrant model
  7161 ;;
  7162                           
  7163                           	psect	text49
  7164  00384C                     __ptext49:
  7165                           	opt callstack 0
  7166  00384C                     _fputs:
  7167                           	opt callstack 17
  7168                           
  7169                           ;incstack = 0
  7170  00384C  0E00               	movlw	0
  7171  00384E  6E17               	movwf	(fputs@i+1)^0,c
  7172  003850  0E00               	movlw	0
  7173  003852  6E16               	movwf	fputs@i^0,c
  7174  003854  D00E               	goto	l5544
  7175  003856                     l5540:
  7176  003856  0060  F054  F008   	movff	fputs@c,fputc@c
  7177  00385C  6A09               	clrf	(fputc@c+1)^0,c
  7178  00385E  0060  F04C  F00A   	movff	fputs@fp,fputc@fp
  7179  003864  0060  F050  F00B   	movff	fputs@fp+1,fputc@fp+1
  7180  00386A  ECD7  F019         	call	_fputc	;wreg free
  7181  00386E  4A16               	infsnz	fputs@i^0,f,c
  7182  003870  2A17               	incf	(fputs@i+1)^0,f,c
  7183  003872                     l5544:
  7184  003872  5016               	movf	fputs@i^0,w,c
  7185  003874  2411               	addwf	fputs@s^0,w,c
  7186  003876  6ED9               	movwf	fsr2l,c
  7187  003878  5017               	movf	(fputs@i+1)^0,w,c
  7188  00387A  2012               	addwfc	(fputs@s+1)^0,w,c
  7189  00387C  6EDA               	movwf	fsr2h,c
  7190  00387E  50DF               	movf	indf2,w,c
  7191  003880  6E15               	movwf	fputs@c^0,c
  7192  003882  5015               	movf	fputs@c^0,w,c
  7193  003884  B4D8               	btfsc	status,2,c
  7194  003886  0012               	return	
  7195  003888  D7E6               	goto	l5540
  7196  00388A                     __end_of_fputs:
  7197                           	opt callstack 0
  7198                           
  7199 ;; *************** function _fputc *****************
  7200 ;; Defined at:
  7201 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
  7202 ;; Parameters:    Size  Location     Type
  7203 ;;  c               2    7[COMRAM] int 
  7204 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  7205 ;;		 -> sprintf@f(5), NULL(0), 
  7206 ;; Auto vars:     Size  Location     Type
  7207 ;;		None
  7208 ;; Return value:  Size  Location     Type
  7209 ;;                  2    7[COMRAM] int 
  7210 ;; Registers used:
  7211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7212 ;; Tracked objects:
  7213 ;;		On entry : 0/0
  7214 ;;		On exit  : 0/0
  7215 ;;		Unchanged: 0/0
  7216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7217 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7219 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7220 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7221 ;;Total ram usage:        9 bytes
  7222 ;; Hardware stack levels used:    1
  7223 ;; Hardware stack levels required when called:    6
  7224 ;; This function calls:
  7225 ;;		_putch
  7226 ;; This function is called by:
  7227 ;;		_pad
  7228 ;;		_stoa
  7229 ;;		_vfpfcnvrt
  7230 ;;		_fputs
  7231 ;; This function uses a non-reentrant model
  7232 ;;
  7233                           
  7234                           	psect	text50
  7235  0033AE                     __ptext50:
  7236                           	opt callstack 0
  7237  0033AE                     _fputc:
  7238                           	opt callstack 19
  7239                           
  7240                           ;incstack = 0
  7241  0033AE  500A               	movf	fputc@fp^0,w,c
  7242  0033B0  100B               	iorwf	(fputc@fp+1)^0,w,c
  7243  0033B2  B4D8               	btfsc	status,2,c
  7244  0033B4  D004               	goto	u4500
  7245  0033B6  500A               	movf	fputc@fp^0,w,c
  7246  0033B8  100B               	iorwf	(fputc@fp+1)^0,w,c
  7247  0033BA  A4D8               	btfss	status,2,c
  7248  0033BC  D004               	goto	l5520
  7249  0033BE                     u4500:
  7250  0033BE  5008               	movf	fputc@c^0,w,c
  7251  0033C0  EC80  F01F         	call	_putch
  7252  0033C4  0012               	return	
  7253  0033C6                     l5520:
  7254  0033C6  EE20 F003          	lfsr	2,3
  7255  0033CA  500A               	movf	fputc@fp^0,w,c
  7256  0033CC  26D9               	addwf	fsr2l,f,c
  7257  0033CE  500B               	movf	(fputc@fp+1)^0,w,c
  7258  0033D0  22DA               	addwfc	fsr2h,f,c
  7259  0033D2  50DE               	movf	postinc2,w,c
  7260  0033D4  10DE               	iorwf	postinc2,w,c
  7261  0033D6  B4D8               	btfsc	status,2,c
  7262  0033D8  D016               	goto	u4520
  7263  0033DA  EE20 F003          	lfsr	2,3
  7264  0033DE  500A               	movf	fputc@fp^0,w,c
  7265  0033E0  26D9               	addwf	fsr2l,f,c
  7266  0033E2  500B               	movf	(fputc@fp+1)^0,w,c
  7267  0033E4  22DA               	addwfc	fsr2h,f,c
  7268  0033E6  EE10 F001          	lfsr	1,1
  7269  0033EA  500A               	movf	fputc@fp^0,w,c
  7270  0033EC  26E1               	addwf	fsr1l,f,c
  7271  0033EE  500B               	movf	(fputc@fp+1)^0,w,c
  7272  0033F0  22E2               	addwfc	fsr1h,f,c
  7273  0033F2  50DE               	movf	postinc2,w,c
  7274  0033F4  5CE6               	subwf	postinc1,w,c
  7275  0033F6  50E6               	movf	postinc1,w,c
  7276  0033F8  0A80               	xorlw	128
  7277  0033FA  6E10               	movwf	(??_fputc+4)^0,c
  7278  0033FC  50DE               	movf	postinc2,w,c
  7279  0033FE  0A80               	xorlw	128
  7280  003400  5810               	subwfb	(??_fputc+4)^0,w,c
  7281  003402  B0D8               	btfsc	status,0,c
  7282  003404  0012               	return	
  7283  003406                     u4520:
  7284  003406  EE20 F001          	lfsr	2,1
  7285  00340A  500A               	movf	fputc@fp^0,w,c
  7286  00340C  26D9               	addwf	fsr2l,f,c
  7287  00340E  500B               	movf	(fputc@fp+1)^0,w,c
  7288  003410  22DA               	addwfc	fsr2h,f,c
  7289  003412  50DF               	movf	indf2,w,c
  7290  003414  6E0C               	movwf	??_fputc^0,c
  7291  003416  0060  F02B  FFD9   	movff	fputc@fp,fsr2l
  7292  00341C  0060  F02F  FFDA   	movff	fputc@fp+1,fsr2h
  7293  003422  50DF               	movf	indf2,w,c
  7294  003424  240C               	addwf	??_fputc^0,w,c
  7295  003426  6ED9               	movwf	fsr2l,c
  7296  003428  6ADA               	clrf	fsr2h,c
  7297  00342A  0060  F023  FFDF   	movff	fputc@c,indf2
  7298  003430  EE20 F001          	lfsr	2,1
  7299  003434  500A               	movf	fputc@fp^0,w,c
  7300  003436  26D9               	addwf	fsr2l,f,c
  7301  003438  500B               	movf	(fputc@fp+1)^0,w,c
  7302  00343A  22DA               	addwfc	fsr2h,f,c
  7303  00343C  2ADE               	incf	postinc2,f,c
  7304  00343E  0E00               	movlw	0
  7305  003440  22DD               	addwfc	postdec2,f,c
  7306  003442  0012               	return		;funcret
  7307  003444                     __end_of_fputc:
  7308                           	opt callstack 0
  7309                           
  7310 ;; *************** function _putch *****************
  7311 ;; Defined at:
  7312 ;;		line 221 in file "mcc_generated_files/uart2.c"
  7313 ;; Parameters:    Size  Location     Type
  7314 ;;  txData          1    wreg     unsigned char 
  7315 ;; Auto vars:     Size  Location     Type
  7316 ;;  txData          1    6[COMRAM] unsigned char 
  7317 ;; Return value:  Size  Location     Type
  7318 ;;                  1    wreg      void 
  7319 ;; Registers used:
  7320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7321 ;; Tracked objects:
  7322 ;;		On entry : 0/0
  7323 ;;		On exit  : 3F/39
  7324 ;;		Unchanged: 0/0
  7325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7327 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7329 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7330 ;;Total ram usage:        1 bytes
  7331 ;; Hardware stack levels used:    1
  7332 ;; Hardware stack levels required when called:    5
  7333 ;; This function calls:
  7334 ;;		_UART2_Write
  7335 ;; This function is called by:
  7336 ;;		_fputc
  7337 ;; This function uses a non-reentrant model
  7338 ;;
  7339                           
  7340                           	psect	text51
  7341  003F00                     __ptext51:
  7342                           	opt callstack 0
  7343  003F00                     _putch:
  7344                           	opt callstack 19
  7345                           
  7346                           ;incstack = 0
  7347                           ;putch@txData stored from wreg
  7348  003F00  6E07               	movwf	putch@txData^0,c
  7349                           
  7350                           ;mcc_generated_files/uart2.c: 221: void putch(char txData);mcc_generated_files/uart2.c: 
      +                          222: {;mcc_generated_files/uart2.c: 223:     UART2_Write(txData);
  7351  003F02  5007               	movf	putch@txData^0,w,c
  7352  003F04  ECE4  F01B         	call	_UART2_Write
  7353                           
  7354                           ; BSR set to: 57
  7355  003F08  0012               	return		;funcret
  7356  003F0A                     __end_of_putch:
  7357                           	opt callstack 0
  7358                           
  7359 ;; *************** function _UART2_Write *****************
  7360 ;; Defined at:
  7361 ;;		line 193 in file "mcc_generated_files/uart2.c"
  7362 ;; Parameters:    Size  Location     Type
  7363 ;;  txData          1    wreg     unsigned char 
  7364 ;; Auto vars:     Size  Location     Type
  7365 ;;  txData          1    5[COMRAM] unsigned char 
  7366 ;; Return value:  Size  Location     Type
  7367 ;;                  1    wreg      void 
  7368 ;; Registers used:
  7369 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7370 ;; Tracked objects:
  7371 ;;		On entry : 0/0
  7372 ;;		On exit  : 3F/39
  7373 ;;		Unchanged: 0/0
  7374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7376 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7378 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7379 ;;Total ram usage:        1 bytes
  7380 ;; Hardware stack levels used:    1
  7381 ;; Hardware stack levels required when called:    4
  7382 ;; This function calls:
  7383 ;;		Nothing
  7384 ;; This function is called by:
  7385 ;;		_putch
  7386 ;;		_Digital232_RW
  7387 ;; This function uses a non-reentrant model
  7388 ;;
  7389                           
  7390                           	psect	text52
  7391  0037C8                     __ptext52:
  7392                           	opt callstack 0
  7393  0037C8                     _UART2_Write:
  7394                           	opt callstack 19
  7395                           
  7396                           ; BSR set to: 57
  7397                           ;incstack = 0
  7398                           ;UART2_Write@txData stored from wreg
  7399  0037C8  6E06               	movwf	UART2_Write@txData^0,c
  7400  0037CA                     
  7401                           ;mcc_generated_files/uart2.c: 195:     while(0 == uart2TxBufferRemaining)
  7402                           
  7403                           ;mcc_generated_files/uart2.c: 193: void UART2_Write(uint8_t txData);mcc_generated_files/
      +                          uart2.c: 194: {;mcc_generated_files/uart2.c: 195:     while(0 == uart2TxBufferRemaining)
  7404  0037CA  0100               	movlb	0	; () banked
  7405  0037CC  51EF               	movf	_uart2TxBufferRemaining& (0+255),w,b	;volatile
  7406  0037CE  B4D8               	btfsc	status,2,c
  7407  0037D0  D7FC               	goto	l5494
  7408                           
  7409                           ; BSR set to: 0
  7410                           ;mcc_generated_files/uart2.c: 199:     if(0 == PIE6bits.U2TXIE)
  7411  0037D2  0139               	movlb	57	; () banked
  7412  0037D4  B796               	btfsc	150,3,b	;volatile
  7413  0037D6  D004               	goto	l492
  7414                           
  7415                           ; BSR set to: 57
  7416                           ;mcc_generated_files/uart2.c: 200:     {;mcc_generated_files/uart2.c: 201:         U2TXB
      +                           = txData;
  7417  0037D8  0060  F01B  FDD2   	movff	UART2_Write@txData,15826	;volatile
  7418                           
  7419                           ;mcc_generated_files/uart2.c: 202:     }
  7420  0037DE  D012               	goto	l5510
  7421  0037E0                     l492:
  7422                           
  7423                           ; BSR set to: 57
  7424                           ;mcc_generated_files/uart2.c: 204:     {;mcc_generated_files/uart2.c: 205:         PIE6b
      +                          its.U2TXIE = 0;
  7425  0037E0  9796               	bcf	150,3,b	;volatile
  7426                           
  7427                           ; BSR set to: 57
  7428                           ;mcc_generated_files/uart2.c: 206:         uart2TxBuffer[uart2TxHead++] = txData;
  7429  0037E2  0E1C               	movlw	low _uart2TxBuffer
  7430  0037E4  0100               	movlb	0	; () banked
  7431  0037E6  25F1               	addwf	_uart2TxHead& (0+255),w,b	;volatile
  7432  0037E8  6ED9               	movwf	fsr2l,c
  7433  0037EA  6ADA               	clrf	fsr2h,c
  7434  0037EC  0E01               	movlw	high _uart2TxBuffer
  7435  0037EE  22DA               	addwfc	fsr2h,f,c
  7436  0037F0  0060  F01B  FFDF   	movff	UART2_Write@txData,indf2
  7437                           
  7438                           ; BSR set to: 0
  7439  0037F6  2BF1               	incf	_uart2TxHead& (0+255),f,b	;volatile
  7440                           
  7441                           ; BSR set to: 0
  7442                           ;mcc_generated_files/uart2.c: 207:         if(sizeof(uart2TxBuffer) <= uart2TxHead)
  7443  0037F8  0E07               	movlw	7
  7444  0037FA  65F1               	cpfsgt	_uart2TxHead& (0+255),b
  7445  0037FC  D002               	goto	l5508
  7446                           
  7447                           ; BSR set to: 0
  7448                           ;mcc_generated_files/uart2.c: 208:         {;mcc_generated_files/uart2.c: 209:          
      +                             uart2TxHead = 0;
  7449  0037FE  0E00               	movlw	0
  7450  003800  6FF1               	movwf	_uart2TxHead& (0+255),b	;volatile
  7451  003802                     l5508:
  7452                           
  7453                           ; BSR set to: 0
  7454                           ;mcc_generated_files/uart2.c: 211:         uart2TxBufferRemaining--;
  7455  003802  07EF               	decf	_uart2TxBufferRemaining& (0+255),f,b	;volatile
  7456  003804                     l5510:
  7457                           
  7458                           ;mcc_generated_files/uart2.c: 213:     PIE6bits.U2TXIE = 1;
  7459  003804  0139               	movlb	57	; () banked
  7460  003806  8796               	bsf	150,3,b	;volatile
  7461                           
  7462                           ; BSR set to: 57
  7463  003808  0012               	return		;funcret
  7464  00380A                     __end_of_UART2_Write:
  7465                           	opt callstack 0
  7466                           
  7467 ;; *************** function _abs *****************
  7468 ;; Defined at:
  7469 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
  7470 ;; Parameters:    Size  Location     Type
  7471 ;;  a               2   23[COMRAM] int 
  7472 ;; Auto vars:     Size  Location     Type
  7473 ;;		None
  7474 ;; Return value:  Size  Location     Type
  7475 ;;                  2   23[COMRAM] int 
  7476 ;; Registers used:
  7477 ;;		wreg, status,2, status,0
  7478 ;; Tracked objects:
  7479 ;;		On entry : 0/1
  7480 ;;		On exit  : 0/0
  7481 ;;		Unchanged: 0/0
  7482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7483 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7485 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7486 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7487 ;;Total ram usage:        4 bytes
  7488 ;; Hardware stack levels used:    1
  7489 ;; Hardware stack levels required when called:    4
  7490 ;; This function calls:
  7491 ;;		Nothing
  7492 ;; This function is called by:
  7493 ;;		_dtoa
  7494 ;; This function uses a non-reentrant model
  7495 ;;
  7496                           
  7497                           	psect	text53
  7498  00388A                     __ptext53:
  7499                           	opt callstack 0
  7500  00388A                     _abs:
  7501                           	opt callstack 21
  7502                           
  7503                           ; BSR set to: 57
  7504                           ;incstack = 0
  7505  00388A  BE19               	btfsc	(abs@a+1)^0,7,c
  7506  00388C  D005               	goto	u4600
  7507  00388E  5019               	movf	(abs@a+1)^0,w,c
  7508  003890  E114               	bnz	l2035
  7509  003892  0418               	decf	abs@a^0,w,c
  7510  003894  B0D8               	btfsc	status,0,c
  7511  003896  D011               	goto	l2035
  7512  003898                     u4600:
  7513  003898  0060  F060  F01A   	movff	abs@a,??_abs
  7514  00389E  0060  F064  F01B   	movff	abs@a+1,??_abs+1
  7515  0038A4  1E1A               	comf	??_abs^0,f,c
  7516  0038A6  1E1B               	comf	(??_abs+1)^0,f,c
  7517  0038A8  4A1A               	infsnz	??_abs^0,f,c
  7518  0038AA  2A1B               	incf	(??_abs+1)^0,f,c
  7519  0038AC  0060  F068  F018   	movff	??_abs,?_abs
  7520  0038B2  0060  F06C  F019   	movff	??_abs+1,?_abs+1
  7521  0038B8  0012               	return	
  7522  0038BA                     l2035:
  7523  0038BA  0060  F060  F018   	movff	abs@a,?_abs
  7524  0038C0  0060  F064  F019   	movff	abs@a+1,?_abs+1
  7525  0038C6  0012               	return		;funcret
  7526  0038C8                     __end_of_abs:
  7527                           	opt callstack 0
  7528                           
  7529 ;; *************** function ___aomod *****************
  7530 ;; Defined at:
  7531 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
  7532 ;; Parameters:    Size  Location     Type
  7533 ;;  dividend        8    5[COMRAM] long long 
  7534 ;;  divisor         8   13[COMRAM] long long 
  7535 ;; Auto vars:     Size  Location     Type
  7536 ;;  sign            1   22[COMRAM] unsigned char 
  7537 ;;  counter         1   21[COMRAM] unsigned char 
  7538 ;; Return value:  Size  Location     Type
  7539 ;;                  8    5[COMRAM] long long 
  7540 ;; Registers used:
  7541 ;;		wreg, status,2, status,0
  7542 ;; Tracked objects:
  7543 ;;		On entry : 0/1
  7544 ;;		On exit  : 0/0
  7545 ;;		Unchanged: 0/0
  7546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7547 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7548 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7550 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7551 ;;Total ram usage:       18 bytes
  7552 ;; Hardware stack levels used:    1
  7553 ;; Hardware stack levels required when called:    4
  7554 ;; This function calls:
  7555 ;;		Nothing
  7556 ;; This function is called by:
  7557 ;;		_dtoa
  7558 ;; This function uses a non-reentrant model
  7559 ;;
  7560                           
  7561                           	psect	text54
  7562  002BF2                     __ptext54:
  7563                           	opt callstack 0
  7564  002BF2                     ___aomod:
  7565                           	opt callstack 21
  7566                           
  7567                           ;incstack = 0
  7568  002BF2  0E00               	movlw	0
  7569  002BF4  6E17               	movwf	___aomod@sign^0,c
  7570  002BF6  AE0D               	btfss	(___aomod@dividend+7)^0,7,c
  7571  002BF8  D012               	goto	l5624
  7572  002BFA  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  7573  002BFC  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  7574  002BFE  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  7575  002C00  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  7576  002C02  1E09               	comf	(___aomod@dividend+3)^0,f,c
  7577  002C04  1E08               	comf	(___aomod@dividend+2)^0,f,c
  7578  002C06  1E07               	comf	(___aomod@dividend+1)^0,f,c
  7579  002C08  6C06               	negf	___aomod@dividend^0,c
  7580  002C0A  0E00               	movlw	0
  7581  002C0C  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  7582  002C0E  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  7583  002C10  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  7584  002C12  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  7585  002C14  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  7586  002C16  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  7587  002C18  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  7588  002C1A  0E01               	movlw	1
  7589  002C1C  6E17               	movwf	___aomod@sign^0,c
  7590  002C1E                     l5624:
  7591  002C1E  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  7592  002C20  D010               	goto	l5628
  7593  002C22  1E15               	comf	(___aomod@divisor+7)^0,f,c
  7594  002C24  1E14               	comf	(___aomod@divisor+6)^0,f,c
  7595  002C26  1E13               	comf	(___aomod@divisor+5)^0,f,c
  7596  002C28  1E12               	comf	(___aomod@divisor+4)^0,f,c
  7597  002C2A  1E11               	comf	(___aomod@divisor+3)^0,f,c
  7598  002C2C  1E10               	comf	(___aomod@divisor+2)^0,f,c
  7599  002C2E  1E0F               	comf	(___aomod@divisor+1)^0,f,c
  7600  002C30  6C0E               	negf	___aomod@divisor^0,c
  7601  002C32  0E00               	movlw	0
  7602  002C34  220F               	addwfc	(___aomod@divisor+1)^0,f,c
  7603  002C36  2210               	addwfc	(___aomod@divisor+2)^0,f,c
  7604  002C38  2211               	addwfc	(___aomod@divisor+3)^0,f,c
  7605  002C3A  2212               	addwfc	(___aomod@divisor+4)^0,f,c
  7606  002C3C  2213               	addwfc	(___aomod@divisor+5)^0,f,c
  7607  002C3E  2214               	addwfc	(___aomod@divisor+6)^0,f,c
  7608  002C40  2215               	addwfc	(___aomod@divisor+7)^0,f,c
  7609  002C42                     l5628:
  7610  002C42  500E               	movf	___aomod@divisor^0,w,c
  7611  002C44  100F               	iorwf	(___aomod@divisor+1)^0,w,c
  7612  002C46  1010               	iorwf	(___aomod@divisor+2)^0,w,c
  7613  002C48  1011               	iorwf	(___aomod@divisor+3)^0,w,c
  7614  002C4A  1012               	iorwf	(___aomod@divisor+4)^0,w,c
  7615  002C4C  1013               	iorwf	(___aomod@divisor+5)^0,w,c
  7616  002C4E  1014               	iorwf	(___aomod@divisor+6)^0,w,c
  7617  002C50  1015               	iorwf	(___aomod@divisor+7)^0,w,c
  7618  002C52  B4D8               	btfsc	status,2,c
  7619  002C54  D03C               	goto	l5644
  7620  002C56  0E01               	movlw	1
  7621  002C58  6E16               	movwf	___aomod@counter^0,c
  7622  002C5A  D00A               	goto	l5634
  7623  002C5C                     l5632:
  7624  002C5C  90D8               	bcf	status,0,c
  7625  002C5E  360E               	rlcf	___aomod@divisor^0,f,c
  7626  002C60  360F               	rlcf	(___aomod@divisor+1)^0,f,c
  7627  002C62  3610               	rlcf	(___aomod@divisor+2)^0,f,c
  7628  002C64  3611               	rlcf	(___aomod@divisor+3)^0,f,c
  7629  002C66  3612               	rlcf	(___aomod@divisor+4)^0,f,c
  7630  002C68  3613               	rlcf	(___aomod@divisor+5)^0,f,c
  7631  002C6A  3614               	rlcf	(___aomod@divisor+6)^0,f,c
  7632  002C6C  3615               	rlcf	(___aomod@divisor+7)^0,f,c
  7633  002C6E  2A16               	incf	___aomod@counter^0,f,c
  7634  002C70                     l5634:
  7635  002C70  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  7636  002C72  D7F4               	goto	l5632
  7637  002C74                     u4710:
  7638  002C74  500E               	movf	___aomod@divisor^0,w,c
  7639  002C76  5C06               	subwf	___aomod@dividend^0,w,c
  7640  002C78  500F               	movf	(___aomod@divisor+1)^0,w,c
  7641  002C7A  5807               	subwfb	(___aomod@dividend+1)^0,w,c
  7642  002C7C  5010               	movf	(___aomod@divisor+2)^0,w,c
  7643  002C7E  5808               	subwfb	(___aomod@dividend+2)^0,w,c
  7644  002C80  5011               	movf	(___aomod@divisor+3)^0,w,c
  7645  002C82  5809               	subwfb	(___aomod@dividend+3)^0,w,c
  7646  002C84  5012               	movf	(___aomod@divisor+4)^0,w,c
  7647  002C86  580A               	subwfb	(___aomod@dividend+4)^0,w,c
  7648  002C88  5013               	movf	(___aomod@divisor+5)^0,w,c
  7649  002C8A  580B               	subwfb	(___aomod@dividend+5)^0,w,c
  7650  002C8C  5014               	movf	(___aomod@divisor+6)^0,w,c
  7651  002C8E  580C               	subwfb	(___aomod@dividend+6)^0,w,c
  7652  002C90  5015               	movf	(___aomod@divisor+7)^0,w,c
  7653  002C92  580D               	subwfb	(___aomod@dividend+7)^0,w,c
  7654  002C94  A0D8               	btfss	status,0,c
  7655  002C96  D010               	goto	l5640
  7656  002C98  500E               	movf	___aomod@divisor^0,w,c
  7657  002C9A  5E06               	subwf	___aomod@dividend^0,f,c
  7658  002C9C  500F               	movf	(___aomod@divisor+1)^0,w,c
  7659  002C9E  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
  7660  002CA0  5010               	movf	(___aomod@divisor+2)^0,w,c
  7661  002CA2  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
  7662  002CA4  5011               	movf	(___aomod@divisor+3)^0,w,c
  7663  002CA6  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
  7664  002CA8  5012               	movf	(___aomod@divisor+4)^0,w,c
  7665  002CAA  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
  7666  002CAC  5013               	movf	(___aomod@divisor+5)^0,w,c
  7667  002CAE  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
  7668  002CB0  5014               	movf	(___aomod@divisor+6)^0,w,c
  7669  002CB2  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
  7670  002CB4  5015               	movf	(___aomod@divisor+7)^0,w,c
  7671  002CB6  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
  7672  002CB8                     l5640:
  7673  002CB8  90D8               	bcf	status,0,c
  7674  002CBA  3215               	rrcf	(___aomod@divisor+7)^0,f,c
  7675  002CBC  3214               	rrcf	(___aomod@divisor+6)^0,f,c
  7676  002CBE  3213               	rrcf	(___aomod@divisor+5)^0,f,c
  7677  002CC0  3212               	rrcf	(___aomod@divisor+4)^0,f,c
  7678  002CC2  3211               	rrcf	(___aomod@divisor+3)^0,f,c
  7679  002CC4  3210               	rrcf	(___aomod@divisor+2)^0,f,c
  7680  002CC6  320F               	rrcf	(___aomod@divisor+1)^0,f,c
  7681  002CC8  320E               	rrcf	___aomod@divisor^0,f,c
  7682  002CCA  2E16               	decfsz	___aomod@counter^0,f,c
  7683  002CCC  D7D3               	goto	u4710
  7684  002CCE                     l5644:
  7685  002CCE  5017               	movf	___aomod@sign^0,w,c
  7686  002CD0  B4D8               	btfsc	status,2,c
  7687  002CD2  D010               	goto	l5648
  7688  002CD4  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  7689  002CD6  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  7690  002CD8  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  7691  002CDA  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  7692  002CDC  1E09               	comf	(___aomod@dividend+3)^0,f,c
  7693  002CDE  1E08               	comf	(___aomod@dividend+2)^0,f,c
  7694  002CE0  1E07               	comf	(___aomod@dividend+1)^0,f,c
  7695  002CE2  6C06               	negf	___aomod@dividend^0,c
  7696  002CE4  0E00               	movlw	0
  7697  002CE6  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  7698  002CE8  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  7699  002CEA  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  7700  002CEC  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  7701  002CEE  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  7702  002CF0  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  7703  002CF2  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  7704  002CF4                     l5648:
  7705  002CF4  0060  F018  F006   	movff	___aomod@dividend,?___aomod
  7706  002CFA  0060  F01C  F007   	movff	___aomod@dividend+1,?___aomod+1
  7707  002D00  0060  F020  F008   	movff	___aomod@dividend+2,?___aomod+2
  7708  002D06  0060  F024  F009   	movff	___aomod@dividend+3,?___aomod+3
  7709  002D0C  0060  F028  F00A   	movff	___aomod@dividend+4,?___aomod+4
  7710  002D12  0060  F02C  F00B   	movff	___aomod@dividend+5,?___aomod+5
  7711  002D18  0060  F030  F00C   	movff	___aomod@dividend+6,?___aomod+6
  7712  002D1E  0060  F034  F00D   	movff	___aomod@dividend+7,?___aomod+7
  7713  002D24  0012               	return		;funcret
  7714  002D26                     __end_of___aomod:
  7715                           	opt callstack 0
  7716                           
  7717 ;; *************** function ___aodiv *****************
  7718 ;; Defined at:
  7719 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
  7720 ;; Parameters:    Size  Location     Type
  7721 ;;  dividend        8    5[COMRAM] long long 
  7722 ;;  divisor         8   13[COMRAM] long long 
  7723 ;; Auto vars:     Size  Location     Type
  7724 ;;  quotient        8   23[COMRAM] long long 
  7725 ;;  sign            1   22[COMRAM] unsigned char 
  7726 ;;  counter         1   21[COMRAM] unsigned char 
  7727 ;; Return value:  Size  Location     Type
  7728 ;;                  8    5[COMRAM] long long 
  7729 ;; Registers used:
  7730 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7731 ;; Tracked objects:
  7732 ;;		On entry : 0/1
  7733 ;;		On exit  : 0/0
  7734 ;;		Unchanged: 0/0
  7735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7736 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7737 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7739 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7740 ;;Total ram usage:       26 bytes
  7741 ;; Hardware stack levels used:    1
  7742 ;; Hardware stack levels required when called:    4
  7743 ;; This function calls:
  7744 ;;		Nothing
  7745 ;; This function is called by:
  7746 ;;		_dtoa
  7747 ;; This function uses a non-reentrant model
  7748 ;;
  7749                           
  7750                           	psect	text55
  7751  002A9A                     __ptext55:
  7752                           	opt callstack 0
  7753  002A9A                     ___aodiv:
  7754                           	opt callstack 21
  7755                           
  7756                           ;incstack = 0
  7757  002A9A  0E00               	movlw	0
  7758  002A9C  6E17               	movwf	___aodiv@sign^0,c
  7759  002A9E  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  7760  002AA0  D012               	goto	l5580
  7761  002AA2  1E15               	comf	(___aodiv@divisor+7)^0,f,c
  7762  002AA4  1E14               	comf	(___aodiv@divisor+6)^0,f,c
  7763  002AA6  1E13               	comf	(___aodiv@divisor+5)^0,f,c
  7764  002AA8  1E12               	comf	(___aodiv@divisor+4)^0,f,c
  7765  002AAA  1E11               	comf	(___aodiv@divisor+3)^0,f,c
  7766  002AAC  1E10               	comf	(___aodiv@divisor+2)^0,f,c
  7767  002AAE  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
  7768  002AB0  6C0E               	negf	___aodiv@divisor^0,c
  7769  002AB2  0E00               	movlw	0
  7770  002AB4  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
  7771  002AB6  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
  7772  002AB8  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
  7773  002ABA  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
  7774  002ABC  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
  7775  002ABE  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
  7776  002AC0  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
  7777  002AC2  0E01               	movlw	1
  7778  002AC4  6E17               	movwf	___aodiv@sign^0,c
  7779  002AC6                     l5580:
  7780  002AC6  AE0D               	btfss	(___aodiv@dividend+7)^0,7,c
  7781  002AC8  D012               	goto	l5586
  7782  002ACA  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
  7783  002ACC  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
  7784  002ACE  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
  7785  002AD0  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
  7786  002AD2  1E09               	comf	(___aodiv@dividend+3)^0,f,c
  7787  002AD4  1E08               	comf	(___aodiv@dividend+2)^0,f,c
  7788  002AD6  1E07               	comf	(___aodiv@dividend+1)^0,f,c
  7789  002AD8  6C06               	negf	___aodiv@dividend^0,c
  7790  002ADA  0E00               	movlw	0
  7791  002ADC  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
  7792  002ADE  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
  7793  002AE0  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
  7794  002AE2  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
  7795  002AE4  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
  7796  002AE6  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
  7797  002AE8  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
  7798  002AEA  0E01               	movlw	1
  7799  002AEC  1A17               	xorwf	___aodiv@sign^0,f,c
  7800  002AEE                     l5586:
  7801  002AEE  EE20  F018         	lfsr	2,___aodiv@quotient
  7802  002AF2  0E07               	movlw	7
  7803  002AF4                     u4631:
  7804  002AF4  6ADE               	clrf	postinc2,c
  7805  002AF6  06E8               	decf	wreg,f,c
  7806  002AF8  E2FD               	bc	u4631
  7807  002AFA  500E               	movf	___aodiv@divisor^0,w,c
  7808  002AFC  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
  7809  002AFE  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
  7810  002B00  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
  7811  002B02  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
  7812  002B04  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
  7813  002B06  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
  7814  002B08  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
  7815  002B0A  B4D8               	btfsc	status,2,c
  7816  002B0C  D046               	goto	l5608
  7817  002B0E  0E01               	movlw	1
  7818  002B10  6E16               	movwf	___aodiv@counter^0,c
  7819  002B12  D00A               	goto	l5594
  7820  002B14                     l5592:
  7821  002B14  90D8               	bcf	status,0,c
  7822  002B16  360E               	rlcf	___aodiv@divisor^0,f,c
  7823  002B18  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
  7824  002B1A  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
  7825  002B1C  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
  7826  002B1E  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
  7827  002B20  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
  7828  002B22  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
  7829  002B24  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
  7830  002B26  2A16               	incf	___aodiv@counter^0,f,c
  7831  002B28                     l5594:
  7832  002B28  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  7833  002B2A  D7F4               	goto	l5592
  7834  002B2C                     u4650:
  7835  002B2C  90D8               	bcf	status,0,c
  7836  002B2E  3618               	rlcf	___aodiv@quotient^0,f,c
  7837  002B30  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
  7838  002B32  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
  7839  002B34  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
  7840  002B36  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
  7841  002B38  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
  7842  002B3A  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
  7843  002B3C  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
  7844  002B3E  500E               	movf	___aodiv@divisor^0,w,c
  7845  002B40  5C06               	subwf	___aodiv@dividend^0,w,c
  7846  002B42  500F               	movf	(___aodiv@divisor+1)^0,w,c
  7847  002B44  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
  7848  002B46  5010               	movf	(___aodiv@divisor+2)^0,w,c
  7849  002B48  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
  7850  002B4A  5011               	movf	(___aodiv@divisor+3)^0,w,c
  7851  002B4C  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
  7852  002B4E  5012               	movf	(___aodiv@divisor+4)^0,w,c
  7853  002B50  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
  7854  002B52  5013               	movf	(___aodiv@divisor+5)^0,w,c
  7855  002B54  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
  7856  002B56  5014               	movf	(___aodiv@divisor+6)^0,w,c
  7857  002B58  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
  7858  002B5A  5015               	movf	(___aodiv@divisor+7)^0,w,c
  7859  002B5C  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
  7860  002B5E  A0D8               	btfss	status,0,c
  7861  002B60  D011               	goto	l5604
  7862  002B62  500E               	movf	___aodiv@divisor^0,w,c
  7863  002B64  5E06               	subwf	___aodiv@dividend^0,f,c
  7864  002B66  500F               	movf	(___aodiv@divisor+1)^0,w,c
  7865  002B68  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
  7866  002B6A  5010               	movf	(___aodiv@divisor+2)^0,w,c
  7867  002B6C  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
  7868  002B6E  5011               	movf	(___aodiv@divisor+3)^0,w,c
  7869  002B70  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
  7870  002B72  5012               	movf	(___aodiv@divisor+4)^0,w,c
  7871  002B74  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
  7872  002B76  5013               	movf	(___aodiv@divisor+5)^0,w,c
  7873  002B78  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
  7874  002B7A  5014               	movf	(___aodiv@divisor+6)^0,w,c
  7875  002B7C  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
  7876  002B7E  5015               	movf	(___aodiv@divisor+7)^0,w,c
  7877  002B80  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
  7878  002B82  8018               	bsf	___aodiv@quotient^0,0,c
  7879  002B84                     l5604:
  7880  002B84  90D8               	bcf	status,0,c
  7881  002B86  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
  7882  002B88  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
  7883  002B8A  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
  7884  002B8C  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
  7885  002B8E  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
  7886  002B90  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
  7887  002B92  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
  7888  002B94  320E               	rrcf	___aodiv@divisor^0,f,c
  7889  002B96  2E16               	decfsz	___aodiv@counter^0,f,c
  7890  002B98  D7C9               	goto	u4650
  7891  002B9A                     l5608:
  7892  002B9A  5017               	movf	___aodiv@sign^0,w,c
  7893  002B9C  B4D8               	btfsc	status,2,c
  7894  002B9E  D010               	goto	l5612
  7895  002BA0  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
  7896  002BA2  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
  7897  002BA4  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
  7898  002BA6  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
  7899  002BA8  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
  7900  002BAA  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
  7901  002BAC  1E19               	comf	(___aodiv@quotient+1)^0,f,c
  7902  002BAE  6C18               	negf	___aodiv@quotient^0,c
  7903  002BB0  0E00               	movlw	0
  7904  002BB2  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
  7905  002BB4  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
  7906  002BB6  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
  7907  002BB8  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
  7908  002BBA  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
  7909  002BBC  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
  7910  002BBE  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
  7911  002BC0                     l5612:
  7912  002BC0  0060  F060  F006   	movff	___aodiv@quotient,?___aodiv
  7913  002BC6  0060  F064  F007   	movff	___aodiv@quotient+1,?___aodiv+1
  7914  002BCC  0060  F068  F008   	movff	___aodiv@quotient+2,?___aodiv+2
  7915  002BD2  0060  F06C  F009   	movff	___aodiv@quotient+3,?___aodiv+3
  7916  002BD8  0060  F070  F00A   	movff	___aodiv@quotient+4,?___aodiv+4
  7917  002BDE  0060  F074  F00B   	movff	___aodiv@quotient+5,?___aodiv+5
  7918  002BE4  0060  F078  F00C   	movff	___aodiv@quotient+6,?___aodiv+6
  7919  002BEA  0060  F07C  F00D   	movff	___aodiv@quotient+7,?___aodiv+7
  7920  002BF0  0012               	return		;funcret
  7921  002BF2                     __end_of___aodiv:
  7922                           	opt callstack 0
  7923                           
  7924 ;; *************** function _UART2_is_rx_ready *****************
  7925 ;; Defined at:
  7926 ;;		line 152 in file "mcc_generated_files/uart2.c"
  7927 ;; Parameters:    Size  Location     Type
  7928 ;;		None
  7929 ;; Auto vars:     Size  Location     Type
  7930 ;;		None
  7931 ;; Return value:  Size  Location     Type
  7932 ;;                  1    wreg      unsigned char 
  7933 ;; Registers used:
  7934 ;;		wreg, status,2
  7935 ;; Tracked objects:
  7936 ;;		On entry : 0/1
  7937 ;;		On exit  : 3F/0
  7938 ;;		Unchanged: 0/0
  7939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7944 ;;Total ram usage:        0 bytes
  7945 ;; Hardware stack levels used:    1
  7946 ;; Hardware stack levels required when called:    4
  7947 ;; This function calls:
  7948 ;;		Nothing
  7949 ;; This function is called by:
  7950 ;;		_Digital232_init
  7951 ;;		_Digital232_RW
  7952 ;; This function uses a non-reentrant model
  7953 ;;
  7954                           
  7955                           	psect	text56
  7956  003F10                     __ptext56:
  7957                           	opt callstack 0
  7958  003F10                     _UART2_is_rx_ready:
  7959                           	opt callstack 25
  7960                           
  7961                           ;mcc_generated_files/uart2.c: 154:     return uart2RxCount;
  7962                           
  7963                           ;incstack = 0
  7964  003F10  0100               	movlb	0	; () banked
  7965  003F12  51EE               	movf	_uart2RxCount& (0+255),w,b	;volatile
  7966                           
  7967                           ; BSR set to: 0
  7968  003F14  0012               	return		;funcret
  7969  003F16                     __end_of_UART2_is_rx_ready:
  7970                           	opt callstack 0
  7971                           
  7972 ;; *************** function _UART2_Read *****************
  7973 ;; Defined at:
  7974 ;;		line 171 in file "mcc_generated_files/uart2.c"
  7975 ;; Parameters:    Size  Location     Type
  7976 ;;		None
  7977 ;; Auto vars:     Size  Location     Type
  7978 ;;  readValue       1    5[COMRAM] unsigned char 
  7979 ;; Return value:  Size  Location     Type
  7980 ;;                  1    wreg      unsigned char 
  7981 ;; Registers used:
  7982 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7983 ;; Tracked objects:
  7984 ;;		On entry : 3F/0
  7985 ;;		On exit  : 3F/39
  7986 ;;		Unchanged: 0/0
  7987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7989 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7991 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7992 ;;Total ram usage:        1 bytes
  7993 ;; Hardware stack levels used:    1
  7994 ;; Hardware stack levels required when called:    4
  7995 ;; This function calls:
  7996 ;;		Nothing
  7997 ;; This function is called by:
  7998 ;;		_Digital232_init
  7999 ;;		_Digital232_RW
  8000 ;; This function uses a non-reentrant model
  8001 ;;
  8002                           
  8003                           	psect	text57
  8004  00380A                     __ptext57:
  8005                           	opt callstack 0
  8006  00380A                     _UART2_Read:
  8007                           	opt callstack 25
  8008                           
  8009                           ; BSR set to: 0
  8010                           ;mcc_generated_files/uart2.c: 175:     while(0 == uart2RxCount)
  8011                           
  8012                           ; BSR set to: 0
  8013                           ;mcc_generated_files/uart2.c: 175:     while(0 == uart2RxCount)
  8014                           
  8015                           ; BSR set to: 0
  8016                           ;incstack = 0
  8017  00380A  51EE               	movf	_uart2RxCount& (0+255),w,b	;volatile
  8018  00380C  B4D8               	btfsc	status,2,c
  8019  00380E  D7FD               	goto	_UART2_Read
  8020                           
  8021                           ; BSR set to: 0
  8022                           ;mcc_generated_files/uart2.c: 179:     uart2RxLastError = uart2RxStatusBuffer[uart2RxTai
      +                          l];
  8023  003810  0E0C               	movlw	low _uart2RxStatusBuffer
  8024  003812  2458               	addwf	_uart2RxTail^0,w,c	;volatile
  8025  003814  6ED9               	movwf	fsr2l,c
  8026  003816  6ADA               	clrf	fsr2h,c
  8027  003818  0E01               	movlw	high _uart2RxStatusBuffer
  8028  00381A  22DA               	addwfc	fsr2h,f,c
  8029  00381C  50DF               	movf	indf2,w,c
  8030  00381E  6FED               	movwf	_uart2RxLastError& (0+255),b	;volatile
  8031                           
  8032                           ;mcc_generated_files/uart2.c: 181:     readValue = uart2RxBuffer[uart2RxTail++];
  8033  003820  0E14               	movlw	low _uart2RxBuffer
  8034  003822  2458               	addwf	_uart2RxTail^0,w,c	;volatile
  8035  003824  6ED9               	movwf	fsr2l,c
  8036  003826  6ADA               	clrf	fsr2h,c
  8037  003828  0E01               	movlw	high _uart2RxBuffer
  8038  00382A  22DA               	addwfc	fsr2h,f,c
  8039  00382C  50DF               	movf	indf2,w,c
  8040  00382E  6E06               	movwf	UART2_Read@readValue^0,c
  8041                           
  8042                           ; BSR set to: 0
  8043  003830  2A58               	incf	_uart2RxTail^0,f,c	;volatile
  8044                           
  8045                           ; BSR set to: 0
  8046                           ;mcc_generated_files/uart2.c: 182:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
  8047  003832  0E07               	movlw	7
  8048  003834  6458               	cpfsgt	_uart2RxTail^0,c
  8049  003836  D002               	goto	l6074
  8050                           
  8051                           ; BSR set to: 0
  8052                           ;mcc_generated_files/uart2.c: 183:     {;mcc_generated_files/uart2.c: 184:         uart2
      +                          RxTail = 0;
  8053  003838  0E00               	movlw	0
  8054  00383A  6E58               	movwf	_uart2RxTail^0,c	;volatile
  8055  00383C                     l6074:
  8056                           
  8057                           ; BSR set to: 0
  8058                           ;mcc_generated_files/uart2.c: 186:     PIE6bits.U2RXIE = 0;
  8059  00383C  0139               	movlb	57	; () banked
  8060  00383E  9596               	bcf	150,2,b	;volatile
  8061                           
  8062                           ; BSR set to: 57
  8063                           ;mcc_generated_files/uart2.c: 187:     uart2RxCount--;
  8064  003840  0100               	movlb	0	; () banked
  8065  003842  07EE               	decf	_uart2RxCount& (0+255),f,b	;volatile
  8066                           
  8067                           ; BSR set to: 0
  8068                           ;mcc_generated_files/uart2.c: 188:     PIE6bits.U2RXIE = 1;
  8069  003844  0139               	movlb	57	; () banked
  8070  003846  8596               	bsf	150,2,b	;volatile
  8071                           
  8072                           ; BSR set to: 57
  8073                           ;mcc_generated_files/uart2.c: 190:     return readValue;
  8074  003848  5006               	movf	UART2_Read@readValue^0,w,c
  8075                           
  8076                           ; BSR set to: 57
  8077  00384A  0012               	return		;funcret
  8078  00384C                     __end_of_UART2_Read:
  8079                           	opt callstack 0
  8080                           
  8081 ;; *************** function _TimerDone *****************
  8082 ;; Defined at:
  8083 ;;		line 19 in file "timers.c"
  8084 ;; Parameters:    Size  Location     Type
  8085 ;;  timer           1    wreg     const unsigned char 
  8086 ;; Auto vars:     Size  Location     Type
  8087 ;;  timer           1    7[COMRAM] const unsigned char 
  8088 ;; Return value:  Size  Location     Type
  8089 ;;                  1    wreg      _Bool 
  8090 ;; Registers used:
  8091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8092 ;; Tracked objects:
  8093 ;;		On entry : 0/1
  8094 ;;		On exit  : 0/0
  8095 ;;		Unchanged: 0/0
  8096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8098 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8099 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8100 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8101 ;;Total ram usage:        3 bytes
  8102 ;; Hardware stack levels used:    1
  8103 ;; Hardware stack levels required when called:    4
  8104 ;; This function calls:
  8105 ;;		Nothing
  8106 ;; This function is called by:
  8107 ;;		_work_sw
  8108 ;;		_main
  8109 ;;		_Digital232_RW
  8110 ;;		_WaitMs
  8111 ;; This function uses a non-reentrant model
  8112 ;;
  8113                           
  8114                           	psect	text58
  8115  003BA0                     __ptext58:
  8116                           	opt callstack 0
  8117  003BA0                     _TimerDone:
  8118                           	opt callstack 25
  8119                           
  8120                           ; BSR set to: 57
  8121                           ;incstack = 0
  8122                           ;TimerDone@timer stored from wreg
  8123  003BA0  6E08               	movwf	TimerDone@timer^0,c
  8124  003BA2  0004               	clrwdt		;# 
  8125                           
  8126                           ;timers.c: 22:  if (tickCount[timer] == 0) {
  8127  003BA4  5008               	movf	TimerDone@timer^0,w,c
  8128  003BA6  0D02               	mullw	2
  8129  003BA8  0E00               	movlw	low _tickCount
  8130  003BAA  24F3               	addwf	243,w,c
  8131  003BAC  6ED9               	movwf	fsr2l,c
  8132  003BAE  0E01               	movlw	high _tickCount
  8133  003BB0  20F4               	addwfc	prodh,w,c
  8134  003BB2  6EDA               	movwf	fsr2h,c
  8135  003BB4  50DE               	movf	postinc2,w,c
  8136  003BB6  10DE               	iorwf	postinc2,w,c
  8137  003BB8  A4D8               	btfss	status,2,c
  8138  003BBA  D002               	goto	l5854
  8139                           
  8140                           ;timers.c: 23:   return 1;
  8141  003BBC  0E01               	movlw	1
  8142  003BBE  0012               	return	
  8143  003BC0                     l5854:
  8144                           
  8145                           ;timers.c: 25:  return 0;
  8146  003BC0  0E00               	movlw	0
  8147  003BC2  0012               	return		;funcret
  8148  003BC4                     __end_of_TimerDone:
  8149                           	opt callstack 0
  8150                           
  8151 ;; *************** function _StartTimer *****************
  8152 ;; Defined at:
  8153 ;;		line 11 in file "timers.c"
  8154 ;; Parameters:    Size  Location     Type
  8155 ;;  timer           1    wreg     const unsigned char 
  8156 ;;  count           2    5[COMRAM] const unsigned short 
  8157 ;; Auto vars:     Size  Location     Type
  8158 ;;  timer           1    9[COMRAM] const unsigned char 
  8159 ;; Return value:  Size  Location     Type
  8160 ;;                  1    wreg      void 
  8161 ;; Registers used:
  8162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8163 ;; Tracked objects:
  8164 ;;		On entry : 0/0
  8165 ;;		On exit  : 0/0
  8166 ;;		Unchanged: 0/0
  8167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8168 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8169 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8170 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8171 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8172 ;;Total ram usage:        5 bytes
  8173 ;; Hardware stack levels used:    1
  8174 ;; Hardware stack levels required when called:    4
  8175 ;; This function calls:
  8176 ;;		Nothing
  8177 ;; This function is called by:
  8178 ;;		_work_sw
  8179 ;;		_main
  8180 ;;		_Digital232_init
  8181 ;;		_Digital232_RW
  8182 ;;		_led_lightshow
  8183 ;;		_WaitMs
  8184 ;; This function uses a non-reentrant model
  8185 ;;
  8186                           
  8187                           	psect	text59
  8188  003A1C                     __ptext59:
  8189                           	opt callstack 0
  8190  003A1C                     _StartTimer:
  8191                           	opt callstack 25
  8192                           
  8193                           ;incstack = 0
  8194                           ;StartTimer@timer stored from wreg
  8195  003A1C  6E0A               	movwf	StartTimer@timer^0,c
  8196                           
  8197                           ;timers.c: 11: __attribute__((inline)) void StartTimer(const uint8_t timer, const uint16
      +                          _t count);timers.c: 12: {;timers.c: 13:  tickCount[timer] = count << 1;
  8198  003A1E  0060  F018  F008   	movff	StartTimer@count,??_StartTimer
  8199  003A24  0060  F01C  F009   	movff	StartTimer@count+1,??_StartTimer+1
  8200  003A2A  90D8               	bcf	status,0,c
  8201  003A2C  3608               	rlcf	??_StartTimer^0,f,c
  8202  003A2E  3609               	rlcf	(??_StartTimer+1)^0,f,c
  8203  003A30  500A               	movf	StartTimer@timer^0,w,c
  8204  003A32  0D02               	mullw	2
  8205  003A34  0E00               	movlw	low _tickCount
  8206  003A36  24F3               	addwf	243,w,c
  8207  003A38  6ED9               	movwf	fsr2l,c
  8208  003A3A  0E01               	movlw	high _tickCount
  8209  003A3C  20F4               	addwfc	prodh,w,c
  8210  003A3E  6EDA               	movwf	fsr2h,c
  8211  003A40  0060  F023  FFDE   	movff	??_StartTimer,postinc2
  8212  003A46  0060  F027  FFDD   	movff	??_StartTimer+1,postdec2
  8213  003A4C  0012               	return		;funcret
  8214  003A4E                     __end_of_StartTimer:
  8215                           	opt callstack 0
  8216                           
  8217 ;; *************** function _PWM8_LoadDutyValue *****************
  8218 ;; Defined at:
  8219 ;;		line 74 in file "mcc_generated_files/pwm8.c"
  8220 ;; Parameters:    Size  Location     Type
  8221 ;;  dutyValue       2    5[COMRAM] unsigned short 
  8222 ;; Auto vars:     Size  Location     Type
  8223 ;;		None
  8224 ;; Return value:  Size  Location     Type
  8225 ;;                  1    wreg      void 
  8226 ;; Registers used:
  8227 ;;		wreg, status,2, status,0
  8228 ;; Tracked objects:
  8229 ;;		On entry : 0/0
  8230 ;;		On exit  : 0/0
  8231 ;;		Unchanged: 0/0
  8232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8233 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8235 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8236 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8237 ;;Total ram usage:        4 bytes
  8238 ;; Hardware stack levels used:    1
  8239 ;; Hardware stack levels required when called:    4
  8240 ;; This function calls:
  8241 ;;		Nothing
  8242 ;; This function is called by:
  8243 ;;		_Digital232_RW
  8244 ;; This function uses a non-reentrant model
  8245 ;;
  8246                           
  8247                           	psect	text60
  8248  00397A                     __ptext60:
  8249                           	opt callstack 0
  8250  00397A                     _PWM8_LoadDutyValue:
  8251                           	opt callstack 25
  8252                           
  8253                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  8254                           
  8255                           ;incstack = 0
  8256  00397A  0060  F018  F008   	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  8257  003980  0060  F01C  F009   	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
  8258  003986  90D8               	bcf	status,0,c
  8259  003988  3209               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
  8260  00398A  3208               	rrcf	??_PWM8_LoadDutyValue^0,f,c
  8261  00398C  90D8               	bcf	status,0,c
  8262  00398E  3209               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
  8263  003990  3208               	rrcf	??_PWM8_LoadDutyValue^0,f,c
  8264  003992  5008               	movf	??_PWM8_LoadDutyValue^0,w,c
  8265  003994  6E61               	movwf	97,c	;volatile
  8266                           
  8267                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
  8268  003996  0060  F018  F008   	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  8269  00399C  0E03               	movlw	3
  8270  00399E  1608               	andwf	??_PWM8_LoadDutyValue^0,f,c
  8271  0039A0  0E06               	movlw	6
  8272  0039A2  6E09               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
  8273  0039A4                     u5165:
  8274  0039A4  90D8               	bcf	status,0,c
  8275  0039A6  3608               	rlcf	??_PWM8_LoadDutyValue^0,f,c
  8276  0039A8  2E09               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
  8277  0039AA  D7FC               	goto	u5165
  8278  0039AC  5008               	movf	??_PWM8_LoadDutyValue^0,w,c
  8279  0039AE  6E60               	movwf	96,c	;volatile
  8280  0039B0  0012               	return		;funcret
  8281  0039B2                     __end_of_PWM8_LoadDutyValue:
  8282                           	opt callstack 0
  8283                           
  8284 ;; *************** function _ADCC_GetConversionResult *****************
  8285 ;; Defined at:
  8286 ;;		line 131 in file "mcc_generated_files/adcc.c"
  8287 ;; Parameters:    Size  Location     Type
  8288 ;;		None
  8289 ;; Auto vars:     Size  Location     Type
  8290 ;;		None
  8291 ;; Return value:  Size  Location     Type
  8292 ;;                  2    5[COMRAM] unsigned short 
  8293 ;; Registers used:
  8294 ;;		wreg, status,2, status,0
  8295 ;; Tracked objects:
  8296 ;;		On entry : 3F/1
  8297 ;;		On exit  : 3F/3E
  8298 ;;		Unchanged: 0/0
  8299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8300 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8302 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8303 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8304 ;;Total ram usage:        4 bytes
  8305 ;; Hardware stack levels used:    1
  8306 ;; Hardware stack levels required when called:    4
  8307 ;; This function calls:
  8308 ;;		Nothing
  8309 ;; This function is called by:
  8310 ;;		_Digital232_RW
  8311 ;; This function uses a non-reentrant model
  8312 ;;
  8313                           
  8314                           	psect	text61
  8315  003DE0                     __ptext61:
  8316                           	opt callstack 0
  8317  003DE0                     _ADCC_GetConversionResult:
  8318                           	opt callstack 25
  8319                           
  8320                           ; BSR set to: 1
  8321                           ;mcc_generated_files/adcc.c: 134:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8322                           
  8323                           ;incstack = 0
  8324  003DE0  013E               	movlb	62	; () banked
  8325  003DE2  51F0               	movf	240,w,b	;volatile
  8326  003DE4  6E09               	movwf	(??_ADCC_GetConversionResult+1)^0,c
  8327  003DE6  6A08               	clrf	??_ADCC_GetConversionResult^0,c
  8328  003DE8  51EF               	movf	239,w,b	;volatile
  8329  003DEA  2408               	addwf	??_ADCC_GetConversionResult^0,w,c
  8330  003DEC  6E06               	movwf	?_ADCC_GetConversionResult^0,c
  8331  003DEE  0E00               	movlw	0
  8332  003DF0  2009               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
  8333  003DF2  6E07               	movwf	(?_ADCC_GetConversionResult+1)^0,c
  8334                           
  8335                           ; BSR set to: 62
  8336  003DF4  0012               	return		;funcret
  8337  003DF6                     __end_of_ADCC_GetConversionResult:
  8338                           	opt callstack 0
  8339                           
  8340 ;; *************** function _Default_ISR *****************
  8341 ;; Defined at:
  8342 ;;		line 80 in file "mcc_generated_files/interrupt_manager.c"
  8343 ;; Parameters:    Size  Location     Type
  8344 ;;		None
  8345 ;; Auto vars:     Size  Location     Type
  8346 ;;		None
  8347 ;; Return value:  Size  Location     Type
  8348 ;;                  1    wreg      void 
  8349 ;; Registers used:
  8350 ;;		None
  8351 ;; Tracked objects:
  8352 ;;		On entry : 0/0
  8353 ;;		On exit  : 0/0
  8354 ;;		Unchanged: 0/0
  8355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8360 ;;Total ram usage:        0 bytes
  8361 ;; Hardware stack levels used:    1
  8362 ;; This function calls:
  8363 ;;		Nothing
  8364 ;; This function is called by:
  8365 ;;		Interrupt level 2
  8366 ;; This function uses a non-reentrant model
  8367 ;;
  8368                           
  8369                           	psect	text62
  8370  003F24                     __ptext62:
  8371                           	opt callstack 0
  8372  003F24                     _Default_ISR:
  8373                           	opt callstack 20
  8374                           
  8375                           ; BSR set to: 62
  8376                           ;incstack = 0
  8377  003F24  0011               	retfie		f
  8378  003F26                     __end_of_Default_ISR:
  8379                           	opt callstack 0
  8380                           
  8381 ;; *************** function _UART1_tx_vect_isr *****************
  8382 ;; Defined at:
  8383 ;;		line 225 in file "mcc_generated_files/uart1.c"
  8384 ;; Parameters:    Size  Location     Type
  8385 ;;		None
  8386 ;; Auto vars:     Size  Location     Type
  8387 ;;		None
  8388 ;; Return value:  Size  Location     Type
  8389 ;;                  1    wreg      void 
  8390 ;; Registers used:
  8391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8392 ;; Tracked objects:
  8393 ;;		On entry : 0/0
  8394 ;;		On exit  : 0/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8401 ;;Total ram usage:        0 bytes
  8402 ;; Hardware stack levels used:    1
  8403 ;; Hardware stack levels required when called:    1
  8404 ;; This function calls:
  8405 ;;		Absolute function
  8406 ;;		_UART1_Transmit_ISR
  8407 ;; This function is called by:
  8408 ;;		Interrupt level 2
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412                           	psect	text63
  8413  003BC4                     __ptext63:
  8414                           	opt callstack 0
  8415  003BC4                     _UART1_tx_vect_isr:
  8416                           	opt callstack 19
  8417                           
  8418                           ;mcc_generated_files/uart1.c: 227:     if(UART1_TxInterruptHandler)
  8419                           
  8420                           ;incstack = 0
  8421  003BC4  0100               	movlb	0	; () banked
  8422  003BC6  51D2               	movf	_UART1_TxInterruptHandler& (0+255),w,b
  8423  003BC8  11D3               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
  8424  003BCA  11D4               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
  8425  003BCC  B4D8               	btfsc	status,2,c
  8426  003BCE  0011               	retfie		f
  8427                           
  8428                           ; BSR set to: 0
  8429                           ;mcc_generated_files/uart1.c: 228:     {;mcc_generated_files/uart1.c: 229:         UART1
      +                          _TxInterruptHandler();
  8430  003BD0  D801               	call	i2u288_48
  8431  003BD2  0011               	retfie		f
  8432  003BD4                     i2u288_48:
  8433  003BD4  0005               	push	
  8434  003BD6  6EFA               	movwf	pclath,c
  8435  003BD8  51D2               	movf	_UART1_TxInterruptHandler& (0+255),w,b
  8436  003BDA  6EFD               	movwf	tosl,c
  8437  003BDC  51D3               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
  8438  003BDE  6EFE               	movwf	tosh,c
  8439  003BE0  51D4               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
  8440  003BE2  6EFF               	movwf	tosu,c
  8441  003BE4  50FA               	movf	pclath,w,c
  8442  003BE6  0012               	return		;indir
  8443  003BE8                     __end_of_UART1_tx_vect_isr:
  8444                           	opt callstack 0
  8445                           
  8446 ;; *************** function _UART1_Transmit_ISR *****************
  8447 ;; Defined at:
  8448 ;;		line 243 in file "mcc_generated_files/uart1.c"
  8449 ;; Parameters:    Size  Location     Type
  8450 ;;		None
  8451 ;; Auto vars:     Size  Location     Type
  8452 ;;		None
  8453 ;; Return value:  Size  Location     Type
  8454 ;;                  1    wreg      void 
  8455 ;; Registers used:
  8456 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8457 ;; Tracked objects:
  8458 ;;		On entry : 3F/0
  8459 ;;		On exit  : 6/0
  8460 ;;		Unchanged: 0/0
  8461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8466 ;;Total ram usage:        0 bytes
  8467 ;; Hardware stack levels used:    1
  8468 ;; This function calls:
  8469 ;;		Nothing
  8470 ;; This function is called by:
  8471 ;;		_UART1_Initialize
  8472 ;;		_UART1_tx_vect_isr
  8473 ;; This function uses a non-reentrant model
  8474 ;;
  8475                           
  8476                           	psect	text64
  8477  003A4E                     __ptext64:
  8478                           	opt callstack 0
  8479  003A4E                     _UART1_Transmit_ISR:
  8480                           	opt callstack 19
  8481                           
  8482                           ; BSR set to: 0
  8483                           ;mcc_generated_files/uart1.c: 246:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
  8484                           
  8485                           ;incstack = 0
  8486  003A4E  0E08               	movlw	8
  8487  003A50  61F5               	cpfslt	_uart1TxBufferRemaining& (0+255),b
  8488  003A52  D012               	goto	i2l342
  8489                           
  8490                           ; BSR set to: 0
  8491                           ;mcc_generated_files/uart1.c: 247:     {;mcc_generated_files/uart1.c: 248:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
  8492  003A54  0E34               	movlw	low _uart1TxBuffer
  8493  003A56  25F6               	addwf	_uart1TxTail& (0+255),w,b	;volatile
  8494  003A58  6ED9               	movwf	fsr2l,c
  8495  003A5A  6ADA               	clrf	fsr2h,c
  8496  003A5C  0E01               	movlw	high _uart1TxBuffer
  8497  003A5E  22DA               	addwfc	fsr2h,f,c
  8498  003A60  50DF               	movf	indf2,w,c
  8499  003A62  013D               	movlb	61	; () banked
  8500  003A64  6FEA               	movwf	234,b	;volatile
  8501                           
  8502                           ; BSR set to: 61
  8503  003A66  0100               	movlb	0	; () banked
  8504  003A68  2BF6               	incf	_uart1TxTail& (0+255),f,b	;volatile
  8505                           
  8506                           ; BSR set to: 0
  8507                           ;mcc_generated_files/uart1.c: 249:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
  8508  003A6A  0E07               	movlw	7
  8509  003A6C  65F6               	cpfsgt	_uart1TxTail& (0+255),b
  8510  003A6E  D002               	goto	i2l3980
  8511                           
  8512                           ; BSR set to: 0
  8513                           ;mcc_generated_files/uart1.c: 250:         {;mcc_generated_files/uart1.c: 251:          
      +                             uart1TxTail = 0;
  8514  003A70  0E00               	movlw	0
  8515  003A72  6FF6               	movwf	_uart1TxTail& (0+255),b	;volatile
  8516  003A74                     i2l3980:
  8517                           
  8518                           ; BSR set to: 0
  8519                           ;mcc_generated_files/uart1.c: 253:         uart1TxBufferRemaining++;
  8520  003A74  2BF5               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
  8521                           
  8522                           ;mcc_generated_files/uart1.c: 254:     }
  8523  003A76  0012               	return	
  8524  003A78                     i2l342:
  8525                           
  8526                           ; BSR set to: 0
  8527                           ;mcc_generated_files/uart1.c: 256:     {;mcc_generated_files/uart1.c: 257:         PIE3b
      +                          its.U1TXIE = 0;
  8528  003A78  0139               	movlb	57	; () banked
  8529  003A7A  9993               	bcf	147,4,b	;volatile
  8530  003A7C  0012               	return		;funcret
  8531  003A7E                     __end_of_UART1_Transmit_ISR:
  8532                           	opt callstack 0
  8533                           
  8534 ;; *************** function _UART1_rx_vect_isr *****************
  8535 ;; Defined at:
  8536 ;;		line 233 in file "mcc_generated_files/uart1.c"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;		None
  8539 ;; Auto vars:     Size  Location     Type
  8540 ;;		None
  8541 ;; Return value:  Size  Location     Type
  8542 ;;                  1    wreg      void 
  8543 ;; Registers used:
  8544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8545 ;; Tracked objects:
  8546 ;;		On entry : 0/0
  8547 ;;		On exit  : 0/0
  8548 ;;		Unchanged: 0/0
  8549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8554 ;;Total ram usage:        0 bytes
  8555 ;; Hardware stack levels used:    1
  8556 ;; Hardware stack levels required when called:    3
  8557 ;; This function calls:
  8558 ;;		Absolute function
  8559 ;;		_UART1_Receive_ISR
  8560 ;; This function is called by:
  8561 ;;		Interrupt level 2
  8562 ;; This function uses a non-reentrant model
  8563 ;;
  8564                           
  8565                           	psect	text65
  8566  003BE8                     __ptext65:
  8567                           	opt callstack 0
  8568  003BE8                     _UART1_rx_vect_isr:
  8569                           	opt callstack 17
  8570                           
  8571                           ;mcc_generated_files/uart1.c: 235:     if(UART1_RxInterruptHandler)
  8572                           
  8573                           ;incstack = 0
  8574  003BE8  0100               	movlb	0	; () banked
  8575  003BEA  51D5               	movf	_UART1_RxInterruptHandler& (0+255),w,b
  8576  003BEC  11D6               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
  8577  003BEE  11D7               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
  8578  003BF0  B4D8               	btfsc	status,2,c
  8579  003BF2  0011               	retfie		f
  8580                           
  8581                           ; BSR set to: 0
  8582                           ;mcc_generated_files/uart1.c: 236:     {;mcc_generated_files/uart1.c: 237:         UART1
      +                          _RxInterruptHandler();
  8583  003BF4  D801               	call	i2u290_48
  8584  003BF6  0011               	retfie		f
  8585  003BF8                     i2u290_48:
  8586  003BF8  0005               	push	
  8587  003BFA  6EFA               	movwf	pclath,c
  8588  003BFC  51D5               	movf	_UART1_RxInterruptHandler& (0+255),w,b
  8589  003BFE  6EFD               	movwf	tosl,c
  8590  003C00  51D6               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
  8591  003C02  6EFE               	movwf	tosh,c
  8592  003C04  51D7               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
  8593  003C06  6EFF               	movwf	tosu,c
  8594  003C08  50FA               	movf	pclath,w,c
  8595  003C0A  0012               	return		;indir
  8596  003C0C                     __end_of_UART1_rx_vect_isr:
  8597                           	opt callstack 0
  8598                           
  8599 ;; *************** function _UART1_Receive_ISR *****************
  8600 ;; Defined at:
  8601 ;;		line 263 in file "mcc_generated_files/uart1.c"
  8602 ;; Parameters:    Size  Location     Type
  8603 ;;		None
  8604 ;; Auto vars:     Size  Location     Type
  8605 ;;		None
  8606 ;; Return value:  Size  Location     Type
  8607 ;;                  1    wreg      void 
  8608 ;; Registers used:
  8609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8610 ;; Tracked objects:
  8611 ;;		On entry : 3F/0
  8612 ;;		On exit  : 0/0
  8613 ;;		Unchanged: 0/0
  8614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8619 ;;Total ram usage:        0 bytes
  8620 ;; Hardware stack levels used:    1
  8621 ;; Hardware stack levels required when called:    2
  8622 ;; This function calls:
  8623 ;;		Absolute function
  8624 ;;		_UART1_DefaultErrorHandler
  8625 ;;		_UART1_DefaultFramingErrorHandler
  8626 ;;		_UART1_DefaultOverrunErrorHandler
  8627 ;;		_UART1_RxDataHandler
  8628 ;; This function is called by:
  8629 ;;		_UART1_Initialize
  8630 ;;		_UART1_rx_vect_isr
  8631 ;; This function uses a non-reentrant model
  8632 ;;
  8633                           
  8634                           	psect	text66
  8635  00326A                     __ptext66:
  8636                           	opt callstack 0
  8637  00326A                     _UART1_Receive_ISR:
  8638                           	opt callstack 17
  8639                           
  8640                           ; BSR set to: 0
  8641                           ;mcc_generated_files/uart1.c: 266:     uart1RxStatusBuffer[uart1RxHead].status = 0;
  8642                           
  8643                           ;incstack = 0
  8644  00326A  0E24               	movlw	low _uart1RxStatusBuffer
  8645  00326C  245A               	addwf	_uart1RxHead^0,w,c	;volatile
  8646  00326E  6ED9               	movwf	fsr2l,c
  8647  003270  6ADA               	clrf	fsr2h,c
  8648  003272  0E01               	movlw	high _uart1RxStatusBuffer
  8649  003274  22DA               	addwfc	fsr2h,f,c
  8650  003276  0E00               	movlw	0
  8651  003278  6EDF               	movwf	indf2,c
  8652                           
  8653                           ; BSR set to: 0
  8654                           ;mcc_generated_files/uart1.c: 268:     if(U1ERRIRbits.FERIF){
  8655  00327A  013D               	movlb	61	; () banked
  8656  00327C  A7F9               	btfss	249,3,b	;volatile
  8657  00327E  D015               	goto	i2u242_49
  8658                           
  8659                           ; BSR set to: 61
  8660                           ;mcc_generated_files/uart1.c: 269:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
  8661  003280  0E24               	movlw	low _uart1RxStatusBuffer
  8662  003282  245A               	addwf	_uart1RxHead^0,w,c	;volatile
  8663  003284  6ED9               	movwf	fsr2l,c
  8664  003286  6ADA               	clrf	fsr2h,c
  8665  003288  0E01               	movlw	high _uart1RxStatusBuffer
  8666  00328A  22DA               	addwfc	fsr2h,f,c
  8667  00328C  0101               	movlb	1	; () banked
  8668  00328E  82DF               	bsf	indf2,1,c
  8669                           
  8670                           ; BSR set to: 1
  8671                           ;mcc_generated_files/uart1.c: 270:         UART1_FramingErrorHandler();
  8672  003290  D801               	call	i2u242_48
  8673  003292  D00B               	goto	i2u242_49
  8674  003294                     i2u242_48:
  8675  003294  0005               	push	
  8676  003296  6EFA               	movwf	pclath,c
  8677  003298  0100               	movlb	0	; () banked
  8678  00329A  51CF               	movf	_UART1_FramingErrorHandler& (0+255),w,b
  8679  00329C  6EFD               	movwf	tosl,c
  8680  00329E  51D0               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
  8681  0032A0  6EFE               	movwf	tosh,c
  8682  0032A2  51D1               	movf	(_UART1_FramingErrorHandler+2)& (0+255),w,b
  8683  0032A4  6EFF               	movwf	tosu,c
  8684  0032A6  50FA               	movf	pclath,w,c
  8685  0032A8  0012               	return		;indir
  8686  0032AA                     i2u242_49:
  8687                           
  8688                           ;mcc_generated_files/uart1.c: 273:     if(U1ERRIRbits.RXFOIF){
  8689  0032AA  013D               	movlb	61	; () banked
  8690  0032AC  A3F9               	btfss	249,1,b	;volatile
  8691  0032AE  D015               	goto	i2u244_49
  8692                           
  8693                           ; BSR set to: 61
  8694                           ;mcc_generated_files/uart1.c: 274:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
  8695  0032B0  0E24               	movlw	low _uart1RxStatusBuffer
  8696  0032B2  245A               	addwf	_uart1RxHead^0,w,c	;volatile
  8697  0032B4  6ED9               	movwf	fsr2l,c
  8698  0032B6  6ADA               	clrf	fsr2h,c
  8699  0032B8  0E01               	movlw	high _uart1RxStatusBuffer
  8700  0032BA  22DA               	addwfc	fsr2h,f,c
  8701  0032BC  0101               	movlb	1	; () banked
  8702  0032BE  84DF               	bsf	indf2,2,c
  8703                           
  8704                           ; BSR set to: 1
  8705                           ;mcc_generated_files/uart1.c: 275:         UART1_OverrunErrorHandler();
  8706  0032C0  D801               	call	i2u244_48
  8707  0032C2  D00B               	goto	i2u244_49
  8708  0032C4                     i2u244_48:
  8709  0032C4  0005               	push	
  8710  0032C6  6EFA               	movwf	pclath,c
  8711  0032C8  0100               	movlb	0	; () banked
  8712  0032CA  51CC               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
  8713  0032CC  6EFD               	movwf	tosl,c
  8714  0032CE  51CD               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
  8715  0032D0  6EFE               	movwf	tosh,c
  8716  0032D2  51CE               	movf	(_UART1_OverrunErrorHandler+2)& (0+255),w,b
  8717  0032D4  6EFF               	movwf	tosu,c
  8718  0032D6  50FA               	movf	pclath,w,c
  8719  0032D8  0012               	return		;indir
  8720  0032DA                     i2u244_49:
  8721                           
  8722                           ;mcc_generated_files/uart1.c: 278:     if(uart1RxStatusBuffer[uart1RxHead].status){
  8723  0032DA  0E24               	movlw	low _uart1RxStatusBuffer
  8724  0032DC  245A               	addwf	_uart1RxHead^0,w,c	;volatile
  8725  0032DE  6ED9               	movwf	fsr2l,c
  8726  0032E0  6ADA               	clrf	fsr2h,c
  8727  0032E2  0E01               	movlw	high _uart1RxStatusBuffer
  8728  0032E4  22DA               	addwfc	fsr2h,f,c
  8729  0032E6  50DF               	movf	indf2,w,c
  8730  0032E8  B4D8               	btfsc	status,2,c
  8731  0032EA  D00D               	goto	i2l4000
  8732                           
  8733                           ;mcc_generated_files/uart1.c: 279:         UART1_ErrorHandler();
  8734  0032EC  D801               	call	i2u246_48
  8735  0032EE  0012               	return	
  8736  0032F0                     i2u246_48:
  8737  0032F0  0005               	push	
  8738  0032F2  6EFA               	movwf	pclath,c
  8739  0032F4  0100               	movlb	0	; () banked
  8740  0032F6  51C9               	movf	_UART1_ErrorHandler& (0+255),w,b
  8741  0032F8  6EFD               	movwf	tosl,c
  8742  0032FA  51CA               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
  8743  0032FC  6EFE               	movwf	tosh,c
  8744  0032FE  51CB               	movf	(_UART1_ErrorHandler+2)& (0+255),w,b
  8745  003300  6EFF               	movwf	tosu,c
  8746  003302  50FA               	movf	pclath,w,c
  8747  003304  0012               	return		;indir
  8748  003306                     i2l4000:
  8749                           
  8750                           ;mcc_generated_files/uart1.c: 281:         UART1_RxDataHandler();
  8751  003306  EC06  F01E         	call	_UART1_RxDataHandler	;wreg free
  8752  00330A  0012               	return		;funcret
  8753  00330C                     __end_of_UART1_Receive_ISR:
  8754                           	opt callstack 0
  8755                           
  8756 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
  8757 ;; Defined at:
  8758 ;;		line 299 in file "mcc_generated_files/uart1.c"
  8759 ;; Parameters:    Size  Location     Type
  8760 ;;		None
  8761 ;; Auto vars:     Size  Location     Type
  8762 ;;		None
  8763 ;; Return value:  Size  Location     Type
  8764 ;;                  1    wreg      void 
  8765 ;; Registers used:
  8766 ;;		None
  8767 ;; Tracked objects:
  8768 ;;		On entry : 3F/0
  8769 ;;		On exit  : 3F/0
  8770 ;;		Unchanged: 3F/0
  8771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8776 ;;Total ram usage:        0 bytes
  8777 ;; Hardware stack levels used:    1
  8778 ;; This function calls:
  8779 ;;		Nothing
  8780 ;; This function is called by:
  8781 ;;		_UART1_Initialize
  8782 ;;		_UART1_Receive_ISR
  8783 ;; This function uses a non-reentrant model
  8784 ;;
  8785                           
  8786                           	psect	text67
  8787  003F26                     __ptext67:
  8788                           	opt callstack 0
  8789  003F26                     _UART1_DefaultOverrunErrorHandler:
  8790                           	opt callstack 18
  8791                           
  8792                           ; BSR set to: 0
  8793                           
  8794                           ;incstack = 0
  8795  003F26  0012               	return		;funcret
  8796  003F28                     __end_of_UART1_DefaultOverrunErrorHandler:
  8797                           	opt callstack 0
  8798                           
  8799 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
  8800 ;; Defined at:
  8801 ;;		line 297 in file "mcc_generated_files/uart1.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;		None
  8804 ;; Auto vars:     Size  Location     Type
  8805 ;;		None
  8806 ;; Return value:  Size  Location     Type
  8807 ;;                  1    wreg      void 
  8808 ;; Registers used:
  8809 ;;		None
  8810 ;; Tracked objects:
  8811 ;;		On entry : 3F/0
  8812 ;;		On exit  : 3F/0
  8813 ;;		Unchanged: 3F/0
  8814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8819 ;;Total ram usage:        0 bytes
  8820 ;; Hardware stack levels used:    1
  8821 ;; This function calls:
  8822 ;;		Nothing
  8823 ;; This function is called by:
  8824 ;;		_UART1_Initialize
  8825 ;;		_UART1_Receive_ISR
  8826 ;; This function uses a non-reentrant model
  8827 ;;
  8828                           
  8829                           	psect	text68
  8830  003F28                     __ptext68:
  8831                           	opt callstack 0
  8832  003F28                     _UART1_DefaultFramingErrorHandler:
  8833                           	opt callstack 18
  8834                           
  8835                           ; BSR set to: 0
  8836                           
  8837                           ; BSR set to: 0
  8838                           ;incstack = 0
  8839  003F28  0012               	return		;funcret
  8840  003F2A                     __end_of_UART1_DefaultFramingErrorHandler:
  8841                           	opt callstack 0
  8842                           
  8843 ;; *************** function _UART1_DefaultErrorHandler *****************
  8844 ;; Defined at:
  8845 ;;		line 301 in file "mcc_generated_files/uart1.c"
  8846 ;; Parameters:    Size  Location     Type
  8847 ;;		None
  8848 ;; Auto vars:     Size  Location     Type
  8849 ;;		None
  8850 ;; Return value:  Size  Location     Type
  8851 ;;                  1    wreg      void 
  8852 ;; Registers used:
  8853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8854 ;; Tracked objects:
  8855 ;;		On entry : 3F/0
  8856 ;;		On exit  : 3F/0
  8857 ;;		Unchanged: 0/0
  8858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8863 ;;Total ram usage:        0 bytes
  8864 ;; Hardware stack levels used:    1
  8865 ;; Hardware stack levels required when called:    1
  8866 ;; This function calls:
  8867 ;;		_UART1_RxDataHandler
  8868 ;; This function is called by:
  8869 ;;		_UART1_Initialize
  8870 ;;		_UART1_Receive_ISR
  8871 ;; This function uses a non-reentrant model
  8872 ;;
  8873                           
  8874                           	psect	text69
  8875  003F16                     __ptext69:
  8876                           	opt callstack 0
  8877  003F16                     _UART1_DefaultErrorHandler:
  8878                           	opt callstack 17
  8879                           
  8880                           ; BSR set to: 0
  8881                           ;mcc_generated_files/uart1.c: 302:     UART1_RxDataHandler();
  8882                           
  8883                           ; BSR set to: 0
  8884                           ;incstack = 0
  8885  003F16  EC06  F01E         	call	_UART1_RxDataHandler	;wreg free
  8886                           
  8887                           ; BSR set to: 0
  8888  003F1A  0012               	return		;funcret
  8889  003F1C                     __end_of_UART1_DefaultErrorHandler:
  8890                           	opt callstack 0
  8891                           
  8892 ;; *************** function _UART1_RxDataHandler *****************
  8893 ;; Defined at:
  8894 ;;		line 287 in file "mcc_generated_files/uart1.c"
  8895 ;; Parameters:    Size  Location     Type
  8896 ;;		None
  8897 ;; Auto vars:     Size  Location     Type
  8898 ;;		None
  8899 ;; Return value:  Size  Location     Type
  8900 ;;                  1    wreg      void 
  8901 ;; Registers used:
  8902 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8903 ;; Tracked objects:
  8904 ;;		On entry : 0/3D
  8905 ;;		On exit  : 3F/0
  8906 ;;		Unchanged: 0/0
  8907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8912 ;;Total ram usage:        0 bytes
  8913 ;; Hardware stack levels used:    1
  8914 ;; This function calls:
  8915 ;;		Nothing
  8916 ;; This function is called by:
  8917 ;;		_UART1_Receive_ISR
  8918 ;;		_UART1_DefaultErrorHandler
  8919 ;; This function uses a non-reentrant model
  8920 ;;
  8921                           
  8922                           	psect	text70
  8923  003C0C                     __ptext70:
  8924                           	opt callstack 0
  8925  003C0C                     _UART1_RxDataHandler:
  8926                           	opt callstack 18
  8927                           
  8928                           ;mcc_generated_files/uart1.c: 289:     uart1RxBuffer[uart1RxHead++] = U1RXB;
  8929                           
  8930                           ; BSR set to: 0
  8931                           ;incstack = 0
  8932  003C0C  0E2C               	movlw	low _uart1RxBuffer
  8933  003C0E  245A               	addwf	_uart1RxHead^0,w,c	;volatile
  8934  003C10  6ED9               	movwf	fsr2l,c
  8935  003C12  6ADA               	clrf	fsr2h,c
  8936  003C14  0E01               	movlw	high _uart1RxBuffer
  8937  003C16  22DA               	addwfc	fsr2h,f,c
  8938  003C18  006F F7A3 FFDF     	movff	15848,indf2	;volatile
  8939  003C1E  2A5A               	incf	_uart1RxHead^0,f,c	;volatile
  8940                           
  8941                           ;mcc_generated_files/uart1.c: 290:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
  8942  003C20  0E07               	movlw	7
  8943  003C22  645A               	cpfsgt	_uart1RxHead^0,c
  8944  003C24  D002               	goto	i2l3600
  8945                           
  8946                           ;mcc_generated_files/uart1.c: 291:     {;mcc_generated_files/uart1.c: 292:         uart1
      +                          RxHead = 0;
  8947  003C26  0E00               	movlw	0
  8948  003C28  6E5A               	movwf	_uart1RxHead^0,c	;volatile
  8949  003C2A                     i2l3600:
  8950                           
  8951                           ;mcc_generated_files/uart1.c: 294:     uart1RxCount++;
  8952  003C2A  0100               	movlb	0	; () banked
  8953  003C2C  2BF3               	incf	_uart1RxCount& (0+255),f,b	;volatile
  8954                           
  8955                           ; BSR set to: 0
  8956  003C2E  0012               	return		;funcret
  8957  003C30                     __end_of_UART1_RxDataHandler:
  8958                           	opt callstack 0
  8959                           
  8960 ;; *************** function _UART2_tx_vect_isr *****************
  8961 ;; Defined at:
  8962 ;;		line 226 in file "mcc_generated_files/uart2.c"
  8963 ;; Parameters:    Size  Location     Type
  8964 ;;		None
  8965 ;; Auto vars:     Size  Location     Type
  8966 ;;		None
  8967 ;; Return value:  Size  Location     Type
  8968 ;;                  1    wreg      void 
  8969 ;; Registers used:
  8970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8971 ;; Tracked objects:
  8972 ;;		On entry : 0/0
  8973 ;;		On exit  : 0/0
  8974 ;;		Unchanged: 0/0
  8975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8980 ;;Total ram usage:        0 bytes
  8981 ;; Hardware stack levels used:    1
  8982 ;; Hardware stack levels required when called:    1
  8983 ;; This function calls:
  8984 ;;		Absolute function
  8985 ;;		_UART2_Transmit_ISR
  8986 ;; This function is called by:
  8987 ;;		Interrupt level 2
  8988 ;; This function uses a non-reentrant model
  8989 ;;
  8990                           
  8991                           	psect	text71
  8992  003C30                     __ptext71:
  8993                           	opt callstack 0
  8994  003C30                     _UART2_tx_vect_isr:
  8995                           	opt callstack 19
  8996                           
  8997                           ;mcc_generated_files/uart2.c: 228:     if(UART2_TxInterruptHandler)
  8998                           
  8999                           ; BSR set to: 0
  9000                           ;incstack = 0
  9001  003C30  0100               	movlb	0	; () banked
  9002  003C32  51D8               	movf	_UART2_TxInterruptHandler& (0+255),w,b
  9003  003C34  11D9               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
  9004  003C36  11DA               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
  9005  003C38  B4D8               	btfsc	status,2,c
  9006  003C3A  0011               	retfie		f
  9007                           
  9008                           ; BSR set to: 0
  9009                           ;mcc_generated_files/uart2.c: 229:     {;mcc_generated_files/uart2.c: 230:         UART2
      +                          _TxInterruptHandler();
  9010  003C3C  D801               	call	i2u292_48
  9011  003C3E  0011               	retfie		f
  9012  003C40                     i2u292_48:
  9013  003C40  0005               	push	
  9014  003C42  6EFA               	movwf	pclath,c
  9015  003C44  51D8               	movf	_UART2_TxInterruptHandler& (0+255),w,b
  9016  003C46  6EFD               	movwf	tosl,c
  9017  003C48  51D9               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
  9018  003C4A  6EFE               	movwf	tosh,c
  9019  003C4C  51DA               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
  9020  003C4E  6EFF               	movwf	tosu,c
  9021  003C50  50FA               	movf	pclath,w,c
  9022  003C52  0012               	return		;indir
  9023  003C54                     __end_of_UART2_tx_vect_isr:
  9024                           	opt callstack 0
  9025                           
  9026 ;; *************** function _UART2_Transmit_ISR *****************
  9027 ;; Defined at:
  9028 ;;		line 244 in file "mcc_generated_files/uart2.c"
  9029 ;; Parameters:    Size  Location     Type
  9030 ;;		None
  9031 ;; Auto vars:     Size  Location     Type
  9032 ;;		None
  9033 ;; Return value:  Size  Location     Type
  9034 ;;                  1    wreg      void 
  9035 ;; Registers used:
  9036 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9037 ;; Tracked objects:
  9038 ;;		On entry : 3F/0
  9039 ;;		On exit  : 6/0
  9040 ;;		Unchanged: 0/0
  9041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9046 ;;Total ram usage:        0 bytes
  9047 ;; Hardware stack levels used:    1
  9048 ;; This function calls:
  9049 ;;		Nothing
  9050 ;; This function is called by:
  9051 ;;		_UART2_Initialize
  9052 ;;		_UART2_tx_vect_isr
  9053 ;; This function uses a non-reentrant model
  9054 ;;
  9055                           
  9056                           	psect	text72
  9057  003A7E                     __ptext72:
  9058                           	opt callstack 0
  9059  003A7E                     _UART2_Transmit_ISR:
  9060                           	opt callstack 19
  9061                           
  9062                           ; BSR set to: 0
  9063                           ;mcc_generated_files/uart2.c: 247:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
  9064                           
  9065                           ;incstack = 0
  9066  003A7E  0E08               	movlw	8
  9067  003A80  61EF               	cpfslt	_uart2TxBufferRemaining& (0+255),b
  9068  003A82  D012               	goto	i2l516
  9069                           
  9070                           ; BSR set to: 0
  9071                           ;mcc_generated_files/uart2.c: 248:     {;mcc_generated_files/uart2.c: 249:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
  9072  003A84  0E1C               	movlw	low _uart2TxBuffer
  9073  003A86  25F0               	addwf	_uart2TxTail& (0+255),w,b	;volatile
  9074  003A88  6ED9               	movwf	fsr2l,c
  9075  003A8A  6ADA               	clrf	fsr2h,c
  9076  003A8C  0E01               	movlw	high _uart2TxBuffer
  9077  003A8E  22DA               	addwfc	fsr2h,f,c
  9078  003A90  50DF               	movf	indf2,w,c
  9079  003A92  013D               	movlb	61	; () banked
  9080  003A94  6FD2               	movwf	210,b	;volatile
  9081                           
  9082                           ; BSR set to: 61
  9083  003A96  0100               	movlb	0	; () banked
  9084  003A98  2BF0               	incf	_uart2TxTail& (0+255),f,b	;volatile
  9085                           
  9086                           ; BSR set to: 0
  9087                           ;mcc_generated_files/uart2.c: 250:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
  9088  003A9A  0E07               	movlw	7
  9089  003A9C  65F0               	cpfsgt	_uart2TxTail& (0+255),b
  9090  003A9E  D002               	goto	i2l4012
  9091                           
  9092                           ; BSR set to: 0
  9093                           ;mcc_generated_files/uart2.c: 251:         {;mcc_generated_files/uart2.c: 252:          
      +                             uart2TxTail = 0;
  9094  003AA0  0E00               	movlw	0
  9095  003AA2  6FF0               	movwf	_uart2TxTail& (0+255),b	;volatile
  9096  003AA4                     i2l4012:
  9097                           
  9098                           ; BSR set to: 0
  9099                           ;mcc_generated_files/uart2.c: 254:         uart2TxBufferRemaining++;
  9100  003AA4  2BEF               	incf	_uart2TxBufferRemaining& (0+255),f,b	;volatile
  9101                           
  9102                           ;mcc_generated_files/uart2.c: 255:     }
  9103  003AA6  0012               	return	
  9104  003AA8                     i2l516:
  9105                           
  9106                           ; BSR set to: 0
  9107                           ;mcc_generated_files/uart2.c: 257:     {;mcc_generated_files/uart2.c: 258:         PIE6b
      +                          its.U2TXIE = 0;
  9108  003AA8  0139               	movlb	57	; () banked
  9109  003AAA  9796               	bcf	150,3,b	;volatile
  9110  003AAC  0012               	return		;funcret
  9111  003AAE                     __end_of_UART2_Transmit_ISR:
  9112                           	opt callstack 0
  9113                           
  9114 ;; *************** function _UART2_rx_vect_isr *****************
  9115 ;; Defined at:
  9116 ;;		line 234 in file "mcc_generated_files/uart2.c"
  9117 ;; Parameters:    Size  Location     Type
  9118 ;;		None
  9119 ;; Auto vars:     Size  Location     Type
  9120 ;;		None
  9121 ;; Return value:  Size  Location     Type
  9122 ;;                  1    wreg      void 
  9123 ;; Registers used:
  9124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  9125 ;; Tracked objects:
  9126 ;;		On entry : 0/0
  9127 ;;		On exit  : 0/0
  9128 ;;		Unchanged: 0/0
  9129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9134 ;;Total ram usage:        0 bytes
  9135 ;; Hardware stack levels used:    1
  9136 ;; Hardware stack levels required when called:    3
  9137 ;; This function calls:
  9138 ;;		Absolute function
  9139 ;;		_UART2_Receive_ISR
  9140 ;; This function is called by:
  9141 ;;		Interrupt level 2
  9142 ;; This function uses a non-reentrant model
  9143 ;;
  9144                           
  9145                           	psect	text73
  9146  003C54                     __ptext73:
  9147                           	opt callstack 0
  9148  003C54                     _UART2_rx_vect_isr:
  9149                           	opt callstack 17
  9150                           
  9151                           ;mcc_generated_files/uart2.c: 236:     if(UART2_RxInterruptHandler)
  9152                           
  9153                           ;incstack = 0
  9154  003C54  0100               	movlb	0	; () banked
  9155  003C56  51DB               	movf	_UART2_RxInterruptHandler& (0+255),w,b
  9156  003C58  11DC               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
  9157  003C5A  11DD               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
  9158  003C5C  B4D8               	btfsc	status,2,c
  9159  003C5E  0011               	retfie		f
  9160                           
  9161                           ; BSR set to: 0
  9162                           ;mcc_generated_files/uart2.c: 237:     {;mcc_generated_files/uart2.c: 238:         UART2
      +                          _RxInterruptHandler();
  9163  003C60  D801               	call	i2u428_48
  9164  003C62  0011               	retfie		f
  9165  003C64                     i2u428_48:
  9166  003C64  0005               	push	
  9167  003C66  6EFA               	movwf	pclath,c
  9168  003C68  51DB               	movf	_UART2_RxInterruptHandler& (0+255),w,b
  9169  003C6A  6EFD               	movwf	tosl,c
  9170  003C6C  51DC               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
  9171  003C6E  6EFE               	movwf	tosh,c
  9172  003C70  51DD               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
  9173  003C72  6EFF               	movwf	tosu,c
  9174  003C74  50FA               	movf	pclath,w,c
  9175  003C76  0012               	return		;indir
  9176  003C78                     __end_of_UART2_rx_vect_isr:
  9177                           	opt callstack 0
  9178                           
  9179 ;; *************** function _UART2_Receive_ISR *****************
  9180 ;; Defined at:
  9181 ;;		line 264 in file "mcc_generated_files/uart2.c"
  9182 ;; Parameters:    Size  Location     Type
  9183 ;;		None
  9184 ;; Auto vars:     Size  Location     Type
  9185 ;;		None
  9186 ;; Return value:  Size  Location     Type
  9187 ;;                  1    wreg      void 
  9188 ;; Registers used:
  9189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  9190 ;; Tracked objects:
  9191 ;;		On entry : 3F/0
  9192 ;;		On exit  : 0/0
  9193 ;;		Unchanged: 0/0
  9194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9199 ;;Total ram usage:        0 bytes
  9200 ;; Hardware stack levels used:    1
  9201 ;; Hardware stack levels required when called:    2
  9202 ;; This function calls:
  9203 ;;		Absolute function
  9204 ;;		_UART2_DefaultErrorHandler
  9205 ;;		_UART2_DefaultFramingErrorHandler
  9206 ;;		_UART2_DefaultOverrunErrorHandler
  9207 ;;		_UART2_RxDataHandler
  9208 ;; This function is called by:
  9209 ;;		_UART2_Initialize
  9210 ;;		_UART2_rx_vect_isr
  9211 ;; This function uses a non-reentrant model
  9212 ;;
  9213                           
  9214                           	psect	text74
  9215  00330C                     __ptext74:
  9216                           	opt callstack 0
  9217  00330C                     _UART2_Receive_ISR:
  9218                           	opt callstack 17
  9219                           
  9220                           ; BSR set to: 0
  9221                           ;mcc_generated_files/uart2.c: 267:     uart2RxStatusBuffer[uart2RxHead].status = 0;
  9222                           
  9223                           ;incstack = 0
  9224  00330C  0E0C               	movlw	low _uart2RxStatusBuffer
  9225  00330E  2459               	addwf	_uart2RxHead^0,w,c	;volatile
  9226  003310  6ED9               	movwf	fsr2l,c
  9227  003312  6ADA               	clrf	fsr2h,c
  9228  003314  0E01               	movlw	high _uart2RxStatusBuffer
  9229  003316  22DA               	addwfc	fsr2h,f,c
  9230  003318  0E00               	movlw	0
  9231  00331A  6EDF               	movwf	indf2,c
  9232                           
  9233                           ; BSR set to: 0
  9234                           ;mcc_generated_files/uart2.c: 269:     if(U2ERRIRbits.FERIF){
  9235  00331C  013D               	movlb	61	; () banked
  9236  00331E  A7E1               	btfss	225,3,b	;volatile
  9237  003320  D015               	goto	i2u395_49
  9238                           
  9239                           ; BSR set to: 61
  9240                           ;mcc_generated_files/uart2.c: 270:         uart2RxStatusBuffer[uart2RxHead].ferr = 1;
  9241  003322  0E0C               	movlw	low _uart2RxStatusBuffer
  9242  003324  2459               	addwf	_uart2RxHead^0,w,c	;volatile
  9243  003326  6ED9               	movwf	fsr2l,c
  9244  003328  6ADA               	clrf	fsr2h,c
  9245  00332A  0E01               	movlw	high _uart2RxStatusBuffer
  9246  00332C  22DA               	addwfc	fsr2h,f,c
  9247  00332E  0101               	movlb	1	; () banked
  9248  003330  82DF               	bsf	indf2,1,c
  9249                           
  9250                           ; BSR set to: 1
  9251                           ;mcc_generated_files/uart2.c: 271:         UART2_FramingErrorHandler();
  9252  003332  D801               	call	i2u395_48
  9253  003334  D00B               	goto	i2u395_49
  9254  003336                     i2u395_48:
  9255  003336  0005               	push	
  9256  003338  6EFA               	movwf	pclath,c
  9257  00333A  0100               	movlb	0	; () banked
  9258  00333C  51C6               	movf	_UART2_FramingErrorHandler& (0+255),w,b
  9259  00333E  6EFD               	movwf	tosl,c
  9260  003340  51C7               	movf	(_UART2_FramingErrorHandler+1)& (0+255),w,b
  9261  003342  6EFE               	movwf	tosh,c
  9262  003344  51C8               	movf	(_UART2_FramingErrorHandler+2)& (0+255),w,b
  9263  003346  6EFF               	movwf	tosu,c
  9264  003348  50FA               	movf	pclath,w,c
  9265  00334A  0012               	return		;indir
  9266  00334C                     i2u395_49:
  9267                           
  9268                           ;mcc_generated_files/uart2.c: 274:     if(U2ERRIRbits.RXFOIF){
  9269  00334C  013D               	movlb	61	; () banked
  9270  00334E  A3E1               	btfss	225,1,b	;volatile
  9271  003350  D015               	goto	i2u397_49
  9272                           
  9273                           ; BSR set to: 61
  9274                           ;mcc_generated_files/uart2.c: 275:         uart2RxStatusBuffer[uart2RxHead].oerr = 1;
  9275  003352  0E0C               	movlw	low _uart2RxStatusBuffer
  9276  003354  2459               	addwf	_uart2RxHead^0,w,c	;volatile
  9277  003356  6ED9               	movwf	fsr2l,c
  9278  003358  6ADA               	clrf	fsr2h,c
  9279  00335A  0E01               	movlw	high _uart2RxStatusBuffer
  9280  00335C  22DA               	addwfc	fsr2h,f,c
  9281  00335E  0101               	movlb	1	; () banked
  9282  003360  84DF               	bsf	indf2,2,c
  9283                           
  9284                           ; BSR set to: 1
  9285                           ;mcc_generated_files/uart2.c: 276:         UART2_OverrunErrorHandler();
  9286  003362  D801               	call	i2u397_48
  9287  003364  D00B               	goto	i2u397_49
  9288  003366                     i2u397_48:
  9289  003366  0005               	push	
  9290  003368  6EFA               	movwf	pclath,c
  9291  00336A  0100               	movlb	0	; () banked
  9292  00336C  51C3               	movf	_UART2_OverrunErrorHandler& (0+255),w,b
  9293  00336E  6EFD               	movwf	tosl,c
  9294  003370  51C4               	movf	(_UART2_OverrunErrorHandler+1)& (0+255),w,b
  9295  003372  6EFE               	movwf	tosh,c
  9296  003374  51C5               	movf	(_UART2_OverrunErrorHandler+2)& (0+255),w,b
  9297  003376  6EFF               	movwf	tosu,c
  9298  003378  50FA               	movf	pclath,w,c
  9299  00337A  0012               	return		;indir
  9300  00337C                     i2u397_49:
  9301                           
  9302                           ;mcc_generated_files/uart2.c: 279:     if(uart2RxStatusBuffer[uart2RxHead].status){
  9303  00337C  0E0C               	movlw	low _uart2RxStatusBuffer
  9304  00337E  2459               	addwf	_uart2RxHead^0,w,c	;volatile
  9305  003380  6ED9               	movwf	fsr2l,c
  9306  003382  6ADA               	clrf	fsr2h,c
  9307  003384  0E01               	movlw	high _uart2RxStatusBuffer
  9308  003386  22DA               	addwfc	fsr2h,f,c
  9309  003388  50DF               	movf	indf2,w,c
  9310  00338A  B4D8               	btfsc	status,2,c
  9311  00338C  D00D               	goto	i2l5148
  9312                           
  9313                           ;mcc_generated_files/uart2.c: 280:         UART2_ErrorHandler();
  9314  00338E  D801               	call	i2u399_48
  9315  003390  0012               	return	
  9316  003392                     i2u399_48:
  9317  003392  0005               	push	
  9318  003394  6EFA               	movwf	pclath,c
  9319  003396  0100               	movlb	0	; () banked
  9320  003398  51C0               	movf	_UART2_ErrorHandler& (0+255),w,b
  9321  00339A  6EFD               	movwf	tosl,c
  9322  00339C  51C1               	movf	(_UART2_ErrorHandler+1)& (0+255),w,b
  9323  00339E  6EFE               	movwf	tosh,c
  9324  0033A0  51C2               	movf	(_UART2_ErrorHandler+2)& (0+255),w,b
  9325  0033A2  6EFF               	movwf	tosu,c
  9326  0033A4  50FA               	movf	pclath,w,c
  9327  0033A6  0012               	return		;indir
  9328  0033A8                     i2l5148:
  9329                           
  9330                           ;mcc_generated_files/uart2.c: 282:         UART2_RxDataHandler();
  9331  0033A8  EC3C  F01E         	call	_UART2_RxDataHandler	;wreg free
  9332  0033AC  0012               	return		;funcret
  9333  0033AE                     __end_of_UART2_Receive_ISR:
  9334                           	opt callstack 0
  9335                           
  9336 ;; *************** function _UART2_DefaultOverrunErrorHandler *****************
  9337 ;; Defined at:
  9338 ;;		line 300 in file "mcc_generated_files/uart2.c"
  9339 ;; Parameters:    Size  Location     Type
  9340 ;;		None
  9341 ;; Auto vars:     Size  Location     Type
  9342 ;;		None
  9343 ;; Return value:  Size  Location     Type
  9344 ;;                  1    wreg      void 
  9345 ;; Registers used:
  9346 ;;		None
  9347 ;; Tracked objects:
  9348 ;;		On entry : 3F/0
  9349 ;;		On exit  : 3F/0
  9350 ;;		Unchanged: 3F/0
  9351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9356 ;;Total ram usage:        0 bytes
  9357 ;; Hardware stack levels used:    1
  9358 ;; This function calls:
  9359 ;;		Nothing
  9360 ;; This function is called by:
  9361 ;;		_UART2_Initialize
  9362 ;;		_UART2_Receive_ISR
  9363 ;; This function uses a non-reentrant model
  9364 ;;
  9365                           
  9366                           	psect	text75
  9367  003F2A                     __ptext75:
  9368                           	opt callstack 0
  9369  003F2A                     _UART2_DefaultOverrunErrorHandler:
  9370                           	opt callstack 18
  9371                           
  9372                           ; BSR set to: 0
  9373                           
  9374                           ;incstack = 0
  9375  003F2A  0012               	return		;funcret
  9376  003F2C                     __end_of_UART2_DefaultOverrunErrorHandler:
  9377                           	opt callstack 0
  9378                           
  9379 ;; *************** function _UART2_DefaultFramingErrorHandler *****************
  9380 ;; Defined at:
  9381 ;;		line 298 in file "mcc_generated_files/uart2.c"
  9382 ;; Parameters:    Size  Location     Type
  9383 ;;		None
  9384 ;; Auto vars:     Size  Location     Type
  9385 ;;		None
  9386 ;; Return value:  Size  Location     Type
  9387 ;;                  1    wreg      void 
  9388 ;; Registers used:
  9389 ;;		None
  9390 ;; Tracked objects:
  9391 ;;		On entry : 3F/0
  9392 ;;		On exit  : 3F/0
  9393 ;;		Unchanged: 3F/0
  9394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9399 ;;Total ram usage:        0 bytes
  9400 ;; Hardware stack levels used:    1
  9401 ;; This function calls:
  9402 ;;		Nothing
  9403 ;; This function is called by:
  9404 ;;		_UART2_Initialize
  9405 ;;		_UART2_Receive_ISR
  9406 ;; This function uses a non-reentrant model
  9407 ;;
  9408                           
  9409                           	psect	text76
  9410  003F2C                     __ptext76:
  9411                           	opt callstack 0
  9412  003F2C                     _UART2_DefaultFramingErrorHandler:
  9413                           	opt callstack 18
  9414                           
  9415                           ; BSR set to: 0
  9416                           
  9417                           ; BSR set to: 0
  9418                           ;incstack = 0
  9419  003F2C  0012               	return		;funcret
  9420  003F2E                     __end_of_UART2_DefaultFramingErrorHandler:
  9421                           	opt callstack 0
  9422                           
  9423 ;; *************** function _UART2_DefaultErrorHandler *****************
  9424 ;; Defined at:
  9425 ;;		line 302 in file "mcc_generated_files/uart2.c"
  9426 ;; Parameters:    Size  Location     Type
  9427 ;;		None
  9428 ;; Auto vars:     Size  Location     Type
  9429 ;;		None
  9430 ;; Return value:  Size  Location     Type
  9431 ;;                  1    wreg      void 
  9432 ;; Registers used:
  9433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9434 ;; Tracked objects:
  9435 ;;		On entry : 3F/0
  9436 ;;		On exit  : 3F/0
  9437 ;;		Unchanged: 0/0
  9438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9443 ;;Total ram usage:        0 bytes
  9444 ;; Hardware stack levels used:    1
  9445 ;; Hardware stack levels required when called:    1
  9446 ;; This function calls:
  9447 ;;		_UART2_RxDataHandler
  9448 ;; This function is called by:
  9449 ;;		_UART2_Initialize
  9450 ;;		_UART2_Receive_ISR
  9451 ;; This function uses a non-reentrant model
  9452 ;;
  9453                           
  9454                           	psect	text77
  9455  003F1C                     __ptext77:
  9456                           	opt callstack 0
  9457  003F1C                     _UART2_DefaultErrorHandler:
  9458                           	opt callstack 17
  9459                           
  9460                           ; BSR set to: 0
  9461                           ;mcc_generated_files/uart2.c: 303:     UART2_RxDataHandler();
  9462                           
  9463                           ; BSR set to: 0
  9464                           ;incstack = 0
  9465  003F1C  EC3C  F01E         	call	_UART2_RxDataHandler	;wreg free
  9466                           
  9467                           ; BSR set to: 0
  9468  003F20  0012               	return		;funcret
  9469  003F22                     __end_of_UART2_DefaultErrorHandler:
  9470                           	opt callstack 0
  9471                           
  9472 ;; *************** function _UART2_RxDataHandler *****************
  9473 ;; Defined at:
  9474 ;;		line 288 in file "mcc_generated_files/uart2.c"
  9475 ;; Parameters:    Size  Location     Type
  9476 ;;		None
  9477 ;; Auto vars:     Size  Location     Type
  9478 ;;		None
  9479 ;; Return value:  Size  Location     Type
  9480 ;;                  1    wreg      void 
  9481 ;; Registers used:
  9482 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9483 ;; Tracked objects:
  9484 ;;		On entry : 0/3D
  9485 ;;		On exit  : 3F/0
  9486 ;;		Unchanged: 0/0
  9487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9492 ;;Total ram usage:        0 bytes
  9493 ;; Hardware stack levels used:    1
  9494 ;; This function calls:
  9495 ;;		Nothing
  9496 ;; This function is called by:
  9497 ;;		_UART2_Receive_ISR
  9498 ;;		_UART2_DefaultErrorHandler
  9499 ;; This function uses a non-reentrant model
  9500 ;;
  9501                           
  9502                           	psect	text78
  9503  003C78                     __ptext78:
  9504                           	opt callstack 0
  9505  003C78                     _UART2_RxDataHandler:
  9506                           	opt callstack 18
  9507                           
  9508                           ;mcc_generated_files/uart2.c: 290:     uart2RxBuffer[uart2RxHead++] = U2RXB;
  9509                           
  9510                           ; BSR set to: 0
  9511                           ;incstack = 0
  9512  003C78  0E14               	movlw	low _uart2RxBuffer
  9513  003C7A  2459               	addwf	_uart2RxHead^0,w,c	;volatile
  9514  003C7C  6ED9               	movwf	fsr2l,c
  9515  003C7E  6ADA               	clrf	fsr2h,c
  9516  003C80  0E01               	movlw	high _uart2RxBuffer
  9517  003C82  22DA               	addwfc	fsr2h,f,c
  9518  003C84  006F F743 FFDF     	movff	15824,indf2	;volatile
  9519  003C8A  2A59               	incf	_uart2RxHead^0,f,c	;volatile
  9520                           
  9521                           ;mcc_generated_files/uart2.c: 291:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
  9522  003C8C  0E07               	movlw	7
  9523  003C8E  6459               	cpfsgt	_uart2RxHead^0,c
  9524  003C90  D002               	goto	i2l4784
  9525                           
  9526                           ;mcc_generated_files/uart2.c: 292:     {;mcc_generated_files/uart2.c: 293:         uart2
      +                          RxHead = 0;
  9527  003C92  0E00               	movlw	0
  9528  003C94  6E59               	movwf	_uart2RxHead^0,c	;volatile
  9529  003C96                     i2l4784:
  9530                           
  9531                           ;mcc_generated_files/uart2.c: 295:     uart2RxCount++;
  9532  003C96  0100               	movlb	0	; () banked
  9533  003C98  2BEE               	incf	_uart2RxCount& (0+255),f,b	;volatile
  9534                           
  9535                           ; BSR set to: 0
  9536  003C9A  0012               	return		;funcret
  9537  003C9C                     __end_of_UART2_RxDataHandler:
  9538                           	opt callstack 0
  9539                           
  9540 ;; *************** function _TMR6_ISR *****************
  9541 ;; Defined at:
  9542 ;;		line 168 in file "mcc_generated_files/tmr6.c"
  9543 ;; Parameters:    Size  Location     Type
  9544 ;;		None
  9545 ;; Auto vars:     Size  Location     Type
  9546 ;;		None
  9547 ;; Return value:  Size  Location     Type
  9548 ;;                  1    wreg      void 
  9549 ;; Registers used:
  9550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  9551 ;; Tracked objects:
  9552 ;;		On entry : 0/0
  9553 ;;		On exit  : 0/0
  9554 ;;		Unchanged: 0/0
  9555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9560 ;;Total ram usage:        0 bytes
  9561 ;; Hardware stack levels used:    1
  9562 ;; Hardware stack levels required when called:    1
  9563 ;; This function calls:
  9564 ;;		Absolute function
  9565 ;;		_TMR6_DefaultInterruptHandler
  9566 ;; This function is called by:
  9567 ;;		Interrupt level 2
  9568 ;; This function uses a non-reentrant model
  9569 ;;
  9570                           
  9571                           	psect	text79
  9572  003B08                     __ptext79:
  9573                           	opt callstack 0
  9574  003B08                     _TMR6_ISR:
  9575                           	opt callstack 19
  9576                           
  9577                           ;mcc_generated_files/tmr6.c: 172:  PIR9bits.TMR6IF = 0;
  9578                           
  9579                           ; BSR set to: 0
  9580                           ;incstack = 0
  9581  003B08  0139               	movlb	57	; () banked
  9582  003B0A  91A9               	bcf	169,0,b	;volatile
  9583                           
  9584                           ; BSR set to: 57
  9585                           ;mcc_generated_files/tmr6.c: 174:  if (TMR6_InterruptHandler) {
  9586  003B0C  0100               	movlb	0	; () banked
  9587  003B0E  51BD               	movf	_TMR6_InterruptHandler& (0+255),w,b
  9588  003B10  11BE               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
  9589  003B12  11BF               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
  9590  003B14  B4D8               	btfsc	status,2,c
  9591  003B16  0011               	retfie		f
  9592                           
  9593                           ; BSR set to: 0
  9594                           ;mcc_generated_files/tmr6.c: 175:   TMR6_InterruptHandler();
  9595  003B18  D801               	call	i2u296_48
  9596  003B1A  0011               	retfie		f
  9597  003B1C                     i2u296_48:
  9598  003B1C  0005               	push	
  9599  003B1E  6EFA               	movwf	pclath,c
  9600  003B20  51BD               	movf	_TMR6_InterruptHandler& (0+255),w,b
  9601  003B22  6EFD               	movwf	tosl,c
  9602  003B24  51BE               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
  9603  003B26  6EFE               	movwf	tosh,c
  9604  003B28  51BF               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
  9605  003B2A  6EFF               	movwf	tosu,c
  9606  003B2C  50FA               	movf	pclath,w,c
  9607  003B2E  0012               	return		;indir
  9608  003B30                     __end_of_TMR6_ISR:
  9609                           	opt callstack 0
  9610                           
  9611 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  9612 ;; Defined at:
  9613 ;;		line 184 in file "mcc_generated_files/tmr6.c"
  9614 ;; Parameters:    Size  Location     Type
  9615 ;;		None
  9616 ;; Auto vars:     Size  Location     Type
  9617 ;;  i               1    2[COMRAM] unsigned char 
  9618 ;; Return value:  Size  Location     Type
  9619 ;;                  1    wreg      void 
  9620 ;; Registers used:
  9621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9622 ;; Tracked objects:
  9623 ;;		On entry : 3F/0
  9624 ;;		On exit  : 3F/0
  9625 ;;		Unchanged: 3F/0
  9626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9628 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9629 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9630 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9631 ;;Total ram usage:        3 bytes
  9632 ;; Hardware stack levels used:    1
  9633 ;; This function calls:
  9634 ;;		Nothing
  9635 ;; This function is called by:
  9636 ;;		_TMR6_Initialize
  9637 ;;		_TMR6_ISR
  9638 ;; This function uses a non-reentrant model
  9639 ;;
  9640                           
  9641                           	psect	text80
  9642  003904                     __ptext80:
  9643                           	opt callstack 0
  9644  003904                     _TMR6_DefaultInterruptHandler:
  9645                           	opt callstack 19
  9646                           
  9647                           ; BSR set to: 0
  9648                           ;mcc_generated_files/tmr6.c: 186:  uint8_t i;;mcc_generated_files/tmr6.c: 190:  for (i =
      +                           0; i < TMR_COUNT; i++) {
  9649                           
  9650                           ;incstack = 0
  9651  003904  0E00               	movlw	0
  9652  003906  6E03               	movwf	TMR6_DefaultInterruptHandler@i^0,c
  9653  003908                     i2l4040:
  9654                           
  9655                           ; BSR set to: 0
  9656                           ;mcc_generated_files/tmr6.c: 191:   if (tickCount[i] != 0) {
  9657  003908  5003               	movf	TMR6_DefaultInterruptHandler@i^0,w,c
  9658  00390A  0D02               	mullw	2
  9659  00390C  0E00               	movlw	low _tickCount
  9660  00390E  24F3               	addwf	243,w,c
  9661  003910  6ED9               	movwf	fsr2l,c
  9662  003912  0E01               	movlw	high _tickCount
  9663  003914  20F4               	addwfc	prodh,w,c
  9664  003916  6EDA               	movwf	fsr2h,c
  9665  003918  50DE               	movf	postinc2,w,c
  9666  00391A  10DE               	iorwf	postinc2,w,c
  9667  00391C  B4D8               	btfsc	status,2,c
  9668  00391E  D00B               	goto	i2l4044
  9669                           
  9670                           ; BSR set to: 0
  9671                           ;mcc_generated_files/tmr6.c: 192:    tickCount[i]--;
  9672  003920  5003               	movf	TMR6_DefaultInterruptHandler@i^0,w,c
  9673  003922  0D02               	mullw	2
  9674  003924  0E00               	movlw	low _tickCount
  9675  003926  24F3               	addwf	243,w,c
  9676  003928  6ED9               	movwf	fsr2l,c
  9677  00392A  0E01               	movlw	high _tickCount
  9678  00392C  20F4               	addwfc	prodh,w,c
  9679  00392E  6EDA               	movwf	fsr2h,c
  9680  003930  06DE               	decf	postinc2,f,c
  9681  003932  0E00               	movlw	0
  9682  003934  5ADD               	subwfb	postdec2,f,c
  9683  003936                     i2l4044:
  9684                           
  9685                           ; BSR set to: 0
  9686                           ;mcc_generated_files/tmr6.c: 194:  }
  9687  003936  2A03               	incf	TMR6_DefaultInterruptHandler@i^0,f,c
  9688                           
  9689                           ; BSR set to: 0
  9690  003938  0E05               	movlw	5
  9691  00393A  6403               	cpfsgt	TMR6_DefaultInterruptHandler@i^0,c
  9692  00393C  D7E5               	goto	i2l4040
  9693  00393E  0012               	return	
  9694  003940                     __end_of_TMR6_DefaultInterruptHandler:
  9695                           	opt callstack 0
  9696                           
  9697 ;; *************** function _TMR5_ISR *****************
  9698 ;; Defined at:
  9699 ;;		line 166 in file "mcc_generated_files/tmr5.c"
  9700 ;; Parameters:    Size  Location     Type
  9701 ;;		None
  9702 ;; Auto vars:     Size  Location     Type
  9703 ;;		None
  9704 ;; Return value:  Size  Location     Type
  9705 ;;                  1    wreg      void 
  9706 ;; Registers used:
  9707 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9708 ;; Tracked objects:
  9709 ;;		On entry : 0/0
  9710 ;;		On exit  : 3F/0
  9711 ;;		Unchanged: 0/0
  9712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9717 ;;Total ram usage:        0 bytes
  9718 ;; Hardware stack levels used:    1
  9719 ;; Hardware stack levels required when called:    2
  9720 ;; This function calls:
  9721 ;;		_TMR5_CallBack
  9722 ;;		_TMR5_WriteTimer
  9723 ;; This function is called by:
  9724 ;;		Interrupt level 2
  9725 ;; This function uses a non-reentrant model
  9726 ;;
  9727                           
  9728                           	psect	text81
  9729  0039B4                     __ptext81:
  9730                           	opt callstack 0
  9731  0039B4                     _TMR5_ISR:
  9732                           	opt callstack 18
  9733                           
  9734                           ;mcc_generated_files/tmr5.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr5.c: 171:     PIR8bits.TMR5IF = 0;
  9735                           
  9736                           ; BSR set to: 0
  9737                           ;incstack = 0
  9738  0039B4  0139               	movlb	57	; () banked
  9739  0039B6  9DA8               	bcf	168,6,b	;volatile
  9740                           
  9741                           ; BSR set to: 57
  9742                           ;mcc_generated_files/tmr5.c: 172:     TMR5_WriteTimer(timer5ReloadVal);
  9743  0039B8  0060  F3A8  F004   	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
  9744  0039BE  0060  F3AC  F005   	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
  9745  0039C4  EC4E  F01E         	call	_TMR5_WriteTimer	;wreg free
  9746                           
  9747                           ; BSR set to: 57
  9748                           ;mcc_generated_files/tmr5.c: 175:     if (++CountCallBack >= 50)
  9749  0039C8  0100               	movlb	0	; () banked
  9750  0039CA  4BE8               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
  9751  0039CC  2BE9               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  9752  0039CE  51E9               	movf	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  9753  0039D0  E104               	bnz	i2u297_40
  9754  0039D2  0E32               	movlw	50
  9755  0039D4  5DE8               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
  9756  0039D6  A0D8               	btfss	status,0,c
  9757  0039D8  0011               	retfie		f
  9758  0039DA                     i2u297_40:
  9759                           
  9760                           ; BSR set to: 0
  9761                           ;mcc_generated_files/tmr5.c: 176:     {;mcc_generated_files/tmr5.c: 178:         TMR5_Ca
      +                          llBack();
  9762  0039DA  EC82  F01E         	call	_TMR5_CallBack	;wreg free
  9763                           
  9764                           ;mcc_generated_files/tmr5.c: 181:         CountCallBack = 0;
  9765  0039DE  0E00               	movlw	0
  9766  0039E0  0100               	movlb	0	; () banked
  9767  0039E2  6FE9               	movwf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
  9768  0039E4  0E00               	movlw	0
  9769  0039E6  6FE8               	movwf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
  9770                           
  9771                           ; BSR set to: 0
  9772  0039E8  0011               	retfie		f
  9773  0039EA                     __end_of_TMR5_ISR:
  9774                           	opt callstack 0
  9775                           
  9776 ;; *************** function _TMR5_WriteTimer *****************
  9777 ;; Defined at:
  9778 ;;		line 129 in file "mcc_generated_files/tmr5.c"
  9779 ;; Parameters:    Size  Location     Type
  9780 ;;  timerVal        2    3[COMRAM] unsigned short 
  9781 ;; Auto vars:     Size  Location     Type
  9782 ;;		None
  9783 ;; Return value:  Size  Location     Type
  9784 ;;                  1    wreg      void 
  9785 ;; Registers used:
  9786 ;;		None
  9787 ;; Tracked objects:
  9788 ;;		On entry : 3F/39
  9789 ;;		On exit  : 3F/39
  9790 ;;		Unchanged: 3E/0
  9791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9792 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9795 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9796 ;;Total ram usage:        2 bytes
  9797 ;; Hardware stack levels used:    1
  9798 ;; This function calls:
  9799 ;;		Nothing
  9800 ;; This function is called by:
  9801 ;;		_TMR5_ISR
  9802 ;; This function uses a non-reentrant model
  9803 ;;
  9804                           
  9805                           	psect	text82
  9806  003C9C                     __ptext82:
  9807                           	opt callstack 0
  9808  003C9C                     _TMR5_WriteTimer:
  9809                           	opt callstack 19
  9810                           
  9811                           ; BSR set to: 57
  9812                           ;mcc_generated_files/tmr5.c: 129: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 130: {;mcc_generated_files/tmr5.c: 131:     if (T5CONbits.NOT_SYNC == 1)
  9813                           
  9814                           ; BSR set to: 0
  9815                           ;incstack = 0
  9816  003C9C  A49A               	btfss	154,2,c	;volatile
  9817  003C9E  D009               	goto	i2l774
  9818                           
  9819                           ; BSR set to: 57
  9820                           ;mcc_generated_files/tmr5.c: 132:     {;mcc_generated_files/tmr5.c: 134:         T5CONbi
      +                          ts.TMR5ON = 0;
  9821  003CA0  909A               	bcf	154,0,c	;volatile
  9822                           
  9823                           ;mcc_generated_files/tmr5.c: 137:         TMR5H = (timerVal >> 8);
  9824  003CA2  0060  F017  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
  9825                           
  9826                           ;mcc_generated_files/tmr5.c: 138:         TMR5L = timerVal;
  9827  003CA8  0060  F013  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
  9828                           
  9829                           ;mcc_generated_files/tmr5.c: 141:         T5CONbits.TMR5ON =1;
  9830  003CAE  809A               	bsf	154,0,c	;volatile
  9831                           
  9832                           ;mcc_generated_files/tmr5.c: 142:     }
  9833  003CB0  0012               	return	
  9834  003CB2                     i2l774:
  9835                           
  9836                           ; BSR set to: 57
  9837                           ;mcc_generated_files/tmr5.c: 144:     {;mcc_generated_files/tmr5.c: 146:         TMR5H =
      +                           (timerVal >> 8);
  9838  003CB2  0060  F017  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
  9839                           
  9840                           ;mcc_generated_files/tmr5.c: 147:         TMR5L = timerVal;
  9841  003CB8  0060  F013  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
  9842                           
  9843                           ; BSR set to: 57
  9844  003CBE  0012               	return		;funcret
  9845  003CC0                     __end_of_TMR5_WriteTimer:
  9846                           	opt callstack 0
  9847                           
  9848 ;; *************** function _TMR5_CallBack *****************
  9849 ;; Defined at:
  9850 ;;		line 185 in file "mcc_generated_files/tmr5.c"
  9851 ;; Parameters:    Size  Location     Type
  9852 ;;		None
  9853 ;; Auto vars:     Size  Location     Type
  9854 ;;		None
  9855 ;; Return value:  Size  Location     Type
  9856 ;;                  1    wreg      void 
  9857 ;; Registers used:
  9858 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9859 ;; Tracked objects:
  9860 ;;		On entry : 3F/0
  9861 ;;		On exit  : 0/0
  9862 ;;		Unchanged: 0/0
  9863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9868 ;;Total ram usage:        0 bytes
  9869 ;; Hardware stack levels used:    1
  9870 ;; Hardware stack levels required when called:    1
  9871 ;; This function calls:
  9872 ;;		Absolute function
  9873 ;;		_TMR5_DefaultInterruptHandler
  9874 ;; This function is called by:
  9875 ;;		_TMR5_ISR
  9876 ;; This function uses a non-reentrant model
  9877 ;;
  9878                           
  9879                           	psect	text83
  9880  003D04                     __ptext83:
  9881                           	opt callstack 0
  9882  003D04                     _TMR5_CallBack:
  9883                           	opt callstack 18
  9884                           
  9885                           ; BSR set to: 0
  9886                           ;mcc_generated_files/tmr5.c: 188:     if(TMR5_InterruptHandler)
  9887                           
  9888                           ; BSR set to: 57
  9889                           ;incstack = 0
  9890  003D04  51BA               	movf	_TMR5_InterruptHandler& (0+255),w,b
  9891  003D06  11BB               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
  9892  003D08  11BC               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
  9893  003D0A  B4D8               	btfsc	status,2,c
  9894  003D0C  0012               	return	
  9895                           
  9896                           ; BSR set to: 0
  9897                           ;mcc_generated_files/tmr5.c: 189:     {;mcc_generated_files/tmr5.c: 190:         TMR5_In
      +                          terruptHandler();
  9898  003D0E  D801               	call	i2u259_48
  9899  003D10  0012               	return	
  9900  003D12                     i2u259_48:
  9901  003D12  0005               	push	
  9902  003D14  6EFA               	movwf	pclath,c
  9903  003D16  51BA               	movf	_TMR5_InterruptHandler& (0+255),w,b
  9904  003D18  6EFD               	movwf	tosl,c
  9905  003D1A  51BB               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
  9906  003D1C  6EFE               	movwf	tosh,c
  9907  003D1E  51BC               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
  9908  003D20  6EFF               	movwf	tosu,c
  9909  003D22  50FA               	movf	pclath,w,c
  9910  003D24  0012               	return		;indir
  9911  003D26                     __end_of_TMR5_CallBack:
  9912                           	opt callstack 0
  9913                           
  9914 ;; *************** function _TMR5_DefaultInterruptHandler *****************
  9915 ;; Defined at:
  9916 ;;		line 198 in file "mcc_generated_files/tmr5.c"
  9917 ;; Parameters:    Size  Location     Type
  9918 ;;		None
  9919 ;; Auto vars:     Size  Location     Type
  9920 ;;		None
  9921 ;; Return value:  Size  Location     Type
  9922 ;;                  1    wreg      void 
  9923 ;; Registers used:
  9924 ;;		wreg, status,2, status,0
  9925 ;; Tracked objects:
  9926 ;;		On entry : 3F/0
  9927 ;;		On exit  : 3F/0
  9928 ;;		Unchanged: 3F/0
  9929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9932 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9933 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9934 ;;Total ram usage:        1 bytes
  9935 ;; Hardware stack levels used:    1
  9936 ;; This function calls:
  9937 ;;		Nothing
  9938 ;; This function is called by:
  9939 ;;		_TMR5_Initialize
  9940 ;;		_TMR5_CallBack
  9941 ;; This function uses a non-reentrant model
  9942 ;;
  9943                           
  9944                           	psect	text84
  9945  003D96                     __ptext84:
  9946                           	opt callstack 0
  9947  003D96                     _TMR5_DefaultInterruptHandler:
  9948                           	opt callstack 18
  9949                           
  9950                           ; BSR set to: 0
  9951                           ;mcc_generated_files/tmr5.c: 201:   LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
  9952                           
  9953                           ;incstack = 0
  9954  003D96  A0BE               	btfss	190,0,c	;volatile
  9955  003D98  D002               	goto	i2u231_40
  9956  003D9A  0E01               	movlw	1
  9957  003D9C  D001               	goto	i2u231_46
  9958  003D9E                     i2u231_40:
  9959  003D9E  0E00               	movlw	0
  9960  003DA0                     i2u231_46:
  9961  003DA0  0AFF               	xorlw	255
  9962  003DA2  6E04               	movwf	??_TMR5_DefaultInterruptHandler^0,c
  9963  003DA4  50BE               	movf	190,w,c	;volatile
  9964  003DA6  1804               	xorwf	??_TMR5_DefaultInterruptHandler^0,w,c
  9965  003DA8  0BFE               	andlw	-2
  9966  003DAA  1804               	xorwf	??_TMR5_DefaultInterruptHandler^0,w,c
  9967  003DAC  6EBE               	movwf	190,c	;volatile
  9968                           
  9969                           ; BSR set to: 0
  9970  003DAE  0012               	return		;funcret
  9971  003DB0                     __end_of_TMR5_DefaultInterruptHandler:
  9972                           	opt callstack 0
  9973                           
  9974                           ;
  9975                           ; Interrupt Vector Table @ 0x8
  9976                           ;
  9977                           
  9978                           	psect	ivt0x8
  9979  000008                     __pivt0x8:
  9980                           	opt callstack 0
  9981  000008                     ivt0x8_base:
  9982                           	opt callstack 0
  9983                           
  9984                           ; Vector 0 : SWINT
  9985  000008  0FC9               	dw	_Default_ISR shr (0+2)
  9986                           
  9987                           ; Vector 1 : HLVD
  9988  00000A  0FC9               	dw	_Default_ISR shr (0+2)
  9989                           
  9990                           ; Vector 2 : OSF
  9991  00000C  0FC9               	dw	_Default_ISR shr (0+2)
  9992                           
  9993                           ; Vector 3 : CSW
  9994  00000E  0FC9               	dw	_Default_ISR shr (0+2)
  9995                           
  9996                           ; Vector 4 : NVM
  9997  000010  0FC9               	dw	_Default_ISR shr (0+2)
  9998                           
  9999                           ; Vector 5 : SCAN
 10000  000012  0FC9               	dw	_Default_ISR shr (0+2)
 10001                           
 10002                           ; Vector 6 : CRC
 10003  000014  0FC9               	dw	_Default_ISR shr (0+2)
 10004                           
 10005                           ; Vector 7 : IOC
 10006  000016  0FC9               	dw	_Default_ISR shr (0+2)
 10007                           
 10008                           ; Vector 8 : INT0
 10009  000018  0FC9               	dw	_Default_ISR shr (0+2)
 10010                           
 10011                           ; Vector 9 : ZCD
 10012  00001A  0FC9               	dw	_Default_ISR shr (0+2)
 10013                           
 10014                           ; Vector 10 : AD
 10015  00001C  0FC9               	dw	_Default_ISR shr (0+2)
 10016                           
 10017                           ; Vector 11 : ADT
 10018  00001E  0FC9               	dw	_Default_ISR shr (0+2)
 10019                           
 10020                           ; Vector 12 : CMP1
 10021  000020  0FC9               	dw	_Default_ISR shr (0+2)
 10022                           
 10023                           ; Vector 13 : SMT1
 10024  000022  0FC9               	dw	_Default_ISR shr (0+2)
 10025                           
 10026                           ; Vector 14 : SMT1PRA
 10027  000024  0FC9               	dw	_Default_ISR shr (0+2)
 10028                           
 10029                           ; Vector 15 : SMT1PRW
 10030  000026  0FC9               	dw	_Default_ISR shr (0+2)
 10031                           
 10032                           ; Vector 16 : DMA1SCNT
 10033  000028  0FC9               	dw	_Default_ISR shr (0+2)
 10034                           
 10035                           ; Vector 17 : DMA1DCNT
 10036  00002A  0FC9               	dw	_Default_ISR shr (0+2)
 10037                           
 10038                           ; Vector 18 : DMA1OR
 10039  00002C  0FC9               	dw	_Default_ISR shr (0+2)
 10040                           
 10041                           ; Vector 19 : DMA1A
 10042  00002E  0FC9               	dw	_Default_ISR shr (0+2)
 10043                           
 10044                           ; Vector 20 : SPI1RX
 10045  000030  0FC9               	dw	_Default_ISR shr (0+2)
 10046                           
 10047                           ; Vector 21 : SPI1TX
 10048  000032  0FC9               	dw	_Default_ISR shr (0+2)
 10049                           
 10050                           ; Vector 22 : SPI1
 10051  000034  0FC9               	dw	_Default_ISR shr (0+2)
 10052                           
 10053                           ; Vector 23 : I2C1RX
 10054  000036  0FC9               	dw	_Default_ISR shr (0+2)
 10055                           
 10056                           ; Vector 24 : I2C1TX
 10057  000038  0FC9               	dw	_Default_ISR shr (0+2)
 10058                           
 10059                           ; Vector 25 : I2C1
 10060  00003A  0FC9               	dw	_Default_ISR shr (0+2)
 10061                           
 10062                           ; Vector 26 : I2C1E
 10063  00003C  0FC9               	dw	_Default_ISR shr (0+2)
 10064                           
 10065                           ; Vector 27 : U1RX
 10066  00003E  0EFA               	dw	_UART1_rx_vect_isr shr (0+2)
 10067                           
 10068                           ; Vector 28 : U1TX
 10069  000040  0EF1               	dw	_UART1_tx_vect_isr shr (0+2)
 10070                           
 10071                           ; Vector 29 : U1E
 10072  000042  0FC9               	dw	_Default_ISR shr (0+2)
 10073                           
 10074                           ; Vector 30 : U1
 10075  000044  0FC9               	dw	_Default_ISR shr (0+2)
 10076                           
 10077                           ; Vector 31 : TMR0
 10078  000046  0FC9               	dw	_Default_ISR shr (0+2)
 10079                           
 10080                           ; Vector 32 : TMR1
 10081  000048  0FC9               	dw	_Default_ISR shr (0+2)
 10082                           
 10083                           ; Vector 33 : TMR1G
 10084  00004A  0FC9               	dw	_Default_ISR shr (0+2)
 10085                           
 10086                           ; Vector 34 : TMR2
 10087  00004C  0FC9               	dw	_Default_ISR shr (0+2)
 10088                           
 10089                           ; Vector 35 : CCP1
 10090  00004E  0FC9               	dw	_Default_ISR shr (0+2)
 10091                           
 10092                           ; Vector 36 : Undefined
 10093  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 10094                           
 10095                           ; Vector 37 : NCO1
 10096  000052  0FC9               	dw	_Default_ISR shr (0+2)
 10097                           
 10098                           ; Vector 38 : CWG1
 10099  000054  0FC9               	dw	_Default_ISR shr (0+2)
 10100                           
 10101                           ; Vector 39 : CLC1
 10102  000056  0FC9               	dw	_Default_ISR shr (0+2)
 10103                           
 10104                           ; Vector 40 : INT1
 10105  000058  0FC9               	dw	_Default_ISR shr (0+2)
 10106                           
 10107                           ; Vector 41 : CMP2
 10108  00005A  0FC9               	dw	_Default_ISR shr (0+2)
 10109                           
 10110                           ; Vector 42 : DMA2SCNT
 10111  00005C  0FC9               	dw	_Default_ISR shr (0+2)
 10112                           
 10113                           ; Vector 43 : DMA2DCNT
 10114  00005E  0FC9               	dw	_Default_ISR shr (0+2)
 10115                           
 10116                           ; Vector 44 : DMA2OR
 10117  000060  0FC9               	dw	_Default_ISR shr (0+2)
 10118                           
 10119                           ; Vector 45 : DMA2A
 10120  000062  0FC9               	dw	_Default_ISR shr (0+2)
 10121                           
 10122                           ; Vector 46 : I2C2RX
 10123  000064  0FC9               	dw	_Default_ISR shr (0+2)
 10124                           
 10125                           ; Vector 47 : I2C2TX
 10126  000066  0FC9               	dw	_Default_ISR shr (0+2)
 10127                           
 10128                           ; Vector 48 : I2C2
 10129  000068  0FC9               	dw	_Default_ISR shr (0+2)
 10130                           
 10131                           ; Vector 49 : I2C2E
 10132  00006A  0FC9               	dw	_Default_ISR shr (0+2)
 10133                           
 10134                           ; Vector 50 : U2RX
 10135  00006C  0F15               	dw	_UART2_rx_vect_isr shr (0+2)
 10136                           
 10137                           ; Vector 51 : U2TX
 10138  00006E  0F0C               	dw	_UART2_tx_vect_isr shr (0+2)
 10139                           
 10140                           ; Vector 52 : U2E
 10141  000070  0FC9               	dw	_Default_ISR shr (0+2)
 10142                           
 10143                           ; Vector 53 : U2
 10144  000072  0FC9               	dw	_Default_ISR shr (0+2)
 10145                           
 10146                           ; Vector 54 : TMR3
 10147  000074  0FC9               	dw	_Default_ISR shr (0+2)
 10148                           
 10149                           ; Vector 55 : TMR3G
 10150  000076  0FC9               	dw	_Default_ISR shr (0+2)
 10151                           
 10152                           ; Vector 56 : TMR4
 10153  000078  0FC9               	dw	_Default_ISR shr (0+2)
 10154                           
 10155                           ; Vector 57 : CCP2
 10156  00007A  0FC9               	dw	_Default_ISR shr (0+2)
 10157                           
 10158                           ; Vector 58 : Undefined
 10159  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 10160                           
 10161                           ; Vector 59 : CWG2
 10162  00007E  0FC9               	dw	_Default_ISR shr (0+2)
 10163                           
 10164                           ; Vector 60 : CLC2
 10165  000080  0FC9               	dw	_Default_ISR shr (0+2)
 10166                           
 10167                           ; Vector 61 : INT2
 10168  000082  0FC9               	dw	_Default_ISR shr (0+2)
 10169                           
 10170                           ; Vector 62 : Undefined
 10171  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 10172                           
 10173                           ; Vector 63 : Undefined
 10174  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 10175                           
 10176                           ; Vector 64 : Undefined
 10177  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 10178                           
 10179                           ; Vector 65 : Undefined
 10180  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 10181                           
 10182                           ; Vector 66 : Undefined
 10183  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 10184                           
 10185                           ; Vector 67 : Undefined
 10186  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 10187                           
 10188                           ; Vector 68 : Undefined
 10189  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 10190                           
 10191                           ; Vector 69 : Undefined
 10192  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 10193                           
 10194                           ; Vector 70 : TMR5
 10195  000094  0E6D               	dw	_TMR5_ISR shr (0+2)
 10196                           
 10197                           ; Vector 71 : TMR5G
 10198  000096  0FC9               	dw	_Default_ISR shr (0+2)
 10199                           
 10200                           ; Vector 72 : TMR6
 10201  000098  0EC2               	dw	_TMR6_ISR shr (0+2)
 10202                           
 10203                           ; Vector 73 : CCP3
 10204  00009A  0FC9               	dw	_Default_ISR shr (0+2)
 10205                           
 10206                           ; Vector 74 : CWG3
 10207  00009C  0FC9               	dw	_Default_ISR shr (0+2)
 10208                           
 10209                           ; Vector 75 : CLC3
 10210  00009E  0FC9               	dw	_Default_ISR shr (0+2)
 10211                           
 10212                           ; Vector 76 : Undefined
 10213  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 10214                           
 10215                           ; Vector 77 : Undefined
 10216  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 10217                           
 10218                           ; Vector 78 : Undefined
 10219  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 10220                           
 10221                           ; Vector 79 : Undefined
 10222  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 10223                           
 10224                           ; Vector 80 : CCP4
 10225  0000A8  0FC9               	dw	_Default_ISR shr (0+2)
 10226                           
 10227                           ; Vector 81 : CLC4
 10228  0000AA  0FC9               	dw	_Default_ISR shr (0+2)
 10229  0000AC                     ivt0x8_undefint:
 10230                           	opt callstack 0
 10231  0000AC  00FF               	reset	
 10232                           
 10233                           	psect	text85
 10234  000000                     __ptext85:
 10235                           	opt callstack 0
 10236                           
 10237                           	psect	rparam
 10238  0000                     tosu	equ	0x3FFF
 10239                           tosh	equ	0x3FFE
 10240                           tosl	equ	0x3FFD
 10241                           stkptr	equ	0x3FFC
 10242                           pclatu	equ	0x3FFB
 10243                           pclath	equ	0x3FFA
 10244                           pcl	equ	0x3FF9
 10245                           tblptru	equ	0x3FF8
 10246                           tblptrh	equ	0x3FF7
 10247                           tblptrl	equ	0x3FF6
 10248                           tablat	equ	0x3FF5
 10249                           prodh	equ	0x3FF4
 10250                           prodl	equ	0x3FF3
 10251                           indf0	equ	0x3FEF
 10252                           postinc0	equ	0x3FEE
 10253                           postdec0	equ	0x3FED
 10254                           preinc0	equ	0x3FEC
 10255                           plusw0	equ	0x3FEB
 10256                           fsr0h	equ	0x3FEA
 10257                           fsr0l	equ	0x3FE9
 10258                           wreg	equ	0x3FE8
 10259                           indf1	equ	0x3FE7
 10260                           postinc1	equ	0x3FE6
 10261                           postdec1	equ	0x3FE5
 10262                           preinc1	equ	0x3FE4
 10263                           plusw1	equ	0x3FE3
 10264                           fsr1h	equ	0x3FE2
 10265                           fsr1l	equ	0x3FE1
 10266                           bsr	equ	0x3FE0
 10267                           indf2	equ	0x3FDF
 10268                           postinc2	equ	0x3FDE
 10269                           postdec2	equ	0x3FDD
 10270                           preinc2	equ	0x3FDC
 10271                           plusw2	equ	0x3FDB
 10272                           fsr2h	equ	0x3FDA
 10273                           fsr2l	equ	0x3FD9
 10274                           status	equ	0x3FD8


Data Sizes:
    Strings     72
    Constant    0
    Data        45
    BSS         163
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     85      90
    BANK0           160     86     158
    BANK1           256      0     131
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), 
		 -> STR_15(CODE[4]), STR_13(CODE[4]), STR_11(CODE[4]), STR_9(CODE[4]), 
		 -> STR_7(CODE[4]), STR_5(CODE[4]), STR_3(CODE[11]), work_sw@buffer(BANK0[64]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 64
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), 
		 -> STR_15(CODE[4]), STR_13(CODE[4]), STR_11(CODE[4]), STR_9(CODE[4]), 
		 -> STR_7(CODE[4]), STR_5(CODE[4]), STR_3(CODE[11]), work_sw@buffer(BANK0[64]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_14(CODE[3]), STR_12(CODE[3]), STR_10(CODE[3]), STR_8(CODE[3]), 
		 -> STR_6(CODE[3]), STR_4(CODE[3]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 64
		 -> work_sw@buffer(BANK0[64]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 64
		 -> work_sw@buffer(BANK0[64]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[5]), NULL(NULL[0]), 

    S3045_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 64
		 -> work_sw@buffer(BANK0[64]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 64
		 -> work_sw@buffer(BANK0[64]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[5]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[5]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_14(CODE[3]), STR_12(CODE[3]), STR_10(CODE[3]), STR_8(CODE[3]), 
		 -> STR_6(CODE[3]), STR_4(CODE[3]), STR_2(CODE[17]), STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 17
		 -> STR_14(CODE[3]), STR_12(CODE[3]), STR_10(CODE[3]), STR_8(CODE[3]), 
		 -> STR_6(CODE[3]), STR_4(CODE[3]), STR_2(CODE[17]), STR_1(CODE[17]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), STR_15(CODE[4]), STR_13(CODE[4]), 
		 -> STR_11(CODE[4]), STR_9(CODE[4]), STR_7(CODE[4]), STR_5(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[5]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[5]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), STR_15(CODE[4]), STR_13(CODE[4]), 
		 -> STR_11(CODE[4]), STR_9(CODE[4]), STR_7(CODE[4]), STR_5(CODE[4]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), STR_15(CODE[4]), 
		 -> STR_13(CODE[4]), STR_11(CODE[4]), STR_9(CODE[4]), STR_7(CODE[4]), 
		 -> STR_5(CODE[4]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[5]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[5]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    eaDogM_WriteStringAtPos@strPtr	PTR unsigned char  size(2) Largest target is 64
		 -> STR_3(CODE[11]), work_sw@buffer(BANK0[64]), 

    eaDogM_WriteString@strPtr	PTR unsigned char  size(2) Largest target is 64
		 -> STR_3(CODE[11]), work_sw@buffer(BANK0[64]), 

    sounds	PTR struct OUT_data1 size(2) Largest target is 32
		 -> IO(BANK1[32]), 

    switches	PTR struct IN_data size(2) Largest target is 32
		 -> IO(BANK1[32]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    UART2_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    UART2_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultErrorHandler(), 

    UART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultOverrunErrorHandler(), 

    UART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultFramingErrorHandler(), 

    UART2_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultErrorHandler(), Absolute function(), 

    UART2_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultOverrunErrorHandler(), Absolute function(), 

    UART2_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultFramingErrorHandler(), Absolute function(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _eaDogM_WriteStringAtPos->_eaDogM_WriteString
    _eaDogM_WriteString->_strlen
    _eaDogM_WriteString->_wdtdelay
    _led_lightshow->___awdiv
    _init_display->_send_lcd_cmd
    _init_display->_send_lcd_cmd_long
    _send_lcd_cmd_long->_wdtdelay
    _eaDogM_WriteCommand->_send_lcd_cmd
    _send_lcd_cmd->_wdtdelay
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART2_Initialize->_UART2_SetErrorHandler
    _UART2_Initialize->_UART2_SetFramingErrorHandler
    _UART2_Initialize->_UART2_SetOverrunErrorHandler
    _UART2_Initialize->_UART2_SetRxInterruptHandler
    _UART2_Initialize->_UART2_SetTxInterruptHandler
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _WaitMs->_StartTimer
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART2_Write
    _abs->___aomod

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    _TMR6_ISR->_TMR6_DefaultInterruptHandler

Critical Paths under _TMR5_ISR in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    _TMR5_CallBack->_TMR5_DefaultInterruptHandler

Critical Paths under _main in BANK0

    _main->_work_sw
    _work_sw->_sprintf
    _sprintf->_vfprintf
    _Digital232_init->_printf
    _Digital232_RW->_printf
    _printf->_vfprintf

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   73588
                                             82 BANK0      4     4      0
                      _Digital232_RW
                    _Digital232_init
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                      _led_lightshow
                            _work_sw
 ---------------------------------------------------------------------------------
 (1) _work_sw                                             64    64      0   22248
                                             18 BANK0     64    64      0
                         _StartTimer
                          _TimerDone
            _eaDogM_WriteStringAtPos
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             14     8      6   17766
                                              4 BANK0     14     8      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     1      3    3186
                                             15 COMRAM     4     1      3
                 _eaDogM_WriteString
                       _send_lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   6     4      2    1649
                                              9 COMRAM     6     4      2
                  _SPI1_Exchange8bit
                             _strlen
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (1) _led_lightshow                                        5     3      2    2112
                                             13 COMRAM     5     3      2
                         _StartTimer
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     842
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    2241
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     1      0     775
                                              9 COMRAM     1     1      0
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     1      0     817
                                             10 COMRAM     1     1      0
                       _send_lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd                                         1     1      0     775
                                              9 COMRAM     1     1      0
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (4) _wdtdelay                                             4     0      4     691
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _SPI1_Exchange8bit                                    1     1      0      42
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1824
                    _ADCC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0     740
              _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3     148
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3     148
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetOverrunErrorHandler                         3     0      3     148
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetFramingErrorHandler                         3     0      3     148
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetErrorHandler                                3     0      3     148
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     740
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3     148
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3     148
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         3     0      3     148
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         3     0      3     148
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                3     0      3     148
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     148
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3     148
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     148
                                              8 COMRAM     2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3     148
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      48
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Digital232_init                                      0     0      0   20434
               _ADCC_StartConversion
                         _StartTimer
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                             _printf
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2    1652
                                             10 COMRAM     2     0      2
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      42
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Digital232_RW                                        4     4      0   19634
                                             10 BANK0      4     4      0
           _ADCC_GetConversionResult
                 _PWM8_LoadDutyValue
                         _StartTimer
                          _TimerDone
                         _UART2_Read
                        _UART2_Write
                  _UART2_is_rx_ready
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     3      3   17648
                                              4 BANK0      6     3      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             5     1      4   16884
                                             84 COMRAM     1     1      0
                                              0 BANK0      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           37    33      4   15924
                                             70 COMRAM    14    10      4
                               _dtoa
                              _fputc
                               _stoa
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    3686
                                             16 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    9030
                                             34 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    5996
                                             23 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     498
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2656
                                             16 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    2038
                                              7 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0     126
                                              6 COMRAM     1     1      0
                        _UART2_Write
 ---------------------------------------------------------------------------------
 (8) _UART2_Write                                          1     1      0      84
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     232
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     818
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     842
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      54
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            3     3      0      42
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _StartTimer                                           5     3      2    1038
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   4     2      2     402
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             4     2      2       0
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART2_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART2_DefaultErrorHandler *
   _UART2_DefaultFramingErrorHandler *
   _UART2_DefaultOverrunErrorHandler *
                _UART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART2_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART2_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART2_DefaultErrorHandler                           0     0      0       0
                _UART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART2_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TMR6_ISR                                            0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _TMR6_DefaultInterruptHandler                        3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TMR5_ISR                                            0     0      0     229
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR5_WriteTimer                                     2     0      2     229
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR5_DefaultInterruptHandler                        1     1      0       0
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Digital232_RW
     _ADCC_GetConversionResult
     _PWM8_LoadDutyValue
     _StartTimer
     _TimerDone
     _UART2_Read
     _UART2_Write
     _UART2_is_rx_ready
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART2_Write
               _fputs
                 _fputc
                   _putch
                     _UART2_Write
               _strlen
           _fputc
             _putch
               _UART2_Write
           _stoa
             _fputc
               _putch
                 _UART2_Write
             _strlen
   _Digital232_init
     _ADCC_StartConversion
     _StartTimer
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART2_Write
               _fputs
                 _fputc
                   _putch
                     _UART2_Write
               _strlen
           _fputc
             _putch
               _UART2_Write
           _stoa
             _fputc
               _putch
                 _UART2_Write
             _strlen
   _SYSTEM_Initialize
     _ADCC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _eaDogM_WriteCommand
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _SPI1_Exchange8bit
       _strlen
       _wdtdelay
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
   _init_display
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _led_lightshow
     _StartTimer
     ___awdiv
   _work_sw
     _StartTimer
     _TimerDone
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _SPI1_Exchange8bit
         _strlen
         _wdtdelay
       _send_lcd_cmd
         _SPI1_Exchange8bit
         _wdtdelay
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART2_Write
               _fputs
                 _fputc
                   _putch
                     _UART2_Write
               _strlen
           _fputc
             _putch
               _UART2_Write
           _stoa
             _fputc
               _putch
                 _UART2_Write
             _strlen

 _Default_ISR (ROOT)

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *
     Absolute function(Fake) *
     _UART2_DefaultErrorHandler *
       _UART2_RxDataHandler
     _UART2_DefaultFramingErrorHandler *
     _UART2_DefaultOverrunErrorHandler *
     _UART2_RxDataHandler *

 _TMR6_ISR (ROOT)
   Absolute function(Fake) *
   _TMR6_DefaultInterruptHandler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      83       7       51.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     56      9E       5       98.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     55      5A       1       94.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     17B      58        0.0%
DATA                 0      0     17B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Aug 31 16:35:12 2019

                           _SPI1_Exchange8bit 3D7C              __end_of_TMR5_SetInterruptHandler 3EE6  
                   __end_of_UART2_is_rx_ready 3F16                            ?_SPI1_Exchange8bit 0001  
                                 __CFG_CP$OFF 000000                                            l66 3D5A  
                                          _IO 0163                                  ___awdiv@sign 000B  
                           ??_TMR5_WriteTimer 0006                                   __CFG_LVP$ON 000000  
                               work_sw@buffer 0072                                           l492 37E0  
                                         l987 3D8A                                           _GIE 01FE97  
                                         _abs 388A                           ??_SPI1_Exchange8bit 0006  
                                         _pad 3062                       __size_of_PMD_Initialize 0022  
               eaDogM_WriteStringAtPos@strPtr 0011                               _TMR2_Initialize 3D26  
                                         prod 003FF3                                           tosl 003FFD  
                                         wreg 003FE8                               send_lcd_cmd@cmd 000A  
                          _UART1_Transmit_ISR 3A4E                                 __CFG_BBEN$OFF 000000  
                                __CFG_ZCD$OFF 000000                                          l1122 2452  
                                        ?_abs 0018                                          l1060 2672  
                                        l1301 20D8                                          l1117 2382  
                                        l1063 26C4                                          l1057 25FE  
                                        l2035 38BA                                          l1172 3AEE  
                                        l1156 2EEA                                          l1328 29A0  
                                        l1195 3952                                          l1288 309C  
                                        l1299 20CC                          _ADCC_StartConversion 3EE6  
                                        l6120 3AF8                                          l5510 3804  
                                        l6310 249E                                          l6150 3486  
                                        l6142 3468                                          ?_pad 0018  
                                        l5520 33C6                                          l6304 2474  
                                        l6160 34A6                                          l6136 3458  
                                        l6074 383C                                          l5530 36F2  
                                        l6330 24DA                                          l5612 2BC0  
                                        l5604 2B84                                          l5508 3802  
                                        l5540 3856                                          l5532 36F6  
                                        l6260 236A                                          l6252 2352  
                                        l6244 2312                                          l6148 347E  
                                        l6164 34B0                                          l5550 3082  
                                        l5710 22C0                                          l6270 238C  
                                        l5608 2B9A                                          l5640 2CB8  
                                        l5632 2C5C                                          l5624 2C1E  
                                        l5544 3872                                          l5560 30C2  
                                        l6264 2376                                          l6256 235E  
                                        l6272 2394                                          l6168 34BE  
                                        l6360 2E1C                                          l6432 258A  
                                        l6424 256C                                          l5634 2C70  
                                        l5554 3094                                          l5706 22A6  
                                        l5722 2954                                          l6274 23C8  
                                        l5580 2AC6                                          l5644 2CCE  
                                        l5628 2C42                                          l5564 30F6  
                                        l5556 30A6                                          l5740 29F8  
                                        l5732 29BE                                          l5804 28D4  
                                        l6284 242C                                          l6372 2E44  
                                        l6452 2608                                          l5494 37CA  
                                        l5750 2A5C                                          l5814 28F0  
                                        l5592 2B14                                          l5648 2CF4  
                                        l5672 20F6                                          l5736 29DA  
                                        l5808 28DE                                          l6384 2E80  
                                        l6368 2E3E                                          l5594 2B28  
                                        l5586 2AEE                                          l5658 20B0  
                                        l5754 2A78                                          l5746 2A42  
                                        l6298 2456                                          l6394 2ECE  
                                        l5676 2106                                          l6388 2EAC  
                                        l6468 267C                                          l5854 3BC0  
                                        l5686 2242                                          l6478 26D8  
                                        l5890 369A                                          l5788 282A  
                                        l5892 36BE                                          l5884 2FA2  
                                        l5798 2896                                          l5878 2F52  
                                        STR_1 2001                                          STR_2 2012  
                                        STR_3 2023                                          STR_4 2046  
                                        STR_5 2042                                          STR_6 2046  
                                        STR_7 2032                                          STR_8 2046  
                                        STR_9 2036                                          _LATA 003FBA  
                                        _LATB 003FBB                                          _LATC 003FBC  
                                        _LATD 003FBD                                          _LATE 003FBE  
                                        _T2PR 003FAB                                          u5030 27A6  
                                        u5210 348A                                          u4500 33BE  
                                        u5125 37B6                                          u5126 37B8  
                                        u4600 3898                                          u4520 3406  
                                        u5080 2F50                                          u4530 3720  
                                        u5090 2F9C                                          _T6PR 003F93  
                                        u5500 2EDE                                          _PMD0 0039C0  
                                        u5165 39A4                                          _PMD1 0039C1  
                                        u4710 2C74                                          _PMD2 0039C2  
                                        u4631 2AF4                                          u5087 2F40  
                                        _PMD3 0039C3                                          u4800 20F0  
                                        _PMD4 0039C4                                          u4537 3712  
                                        u5097 2F8E                                          _PMD5 0039C5  
                                        u4650 2B2C                                          u4810 2250  
                                        u5370 24B2                                          _PMD6 0039C6  
                                        _PMD7 0039C7                                          u4740 2082  
                                        u4830 2272                                          u4750 2084  
                                        u5390 24C6                                          u4831 2270  
                                        u4840 2280                                          u4850 2284  
                                        u5490 2EC2                                          u4780 20C2  
                                        u4940 29EE                                          u4870 2290  
                                        u4950 2A22                                          u4891 2930  
                                        u4980 2A8C                                          u4957 2A14  
                                        _PLLR 01CEE0                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                               __CFG_FCMEN$ON 000000                           ?_UART1_Transmit_ISR 0001  
                      led_lightshow@alive_led 00E4                                          abs@a 0018  
                                        _dbuf 013C                                          _main 251A  
                                        _dtoa 204A                                          _prec 00E2  
                                        _nout 00DE                                          pad@i 001F  
                       __end_of_Digital232_RW 251A                                          pad@p 001C  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf1 003FE7                                          indf2 003FDF  
                                        fsr1l 003FE1                                          pad@w 0021  
                                        fsr2l 003FD9                                          _stoa 2926  
                                        prodl 003FF3                                          start 00AE  
                             _timer5ReloadVal 00EA                                ?_led_lightshow 000E  
                   __end_of_SPI1_Exchange8bit 3D96                 ??_UART1_SetTxInterruptHandler 0009  
               ??_UART2_SetRxInterruptHandler 0009                                 __CFG_CSWEN$ON 000000  
                           _UART1_rx_vect_isr 3BE8                                  ___param_bank 000000  
                                 ?_UART2_Read 0001                            ?_UART1_rx_vect_isr 0001  
                                       ??_abs 001A                                         ??_pad 001E  
              __size_of_OSCILLATOR_Initialize 001C                          ??_UART1_Transmit_ISR 0001  
               __end_of_OSCILLATOR_Initialize 3D60                               __end_of___aodiv 2BF2  
                                       _ADCAP 003EF5                                         _ADACT 003EFE  
                                       ?_main 0001                                         ?_dtoa 0023  
                                       _ADCLK 003EFF                               __end_of___aomod 2D26  
                                       _ADPCH 003EF1                                         _ADREF 003EFD  
                             __end_of___awdiv 34CC                                         STR_10 2046  
                                       STR_11 203A                                         STR_12 2046  
                                       STR_13 203E                                         STR_14 2046  
                                       STR_15 202E                                 __CFG_WDTE$OFF 000000  
                                       _ADRPT 003EEC                                         ?_stoa 0011  
                             ___awdiv@divisor 0008                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                      eaDogM_WriteStringAtPos@c 0010  
                                       _U1P1L 003DEC                                         _U1P3H 003DF1  
                                       _T2CON 003FAC                                         _U1P2L 003DEE  
                                       _U1P3L 003DF0                                         _U2P1L 003DD4  
                                       _U2P2L 003DD6                                         _U2P3L 003DD8  
                    eaDogM_WriteStringAtPos@r 0013                                         _T5CLK 003F9D  
                                       _T2HLT 003FAD                                         _T5CON 003F9A  
                                       _T6CON 003F94                                __CFG_DEBUG$OFF 000000  
                                       _T6HLT 003F95                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         _T2RST 003FAF  
                                       _U1RXB 003DE8                                         _U2UIR 003DE0  
                                       _U1TXB 003DEA                                         _U2RXB 003DD0  
                                       _U2TXB 003DD2                                         i2l342 3A78  
                                       i2l516 3AA8                                         _T6TMR 003F92  
                                       _T6RST 003F97                           ??_UART1_rx_vect_isr 0001  
                                       i2l774 3CB2                               ___awdiv@counter 000A  
                                       _OSCEN 0039DD                                  vfpfcnvrt@fmt 0049  
                                       _TMR5H 003F99                                         _TMR5L 003F98  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                   _Default_ISR 3F24  
                    eaDogM_WriteString@strPtr 000A             __size_of_TMR6_SetInterruptHandler 0014  
                   ?_TMR6_SetInterruptHandler 0006                             _UART1_tx_vect_isr 3BC4  
                               __CFG_WRTB$OFF 000000                                 __CFG_WRTC$OFF 000000  
                               __CFG_WRTD$OFF 000000                              __end_of_TMR5_ISR 39EA  
                            __end_of_TMR6_ISR 3B30                                         _flags 0056  
                             _Digital232_init 2D26                         ?_ADCC_StartConversion 0001  
                                       _fputc 33AE                    __size_of_send_lcd_cmd_long 0024  
                                       _fputs 384C                            __CFG_MCLRE$EXTMCLR 000000  
                          ?_UART1_tx_vect_isr 0001                                         pad@fp 0018  
                                       _width 00E0                                         _putch 3F00  
                                       dtoa@d 0025                                         dtoa@i 0045  
                                       main@y 00B5                                         dtoa@n 003D  
                                       dtoa@p 0037                                         dtoa@s 003B  
                                       dtoa@w 0039                              led_lightshow@seq 0012  
                                       pclath 003FFA                                         tablat 003FF5  
                   ??_eaDogM_WriteStringAtPos 0013                                         plusw1 003FE3  
                                       plusw2 003FDB                                         stoa@i 001D  
                                       stoa@l 0025                                         stoa@p 0023  
                                       stoa@s 0013                                         stoa@w 001F  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 3E82  
                 _UART1_SetRxInterruptHandler 3E6E                               __end_of_sprintf 3904  
                             __end_of_work_sw 354E      __end_of_UART1_DefaultFramingErrorHandler 3F2A  
   __size_of_UART1_DefaultFramingErrorHandler 0002            ??_UART1_DefaultFramingErrorHandler 0001  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 3F28  
                         ??_UART1_tx_vect_isr 0001                     __end_of_UART1_rx_vect_isr 3C0C  
                    __size_of_SPI1_Initialize 0018                ??_TMR6_DefaultInterruptHandler 0001  
                             _TMR5_Initialize 3734                ??_UART2_SetOverrunErrorHandler 0009  
                             __initialization 354E                             _UART2_rx_vect_isr 3C54  
              eaDogM_WriteString@bytesWritten 000F                                  __end_of_main 272C  
                                __end_of_dtoa 22F6                                  __end_of_stoa 2A9A  
                  __size_of_UART2_is_rx_ready 0006                                __CFG_SAFEN$OFF 000000  
                 ??_UART1_DefaultErrorHandler 0001                            ?_UART2_rx_vect_isr 0001  
                     __end_of_TMR2_Initialize 3D44                                  ?_UART2_Write 0001  
                                      ??_main 00B2                                        ??_dtoa 002D  
                              __CFG_PR1WAY$ON 000000                      _TMR5_SetInterruptHandler 3ED2  
                                      ??_stoa 0015                                 __activetblptr 000003  
        __size_of_UART1_SetTxInterruptHandler 0014                           ??_UART2_rx_vect_isr 0001  
                         eaDogM_WriteString@i 000E                     __end_of_UART1_tx_vect_isr 3BE8  
        __size_of_UART2_SetRxInterruptHandler 0014                                __CFG_MVECEN$ON 000000  
                             _TMR6_Initialize 3AAE                               _PWM8_Initialize 3DC8  
                 __end_of_UART2_RxDataHandler 3C9C                              _UART1_Initialize 2FAC  
                           _UART2_tx_vect_isr 3C30                            _UART2_Transmit_ISR 3A7E  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        ?_fputc 0008  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 0011                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0006  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 397A  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                          ?_UART2_tx_vect_isr 0001                                TimerDone@timer 0008  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RC3I2C 003A6A                                        _RD1I2C 003A7B  
                                      _RC4I2C 003A6B                                        _U1BRGH 003DF6  
                                      _U1FIFO 003DF7                                        _U2CON0 003DDA  
                                      _U2CON1 003DDB                                        _U1BRGL 003DF5  
                                      _U2CON2 003DDC                                        _U2BRGH 003DDE  
                                      _U2FIFO 003DDF                                        _U2BRGL 003DDD  
                                      _T5GATE 003F9C                           __size_of_UART2_Read 0042  
                                      _T5GCON 003F9B                                        _RC3PPS 003A13  
                                      _RD1PPS 003A19                                        _RB6PPS 003A0E  
                                      _RC5PPS 003A15                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _RC6PPS 003A16                                        _ODCOND 003A72  
                                      _ODCONE 003A82                                        i2l4000 3306  
                              __CFG_WDTCCS$SC 000000                                        i2l4012 3AA4  
                                      i2l4040 3908                                        i2l4044 3936  
                                      i2l3600 3C2A                                        i2l5148 33A8  
                                      i2l3980 3A74                                        i2l4784 3C96  
                               ?_init_display 0001                                        _IVTADH 00389E  
                                      _IVTADL 00389D                                        _IVTADU 00389F  
                __size_of_eaDogM_WriteCommand 000A                                        _OSCFRQ 0039DF  
                         ?_UART2_Transmit_ISR 0001                               ??_led_lightshow 0010  
                       _UART1_SetErrorHandler 3EAA                    ??_ADCC_GetConversionResult 0008  
                       SPI1_Exchange8bit@data 0006                           ?_PWM8_LoadDutyValue 0006  
                         ??_UART2_tx_vect_isr 0001                     __end_of_UART2_rx_vect_isr 3C78  
                  __size_of_SPI1_Exchange8bit 001A                                __CFG_XINST$OFF 000000  
                            _UART2_Initialize 31C0                                        _WaitMs 3ADA  
                                _CCPTMRS1bits 003F5F                     _UART2_OverrunErrorHandler 00C3  
                                vfprintf@cfmt 0055                           _uart2RxStatusBuffer 010C  
          __size_of_UART2_DefaultErrorHandler 0006                                     ??___aodiv 0016  
                                   ??___aomod 0016                                     ??___awdiv 000A  
                              __CFG_STVREN$ON 000000                    ?_UART2_DefaultErrorHandler 0001  
                        send_lcd_cmd_long@cmd 000A                                        clear_0 3598  
                                      clear_1 35A4                           UART2_Read@readValue 0006  
                            ___awdiv@quotient 000C                          ??_UART2_Transmit_ISR 0001  
                                      _printf 3D60                                        pad@buf 001A  
                          _eaDogM_WriteString 2EF4                                        _sounds 00F8  
                                      dtoa@fp 0023                                        _strlen 36E4  
                          __size_of_TimerDone 0024                       __end_of_Digital232_init 2E0E  
                        ??_PWM8_LoadDutyValue 0008                               _ADCC_Initialize 362E  
                                      fputc@c 0008                                _PMD_Initialize 3CE2  
                                      fputs@c 0015                                        fputs@i 0016  
                                      fputs@s 0011                     __end_of_UART2_tx_vect_isr 3C54  
                                __mediumconst 0000                                        tblptrh 003FF7  
                                      tblptrl 003FF6                                        tblptru 003FF8  
                      ??_ADCC_StartConversion 0006                           ?_eaDogM_WriteString 000A  
                            __end_of_wdtdelay 397A                                        stoa@cp 0021  
                                      stoa@fp 0011                              __end_of_vfprintf 36E4  
                               wdtdelay@delay 0006                                    _StartTimer 3A1C  
    TMR5_SetInterruptHandler@InterruptHandler 0006      TMR6_SetInterruptHandler@InterruptHandler 0006  
 UART2_SetTxInterruptHandler@InterruptHandler 0006   UART2_SetRxInterruptHandler@InterruptHandler 0006  
 UART1_SetTxInterruptHandler@InterruptHandler 0006   UART1_SetRxInterruptHandler@InterruptHandler 0006  
        __end_of_UART1_SetOverrunErrorHandler 3E96         __size_of_UART1_SetOverrunErrorHandler 0014  
                _UART1_SetOverrunErrorHandler 3E82                     _UART1_DefaultErrorHandler 3F16  
                                   ??_sprintf 0056                                     ??_work_sw 0056  
               __size_of_INTERRUPT_Initialize 0048                                ??_init_display 000B  
                __size_of_UART1_RxDataHandler 0024                       __end_of_TMR5_Initialize 3780  
                           _SYSTEM_Initialize 39EA                                    __accesstop 0060  
                     __end_of__initialization 35C0                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                    __size_of_UART1_rx_vect_isr 0024  
                             _TMR5_WriteTimer 3C9C                          ??_eaDogM_WriteString 000C  
                              __pcstackCOMRAM 0001                         _UART2_SetErrorHandler 3E46  
                                __pidataBANK0 3F0A                                  __pidataBANK1 3B30  
                         ??_SYSTEM_Initialize 000B                                     ?_TMR5_ISR 0001  
                                   ?_TMR6_ISR 0001                                ivt0x8_undefint 00AC  
                               __end_of_fputc 3444                                 __end_of_fputs 388A  
                           ??_SPI1_Initialize 0006             __end_of_UART2_DefaultErrorHandler 3F22  
                       __end_of_TMR5_CallBack 3D26                                 __end_of_putch 3F0A  
                            ?_TMR2_Initialize 0001                       __end_of_PWM8_Initialize 3DE0  
                     __end_of_TMR6_Initialize 3ADA                        __end_of_PMD_Initialize 3D04  
                  __size_of_UART1_tx_vect_isr 0024                     _UART1_FramingErrorHandler 00CF  
                 ADCC_StartConversion@channel 0006                      _UART2_RxInterruptHandler 00DB  
                                     ??_fputc 000C                     __end_of_SYSTEM_Initialize 3A1C  
                                     ??_fputs 0015                               __CFG_IVT1WAY$ON 000000  
                                     ??_putch 0007                                    __pbssBANK0 00B6  
                                  __pbssBANK1 0100                 ?_UART1_SetOverrunErrorHandler 0006  
                      ?_UART1_SetErrorHandler 0006                             __end_of_TimerDone 3BC4  
                ?_UART2_SetTxInterruptHandler 0006                    __size_of_UART2_rx_vect_isr 0024  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                                       ?_WaitMs 000B  
                                ??_UART2_Read 0006                               __CFG_PPS1WAY$ON 000000  
            __end_of_TMR6_SetInterruptHandler 3ED2          __end_of_UART2_SetFramingErrorHandler 3E46  
       __size_of_UART2_SetFramingErrorHandler 0014                  _UART2_SetFramingErrorHandler 3E32  
                     __end_of_ADCC_Initialize 368A                                 ?_send_lcd_cmd 0001  
                                  ??_TMR5_ISR 0006                                    ??_TMR6_ISR 0004  
                                     _ADSTPTH 003EE5                                       _ADSTPTL 003EE4  
                                     ?_printf 0064                               ?_PMD_Initialize 0001  
                           _UART1_Receive_ISR 326A                                       ?_strlen 0006  
                             StartTimer@count 0006                                       _U1ERRIE 003DFA  
                                     _U1ERRIR 003DF9                                       _U2ERRIE 003DE2  
                                     _U2ERRIR 003DE1                               StartTimer@timer 000A  
                            ?_Digital232_init 0001                           __CFG_PWRTS$PWRT_OFF 000000  
                                ?_Default_ISR 0001                            ?_UART1_Receive_ISR 0001  
                  __size_of_UART2_tx_vect_isr 0024                          __size_of_UART2_Write 0042  
                                     _U1RXPPS 003AE5                                       _U2RXPPS 003AE8  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                                     _IVTLOCK 003FD4                            __size_of_vfpfcnvrt 01FA  
                                     _SPI1CLK 003D1C                                       _SPI1RXB 003D10  
                                     _SPI1TXB 003D11                                       _OSCTUNE 0039DE  
                                     _PWM8DCH 003F61                                       _PWM8DCL 003F60  
                                     _PWM8CON 003F62                                       _SLRCONA 003A43  
                                     _SLRCONB 003A53                                       _SLRCONC 003A63  
                                     _SLRCOND 003A73                                       _SLRCONE 003A83  
                                 ?_StartTimer 0006                           ??_UART1_Receive_ISR 0001  
                     __end_of_TMR5_WriteTimer 3CC0                            __end_of_UART2_Read 384C  
                            ?_TMR5_Initialize 0001                     INTERRUPT_Initialize@state 0006  
                                     __Hparam 0000                        ?_UART2_SetErrorHandler 0006  
                                     __Lparam 0000                      __end_of_UART1_Initialize 3062  
               ??_UART2_SetTxInterruptHandler 0009                    ??_TMR5_SetInterruptHandler 0009  
                             __size_of_WaitMs 002C                                ??_send_lcd_cmd 000A  
                                     ___aodiv 2A9A                                       ___aomod 2BF2  
                                     ___awdiv 3444                                     ?_wdtdelay 0006  
                   __end_of_UART1_Receive_ISR 330C                                     ?_vfprintf 0060  
                                __psmallconst 2000                 ?_UART2_SetFramingErrorHandler 0006  
                        __end_of_init_display 362E                                       __pcinit 354E  
                         _eaDogM_WriteCommand 3EF6                              ?_PWM8_Initialize 0001  
                            ?_TMR6_Initialize 0001                                       __ramtop 2000  
                 __size_of_UART1_Transmit_ISR 0030                                       __ptext0 251A  
                                     __ptext1 34CC                                       __ptext2 38C8  
                                     __ptext3 3CC0                                       __ptext4 2EF4  
                                     __ptext5 2E0E                                       __ptext6 3444  
                                     __ptext7 35C6                                       __ptext8 3B58  
                                     __ptext9 3EF6                             _UART2_Receive_ISR 330C  
                             __size_of_printf 001C                               __CFG_WRTAPP$OFF 000000  
                             __size_of_strlen 0050      __end_of_UART2_DefaultOverrunErrorHandler 3F2C  
   __size_of_UART2_DefaultOverrunErrorHandler 0002            ??_UART2_DefaultOverrunErrorHandler 0001  
           ?_UART2_DefaultOverrunErrorHandler 0001              _UART2_DefaultOverrunErrorHandler 3F2A  
                       _OSCILLATOR_Initialize 3D44                                  __size_of_abs 003E  
                      __size_of_Digital232_RW 0224                                  __size_of_pad 00B2  
                          ?_UART2_Receive_ISR 0001                      ??_PIN_MANAGER_Initialize 0006  
                             __CFG_WRTSAF$OFF 000000                                     _T5CONbits 003F9A  
                    __end_of_UART2_Initialize 326A                    __size_of_SYSTEM_Initialize 0032  
                                     _sprintf 38C8                            led_lightshow@cylon 00FD  
                        end_of_initialization 35C0                                       _work_sw 34CC  
                         ??_UART2_Receive_ISR 0001                            led_lightshow@speed 000E  
                        ?_eaDogM_WriteCommand 0001                                       fputc@fp 000A  
         __end_of_UART1_SetTxInterruptHandler 3E6E                   _UART1_SetTxInterruptHandler 3E5A  
                                     fputs@fp 0013           __end_of_UART2_SetRxInterruptHandler 3E1E  
                 _UART2_SetRxInterruptHandler 3E0A                ??_UART1_SetOverrunErrorHandler 0009  
                           __end_of_vfpfcnvrt 2926                                     _SPI1TCNTL 003D12  
                                     postdec1 003FE5                                       postdec2 003FDD  
                                     postinc0 003FEE                                       postinc1 003FE6  
                                     postinc2 003FDE                                    ??_wdtdelay 000A  
                            ?_ADCC_Initialize 0001                   ??_UART2_DefaultErrorHandler 0001  
                         __size_of_StartTimer 0032                                    ??_vfprintf 0055  
                   __end_of_UART2_Receive_ISR 33AE                                wdtdelay@dcount 00B6  
                         _UART1_RxDataHandler 3C0C                         __CFG_WDTCPS$WDTCPS_31 000000  
                                     strlen@a 0008                                       strlen@s 0006  
                    _TMR6_SetInterruptHandler 3EBE                         _TMR5_InterruptHandler 00BA  
        __size_of_UART2_SetTxInterruptHandler 0014                         WaitMs@numMilliseconds 000B  
                    ?_eaDogM_WriteStringAtPos 0010                              __CFG_FEXTOSC$ECH 000000  
                        ?_UART1_RxDataHandler 0001                              ?_TMR5_WriteTimer 0004  
                       ??_eaDogM_WriteCommand 000B                       TMR5_WriteTimer@timerVal 0004  
                __size_of_UART2_RxDataHandler 0024                               _SPI1_Initialize 3DB0  
                               _Digital232_RW 22F6                         __end_of_led_lightshow 2EF4  
                              led_lightshow@j 00E6                                __end_of_WaitMs 3B06  
                __end_of_INTERRUPT_Initialize 37C8                    __size_of_UART1_Receive_ISR 00A2  
                                 vfpfcnvrt@ap 004A                                   vfpfcnvrt@cp 0053  
                                 vfpfcnvrt@fp 0047                                   vfpfcnvrt@ll 004B  
                           __size_of_TMR5_ISR 0036                             __size_of_TMR6_ISR 0028  
                 __size_of_UART2_Transmit_ISR 0030                        ?_OSCILLATOR_Initialize 0001  
           __size_of_ADCC_GetConversionResult 0016                     ?_ADCC_GetConversionResult 0006  
                              __end_of_printf 3D7C                   __size_of_PWM8_LoadDutyValue 0038  
                              __end_of_strlen 3734                ??_UART2_SetFramingErrorHandler 0009  
                         start_initialization 354E          __end_of_TMR5_DefaultInterruptHandler 3DB0  
       __size_of_TMR5_DefaultInterruptHandler 001A                  _TMR5_DefaultInterruptHandler 3D96  
             __size_of_PIN_MANAGER_Initialize 00AC                                   __end_of_abs 38C8  
                                 __end_of_pad 3114                          __size_of_Default_ISR 0002  
                     ??_UART1_SetErrorHandler 0009                     _UART2_DefaultErrorHandler 3F1C  
                        __end_of_send_lcd_cmd 3BA0                         ??_UART1_RxDataHandler 0001  
               __size_of_ADCC_StartConversion 0010                                   putch@txData 0007  
                                  ivt0x8_base 0008                                 _uart1RxBuffer 012C  
                               _uart1TxBuffer 0134                                 _uart2RxBuffer 0114  
                              ?_Digital232_RW 0001                                 _uart2TxBuffer 011C  
                            __CFG_LPBOREN$OFF 000000                                      ??_WaitMs 000D  
                       __size_of_init_display 0068                                   vfprintf@fmt 0062  
                 __size_of_eaDogM_WriteString 00B8                              ??_PMD_Initialize 0006  
                                   _TimerDone 3BA0                                   __pdataBANK0 00F8  
                                 __pdataBANK1 015C                    __size_of_UART2_Receive_ISR 00A2  
                           UART2_Write@txData 0006                                      ??_printf 0056  
                                    ??_strlen 0008               __end_of_eaDogM_WriteStringAtPos 3CE2  
                                 __pbssCOMRAM 0056                            _UART1_ErrorHandler 00C9  
                   _UART2_FramingErrorHandler 00C6                                 __pcstackBANK0 0060  
                            ___aodiv@dividend 0006                      __size_of_TMR2_Initialize 001E  
                                ??_StartTimer 0008                       __end_of_SPI1_Initialize 3DC8  
                    _UART1_RxInterruptHandler 00D5                      _UART2_TxInterruptHandler 00D8  
               ?_TMR5_DefaultInterruptHandler 0001                                Digital232_RW@i 006C  
                              Digital232_RW@j 006D                                Digital232_RW@x 00EC  
                                _init_display 35C6                        __size_of_TMR5_CallBack 0022  
                 PWM8_LoadDutyValue@dutyValue 0006                       ??_UART2_SetErrorHandler 0009  
                ?_UART1_SetRxInterruptHandler 0006                         _TMR6_InterruptHandler 00BD  
                      _PIN_MANAGER_Initialize 3114                                     _dtoa$2573 0035  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 3EAA  
       __size_of_UART1_SetFramingErrorHandler 0014                  _UART1_SetFramingErrorHandler 3E96  
                                  ?_TimerDone 0001                                      ?___aodiv 0006  
                                    ?___aomod 0006                                      ?___awdiv 0006  
                            ___aodiv@quotient 0018                            ??_UART1_Initialize 0009  
                          __end_of_StartTimer 3A4E                              _uart1RxLastError 00F2  
                               ??_UART2_Write 0006                             __size_of_wdtdelay 003A  
                           __size_of_vfprintf 005A                        __CFG_BBSIZE$BBSIZE_512 000000  
                                 __smallconst 2000      __end_of_UART1_DefaultOverrunErrorHandler 3F28  
   __size_of_UART1_DefaultOverrunErrorHandler 0002            ??_UART1_DefaultOverrunErrorHandler 0001  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 3F26  
                           ?_UART2_Initialize 0001                                      ?_sprintf 0064  
                              __size_of_fputc 0096                                      _T2CLKCON 003FAE  
                              __size_of_fputs 003E                                   _U1ERRIRbits 003DF9  
                                    ?_work_sw 0001                            ??_UART2_Initialize 0009  
                              __size_of_putch 000A                      __size_of_Digital232_init 00E8  
                        _INTERRUPT_Initialize 3780                                      _T6CLKCON 003F96  
                             ??_Digital232_RW 006A                              _uart2RxLastError 00ED  
                                 _U2ERRIRbits 003DE1         UART2_SetErrorHandler@interruptHandler 0006  
       UART1_SetErrorHandler@interruptHandler 0006                                      _LATCbits 003FBC  
                                    _LATEbits 003FBE                                      _IPR3bits 003983  
                                    _PIE3bits 003993                                     _tickCount 0100  
                                    _IPR6bits 003986                                      _IPR8bits 003988  
                                    _PIE6bits 003996                                      _IPR9bits 003989  
                                    _PIE8bits 003998                           __CFG_BORV$VBOR_2P45 000000  
                                    _PIE9bits 003999                 ??_UART1_SetRxInterruptHandler 0009  
                                    i2u231_40 3D9E                                      i2u231_46 3DA0  
                                    i2u242_48 3294                                      i2u242_49 32AA  
                                    i2u244_48 32C4                                      i2u244_49 32DA  
                                    i2u246_48 32F0                                      i2u290_48 3BF8  
                                    _PIR2bits 0039A2                                      _SPI1BAUD 003D19  
                                    i2u259_48 3D12                                      i2u428_48 3C64  
                                    i2u292_48 3C40                                      _PIR4bits 0039A4  
                                    _SPI1CON0 003D14                                      _SPI1CON1 003D15  
                                    _SPI1CON2 003D16                                      i2u297_40 39DA  
                                    i2u296_48 3B1C                                      i2u288_48 3BD4  
                                    i2u395_48 3336                                      i2u395_49 334C  
                                    i2u397_48 3366                                      i2u397_49 337C  
                                    _PIR8bits 0039A8                                      i2u399_48 3392  
                                    _PIR9bits 0039A9                    ??_TMR6_SetInterruptHandler 0009  
                    __size_of_TMR5_Initialize 004C                    __end_of_UART1_Transmit_ISR 3A7E  
                                    _TMR5_ISR 39B4                                      _TMR6_ISR 3B08  
               ?_UART1_SetFramingErrorHandler 0006                                     _vfpfcnvrt 272C  
                               _TMR5_CallBack 3D04                           _UART2_RxDataHandler 3C78  
                                  _ADCON0bits 003EF8                         __size_of_send_lcd_cmd 0024  
           __size_of_TMR5_SetInterruptHandler 0014                     ?_TMR5_SetInterruptHandler 0006  
                          _UART2_ErrorHandler 00C0                           __end_of_UART2_Write 380A  
                    __size_of_PWM8_Initialize 0018                      __size_of_TMR6_Initialize 002C  
                            ?_SPI1_Initialize 0001                                   _INTCON0bits 003FD2  
                                   copy_data0 3562                                     copy_data1 3584  
                       ?_INTERRUPT_Initialize 0001                          ?_UART2_RxDataHandler 0001  
                      _uart1TxBufferRemaining 00F5                             ??_TMR2_Initialize 0006  
              ??_TMR5_DefaultInterruptHandler 0004           __end_of_UART2_SetTxInterruptHandler 3E0A  
                 _UART2_SetTxInterruptHandler 3DF6                                  _uart1RxCount 00F3  
                                _uart2RxCount 00EE                                      __Hrparam 0000  
            __size_of_eaDogM_WriteStringAtPos 0022              __end_of_ADCC_GetConversionResult 3DF6  
                     __CFG_RSTOSC$EXTOSC_4PLL 000000                                    vfprintf@ap 0063  
                                    __Lrparam 0000                                    vfprintf@fp 0060  
                          __CFG_BOREN$SBORDIS 000000                                   ??_TimerDone 0006  
                     ??_OSCILLATOR_Initialize 0006                                  _send_lcd_cmd 3B7C  
                            __size_of___aodiv 0158                              __size_of___aomod 0134  
                            __size_of___awdiv 0088                                ?_TMR5_CallBack 0001  
                                  ?_vfpfcnvrt 0047                               ___aodiv@divisor 000E  
                             ___aodiv@counter 0016          __size_of_UART1_SetRxInterruptHandler 0014  
                                  sprintf@fmt 0065                      __size_of_ADCC_Initialize 005C  
                 __end_of_eaDogM_WriteCommand 3F00                                      __pivt0x8 0008  
                                    __ptext10 3B7C                                      __ptext11 3940  
                                    __ptext20 2FAC                                      __ptext12 3D7C  
                                    __ptext21 3E5A                                      __ptext13 39EA  
                                    __ptext30 3D26                                      __ptext22 3E6E  
                                    __ptext14 31C0                                      __ptext31 3DB0  
                                    __ptext23 3E82                                      __ptext15 3DF6  
                                    __ptext40 3EE6                                      __ptext32 3DC8  
                                    __ptext24 3E96                                      __ptext16 3E0A  
                                    __ptext41 22F6                                      __ptext33 3CE2  
                                    __ptext25 3EAA                                      __ptext17 3E1E  
                                    __ptext50 33AE                                      __ptext42 3D60  
                                    __ptext34 3114                                      __ptext26 3AAE  
                                    __ptext18 3E32                                      __ptext51 3F00  
                                    __ptext43 368A                                      __ptext35 3D44  
                                    __ptext27 3EBE                                      __ptext19 3E46  
                                    __ptext60 397A                                      __ptext52 37C8  
                                    __ptext44 272C                                      __ptext36 3780  
                                    __ptext28 3734                                      __ptext61 3DE0  
                                    __ptext53 388A                                      __ptext45 2926  
                                    __ptext37 362E                                      __ptext29 3ED2  
                                    __ptext70 3C0C                                      __ptext62 3F24  
                                    __ptext54 2BF2                                      __ptext46 204A  
                                    __ptext38 2D26                                      __ptext71 3C30  
                                    __ptext63 3BC4                                      __ptext55 2A9A  
                                    __ptext47 3062                                      __ptext39 3ADA  
                                    __ptext80 3904                                      __ptext72 3A7E  
                                    __ptext64 3A4E                                      __ptext56 3F10  
                                    __ptext48 36E4                                      __ptext81 39B4  
                                    __ptext73 3C54                                      __ptext65 3BE8  
                                    __ptext57 380A                                      __ptext49 384C  
                                    __ptext82 3C9C                                      __ptext74 330C  
                                    __ptext66 326A                                      __ptext58 3BA0  
                                    __ptext83 3D04                                      __ptext75 3F2A  
                                    __ptext67 3F26                                      __ptext59 3A1C  
                                    __ptext84 3D96                                      __ptext76 3F2C  
                                    __ptext68 3F28                                      __ptext85 0000  
                                    __ptext77 3F1C                                      __ptext69 3F16  
                                    __ptext78 3C78                                      __ptext79 3B08  
              __size_of_UART1_SetErrorHandler 0014                 TMR6_DefaultInterruptHandler@i 0003  
               __end_of_UART1_SetErrorHandler 3EBE                              __size_of_sprintf 003C  
                       ??_UART2_RxDataHandler 0001                              __size_of_work_sw 0082  
                         led_lightshow@LED_UP 00FC                                 __size_of_main 0212  
                               __size_of_dtoa 02AC                                 __size_of_stoa 0174  
    __end_of_UART2_DefaultFramingErrorHandler 3F2E     __size_of_UART2_DefaultFramingErrorHandler 0002  
          ??_UART2_DefaultFramingErrorHandler 0001             ?_UART2_DefaultFramingErrorHandler 0001  
            _UART2_DefaultFramingErrorHandler 3F2C                          __CFG_WDTCWS$WDTCWS_7 000000  
                                 _IVTLOCKbits 003FD4                             ??_Digital232_init 0056  
                    __size_of_TMR5_WriteTimer 0024                     _UART1_OverrunErrorHandler 00CC  
                                   stoa@F1139 015C  UART2_SetOverrunErrorHandler@interruptHandler 0006  
UART1_SetOverrunErrorHandler@interruptHandler 0006            __size_of_UART1_DefaultErrorHandler 0006  
                __end_of_ADCC_StartConversion 3EF6                    ?_UART1_DefaultErrorHandler 0001  
                                    _wdtdelay 3940                    __end_of_UART2_Transmit_ISR 3AAE  
                                    _vfprintf 368A                                     printf@fmt 0064  
                  __end_of_PWM8_LoadDutyValue 39B2                                      _switches 00FA  
                                 _UART2_Write 37C8                             ??_TMR5_Initialize 0009  
                            ___aomod@dividend 0006                                 ??_Default_ISR 0001  
              ??_UART1_SetFramingErrorHandler 0009                   __end_of_UART1_RxDataHandler 3C30  
                                 _uart1RxHead 005A                                   _uart1TxHead 00F7  
                                 _uart2RxHead 0059                                   _uart1RxTail 00F4  
                                 _uart2TxHead 00F1                                   _uart1TxTail 00F6  
                                 _uart2RxTail 0058                        __size_of_led_lightshow 00E6  
                                 _uart2TxTail 00F0                        ??_INTERRUPT_Initialize 0006  
        __end_of_TMR6_DefaultInterruptHandler 3940         __size_of_TMR6_DefaultInterruptHandler 003C  
                _TMR6_DefaultInterruptHandler 3904          __end_of_UART2_SetOverrunErrorHandler 3E32  
       __size_of_UART2_SetOverrunErrorHandler 0014                  _UART2_SetOverrunErrorHandler 3E1E  
                                    intlevel2 0000                                     sprintf@ap 006C  
                           _send_lcd_cmd_long 3B58                       ?_PIN_MANAGER_Initialize 0001  
                           ??_TMR6_Initialize 0009                             ??_PWM8_Initialize 0006  
                           __CFG_CLKOUTEN$OFF 000000                            ?_send_lcd_cmd_long 0001  
                  __end_of_eaDogM_WriteString 2FAC                __size_of_UART2_SetErrorHandler 0014  
               __end_of_UART2_SetErrorHandler 3E5A                           _uart1RxStatusBuffer 0124  
                                  _SPI1SCKPPS 003ADE                                    _SPI1SDIPPS 003ADF  
                             ??_TMR5_CallBack 0005                           ??_send_lcd_cmd_long 000A  
                                    printf@ap 0069                        eaDogM_WriteCommand@cmd 000B  
                                  _UART2_Read 380A  UART2_SetFramingErrorHandler@interruptHandler 0006  
UART1_SetFramingErrorHandler@interruptHandler 0006                      _ADCC_GetConversionResult 3DE0  
           __end_of_UART1_DefaultErrorHandler 3F1C                               ___aomod@divisor 000E  
                                 ??_vfpfcnvrt 004B                                      stoa@nuls 0016  
                             ___aomod@counter 0016                             _UART2_is_rx_ready 3F10  
                      _uart2TxBufferRemaining 00EF                                      sprintf@f 006D  
                                    sprintf@s 0064                            ?_UART2_is_rx_ready 0001  
                       TMR5_ISR@CountCallBack 00E8                     __size_of_UART1_Initialize 00B6  
                    _UART1_TxInterruptHandler 00D2                           ??_UART2_is_rx_ready 0006  
                   __end_of_send_lcd_cmd_long 3B7C                           __end_of_Default_ISR 3F26  
                                ___aodiv@sign 0017                __end_of_PIN_MANAGER_Initialize 31C0  
                           ??_ADCC_Initialize 0006                 ?_TMR6_DefaultInterruptHandler 0001  
               ?_UART2_SetOverrunErrorHandler 0006                  ?_UART1_SetTxInterruptHandler 0006  
                     _eaDogM_WriteStringAtPos 3CC0                  ?_UART2_SetRxInterruptHandler 0006  
                                ___aomod@sign 0017                                 _led_lightshow 2E0E  
                   __size_of_UART2_Initialize 00AA  
