

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Sep  3 00:30:56 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,inline
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,inline
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=4,class=CODE,delta=1
    81                           	psect	text64,global,reloc=4,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=4,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=4,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=4,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=4,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=4,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   104                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   107  0000                     
   108                           ; Version 2.10
   109                           ; Generated 31/07/2019 GMT
   110                           ; 
   111                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   112                           ; All rights reserved.
   113                           ; 
   114                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   115                           ; 
   116                           ; Redistribution and use in source and binary forms, with or without modification, are
   117                           ; permitted provided that the following conditions are met:
   118                           ; 
   119                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   120                           ;        conditions and the following disclaimer.
   121                           ; 
   122                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   123                           ;        of conditions and the following disclaimer in the documentation and/or other
   124                           ;        materials provided with the distribution.
   125                           ; 
   126                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   127                           ;        software without specific prior written permission.
   128                           ; 
   129                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   130                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   131                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   132                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   133                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   134                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   135                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   136                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   137                           ; 
   138                           ; 
   139                           ; Code-generator required, PIC18F47K42 Definitions
   140                           ; 
   141                           ; SFR Addresses
   142  0000                     
   143                           	psect	idataBANK0
   144  003FC0                     __pidataBANK0:
   145                           	opt callstack 0
   146                           
   147                           ;initializer for led_lightshow@LED_UP
   148  003FC0  01                 	db	1
   149                           
   150                           ;initializer for led_lightshow@cylon
   151  003FC1  FF                 	db	255
   152                           
   153                           	psect	idataBANK1
   154  003B46                     __pidataBANK1:
   155                           	opt callstack 0
   156                           
   157                           ;initializer for stoa@F1139
   158  003B46  28                 	db	40
   159  003B47  6E                 	db	110
   160  003B48  75                 	db	117
   161  003B49  6C                 	db	108
   162  003B4A  6C                 	db	108
   163  003B4B  29                 	db	41
   164  003B4C  00                 	db	0
   165                           
   166                           ;initializer for _sounds
   167  003B4D  A3                 	db	low (_IO+6)
   168  003B4E  01                 	db	high (_IO+6)
   169                           
   170                           ;initializer for _switches
   171  003B4F  9D                 	db	low _IO
   172  003B50  01                 	db	high _IO
   173                           
   174                           ;initializer for _IO
   175  003B51  00                 	db	0
   176  003B52  00                 	db	0
   177  003B53  00                 	db	0
   178  003B54  00                 	db	0
   179  003B55  00                 	db	0
   180  003B56  00                 	db	0
   181  003B57  00                 	db	0
   182  003B58  00                 	db	0
   183  003B59  00                 	db	0
   184  003B5A  00                 	db	0
   185  003B5B  00                 	db	0
   186  003B5C  00                 	db	0
   187  003B5D  00                 	db	0
   188  003B5E  00                 	db	0
   189  003B5F  00                 	db	0
   190  003B60  00                 	db	0
   191  003B61  00                 	db	0
   192  003B62  00                 	db	0
   193  003B63  00                 	db	0
   194  003B64  32                 	db	50
   195  003B65  00                 	db	0
   196  003B66  0000               	dw	0
   197  003B68  000A               	dw	10
   198  003B6A  0000               	dw	0
   199  003B6C  0000               	dw	0
   200  003B6E  01                 	db	1
   201  003B6F  00                 	db	0
   202  003B70  00                 	db	0
   203  003B71  01                 	db	1
   204  003B72  01                 	db	1
   205  003B73  01                 	db	1
   206  003B74  00                 	db	0
   207  0000                     _IVTADL	set	14493
   208  0000                     _IVTADH	set	14494
   209  0000                     _IVTADU	set	14495
   210  0000                     _PIR2bits	set	14754
   211  0000                     _PIE8bits	set	14744
   212  0000                     _PIR8bits	set	14760
   213  0000                     _PIE9bits	set	14745
   214  0000                     _PIR9bits	set	14761
   215  0000                     _PIR4bits	set	14756
   216  0000                     _PIE6bits	set	14742
   217  0000                     _PIE3bits	set	14739
   218  0000                     _IPR8bits	set	14728
   219  0000                     _IPR9bits	set	14729
   220  0000                     _IPR3bits	set	14723
   221  0000                     _IPR6bits	set	14726
   222  0000                     _PMD7	set	14791
   223  0000                     _PMD6	set	14790
   224  0000                     _PMD5	set	14789
   225  0000                     _PMD4	set	14788
   226  0000                     _PMD3	set	14787
   227  0000                     _PMD2	set	14786
   228  0000                     _PMD1	set	14785
   229  0000                     _PMD0	set	14784
   230  0000                     _OSCTUNE	set	14814
   231  0000                     _OSCFRQ	set	14815
   232  0000                     _OSCEN	set	14813
   233  0000                     _OSCCON3	set	14811
   234  0000                     _OSCCON1	set	14809
   235  0000                     _PLLR	set	118496
   236  0000                     _SPI1SDIPPS	set	15071
   237  0000                     _U1RXPPS	set	15077
   238  0000                     _RC6PPS	set	14870
   239  0000                     _RC5PPS	set	14869
   240  0000                     _RD1PPS	set	14873
   241  0000                     _RC3PPS	set	14867
   242  0000                     _RB6PPS	set	14862
   243  0000                     _SPI1SCKPPS	set	15070
   244  0000                     _U2RXPPS	set	15080
   245  0000                     _SLRCONE	set	14979
   246  0000                     _SLRCOND	set	14963
   247  0000                     _SLRCONC	set	14947
   248  0000                     _SLRCONB	set	14931
   249  0000                     _SLRCONA	set	14915
   250  0000                     _ODCOND	set	14962
   251  0000                     _ODCONC	set	14946
   252  0000                     _ODCONB	set	14930
   253  0000                     _ODCONA	set	14914
   254  0000                     _ODCONE	set	14978
   255  0000                     _RD1I2C	set	14971
   256  0000                     _RD0I2C	set	14970
   257  0000                     _RC4I2C	set	14955
   258  0000                     _RC3I2C	set	14954
   259  0000                     _RB2I2C	set	14939
   260  0000                     _RB1I2C	set	14938
   261  0000                     _WPUC	set	14945
   262  0000                     _WPUA	set	14913
   263  0000                     _WPUB	set	14929
   264  0000                     _WPUE	set	14977
   265  0000                     _WPUD	set	14961
   266  0000                     _ANSELA	set	14912
   267  0000                     _ANSELE	set	14976
   268  0000                     _ANSELB	set	14928
   269  0000                     _ANSELC	set	14944
   270  0000                     _ANSELD	set	14960
   271  0000                     _SPI1RXB	set	15632
   272  0000                     _SPI1TXB	set	15633
   273  0000                     _SPI1TCNTL	set	15634
   274  0000                     _SPI1CON0	set	15636
   275  0000                     _SPI1CLK	set	15644
   276  0000                     _SPI1BAUD	set	15641
   277  0000                     _SPI1CON2	set	15638
   278  0000                     _SPI1CON1	set	15637
   279  0000                     _U2RXB	set	15824
   280  0000                     _U2TXB	set	15826
   281  0000                     _U2ERRIRbits	set	15841
   282  0000                     _U2ERRIE	set	15842
   283  0000                     _U2ERRIR	set	15841
   284  0000                     _U2UIR	set	15840
   285  0000                     _U2FIFO	set	15839
   286  0000                     _U2BRGH	set	15838
   287  0000                     _U2BRGL	set	15837
   288  0000                     _U2CON2	set	15836
   289  0000                     _U2CON1	set	15835
   290  0000                     _U2CON0	set	15834
   291  0000                     _U2P3L	set	15832
   292  0000                     _U2P2L	set	15830
   293  0000                     _U2P1L	set	15828
   294  0000                     _U1RXB	set	15848
   295  0000                     _U1TXB	set	15850
   296  0000                     _U1ERRIRbits	set	15865
   297  0000                     _U1ERRIE	set	15866
   298  0000                     _U1ERRIR	set	15865
   299  0000                     _U1UIR	set	15864
   300  0000                     _U1FIFO	set	15863
   301  0000                     _U1BRGH	set	15862
   302  0000                     _U1BRGL	set	15861
   303  0000                     _U1CON2	set	15860
   304  0000                     _U1CON1	set	15859
   305  0000                     _U1CON0	set	15858
   306  0000                     _U1P3H	set	15857
   307  0000                     _U1P3L	set	15856
   308  0000                     _U1P2H	set	15855
   309  0000                     _U1P2L	set	15854
   310  0000                     _U1P1H	set	15853
   311  0000                     _U1P1L	set	15852
   312  0000                     _ADRESL	set	16111
   313  0000                     _ADRESH	set	16112
   314  0000                     _ADCON0bits	set	16120
   315  0000                     _ADCON0	set	16120
   316  0000                     _ADCLK	set	16127
   317  0000                     _ADACT	set	16126
   318  0000                     _ADREF	set	16125
   319  0000                     _ADSTAT	set	16124
   320  0000                     _ADCON3	set	16123
   321  0000                     _ADCON2	set	16122
   322  0000                     _ADCON1	set	16121
   323  0000                     _ADPREH	set	16119
   324  0000                     _ADPREL	set	16118
   325  0000                     _ADCAP	set	16117
   326  0000                     _ADACQH	set	16116
   327  0000                     _ADACQL	set	16115
   328  0000                     _ADPCH	set	16113
   329  0000                     _ADRPT	set	16108
   330  0000                     _ADACCU	set	16106
   331  0000                     _ADSTPTH	set	16101
   332  0000                     _ADSTPTL	set	16100
   333  0000                     _ADUTHH	set	16097
   334  0000                     _ADUTHL	set	16096
   335  0000                     _ADLTHH	set	16095
   336  0000                     _ADLTHL	set	16094
   337  0000                     _CCPTMRS1bits	set	16223
   338  0000                     _LATCbits	set	16316
   339  0000                     _LATEbits	set	16318
   340  0000                     _T5CONbits	set	16282
   341  0000                     _T5CON	set	16282
   342  0000                     _TMR5L	set	16280
   343  0000                     _TMR5H	set	16281
   344  0000                     _T5CLK	set	16285
   345  0000                     _T5GATE	set	16284
   346  0000                     _T5GCON	set	16283
   347  0000                     _T6CON	set	16276
   348  0000                     _T6TMR	set	16274
   349  0000                     _T6PR	set	16275
   350  0000                     _T6RST	set	16279
   351  0000                     _T6HLT	set	16277
   352  0000                     _T6CLKCON	set	16278
   353  0000                     _PWM8DCL	set	16224
   354  0000                     _PWM8DCH	set	16225
   355  0000                     _PWM8CON	set	16226
   356  0000                     _T2CON	set	16300
   357  0000                     _T2TMR	set	16298
   358  0000                     _T2PR	set	16299
   359  0000                     _T2RST	set	16303
   360  0000                     _T2HLT	set	16301
   361  0000                     _T2CLKCON	set	16302
   362  0000                     _IVTLOCKbits	set	16340
   363  0000                     _IVTLOCK	set	16340
   364  0000                     _INTCON0bits	set	16338
   365  0000                     _TRISD	set	16325
   366  0000                     _TRISC	set	16324
   367  0000                     _TRISB	set	16323
   368  0000                     _TRISA	set	16322
   369  0000                     _TRISE	set	16326
   370  0000                     _LATC	set	16316
   371  0000                     _LATB	set	16315
   372  0000                     _LATA	set	16314
   373  0000                     _LATD	set	16317
   374  0000                     _LATE	set	16318
   375  0000                     _GIE	set	130711
   376                           
   377                           	psect	smallconst
   378  002000                     __psmallconst:
   379                           	opt callstack 0
   380  002000  00                 	db	0
   381  002001                     STR_1:
   382                           
   383                           ; BSR set to: 1
   384  002001  20                 	db	32
   385  002002  48                 	db	72	;'H'
   386  002003  20                 	db	32
   387  002004  25                 	db	37
   388  002005  69                 	db	105	;'i'
   389  002006  2C                 	db	44
   390  002007  20                 	db	32
   391  002008  4D                 	db	77	;'M'
   392  002009  20                 	db	32
   393  00200A  25                 	db	37
   394  00200B  69                 	db	105	;'i'
   395  00200C  20                 	db	32
   396  00200D  20                 	db	32
   397  00200E  20                 	db	32
   398  00200F  20                 	db	32
   399  002010  20                 	db	32
   400  002011  00                 	db	0
   401  002012                     STR_2:
   402                           
   403                           ; BSR set to: 1
   404  002012  20                 	db	32
   405  002013  53                 	db	83	;'S'
   406  002014  63                 	db	99	;'c'
   407  002015  6F                 	db	111	;'o'
   408  002016  72                 	db	114	;'r'
   409  002017  65                 	db	101	;'e'
   410  002018  20                 	db	32
   411  002019  25                 	db	37
   412  00201A  69                 	db	105	;'i'
   413  00201B  20                 	db	32
   414  00201C  25                 	db	37
   415  00201D  69                 	db	105	;'i'
   416  00201E  20                 	db	32
   417  00201F  20                 	db	32
   418  002020  20                 	db	32
   419  002021  20                 	db	32
   420  002022  00                 	db	0
   421  002023                     STR_3:
   422                           
   423                           ; BSR set to: 1
   424  002023  53                 	db	83	;'S'
   425  002024  57                 	db	87	;'W'
   426  002025  20                 	db	32
   427  002026  25                 	db	37
   428  002027  73                 	db	115	;'s'
   429  002028  20                 	db	32
   430  002029  50                 	db	80	;'P'
   431  00202A  6C                 	db	108	;'l'
   432  00202B  61                 	db	97	;'a'
   433  00202C  79                 	db	121	;'y'
   434  00202D  21                 	db	33
   435  00202E  00                 	db	0
   436  00202F                     STR_4:
   437                           
   438                           ; BSR set to: 1
   439  00202F  30                 	db	48	;'0'
   440  002030  2E                 	db	46
   441  002031  32                 	db	50	;'2'
   442  002032  33                 	db	51	;'3'
   443  002033  00                 	db	0
   444  002034                     STR_16:
   445                           
   446                           ; BSR set to: 1
   447  002034  52                 	db	82	;'R'
   448  002035  30                 	db	48	;'0'
   449  002036  0D                 	db	13
   450  002037  00                 	db	0
   451  002038                     STR_8:
   452                           
   453                           ; BSR set to: 1
   454  002038  54                 	db	84	;'T'
   455  002039  32                 	db	50	;'2'
   456  00203A  0D                 	db	13
   457  00203B  00                 	db	0
   458  00203C                     STR_10:
   459                           
   460                           ; BSR set to: 1
   461  00203C  43                 	db	67	;'C'
   462  00203D  34                 	db	52	;'4'
   463  00203E  0D                 	db	13
   464  00203F  00                 	db	0
   465  002040                     STR_12:
   466                           
   467                           ; BSR set to: 1
   468  002040  46                 	db	70	;'F'
   469  002041  34                 	db	52	;'4'
   470  002042  0D                 	db	13
   471  002043  00                 	db	0
   472  002044                     STR_14:
   473                           
   474                           ; BSR set to: 1
   475  002044  4D                 	db	77	;'M'
   476  002045  34                 	db	52	;'4'
   477  002046  0D                 	db	13
   478  002047  00                 	db	0
   479  002048                     STR_6:
   480                           
   481                           ; BSR set to: 1
   482  002048  58                 	db	88	;'X'
   483  002049  51                 	db	81	;'Q'
   484  00204A  0D                 	db	13
   485  00204B  00                 	db	0
   486  00204C                     STR_5:
   487                           
   488                           ; BSR set to: 1
   489  00204C  25                 	db	37
   490  00204D  73                 	db	115	;'s'
   491  00204E  00                 	db	0
   492  0000                     
   493                           ; #config settings
   494  00204F  00                 	db	0	; dummy byte at the end
   495  0000                     
   496                           	psect	cinit
   497  00353A                     __pcinit:
   498                           	opt callstack 0
   499  00353A                     start_initialization:
   500                           	opt callstack 0
   501  00353A                     __initialization:
   502                           	opt callstack 0
   503                           
   504                           ; Initialize objects allocated to BANK1 (47 bytes)
   505                           ; load TBLPTR registers with __pidataBANK1
   506  00353A  0E46               	movlw	low __pidataBANK1
   507  00353C  6EF6               	movwf	tblptrl,c
   508  00353E  0E3B               	movlw	high __pidataBANK1
   509  003540  6EF7               	movwf	tblptrh,c
   510  003542  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   511  003544  6EF8               	movwf	tblptru,c
   512  003546  EE00  F192         	lfsr	0,__pdataBANK1
   513  00354A  EE10 F02F          	lfsr	1,47
   514  00354E                     copy_data0:
   515  00354E  0009               	tblrd		*+
   516  003550  006F FFD7 FFEE     	movff	tablat,postinc0
   517  003556  50E5               	movf	postdec1,w,c
   518  003558  50E1               	movf	fsr1l,w,c
   519  00355A  E1F9               	bnz	copy_data0
   520                           
   521                           ; Initialize objects allocated to BANK0 (2 bytes)
   522                           ; load TBLPTR registers with __pidataBANK0
   523  00355C  0EC0               	movlw	low __pidataBANK0
   524  00355E  6EF6               	movwf	tblptrl,c
   525  003560  0E3F               	movlw	high __pidataBANK0
   526  003562  6EF7               	movwf	tblptrh,c
   527  003564  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   528  003566  6EF8               	movwf	tblptru,c
   529  003568  0009               	tblrd		*+	;fetch initializer
   530  00356A  006F FFD4  F09E    	movff	tablat,__pdataBANK0
   531  003570  0009               	tblrd		*+	;fetch initializer
   532  003572  006F FFD4  F09F    	movff	tablat,__pdataBANK0+1
   533                           
   534                           ; Clear objects allocated to BANK1 (146 bytes)
   535  003578  EE00  F100         	lfsr	0,__pbssBANK1
   536  00357C  0E92               	movlw	146
   537  00357E                     clear_0:
   538  00357E  6AEE               	clrf	postinc0,c
   539  003580  06E8               	decf	wreg,f,c
   540  003582  E1FD               	bnz	clear_0
   541                           
   542                           ; Clear objects allocated to BANK0 (14 bytes)
   543  003584  EE00  F090         	lfsr	0,__pbssBANK0
   544  003588  0E0E               	movlw	14
   545  00358A                     clear_1:
   546  00358A  6AEE               	clrf	postinc0,c
   547  00358C  06E8               	decf	wreg,f,c
   548  00358E  E1FD               	bnz	clear_1
   549                           
   550                           ; Clear objects allocated to COMRAM (5 bytes)
   551  003590  6A5A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   552  003592  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   553  003594  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   554  003596  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   555  003598  6A56               	clrf	__pbssCOMRAM& (0+255),c
   556                           
   557                           ;
   558                           ; Setup IVTBASE
   559                           ;
   560  00359A  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   561  00359C  6ED5               	movwf	213,c
   562  00359E  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   563  0035A0  6ED6               	movwf	214,c
   564  0035A2  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   565  0035A4  6ED7               	movwf	215,c
   566  0035A6                     end_of_initialization:
   567                           	opt callstack 0
   568  0035A6                     __end_of__initialization:
   569                           	opt callstack 0
   570  0035A6  0100               	movlb	0
   571  0035A8  EF7E  F011         	goto	_main	;jump to C main() function
   572                           
   573                           	psect	bssCOMRAM
   574  000056                     __pbssCOMRAM:
   575                           	opt callstack 0
   576  000056                     _flags:
   577                           	opt callstack 0
   578  000056                     	ds	2
   579  000058                     _uart2RxTail:
   580                           	opt callstack 0
   581  000058                     	ds	1
   582  000059                     _uart2RxHead:
   583                           	opt callstack 0
   584  000059                     	ds	1
   585  00005A                     _uart1RxHead:
   586                           	opt callstack 0
   587  00005A                     	ds	1
   588                           
   589                           	psect	bssBANK0
   590  000090                     __pbssBANK0:
   591                           	opt callstack 0
   592  000090                     _prec:
   593                           	opt callstack 0
   594  000090                     	ds	2
   595  000092                     led_lightshow@alive_led:
   596                           	opt callstack 0
   597  000092                     	ds	2
   598  000094                     Digital232_RW@x:
   599                           	opt callstack 0
   600  000094                     	ds	1
   601  000095                     _uart2RxCount:
   602                           	opt callstack 0
   603  000095                     	ds	1
   604  000096                     _uart2TxBufferRemaining:
   605                           	opt callstack 0
   606  000096                     	ds	1
   607  000097                     _uart2TxTail:
   608                           	opt callstack 0
   609  000097                     	ds	1
   610  000098                     _uart2TxHead:
   611                           	opt callstack 0
   612  000098                     	ds	1
   613  000099                     _uart1RxCount:
   614                           	opt callstack 0
   615  000099                     	ds	1
   616  00009A                     _uart1RxTail:
   617                           	opt callstack 0
   618  00009A                     	ds	1
   619  00009B                     _uart1TxBufferRemaining:
   620                           	opt callstack 0
   621  00009B                     	ds	1
   622  00009C                     _uart1TxTail:
   623                           	opt callstack 0
   624  00009C                     	ds	1
   625  00009D                     _uart1TxHead:
   626                           	opt callstack 0
   627  00009D                     	ds	1
   628                           
   629                           	psect	dataBANK0
   630  00009E                     __pdataBANK0:
   631                           	opt callstack 0
   632  00009E                     led_lightshow@LED_UP:
   633                           	opt callstack 0
   634  00009E                     	ds	1
   635  00009F                     led_lightshow@cylon:
   636                           	opt callstack 0
   637  00009F                     	ds	1
   638                           
   639                           	psect	bssBANK1
   640  000100                     __pbssBANK1:
   641                           	opt callstack 0
   642  000100                     _tickCount:
   643                           	opt callstack 0
   644  000100                     	ds	14
   645  00010E                     _uart2RxStatusBuffer:
   646                           	opt callstack 0
   647  00010E                     	ds	8
   648  000116                     _uart2RxBuffer:
   649                           	opt callstack 0
   650  000116                     	ds	8
   651  00011E                     _uart2TxBuffer:
   652                           	opt callstack 0
   653  00011E                     	ds	8
   654  000126                     _uart1RxStatusBuffer:
   655                           	opt callstack 0
   656  000126                     	ds	8
   657  00012E                     _uart1RxBuffer:
   658                           	opt callstack 0
   659  00012E                     	ds	8
   660  000136                     _uart1TxBuffer:
   661                           	opt callstack 0
   662  000136                     	ds	8
   663  00013E                     wdtdelay@dcount:
   664                           	opt callstack 0
   665  00013E                     	ds	4
   666  000142                     _TMR5_InterruptHandler:
   667                           	opt callstack 0
   668  000142                     	ds	3
   669  000145                     _TMR6_InterruptHandler:
   670                           	opt callstack 0
   671  000145                     	ds	3
   672  000148                     _UART2_ErrorHandler:
   673                           	opt callstack 0
   674  000148                     	ds	3
   675  00014B                     _UART2_OverrunErrorHandler:
   676                           	opt callstack 0
   677  00014B                     	ds	3
   678  00014E                     _UART2_FramingErrorHandler:
   679                           	opt callstack 0
   680  00014E                     	ds	3
   681  000151                     _UART1_ErrorHandler:
   682                           	opt callstack 0
   683  000151                     	ds	3
   684  000154                     _UART1_OverrunErrorHandler:
   685                           	opt callstack 0
   686  000154                     	ds	3
   687  000157                     _UART1_FramingErrorHandler:
   688                           	opt callstack 0
   689  000157                     	ds	3
   690  00015A                     _UART1_TxInterruptHandler:
   691                           	opt callstack 0
   692  00015A                     	ds	3
   693  00015D                     _UART1_RxInterruptHandler:
   694                           	opt callstack 0
   695  00015D                     	ds	3
   696  000160                     _UART2_TxInterruptHandler:
   697                           	opt callstack 0
   698  000160                     	ds	3
   699  000163                     _UART2_RxInterruptHandler:
   700                           	opt callstack 0
   701  000163                     	ds	3
   702  000166                     _nout:
   703                           	opt callstack 0
   704  000166                     	ds	2
   705  000168                     _width:
   706                           	opt callstack 0
   707  000168                     	ds	2
   708  00016A                     led_lightshow@j:
   709                           	opt callstack 0
   710  00016A                     	ds	2
   711  00016C                     TMR5_ISR@CountCallBack:
   712                           	opt callstack 0
   713  00016C                     	ds	2
   714  00016E                     _timer5ReloadVal:
   715                           	opt callstack 0
   716  00016E                     	ds	2
   717  000170                     _uart2RxLastError:
   718                           	opt callstack 0
   719  000170                     	ds	1
   720  000171                     _uart1RxLastError:
   721                           	opt callstack 0
   722  000171                     	ds	1
   723  000172                     _dbuf:
   724                           	opt callstack 0
   725  000172                     	ds	32
   726                           
   727                           	psect	dataBANK1
   728  000192                     __pdataBANK1:
   729                           	opt callstack 0
   730  000192                     stoa@F1139:
   731                           	opt callstack 0
   732  000192                     	ds	7
   733  000199                     _sounds:
   734                           	opt callstack 0
   735  000199                     	ds	2
   736  00019B                     _switches:
   737                           	opt callstack 0
   738  00019B                     	ds	2
   739  00019D                     _IO:
   740                           	opt callstack 0
   741  00019D                     	ds	36
   742                           
   743                           	psect	cstackBANK2
   744  000200                     __pcstackBANK2:
   745                           	opt callstack 0
   746  000200                     work_sw@buffer:
   747                           	opt callstack 0
   748                           
   749                           ; 128 bytes @ 0x0
   750  000200                     	ds	128
   751                           
   752                           	psect	cstackBANK0
   753  000060                     __pcstackBANK0:
   754                           	opt callstack 0
   755  000060                     ?_vfprintf:
   756                           	opt callstack 0
   757  000060                     vfprintf@fp:
   758                           	opt callstack 0
   759                           
   760                           ; 2 bytes @ 0x0
   761  000060                     	ds	2
   762  000062                     vfprintf@fmt:
   763                           	opt callstack 0
   764                           
   765                           ; 1 bytes @ 0x2
   766  000062                     	ds	1
   767  000063                     vfprintf@ap:
   768                           	opt callstack 0
   769                           
   770                           ; 1 bytes @ 0x3
   771  000063                     	ds	1
   772  000064                     ?_sprintf:
   773                           	opt callstack 0
   774  000064                     ?_printf:
   775                           	opt callstack 0
   776  000064                     printf@fmt:
   777                           	opt callstack 0
   778  000064                     sprintf@s:
   779                           	opt callstack 0
   780                           
   781                           ; 2 bytes @ 0x4
   782  000064                     	ds	2
   783  000066                     sprintf@fmt:
   784                           	opt callstack 0
   785                           
   786                           ; 1 bytes @ 0x6
   787  000066                     	ds	3
   788  000069                     printf@ap:
   789                           	opt callstack 0
   790                           
   791                           ; 1 bytes @ 0x9
   792  000069                     	ds	1
   793  00006A                     ??_Digital232_RW:
   794                           
   795                           ; 1 bytes @ 0xA
   796  00006A                     	ds	2
   797  00006C                     Digital232_RW@i:
   798                           	opt callstack 0
   799                           
   800                           ; 1 bytes @ 0xC
   801  00006C                     	ds	1
   802  00006D                     Digital232_RW@j:
   803                           	opt callstack 0
   804  00006D                     sprintf@ap:
   805                           	opt callstack 0
   806                           
   807                           ; 1 bytes @ 0xD
   808  00006D                     	ds	1
   809  00006E                     sprintf@f:
   810                           	opt callstack 0
   811                           
   812                           ; 6 bytes @ 0xE
   813  00006E                     	ds	6
   814  000074                     ??_main:
   815                           
   816                           ; 1 bytes @ 0x14
   817  000074                     	ds	2
   818  000076                     main@buffer:
   819                           	opt callstack 0
   820                           
   821                           ; 24 bytes @ 0x16
   822  000076                     	ds	25
   823  00008F                     main@y:
   824                           	opt callstack 0
   825                           
   826                           ; 1 bytes @ 0x2F
   827  00008F                     	ds	1
   828                           
   829                           	psect	cstackCOMRAM
   830  000001                     __pcstackCOMRAM:
   831                           	opt callstack 0
   832  000001                     
   833                           ; 1 bytes @ 0x0
   834  000001                     	ds	2
   835  000003                     TMR6_DefaultInterruptHandler@i:
   836                           	opt callstack 0
   837                           
   838                           ; 1 bytes @ 0x2
   839  000003                     	ds	1
   840  000004                     ??_TMR5_DefaultInterruptHandler:
   841  000004                     TMR5_WriteTimer@timerVal:
   842                           	opt callstack 0
   843                           
   844                           ; 2 bytes @ 0x3
   845  000004                     	ds	1
   846  000005                     
   847                           ; 1 bytes @ 0x4
   848  000005                     	ds	1
   849  000006                     ?_strlen:
   850                           	opt callstack 0
   851  000006                     ?_ADCC_GetConversionResult:
   852                           	opt callstack 0
   853  000006                     ?___awdiv:
   854                           	opt callstack 0
   855  000006                     ?___aodiv:
   856                           	opt callstack 0
   857  000006                     ?___aomod:
   858                           	opt callstack 0
   859  000006                     INTERRUPT_Initialize@state:
   860                           	opt callstack 0
   861  000006                     UART2_Read@readValue:
   862                           	opt callstack 0
   863  000006                     UART2_Write@txData:
   864                           	opt callstack 0
   865  000006                     ADCC_StartConversion@channel:
   866                           	opt callstack 0
   867  000006                     SPI1_Exchange8bit@data:
   868                           	opt callstack 0
   869  000006                     PWM8_LoadDutyValue@dutyValue:
   870                           	opt callstack 0
   871  000006                     once@once_flag:
   872                           	opt callstack 0
   873  000006                     StartTimer@count:
   874                           	opt callstack 0
   875  000006                     ___awdiv@dividend:
   876                           	opt callstack 0
   877  000006                     strlen@s:
   878                           	opt callstack 0
   879  000006                     UART1_SetFramingErrorHandler@interruptHandler:
   880                           	opt callstack 0
   881  000006                     UART1_SetOverrunErrorHandler@interruptHandler:
   882                           	opt callstack 0
   883  000006                     UART1_SetErrorHandler@interruptHandler:
   884                           	opt callstack 0
   885  000006                     UART1_SetRxInterruptHandler@InterruptHandler:
   886                           	opt callstack 0
   887  000006                     UART1_SetTxInterruptHandler@InterruptHandler:
   888                           	opt callstack 0
   889  000006                     UART2_SetFramingErrorHandler@interruptHandler:
   890                           	opt callstack 0
   891  000006                     UART2_SetOverrunErrorHandler@interruptHandler:
   892                           	opt callstack 0
   893  000006                     UART2_SetErrorHandler@interruptHandler:
   894                           	opt callstack 0
   895  000006                     UART2_SetRxInterruptHandler@InterruptHandler:
   896                           	opt callstack 0
   897  000006                     UART2_SetTxInterruptHandler@InterruptHandler:
   898                           	opt callstack 0
   899  000006                     TMR6_SetInterruptHandler@InterruptHandler:
   900                           	opt callstack 0
   901  000006                     TMR5_SetInterruptHandler@InterruptHandler:
   902                           	opt callstack 0
   903  000006                     wdtdelay@delay:
   904                           	opt callstack 0
   905  000006                     ___aodiv@dividend:
   906                           	opt callstack 0
   907  000006                     ___aomod@dividend:
   908                           	opt callstack 0
   909                           
   910                           ; 8 bytes @ 0x5
   911  000006                     	ds	1
   912  000007                     putch@txData:
   913                           	opt callstack 0
   914                           
   915                           ; 1 bytes @ 0x6
   916  000007                     	ds	1
   917  000008                     ??_StartTimer:
   918  000008                     ??_PWM8_LoadDutyValue:
   919  000008                     ??_ADCC_GetConversionResult:
   920  000008                     TimerDone@timer:
   921                           	opt callstack 0
   922  000008                     ___awdiv@divisor:
   923                           	opt callstack 0
   924  000008                     fputc@c:
   925                           	opt callstack 0
   926  000008                     strlen@a:
   927                           	opt callstack 0
   928                           
   929                           ; 2 bytes @ 0x7
   930  000008                     	ds	1
   931  000009                     ??_TMR5_Initialize:
   932  000009                     
   933                           ; 1 bytes @ 0x8
   934  000009                     	ds	1
   935  00000A                     StartTimer@timer:
   936                           	opt callstack 0
   937  00000A                     send_lcd_cmd@cmd:
   938                           	opt callstack 0
   939  00000A                     send_lcd_cmd_long@cmd:
   940                           	opt callstack 0
   941  00000A                     ___awdiv@counter:
   942                           	opt callstack 0
   943  00000A                     eaDogM_WriteString@strPtr:
   944                           	opt callstack 0
   945  00000A                     fputc@fp:
   946                           	opt callstack 0
   947                           
   948                           ; 2 bytes @ 0x9
   949  00000A                     	ds	1
   950  00000B                     eaDogM_WriteCommand@cmd:
   951                           	opt callstack 0
   952  00000B                     ___awdiv@sign:
   953                           	opt callstack 0
   954  00000B                     WaitMs@numMilliseconds:
   955                           	opt callstack 0
   956                           
   957                           ; 2 bytes @ 0xA
   958  00000B                     	ds	1
   959  00000C                     ??_fputc:
   960  00000C                     eaDogM_WriteString@i:
   961                           	opt callstack 0
   962  00000C                     ___awdiv@quotient:
   963                           	opt callstack 0
   964                           
   965                           ; 2 bytes @ 0xB
   966  00000C                     	ds	1
   967  00000D                     eaDogM_WriteString@bytesWritten:
   968                           	opt callstack 0
   969                           
   970                           ; 1 bytes @ 0xC
   971  00000D                     	ds	1
   972  00000E                     eaDogM_WriteStringAtPos@c:
   973                           	opt callstack 0
   974  00000E                     led_lightshow@speed:
   975                           	opt callstack 0
   976  00000E                     ___aodiv@divisor:
   977                           	opt callstack 0
   978  00000E                     ___aomod@divisor:
   979                           	opt callstack 0
   980                           
   981                           ; 8 bytes @ 0xD
   982  00000E                     	ds	1
   983  00000F                     eaDogM_WriteStringAtPos@strPtr:
   984                           	opt callstack 0
   985                           
   986                           ; 2 bytes @ 0xE
   987  00000F                     	ds	1
   988  000010                     ??_led_lightshow:
   989                           
   990                           ; 1 bytes @ 0xF
   991  000010                     	ds	1
   992  000011                     ?_stoa:
   993                           	opt callstack 0
   994  000011                     eaDogM_WriteStringAtPos@r:
   995                           	opt callstack 0
   996  000011                     stoa@fp:
   997                           	opt callstack 0
   998  000011                     fputs@s:
   999                           	opt callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x10
  1002  000011                     	ds	1
  1003  000012                     led_lightshow@seq:
  1004                           	opt callstack 0
  1005                           
  1006                           ; 1 bytes @ 0x11
  1007  000012                     	ds	1
  1008  000013                     stoa@s:
  1009                           	opt callstack 0
  1010  000013                     fputs@fp:
  1011                           	opt callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x12
  1014  000013                     	ds	2
  1015  000015                     ??_stoa:
  1016  000015                     fputs@c:
  1017                           	opt callstack 0
  1018                           
  1019                           ; 1 bytes @ 0x14
  1020  000015                     	ds	1
  1021  000016                     ___aodiv@counter:
  1022                           	opt callstack 0
  1023  000016                     ___aomod@counter:
  1024                           	opt callstack 0
  1025  000016                     fputs@i:
  1026                           	opt callstack 0
  1027  000016                     stoa@nuls:
  1028                           	opt callstack 0
  1029                           
  1030                           ; 7 bytes @ 0x15
  1031  000016                     	ds	1
  1032  000017                     ___aodiv@sign:
  1033                           	opt callstack 0
  1034  000017                     ___aomod@sign:
  1035                           	opt callstack 0
  1036                           
  1037                           ; 1 bytes @ 0x16
  1038  000017                     	ds	1
  1039  000018                     ?_abs:
  1040                           	opt callstack 0
  1041  000018                     ?_pad:
  1042                           	opt callstack 0
  1043  000018                     pad@fp:
  1044                           	opt callstack 0
  1045  000018                     abs@a:
  1046                           	opt callstack 0
  1047  000018                     ___aodiv@quotient:
  1048                           	opt callstack 0
  1049                           
  1050                           ; 8 bytes @ 0x17
  1051  000018                     	ds	2
  1052  00001A                     ??_abs:
  1053  00001A                     pad@buf:
  1054                           	opt callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x19
  1057  00001A                     	ds	2
  1058  00001C                     pad@p:
  1059                           	opt callstack 0
  1060                           
  1061                           ; 2 bytes @ 0x1B
  1062  00001C                     	ds	1
  1063  00001D                     stoa@i:
  1064                           	opt callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x1C
  1067  00001D                     	ds	1
  1068  00001E                     ??_pad:
  1069                           
  1070                           ; 1 bytes @ 0x1D
  1071  00001E                     	ds	1
  1072  00001F                     pad@i:
  1073                           	opt callstack 0
  1074  00001F                     stoa@w:
  1075                           	opt callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x1E
  1078  00001F                     	ds	2
  1079  000021                     pad@w:
  1080                           	opt callstack 0
  1081  000021                     stoa@cp:
  1082                           	opt callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x20
  1085  000021                     	ds	2
  1086  000023                     ?_dtoa:
  1087                           	opt callstack 0
  1088  000023                     dtoa@fp:
  1089                           	opt callstack 0
  1090  000023                     stoa@p:
  1091                           	opt callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x22
  1094  000023                     	ds	2
  1095  000025                     stoa@l:
  1096                           	opt callstack 0
  1097  000025                     dtoa@d:
  1098                           	opt callstack 0
  1099                           
  1100                           ; 8 bytes @ 0x24
  1101  000025                     	ds	8
  1102  00002D                     ??_dtoa:
  1103                           
  1104                           ; 1 bytes @ 0x2C
  1105  00002D                     	ds	8
  1106  000035                     _dtoa$2599:
  1107                           	opt callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x34
  1110  000035                     	ds	2
  1111  000037                     dtoa@p:
  1112                           	opt callstack 0
  1113                           
  1114                           ; 2 bytes @ 0x36
  1115  000037                     	ds	2
  1116  000039                     dtoa@w:
  1117                           	opt callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x38
  1120  000039                     	ds	2
  1121  00003B                     dtoa@s:
  1122                           	opt callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x3A
  1125  00003B                     	ds	2
  1126  00003D                     dtoa@n:
  1127                           	opt callstack 0
  1128                           
  1129                           ; 8 bytes @ 0x3C
  1130  00003D                     	ds	8
  1131  000045                     dtoa@i:
  1132                           	opt callstack 0
  1133                           
  1134                           ; 2 bytes @ 0x44
  1135  000045                     	ds	2
  1136  000047                     ?_vfpfcnvrt:
  1137                           	opt callstack 0
  1138  000047                     vfpfcnvrt@fp:
  1139                           	opt callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x46
  1142  000047                     	ds	2
  1143  000049                     vfpfcnvrt@fmt:
  1144                           	opt callstack 0
  1145                           
  1146                           ; 1 bytes @ 0x48
  1147  000049                     	ds	1
  1148  00004A                     vfpfcnvrt@ap:
  1149                           	opt callstack 0
  1150                           
  1151                           ; 1 bytes @ 0x49
  1152  00004A                     	ds	1
  1153  00004B                     vfpfcnvrt@ll:
  1154                           	opt callstack 0
  1155                           
  1156                           ; 8 bytes @ 0x4A
  1157  00004B                     	ds	8
  1158  000053                     vfpfcnvrt@cp:
  1159                           	opt callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x52
  1162  000053                     	ds	2
  1163  000055                     vfprintf@cfmt:
  1164                           	opt callstack 0
  1165                           
  1166                           ; 1 bytes @ 0x54
  1167  000055                     	ds	1
  1168  000056                     
  1169                           ; 1 bytes @ 0x55
  1170 ;;
  1171 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1172 ;;
  1173 ;; *************** function _main *****************
  1174 ;; Defined at:
  1175 ;;		line 91 in file "main.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;		None
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;  buffer         24   22[BANK0 ] unsigned char [24]
  1180 ;;  y               1   47[BANK0 ] unsigned char 
  1181 ;;  x               1    0        unsigned char 
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 3F/1
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1192 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1193 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1194 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1195 ;;Total ram usage:       28 bytes
  1196 ;; Hardware stack levels required when called:   14
  1197 ;; This function calls:
  1198 ;;		_Digital232_RW
  1199 ;;		_Digital232_init
  1200 ;;		_SYSTEM_Initialize
  1201 ;;		_StartTimer
  1202 ;;		_TimerDone
  1203 ;;		_eaDogM_WriteCommand
  1204 ;;		_eaDogM_WriteStringAtPos
  1205 ;;		_init_display
  1206 ;;		_led_lightshow
  1207 ;;		_once
  1208 ;;		_sprintf
  1209 ;;		_work_sw
  1210 ;; This function is called by:
  1211 ;;		Startup code after reset
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           	psect	text0
  1216  0022FC                     __ptext0:
  1217                           	opt callstack 0
  1218  0022FC                     _main:
  1219                           	opt callstack 17
  1220                           
  1221                           ;incstack = 0
  1222  0022FC  0E00               	movlw	0
  1223  0022FE  0100               	movlb	0	; () banked
  1224  002300  6F8F               	movwf	main@y& (0+255),b
  1225                           
  1226                           ; BSR set to: 0
  1227                           ;main.c: 94:  char buffer[24];;main.c: 96:  SYSTEM_Initialize();
  1228  002302  EC3F  F01D         	call	_SYSTEM_Initialize	;wreg free
  1229                           
  1230                           ; BSR set to: 61
  1231                           ;main.c: 103:  (INTCON0bits.GIEH = 1);
  1232  002306  8ED2               	bsf	210,7,c	;volatile
  1233                           
  1234                           ; BSR set to: 61
  1235                           ;main.c: 106:  (INTCON0bits.GIEL = 1);
  1236  002308  8CD2               	bsf	210,6,c	;volatile
  1237                           
  1238                           ; BSR set to: 61
  1239                           ;main.c: 114:  IO.input_ok = 0;
  1240  00230A  0E00               	movlw	0
  1241  00230C  0101               	movlb	1	; () banked
  1242  00230E  6FA7               	movwf	(_IO+10)& (0+255),b
  1243                           
  1244                           ; BSR set to: 1
  1245                           ;main.c: 115:  IO.output_ok = 0;
  1246  002310  0E00               	movlw	0
  1247  002312  6FA8               	movwf	(_IO+11)& (0+255),b
  1248                           
  1249                           ; BSR set to: 1
  1250                           ;main.c: 116:  IO.d232 = D232_IDLE;
  1251  002314  0E00               	movlw	0
  1252  002316  6FAA               	movwf	(_IO+13)& (0+255),b
  1253                           
  1254                           ; BSR set to: 1
  1255                           ;main.c: 117:  IO.io = IO_IDLE;
  1256  002318  0E00               	movlw	0
  1257  00231A  6FA9               	movwf	(_IO+12)& (0+255),b
  1258                           
  1259                           ; BSR set to: 1
  1260                           ;main.c: 119:  init_display();
  1261  00231C  ECD6  F01A         	call	_init_display	;wreg free
  1262                           
  1263                           ; BSR set to: 1
  1264                           ;main.c: 120:  eaDogM_WriteCommand(0b00001100);
  1265  002320  0E0C               	movlw	12
  1266  002322  ECCD  F01F         	call	_eaDogM_WriteCommand
  1267                           
  1268                           ; BSR set to: 1
  1269                           ;main.c: 122:  StartTimer(TMR_INIT, 1000);
  1270  002326  0E03               	movlw	3
  1271  002328  6E07               	movwf	(StartTimer@count+1)^0,c
  1272  00232A  0EE8               	movlw	232
  1273  00232C  6E06               	movwf	StartTimer@count^0,c
  1274  00232E  0E01               	movlw	1
  1275  002330  EC58  F01D         	call	_StartTimer
  1276                           
  1277                           ;main.c: 123:  Digital232_init();
  1278  002334  EC46  F017         	call	_Digital232_init	;wreg free
  1279                           
  1280                           ;main.c: 124:  sprintf(buffer, "SW %s Play!", "0.23");
  1281  002338  0E76               	movlw	low main@buffer
  1282  00233A  0100               	movlb	0	; () banked
  1283  00233C  6F64               	movwf	sprintf@s& (0+255),b
  1284  00233E  6B65               	clrf	(sprintf@s+1)& (0+255),b
  1285  002340  0E23               	movlw	low STR_3
  1286  002342  6F66               	movwf	sprintf@fmt& (0+255),b
  1287  002344  0E2F               	movlw	low STR_4
  1288  002346  6F67               	movwf	(?_sprintf+3)& (0+255),b
  1289  002348  5167               	movf	(?_sprintf+3)& (0+255),w,b
  1290  00234A  A4D8               	btfss	status,2,c
  1291  00234C  0E20               	movlw	high __smallconst
  1292  00234E  6F68               	movwf	(?_sprintf+4)& (0+255),b
  1293  002350  ECE7  F01B         	call	_sprintf	;wreg free
  1294                           
  1295                           ; BSR set to: 0
  1296                           ;main.c: 125:  eaDogM_WriteStringAtPos(0, 0, buffer);
  1297  002354  0E00               	movlw	0
  1298  002356  6E0E               	movwf	eaDogM_WriteStringAtPos@c^0,c
  1299  002358  0E76               	movlw	low main@buffer
  1300  00235A  6E0F               	movwf	eaDogM_WriteStringAtPos@strPtr^0,c
  1301  00235C  6A10               	clrf	(eaDogM_WriteStringAtPos@strPtr+1)^0,c
  1302  00235E  0E00               	movlw	0
  1303  002360  ECB2  F01E         	call	_eaDogM_WriteStringAtPos
  1304  002364                     l5461:
  1305                           
  1306                           ;main.c: 129:   work_sw();
  1307  002364  EC10  F01A         	call	_work_sw	;wreg free
  1308                           
  1309                           ;main.c: 130:   if (Digital232_RW() && switches->detonator)
  1310  002368  ECC1  F012         	call	_Digital232_RW	;wreg free
  1311  00236C  0900               	iorlw	0
  1312  00236E  A4D8               	btfss	status,2,c
  1313                           
  1314                           ; BSR set to: 1
  1315  002370  A39D               	btfss	_IO& (0+255),1,b
  1316  002372  D007               	goto	l5469
  1317                           
  1318                           ; BSR set to: 1
  1319                           ;main.c: 131:    led_lightshow(IO.seq_value, 1);
  1320  002374  0E00               	movlw	0
  1321  002376  6E0F               	movwf	(led_lightshow@speed+1)^0,c
  1322  002378  0E01               	movlw	1
  1323  00237A  6E0E               	movwf	led_lightshow@speed^0,c
  1324  00237C  51AD               	movf	(_IO+16)& (0+255),w,b
  1325  00237E  ECD1  F016         	call	_led_lightshow
  1326  002382                     l5469:
  1327                           
  1328                           ;main.c: 133:   if (!switches->detonator) {
  1329  002382  0101               	movlb	1	; () banked
  1330  002384  B39D               	btfsc	_IO& (0+255),1,b
  1331  002386  D0C4               	goto	l5525
  1332                           
  1333                           ; BSR set to: 1
  1334                           ;main.c: 134:    IO.outbytes[1] = IO.outbytes[1] | 0x02;
  1335  002388  51A3               	movf	(_IO+6)& (0+255),w,b
  1336  00238A  0902               	iorlw	2
  1337  00238C  6FA3               	movwf	(_IO+6)& (0+255),b
  1338                           
  1339                           ; BSR set to: 1
  1340                           ;main.c: 135:    if (IO.outbytes[2]&0b00000001) {
  1341  00238E  A1A4               	btfss	(_IO+7)& (0+255),0,b
  1342  002390  D040               	goto	l5491
  1343                           
  1344                           ; BSR set to: 1
  1345                           ;main.c: 136:     if (TimerDone(TMR_EXTRA)) {
  1346  002392  0E04               	movlw	4
  1347  002394  EC22  F01E         	call	_TimerDone
  1348  002398  0900               	iorlw	0
  1349  00239A  B4D8               	btfsc	status,2,c
  1350  00239C  D03A               	goto	l5491
  1351                           
  1352                           ;main.c: 137:      IO.outbytes[1] = IO.outbytes[1] | 0x04;
  1353  00239E  0101               	movlb	1	; () banked
  1354  0023A0  51A3               	movf	(_IO+6)& (0+255),w,b
  1355  0023A2  0904               	iorlw	4
  1356  0023A4  6FA3               	movwf	(_IO+6)& (0+255),b
  1357                           
  1358                           ; BSR set to: 1
  1359                           ;main.c: 138:      if (once(&IO.f1))
  1360  0023A6  0EBD               	movlw	low (_IO+32)
  1361  0023A8  6E06               	movwf	once@once_flag^0,c
  1362  0023AA  0E01               	movlw	high (_IO+32)
  1363  0023AC  6E07               	movwf	(once@once_flag+1)^0,c
  1364  0023AE  ECE7  F01D         	call	_once	;wreg free
  1365  0023B2  0900               	iorlw	0
  1366  0023B4  B4D8               	btfsc	status,2,c
  1367  0023B6  D002               	goto	l5483
  1368                           
  1369                           ;main.c: 139:       IO.hits++;
  1370  0023B8  0101               	movlb	1	; () banked
  1371  0023BA  2BAE               	incf	(_IO+17)& (0+255),f,b
  1372  0023BC                     l5483:
  1373                           
  1374                           ;main.c: 140:      if (IO.speed_update && IO.speed-- < 2) {
  1375  0023BC  0101               	movlb	1	; () banked
  1376  0023BE  51BA               	movf	(_IO+29)& (0+255),w,b
  1377  0023C0  B4D8               	btfsc	status,2,c
  1378  0023C2  D024               	goto	l1060
  1379                           
  1380                           ; BSR set to: 1
  1381  0023C4  51B4               	movf	(_IO+23)& (0+255),w,b
  1382  0023C6  0100               	movlb	0	; () banked
  1383  0023C8  6F74               	movwf	??_main& (0+255),b
  1384  0023CA  0101               	movlb	1	; () banked
  1385  0023CC  51B5               	movf	(_IO+24)& (0+255),w,b
  1386  0023CE  0100               	movlb	0	; () banked
  1387  0023D0  6F75               	movwf	(??_main+1)& (0+255),b
  1388  0023D2  0E01               	movlw	1
  1389  0023D4  0101               	movlb	1	; () banked
  1390  0023D6  5FB4               	subwf	(_IO+23)& (0+255),f,b
  1391  0023D8  0E00               	movlw	0
  1392  0023DA  5BB5               	subwfb	(_IO+24)& (0+255),f,b
  1393  0023DC  0100               	movlb	0	; () banked
  1394  0023DE  5175               	movf	(??_main+1)& (0+255),w,b
  1395  0023E0  E115               	bnz	l1060
  1396  0023E2  0E02               	movlw	2
  1397  0023E4  5D74               	subwf	??_main& (0+255),w,b
  1398  0023E6  B0D8               	btfsc	status,0,c
  1399  0023E8  D011               	goto	l1060
  1400                           
  1401                           ; BSR set to: 0
  1402                           ;main.c: 141:       IO.speed = 10;
  1403  0023EA  0E00               	movlw	0
  1404  0023EC  0101               	movlb	1	; () banked
  1405  0023EE  6FB5               	movwf	(_IO+24)& (0+255),b
  1406  0023F0  0E0A               	movlw	10
  1407  0023F2  6FB4               	movwf	(_IO+23)& (0+255),b
  1408                           
  1409                           ;main.c: 142:       IO.sequence_done = 1;
  1410  0023F4  0E01               	movlw	1
  1411  0023F6  6FBB               	movwf	(_IO+30)& (0+255),b
  1412                           
  1413                           ;main.c: 143:       IO.seq_value = 2;
  1414  0023F8  0E02               	movlw	2
  1415  0023FA  6FAD               	movwf	(_IO+16)& (0+255),b
  1416                           
  1417                           ;main.c: 144:       IO.slower = 0;
  1418  0023FC  0E00               	movlw	0
  1419  0023FE  6FB7               	movwf	(_IO+26)& (0+255),b
  1420  002400  0E00               	movlw	0
  1421  002402  6FB6               	movwf	(_IO+25)& (0+255),b
  1422                           
  1423                           ; BSR set to: 1
  1424                           ;main.c: 145:       IO.stats = IO.score;
  1425  002404  C1B0  F1B1         	movff	_IO+19,_IO+20
  1426                           
  1427                           ;main.c: 146:       IO.win = 1;
  1428  002408  0E01               	movlw	1
  1429  00240A  6FBC               	movwf	(_IO+31)& (0+255),b
  1430  00240C                     l1060:
  1431                           
  1432                           ;main.c: 148:      IO.speed_update = 0;
  1433  00240C  0E00               	movlw	0
  1434  00240E  0101               	movlb	1	; () banked
  1435  002410  6FBA               	movwf	(_IO+29)& (0+255),b
  1436  002412                     l5491:
  1437                           
  1438                           ;main.c: 153:    if (IO.outbytes[2]&0b10000000) {
  1439  002412  0101               	movlb	1	; () banked
  1440  002414  AFA4               	btfss	(_IO+7)& (0+255),7,b
  1441  002416  D040               	goto	l5509
  1442                           
  1443                           ; BSR set to: 1
  1444                           ;main.c: 154:     if (TimerDone(TMR_EXTRA)) {
  1445  002418  0E04               	movlw	4
  1446  00241A  EC22  F01E         	call	_TimerDone
  1447  00241E  0900               	iorlw	0
  1448  002420  B4D8               	btfsc	status,2,c
  1449  002422  D03A               	goto	l5509
  1450                           
  1451                           ;main.c: 155:      IO.outbytes[1] = IO.outbytes[1] | 0x01;
  1452  002424  0101               	movlb	1	; () banked
  1453  002426  51A3               	movf	(_IO+6)& (0+255),w,b
  1454  002428  0901               	iorlw	1
  1455  00242A  6FA3               	movwf	(_IO+6)& (0+255),b
  1456                           
  1457                           ; BSR set to: 1
  1458                           ;main.c: 156:      if (once(&IO.f2))
  1459  00242C  0EBE               	movlw	low (_IO+33)
  1460  00242E  6E06               	movwf	once@once_flag^0,c
  1461  002430  0E01               	movlw	high (_IO+33)
  1462  002432  6E07               	movwf	(once@once_flag+1)^0,c
  1463  002434  ECE7  F01D         	call	_once	;wreg free
  1464  002438  0900               	iorlw	0
  1465  00243A  B4D8               	btfsc	status,2,c
  1466  00243C  D002               	goto	l5501
  1467                           
  1468                           ;main.c: 157:       IO.hits++;
  1469  00243E  0101               	movlb	1	; () banked
  1470  002440  2BAE               	incf	(_IO+17)& (0+255),f,b
  1471  002442                     l5501:
  1472                           
  1473                           ;main.c: 158:      if (IO.speed_update && IO.speed-- < 2) {
  1474  002442  0101               	movlb	1	; () banked
  1475  002444  51BA               	movf	(_IO+29)& (0+255),w,b
  1476  002446  B4D8               	btfsc	status,2,c
  1477  002448  D024               	goto	l1064
  1478                           
  1479                           ; BSR set to: 1
  1480  00244A  51B4               	movf	(_IO+23)& (0+255),w,b
  1481  00244C  0100               	movlb	0	; () banked
  1482  00244E  6F74               	movwf	??_main& (0+255),b
  1483  002450  0101               	movlb	1	; () banked
  1484  002452  51B5               	movf	(_IO+24)& (0+255),w,b
  1485  002454  0100               	movlb	0	; () banked
  1486  002456  6F75               	movwf	(??_main+1)& (0+255),b
  1487  002458  0E01               	movlw	1
  1488  00245A  0101               	movlb	1	; () banked
  1489  00245C  5FB4               	subwf	(_IO+23)& (0+255),f,b
  1490  00245E  0E00               	movlw	0
  1491  002460  5BB5               	subwfb	(_IO+24)& (0+255),f,b
  1492  002462  0100               	movlb	0	; () banked
  1493  002464  5175               	movf	(??_main+1)& (0+255),w,b
  1494  002466  E115               	bnz	l1064
  1495  002468  0E02               	movlw	2
  1496  00246A  5D74               	subwf	??_main& (0+255),w,b
  1497  00246C  B0D8               	btfsc	status,0,c
  1498  00246E  D011               	goto	l1064
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;main.c: 159:       IO.speed = 10;
  1502  002470  0E00               	movlw	0
  1503  002472  0101               	movlb	1	; () banked
  1504  002474  6FB5               	movwf	(_IO+24)& (0+255),b
  1505  002476  0E0A               	movlw	10
  1506  002478  6FB4               	movwf	(_IO+23)& (0+255),b
  1507                           
  1508                           ;main.c: 160:       IO.sequence_done = 1;
  1509  00247A  0E01               	movlw	1
  1510  00247C  6FBB               	movwf	(_IO+30)& (0+255),b
  1511                           
  1512                           ;main.c: 161:       IO.seq_value = 2;
  1513  00247E  0E02               	movlw	2
  1514  002480  6FAD               	movwf	(_IO+16)& (0+255),b
  1515                           
  1516                           ;main.c: 162:       IO.slower = 0;
  1517  002482  0E00               	movlw	0
  1518  002484  6FB7               	movwf	(_IO+26)& (0+255),b
  1519  002486  0E00               	movlw	0
  1520  002488  6FB6               	movwf	(_IO+25)& (0+255),b
  1521                           
  1522                           ; BSR set to: 1
  1523                           ;main.c: 163:       IO.stats = IO.score;
  1524  00248A  C1B0  F1B1         	movff	_IO+19,_IO+20
  1525                           
  1526                           ;main.c: 164:       IO.win = 1;
  1527  00248E  0E01               	movlw	1
  1528  002490  6FBC               	movwf	(_IO+31)& (0+255),b
  1529  002492                     l1064:
  1530                           
  1531                           ;main.c: 166:      IO.speed_update = 0;
  1532  002492  0E00               	movlw	0
  1533  002494  0101               	movlb	1	; () banked
  1534  002496  6FBA               	movwf	(_IO+29)& (0+255),b
  1535  002498                     l5509:
  1536                           
  1537                           ;main.c: 171:    if (IO.outbytes[2]&0b01111110) {
  1538  002498  0060  F690  F074   	movff	_IO+7,??_main
  1539  00249E  0E7E               	movlw	126
  1540  0024A0  0100               	movlb	0	; () banked
  1541  0024A2  1774               	andwf	??_main& (0+255),f,b
  1542  0024A4  B4D8               	btfsc	status,2,c
  1543  0024A6  D75E               	goto	l5461
  1544                           
  1545                           ; BSR set to: 0
  1546                           ;main.c: 172:     if (TimerDone(TMR_EXTRA_MISS)) {
  1547  0024A8  0E05               	movlw	5
  1548  0024AA  EC22  F01E         	call	_TimerDone
  1549  0024AE  0900               	iorlw	0
  1550  0024B0  B4D8               	btfsc	status,2,c
  1551  0024B2  D758               	goto	l5461
  1552                           
  1553                           ;main.c: 173:      if (once(&IO.f3)) {
  1554  0024B4  0EBF               	movlw	low (_IO+34)
  1555  0024B6  6E06               	movwf	once@once_flag^0,c
  1556  0024B8  0E01               	movlw	high (_IO+34)
  1557  0024BA  6E07               	movwf	(once@once_flag+1)^0,c
  1558  0024BC  ECE7  F01D         	call	_once	;wreg free
  1559  0024C0  0900               	iorlw	0
  1560  0024C2  B4D8               	btfsc	status,2,c
  1561  0024C4  D74F               	goto	l5461
  1562                           
  1563                           ;main.c: 174:       IO.misses++;
  1564  0024C6  0101               	movlb	1	; () banked
  1565  0024C8  2BAF               	incf	(_IO+18)& (0+255),f,b
  1566                           
  1567                           ; BSR set to: 1
  1568                           ;main.c: 175:       if (IO.speed_update && (IO.misses++ > 26)) {
  1569  0024CA  51BA               	movf	(_IO+29)& (0+255),w,b
  1570  0024CC  B4D8               	btfsc	status,2,c
  1571  0024CE  D74A               	goto	l5461
  1572                           
  1573                           ; BSR set to: 1
  1574  0024D0  EE20  F1AF         	lfsr	2,_IO+18
  1575  0024D4  006F FF7C  F074    	movff	indf2,??_main
  1576  0024DA  0E01               	movlw	1
  1577  0024DC  26DF               	addwf	indf2,f,c
  1578  0024DE  0E1A               	movlw	26
  1579  0024E0  0100               	movlb	0	; () banked
  1580  0024E2  6574               	cpfsgt	??_main& (0+255),b
  1581  0024E4  D73F               	goto	l5461
  1582                           
  1583                           ; BSR set to: 0
  1584                           ;main.c: 176:        if (IO.score-- < 10)
  1585  0024E6  EE20  F1B0         	lfsr	2,_IO+19
  1586  0024EA  006F FF7C  F074    	movff	indf2,??_main
  1587  0024F0  0E01               	movlw	1
  1588  0024F2  5EDF               	subwf	indf2,f,c
  1589  0024F4  0E0A               	movlw	10
  1590  0024F6  6174               	cpfslt	??_main& (0+255),b
  1591  0024F8  D003               	goto	l1069
  1592                           
  1593                           ; BSR set to: 0
  1594                           ;main.c: 177:         IO.score = 10;
  1595  0024FA  0E0A               	movlw	10
  1596  0024FC  0101               	movlb	1	; () banked
  1597  0024FE  6FB0               	movwf	(_IO+19)& (0+255),b
  1598  002500                     l1069:
  1599                           
  1600                           ;main.c: 179:        IO.slower = 10;
  1601  002500  0E00               	movlw	0
  1602  002502  0101               	movlb	1	; () banked
  1603  002504  6FB7               	movwf	(_IO+26)& (0+255),b
  1604  002506  0E0A               	movlw	10
  1605  002508  6FB6               	movwf	(_IO+25)& (0+255),b
  1606                           
  1607                           ;main.c: 180:        IO.speed_update = 0;
  1608  00250A  0E00               	movlw	0
  1609  00250C  6FBA               	movwf	(_IO+29)& (0+255),b
  1610                           
  1611                           ;main.c: 185:   } else {
  1612                           
  1613                           ;main.c: 184:    }
  1614  00250E  D72A               	goto	l5461
  1615  002510                     l5525:
  1616                           
  1617                           ; BSR set to: 1
  1618                           ;main.c: 186:    StartTimer(TMR_EXTRA, 500);
  1619  002510  0E01               	movlw	1
  1620  002512  6E07               	movwf	(StartTimer@count+1)^0,c
  1621  002514  0EF4               	movlw	244
  1622  002516  6E06               	movwf	StartTimer@count^0,c
  1623  002518  0E04               	movlw	4
  1624  00251A  EC58  F01D         	call	_StartTimer
  1625                           
  1626                           ;main.c: 187:    StartTimer(TMR_EXTRA_MISS, 25);
  1627  00251E  0E00               	movlw	0
  1628  002520  6E07               	movwf	(StartTimer@count+1)^0,c
  1629  002522  0E19               	movlw	25
  1630  002524  6E06               	movwf	StartTimer@count^0,c
  1631  002526  0E05               	movlw	5
  1632  002528  EC58  F01D         	call	_StartTimer
  1633                           
  1634                           ;main.c: 188:    IO.outbytes[1] = IO.outbytes[1] & (~0x02);
  1635  00252C  0101               	movlb	1	; () banked
  1636  00252E  51A3               	movf	(_IO+6)& (0+255),w,b
  1637  002530  0BFD               	andlw	253
  1638  002532  6FA3               	movwf	(_IO+6)& (0+255),b
  1639                           
  1640                           ; BSR set to: 1
  1641                           ;main.c: 189:    IO.outbytes[1] = IO.outbytes[1] & (~0x04);
  1642  002534  51A3               	movf	(_IO+6)& (0+255),w,b
  1643  002536  0BFB               	andlw	251
  1644  002538  6FA3               	movwf	(_IO+6)& (0+255),b
  1645                           
  1646                           ; BSR set to: 1
  1647                           ;main.c: 190:    IO.outbytes[1] = IO.outbytes[1] & (~0x01);
  1648  00253A  51A3               	movf	(_IO+6)& (0+255),w,b
  1649  00253C  0BFE               	andlw	254
  1650  00253E  6FA3               	movwf	(_IO+6)& (0+255),b
  1651                           
  1652                           ; BSR set to: 1
  1653                           ;main.c: 191:    IO.speed_update = 1;
  1654  002540  0E01               	movlw	1
  1655  002542  6FBA               	movwf	(_IO+29)& (0+255),b
  1656                           
  1657                           ; BSR set to: 1
  1658                           ;main.c: 192:    IO.f1 = 1;
  1659  002544  0E01               	movlw	1
  1660  002546  6FBD               	movwf	(_IO+32)& (0+255),b
  1661                           
  1662                           ; BSR set to: 1
  1663                           ;main.c: 193:    IO.f2 = 1;
  1664  002548  0E01               	movlw	1
  1665  00254A  6FBE               	movwf	(_IO+33)& (0+255),b
  1666                           
  1667                           ; BSR set to: 1
  1668                           ;main.c: 194:    IO.f3 = 1;
  1669  00254C  0E01               	movlw	1
  1670  00254E  6FBF               	movwf	(_IO+34)& (0+255),b
  1671                           
  1672                           ; BSR set to: 1
  1673                           ;main.c: 195:    if (TimerDone(TMR_SEQ)) {
  1674  002550  0E06               	movlw	6
  1675  002552  EC22  F01E         	call	_TimerDone
  1676  002556  0900               	iorlw	0
  1677  002558  B4D8               	btfsc	status,2,c
  1678  00255A  D704               	goto	l5461
  1679                           
  1680                           ;main.c: 196:     IO.seq_value = 0;
  1681  00255C  0E00               	movlw	0
  1682  00255E  0101               	movlb	1	; () banked
  1683  002560  6FAD               	movwf	(_IO+16)& (0+255),b
  1684                           
  1685                           ;main.c: 197:     if (IO.win) {
  1686  002562  51BC               	movf	(_IO+31)& (0+255),w,b
  1687  002564  B4D8               	btfsc	status,2,c
  1688  002566  D6FE               	goto	l5461
  1689                           
  1690                           ; BSR set to: 1
  1691                           ;main.c: 198:      IO.win = 0;
  1692  002568  0E00               	movlw	0
  1693  00256A  6FBC               	movwf	(_IO+31)& (0+255),b
  1694                           
  1695                           ;main.c: 199:      IO.hits = 0;
  1696  00256C  0E00               	movlw	0
  1697  00256E  6FAE               	movwf	(_IO+17)& (0+255),b
  1698                           
  1699                           ;main.c: 200:      IO.misses = 0;
  1700  002570  0E00               	movlw	0
  1701  002572  6FAF               	movwf	(_IO+18)& (0+255),b
  1702                           
  1703                           ;main.c: 201:      IO.clock = 0;
  1704  002574  0E00               	movlw	0
  1705  002576  6FB9               	movwf	(_IO+28)& (0+255),b
  1706  002578  0E00               	movlw	0
  1707  00257A  6FB8               	movwf	(_IO+27)& (0+255),b
  1708                           
  1709                           ;main.c: 202:      IO.score = 50;
  1710  00257C  0E32               	movlw	50
  1711  00257E  6FB0               	movwf	(_IO+19)& (0+255),b
  1712  002580  D6F1               	goto	l5461
  1713  002582                     __end_of_main:
  1714                           	opt callstack 0
  1715                           
  1716 ;; *************** function _work_sw *****************
  1717 ;; Defined at:
  1718 ;;		line 74 in file "main.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;		None
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  buffer        128    0[BANK2 ] unsigned char [64][2]
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      void 
  1725 ;; Registers used:
  1726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1733 ;;      Locals:         0       0       0     128       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1735 ;;      Totals:         0       0       0     128       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1736 ;;Total ram usage:      128 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; Hardware stack levels required when called:   13
  1739 ;; This function calls:
  1740 ;;		_StartTimer
  1741 ;;		_TimerDone
  1742 ;;		_eaDogM_WriteStringAtPos
  1743 ;;		_sprintf
  1744 ;; This function is called by:
  1745 ;;		_main
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           	psect	text1
  1750  003420                     __ptext1:
  1751                           	opt callstack 0
  1752  003420                     _work_sw:
  1753                           	opt callstack 17
  1754                           
  1755                           ;main.c: 76:  char buffer[2][64];;main.c: 77:  if (TimerDone(TMR_INIT)) {
  1756                           
  1757                           ; BSR set to: 1
  1758                           ;incstack = 0
  1759  003420  0E01               	movlw	1
  1760  003422  EC22  F01E         	call	_TimerDone
  1761  003426  0900               	iorlw	0
  1762  003428  B4D8               	btfsc	status,2,c
  1763  00342A  0012               	return	
  1764                           
  1765                           ;main.c: 78:   IO.clock++;
  1766  00342C  0101               	movlb	1	; () banked
  1767  00342E  4BB8               	infsnz	(_IO+27)& (0+255),f,b
  1768  003430  2BB9               	incf	(_IO+28)& (0+255),f,b
  1769                           
  1770                           ; BSR set to: 1
  1771                           ;main.c: 79:   sprintf(buffer[0], " H %i, M %i     ", IO.hits, IO.misses);
  1772  003432  0E00               	movlw	low work_sw@buffer
  1773  003434  0100               	movlb	0	; () banked
  1774  003436  6F64               	movwf	sprintf@s& (0+255),b
  1775  003438  0E02               	movlw	high work_sw@buffer
  1776  00343A  6F65               	movwf	(sprintf@s+1)& (0+255),b
  1777  00343C  0E01               	movlw	low STR_1
  1778  00343E  6F66               	movwf	sprintf@fmt& (0+255),b
  1779  003440  0060  F6B8  F067   	movff	_IO+17,?_sprintf+3
  1780  003446  6B68               	clrf	(?_sprintf+4)& (0+255),b
  1781  003448  0060  F6BC  F069   	movff	_IO+18,?_sprintf+5
  1782  00344E  6B6A               	clrf	(?_sprintf+6)& (0+255),b
  1783  003450  ECE7  F01B         	call	_sprintf	;wreg free
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;main.c: 80:   sprintf(buffer[1], " Score %i %i    ", IO.score, IO.clock);
  1787  003454  0E40               	movlw	low (work_sw@buffer+64)
  1788  003456  6F64               	movwf	sprintf@s& (0+255),b
  1789  003458  0E02               	movlw	high (work_sw@buffer+64)
  1790  00345A  6F65               	movwf	(sprintf@s+1)& (0+255),b
  1791  00345C  0E12               	movlw	low STR_2
  1792  00345E  6F66               	movwf	sprintf@fmt& (0+255),b
  1793  003460  0060  F6C0  F067   	movff	_IO+19,?_sprintf+3
  1794  003466  6B68               	clrf	(?_sprintf+4)& (0+255),b
  1795  003468  0060  F6E0  F069   	movff	_IO+27,?_sprintf+5
  1796  00346E  0060  F6E4  F06A   	movff	_IO+28,?_sprintf+6
  1797  003474  ECE7  F01B         	call	_sprintf	;wreg free
  1798                           
  1799                           ; BSR set to: 0
  1800                           ;main.c: 81:   buffer[1][16] = 0;
  1801  003478  0E00               	movlw	0
  1802  00347A  0102               	movlb	2	; () banked
  1803  00347C  6F50               	movwf	(work_sw@buffer+80)& (0+255),b
  1804                           
  1805                           ; BSR set to: 2
  1806                           ;main.c: 82:   eaDogM_WriteStringAtPos(1, 0, buffer[0]);
  1807  00347E  0E00               	movlw	0
  1808  003480  6E0E               	movwf	eaDogM_WriteStringAtPos@c^0,c
  1809  003482  0E00               	movlw	low work_sw@buffer
  1810  003484  6E0F               	movwf	eaDogM_WriteStringAtPos@strPtr^0,c
  1811  003486  0E02               	movlw	high work_sw@buffer
  1812  003488  6E10               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)^0,c
  1813  00348A  0E01               	movlw	1
  1814  00348C  ECB2  F01E         	call	_eaDogM_WriteStringAtPos
  1815                           
  1816                           ;main.c: 83:   eaDogM_WriteStringAtPos(2, 0, buffer[1]);
  1817  003490  0E00               	movlw	0
  1818  003492  6E0E               	movwf	eaDogM_WriteStringAtPos@c^0,c
  1819  003494  0E40               	movlw	low (work_sw@buffer+64)
  1820  003496  6E0F               	movwf	eaDogM_WriteStringAtPos@strPtr^0,c
  1821  003498  0E02               	movlw	high (work_sw@buffer+64)
  1822  00349A  6E10               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)^0,c
  1823  00349C  0E02               	movlw	2
  1824  00349E  ECB2  F01E         	call	_eaDogM_WriteStringAtPos
  1825                           
  1826                           ;main.c: 84:   StartTimer(TMR_INIT, 500);
  1827  0034A2  0E01               	movlw	1
  1828  0034A4  6E07               	movwf	(StartTimer@count+1)^0,c
  1829  0034A6  0EF4               	movlw	244
  1830  0034A8  6E06               	movwf	StartTimer@count^0,c
  1831  0034AA  0E01               	movlw	1
  1832  0034AC  EC58  F01D         	call	_StartTimer
  1833  0034B0  0012               	return		;funcret
  1834  0034B2                     __end_of_work_sw:
  1835                           	opt callstack 0
  1836                           
  1837 ;; *************** function _sprintf *****************
  1838 ;; Defined at:
  1839 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;  s               2    4[BANK0 ] PTR unsigned char 
  1842 ;;		 -> main@buffer(24), work_sw@buffer(128), 
  1843 ;;  fmt             1    6[BANK0 ] PTR const unsigned char 
  1844 ;;		 -> STR_3(12), STR_2(17), STR_1(17), 
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  f               6   14[BANK0 ] struct _IO_FILE
  1847 ;;  ret             2    0        int 
  1848 ;;  ap              1   13[BANK0 ] PTR void [1]
  1849 ;;		 -> ?_printf(2), ?_sprintf(2), 
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  2    4[BANK0 ] int 
  1852 ;; Registers used:
  1853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1854 ;; Tracked objects:
  1855 ;;		On entry : 3F/0
  1856 ;;		On exit  : 3F/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1859 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1860 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1862 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1863 ;;Total ram usage:       16 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; Hardware stack levels required when called:   12
  1866 ;; This function calls:
  1867 ;;		_vfprintf
  1868 ;; This function is called by:
  1869 ;;		_work_sw
  1870 ;;		_main
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           	psect	text2
  1875  0037CE                     __ptext2:
  1876                           	opt callstack 0
  1877  0037CE                     _sprintf:
  1878                           	opt callstack 17
  1879                           
  1880                           ; BSR set to: 0
  1881                           
  1882                           ;incstack = 0
  1883  0037CE  0E67               	movlw	low (?_sprintf+3)
  1884  0037D0  6F6D               	movwf	sprintf@ap& (0+255),b
  1885  0037D2  0060  F190  F06E   	movff	sprintf@s,sprintf@f
  1886  0037D8  0060  F194  F06F   	movff	sprintf@s+1,sprintf@f+1
  1887                           
  1888                           ; BSR set to: 0
  1889  0037DE  0E00               	movlw	0
  1890  0037E0  6F71               	movwf	(sprintf@f+3)& (0+255),b
  1891  0037E2  0E00               	movlw	0
  1892  0037E4  6F70               	movwf	(sprintf@f+2)& (0+255),b
  1893                           
  1894                           ; BSR set to: 0
  1895  0037E6  0E00               	movlw	0
  1896  0037E8  6F73               	movwf	(sprintf@f+5)& (0+255),b
  1897  0037EA  0E00               	movlw	0
  1898  0037EC  6F72               	movwf	(sprintf@f+4)& (0+255),b
  1899                           
  1900                           ; BSR set to: 0
  1901  0037EE  0E6E               	movlw	low sprintf@f
  1902  0037F0  6F60               	movwf	vfprintf@fp& (0+255),b
  1903  0037F2  6B61               	clrf	(vfprintf@fp+1)& (0+255),b
  1904  0037F4  0060  F198  F062   	movff	sprintf@fmt,vfprintf@fmt
  1905  0037FA  0E6D               	movlw	low sprintf@ap
  1906  0037FC  6F63               	movwf	vfprintf@ap& (0+255),b
  1907  0037FE  EC6B  F01B         	call	_vfprintf	;wreg free
  1908                           
  1909                           ; BSR set to: 1
  1910  003802  0100               	movlb	0	; () banked
  1911  003804  5170               	movf	(sprintf@f+2)& (0+255),w,b
  1912  003806  2564               	addwf	sprintf@s& (0+255),w,b
  1913  003808  6ED9               	movwf	fsr2l,c
  1914  00380A  5171               	movf	(sprintf@f+3)& (0+255),w,b
  1915  00380C  2165               	addwfc	(sprintf@s+1)& (0+255),w,b
  1916  00380E  6EDA               	movwf	fsr2h,c
  1917  003810  0E00               	movlw	0
  1918  003812  6EDF               	movwf	indf2,c
  1919                           
  1920                           ; BSR set to: 0
  1921  003814  0012               	return		;funcret
  1922  003816                     __end_of_sprintf:
  1923                           	opt callstack 0
  1924                           
  1925 ;; *************** function _eaDogM_WriteStringAtPos *****************
  1926 ;; Defined at:
  1927 ;;		line 122 in file "eadog.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;  r               1    wreg     const unsigned char 
  1930 ;;  c               1   13[COMRAM] const unsigned char 
  1931 ;;  strPtr          2   14[COMRAM] PTR unsigned char 
  1932 ;;		 -> main@buffer(24), work_sw@buffer(128), 
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;  r               1   16[COMRAM] const unsigned char 
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      void 
  1937 ;; Registers used:
  1938 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1944 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1945 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1947 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1948 ;;Total ram usage:        4 bytes
  1949 ;; Hardware stack levels used:    1
  1950 ;; Hardware stack levels required when called:    6
  1951 ;; This function calls:
  1952 ;;		_eaDogM_WriteString
  1953 ;;		_send_lcd_cmd
  1954 ;; This function is called by:
  1955 ;;		_work_sw
  1956 ;;		_main
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           	psect	text3
  1961  003D64                     __ptext3:
  1962                           	opt callstack 0
  1963  003D64                     _eaDogM_WriteStringAtPos:
  1964                           	opt callstack 23
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;incstack = 0
  1968                           ;eaDogM_WriteStringAtPos@r stored from wreg
  1969  003D64  6E11               	movwf	eaDogM_WriteStringAtPos@r^0,c
  1970                           
  1971                           ;eadog.c: 122: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 123: {;eadog.c: 124:  send_lcd_cmd((0b10000000 + (r * 16) + c));
  1972  003D66  5011               	movf	eaDogM_WriteStringAtPos@r^0,w,c
  1973  003D68  0D10               	mullw	16
  1974  003D6A  50F3               	movf	243,w,c
  1975  003D6C  240E               	addwf	eaDogM_WriteStringAtPos@c^0,w,c
  1976  003D6E  0F80               	addlw	128
  1977  003D70  ECEB  F01C         	call	_send_lcd_cmd
  1978                           
  1979                           ; BSR set to: 1
  1980                           ;eadog.c: 125:  eaDogM_WriteString(strPtr);
  1981  003D74  0060  F03C  F00A   	movff	eaDogM_WriteStringAtPos@strPtr,eaDogM_WriteString@strPtr
  1982  003D7A  0060  F040  F00B   	movff	eaDogM_WriteStringAtPos@strPtr+1,eaDogM_WriteString@strPtr+1
  1983  003D80  EC0A  F01B         	call	_eaDogM_WriteString	;wreg free
  1984  003D84  0012               	return		;funcret
  1985  003D86                     __end_of_eaDogM_WriteStringAtPos:
  1986                           	opt callstack 0
  1987                           
  1988 ;; *************** function _eaDogM_WriteString *****************
  1989 ;; Defined at:
  1990 ;;		line 106 in file "eadog.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;  strPtr          2    9[COMRAM] PTR unsigned char 
  1993 ;;		 -> main@buffer(24), work_sw@buffer(128), 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;  bytesWritten    1   12[COMRAM] unsigned char 
  1996 ;;  i               1   11[COMRAM] unsigned char 
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  1    wreg      void 
  1999 ;; Registers used:
  2000 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2001 ;; Tracked objects:
  2002 ;;		On entry : 3F/1
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2006 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2007 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2009 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2010 ;;Total ram usage:        4 bytes
  2011 ;; Hardware stack levels used:    1
  2012 ;; Hardware stack levels required when called:    5
  2013 ;; This function calls:
  2014 ;;		_SPI1_Exchange8bit
  2015 ;;		_strlen
  2016 ;;		_wdtdelay
  2017 ;; This function is called by:
  2018 ;;		_eaDogM_WriteStringAtPos
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           	psect	text4
  2023  003614                     __ptext4:
  2024                           	opt callstack 0
  2025  003614                     _eaDogM_WriteString:
  2026                           	opt callstack 23
  2027                           
  2028                           ; BSR set to: 1
  2029                           ;eadog.c: 106: void eaDogM_WriteString(char *strPtr);eadog.c: 107: {;eadog.c: 108:  uint
      +                          8_t i = strlen(strPtr);
  2030                           
  2031                           ;incstack = 0
  2032  003614  0060  F028  F006   	movff	eaDogM_WriteString@strPtr,strlen@s
  2033  00361A  0060  F02C  F007   	movff	eaDogM_WriteString@strPtr+1,strlen@s+1
  2034  003620  EC99  F01B         	call	_strlen	;wreg free
  2035  003624  5006               	movf	?_strlen^0,w,c
  2036  003626  6E0C               	movwf	eaDogM_WriteString@i^0,c
  2037                           
  2038                           ;eadog.c: 109:  uint8_t bytesWritten = 0;
  2039  003628  0E00               	movlw	0
  2040  00362A  6E0D               	movwf	eaDogM_WriteString@bytesWritten^0,c
  2041  00362C  82BC               	bsf	188,1,c	;volatile
  2042  00362E  94BC               	bcf	188,2,c	;volatile
  2043                           
  2044                           ;eadog.c: 113:  if (i > 64) strPtr[64] = 0;
  2045  003630  0E40               	movlw	64
  2046  003632  640C               	cpfsgt	eaDogM_WriteString@i^0,c
  2047  003634  D01D               	goto	l4903
  2048  003636  EE20 F040          	lfsr	2,64
  2049  00363A  500A               	movf	eaDogM_WriteString@strPtr^0,w,c
  2050  00363C  26D9               	addwf	fsr2l,f,c
  2051  00363E  500B               	movf	(eaDogM_WriteString@strPtr+1)^0,w,c
  2052  003640  22DA               	addwfc	fsr2h,f,c
  2053  003642  0E00               	movlw	0
  2054  003644  6EDF               	movwf	indf2,c
  2055  003646  D014               	goto	l4903
  2056  003648                     l4897:
  2057                           
  2058                           ;eadog.c: 116:   wdtdelay(9);
  2059  003648  0E09               	movlw	9
  2060  00364A  6E06               	movwf	wdtdelay@delay^0,c
  2061  00364C  0E00               	movlw	0
  2062  00364E  6E07               	movwf	(wdtdelay@delay+1)^0,c
  2063  003650  0E00               	movlw	0
  2064  003652  6E08               	movwf	(wdtdelay@delay+2)^0,c
  2065  003654  0E00               	movlw	0
  2066  003656  6E09               	movwf	(wdtdelay@delay+3)^0,c
  2067  003658  ECCE  F01C         	call	_wdtdelay	;wreg free
  2068                           
  2069                           ; BSR set to: 1
  2070                           ;eadog.c: 117:   SPI1_Exchange8bit(strPtr[bytesWritten]);
  2071  00365C  500D               	movf	eaDogM_WriteString@bytesWritten^0,w,c
  2072  00365E  240A               	addwf	eaDogM_WriteString@strPtr^0,w,c
  2073  003660  6ED9               	movwf	fsr2l,c
  2074  003662  0E00               	movlw	0
  2075  003664  200B               	addwfc	(eaDogM_WriteString@strPtr+1)^0,w,c
  2076  003666  6EDA               	movwf	fsr2h,c
  2077  003668  50DF               	movf	indf2,w,c
  2078  00366A  EC10  F01F         	call	_SPI1_Exchange8bit
  2079                           
  2080                           ; BSR set to: 61
  2081                           ;eadog.c: 118:   bytesWritten++;
  2082  00366E  2A0D               	incf	eaDogM_WriteString@bytesWritten^0,f,c
  2083  003670                     l4903:
  2084                           
  2085                           ;eadog.c: 115:  while (bytesWritten < i) {
  2086  003670  500C               	movf	eaDogM_WriteString@i^0,w,c
  2087  003672  5C0D               	subwf	eaDogM_WriteString@bytesWritten^0,w,c
  2088  003674  B0D8               	btfsc	status,0,c
  2089  003676  0012               	return	
  2090  003678  D7E7               	goto	l4897
  2091  00367A                     __end_of_eaDogM_WriteString:
  2092                           	opt callstack 0
  2093                           
  2094 ;; *************** function _once *****************
  2095 ;; Defined at:
  2096 ;;		line 190 in file "d232.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;  once_flag       2    5[COMRAM] PTR _Bool 
  2099 ;;		 -> IO(36), 
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;		None
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      _Bool 
  2104 ;; Registers used:
  2105 ;;		wreg, fsr2l, fsr2h, status,2
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/1
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2111 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2114 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2115 ;;Total ram usage:        2 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; Hardware stack levels required when called:    4
  2118 ;; This function calls:
  2119 ;;		Nothing
  2120 ;; This function is called by:
  2121 ;;		_main
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           	psect	text5
  2126  003BCE                     __ptext5:
  2127                           	opt callstack 0
  2128  003BCE                     _once:
  2129                           	opt callstack 26
  2130                           
  2131                           ;d232.c: 190: _Bool once(_Bool *once_flag);d232.c: 191: {;d232.c: 192:  if (*once_flag) 
      +                          {
  2132                           
  2133                           ;incstack = 0
  2134  003BCE  0060  F01B  FFD9   	movff	once@once_flag,fsr2l
  2135  003BD4  0060  F01F  FFDA   	movff	once@once_flag+1,fsr2h
  2136  003BDA  50DF               	movf	indf2,w,c
  2137  003BDC  B4D8               	btfsc	status,2,c
  2138  003BDE  D00A               	goto	l5429
  2139                           
  2140                           ;d232.c: 193:   *once_flag = 0;
  2141  003BE0  0060  F01B  FFD9   	movff	once@once_flag,fsr2l
  2142  003BE6  0060  F01F  FFDA   	movff	once@once_flag+1,fsr2h
  2143  003BEC  0E00               	movlw	0
  2144  003BEE  6EDF               	movwf	indf2,c
  2145                           
  2146                           ;d232.c: 194:   return 1;
  2147  003BF0  0E01               	movlw	1
  2148  003BF2  0012               	return	
  2149  003BF4                     l5429:
  2150                           
  2151                           ;d232.c: 197:   return 0;
  2152  003BF4  0E00               	movlw	0
  2153  003BF6  0012               	return		;funcret
  2154  003BF8                     __end_of_once:
  2155                           	opt callstack 0
  2156                           
  2157 ;; *************** function _led_lightshow *****************
  2158 ;; Defined at:
  2159 ;;		line 142 in file "d232.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;  seq             1    wreg     unsigned char 
  2162 ;;  speed           2   13[COMRAM] unsigned short 
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;  seq             1   17[COMRAM] unsigned char 
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  1    wreg      void 
  2167 ;; Registers used:
  2168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2169 ;; Tracked objects:
  2170 ;;		On entry : 3F/1
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2174 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2175 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2176 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2177 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2178 ;;Total ram usage:        5 bytes
  2179 ;; Hardware stack levels used:    1
  2180 ;; Hardware stack levels required when called:    5
  2181 ;; This function calls:
  2182 ;;		_StartTimer
  2183 ;;		___awdiv
  2184 ;; This function is called by:
  2185 ;;		_main
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           	psect	text6
  2190  002DA2                     __ptext6:
  2191                           	opt callstack 0
  2192  002DA2                     _led_lightshow:
  2193                           	opt callstack 25
  2194                           
  2195                           ;incstack = 0
  2196                           ;led_lightshow@seq stored from wreg
  2197  002DA2  6E12               	movwf	led_lightshow@seq^0,c
  2198                           
  2199                           ;d232.c: 142: void led_lightshow(uint8_t seq, uint16_t speed);d232.c: 143: {;d232.c: 144
      +                          :  static uint16_t j = 0;;d232.c: 145:  static uint8_t cylon = 0xff;;d232.c: 146:  stati
      +                          c int16_t alive_led = 0;;d232.c: 147:  static _Bool LED_UP = 1;;d232.c: 149:  if (seq ==
      +                           1) {
  2200  002DA4  0412               	decf	led_lightshow@seq^0,w,c
  2201  002DA6  A4D8               	btfss	status,2,c
  2202  002DA8  D003               	goto	l5381
  2203                           
  2204                           ;d232.c: 150:   IO.outbytes[2] = IO.inbytes[0];
  2205  002DAA  C19D  F1A4         	movff	_IO,_IO+7
  2206                           
  2207                           ;d232.c: 151:   return;
  2208  002DAE  0012               	return	
  2209  002DB0                     l5381:
  2210                           
  2211                           ;d232.c: 154:  if (seq == 2) {
  2212  002DB0  0E02               	movlw	2
  2213  002DB2  1812               	xorwf	led_lightshow@seq^0,w,c
  2214  002DB4  A4D8               	btfss	status,2,c
  2215  002DB6  D010               	goto	l5393
  2216                           
  2217                           ;d232.c: 155:   if (IO.sequence_done) {
  2218  002DB8  0101               	movlb	1	; () banked
  2219  002DBA  51BB               	movf	(_IO+30)& (0+255),w,b
  2220  002DBC  B4D8               	btfsc	status,2,c
  2221  002DBE  D009               	goto	l5389
  2222                           
  2223                           ; BSR set to: 1
  2224                           ;d232.c: 156:    IO.sequence_done = 0;
  2225  002DC0  0E00               	movlw	0
  2226  002DC2  6FBB               	movwf	(_IO+30)& (0+255),b
  2227                           
  2228                           ; BSR set to: 1
  2229                           ;d232.c: 157:    StartTimer(TMR_SEQ, 30000);
  2230  002DC4  0E75               	movlw	117
  2231  002DC6  6E07               	movwf	(StartTimer@count+1)^0,c
  2232  002DC8  0E30               	movlw	48
  2233  002DCA  6E06               	movwf	StartTimer@count^0,c
  2234  002DCC  0E06               	movlw	6
  2235  002DCE  EC58  F01D         	call	_StartTimer
  2236  002DD2                     l5389:
  2237                           
  2238                           ;d232.c: 159:   IO.outbytes[2]++;
  2239  002DD2  0101               	movlb	1	; () banked
  2240  002DD4  2BA4               	incf	(_IO+7)& (0+255),f,b
  2241  002DD6  0012               	return	
  2242  002DD8                     l5393:
  2243                           
  2244                           ;d232.c: 163:  if (j++ >= speed) {
  2245  002DD8  0101               	movlb	1	; () banked
  2246  002DDA  516A               	movf	led_lightshow@j& (0+255),w,b
  2247  002DDC  6E10               	movwf	??_led_lightshow^0,c
  2248  002DDE  516B               	movf	(led_lightshow@j+1)& (0+255),w,b
  2249  002DE0  6E11               	movwf	(??_led_lightshow+1)^0,c
  2250  002DE2  4B6A               	infsnz	led_lightshow@j& (0+255),f,b
  2251  002DE4  2B6B               	incf	(led_lightshow@j+1)& (0+255),f,b
  2252  002DE6  500E               	movf	led_lightshow@speed^0,w,c
  2253  002DE8  5C10               	subwf	??_led_lightshow^0,w,c
  2254  002DEA  500F               	movf	(led_lightshow@speed+1)^0,w,c
  2255  002DEC  5811               	subwfb	(??_led_lightshow+1)^0,w,c
  2256  002DEE  A0D8               	btfss	status,0,c
  2257  002DF0  0012               	return	
  2258                           
  2259                           ; BSR set to: 1
  2260                           ;d232.c: 167:    IO.outbytes[2] = cylon;
  2261  002DF2  C09F  F1A4         	movff	led_lightshow@cylon,_IO+7
  2262                           
  2263                           ; BSR set to: 1
  2264                           ;d232.c: 170:   if (LED_UP && (alive_led != 0)) {
  2265  002DF6  0100               	movlb	0	; () banked
  2266  002DF8  519E               	movf	led_lightshow@LED_UP& (0+255),w,b
  2267  002DFA  B4D8               	btfsc	status,2,c
  2268  002DFC  D00C               	goto	l5405
  2269                           
  2270                           ; BSR set to: 0
  2271  002DFE  5192               	movf	led_lightshow@alive_led& (0+255),w,b
  2272  002E00  1193               	iorwf	(led_lightshow@alive_led+1)& (0+255),w,b
  2273  002E02  B4D8               	btfsc	status,2,c
  2274  002E04  D008               	goto	l5405
  2275                           
  2276                           ; BSR set to: 0
  2277                           ;d232.c: 171:    alive_led = alive_led * 2;
  2278  002E06  90D8               	bcf	status,0,c
  2279  002E08  3592               	rlcf	led_lightshow@alive_led& (0+255),w,b
  2280  002E0A  6F92               	movwf	led_lightshow@alive_led& (0+255),b
  2281  002E0C  3593               	rlcf	(led_lightshow@alive_led+1)& (0+255),w,b
  2282  002E0E  6F93               	movwf	(led_lightshow@alive_led+1)& (0+255),b
  2283                           
  2284                           ;d232.c: 172:    cylon = cylon << 1;
  2285  002E10  519F               	movf	led_lightshow@cylon& (0+255),w,b
  2286  002E12  259F               	addwf	led_lightshow@cylon& (0+255),w,b
  2287  002E14  D018               	goto	L1
  2288  002E16                     l5405:
  2289                           
  2290                           ; BSR set to: 0
  2291                           ;d232.c: 174:    if (alive_led != 0) alive_led = alive_led / 2;
  2292  002E16  5192               	movf	led_lightshow@alive_led& (0+255),w,b
  2293  002E18  1193               	iorwf	(led_lightshow@alive_led+1)& (0+255),w,b
  2294  002E1A  B4D8               	btfsc	status,2,c
  2295  002E1C  D012               	goto	l5409
  2296                           
  2297                           ; BSR set to: 0
  2298  002E1E  0060  F248  F006   	movff	led_lightshow@alive_led,___awdiv@dividend
  2299  002E24  0060  F24C  F007   	movff	led_lightshow@alive_led+1,___awdiv@dividend+1
  2300  002E2A  0E00               	movlw	0
  2301  002E2C  6E09               	movwf	(___awdiv@divisor+1)^0,c
  2302  002E2E  0E02               	movlw	2
  2303  002E30  6E08               	movwf	___awdiv@divisor^0,c
  2304  002E32  EC59  F01A         	call	___awdiv	;wreg free
  2305  002E36  0060  F018  F092   	movff	?___awdiv,led_lightshow@alive_led
  2306  002E3C  0060  F01C  F093   	movff	?___awdiv+1,led_lightshow@alive_led+1
  2307  002E42                     l5409:
  2308                           
  2309                           ; BSR set to: 0
  2310                           ;d232.c: 175:    cylon = cylon >> 1;
  2311  002E42  90D8               	bcf	status,0,c
  2312  002E44  319F               	rrcf	led_lightshow@cylon& (0+255),w,b
  2313  002E46                     L1:
  2314  002E46  6F9F               	movwf	led_lightshow@cylon& (0+255),b
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;d232.c: 177:   if (alive_led < 2) {
  2318  002E48  BF93               	btfsc	(led_lightshow@alive_led+1)& (0+255),7,b
  2319  002E4A  D006               	goto	u4220
  2320  002E4C  5193               	movf	(led_lightshow@alive_led+1)& (0+255),w,b
  2321  002E4E  E10A               	bnz	l5415
  2322  002E50  0E02               	movlw	2
  2323  002E52  5D92               	subwf	led_lightshow@alive_led& (0+255),w,b
  2324  002E54  B0D8               	btfsc	status,0,c
  2325  002E56  D006               	goto	l5415
  2326  002E58                     u4220:
  2327                           
  2328                           ; BSR set to: 0
  2329                           ;d232.c: 178:    alive_led = 2;
  2330  002E58  0E00               	movlw	0
  2331  002E5A  6F93               	movwf	(led_lightshow@alive_led+1)& (0+255),b
  2332  002E5C  0E02               	movlw	2
  2333  002E5E  6F92               	movwf	led_lightshow@alive_led& (0+255),b
  2334                           
  2335                           ;d232.c: 179:    LED_UP = 1;
  2336  002E60  0E01               	movlw	1
  2337  002E62  D00D               	goto	L2
  2338  002E64                     l5415:
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;d232.c: 181:    if (alive_led > 128) {
  2342  002E64  BF93               	btfsc	(led_lightshow@alive_led+1)& (0+255),7,b
  2343  002E66  D00C               	goto	l1162
  2344  002E68  5193               	movf	(led_lightshow@alive_led+1)& (0+255),w,b
  2345  002E6A  E104               	bnz	u4230
  2346  002E6C  0E81               	movlw	129
  2347  002E6E  5D92               	subwf	led_lightshow@alive_led& (0+255),w,b
  2348  002E70  A0D8               	btfss	status,0,c
  2349  002E72  D006               	goto	l1162
  2350  002E74                     u4230:
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;d232.c: 182:     alive_led = 128;
  2354  002E74  0E00               	movlw	0
  2355  002E76  6F93               	movwf	(led_lightshow@alive_led+1)& (0+255),b
  2356  002E78  0E80               	movlw	128
  2357  002E7A  6F92               	movwf	led_lightshow@alive_led& (0+255),b
  2358                           
  2359                           ;d232.c: 183:     LED_UP = 0;
  2360  002E7C  0E00               	movlw	0
  2361  002E7E                     L2:
  2362  002E7E  6F9E               	movwf	led_lightshow@LED_UP& (0+255),b
  2363  002E80                     l1162:
  2364                           
  2365                           ; BSR set to: 0
  2366                           ;d232.c: 186:   j = 0;
  2367  002E80  0E00               	movlw	0
  2368  002E82  0101               	movlb	1	; () banked
  2369  002E84  6F6B               	movwf	(led_lightshow@j+1)& (0+255),b
  2370  002E86  0E00               	movlw	0
  2371  002E88  6F6A               	movwf	led_lightshow@j& (0+255),b
  2372  002E8A  0012               	return		;funcret
  2373  002E8C                     __end_of_led_lightshow:
  2374                           	opt callstack 0
  2375                           
  2376 ;; *************** function ___awdiv *****************
  2377 ;; Defined at:
  2378 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;  dividend        2    5[COMRAM] int 
  2381 ;;  divisor         2    7[COMRAM] int 
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;  quotient        2   11[COMRAM] int 
  2384 ;;  sign            1   10[COMRAM] unsigned char 
  2385 ;;  counter         1    9[COMRAM] unsigned char 
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  2    5[COMRAM] int 
  2388 ;; Registers used:
  2389 ;;		wreg, status,2, status,0
  2390 ;; Tracked objects:
  2391 ;;		On entry : 3F/0
  2392 ;;		On exit  : 3F/0
  2393 ;;		Unchanged: 3F/0
  2394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2395 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2396 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2398 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2399 ;;Total ram usage:        8 bytes
  2400 ;; Hardware stack levels used:    1
  2401 ;; Hardware stack levels required when called:    4
  2402 ;; This function calls:
  2403 ;;		Nothing
  2404 ;; This function is called by:
  2405 ;;		_led_lightshow
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           	psect	text7
  2410  0034B2                     __ptext7:
  2411                           	opt callstack 0
  2412  0034B2                     ___awdiv:
  2413                           	opt callstack 25
  2414                           
  2415                           ; BSR set to: 0
  2416                           
  2417                           ;incstack = 0
  2418  0034B2  0E00               	movlw	0
  2419  0034B4  6E0B               	movwf	___awdiv@sign^0,c
  2420                           
  2421                           ; BSR set to: 0
  2422  0034B6  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  2423  0034B8  D006               	goto	l5155
  2424                           
  2425                           ; BSR set to: 0
  2426  0034BA  6C08               	negf	___awdiv@divisor^0,c
  2427  0034BC  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  2428  0034BE  B0D8               	btfsc	status,0,c
  2429  0034C0  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  2430                           
  2431                           ; BSR set to: 0
  2432  0034C2  0E01               	movlw	1
  2433  0034C4  6E0B               	movwf	___awdiv@sign^0,c
  2434  0034C6                     l5155:
  2435                           
  2436                           ; BSR set to: 0
  2437  0034C6  AE07               	btfss	(___awdiv@dividend+1)^0,7,c
  2438  0034C8  D006               	goto	l5161
  2439                           
  2440                           ; BSR set to: 0
  2441  0034CA  6C06               	negf	___awdiv@dividend^0,c
  2442  0034CC  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  2443  0034CE  B0D8               	btfsc	status,0,c
  2444  0034D0  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  2445                           
  2446                           ; BSR set to: 0
  2447  0034D2  0E01               	movlw	1
  2448  0034D4  1A0B               	xorwf	___awdiv@sign^0,f,c
  2449  0034D6                     l5161:
  2450                           
  2451                           ; BSR set to: 0
  2452  0034D6  0E00               	movlw	0
  2453  0034D8  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  2454  0034DA  0E00               	movlw	0
  2455  0034DC  6E0C               	movwf	___awdiv@quotient^0,c
  2456                           
  2457                           ; BSR set to: 0
  2458  0034DE  5008               	movf	___awdiv@divisor^0,w,c
  2459  0034E0  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  2460  0034E2  B4D8               	btfsc	status,2,c
  2461  0034E4  D01C               	goto	l5183
  2462                           
  2463                           ; BSR set to: 0
  2464  0034E6  0E01               	movlw	1
  2465  0034E8  6E0A               	movwf	___awdiv@counter^0,c
  2466  0034EA  D004               	goto	l5169
  2467  0034EC                     l5167:
  2468                           
  2469                           ; BSR set to: 0
  2470  0034EC  90D8               	bcf	status,0,c
  2471  0034EE  3608               	rlcf	___awdiv@divisor^0,f,c
  2472  0034F0  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  2473  0034F2  2A0A               	incf	___awdiv@counter^0,f,c
  2474  0034F4                     l5169:
  2475                           
  2476                           ; BSR set to: 0
  2477  0034F4  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  2478  0034F6  D7FA               	goto	l5167
  2479  0034F8                     u3940:
  2480                           
  2481                           ; BSR set to: 0
  2482  0034F8  90D8               	bcf	status,0,c
  2483  0034FA  360C               	rlcf	___awdiv@quotient^0,f,c
  2484  0034FC  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  2485                           
  2486                           ; BSR set to: 0
  2487  0034FE  5008               	movf	___awdiv@divisor^0,w,c
  2488  003500  5C06               	subwf	___awdiv@dividend^0,w,c
  2489  003502  5009               	movf	(___awdiv@divisor+1)^0,w,c
  2490  003504  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  2491  003506  A0D8               	btfss	status,0,c
  2492  003508  D005               	goto	l5179
  2493                           
  2494                           ; BSR set to: 0
  2495  00350A  5008               	movf	___awdiv@divisor^0,w,c
  2496  00350C  5E06               	subwf	___awdiv@dividend^0,f,c
  2497  00350E  5009               	movf	(___awdiv@divisor+1)^0,w,c
  2498  003510  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  2499                           
  2500                           ; BSR set to: 0
  2501  003512  800C               	bsf	___awdiv@quotient^0,0,c
  2502  003514                     l5179:
  2503                           
  2504                           ; BSR set to: 0
  2505  003514  90D8               	bcf	status,0,c
  2506  003516  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  2507  003518  3208               	rrcf	___awdiv@divisor^0,f,c
  2508                           
  2509                           ; BSR set to: 0
  2510  00351A  2E0A               	decfsz	___awdiv@counter^0,f,c
  2511  00351C  D7ED               	goto	u3940
  2512  00351E                     l5183:
  2513                           
  2514                           ; BSR set to: 0
  2515  00351E  500B               	movf	___awdiv@sign^0,w,c
  2516  003520  B4D8               	btfsc	status,2,c
  2517  003522  D004               	goto	l5187
  2518                           
  2519                           ; BSR set to: 0
  2520  003524  6C0C               	negf	___awdiv@quotient^0,c
  2521  003526  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  2522  003528  B0D8               	btfsc	status,0,c
  2523  00352A  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  2524  00352C                     l5187:
  2525                           
  2526                           ; BSR set to: 0
  2527  00352C  0060  F030  F006   	movff	___awdiv@quotient,?___awdiv
  2528  003532  0060  F034  F007   	movff	___awdiv@quotient+1,?___awdiv+1
  2529                           
  2530                           ; BSR set to: 0
  2531  003538  0012               	return		;funcret
  2532  00353A                     __end_of___awdiv:
  2533                           	opt callstack 0
  2534                           
  2535 ;; *************** function _init_display *****************
  2536 ;; Defined at:
  2537 ;;		line 27 in file "eadog.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;		None
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;		None
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  1    wreg      void 
  2544 ;; Registers used:
  2545 ;;		wreg, status,2, status,0, cstack
  2546 ;; Tracked objects:
  2547 ;;		On entry : 3F/1
  2548 ;;		On exit  : 3F/1
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2555 ;;Total ram usage:        0 bytes
  2556 ;; Hardware stack levels used:    1
  2557 ;; Hardware stack levels required when called:    6
  2558 ;; This function calls:
  2559 ;;		_send_lcd_cmd
  2560 ;;		_send_lcd_cmd_long
  2561 ;;		_wdtdelay
  2562 ;; This function is called by:
  2563 ;;		_main
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text8
  2568  0035AC                     __ptext8:
  2569                           	opt callstack 0
  2570  0035AC                     _init_display:
  2571                           	opt callstack 24
  2572                           
  2573                           ; BSR set to: 1
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;incstack = 0
  2577                           ;eadog.c: 29:  do { LATCbits.LATC2 = 1; } while(0);
  2578  0035AC  84BC               	bsf	188,2,c	;volatile
  2579                           
  2580                           ; BSR set to: 1
  2581                           ;eadog.c: 30:  wdtdelay(350000);
  2582  0035AE  0E30               	movlw	48
  2583  0035B0  6E06               	movwf	wdtdelay@delay^0,c
  2584  0035B2  0E57               	movlw	87
  2585  0035B4  6E07               	movwf	(wdtdelay@delay+1)^0,c
  2586  0035B6  0E05               	movlw	5
  2587  0035B8  6E08               	movwf	(wdtdelay@delay+2)^0,c
  2588  0035BA  0E00               	movlw	0
  2589  0035BC  6E09               	movwf	(wdtdelay@delay+3)^0,c
  2590  0035BE  ECCE  F01C         	call	_wdtdelay	;wreg free
  2591                           
  2592                           ;eadog.c: 31:  send_lcd_cmd(0x39);
  2593  0035C2  0E39               	movlw	57
  2594  0035C4  ECEB  F01C         	call	_send_lcd_cmd
  2595                           
  2596                           ;eadog.c: 32:  send_lcd_cmd(0x1d);
  2597  0035C8  0E1D               	movlw	29
  2598  0035CA  ECEB  F01C         	call	_send_lcd_cmd
  2599                           
  2600                           ;eadog.c: 33:  send_lcd_cmd(0x50);
  2601  0035CE  0E50               	movlw	80
  2602  0035D0  ECEB  F01C         	call	_send_lcd_cmd
  2603                           
  2604                           ;eadog.c: 34:  send_lcd_cmd(0x6c);
  2605  0035D4  0E6C               	movlw	108
  2606  0035D6  ECEB  F01C         	call	_send_lcd_cmd
  2607                           
  2608                           ;eadog.c: 35:  send_lcd_cmd(0x76);
  2609  0035DA  0E76               	movlw	118
  2610  0035DC  ECEB  F01C         	call	_send_lcd_cmd
  2611                           
  2612                           ;eadog.c: 36:  send_lcd_cmd_long(0x38);
  2613  0035E0  0E38               	movlw	56
  2614  0035E2  EC10  F01E         	call	_send_lcd_cmd_long
  2615                           
  2616                           ;eadog.c: 37:  send_lcd_cmd(0x0f);
  2617  0035E6  0E0F               	movlw	15
  2618  0035E8  ECEB  F01C         	call	_send_lcd_cmd
  2619                           
  2620                           ;eadog.c: 38:  send_lcd_cmd_long(0x01);
  2621  0035EC  0E01               	movlw	1
  2622  0035EE  EC10  F01E         	call	_send_lcd_cmd_long
  2623                           
  2624                           ;eadog.c: 39:  send_lcd_cmd(0x02);
  2625  0035F2  0E02               	movlw	2
  2626  0035F4  ECEB  F01C         	call	_send_lcd_cmd
  2627                           
  2628                           ;eadog.c: 40:  send_lcd_cmd(0x06);
  2629  0035F8  0E06               	movlw	6
  2630  0035FA  ECEB  F01C         	call	_send_lcd_cmd
  2631                           
  2632                           ;eadog.c: 41:  wdtdelay(800);
  2633  0035FE  0E20               	movlw	32
  2634  003600  6E06               	movwf	wdtdelay@delay^0,c
  2635  003602  0E03               	movlw	3
  2636  003604  6E07               	movwf	(wdtdelay@delay+1)^0,c
  2637  003606  0E00               	movlw	0
  2638  003608  6E08               	movwf	(wdtdelay@delay+2)^0,c
  2639  00360A  0E00               	movlw	0
  2640  00360C  6E09               	movwf	(wdtdelay@delay+3)^0,c
  2641  00360E  ECCE  F01C         	call	_wdtdelay	;wreg free
  2642                           
  2643                           ; BSR set to: 1
  2644  003612  0012               	return		;funcret
  2645  003614                     __end_of_init_display:
  2646                           	opt callstack 0
  2647                           
  2648 ;; *************** function _send_lcd_cmd_long *****************
  2649 ;; Defined at:
  2650 ;;		line 71 in file "eadog.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;  cmd             1    wreg     const unsigned char 
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;  cmd             1    9[COMRAM] const unsigned char 
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  1    wreg      void 
  2657 ;; Registers used:
  2658 ;;		wreg, status,2, status,0, cstack
  2659 ;; Tracked objects:
  2660 ;;		On entry : 3F/1
  2661 ;;		On exit  : 3F/1
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2665 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2667 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2668 ;;Total ram usage:        1 bytes
  2669 ;; Hardware stack levels used:    1
  2670 ;; Hardware stack levels required when called:    5
  2671 ;; This function calls:
  2672 ;;		_SPI1_Exchange8bit
  2673 ;;		_wdtdelay
  2674 ;; This function is called by:
  2675 ;;		_init_display
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           	psect	text9
  2680  003C20                     __ptext9:
  2681                           	opt callstack 0
  2682  003C20                     _send_lcd_cmd_long:
  2683                           	opt callstack 24
  2684                           
  2685                           ; BSR set to: 1
  2686                           ;incstack = 0
  2687                           ;send_lcd_cmd_long@cmd stored from wreg
  2688  003C20  6E0A               	movwf	send_lcd_cmd_long@cmd^0,c
  2689                           
  2690                           ;eadog.c: 71: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 72: {;eadog.c: 7
      +                          3:  do { LATCbits.LATC1 = 0; } while(0);
  2691  003C22  92BC               	bcf	188,1,c	;volatile
  2692                           
  2693                           ;eadog.c: 74:  do { LATCbits.LATC2 = 0; } while(0);
  2694  003C24  94BC               	bcf	188,2,c	;volatile
  2695                           
  2696                           ;eadog.c: 75:  SPI1_Exchange8bit(cmd);
  2697  003C26  500A               	movf	send_lcd_cmd_long@cmd^0,w,c
  2698  003C28  EC10  F01F         	call	_SPI1_Exchange8bit
  2699                           
  2700                           ; BSR set to: 61
  2701                           ;eadog.c: 76:  wdtdelay(800);
  2702  003C2C  0E20               	movlw	32
  2703  003C2E  6E06               	movwf	wdtdelay@delay^0,c
  2704  003C30  0E03               	movlw	3
  2705  003C32  6E07               	movwf	(wdtdelay@delay+1)^0,c
  2706  003C34  0E00               	movlw	0
  2707  003C36  6E08               	movwf	(wdtdelay@delay+2)^0,c
  2708  003C38  0E00               	movlw	0
  2709  003C3A  6E09               	movwf	(wdtdelay@delay+3)^0,c
  2710  003C3C  ECCE  F01C         	call	_wdtdelay	;wreg free
  2711                           
  2712                           ; BSR set to: 1
  2713  003C40  82BC               	bsf	188,1,c	;volatile
  2714                           
  2715                           ; BSR set to: 1
  2716  003C42  0012               	return		;funcret
  2717  003C44                     __end_of_send_lcd_cmd_long:
  2718                           	opt callstack 0
  2719                           
  2720 ;; *************** function _eaDogM_WriteCommand *****************
  2721 ;; Defined at:
  2722 ;;		line 85 in file "eadog.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;  cmd             1    wreg     const unsigned char 
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;  cmd             1   10[COMRAM] const unsigned char 
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  1    wreg      void 
  2729 ;; Registers used:
  2730 ;;		wreg, status,2, status,0, cstack
  2731 ;; Tracked objects:
  2732 ;;		On entry : 3F/1
  2733 ;;		On exit  : 3F/1
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2739 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2740 ;;Total ram usage:        1 bytes
  2741 ;; Hardware stack levels used:    1
  2742 ;; Hardware stack levels required when called:    6
  2743 ;; This function calls:
  2744 ;;		_send_lcd_cmd
  2745 ;; This function is called by:
  2746 ;;		_main
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           	psect	text10
  2751  003F9A                     __ptext10:
  2752                           	opt callstack 0
  2753  003F9A                     _eaDogM_WriteCommand:
  2754                           	opt callstack 24
  2755                           
  2756                           ; BSR set to: 1
  2757                           ;incstack = 0
  2758                           ;eaDogM_WriteCommand@cmd stored from wreg
  2759  003F9A  6E0B               	movwf	eaDogM_WriteCommand@cmd^0,c
  2760                           
  2761                           ;eadog.c: 85: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  s
      +                          end_lcd_cmd(cmd);
  2762  003F9C  500B               	movf	eaDogM_WriteCommand@cmd^0,w,c
  2763  003F9E  ECEB  F01C         	call	_send_lcd_cmd
  2764                           
  2765                           ; BSR set to: 1
  2766  003FA2  0012               	return		;funcret
  2767  003FA4                     __end_of_eaDogM_WriteCommand:
  2768                           	opt callstack 0
  2769                           
  2770 ;; *************** function _send_lcd_cmd *****************
  2771 ;; Defined at:
  2772 ;;		line 58 in file "eadog.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  cmd             1    wreg     const unsigned char 
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;  cmd             1    9[COMRAM] const unsigned char 
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  1    wreg      void 
  2779 ;; Registers used:
  2780 ;;		wreg, status,2, status,0, cstack
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 3F/1
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2787 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2789 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2790 ;;Total ram usage:        1 bytes
  2791 ;; Hardware stack levels used:    1
  2792 ;; Hardware stack levels required when called:    5
  2793 ;; This function calls:
  2794 ;;		_SPI1_Exchange8bit
  2795 ;;		_wdtdelay
  2796 ;; This function is called by:
  2797 ;;		_init_display
  2798 ;;		_eaDogM_WriteCommand
  2799 ;;		_eaDogM_WriteStringAtPos
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           	psect	text11
  2804  0039D6                     __ptext11:
  2805                           	opt callstack 0
  2806  0039D6                     _send_lcd_cmd:
  2807                           	opt callstack 23
  2808                           
  2809                           ; BSR set to: 1
  2810                           ;incstack = 0
  2811                           ;send_lcd_cmd@cmd stored from wreg
  2812  0039D6  6E0A               	movwf	send_lcd_cmd@cmd^0,c
  2813                           
  2814                           ;eadog.c: 58: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 59: {;eadog.c: 60:  d
      +                          o { LATCbits.LATC1 = 0; } while(0);
  2815  0039D8  92BC               	bcf	188,1,c	;volatile
  2816                           
  2817                           ;eadog.c: 61:  do { LATCbits.LATC2 = 0; } while(0);
  2818  0039DA  94BC               	bcf	188,2,c	;volatile
  2819                           
  2820                           ;eadog.c: 62:  wdtdelay(10);
  2821  0039DC  0E0A               	movlw	10
  2822  0039DE  6E06               	movwf	wdtdelay@delay^0,c
  2823  0039E0  0E00               	movlw	0
  2824  0039E2  6E07               	movwf	(wdtdelay@delay+1)^0,c
  2825  0039E4  0E00               	movlw	0
  2826  0039E6  6E08               	movwf	(wdtdelay@delay+2)^0,c
  2827  0039E8  0E00               	movlw	0
  2828  0039EA  6E09               	movwf	(wdtdelay@delay+3)^0,c
  2829  0039EC  ECCE  F01C         	call	_wdtdelay	;wreg free
  2830                           
  2831                           ; BSR set to: 1
  2832                           ;eadog.c: 63:  SPI1_Exchange8bit(cmd);
  2833  0039F0  500A               	movf	send_lcd_cmd@cmd^0,w,c
  2834  0039F2  EC10  F01F         	call	_SPI1_Exchange8bit
  2835                           
  2836                           ; BSR set to: 61
  2837                           ;eadog.c: 64:  wdtdelay(10);
  2838  0039F6  0E0A               	movlw	10
  2839  0039F8  6E06               	movwf	wdtdelay@delay^0,c
  2840  0039FA  0E00               	movlw	0
  2841  0039FC  6E07               	movwf	(wdtdelay@delay+1)^0,c
  2842  0039FE  0E00               	movlw	0
  2843  003A00  6E08               	movwf	(wdtdelay@delay+2)^0,c
  2844  003A02  0E00               	movlw	0
  2845  003A04  6E09               	movwf	(wdtdelay@delay+3)^0,c
  2846  003A06  ECCE  F01C         	call	_wdtdelay	;wreg free
  2847                           
  2848                           ; BSR set to: 1
  2849  003A0A  82BC               	bsf	188,1,c	;volatile
  2850                           
  2851                           ; BSR set to: 1
  2852  003A0C  0012               	return		;funcret
  2853  003A0E                     __end_of_send_lcd_cmd:
  2854                           	opt callstack 0
  2855                           
  2856 ;; *************** function _wdtdelay *****************
  2857 ;; Defined at:
  2858 ;;		line 14 in file "eadog.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;  delay           4    5[COMRAM] const unsigned long 
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;		None
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  1    wreg      void 
  2865 ;; Registers used:
  2866 ;;		wreg, status,2, status,0
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/1
  2869 ;;		On exit  : 3F/1
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2872 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2875 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2876 ;;Total ram usage:        4 bytes
  2877 ;; Hardware stack levels used:    1
  2878 ;; Hardware stack levels required when called:    4
  2879 ;; This function calls:
  2880 ;;		Nothing
  2881 ;; This function is called by:
  2882 ;;		_init_display
  2883 ;;		_send_lcd_cmd
  2884 ;;		_send_lcd_cmd_long
  2885 ;;		_eaDogM_WriteString
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text12
  2890  00399C                     __ptext12:
  2891                           	opt callstack 0
  2892  00399C                     _wdtdelay:
  2893                           	opt callstack 23
  2894                           
  2895                           ;eadog.c: 14: void wdtdelay(const uint32_t delay);eadog.c: 15: {;eadog.c: 16:  static ui
      +                          nt32_t dcount;;eadog.c: 18:  for (dcount = 0; dcount <= delay; dcount++) {
  2896                           
  2897                           ; BSR set to: 1
  2898                           ;incstack = 0
  2899  00399C  0E00               	movlw	0
  2900  00399E  0101               	movlb	1	; () banked
  2901  0039A0  6F3E               	movwf	wdtdelay@dcount& (0+255),b
  2902  0039A2  0E00               	movlw	0
  2903  0039A4  6F3F               	movwf	(wdtdelay@dcount+1)& (0+255),b
  2904  0039A6  0E00               	movlw	0
  2905  0039A8  6F40               	movwf	(wdtdelay@dcount+2)& (0+255),b
  2906  0039AA  0E00               	movlw	0
  2907  0039AC  6F41               	movwf	(wdtdelay@dcount+3)& (0+255),b
  2908  0039AE                     l1206:
  2909                           
  2910                           ; BSR set to: 1
  2911                           ;eadog.c: 19:   __nop();
  2912  0039AE  F000               	nop	
  2913  0039B0  0004               	clrwdt		;# 
  2914                           
  2915                           ;eadog.c: 21:  };
  2916  0039B2  0E01               	movlw	1
  2917  0039B4  0101               	movlb	1	; () banked
  2918  0039B6  273E               	addwf	wdtdelay@dcount& (0+255),f,b
  2919  0039B8  0E00               	movlw	0
  2920  0039BA  233F               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  2921  0039BC  2340               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  2922  0039BE  2341               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  2923  0039C0  513E               	movf	wdtdelay@dcount& (0+255),w,b
  2924  0039C2  5C06               	subwf	wdtdelay@delay^0,w,c
  2925  0039C4  513F               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  2926  0039C6  5807               	subwfb	(wdtdelay@delay+1)^0,w,c
  2927  0039C8  5140               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  2928  0039CA  5808               	subwfb	(wdtdelay@delay+2)^0,w,c
  2929  0039CC  5141               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  2930  0039CE  5809               	subwfb	(wdtdelay@delay+3)^0,w,c
  2931  0039D0  A0D8               	btfss	status,0,c
  2932  0039D2  0012               	return	
  2933  0039D4  D7EC               	goto	l1206
  2934  0039D6                     __end_of_wdtdelay:
  2935                           	opt callstack 0
  2936                           
  2937 ;; *************** function _SPI1_Exchange8bit *****************
  2938 ;; Defined at:
  2939 ;;		line 79 in file "mcc_generated_files/spi1.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;  data            1    wreg     unsigned char 
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;  data            1    5[COMRAM] unsigned char 
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  1    wreg      unsigned char 
  2946 ;; Registers used:
  2947 ;;		wreg, status,2
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/1
  2950 ;;		On exit  : 3F/3D
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2954 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2956 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2957 ;;Total ram usage:        1 bytes
  2958 ;; Hardware stack levels used:    1
  2959 ;; Hardware stack levels required when called:    4
  2960 ;; This function calls:
  2961 ;;		Nothing
  2962 ;; This function is called by:
  2963 ;;		_send_lcd_cmd
  2964 ;;		_send_lcd_cmd_long
  2965 ;;		_eaDogM_WriteString
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969                           	psect	text13
  2970  003E20                     __ptext13:
  2971                           	opt callstack 0
  2972  003E20                     _SPI1_Exchange8bit:
  2973                           	opt callstack 23
  2974                           
  2975                           ; BSR set to: 1
  2976                           ;incstack = 0
  2977                           ;SPI1_Exchange8bit@data stored from wreg
  2978  003E20  6E06               	movwf	SPI1_Exchange8bit@data^0,c
  2979                           
  2980                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  2981  003E22  0E01               	movlw	1
  2982  003E24  013D               	movlb	61	; () banked
  2983  003E26  6F12               	movwf	18,b	;volatile
  2984                           
  2985                           ; BSR set to: 61
  2986                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  2987  003E28  0060  F01B  FD11   	movff	SPI1_Exchange8bit@data,15633	;volatile
  2988  003E2E                     l987:
  2989                           
  2990                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  2991  003E2E  0139               	movlb	57	; () banked
  2992  003E30  A9A2               	btfss	162,4,b	;volatile
  2993  003E32  D7FD               	goto	l987
  2994                           
  2995                           ; BSR set to: 57
  2996                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  2997  003E34  013D               	movlb	61	; () banked
  2998  003E36  5110               	movf	16,w,b	;volatile
  2999                           
  3000                           ; BSR set to: 61
  3001  003E38  0012               	return		;funcret
  3002  003E3A                     __end_of_SPI1_Exchange8bit:
  3003                           	opt callstack 0
  3004                           
  3005 ;; *************** function _SYSTEM_Initialize *****************
  3006 ;; Defined at:
  3007 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;		None
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;		None
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  1    wreg      void 
  3014 ;; Registers used:
  3015 ;;		wreg, status,2, status,0, cstack
  3016 ;; Tracked objects:
  3017 ;;		On entry : 3F/0
  3018 ;;		On exit  : 3F/3D
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3025 ;;Total ram usage:        0 bytes
  3026 ;; Hardware stack levels used:    1
  3027 ;; Hardware stack levels required when called:    6
  3028 ;; This function calls:
  3029 ;;		_ADCC_Initialize
  3030 ;;		_INTERRUPT_Initialize
  3031 ;;		_OSCILLATOR_Initialize
  3032 ;;		_PIN_MANAGER_Initialize
  3033 ;;		_PMD_Initialize
  3034 ;;		_PWM8_Initialize
  3035 ;;		_SPI1_Initialize
  3036 ;;		_TMR2_Initialize
  3037 ;;		_TMR5_Initialize
  3038 ;;		_TMR6_Initialize
  3039 ;;		_UART1_Initialize
  3040 ;;		_UART2_Initialize
  3041 ;; This function is called by:
  3042 ;;		_main
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           	psect	text14
  3047  003A7E                     __ptext14:
  3048                           	opt callstack 0
  3049  003A7E                     _SYSTEM_Initialize:
  3050                           	opt callstack 24
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  3054                           
  3055                           ; BSR set to: 61
  3056                           ;incstack = 0
  3057  003A7E  EC0B  F01C         	call	_INTERRUPT_Initialize	;wreg free
  3058                           
  3059                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  3060  003A82  ECC3  F01E         	call	_PMD_Initialize	;wreg free
  3061                           
  3062                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3063  003A86  EC1C  F019         	call	_PIN_MANAGER_Initialize	;wreg free
  3064                           
  3065                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3066  003A8A  ECF4  F01E         	call	_OSCILLATOR_Initialize	;wreg free
  3067                           
  3068                           ; BSR set to: 57
  3069                           ;mcc_generated_files/mcc.c: 56:     TMR6_Initialize();
  3070  003A8E  ECBB  F01D         	call	_TMR6_Initialize	;wreg free
  3071                           
  3072                           ; BSR set to: 57
  3073                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  3074  003A92  EC3D  F01B         	call	_ADCC_Initialize	;wreg free
  3075                           
  3076                           ; BSR set to: 62
  3077                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  3078  003A96  ECE5  F01E         	call	_TMR2_Initialize	;wreg free
  3079                           
  3080                           ; BSR set to: 57
  3081                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
  3082  003A9A  EC36  F01F         	call	_PWM8_Initialize	;wreg free
  3083                           
  3084                           ;mcc_generated_files/mcc.c: 60:     TMR5_Initialize();
  3085  003A9E  ECC1  F01B         	call	_TMR5_Initialize	;wreg free
  3086                           
  3087                           ;mcc_generated_files/mcc.c: 61:     UART2_Initialize();
  3088  003AA2  ECC6  F018         	call	_UART2_Initialize	;wreg free
  3089                           
  3090                           ;mcc_generated_files/mcc.c: 62:     UART1_Initialize();
  3091  003AA6  ECBA  F017         	call	_UART1_Initialize	;wreg free
  3092                           
  3093                           ; BSR set to: 57
  3094                           ;mcc_generated_files/mcc.c: 63:     SPI1_Initialize();
  3095  003AAA  EC2A  F01F         	call	_SPI1_Initialize	;wreg free
  3096                           
  3097                           ; BSR set to: 61
  3098  003AAE  0012               	return		;funcret
  3099  003AB0                     __end_of_SYSTEM_Initialize:
  3100                           	opt callstack 0
  3101                           
  3102 ;; *************** function _UART2_Initialize *****************
  3103 ;; Defined at:
  3104 ;;		line 87 in file "mcc_generated_files/uart2.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;		None
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;		None
  3109 ;; Return value:  Size  Location     Type
  3110 ;;                  1    wreg      void 
  3111 ;; Registers used:
  3112 ;;		wreg, status,2, status,0, cstack
  3113 ;; Tracked objects:
  3114 ;;		On entry : 3F/39
  3115 ;;		On exit  : 3F/39
  3116 ;;		Unchanged: 0/0
  3117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3122 ;;Total ram usage:        0 bytes
  3123 ;; Hardware stack levels used:    1
  3124 ;; Hardware stack levels required when called:    5
  3125 ;; This function calls:
  3126 ;;		_UART2_SetErrorHandler
  3127 ;;		_UART2_SetFramingErrorHandler
  3128 ;;		_UART2_SetOverrunErrorHandler
  3129 ;;		_UART2_SetRxInterruptHandler
  3130 ;;		_UART2_SetTxInterruptHandler
  3131 ;; This function is called by:
  3132 ;;		_SYSTEM_Initialize
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           	psect	text15
  3137  00318C                     __ptext15:
  3138                           	opt callstack 0
  3139  00318C                     _UART2_Initialize:
  3140                           	opt callstack 24
  3141                           
  3142                           ; BSR set to: 57
  3143                           ;mcc_generated_files/uart2.c: 90:     PIE6bits.U2RXIE = 0;
  3144                           
  3145                           ; BSR set to: 61
  3146                           ;incstack = 0
  3147  00318C  9596               	bcf	150,2,b	;volatile
  3148                           
  3149                           ; BSR set to: 57
  3150                           ;mcc_generated_files/uart2.c: 91:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
  3151  00318E  0E82               	movlw	low _UART2_Receive_ISR
  3152  003190  6E06               	movwf	UART2_SetRxInterruptHandler@InterruptHandler^0,c
  3153  003192  0E33               	movlw	high _UART2_Receive_ISR
  3154  003194  6E07               	movwf	(UART2_SetRxInterruptHandler@InterruptHandler+1)^0,c
  3155  003196  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
  3156  003198  6E08               	movwf	(UART2_SetRxInterruptHandler@InterruptHandler+2)^0,c
  3157  00319A  EC57  F01F         	call	_UART2_SetRxInterruptHandler	;wreg free
  3158                           
  3159                           ; BSR set to: 57
  3160                           ;mcc_generated_files/uart2.c: 92:     PIE6bits.U2TXIE = 0;
  3161  00319E  9796               	bcf	150,3,b	;volatile
  3162                           
  3163                           ;mcc_generated_files/uart2.c: 93:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
  3164  0031A0  0E14               	movlw	low _UART2_Transmit_ISR
  3165  0031A2  6E06               	movwf	UART2_SetTxInterruptHandler@InterruptHandler^0,c
  3166  0031A4  0E3B               	movlw	high _UART2_Transmit_ISR
  3167  0031A6  6E07               	movwf	(UART2_SetTxInterruptHandler@InterruptHandler+1)^0,c
  3168  0031A8  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
  3169  0031AA  6E08               	movwf	(UART2_SetTxInterruptHandler@InterruptHandler+2)^0,c
  3170  0031AC  EC4D  F01F         	call	_UART2_SetTxInterruptHandler	;wreg free
  3171                           
  3172                           ; BSR set to: 57
  3173                           ;mcc_generated_files/uart2.c: 98:     U2P1L = 0x00;
  3174  0031B0  0E00               	movlw	0
  3175  0031B2  013D               	movlb	61	; () banked
  3176  0031B4  6FD4               	movwf	212,b	;volatile
  3177                           
  3178                           ; BSR set to: 61
  3179                           ;mcc_generated_files/uart2.c: 101:     U2P2L = 0x00;
  3180  0031B6  0E00               	movlw	0
  3181  0031B8  6FD6               	movwf	214,b	;volatile
  3182                           
  3183                           ; BSR set to: 61
  3184                           ;mcc_generated_files/uart2.c: 104:     U2P3L = 0x00;
  3185  0031BA  0E00               	movlw	0
  3186  0031BC  6FD8               	movwf	216,b	;volatile
  3187                           
  3188                           ; BSR set to: 61
  3189                           ;mcc_generated_files/uart2.c: 107:     U2CON0 = 0xB0;
  3190  0031BE  0EB0               	movlw	176
  3191  0031C0  6FDA               	movwf	218,b	;volatile
  3192                           
  3193                           ; BSR set to: 61
  3194                           ;mcc_generated_files/uart2.c: 110:     U2CON1 = 0x80;
  3195  0031C2  0E80               	movlw	128
  3196  0031C4  6FDB               	movwf	219,b	;volatile
  3197                           
  3198                           ; BSR set to: 61
  3199                           ;mcc_generated_files/uart2.c: 113:     U2CON2 = 0x00;
  3200  0031C6  0E00               	movlw	0
  3201  0031C8  6FDC               	movwf	220,b	;volatile
  3202                           
  3203                           ; BSR set to: 61
  3204                           ;mcc_generated_files/uart2.c: 116:     U2BRGL = 0x40;
  3205  0031CA  0E40               	movlw	64
  3206  0031CC  6FDD               	movwf	221,b	;volatile
  3207                           
  3208                           ; BSR set to: 61
  3209                           ;mcc_generated_files/uart2.c: 119:     U2BRGH = 0x03;
  3210  0031CE  0E03               	movlw	3
  3211  0031D0  6FDE               	movwf	222,b	;volatile
  3212                           
  3213                           ; BSR set to: 61
  3214                           ;mcc_generated_files/uart2.c: 122:     U2FIFO = 0x00;
  3215  0031D2  0E00               	movlw	0
  3216  0031D4  6FDF               	movwf	223,b	;volatile
  3217                           
  3218                           ; BSR set to: 61
  3219                           ;mcc_generated_files/uart2.c: 125:     U2UIR = 0x00;
  3220  0031D6  0E00               	movlw	0
  3221  0031D8  6FE0               	movwf	224,b	;volatile
  3222                           
  3223                           ; BSR set to: 61
  3224                           ;mcc_generated_files/uart2.c: 128:     U2ERRIR = 0x00;
  3225  0031DA  0E00               	movlw	0
  3226  0031DC  6FE1               	movwf	225,b	;volatile
  3227                           
  3228                           ; BSR set to: 61
  3229                           ;mcc_generated_files/uart2.c: 131:     U2ERRIE = 0x00;
  3230  0031DE  0E00               	movlw	0
  3231  0031E0  6FE2               	movwf	226,b	;volatile
  3232                           
  3233                           ;mcc_generated_files/uart2.c: 134:     UART2_SetFramingErrorHandler(UART2_DefaultFraming
      +                          ErrorHandler);
  3234  0031E2  0ECC               	movlw	low _UART2_DefaultFramingErrorHandler
  3235  0031E4  6E06               	movwf	UART2_SetFramingErrorHandler@interruptHandler^0,c
  3236  0031E6  0E3F               	movlw	high _UART2_DefaultFramingErrorHandler
  3237  0031E8  6E07               	movwf	(UART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  3238  0031EA  0E00               	movlw	low (_UART2_DefaultFramingErrorHandler shr (0+16))
  3239  0031EC  6E08               	movwf	(UART2_SetFramingErrorHandler@interruptHandler+2)^0,c
  3240  0031EE  EC6B  F01F         	call	_UART2_SetFramingErrorHandler	;wreg free
  3241                           
  3242                           ;mcc_generated_files/uart2.c: 135:     UART2_SetOverrunErrorHandler(UART2_DefaultOverrun
      +                          ErrorHandler);
  3243  0031F2  0ECA               	movlw	low _UART2_DefaultOverrunErrorHandler
  3244  0031F4  6E06               	movwf	UART2_SetOverrunErrorHandler@interruptHandler^0,c
  3245  0031F6  0E3F               	movlw	high _UART2_DefaultOverrunErrorHandler
  3246  0031F8  6E07               	movwf	(UART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3247  0031FA  0E00               	movlw	low (_UART2_DefaultOverrunErrorHandler shr (0+16))
  3248  0031FC  6E08               	movwf	(UART2_SetOverrunErrorHandler@interruptHandler+2)^0,c
  3249  0031FE  EC61  F01F         	call	_UART2_SetOverrunErrorHandler	;wreg free
  3250                           
  3251                           ;mcc_generated_files/uart2.c: 136:     UART2_SetErrorHandler(UART2_DefaultErrorHandler);
  3252  003202  0EBA               	movlw	low _UART2_DefaultErrorHandler
  3253  003204  6E06               	movwf	UART2_SetErrorHandler@interruptHandler^0,c
  3254  003206  0E3F               	movlw	high _UART2_DefaultErrorHandler
  3255  003208  6E07               	movwf	(UART2_SetErrorHandler@interruptHandler+1)^0,c
  3256  00320A  0E00               	movlw	low (_UART2_DefaultErrorHandler shr (0+16))
  3257  00320C  6E08               	movwf	(UART2_SetErrorHandler@interruptHandler+2)^0,c
  3258  00320E  EC75  F01F         	call	_UART2_SetErrorHandler	;wreg free
  3259                           
  3260                           ; BSR set to: 61
  3261                           ;mcc_generated_files/uart2.c: 138:     uart2RxLastError.status = 0;
  3262  003212  0E00               	movlw	0
  3263  003214  0101               	movlb	1	; () banked
  3264  003216  6F70               	movwf	_uart2RxLastError& (0+255),b	;volatile
  3265                           
  3266                           ; BSR set to: 1
  3267                           ;mcc_generated_files/uart2.c: 141:     uart2TxHead = 0;
  3268  003218  0E00               	movlw	0
  3269  00321A  0100               	movlb	0	; () banked
  3270  00321C  6F98               	movwf	_uart2TxHead& (0+255),b	;volatile
  3271                           
  3272                           ; BSR set to: 0
  3273                           ;mcc_generated_files/uart2.c: 142:     uart2TxTail = 0;
  3274  00321E  0E00               	movlw	0
  3275  003220  6F97               	movwf	_uart2TxTail& (0+255),b	;volatile
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;mcc_generated_files/uart2.c: 143:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
  3279  003222  0E08               	movlw	8
  3280  003224  6F96               	movwf	_uart2TxBufferRemaining& (0+255),b	;volatile
  3281                           
  3282                           ; BSR set to: 0
  3283                           ;mcc_generated_files/uart2.c: 144:     uart2RxHead = 0;
  3284  003226  0E00               	movlw	0
  3285  003228  6E59               	movwf	_uart2RxHead^0,c	;volatile
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;mcc_generated_files/uart2.c: 145:     uart2RxTail = 0;
  3289  00322A  0E00               	movlw	0
  3290  00322C  6E58               	movwf	_uart2RxTail^0,c	;volatile
  3291                           
  3292                           ; BSR set to: 0
  3293                           ;mcc_generated_files/uart2.c: 146:     uart2RxCount = 0;
  3294  00322E  0E00               	movlw	0
  3295  003230  6F95               	movwf	_uart2RxCount& (0+255),b	;volatile
  3296                           
  3297                           ; BSR set to: 0
  3298                           ;mcc_generated_files/uart2.c: 149:     PIE6bits.U2RXIE = 1;
  3299  003232  0139               	movlb	57	; () banked
  3300  003234  8596               	bsf	150,2,b	;volatile
  3301                           
  3302                           ; BSR set to: 57
  3303  003236  0012               	return		;funcret
  3304  003238                     __end_of_UART2_Initialize:
  3305                           	opt callstack 0
  3306                           
  3307 ;; *************** function _UART2_SetTxInterruptHandler *****************
  3308 ;; Defined at:
  3309 ;;		line 324 in file "mcc_generated_files/uart2.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  3312 ;;		 -> UART2_Transmit_ISR(1), 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;		None
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      void 
  3317 ;; Registers used:
  3318 ;;		wreg, status,2, status,0
  3319 ;; Tracked objects:
  3320 ;;		On entry : 3F/39
  3321 ;;		On exit  : 3F/39
  3322 ;;		Unchanged: 3E/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3324 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3327 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3328 ;;Total ram usage:        3 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; Hardware stack levels required when called:    4
  3331 ;; This function calls:
  3332 ;;		Nothing
  3333 ;; This function is called by:
  3334 ;;		_UART2_Initialize
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text16
  3339  003E9A                     __ptext16:
  3340                           	opt callstack 0
  3341  003E9A                     _UART2_SetTxInterruptHandler:
  3342                           	opt callstack 24
  3343                           
  3344                           ; BSR set to: 57
  3345                           ;mcc_generated_files/uart2.c: 325:     UART2_TxInterruptHandler = InterruptHandler;
  3346                           
  3347                           ; BSR set to: 57
  3348                           ;incstack = 0
  3349  003E9A  0060  F018  F160   	movff	UART2_SetTxInterruptHandler@InterruptHandler,_UART2_TxInterruptHandler
  3350  003EA0  0060  F01C  F161   	movff	UART2_SetTxInterruptHandler@InterruptHandler+1,_UART2_TxInterruptHandler+1
  3351  003EA6  0060  F020  F162   	movff	UART2_SetTxInterruptHandler@InterruptHandler+2,_UART2_TxInterruptHandler+2
  3352                           
  3353                           ; BSR set to: 57
  3354  003EAC  0012               	return		;funcret
  3355  003EAE                     __end_of_UART2_SetTxInterruptHandler:
  3356                           	opt callstack 0
  3357                           
  3358 ;; *************** function _UART2_SetRxInterruptHandler *****************
  3359 ;; Defined at:
  3360 ;;		line 320 in file "mcc_generated_files/uart2.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  3363 ;;		 -> UART2_Receive_ISR(1), 
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;		None
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  1    wreg      void 
  3368 ;; Registers used:
  3369 ;;		wreg, status,2, status,0
  3370 ;; Tracked objects:
  3371 ;;		On entry : 3F/39
  3372 ;;		On exit  : 3F/39
  3373 ;;		Unchanged: 3E/0
  3374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3375 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3378 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3379 ;;Total ram usage:        3 bytes
  3380 ;; Hardware stack levels used:    1
  3381 ;; Hardware stack levels required when called:    4
  3382 ;; This function calls:
  3383 ;;		Nothing
  3384 ;; This function is called by:
  3385 ;;		_UART2_Initialize
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           	psect	text17
  3390  003EAE                     __ptext17:
  3391                           	opt callstack 0
  3392  003EAE                     _UART2_SetRxInterruptHandler:
  3393                           	opt callstack 24
  3394                           
  3395                           ; BSR set to: 57
  3396                           ;mcc_generated_files/uart2.c: 321:     UART2_RxInterruptHandler = InterruptHandler;
  3397                           
  3398                           ; BSR set to: 57
  3399                           ;incstack = 0
  3400  003EAE  0060  F018  F163   	movff	UART2_SetRxInterruptHandler@InterruptHandler,_UART2_RxInterruptHandler
  3401  003EB4  0060  F01C  F164   	movff	UART2_SetRxInterruptHandler@InterruptHandler+1,_UART2_RxInterruptHandler+1
  3402  003EBA  0060  F020  F165   	movff	UART2_SetRxInterruptHandler@InterruptHandler+2,_UART2_RxInterruptHandler+2
  3403                           
  3404                           ; BSR set to: 57
  3405  003EC0  0012               	return		;funcret
  3406  003EC2                     __end_of_UART2_SetRxInterruptHandler:
  3407                           	opt callstack 0
  3408                           
  3409 ;; *************** function _UART2_SetOverrunErrorHandler *****************
  3410 ;; Defined at:
  3411 ;;		line 310 in file "mcc_generated_files/uart2.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  3414 ;;		 -> UART2_DefaultOverrunErrorHandler(1), 
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;		None
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      void 
  3419 ;; Registers used:
  3420 ;;		wreg, status,2, status,0
  3421 ;; Tracked objects:
  3422 ;;		On entry : 3F/3D
  3423 ;;		On exit  : 3F/3D
  3424 ;;		Unchanged: 3E/0
  3425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3426 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3429 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3430 ;;Total ram usage:        3 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; Hardware stack levels required when called:    4
  3433 ;; This function calls:
  3434 ;;		Nothing
  3435 ;; This function is called by:
  3436 ;;		_UART2_Initialize
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440                           	psect	text18
  3441  003EC2                     __ptext18:
  3442                           	opt callstack 0
  3443  003EC2                     _UART2_SetOverrunErrorHandler:
  3444                           	opt callstack 24
  3445                           
  3446                           ; BSR set to: 61
  3447                           ;mcc_generated_files/uart2.c: 311:     UART2_OverrunErrorHandler = interruptHandler;
  3448                           
  3449                           ; BSR set to: 57
  3450                           ;incstack = 0
  3451  003EC2  0060  F018  F14B   	movff	UART2_SetOverrunErrorHandler@interruptHandler,_UART2_OverrunErrorHandler
  3452  003EC8  0060  F01C  F14C   	movff	UART2_SetOverrunErrorHandler@interruptHandler+1,_UART2_OverrunErrorHandler+1
  3453  003ECE  0060  F020  F14D   	movff	UART2_SetOverrunErrorHandler@interruptHandler+2,_UART2_OverrunErrorHandler+2
  3454                           
  3455                           ; BSR set to: 61
  3456  003ED4  0012               	return		;funcret
  3457  003ED6                     __end_of_UART2_SetOverrunErrorHandler:
  3458                           	opt callstack 0
  3459                           
  3460 ;; *************** function _UART2_SetFramingErrorHandler *****************
  3461 ;; Defined at:
  3462 ;;		line 306 in file "mcc_generated_files/uart2.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  3465 ;;		 -> UART2_DefaultFramingErrorHandler(1), 
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;		None
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  1    wreg      void 
  3470 ;; Registers used:
  3471 ;;		wreg, status,2, status,0
  3472 ;; Tracked objects:
  3473 ;;		On entry : 3F/3D
  3474 ;;		On exit  : 3F/3D
  3475 ;;		Unchanged: 3E/0
  3476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3477 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3480 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3481 ;;Total ram usage:        3 bytes
  3482 ;; Hardware stack levels used:    1
  3483 ;; Hardware stack levels required when called:    4
  3484 ;; This function calls:
  3485 ;;		Nothing
  3486 ;; This function is called by:
  3487 ;;		_UART2_Initialize
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           	psect	text19
  3492  003ED6                     __ptext19:
  3493                           	opt callstack 0
  3494  003ED6                     _UART2_SetFramingErrorHandler:
  3495                           	opt callstack 24
  3496                           
  3497                           ; BSR set to: 61
  3498                           ;mcc_generated_files/uart2.c: 307:     UART2_FramingErrorHandler = interruptHandler;
  3499                           
  3500                           ; BSR set to: 61
  3501                           ;incstack = 0
  3502  003ED6  0060  F018  F14E   	movff	UART2_SetFramingErrorHandler@interruptHandler,_UART2_FramingErrorHandler
  3503  003EDC  0060  F01C  F14F   	movff	UART2_SetFramingErrorHandler@interruptHandler+1,_UART2_FramingErrorHandler+1
  3504  003EE2  0060  F020  F150   	movff	UART2_SetFramingErrorHandler@interruptHandler+2,_UART2_FramingErrorHandler+2
  3505                           
  3506                           ; BSR set to: 61
  3507  003EE8  0012               	return		;funcret
  3508  003EEA                     __end_of_UART2_SetFramingErrorHandler:
  3509                           	opt callstack 0
  3510                           
  3511 ;; *************** function _UART2_SetErrorHandler *****************
  3512 ;; Defined at:
  3513 ;;		line 314 in file "mcc_generated_files/uart2.c"
  3514 ;; Parameters:    Size  Location     Type
  3515 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  3516 ;;		 -> UART2_DefaultErrorHandler(1), 
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;		None
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  1    wreg      void 
  3521 ;; Registers used:
  3522 ;;		wreg, status,2, status,0
  3523 ;; Tracked objects:
  3524 ;;		On entry : 3F/3D
  3525 ;;		On exit  : 3F/3D
  3526 ;;		Unchanged: 3E/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3528 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3531 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3532 ;;Total ram usage:        3 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; Hardware stack levels required when called:    4
  3535 ;; This function calls:
  3536 ;;		Nothing
  3537 ;; This function is called by:
  3538 ;;		_UART2_Initialize
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           	psect	text20
  3543  003EEA                     __ptext20:
  3544                           	opt callstack 0
  3545  003EEA                     _UART2_SetErrorHandler:
  3546                           	opt callstack 24
  3547                           
  3548                           ; BSR set to: 61
  3549                           ;mcc_generated_files/uart2.c: 315:     UART2_ErrorHandler = interruptHandler;
  3550                           
  3551                           ; BSR set to: 61
  3552                           ;incstack = 0
  3553  003EEA  0060  F018  F148   	movff	UART2_SetErrorHandler@interruptHandler,_UART2_ErrorHandler
  3554  003EF0  0060  F01C  F149   	movff	UART2_SetErrorHandler@interruptHandler+1,_UART2_ErrorHandler+1
  3555  003EF6  0060  F020  F14A   	movff	UART2_SetErrorHandler@interruptHandler+2,_UART2_ErrorHandler+2
  3556                           
  3557                           ; BSR set to: 61
  3558  003EFC  0012               	return		;funcret
  3559  003EFE                     __end_of_UART2_SetErrorHandler:
  3560                           	opt callstack 0
  3561                           
  3562 ;; *************** function _UART1_Initialize *****************
  3563 ;; Defined at:
  3564 ;;		line 87 in file "mcc_generated_files/uart1.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;		None
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;		None
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      void 
  3571 ;; Registers used:
  3572 ;;		wreg, status,2, status,0, cstack
  3573 ;; Tracked objects:
  3574 ;;		On entry : 3F/39
  3575 ;;		On exit  : 3F/39
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3582 ;;Total ram usage:        0 bytes
  3583 ;; Hardware stack levels used:    1
  3584 ;; Hardware stack levels required when called:    5
  3585 ;; This function calls:
  3586 ;;		_UART1_SetErrorHandler
  3587 ;;		_UART1_SetFramingErrorHandler
  3588 ;;		_UART1_SetOverrunErrorHandler
  3589 ;;		_UART1_SetRxInterruptHandler
  3590 ;;		_UART1_SetTxInterruptHandler
  3591 ;; This function is called by:
  3592 ;;		_SYSTEM_Initialize
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           	psect	text21
  3597  002F74                     __ptext21:
  3598                           	opt callstack 0
  3599  002F74                     _UART1_Initialize:
  3600                           	opt callstack 24
  3601                           
  3602                           ; BSR set to: 57
  3603                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
  3604                           
  3605                           ; BSR set to: 61
  3606                           ;incstack = 0
  3607  002F74  9793               	bcf	147,3,b	;volatile
  3608                           
  3609                           ; BSR set to: 57
  3610                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  3611  002F76  0EE4               	movlw	low _UART1_Receive_ISR
  3612  002F78  6E06               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
  3613  002F7A  0E32               	movlw	high _UART1_Receive_ISR
  3614  002F7C  6E07               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
  3615  002F7E  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
  3616  002F80  6E08               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+2)^0,c
  3617  002F82  EC89  F01F         	call	_UART1_SetRxInterruptHandler	;wreg free
  3618                           
  3619                           ; BSR set to: 57
  3620                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
  3621  002F86  9993               	bcf	147,4,b	;volatile
  3622                           
  3623                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  3624  002F88  0EE2               	movlw	low _UART1_Transmit_ISR
  3625  002F8A  6E06               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
  3626  002F8C  0E3A               	movlw	high _UART1_Transmit_ISR
  3627  002F8E  6E07               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
  3628  002F90  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
  3629  002F92  6E08               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+2)^0,c
  3630  002F94  EC7F  F01F         	call	_UART1_SetTxInterruptHandler	;wreg free
  3631                           
  3632                           ; BSR set to: 57
  3633                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
  3634  002F98  0E00               	movlw	0
  3635  002F9A  013D               	movlb	61	; () banked
  3636  002F9C  6FEC               	movwf	236,b	;volatile
  3637                           
  3638                           ; BSR set to: 61
  3639                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
  3640  002F9E  0E00               	movlw	0
  3641  002FA0  6FED               	movwf	237,b	;volatile
  3642                           
  3643                           ; BSR set to: 61
  3644                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
  3645  002FA2  0E00               	movlw	0
  3646  002FA4  6FEE               	movwf	238,b	;volatile
  3647                           
  3648                           ; BSR set to: 61
  3649                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
  3650  002FA6  0E00               	movlw	0
  3651  002FA8  6FEF               	movwf	239,b	;volatile
  3652                           
  3653                           ; BSR set to: 61
  3654                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
  3655  002FAA  0E00               	movlw	0
  3656  002FAC  6FF0               	movwf	240,b	;volatile
  3657                           
  3658                           ; BSR set to: 61
  3659                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
  3660  002FAE  0E00               	movlw	0
  3661  002FB0  6FF1               	movwf	241,b	;volatile
  3662                           
  3663                           ; BSR set to: 61
  3664                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0x90;
  3665  002FB2  0E90               	movlw	144
  3666  002FB4  6FF2               	movwf	242,b	;volatile
  3667                           
  3668                           ; BSR set to: 61
  3669                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
  3670  002FB6  0E80               	movlw	128
  3671  002FB8  6FF3               	movwf	243,b	;volatile
  3672                           
  3673                           ; BSR set to: 61
  3674                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
  3675  002FBA  0E00               	movlw	0
  3676  002FBC  6FF4               	movwf	244,b	;volatile
  3677                           
  3678                           ; BSR set to: 61
  3679                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x40;
  3680  002FBE  0E40               	movlw	64
  3681  002FC0  6FF5               	movwf	245,b	;volatile
  3682                           
  3683                           ; BSR set to: 61
  3684                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x03;
  3685  002FC2  0E03               	movlw	3
  3686  002FC4  6FF6               	movwf	246,b	;volatile
  3687                           
  3688                           ; BSR set to: 61
  3689                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
  3690  002FC6  0E00               	movlw	0
  3691  002FC8  6FF7               	movwf	247,b	;volatile
  3692                           
  3693                           ; BSR set to: 61
  3694                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
  3695  002FCA  0E00               	movlw	0
  3696  002FCC  6FF8               	movwf	248,b	;volatile
  3697                           
  3698                           ; BSR set to: 61
  3699                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
  3700  002FCE  0E00               	movlw	0
  3701  002FD0  6FF9               	movwf	249,b	;volatile
  3702                           
  3703                           ; BSR set to: 61
  3704                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
  3705  002FD2  0E00               	movlw	0
  3706  002FD4  6FFA               	movwf	250,b	;volatile
  3707                           
  3708                           ; BSR set to: 61
  3709                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  3710  002FD6  0EC8               	movlw	low _UART1_DefaultFramingErrorHandler
  3711  002FD8  6E06               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  3712  002FDA  0E3F               	movlw	high _UART1_DefaultFramingErrorHandler
  3713  002FDC  6E07               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  3714  002FDE  0E00               	movlw	low (_UART1_DefaultFramingErrorHandler shr (0+16))
  3715  002FE0  6E08               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+2)^0,c
  3716  002FE2  EC9D  F01F         	call	_UART1_SetFramingErrorHandler	;wreg free
  3717                           
  3718                           ; BSR set to: 61
  3719                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  3720  002FE6  0EC6               	movlw	low _UART1_DefaultOverrunErrorHandler
  3721  002FE8  6E06               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  3722  002FEA  0E3F               	movlw	high _UART1_DefaultOverrunErrorHandler
  3723  002FEC  6E07               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3724  002FEE  0E00               	movlw	low (_UART1_DefaultOverrunErrorHandler shr (0+16))
  3725  002FF0  6E08               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+2)^0,c
  3726  002FF2  EC93  F01F         	call	_UART1_SetOverrunErrorHandler	;wreg free
  3727                           
  3728                           ; BSR set to: 61
  3729                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  3730  002FF6  0EB4               	movlw	low _UART1_DefaultErrorHandler
  3731  002FF8  6E06               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  3732  002FFA  0E3F               	movlw	high _UART1_DefaultErrorHandler
  3733  002FFC  6E07               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  3734  002FFE  0E00               	movlw	low (_UART1_DefaultErrorHandler shr (0+16))
  3735  003000  6E08               	movwf	(UART1_SetErrorHandler@interruptHandler+2)^0,c
  3736  003002  ECA7  F01F         	call	_UART1_SetErrorHandler	;wreg free
  3737                           
  3738                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
  3739  003006  0E00               	movlw	0
  3740  003008  0101               	movlb	1	; () banked
  3741  00300A  6F71               	movwf	_uart1RxLastError& (0+255),b	;volatile
  3742                           
  3743                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
  3744  00300C  0E00               	movlw	0
  3745  00300E  0100               	movlb	0	; () banked
  3746  003010  6F9D               	movwf	_uart1TxHead& (0+255),b	;volatile
  3747                           
  3748                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
  3749  003012  0E00               	movlw	0
  3750  003014  6F9C               	movwf	_uart1TxTail& (0+255),b	;volatile
  3751                           
  3752                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  3753  003016  0E08               	movlw	8
  3754  003018  6F9B               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
  3755                           
  3756                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
  3757  00301A  0E00               	movlw	0
  3758  00301C  6E5A               	movwf	_uart1RxHead^0,c	;volatile
  3759                           
  3760                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
  3761  00301E  0E00               	movlw	0
  3762  003020  6F9A               	movwf	_uart1RxTail& (0+255),b	;volatile
  3763                           
  3764                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
  3765  003022  0E00               	movlw	0
  3766  003024  6F99               	movwf	_uart1RxCount& (0+255),b	;volatile
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
  3770  003026  0139               	movlb	57	; () banked
  3771  003028  8793               	bsf	147,3,b	;volatile
  3772                           
  3773                           ; BSR set to: 57
  3774  00302A  0012               	return		;funcret
  3775  00302C                     __end_of_UART1_Initialize:
  3776                           	opt callstack 0
  3777                           
  3778 ;; *************** function _UART1_SetTxInterruptHandler *****************
  3779 ;; Defined at:
  3780 ;;		line 323 in file "mcc_generated_files/uart1.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  3783 ;;		 -> UART1_Transmit_ISR(1), 
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;		None
  3786 ;; Return value:  Size  Location     Type
  3787 ;;                  1    wreg      void 
  3788 ;; Registers used:
  3789 ;;		wreg, status,2, status,0
  3790 ;; Tracked objects:
  3791 ;;		On entry : 3F/39
  3792 ;;		On exit  : 3F/39
  3793 ;;		Unchanged: 3E/0
  3794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3795 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3798 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3799 ;;Total ram usage:        3 bytes
  3800 ;; Hardware stack levels used:    1
  3801 ;; Hardware stack levels required when called:    4
  3802 ;; This function calls:
  3803 ;;		Nothing
  3804 ;; This function is called by:
  3805 ;;		_UART1_Initialize
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           	psect	text22
  3810  003EFE                     __ptext22:
  3811                           	opt callstack 0
  3812  003EFE                     _UART1_SetTxInterruptHandler:
  3813                           	opt callstack 24
  3814                           
  3815                           ; BSR set to: 57
  3816                           ;mcc_generated_files/uart1.c: 324:     UART1_TxInterruptHandler = InterruptHandler;
  3817                           
  3818                           ; BSR set to: 57
  3819                           ;incstack = 0
  3820  003EFE  0060  F018  F15A   	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  3821  003F04  0060  F01C  F15B   	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  3822  003F0A  0060  F020  F15C   	movff	UART1_SetTxInterruptHandler@InterruptHandler+2,_UART1_TxInterruptHandler+2
  3823                           
  3824                           ; BSR set to: 57
  3825  003F10  0012               	return		;funcret
  3826  003F12                     __end_of_UART1_SetTxInterruptHandler:
  3827                           	opt callstack 0
  3828                           
  3829 ;; *************** function _UART1_SetRxInterruptHandler *****************
  3830 ;; Defined at:
  3831 ;;		line 319 in file "mcc_generated_files/uart1.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  3834 ;;		 -> UART1_Receive_ISR(1), 
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;		None
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  1    wreg      void 
  3839 ;; Registers used:
  3840 ;;		wreg, status,2, status,0
  3841 ;; Tracked objects:
  3842 ;;		On entry : 3F/39
  3843 ;;		On exit  : 3F/39
  3844 ;;		Unchanged: 3E/0
  3845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3846 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3849 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3850 ;;Total ram usage:        3 bytes
  3851 ;; Hardware stack levels used:    1
  3852 ;; Hardware stack levels required when called:    4
  3853 ;; This function calls:
  3854 ;;		Nothing
  3855 ;; This function is called by:
  3856 ;;		_UART1_Initialize
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           	psect	text23
  3861  003F12                     __ptext23:
  3862                           	opt callstack 0
  3863  003F12                     _UART1_SetRxInterruptHandler:
  3864                           	opt callstack 24
  3865                           
  3866                           ; BSR set to: 57
  3867                           ;mcc_generated_files/uart1.c: 320:     UART1_RxInterruptHandler = InterruptHandler;
  3868                           
  3869                           ; BSR set to: 57
  3870                           ;incstack = 0
  3871  003F12  0060  F018  F15D   	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  3872  003F18  0060  F01C  F15E   	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  3873  003F1E  0060  F020  F15F   	movff	UART1_SetRxInterruptHandler@InterruptHandler+2,_UART1_RxInterruptHandler+2
  3874                           
  3875                           ; BSR set to: 57
  3876  003F24  0012               	return		;funcret
  3877  003F26                     __end_of_UART1_SetRxInterruptHandler:
  3878                           	opt callstack 0
  3879                           
  3880 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  3881 ;; Defined at:
  3882 ;;		line 309 in file "mcc_generated_files/uart1.c"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  3885 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;		None
  3888 ;; Return value:  Size  Location     Type
  3889 ;;                  1    wreg      void 
  3890 ;; Registers used:
  3891 ;;		wreg, status,2, status,0
  3892 ;; Tracked objects:
  3893 ;;		On entry : 3F/3D
  3894 ;;		On exit  : 3F/3D
  3895 ;;		Unchanged: 3E/0
  3896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3897 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3900 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3901 ;;Total ram usage:        3 bytes
  3902 ;; Hardware stack levels used:    1
  3903 ;; Hardware stack levels required when called:    4
  3904 ;; This function calls:
  3905 ;;		Nothing
  3906 ;; This function is called by:
  3907 ;;		_UART1_Initialize
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911                           	psect	text24
  3912  003F26                     __ptext24:
  3913                           	opt callstack 0
  3914  003F26                     _UART1_SetOverrunErrorHandler:
  3915                           	opt callstack 24
  3916                           
  3917                           ; BSR set to: 61
  3918                           ;mcc_generated_files/uart1.c: 310:     UART1_OverrunErrorHandler = interruptHandler;
  3919                           
  3920                           ; BSR set to: 57
  3921                           ;incstack = 0
  3922  003F26  0060  F018  F154   	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  3923  003F2C  0060  F01C  F155   	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  3924  003F32  0060  F020  F156   	movff	UART1_SetOverrunErrorHandler@interruptHandler+2,_UART1_OverrunErrorHandler+2
  3925                           
  3926                           ; BSR set to: 61
  3927  003F38  0012               	return		;funcret
  3928  003F3A                     __end_of_UART1_SetOverrunErrorHandler:
  3929                           	opt callstack 0
  3930                           
  3931 ;; *************** function _UART1_SetFramingErrorHandler *****************
  3932 ;; Defined at:
  3933 ;;		line 305 in file "mcc_generated_files/uart1.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  3936 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;		None
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  1    wreg      void 
  3941 ;; Registers used:
  3942 ;;		wreg, status,2, status,0
  3943 ;; Tracked objects:
  3944 ;;		On entry : 3F/3D
  3945 ;;		On exit  : 3F/3D
  3946 ;;		Unchanged: 3E/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3948 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3951 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3952 ;;Total ram usage:        3 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; Hardware stack levels required when called:    4
  3955 ;; This function calls:
  3956 ;;		Nothing
  3957 ;; This function is called by:
  3958 ;;		_UART1_Initialize
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           	psect	text25
  3963  003F3A                     __ptext25:
  3964                           	opt callstack 0
  3965  003F3A                     _UART1_SetFramingErrorHandler:
  3966                           	opt callstack 24
  3967                           
  3968                           ; BSR set to: 61
  3969                           ;mcc_generated_files/uart1.c: 306:     UART1_FramingErrorHandler = interruptHandler;
  3970                           
  3971                           ; BSR set to: 61
  3972                           ;incstack = 0
  3973  003F3A  0060  F018  F157   	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  3974  003F40  0060  F01C  F158   	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  3975  003F46  0060  F020  F159   	movff	UART1_SetFramingErrorHandler@interruptHandler+2,_UART1_FramingErrorHandler+2
  3976                           
  3977                           ; BSR set to: 61
  3978  003F4C  0012               	return		;funcret
  3979  003F4E                     __end_of_UART1_SetFramingErrorHandler:
  3980                           	opt callstack 0
  3981                           
  3982 ;; *************** function _UART1_SetErrorHandler *****************
  3983 ;; Defined at:
  3984 ;;		line 313 in file "mcc_generated_files/uart1.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  3987 ;;		 -> UART1_DefaultErrorHandler(1), 
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;		None
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  1    wreg      void 
  3992 ;; Registers used:
  3993 ;;		wreg, status,2, status,0
  3994 ;; Tracked objects:
  3995 ;;		On entry : 3F/3D
  3996 ;;		On exit  : 3F/3D
  3997 ;;		Unchanged: 3E/0
  3998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3999 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4002 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4003 ;;Total ram usage:        3 bytes
  4004 ;; Hardware stack levels used:    1
  4005 ;; Hardware stack levels required when called:    4
  4006 ;; This function calls:
  4007 ;;		Nothing
  4008 ;; This function is called by:
  4009 ;;		_UART1_Initialize
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           	psect	text26
  4014  003F4E                     __ptext26:
  4015                           	opt callstack 0
  4016  003F4E                     _UART1_SetErrorHandler:
  4017                           	opt callstack 24
  4018                           
  4019                           ; BSR set to: 61
  4020                           ;mcc_generated_files/uart1.c: 314:     UART1_ErrorHandler = interruptHandler;
  4021                           
  4022                           ; BSR set to: 61
  4023                           ;incstack = 0
  4024  003F4E  0060  F018  F151   	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  4025  003F54  0060  F01C  F152   	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  4026  003F5A  0060  F020  F153   	movff	UART1_SetErrorHandler@interruptHandler+2,_UART1_ErrorHandler+2
  4027                           
  4028                           ; BSR set to: 61
  4029  003F60  0012               	return		;funcret
  4030  003F62                     __end_of_UART1_SetErrorHandler:
  4031                           	opt callstack 0
  4032                           
  4033 ;; *************** function _TMR6_Initialize *****************
  4034 ;; Defined at:
  4035 ;;		line 67 in file "mcc_generated_files/tmr6.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;		None
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;		None
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  1    wreg      void 
  4042 ;; Registers used:
  4043 ;;		wreg, status,2, status,0, cstack
  4044 ;; Tracked objects:
  4045 ;;		On entry : 3F/39
  4046 ;;		On exit  : 3F/39
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4053 ;;Total ram usage:        0 bytes
  4054 ;; Hardware stack levels used:    1
  4055 ;; Hardware stack levels required when called:    5
  4056 ;; This function calls:
  4057 ;;		_TMR6_SetInterruptHandler
  4058 ;; This function is called by:
  4059 ;;		_SYSTEM_Initialize
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           	psect	text27
  4064  003B76                     __ptext27:
  4065                           	opt callstack 0
  4066  003B76                     _TMR6_Initialize:
  4067                           	opt callstack 24
  4068                           
  4069                           ; BSR set to: 57
  4070                           ;mcc_generated_files/tmr6.c: 72:  T6CLKCON = 0x01;
  4071                           
  4072                           ; BSR set to: 61
  4073                           ;incstack = 0
  4074  003B76  0E01               	movlw	1
  4075  003B78  6E96               	movwf	150,c	;volatile
  4076                           
  4077                           ;mcc_generated_files/tmr6.c: 75:  T6HLT = 0x00;
  4078  003B7A  0E00               	movlw	0
  4079  003B7C  6E95               	movwf	149,c	;volatile
  4080                           
  4081                           ;mcc_generated_files/tmr6.c: 78:  T6RST = 0x00;
  4082  003B7E  0E00               	movlw	0
  4083  003B80  6E97               	movwf	151,c	;volatile
  4084                           
  4085                           ;mcc_generated_files/tmr6.c: 81:  T6PR = 0x03;
  4086  003B82  0E03               	movlw	3
  4087  003B84  6E93               	movwf	147,c	;volatile
  4088                           
  4089                           ;mcc_generated_files/tmr6.c: 84:  T6TMR = 0x00;
  4090  003B86  0E00               	movlw	0
  4091  003B88  6E92               	movwf	146,c	;volatile
  4092                           
  4093                           ; BSR set to: 57
  4094                           ;mcc_generated_files/tmr6.c: 87:  PIR9bits.TMR6IF = 0;
  4095  003B8A  91A9               	bcf	169,0,b	;volatile
  4096                           
  4097                           ; BSR set to: 57
  4098                           ;mcc_generated_files/tmr6.c: 90:  PIE9bits.TMR6IE = 1;
  4099  003B8C  8199               	bsf	153,0,b	;volatile
  4100                           
  4101                           ; BSR set to: 57
  4102                           ;mcc_generated_files/tmr6.c: 93:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
  4103  003B8E  0E60               	movlw	low _TMR6_DefaultInterruptHandler
  4104  003B90  6E06               	movwf	TMR6_SetInterruptHandler@InterruptHandler^0,c
  4105  003B92  0E39               	movlw	high _TMR6_DefaultInterruptHandler
  4106  003B94  6E07               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)^0,c
  4107  003B96  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
  4108  003B98  6E08               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)^0,c
  4109  003B9A  ECB1  F01F         	call	_TMR6_SetInterruptHandler	;wreg free
  4110                           
  4111                           ; BSR set to: 57
  4112                           ;mcc_generated_files/tmr6.c: 96:  T6CON = 0xFF;
  4113  003B9E  6894               	setf	148,c	;volatile
  4114                           
  4115                           ; BSR set to: 57
  4116  003BA0  0012               	return		;funcret
  4117  003BA2                     __end_of_TMR6_Initialize:
  4118                           	opt callstack 0
  4119                           
  4120 ;; *************** function _TMR6_SetInterruptHandler *****************
  4121 ;; Defined at:
  4122 ;;		line 179 in file "mcc_generated_files/tmr6.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  4125 ;;		 -> TMR6_DefaultInterruptHandler(1), 
  4126 ;; Auto vars:     Size  Location     Type
  4127 ;;		None
  4128 ;; Return value:  Size  Location     Type
  4129 ;;                  1    wreg      void 
  4130 ;; Registers used:
  4131 ;;		wreg, status,2, status,0
  4132 ;; Tracked objects:
  4133 ;;		On entry : 3F/39
  4134 ;;		On exit  : 3F/39
  4135 ;;		Unchanged: 3E/0
  4136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4137 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4140 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4141 ;;Total ram usage:        3 bytes
  4142 ;; Hardware stack levels used:    1
  4143 ;; Hardware stack levels required when called:    4
  4144 ;; This function calls:
  4145 ;;		Nothing
  4146 ;; This function is called by:
  4147 ;;		_TMR6_Initialize
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           	psect	text28
  4152  003F62                     __ptext28:
  4153                           	opt callstack 0
  4154  003F62                     _TMR6_SetInterruptHandler:
  4155                           	opt callstack 24
  4156                           
  4157                           ; BSR set to: 57
  4158                           ;mcc_generated_files/tmr6.c: 179: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 180: {;mcc_generated_files/tmr6.c: 181:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
  4159                           
  4160                           ; BSR set to: 57
  4161                           ;incstack = 0
  4162  003F62  0060  F018  F145   	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
  4163  003F68  0060  F01C  F146   	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
  4164  003F6E  0060  F020  F147   	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
  4165                           
  4166                           ; BSR set to: 57
  4167  003F74  0012               	return		;funcret
  4168  003F76                     __end_of_TMR6_SetInterruptHandler:
  4169                           	opt callstack 0
  4170                           
  4171 ;; *************** function _TMR5_Initialize *****************
  4172 ;; Defined at:
  4173 ;;		line 66 in file "mcc_generated_files/tmr5.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;		None
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;		None
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  1    wreg      void 
  4180 ;; Registers used:
  4181 ;;		wreg, status,2, status,0, cstack
  4182 ;; Tracked objects:
  4183 ;;		On entry : 3F/3F
  4184 ;;		On exit  : 3F/39
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4189 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4190 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4191 ;;Total ram usage:        2 bytes
  4192 ;; Hardware stack levels used:    1
  4193 ;; Hardware stack levels required when called:    5
  4194 ;; This function calls:
  4195 ;;		_TMR5_SetInterruptHandler
  4196 ;; This function is called by:
  4197 ;;		_SYSTEM_Initialize
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           	psect	text29
  4202  003782                     __ptext29:
  4203                           	opt callstack 0
  4204  003782                     _TMR5_Initialize:
  4205                           	opt callstack 24
  4206                           
  4207                           ; BSR set to: 63
  4208                           ;mcc_generated_files/tmr5.c: 71:     T5GCON = 0x00;
  4209                           
  4210                           ; BSR set to: 57
  4211                           ;incstack = 0
  4212  003782  0E00               	movlw	0
  4213  003784  6E9B               	movwf	155,c	;volatile
  4214                           
  4215                           ;mcc_generated_files/tmr5.c: 74:     T5GATE = 0x00;
  4216  003786  0E00               	movlw	0
  4217  003788  6E9C               	movwf	156,c	;volatile
  4218                           
  4219                           ;mcc_generated_files/tmr5.c: 77:     T5CLK = 0x01;
  4220  00378A  0E01               	movlw	1
  4221  00378C  6E9D               	movwf	157,c	;volatile
  4222                           
  4223                           ;mcc_generated_files/tmr5.c: 80:     TMR5H = 0x63;
  4224  00378E  0E63               	movlw	99
  4225  003790  6E99               	movwf	153,c	;volatile
  4226                           
  4227                           ;mcc_generated_files/tmr5.c: 83:     TMR5L = 0xC0;
  4228  003792  0EC0               	movlw	192
  4229  003794  6E98               	movwf	152,c	;volatile
  4230                           
  4231                           ; BSR set to: 63
  4232                           ;mcc_generated_files/tmr5.c: 86:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  4233  003796  5098               	movf	152,w,c	;volatile
  4234  003798  006F FE64  F009    	movff	16281,??_TMR5_Initialize	;volatile
  4235  00379E  6A0A               	clrf	(??_TMR5_Initialize+1)^0,c
  4236  0037A0  0060  F024  F00A   	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  4237  0037A6  6A09               	clrf	??_TMR5_Initialize^0,c
  4238  0037A8  1009               	iorwf	??_TMR5_Initialize^0,w,c
  4239  0037AA  0101               	movlb	1	; () banked
  4240  0037AC  6F6E               	movwf	_timer5ReloadVal& (0+255),b	;volatile
  4241  0037AE  500A               	movf	(??_TMR5_Initialize+1)^0,w,c
  4242  0037B0  6F6F               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
  4243                           
  4244                           ; BSR set to: 1
  4245                           ;mcc_generated_files/tmr5.c: 89:     PIR8bits.TMR5IF = 0;
  4246  0037B2  0139               	movlb	57	; () banked
  4247  0037B4  9DA8               	bcf	168,6,b	;volatile
  4248                           
  4249                           ; BSR set to: 57
  4250                           ;mcc_generated_files/tmr5.c: 92:     PIE8bits.TMR5IE = 1;
  4251  0037B6  8D98               	bsf	152,6,b	;volatile
  4252                           
  4253                           ; BSR set to: 57
  4254                           ;mcc_generated_files/tmr5.c: 95:     TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandl
      +                          er);
  4255  0037B8  0E3A               	movlw	low _TMR5_DefaultInterruptHandler
  4256  0037BA  6E06               	movwf	TMR5_SetInterruptHandler@InterruptHandler^0,c
  4257  0037BC  0E3E               	movlw	high _TMR5_DefaultInterruptHandler
  4258  0037BE  6E07               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)^0,c
  4259  0037C0  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
  4260  0037C2  6E08               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)^0,c
  4261  0037C4  ECBB  F01F         	call	_TMR5_SetInterruptHandler	;wreg free
  4262                           
  4263                           ; BSR set to: 57
  4264                           ;mcc_generated_files/tmr5.c: 98:     T5CON = 0x31;
  4265  0037C8  0E31               	movlw	49
  4266  0037CA  6E9A               	movwf	154,c	;volatile
  4267                           
  4268                           ; BSR set to: 57
  4269  0037CC  0012               	return		;funcret
  4270  0037CE                     __end_of_TMR5_Initialize:
  4271                           	opt callstack 0
  4272                           
  4273 ;; *************** function _TMR5_SetInterruptHandler *****************
  4274 ;; Defined at:
  4275 ;;		line 194 in file "mcc_generated_files/tmr5.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  4278 ;;		 -> TMR5_DefaultInterruptHandler(1), 
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;		None
  4281 ;; Return value:  Size  Location     Type
  4282 ;;                  1    wreg      void 
  4283 ;; Registers used:
  4284 ;;		wreg, status,2, status,0
  4285 ;; Tracked objects:
  4286 ;;		On entry : 3F/39
  4287 ;;		On exit  : 3F/39
  4288 ;;		Unchanged: 3E/0
  4289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4290 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4293 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4294 ;;Total ram usage:        3 bytes
  4295 ;; Hardware stack levels used:    1
  4296 ;; Hardware stack levels required when called:    4
  4297 ;; This function calls:
  4298 ;;		Nothing
  4299 ;; This function is called by:
  4300 ;;		_TMR5_Initialize
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303                           
  4304                           	psect	text30
  4305  003F76                     __ptext30:
  4306                           	opt callstack 0
  4307  003F76                     _TMR5_SetInterruptHandler:
  4308                           	opt callstack 24
  4309                           
  4310                           ; BSR set to: 57
  4311                           ;mcc_generated_files/tmr5.c: 195:     TMR5_InterruptHandler = InterruptHandler;
  4312                           
  4313                           ; BSR set to: 57
  4314                           ;incstack = 0
  4315  003F76  0060  F018  F142   	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
  4316  003F7C  0060  F01C  F143   	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
  4317  003F82  0060  F020  F144   	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
  4318                           
  4319                           ; BSR set to: 57
  4320  003F88  0012               	return		;funcret
  4321  003F8A                     __end_of_TMR5_SetInterruptHandler:
  4322                           	opt callstack 0
  4323                           
  4324 ;; *************** function _TMR2_Initialize *****************
  4325 ;; Defined at:
  4326 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;		None
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;		None
  4331 ;; Return value:  Size  Location     Type
  4332 ;;                  1    wreg      void 
  4333 ;; Registers used:
  4334 ;;		wreg, status,2
  4335 ;; Tracked objects:
  4336 ;;		On entry : 3F/3E
  4337 ;;		On exit  : 3F/39
  4338 ;;		Unchanged: 0/0
  4339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4344 ;;Total ram usage:        0 bytes
  4345 ;; Hardware stack levels used:    1
  4346 ;; Hardware stack levels required when called:    4
  4347 ;; This function calls:
  4348 ;;		Nothing
  4349 ;; This function is called by:
  4350 ;;		_SYSTEM_Initialize
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           	psect	text31
  4355  003DCA                     __ptext31:
  4356                           	opt callstack 0
  4357  003DCA                     _TMR2_Initialize:
  4358                           	opt callstack 25
  4359                           
  4360                           ; BSR set to: 62
  4361                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
  4362                           
  4363                           ; BSR set to: 57
  4364                           ;incstack = 0
  4365  003DCA  0E01               	movlw	1
  4366  003DCC  6EAE               	movwf	174,c	;volatile
  4367                           
  4368                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  4369  003DCE  0E00               	movlw	0
  4370  003DD0  6EAD               	movwf	173,c	;volatile
  4371                           
  4372                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  4373  003DD2  0E00               	movlw	0
  4374  003DD4  6EAF               	movwf	175,c	;volatile
  4375                           
  4376                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
  4377  003DD6  0E63               	movlw	99
  4378  003DD8  6EAB               	movwf	171,c	;volatile
  4379                           
  4380                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  4381  003DDA  0E00               	movlw	0
  4382  003DDC  6EAA               	movwf	170,c	;volatile
  4383                           
  4384                           ; BSR set to: 62
  4385                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  4386  003DDE  0139               	movlb	57	; () banked
  4387  003DE0  95A4               	bcf	164,2,b	;volatile
  4388                           
  4389                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
  4390  003DE2  0EC0               	movlw	192
  4391  003DE4  6EAC               	movwf	172,c	;volatile
  4392                           
  4393                           ; BSR set to: 57
  4394  003DE6  0012               	return		;funcret
  4395  003DE8                     __end_of_TMR2_Initialize:
  4396                           	opt callstack 0
  4397                           
  4398 ;; *************** function _SPI1_Initialize *****************
  4399 ;; Defined at:
  4400 ;;		line 64 in file "mcc_generated_files/spi1.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;		None
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;		None
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  1    wreg      void 
  4407 ;; Registers used:
  4408 ;;		wreg, status,2
  4409 ;; Tracked objects:
  4410 ;;		On entry : 3F/39
  4411 ;;		On exit  : 3F/3D
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4418 ;;Total ram usage:        0 bytes
  4419 ;; Hardware stack levels used:    1
  4420 ;; Hardware stack levels required when called:    4
  4421 ;; This function calls:
  4422 ;;		Nothing
  4423 ;; This function is called by:
  4424 ;;		_SYSTEM_Initialize
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427                           
  4428                           	psect	text32
  4429  003E54                     __ptext32:
  4430                           	opt callstack 0
  4431  003E54                     _SPI1_Initialize:
  4432                           	opt callstack 25
  4433                           
  4434                           ; BSR set to: 57
  4435                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
  4436                           
  4437                           ; BSR set to: 57
  4438                           ;incstack = 0
  4439  003E54  0E40               	movlw	64
  4440  003E56  013D               	movlb	61	; () banked
  4441  003E58  6F15               	movwf	21,b	;volatile
  4442                           
  4443                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
  4444  003E5A  0E03               	movlw	3
  4445  003E5C  6F16               	movwf	22,b	;volatile
  4446                           
  4447                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x0F;
  4448  003E5E  0E0F               	movlw	15
  4449  003E60  6F19               	movwf	25,b	;volatile
  4450                           
  4451                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
  4452  003E62  0E00               	movlw	0
  4453  003E64  6F1C               	movwf	28,b	;volatile
  4454                           
  4455                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x82;
  4456  003E66  0E82               	movlw	130
  4457  003E68  6F14               	movwf	20,b	;volatile
  4458                           
  4459                           ; BSR set to: 61
  4460  003E6A  0012               	return		;funcret
  4461  003E6C                     __end_of_SPI1_Initialize:
  4462                           	opt callstack 0
  4463                           
  4464 ;; *************** function _PWM8_Initialize *****************
  4465 ;; Defined at:
  4466 ;;		line 58 in file "mcc_generated_files/pwm8.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;		None
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;		None
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  1    wreg      void 
  4473 ;; Registers used:
  4474 ;;		wreg, status,2
  4475 ;; Tracked objects:
  4476 ;;		On entry : 3F/39
  4477 ;;		On exit  : 3F/3F
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4484 ;;Total ram usage:        0 bytes
  4485 ;; Hardware stack levels used:    1
  4486 ;; Hardware stack levels required when called:    4
  4487 ;; This function calls:
  4488 ;;		Nothing
  4489 ;; This function is called by:
  4490 ;;		_SYSTEM_Initialize
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493                           
  4494                           	psect	text33
  4495  003E6C                     __ptext33:
  4496                           	opt callstack 0
  4497  003E6C                     _PWM8_Initialize:
  4498                           	opt callstack 25
  4499                           
  4500                           ; BSR set to: 57
  4501                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
  4502                           
  4503                           ; BSR set to: 61
  4504                           ;incstack = 0
  4505  003E6C  0E80               	movlw	128
  4506  003E6E  6E62               	movwf	98,c	;volatile
  4507                           
  4508                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x31;
  4509  003E70  0E31               	movlw	49
  4510  003E72  6E61               	movwf	97,c	;volatile
  4511                           
  4512                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0xC0;
  4513  003E74  0EC0               	movlw	192
  4514  003E76  6E60               	movwf	96,c	;volatile
  4515                           
  4516                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
  4517  003E78  013F               	movlb	63	; () banked
  4518  003E7A  515F               	movf	95,w,b	;volatile
  4519  003E7C  0B3F               	andlw	-193
  4520  003E7E  0940               	iorlw	64
  4521  003E80  6F5F               	movwf	95,b	;volatile
  4522                           
  4523                           ; BSR set to: 63
  4524  003E82  0012               	return		;funcret
  4525  003E84                     __end_of_PWM8_Initialize:
  4526                           	opt callstack 0
  4527                           
  4528 ;; *************** function _PMD_Initialize *****************
  4529 ;; Defined at:
  4530 ;;		line 84 in file "mcc_generated_files/mcc.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;		None
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;		None
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  1    wreg      void 
  4537 ;; Registers used:
  4538 ;;		wreg, status,2
  4539 ;; Tracked objects:
  4540 ;;		On entry : 3F/39
  4541 ;;		On exit  : 3F/39
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4548 ;;Total ram usage:        0 bytes
  4549 ;; Hardware stack levels used:    1
  4550 ;; Hardware stack levels required when called:    4
  4551 ;; This function calls:
  4552 ;;		Nothing
  4553 ;; This function is called by:
  4554 ;;		_SYSTEM_Initialize
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           	psect	text34
  4559  003D86                     __ptext34:
  4560                           	opt callstack 0
  4561  003D86                     _PMD_Initialize:
  4562                           	opt callstack 25
  4563                           
  4564                           ; BSR set to: 57
  4565                           ;mcc_generated_files/mcc.c: 87:     PMD0 = 0x00;
  4566                           
  4567                           ; BSR set to: 63
  4568                           ;incstack = 0
  4569  003D86  0E00               	movlw	0
  4570  003D88  6FC0               	movwf	192,b	;volatile
  4571                           
  4572                           ;mcc_generated_files/mcc.c: 89:     PMD1 = 0x00;
  4573  003D8A  0E00               	movlw	0
  4574  003D8C  6FC1               	movwf	193,b	;volatile
  4575                           
  4576                           ;mcc_generated_files/mcc.c: 91:     PMD2 = 0x00;
  4577  003D8E  0E00               	movlw	0
  4578  003D90  6FC2               	movwf	194,b	;volatile
  4579                           
  4580                           ;mcc_generated_files/mcc.c: 93:     PMD3 = 0x00;
  4581  003D92  0E00               	movlw	0
  4582  003D94  6FC3               	movwf	195,b	;volatile
  4583                           
  4584                           ;mcc_generated_files/mcc.c: 95:     PMD4 = 0x00;
  4585  003D96  0E00               	movlw	0
  4586  003D98  6FC4               	movwf	196,b	;volatile
  4587                           
  4588                           ;mcc_generated_files/mcc.c: 97:     PMD5 = 0x00;
  4589  003D9A  0E00               	movlw	0
  4590  003D9C  6FC5               	movwf	197,b	;volatile
  4591                           
  4592                           ;mcc_generated_files/mcc.c: 99:     PMD6 = 0x00;
  4593  003D9E  0E00               	movlw	0
  4594  003DA0  6FC6               	movwf	198,b	;volatile
  4595                           
  4596                           ;mcc_generated_files/mcc.c: 101:     PMD7 = 0x00;
  4597  003DA2  0E00               	movlw	0
  4598  003DA4  6FC7               	movwf	199,b	;volatile
  4599                           
  4600                           ; BSR set to: 57
  4601  003DA6  0012               	return		;funcret
  4602  003DA8                     __end_of_PMD_Initialize:
  4603                           	opt callstack 0
  4604                           
  4605 ;; *************** function _PIN_MANAGER_Initialize *****************
  4606 ;; Defined at:
  4607 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;		None
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;		None
  4612 ;; Return value:  Size  Location     Type
  4613 ;;                  1    wreg      void 
  4614 ;; Registers used:
  4615 ;;		wreg, status,2
  4616 ;; Tracked objects:
  4617 ;;		On entry : 3F/39
  4618 ;;		On exit  : 3F/3A
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4625 ;;Total ram usage:        0 bytes
  4626 ;; Hardware stack levels used:    1
  4627 ;; Hardware stack levels required when called:    4
  4628 ;; This function calls:
  4629 ;;		Nothing
  4630 ;; This function is called by:
  4631 ;;		_SYSTEM_Initialize
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           	psect	text35
  4636  003238                     __ptext35:
  4637                           	opt callstack 0
  4638  003238                     _PIN_MANAGER_Initialize:
  4639                           	opt callstack 25
  4640                           
  4641                           ; BSR set to: 57
  4642                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x01;
  4643                           
  4644                           ; BSR set to: 57
  4645                           ;incstack = 0
  4646  003238  0E01               	movlw	1
  4647  00323A  6EBE               	movwf	190,c	;volatile
  4648                           
  4649                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x02;
  4650  00323C  0E02               	movlw	2
  4651  00323E  6EBD               	movwf	189,c	;volatile
  4652                           
  4653                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  4654  003240  0E00               	movlw	0
  4655  003242  6EBA               	movwf	186,c	;volatile
  4656                           
  4657                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  4658  003244  0E00               	movlw	0
  4659  003246  6EBB               	movwf	187,c	;volatile
  4660                           
  4661                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x06;
  4662  003248  0E06               	movlw	6
  4663  00324A  6EBC               	movwf	188,c	;volatile
  4664                           
  4665                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x06;
  4666  00324C  0E06               	movlw	6
  4667  00324E  6EC6               	movwf	198,c	;volatile
  4668                           
  4669                           ; BSR set to: 57
  4670                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  4671  003250  68C2               	setf	194,c	;volatile
  4672                           
  4673                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  4674  003252  0EBF               	movlw	191
  4675  003254  6EC3               	movwf	195,c	;volatile
  4676                           
  4677                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x91;
  4678  003256  0E91               	movlw	145
  4679  003258  6EC4               	movwf	196,c	;volatile
  4680                           
  4681                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFD;
  4682  00325A  0EFD               	movlw	253
  4683  00325C  6EC5               	movwf	197,c	;volatile
  4684                           
  4685                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFD;
  4686  00325E  0EFD               	movlw	253
  4687  003260  013A               	movlb	58	; () banked
  4688  003262  6F70               	movwf	112,b	;volatile
  4689                           
  4690                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
  4691  003264  0E00               	movlw	0
  4692  003266  6F60               	movwf	96,b	;volatile
  4693                           
  4694                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3F;
  4695  003268  0E3F               	movlw	63
  4696  00326A  6F50               	movwf	80,b	;volatile
  4697                           
  4698                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x06;
  4699  00326C  0E06               	movlw	6
  4700  00326E  6F80               	movwf	128,b	;volatile
  4701                           
  4702                           ; BSR set to: 58
  4703                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  4704  003270  6940               	setf	64,b	;volatile
  4705                           
  4706                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  4707  003272  0E00               	movlw	0
  4708  003274  6F71               	movwf	113,b	;volatile
  4709                           
  4710                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  4711  003276  0E00               	movlw	0
  4712  003278  6F81               	movwf	129,b	;volatile
  4713                           
  4714                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  4715  00327A  0E00               	movlw	0
  4716  00327C  6F51               	movwf	81,b	;volatile
  4717                           
  4718                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  4719  00327E  0E00               	movlw	0
  4720  003280  6F41               	movwf	65,b	;volatile
  4721                           
  4722                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  4723  003282  0E00               	movlw	0
  4724  003284  6F61               	movwf	97,b	;volatile
  4725                           
  4726                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  4727  003286  0E00               	movlw	0
  4728  003288  6F5A               	movwf	90,b	;volatile
  4729                           
  4730                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  4731  00328A  0E00               	movlw	0
  4732  00328C  6F5B               	movwf	91,b	;volatile
  4733                           
  4734                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  4735  00328E  0E00               	movlw	0
  4736  003290  6F6A               	movwf	106,b	;volatile
  4737                           
  4738                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  4739  003292  0E00               	movlw	0
  4740  003294  6F6B               	movwf	107,b	;volatile
  4741                           
  4742                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  4743  003296  0E00               	movlw	0
  4744  003298  6F7A               	movwf	122,b	;volatile
  4745                           
  4746                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  4747  00329A  0E00               	movlw	0
  4748  00329C  6F7B               	movwf	123,b	;volatile
  4749                           
  4750                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  4751  00329E  0E00               	movlw	0
  4752  0032A0  6F82               	movwf	130,b	;volatile
  4753                           
  4754                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  4755  0032A2  0E00               	movlw	0
  4756  0032A4  6F42               	movwf	66,b	;volatile
  4757                           
  4758                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
  4759  0032A6  0E00               	movlw	0
  4760  0032A8  6F52               	movwf	82,b	;volatile
  4761                           
  4762                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
  4763  0032AA  0E00               	movlw	0
  4764  0032AC  6F62               	movwf	98,b	;volatile
  4765                           
  4766                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  4767  0032AE  0E00               	movlw	0
  4768  0032B0  6F72               	movwf	114,b	;volatile
  4769                           
  4770                           ; BSR set to: 58
  4771                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  4772  0032B2  6943               	setf	67,b	;volatile
  4773                           
  4774                           ; BSR set to: 58
  4775                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  4776  0032B4  6953               	setf	83,b	;volatile
  4777                           
  4778                           ; BSR set to: 58
  4779                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  4780  0032B6  6963               	setf	99,b	;volatile
  4781                           
  4782                           ; BSR set to: 58
  4783                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  4784  0032B8  6973               	setf	115,b	;volatile
  4785                           
  4786                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  4787  0032BA  0E07               	movlw	7
  4788  0032BC  6F83               	movwf	131,b	;volatile
  4789                           
  4790                           ;mcc_generated_files/pin_manager.c: 128:     U2RXPPS = 0x0F;
  4791  0032BE  0E0F               	movlw	15
  4792  0032C0  6FE8               	movwf	232,b	;volatile
  4793                           
  4794                           ;mcc_generated_files/pin_manager.c: 129:     SPI1SCKPPS = 0x13;
  4795  0032C2  0E13               	movlw	19
  4796  0032C4  6FDE               	movwf	222,b	;volatile
  4797                           
  4798                           ;mcc_generated_files/pin_manager.c: 130:     RB6PPS = 0x16;
  4799  0032C6  0E16               	movlw	22
  4800  0032C8  6F0E               	movwf	14,b	;volatile
  4801                           
  4802                           ;mcc_generated_files/pin_manager.c: 131:     RC3PPS = 0x1E;
  4803  0032CA  0E1E               	movlw	30
  4804  0032CC  6F13               	movwf	19,b	;volatile
  4805                           
  4806                           ;mcc_generated_files/pin_manager.c: 132:     RD1PPS = 0x10;
  4807  0032CE  0E10               	movlw	16
  4808  0032D0  6F19               	movwf	25,b	;volatile
  4809                           
  4810                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
  4811  0032D2  0E1F               	movlw	31
  4812  0032D4  6F15               	movwf	21,b	;volatile
  4813                           
  4814                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
  4815  0032D6  0E13               	movlw	19
  4816  0032D8  6F16               	movwf	22,b	;volatile
  4817                           
  4818                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
  4819  0032DA  0E17               	movlw	23
  4820  0032DC  6FE5               	movwf	229,b	;volatile
  4821                           
  4822                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
  4823  0032DE  0E14               	movlw	20
  4824  0032E0  6FDF               	movwf	223,b	;volatile
  4825                           
  4826                           ; BSR set to: 58
  4827  0032E2  0012               	return		;funcret
  4828  0032E4                     __end_of_PIN_MANAGER_Initialize:
  4829                           	opt callstack 0
  4830                           
  4831 ;; *************** function _OSCILLATOR_Initialize *****************
  4832 ;; Defined at:
  4833 ;;		line 66 in file "mcc_generated_files/mcc.c"
  4834 ;; Parameters:    Size  Location     Type
  4835 ;;		None
  4836 ;; Auto vars:     Size  Location     Type
  4837 ;;		None
  4838 ;; Return value:  Size  Location     Type
  4839 ;;                  1    wreg      void 
  4840 ;; Registers used:
  4841 ;;		wreg, status,2
  4842 ;; Tracked objects:
  4843 ;;		On entry : 3F/3A
  4844 ;;		On exit  : 3F/39
  4845 ;;		Unchanged: 0/0
  4846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4851 ;;Total ram usage:        0 bytes
  4852 ;; Hardware stack levels used:    1
  4853 ;; Hardware stack levels required when called:    4
  4854 ;; This function calls:
  4855 ;;		Nothing
  4856 ;; This function is called by:
  4857 ;;		_SYSTEM_Initialize
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           
  4861                           	psect	text36
  4862  003DE8                     __ptext36:
  4863                           	opt callstack 0
  4864  003DE8                     _OSCILLATOR_Initialize:
  4865                           	opt callstack 25
  4866                           
  4867                           ; BSR set to: 58
  4868                           ;mcc_generated_files/mcc.c: 69:     OSCCON1 = 0x20;
  4869                           
  4870                           ; BSR set to: 58
  4871                           ;incstack = 0
  4872  003DE8  0E20               	movlw	32
  4873  003DEA  0139               	movlb	57	; () banked
  4874  003DEC  6FD9               	movwf	217,b	;volatile
  4875                           
  4876                           ;mcc_generated_files/mcc.c: 71:     OSCCON3 = 0x00;
  4877  003DEE  0E00               	movlw	0
  4878  003DF0  6FDB               	movwf	219,b	;volatile
  4879                           
  4880                           ;mcc_generated_files/mcc.c: 73:     OSCEN = 0x00;
  4881  003DF2  0E00               	movlw	0
  4882  003DF4  6FDD               	movwf	221,b	;volatile
  4883                           
  4884                           ;mcc_generated_files/mcc.c: 75:     OSCFRQ = 0x08;
  4885  003DF6  0E08               	movlw	8
  4886  003DF8  6FDF               	movwf	223,b	;volatile
  4887                           
  4888                           ;mcc_generated_files/mcc.c: 77:     OSCTUNE = 0x00;
  4889  003DFA  0E00               	movlw	0
  4890  003DFC  6FDE               	movwf	222,b	;volatile
  4891  003DFE                     l66:
  4892                           
  4893                           ; BSR set to: 57
  4894                           ;mcc_generated_files/mcc.c: 79:     while(PLLR == 0)
  4895  003DFE  B1DC               	btfsc	220,0,b	;volatile
  4896  003E00  0012               	return	
  4897  003E02  D7FD               	goto	l66
  4898  003E04                     __end_of_OSCILLATOR_Initialize:
  4899                           	opt callstack 0
  4900                           
  4901 ;; *************** function _INTERRUPT_Initialize *****************
  4902 ;; Defined at:
  4903 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4904 ;; Parameters:    Size  Location     Type
  4905 ;;		None
  4906 ;; Auto vars:     Size  Location     Type
  4907 ;;  state           1    5[COMRAM] _Bool 
  4908 ;; Return value:  Size  Location     Type
  4909 ;;                  1    wreg      void 
  4910 ;; Registers used:
  4911 ;;		wreg, status,2
  4912 ;; Tracked objects:
  4913 ;;		On entry : 3F/0
  4914 ;;		On exit  : 3F/39
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4918 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4920 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4921 ;;Total ram usage:        1 bytes
  4922 ;; Hardware stack levels used:    1
  4923 ;; Hardware stack levels required when called:    4
  4924 ;; This function calls:
  4925 ;;		Nothing
  4926 ;; This function is called by:
  4927 ;;		_SYSTEM_Initialize
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931                           	psect	text37
  4932  003816                     __ptext37:
  4933                           	opt callstack 0
  4934  003816                     _INTERRUPT_Initialize:
  4935                           	opt callstack 25
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
  4939                           
  4940                           ; BSR set to: 57
  4941                           ;incstack = 0
  4942  003816  8AD2               	bsf	210,5,c	;volatile
  4943                           
  4944                           ; BSR set to: 0
  4945                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
  4946  003818  0E00               	movlw	0
  4947  00381A  BED2               	btfsc	16338,7,c	;volatile
  4948  00381C  0E01               	movlw	1
  4949  00381E  6E06               	movwf	INTERRUPT_Initialize@state^0,c
  4950                           
  4951                           ; BSR set to: 0
  4952                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
  4953  003820  9ED2               	bcf	16338,7,c	;volatile
  4954                           
  4955                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
  4956  003822  0E55               	movlw	85
  4957  003824  6ED4               	movwf	212,c	;volatile
  4958                           
  4959                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
  4960  003826  0EAA               	movlw	170
  4961  003828  6ED4               	movwf	212,c	;volatile
  4962                           
  4963                           ; BSR set to: 0
  4964                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
  4965  00382A  90D4               	bcf	212,0,c	;volatile
  4966                           
  4967                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
  4968  00382C  0E00               	movlw	0
  4969  00382E  0138               	movlb	56	; () banked
  4970  003830  6F9F               	movwf	159,b	;volatile
  4971                           
  4972                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
  4973  003832  0E00               	movlw	0
  4974  003834  6F9E               	movwf	158,b	;volatile
  4975                           
  4976                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
  4977  003836  0E08               	movlw	8
  4978  003838  6F9D               	movwf	157,b	;volatile
  4979                           
  4980                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
  4981  00383A  0E55               	movlw	85
  4982  00383C  6ED4               	movwf	212,c	;volatile
  4983                           
  4984                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
  4985  00383E  0EAA               	movlw	170
  4986  003840  6ED4               	movwf	212,c	;volatile
  4987                           
  4988                           ; BSR set to: 56
  4989                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
  4990  003842  80D4               	bsf	212,0,c	;volatile
  4991                           
  4992                           ; BSR set to: 56
  4993                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
  4994  003844  B006               	btfsc	INTERRUPT_Initialize@state^0,0,c
  4995  003846  D002               	bra	u3855
  4996  003848  9ED2               	bcf	16338,7,c	;volatile
  4997  00384A  D001               	bra	u3856
  4998  00384C                     u3855:
  4999  00384C  8ED2               	bsf	16338,7,c	;volatile
  5000  00384E                     u3856:
  5001                           
  5002                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR6bits.U2TXIP = 1;
  5003  00384E  0139               	movlb	57	; () banked
  5004  003850  8786               	bsf	134,3,b	;volatile
  5005                           
  5006                           ; BSR set to: 57
  5007                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR6bits.U2RXIP = 1;
  5008  003852  8586               	bsf	134,2,b	;volatile
  5009                           
  5010                           ; BSR set to: 57
  5011                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR3bits.U1TXIP = 1;
  5012  003854  8983               	bsf	131,4,b	;volatile
  5013                           
  5014                           ; BSR set to: 57
  5015                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR3bits.U1RXIP = 1;
  5016  003856  8783               	bsf	131,3,b	;volatile
  5017                           
  5018                           ; BSR set to: 57
  5019                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR9bits.TMR6IP = 1;
  5020  003858  8189               	bsf	137,0,b	;volatile
  5021                           
  5022                           ; BSR set to: 57
  5023                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR8bits.TMR5IP = 1;
  5024  00385A  8D88               	bsf	136,6,b	;volatile
  5025                           
  5026                           ; BSR set to: 57
  5027  00385C  0012               	return		;funcret
  5028  00385E                     __end_of_INTERRUPT_Initialize:
  5029                           	opt callstack 0
  5030                           
  5031 ;; *************** function _ADCC_Initialize *****************
  5032 ;; Defined at:
  5033 ;;		line 62 in file "mcc_generated_files/adcc.c"
  5034 ;; Parameters:    Size  Location     Type
  5035 ;;		None
  5036 ;; Auto vars:     Size  Location     Type
  5037 ;;		None
  5038 ;; Return value:  Size  Location     Type
  5039 ;;                  1    wreg      void 
  5040 ;; Registers used:
  5041 ;;		wreg, status,2
  5042 ;; Tracked objects:
  5043 ;;		On entry : 3F/39
  5044 ;;		On exit  : 3F/3E
  5045 ;;		Unchanged: 0/0
  5046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5051 ;;Total ram usage:        0 bytes
  5052 ;; Hardware stack levels used:    1
  5053 ;; Hardware stack levels required when called:    4
  5054 ;; This function calls:
  5055 ;;		Nothing
  5056 ;; This function is called by:
  5057 ;;		_SYSTEM_Initialize
  5058 ;; This function uses a non-reentrant model
  5059 ;;
  5060                           
  5061                           	psect	text38
  5062  00367A                     __ptext38:
  5063                           	opt callstack 0
  5064  00367A                     _ADCC_Initialize:
  5065                           	opt callstack 25
  5066                           
  5067                           ; BSR set to: 57
  5068                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  5069                           
  5070                           ; BSR set to: 57
  5071                           ;incstack = 0
  5072  00367A  0E00               	movlw	0
  5073  00367C  013E               	movlb	62	; () banked
  5074  00367E  6FDE               	movwf	222,b	;volatile
  5075                           
  5076                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  5077  003680  0E00               	movlw	0
  5078  003682  6FDF               	movwf	223,b	;volatile
  5079                           
  5080                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  5081  003684  0E00               	movlw	0
  5082  003686  6FE0               	movwf	224,b	;volatile
  5083                           
  5084                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  5085  003688  0E00               	movlw	0
  5086  00368A  6FE1               	movwf	225,b	;volatile
  5087                           
  5088                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  5089  00368C  0E00               	movlw	0
  5090  00368E  6FE4               	movwf	228,b	;volatile
  5091                           
  5092                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  5093  003690  0E00               	movlw	0
  5094  003692  6FE5               	movwf	229,b	;volatile
  5095                           
  5096                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
  5097  003694  0E00               	movlw	0
  5098  003696  6FEA               	movwf	234,b	;volatile
  5099                           
  5100                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
  5101  003698  0E00               	movlw	0
  5102  00369A  6FEC               	movwf	236,b	;volatile
  5103                           
  5104                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  5105  00369C  0E00               	movlw	0
  5106  00369E  6FF1               	movwf	241,b	;volatile
  5107                           
  5108                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x00;
  5109  0036A0  0E00               	movlw	0
  5110  0036A2  6FF3               	movwf	243,b	;volatile
  5111                           
  5112                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x00;
  5113  0036A4  0E00               	movlw	0
  5114  0036A6  6FF4               	movwf	244,b	;volatile
  5115                           
  5116                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
  5117  0036A8  0E00               	movlw	0
  5118  0036AA  6FF5               	movwf	245,b	;volatile
  5119                           
  5120                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
  5121  0036AC  0E00               	movlw	0
  5122  0036AE  6FF6               	movwf	246,b	;volatile
  5123                           
  5124                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
  5125  0036B0  0E00               	movlw	0
  5126  0036B2  6FF7               	movwf	247,b	;volatile
  5127                           
  5128                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
  5129  0036B4  0E00               	movlw	0
  5130  0036B6  6FF9               	movwf	249,b	;volatile
  5131                           
  5132                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x02;
  5133  0036B8  0E02               	movlw	2
  5134  0036BA  6FFA               	movwf	250,b	;volatile
  5135                           
  5136                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x20;
  5137  0036BC  0E20               	movlw	32
  5138  0036BE  6FFB               	movwf	251,b	;volatile
  5139                           
  5140                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
  5141  0036C0  0E00               	movlw	0
  5142  0036C2  6FFC               	movwf	252,b	;volatile
  5143                           
  5144                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
  5145  0036C4  0E00               	movlw	0
  5146  0036C6  6FFD               	movwf	253,b	;volatile
  5147                           
  5148                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
  5149  0036C8  0E00               	movlw	0
  5150  0036CA  6FFE               	movwf	254,b	;volatile
  5151                           
  5152                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x3F;
  5153  0036CC  0E3F               	movlw	63
  5154  0036CE  6FFF               	movwf	255,b	;volatile
  5155                           
  5156                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0xC4;
  5157  0036D0  0EC4               	movlw	196
  5158  0036D2  6FF8               	movwf	248,b	;volatile
  5159                           
  5160                           ; BSR set to: 62
  5161  0036D4  0012               	return		;funcret
  5162  0036D6                     __end_of_ADCC_Initialize:
  5163                           	opt callstack 0
  5164                           
  5165 ;; *************** function _Digital232_init *****************
  5166 ;; Defined at:
  5167 ;;		line 9 in file "d232.c"
  5168 ;; Parameters:    Size  Location     Type
  5169 ;;		None
  5170 ;; Auto vars:     Size  Location     Type
  5171 ;;		None
  5172 ;; Return value:  Size  Location     Type
  5173 ;;                  1    wreg      void 
  5174 ;; Registers used:
  5175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5176 ;; Tracked objects:
  5177 ;;		On entry : 0/1
  5178 ;;		On exit  : 0/0
  5179 ;;		Unchanged: 0/0
  5180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5185 ;;Total ram usage:        0 bytes
  5186 ;; Hardware stack levels used:    1
  5187 ;; Hardware stack levels required when called:   13
  5188 ;; This function calls:
  5189 ;;		_ADCC_StartConversion
  5190 ;;		_StartTimer
  5191 ;;		_UART2_Read
  5192 ;;		_UART2_is_rx_ready
  5193 ;;		_WaitMs
  5194 ;;		_printf
  5195 ;; This function is called by:
  5196 ;;		_main
  5197 ;; This function uses a non-reentrant model
  5198 ;;
  5199                           
  5200                           	psect	text39
  5201  002E8C                     __ptext39:
  5202                           	opt callstack 0
  5203  002E8C                     _Digital232_init:
  5204                           	opt callstack 17
  5205                           
  5206                           ;d232.c: 11:  printf("%s", "XQ\r");
  5207                           
  5208                           ; BSR set to: 62
  5209                           ;incstack = 0
  5210  002E8C  0E4C               	movlw	low STR_5
  5211  002E8E  0100               	movlb	0	; () banked
  5212  002E90  6F64               	movwf	printf@fmt& (0+255),b
  5213  002E92  0E48               	movlw	low STR_6
  5214  002E94  6F65               	movwf	(?_printf+1)& (0+255),b
  5215  002E96  5165               	movf	(?_printf+1)& (0+255),w,b
  5216  002E98  A4D8               	btfss	status,2,c
  5217  002E9A  0E20               	movlw	high __smallconst
  5218  002E9C  6F66               	movwf	(?_printf+2)& (0+255),b
  5219  002E9E  EC02  F01F         	call	_printf	;wreg free
  5220                           
  5221                           ; BSR set to: 1
  5222                           ;d232.c: 12:  WaitMs(5);
  5223  002EA2  0E00               	movlw	0
  5224  002EA4  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  5225  002EA6  0E05               	movlw	5
  5226  002EA8  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  5227  002EAA  ECD1  F01D         	call	_WaitMs	;wreg free
  5228                           
  5229                           ;d232.c: 13:  printf("%s", "T2\r");
  5230  002EAE  0E4C               	movlw	low STR_5
  5231  002EB0  0100               	movlb	0	; () banked
  5232  002EB2  6F64               	movwf	printf@fmt& (0+255),b
  5233  002EB4  0E38               	movlw	low STR_8
  5234  002EB6  6F65               	movwf	(?_printf+1)& (0+255),b
  5235  002EB8  5165               	movf	(?_printf+1)& (0+255),w,b
  5236  002EBA  A4D8               	btfss	status,2,c
  5237  002EBC  0E20               	movlw	high __smallconst
  5238  002EBE  6F66               	movwf	(?_printf+2)& (0+255),b
  5239  002EC0  EC02  F01F         	call	_printf	;wreg free
  5240                           
  5241                           ;d232.c: 14:  WaitMs(800);
  5242  002EC4  0E03               	movlw	3
  5243  002EC6  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  5244  002EC8  0E20               	movlw	32
  5245  002ECA  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  5246  002ECC  ECD1  F01D         	call	_WaitMs	;wreg free
  5247                           
  5248                           ;d232.c: 15:  printf("%s", "C4\r");
  5249  002ED0  0E4C               	movlw	low STR_5
  5250  002ED2  0100               	movlb	0	; () banked
  5251  002ED4  6F64               	movwf	printf@fmt& (0+255),b
  5252  002ED6  0E3C               	movlw	low STR_10
  5253  002ED8  6F65               	movwf	(?_printf+1)& (0+255),b
  5254  002EDA  5165               	movf	(?_printf+1)& (0+255),w,b
  5255  002EDC  A4D8               	btfss	status,2,c
  5256  002EDE  0E20               	movlw	high __smallconst
  5257  002EE0  6F66               	movwf	(?_printf+2)& (0+255),b
  5258  002EE2  EC02  F01F         	call	_printf	;wreg free
  5259                           
  5260                           ; BSR set to: 1
  5261                           ;d232.c: 16:  WaitMs(5);
  5262  002EE6  0E00               	movlw	0
  5263  002EE8  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  5264  002EEA  0E05               	movlw	5
  5265  002EEC  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  5266  002EEE  ECD1  F01D         	call	_WaitMs	;wreg free
  5267                           
  5268                           ;d232.c: 17:  printf("%s", "F4\r");
  5269  002EF2  0E4C               	movlw	low STR_5
  5270  002EF4  0100               	movlb	0	; () banked
  5271  002EF6  6F64               	movwf	printf@fmt& (0+255),b
  5272  002EF8  0E40               	movlw	low STR_12
  5273  002EFA  6F65               	movwf	(?_printf+1)& (0+255),b
  5274  002EFC  5165               	movf	(?_printf+1)& (0+255),w,b
  5275  002EFE  A4D8               	btfss	status,2,c
  5276  002F00  0E20               	movlw	high __smallconst
  5277  002F02  6F66               	movwf	(?_printf+2)& (0+255),b
  5278  002F04  EC02  F01F         	call	_printf	;wreg free
  5279                           
  5280                           ; BSR set to: 1
  5281                           ;d232.c: 18:  WaitMs(5);
  5282  002F08  0E00               	movlw	0
  5283  002F0A  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  5284  002F0C  0E05               	movlw	5
  5285  002F0E  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  5286  002F10  ECD1  F01D         	call	_WaitMs	;wreg free
  5287                           
  5288                           ;d232.c: 19:  printf("%s", "M4\r");
  5289  002F14  0E4C               	movlw	low STR_5
  5290  002F16  0100               	movlb	0	; () banked
  5291  002F18  6F64               	movwf	printf@fmt& (0+255),b
  5292  002F1A  0E44               	movlw	low STR_14
  5293  002F1C  6F65               	movwf	(?_printf+1)& (0+255),b
  5294  002F1E  5165               	movf	(?_printf+1)& (0+255),w,b
  5295  002F20  A4D8               	btfss	status,2,c
  5296  002F22  0E20               	movlw	high __smallconst
  5297  002F24  6F66               	movwf	(?_printf+2)& (0+255),b
  5298  002F26  EC02  F01F         	call	_printf	;wreg free
  5299                           
  5300                           ;d232.c: 20:  WaitMs(5);
  5301  002F2A  0E00               	movlw	0
  5302  002F2C  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  5303  002F2E  0E05               	movlw	5
  5304  002F30  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  5305  002F32  ECD1  F01D         	call	_WaitMs	;wreg free
  5306                           
  5307                           ;d232.c: 21:  IO.d232 = D232_INIT;
  5308  002F36  0E01               	movlw	1
  5309  002F38  0101               	movlb	1	; () banked
  5310  002F3A  6FAA               	movwf	(_IO+13)& (0+255),b
  5311                           
  5312                           ; BSR set to: 1
  5313                           ;d232.c: 25:  if (UART2_is_rx_ready())
  5314  002F3C  ECD7  F01F         	call	_UART2_is_rx_ready	;wreg free
  5315  002F40  0900               	iorlw	0
  5316  002F42  A4D8               	btfss	status,2,c
  5317                           
  5318                           ; BSR set to: 0
  5319                           ;d232.c: 26:   UART2_Read();
  5320  002F44  EC2F  F01C         	call	_UART2_Read	;wreg free
  5321                           
  5322                           ;d232.c: 27:  IO.io = IO_INIT;
  5323  002F48  0E01               	movlw	1
  5324  002F4A  0101               	movlb	1	; () banked
  5325  002F4C  6FA9               	movwf	(_IO+12)& (0+255),b
  5326                           
  5327                           ; BSR set to: 1
  5328                           ;d232.c: 28:  IO.srq = S_IDLE;
  5329  002F4E  0E00               	movlw	0
  5330  002F50  6FAB               	movwf	(_IO+14)& (0+255),b
  5331                           
  5332                           ; BSR set to: 1
  5333                           ;d232.c: 29:  IO.srq_value = 0;
  5334  002F52  0E00               	movlw	0
  5335  002F54  6FAC               	movwf	(_IO+15)& (0+255),b
  5336                           
  5337                           ; BSR set to: 1
  5338                           ;d232.c: 30:  IO.button_value = 0;
  5339  002F56  0E00               	movlw	0
  5340  002F58  6FB3               	movwf	(_IO+22)& (0+255),b
  5341  002F5A  0E00               	movlw	0
  5342  002F5C  6FB2               	movwf	(_IO+21)& (0+255),b
  5343                           
  5344                           ; BSR set to: 1
  5345                           ;d232.c: 31:  ADCC_StartConversion(channel_ANA0);
  5346  002F5E  0E00               	movlw	0
  5347  002F60  ECC5  F01F         	call	_ADCC_StartConversion
  5348                           
  5349                           ; BSR set to: 62
  5350                           ;d232.c: 32:  StartTimer(TMR_SPS, 10);
  5351  002F64  0E00               	movlw	0
  5352  002F66  6E07               	movwf	(StartTimer@count+1)^0,c
  5353  002F68  0E0A               	movlw	10
  5354  002F6A  6E06               	movwf	StartTimer@count^0,c
  5355  002F6C  0E03               	movlw	3
  5356  002F6E  EC58  F01D         	call	_StartTimer
  5357  002F72  0012               	return		;funcret
  5358  002F74                     __end_of_Digital232_init:
  5359                           	opt callstack 0
  5360                           
  5361 ;; *************** function _WaitMs *****************
  5362 ;; Defined at:
  5363 ;;		line 31 in file "timers.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;  numMilliseco    2   10[COMRAM] const unsigned short 
  5366 ;; Auto vars:     Size  Location     Type
  5367 ;;		None
  5368 ;; Return value:  Size  Location     Type
  5369 ;;                  1    wreg      void 
  5370 ;; Registers used:
  5371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5372 ;; Tracked objects:
  5373 ;;		On entry : 3F/1
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5377 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5380 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5381 ;;Total ram usage:        2 bytes
  5382 ;; Hardware stack levels used:    1
  5383 ;; Hardware stack levels required when called:    5
  5384 ;; This function calls:
  5385 ;;		_StartTimer
  5386 ;;		_TimerDone
  5387 ;; This function is called by:
  5388 ;;		_Digital232_init
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392                           	psect	text40
  5393  003BA2                     __ptext40:
  5394                           	opt callstack 0
  5395  003BA2                     _WaitMs:
  5396                           	opt callstack 24
  5397                           
  5398                           ; BSR set to: 1
  5399                           ;timers.c: 31: void WaitMs(const uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  5400                           
  5401                           ;incstack = 0
  5402  003BA2  0060  F02C  F006   	movff	WaitMs@numMilliseconds,StartTimer@count
  5403  003BA8  0060  F030  F007   	movff	WaitMs@numMilliseconds+1,StartTimer@count+1
  5404  003BAE  0E00               	movlw	0
  5405  003BB0  EC58  F01D         	call	_StartTimer
  5406                           
  5407                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  5408  003BB4  D005               	goto	l5139
  5409  003BB6                     l1183:
  5410                           
  5411                           ;timers.c: 35:   __nop();
  5412  003BB6  F000               	nop	
  5413                           
  5414                           ;timers.c: 36:   __nop();
  5415  003BB8  F000               	nop	
  5416                           
  5417                           ;timers.c: 37:   __nop();
  5418  003BBA  F000               	nop	
  5419                           
  5420                           ;timers.c: 38:   __nop();
  5421  003BBC  F000               	nop	
  5422  003BBE  0004               	clrwdt		;# 
  5423  003BC0                     l5139:
  5424                           
  5425                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  5426  003BC0  0E00               	movlw	0
  5427  003BC2  EC22  F01E         	call	_TimerDone
  5428  003BC6  0900               	iorlw	0
  5429  003BC8  A4D8               	btfss	status,2,c
  5430  003BCA  0012               	return	
  5431  003BCC  D7F4               	goto	l1183
  5432  003BCE                     __end_of_WaitMs:
  5433                           	opt callstack 0
  5434                           
  5435 ;; *************** function _ADCC_StartConversion *****************
  5436 ;; Defined at:
  5437 ;;		line 113 in file "mcc_generated_files/adcc.c"
  5438 ;; Parameters:    Size  Location     Type
  5439 ;;  channel         1    wreg     enum E15799
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;  channel         1    5[COMRAM] enum E15799
  5442 ;; Return value:  Size  Location     Type
  5443 ;;                  1    wreg      void 
  5444 ;; Registers used:
  5445 ;;		wreg
  5446 ;; Tracked objects:
  5447 ;;		On entry : 3F/1
  5448 ;;		On exit  : 3F/3E
  5449 ;;		Unchanged: 0/0
  5450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5452 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5454 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5455 ;;Total ram usage:        1 bytes
  5456 ;; Hardware stack levels used:    1
  5457 ;; Hardware stack levels required when called:    4
  5458 ;; This function calls:
  5459 ;;		Nothing
  5460 ;; This function is called by:
  5461 ;;		_Digital232_init
  5462 ;; This function uses a non-reentrant model
  5463 ;;
  5464                           
  5465                           	psect	text41
  5466  003F8A                     __ptext41:
  5467                           	opt callstack 0
  5468  003F8A                     _ADCC_StartConversion:
  5469                           	opt callstack 25
  5470                           
  5471                           ;incstack = 0
  5472                           ;ADCC_StartConversion@channel stored from wreg
  5473  003F8A  6E06               	movwf	ADCC_StartConversion@channel^0,c
  5474                           
  5475                           ;mcc_generated_files/adcc.c: 113: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 114: {;mcc_generated_files/adcc.c: 116:     ADPCH = channel;
  5476  003F8C  0060  F01B  FEF1   	movff	ADCC_StartConversion@channel,16113	;volatile
  5477                           
  5478                           ;mcc_generated_files/adcc.c: 119:     ADCON0bits.ADON = 1;
  5479  003F92  013E               	movlb	62	; () banked
  5480  003F94  8FF8               	bsf	248,7,b	;volatile
  5481                           
  5482                           ; BSR set to: 62
  5483                           ;mcc_generated_files/adcc.c: 122:     ADCON0bits.ADGO = 1;
  5484  003F96  81F8               	bsf	248,0,b	;volatile
  5485                           
  5486                           ; BSR set to: 62
  5487  003F98  0012               	return		;funcret
  5488  003F9A                     __end_of_ADCC_StartConversion:
  5489                           	opt callstack 0
  5490                           
  5491 ;; *************** function _Digital232_RW *****************
  5492 ;; Defined at:
  5493 ;;		line 35 in file "d232.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;		None
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;  j               1   13[BANK0 ] unsigned char 
  5498 ;;  i               1   12[BANK0 ] unsigned char 
  5499 ;; Return value:  Size  Location     Type
  5500 ;;                  1    wreg      _Bool 
  5501 ;; Registers used:
  5502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5503 ;; Tracked objects:
  5504 ;;		On entry : 0/0
  5505 ;;		On exit  : 3F/1
  5506 ;;		Unchanged: 0/0
  5507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5509 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5510 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5511 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5512 ;;Total ram usage:        4 bytes
  5513 ;; Hardware stack levels used:    1
  5514 ;; Hardware stack levels required when called:   13
  5515 ;; This function calls:
  5516 ;;		_ADCC_GetConversionResult
  5517 ;;		_PWM8_LoadDutyValue
  5518 ;;		_StartTimer
  5519 ;;		_TimerDone
  5520 ;;		_UART2_Read
  5521 ;;		_UART2_Write
  5522 ;;		_UART2_is_rx_ready
  5523 ;;		_printf
  5524 ;; This function is called by:
  5525 ;;		_main
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528                           
  5529                           	psect	text42
  5530  002582                     __ptext42:
  5531                           	opt callstack 0
  5532  002582                     _Digital232_RW:
  5533                           	opt callstack 17
  5534                           
  5535                           ; BSR set to: 62
  5536                           ;incstack = 0
  5537  002582  0E00               	movlw	0
  5538  002584  0100               	movlb	0	; () banked
  5539  002586  6F6D               	movwf	Digital232_RW@j& (0+255),b
  5540                           
  5541                           ; BSR set to: 0
  5542                           ;d232.c: 38:  static uint8_t x = 0;;d232.c: 41:  if (!TimerDone(TMR_SPS)) {
  5543  002588  0E03               	movlw	3
  5544  00258A  EC22  F01E         	call	_TimerDone
  5545  00258E  0900               	iorlw	0
  5546  002590  A4D8               	btfss	status,2,c
  5547  002592  D005               	goto	l5265
  5548                           
  5549                           ;d232.c: 42:   IO.io = IO_IDLE;
  5550  002594  0E00               	movlw	0
  5551  002596  0101               	movlb	1	; () banked
  5552  002598  6FA9               	movwf	(_IO+12)& (0+255),b
  5553                           
  5554                           ; BSR set to: 1
  5555                           ;d232.c: 43:   return 0;
  5556  00259A  0E00               	movlw	0
  5557  00259C  0012               	return	
  5558  00259E                     l5265:
  5559                           
  5560                           ;d232.c: 46:  StartTimer(TMR_SPS, 10 + IO.speed + IO.slower);
  5561  00259E  0101               	movlb	1	; () banked
  5562  0025A0  51B6               	movf	(_IO+25)& (0+255),w,b
  5563  0025A2  25B4               	addwf	(_IO+23)& (0+255),w,b
  5564  0025A4  0100               	movlb	0	; () banked
  5565  0025A6  6F6A               	movwf	??_Digital232_RW& (0+255),b
  5566  0025A8  0101               	movlb	1	; () banked
  5567  0025AA  51B7               	movf	(_IO+26)& (0+255),w,b
  5568  0025AC  21B5               	addwfc	(_IO+24)& (0+255),w,b
  5569  0025AE  0100               	movlb	0	; () banked
  5570  0025B0  6F6B               	movwf	(??_Digital232_RW+1)& (0+255),b
  5571  0025B2  0E0A               	movlw	10
  5572  0025B4  256A               	addwf	??_Digital232_RW& (0+255),w,b
  5573  0025B6  6E06               	movwf	StartTimer@count^0,c
  5574  0025B8  0E00               	movlw	0
  5575  0025BA  216B               	addwfc	(??_Digital232_RW+1)& (0+255),w,b
  5576  0025BC  6E07               	movwf	(StartTimer@count+1)^0,c
  5577  0025BE  0E03               	movlw	3
  5578  0025C0  EC58  F01D         	call	_StartTimer
  5579                           
  5580                           ;d232.c: 51:  IO.srq = S_IDLE;
  5581  0025C4  0E00               	movlw	0
  5582  0025C6  0101               	movlb	1	; () banked
  5583  0025C8  6FAB               	movwf	(_IO+14)& (0+255),b
  5584                           
  5585                           ; BSR set to: 1
  5586                           ;d232.c: 53:  if (UART2_is_rx_ready()) {
  5587  0025CA  ECD7  F01F         	call	_UART2_is_rx_ready	;wreg free
  5588  0025CE  0900               	iorlw	0
  5589  0025D0  B4D8               	btfsc	status,2,c
  5590  0025D2  D040               	goto	l5295
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;d232.c: 54:   j = UART2_Read();
  5594  0025D4  EC2F  F01C         	call	_UART2_Read	;wreg free
  5595  0025D8  0100               	movlb	0	; () banked
  5596  0025DA  6F6D               	movwf	Digital232_RW@j& (0+255),b
  5597                           
  5598                           ;d232.c: 58:   switch (IO.srq) {
  5599  0025DC  D021               	goto	l5293
  5600  0025DE                     l5273:
  5601                           
  5602                           ; BSR set to: 0
  5603                           ;d232.c: 60:    if (j == 'S')
  5604  0025DE  0E53               	movlw	83
  5605  0025E0  196D               	xorwf	Digital232_RW@j& (0+255),w,b
  5606  0025E2  A4D8               	btfss	status,2,c
  5607  0025E4  D037               	goto	l5295
  5608                           
  5609                           ; BSR set to: 0
  5610                           ;d232.c: 61:     IO.srq = S_S;
  5611  0025E6  0E01               	movlw	1
  5612  0025E8  D018               	goto	L7
  5613  0025EA                     l5277:
  5614                           
  5615                           ; BSR set to: 0
  5616                           ;d232.c: 64:    if (j == 'R')
  5617  0025EA  0E52               	movlw	82
  5618  0025EC  196D               	xorwf	Digital232_RW@j& (0+255),w,b
  5619  0025EE  A4D8               	btfss	status,2,c
  5620  0025F0  D031               	goto	l5295
  5621                           
  5622                           ; BSR set to: 0
  5623                           ;d232.c: 65:     IO.srq = S_R;
  5624  0025F2  0E02               	movlw	2
  5625  0025F4  D012               	goto	L7
  5626  0025F6                     l5281:
  5627                           
  5628                           ; BSR set to: 0
  5629                           ;d232.c: 68:    if (j == 'Q')
  5630  0025F6  0E51               	movlw	81
  5631  0025F8  196D               	xorwf	Digital232_RW@j& (0+255),w,b
  5632  0025FA  A4D8               	btfss	status,2,c
  5633  0025FC  D02B               	goto	l5295
  5634                           
  5635                           ; BSR set to: 0
  5636                           ;d232.c: 69:     IO.srq = S_Q;
  5637  0025FE  0E03               	movlw	3
  5638  002600  D00C               	goto	L7
  5639  002602                     l5285:
  5640                           
  5641                           ; BSR set to: 0
  5642                           ;d232.c: 72:    if (j == ' ')
  5643  002602  0E20               	movlw	32
  5644  002604  196D               	xorwf	Digital232_RW@j& (0+255),w,b
  5645  002606  A4D8               	btfss	status,2,c
  5646  002608  D025               	goto	l5295
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;d232.c: 73:     IO.srq = S_NUM;
  5650  00260A  0E04               	movlw	4
  5651  00260C  D006               	goto	L7
  5652  00260E                     l1123:
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;d232.c: 76:    IO.srq_value = j;
  5656  00260E  0060  F1B4  F1AC   	movff	Digital232_RW@j,_IO+15
  5657                           
  5658                           ; BSR set to: 0
  5659                           ;d232.c: 77:    IO.srq = S_UPDATE;
  5660  002614  0E05               	movlw	5
  5661  002616  D001               	goto	L7
  5662  002618                     l5291:
  5663                           
  5664                           ; BSR set to: 0
  5665                           ;d232.c: 80:    IO.srq = S_IDLE;
  5666  002618  0E00               	movlw	0
  5667  00261A                     L7:
  5668  00261A  0101               	movlb	1	; () banked
  5669  00261C  6FAB               	movwf	(_IO+14)& (0+255),b
  5670                           
  5671                           ;d232.c: 81:   }
  5672  00261E  D01A               	goto	l5295
  5673  002620                     l5293:
  5674                           
  5675                           ; BSR set to: 0
  5676  002620  0101               	movlb	1	; () banked
  5677  002622  51AB               	movf	(_IO+14)& (0+255),w,b
  5678  002624  0100               	movlb	0	; () banked
  5679  002626  6F6A               	movwf	??_Digital232_RW& (0+255),b
  5680  002628  6B6B               	clrf	(??_Digital232_RW+1)& (0+255),b
  5681                           
  5682                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5683                           ; Switch size 1, requested type "simple"
  5684                           ; Number of cases is 1, Range of values is 0 to 0
  5685                           ; switch strategies available:
  5686                           ; Name         Instructions Cycles
  5687                           ; simple_byte            4     3 (average)
  5688                           ;	Chosen strategy is simple_byte
  5689  00262A  516B               	movf	(??_Digital232_RW+1)& (0+255),w,b
  5690  00262C  0A00               	xorlw	0	; case 0
  5691  00262E  A4D8               	btfss	status,2,c
  5692  002630  D7F3               	goto	l5291
  5693                           
  5694                           ; BSR set to: 0
  5695                           ; Switch size 1, requested type "simple"
  5696                           ; Number of cases is 5, Range of values is 0 to 4
  5697                           ; switch strategies available:
  5698                           ; Name         Instructions Cycles
  5699                           ; simple_byte           16     9 (average)
  5700                           ;	Chosen strategy is simple_byte
  5701  002632  516A               	movf	??_Digital232_RW& (0+255),w,b
  5702  002634  0A00               	xorlw	0	; case 0
  5703  002636  B4D8               	btfsc	status,2,c
  5704  002638  D7D2               	goto	l5273
  5705  00263A  0A01               	xorlw	1	; case 1
  5706  00263C  B4D8               	btfsc	status,2,c
  5707  00263E  D7D5               	goto	l5277
  5708  002640  0A03               	xorlw	3	; case 2
  5709  002642  B4D8               	btfsc	status,2,c
  5710  002644  D7D8               	goto	l5281
  5711  002646  0A01               	xorlw	1	; case 3
  5712  002648  B4D8               	btfsc	status,2,c
  5713  00264A  D7DB               	goto	l5285
  5714  00264C  0A07               	xorlw	7	; case 4
  5715  00264E  B4D8               	btfsc	status,2,c
  5716  002650  D7DE               	goto	l1123
  5717  002652  D7E2               	goto	l5291
  5718  002654                     l5295:
  5719                           
  5720                           ;d232.c: 84:  UART2_Write('D');
  5721  002654  0E44               	movlw	68
  5722  002656  EC51  F01C         	call	_UART2_Write
  5723                           
  5724                           ;d232.c: 85:  UART2_Write(IO.outbytes[4]);
  5725  00265A  0101               	movlb	1	; () banked
  5726  00265C  51A6               	movf	(_IO+9)& (0+255),w,b
  5727  00265E  EC51  F01C         	call	_UART2_Write
  5728                           
  5729                           ;d232.c: 86:  UART2_Write(IO.outbytes[3]);
  5730  002662  0101               	movlb	1	; () banked
  5731  002664  51A5               	movf	(_IO+8)& (0+255),w,b
  5732  002666  EC51  F01C         	call	_UART2_Write
  5733                           
  5734                           ;d232.c: 87:  UART2_Write(IO.outbytes[2]);
  5735  00266A  0101               	movlb	1	; () banked
  5736  00266C  51A4               	movf	(_IO+7)& (0+255),w,b
  5737  00266E  EC51  F01C         	call	_UART2_Write
  5738                           
  5739                           ;d232.c: 88:  UART2_Write(IO.outbytes[1]);
  5740  002672  0101               	movlb	1	; () banked
  5741  002674  51A3               	movf	(_IO+6)& (0+255),w,b
  5742  002676  EC51  F01C         	call	_UART2_Write
  5743                           
  5744                           ;d232.c: 89:  UART2_Write(IO.outbytes[0]);
  5745  00267A  0101               	movlb	1	; () banked
  5746  00267C  51A2               	movf	(_IO+5)& (0+255),w,b
  5747  00267E  EC51  F01C         	call	_UART2_Write
  5748                           
  5749                           ;d232.c: 90:  UART2_Write('\r');
  5750  002682  0E0D               	movlw	13
  5751  002684  EC51  F01C         	call	_UART2_Write
  5752                           
  5753                           ; BSR set to: 57
  5754                           ;d232.c: 91:  printf("%s", "R0\r");
  5755  002688  0E4C               	movlw	low STR_5
  5756  00268A  0100               	movlb	0	; () banked
  5757  00268C  6F64               	movwf	printf@fmt& (0+255),b
  5758  00268E  0E34               	movlw	low STR_16
  5759  002690  6F65               	movwf	(?_printf+1)& (0+255),b
  5760  002692  5165               	movf	(?_printf+1)& (0+255),w,b
  5761  002694  A4D8               	btfss	status,2,c
  5762  002696  0E20               	movlw	high __smallconst
  5763  002698  6F66               	movwf	(?_printf+2)& (0+255),b
  5764  00269A  EC02  F01F         	call	_printf	;wreg free
  5765                           
  5766                           ; BSR set to: 1
  5767                           ;d232.c: 92:  IO.output_ok = 1;
  5768  00269E  0E01               	movlw	1
  5769  0026A0  6FA8               	movwf	(_IO+11)& (0+255),b
  5770                           
  5771                           ; BSR set to: 1
  5772                           ;d232.c: 93:  IO.io = IO_OUT;
  5773  0026A2  0E02               	movlw	2
  5774  0026A4  6FA9               	movwf	(_IO+12)& (0+255),b
  5775                           
  5776                           ; BSR set to: 1
  5777                           ;d232.c: 97:  StartTimer(TMR_RXTO, 250);
  5778  0026A6  0E00               	movlw	0
  5779  0026A8  6E07               	movwf	(StartTimer@count+1)^0,c
  5780  0026AA  0EFA               	movlw	250
  5781  0026AC  6E06               	movwf	StartTimer@count^0,c
  5782  0026AE  0E02               	movlw	2
  5783  0026B0  EC58  F01D         	call	_StartTimer
  5784                           
  5785                           ;d232.c: 98:  while (!UART2_is_rx_ready()) {
  5786  0026B4  D015               	goto	l5319
  5787  0026B6                     l5305:
  5788                           
  5789                           ; BSR set to: 0
  5790                           ;d232.c: 99:   if (TimerDone(TMR_RXTO)) {
  5791  0026B6  0E02               	movlw	2
  5792  0026B8  EC22  F01E         	call	_TimerDone
  5793  0026BC  0900               	iorlw	0
  5794  0026BE  B4D8               	btfsc	status,2,c
  5795  0026C0  D00F               	goto	l5319
  5796                           
  5797                           ;d232.c: 100:    PWM8_LoadDutyValue(x++);
  5798  0026C2  0060  F250  F006   	movff	Digital232_RW@x,PWM8_LoadDutyValue@dutyValue
  5799  0026C8  6A07               	clrf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  5800  0026CA  EC07  F01D         	call	_PWM8_LoadDutyValue	;wreg free
  5801  0026CE  0100               	movlb	0	; () banked
  5802  0026D0  2B94               	incf	Digital232_RW@x& (0+255),f,b
  5803                           
  5804                           ; BSR set to: 0
  5805                           ;d232.c: 101:    if (x > 3)
  5806  0026D2  0E03               	movlw	3
  5807  0026D4  6594               	cpfsgt	Digital232_RW@x& (0+255),b
  5808  0026D6  D002               	goto	l1128
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;d232.c: 102:     x = 0;
  5812  0026D8  0E00               	movlw	0
  5813  0026DA  6F94               	movwf	Digital232_RW@x& (0+255),b
  5814  0026DC                     l1128:
  5815                           
  5816                           ; BSR set to: 0
  5817                           ;d232.c: 103:    IO.io = IO_FAIL;
  5818  0026DC  0E06               	movlw	6
  5819  0026DE  D75B               	goto	L8
  5820  0026E0                     l5319:
  5821                           
  5822                           ;d232.c: 98:  while (!UART2_is_rx_ready()) {
  5823  0026E0  ECD7  F01F         	call	_UART2_is_rx_ready	;wreg free
  5824  0026E4  0900               	iorlw	0
  5825  0026E6  B4D8               	btfsc	status,2,c
  5826  0026E8  D7E6               	goto	l5305
  5827                           
  5828                           ; BSR set to: 0
  5829                           ;d232.c: 111:  i = 0;
  5830  0026EA  0E00               	movlw	0
  5831  0026EC  6F6C               	movwf	Digital232_RW@i& (0+255),b
  5832                           
  5833                           ; BSR set to: 0
  5834                           ;d232.c: 112:  StartTimer(TMR_RXTO, 250);
  5835  0026EE  0E00               	movlw	0
  5836  0026F0  6E07               	movwf	(StartTimer@count+1)^0,c
  5837  0026F2  0EFA               	movlw	250
  5838  0026F4  6E06               	movwf	StartTimer@count^0,c
  5839  0026F6  0E02               	movlw	2
  5840  0026F8  EC58  F01D         	call	_StartTimer
  5841                           
  5842                           ;d232.c: 113:  while (!TimerDone(TMR_RXTO) && (i < 6)) {
  5843  0026FC  D015               	goto	l5331
  5844  0026FE                     l5325:
  5845                           
  5846                           ; BSR set to: 0
  5847                           ;d232.c: 114:   if (UART2_is_rx_ready()) {
  5848  0026FE  ECD7  F01F         	call	_UART2_is_rx_ready	;wreg free
  5849  002702  0900               	iorlw	0
  5850  002704  B4D8               	btfsc	status,2,c
  5851  002706  D010               	goto	l5331
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;d232.c: 115:    IO.inbytes[4 - i] = UART2_Read();
  5855  002708  EC2F  F01C         	call	_UART2_Read	;wreg free
  5856  00270C  0100               	movlb	0	; () banked
  5857  00270E  6F6A               	movwf	??_Digital232_RW& (0+255),b
  5858  002710  516C               	movf	Digital232_RW@i& (0+255),w,b
  5859  002712  08A1               	sublw	low (_IO+4)
  5860  002714  6ED9               	movwf	fsr2l,c
  5861  002716  0E00               	movlw	0
  5862  002718  A0D8               	btfss	status,0,c
  5863  00271A  2AE8               	incf	wreg,f,c
  5864  00271C  0801               	sublw	high (_IO+4)
  5865  00271E  6EDA               	movwf	fsr2h,c
  5866  002720  0060  F1AB  FFDF   	movff	??_Digital232_RW,indf2
  5867                           
  5868                           ; BSR set to: 0
  5869                           ;d232.c: 116:    i++;
  5870  002726  2B6C               	incf	Digital232_RW@i& (0+255),f,b
  5871  002728                     l5331:
  5872                           
  5873                           ;d232.c: 113:  while (!TimerDone(TMR_RXTO) && (i < 6)) {
  5874  002728  0E02               	movlw	2
  5875  00272A  EC22  F01E         	call	_TimerDone
  5876  00272E  0900               	iorlw	0
  5877  002730  A4D8               	btfss	status,2,c
  5878  002732  D004               	goto	u4100
  5879  002734  0E05               	movlw	5
  5880  002736  0100               	movlb	0	; () banked
  5881  002738  656C               	cpfsgt	Digital232_RW@i& (0+255),b
  5882  00273A  D7E1               	goto	l5325
  5883  00273C                     u4100:
  5884                           
  5885                           ;d232.c: 119:  if (TimerDone(TMR_RXTO) || i < 6) {
  5886  00273C  0E02               	movlw	2
  5887  00273E  EC22  F01E         	call	_TimerDone
  5888  002742  0900               	iorlw	0
  5889  002744  A4D8               	btfss	status,2,c
  5890  002746  D004               	goto	u4120
  5891  002748  0E06               	movlw	6
  5892  00274A  0100               	movlb	0	; () banked
  5893  00274C  616C               	cpfslt	Digital232_RW@i& (0+255),b
  5894  00274E  D00A               	goto	l5351
  5895  002750                     u4120:
  5896                           
  5897                           ;d232.c: 120:   PWM8_LoadDutyValue(x++);
  5898  002750  0060  F250  F006   	movff	Digital232_RW@x,PWM8_LoadDutyValue@dutyValue
  5899  002756  6A07               	clrf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  5900  002758  EC07  F01D         	call	_PWM8_LoadDutyValue	;wreg free
  5901  00275C  0100               	movlb	0	; () banked
  5902  00275E  2B94               	incf	Digital232_RW@x& (0+255),f,b
  5903                           
  5904                           ; BSR set to: 0
  5905                           ;d232.c: 121:   if (x > 16)
  5906  002760  0E10               	movlw	16
  5907  002762  D7B8               	goto	L9
  5908  002764                     l5351:
  5909                           
  5910                           ; BSR set to: 0
  5911                           ;d232.c: 127:  if (UART2_is_rx_ready())
  5912  002764  ECD7  F01F         	call	_UART2_is_rx_ready	;wreg free
  5913  002768  0900               	iorlw	0
  5914  00276A  A4D8               	btfss	status,2,c
  5915                           
  5916                           ; BSR set to: 0
  5917                           ;d232.c: 128:   UART2_Read();
  5918  00276C  EC2F  F01C         	call	_UART2_Read	;wreg free
  5919                           
  5920                           ;d232.c: 130:  IO.input_ok = 1;
  5921  002770  0E01               	movlw	1
  5922  002772  0101               	movlb	1	; () banked
  5923  002774  6FA7               	movwf	(_IO+10)& (0+255),b
  5924                           
  5925                           ; BSR set to: 1
  5926                           ;d232.c: 131:  IO.io = IO_IN;
  5927  002776  0E03               	movlw	3
  5928  002778  6FA9               	movwf	(_IO+12)& (0+255),b
  5929                           
  5930                           ; BSR set to: 1
  5931                           ;d232.c: 132:  IO.d232 = D232_OUT_IN;
  5932  00277A  0E02               	movlw	2
  5933  00277C  6FAA               	movwf	(_IO+13)& (0+255),b
  5934                           
  5935                           ; BSR set to: 1
  5936                           ;d232.c: 136:  IO.button_value = ADCC_GetConversionResult();
  5937  00277E  EC42  F01F         	call	_ADCC_GetConversionResult	;wreg free
  5938  002782  0060  F018  F1B2   	movff	?_ADCC_GetConversionResult,_IO+21
  5939  002788  0060  F01C  F1B3   	movff	?_ADCC_GetConversionResult+1,_IO+22
  5940                           
  5941                           ; BSR set to: 62
  5942                           ;d232.c: 137:  PWM8_LoadDutyValue(199);
  5943  00278E  0E00               	movlw	0
  5944  002790  6E07               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  5945  002792  0EC7               	movlw	199
  5946  002794  6E06               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  5947  002796  EC07  F01D         	call	_PWM8_LoadDutyValue	;wreg free
  5948                           
  5949                           ;d232.c: 138:  IO.io = IO_UPDATE;
  5950  00279A  0E05               	movlw	5
  5951  00279C  0101               	movlb	1	; () banked
  5952  00279E  6FA9               	movwf	(_IO+12)& (0+255),b
  5953                           
  5954                           ; BSR set to: 1
  5955                           ;d232.c: 139:  return 1;
  5956  0027A0  0E01               	movlw	1
  5957                           
  5958                           ; BSR set to: 1
  5959  0027A2  0012               	return		;funcret
  5960  0027A4                     __end_of_Digital232_RW:
  5961                           	opt callstack 0
  5962                           
  5963 ;; *************** function _printf *****************
  5964 ;; Defined at:
  5965 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  5966 ;; Parameters:    Size  Location     Type
  5967 ;;  fmt             1    4[BANK0 ] PTR const unsigned char 
  5968 ;;		 -> STR_15(3), STR_13(3), STR_11(3), STR_9(3), 
  5969 ;;		 -> STR_7(3), STR_5(3), 
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;  ret             2    0        int 
  5972 ;;  ap              1    9[BANK0 ] PTR void [1]
  5973 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5974 ;; Return value:  Size  Location     Type
  5975 ;;                  2    4[BANK0 ] int 
  5976 ;; Registers used:
  5977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5978 ;; Tracked objects:
  5979 ;;		On entry : 3F/0
  5980 ;;		On exit  : 3F/1
  5981 ;;		Unchanged: 0/0
  5982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5983 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5984 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5986 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5987 ;;Total ram usage:        6 bytes
  5988 ;; Hardware stack levels used:    1
  5989 ;; Hardware stack levels required when called:   12
  5990 ;; This function calls:
  5991 ;;		_vfprintf
  5992 ;; This function is called by:
  5993 ;;		_Digital232_init
  5994 ;;		_Digital232_RW
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998                           	psect	text43
  5999  003E04                     __ptext43:
  6000                           	opt callstack 0
  6001  003E04                     _printf:
  6002                           	opt callstack 17
  6003                           
  6004                           ; BSR set to: 0
  6005                           
  6006                           ; BSR set to: 1
  6007                           ;incstack = 0
  6008  003E04  0E65               	movlw	low (?_printf+1)
  6009  003E06  6F69               	movwf	printf@ap& (0+255),b
  6010                           
  6011                           ; BSR set to: 0
  6012  003E08  0E00               	movlw	0
  6013  003E0A  6F60               	movwf	vfprintf@fp& (0+255),b
  6014  003E0C  0E00               	movlw	0
  6015  003E0E  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  6016  003E10  0060  F190  F062   	movff	printf@fmt,vfprintf@fmt
  6017  003E16  0E69               	movlw	low printf@ap
  6018  003E18  6F63               	movwf	vfprintf@ap& (0+255),b
  6019  003E1A  EC6B  F01B         	call	_vfprintf	;wreg free
  6020                           
  6021                           ; BSR set to: 1
  6022  003E1E  0012               	return		;funcret
  6023  003E20                     __end_of_printf:
  6024                           	opt callstack 0
  6025                           
  6026 ;; *************** function _vfprintf *****************
  6027 ;; Defined at:
  6028 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6029 ;; Parameters:    Size  Location     Type
  6030 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  6031 ;;		 -> sprintf@f(6), NULL(0), 
  6032 ;;  fmt             1    2[BANK0 ] PTR const unsigned char 
  6033 ;;		 -> STR_15(3), STR_13(3), STR_11(3), STR_9(3), 
  6034 ;;		 -> STR_7(3), STR_5(3), STR_3(12), STR_2(17), 
  6035 ;;		 -> STR_1(17), 
  6036 ;;  ap              1    3[BANK0 ] PTR PTR void 
  6037 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6038 ;; Auto vars:     Size  Location     Type
  6039 ;;  cfmt            1   84[COMRAM] PTR unsigned char 
  6040 ;;		 -> STR_15(3), STR_13(3), STR_11(3), STR_9(3), 
  6041 ;;		 -> STR_7(3), STR_5(3), STR_3(12), STR_2(17), 
  6042 ;;		 -> STR_1(17), 
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  2    0[BANK0 ] int 
  6045 ;; Registers used:
  6046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6047 ;; Tracked objects:
  6048 ;;		On entry : 3F/0
  6049 ;;		On exit  : 3F/1
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6052 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6053 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6055 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6056 ;;Total ram usage:        5 bytes
  6057 ;; Hardware stack levels used:    1
  6058 ;; Hardware stack levels required when called:   11
  6059 ;; This function calls:
  6060 ;;		_vfpfcnvrt
  6061 ;; This function is called by:
  6062 ;;		_sprintf
  6063 ;;		_printf
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           
  6067                           	psect	text44
  6068  0036D6                     __ptext44:
  6069                           	opt callstack 0
  6070  0036D6                     _vfprintf:
  6071                           	opt callstack 17
  6072                           
  6073                           ; BSR set to: 0
  6074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6075                           
  6076                           ; BSR set to: 1
  6077                           ;incstack = 0
  6078  0036D6  0060  F188  F055   	movff	vfprintf@fmt,vfprintf@cfmt
  6079                           
  6080                           ; BSR set to: 0
  6081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  6082  0036DC  0E00               	movlw	0
  6083  0036DE  0101               	movlb	1	; () banked
  6084  0036E0  6F67               	movwf	(_nout+1)& (0+255),b
  6085  0036E2  0E00               	movlw	0
  6086  0036E4  6F66               	movwf	_nout& (0+255),b
  6087                           
  6088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6089  0036E6  D012               	goto	l4911
  6090  0036E8                     l4909:
  6091                           
  6092                           ; BSR set to: 1
  6093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6094  0036E8  0060  F180  F047   	movff	vfprintf@fp,vfpfcnvrt@fp
  6095  0036EE  0060  F184  F048   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6096  0036F4  0E55               	movlw	low vfprintf@cfmt
  6097  0036F6  6E49               	movwf	vfpfcnvrt@fmt^0,c
  6098  0036F8  0060  F18C  F04A   	movff	vfprintf@ap,vfpfcnvrt@ap
  6099  0036FE  ECD2  F013         	call	_vfpfcnvrt	;wreg free
  6100  003702  5047               	movf	?_vfpfcnvrt^0,w,c
  6101  003704  0101               	movlb	1	; () banked
  6102  003706  2766               	addwf	_nout& (0+255),f,b
  6103  003708  5048               	movf	(?_vfpfcnvrt+1)^0,w,c
  6104  00370A  2367               	addwfc	(_nout+1)& (0+255),f,b
  6105  00370C                     l4911:
  6106                           
  6107                           ; BSR set to: 1
  6108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6109  00370C  0060  F157  FFF6   	movff	vfprintf@cfmt,tblptrl
  6110  003712                     	if	1	;There is more than 1 active tblptr byte
  6111  003712  0E20               	movlw	high __smallconst
  6112  003714  6EF7               	movwf	tblptrh,c
  6113  003716                     	endif
  6114  003716                     	if	0	;tblptru may be non-zero
  6115  003716                     	endif
  6116  003716                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6117  003716  0E00               	movlw	low (__smallconst shr (0+16))
  6118  003718  6EF8               	movwf	tblptru,c
  6119  00371A                     	endif
  6120  00371A  0008               	tblrd		*
  6121  00371C  50F5               	movf	tablat,w,c
  6122  00371E  0900               	iorlw	0
  6123  003720  A4D8               	btfss	status,2,c
  6124  003722  D7E2               	goto	l4909
  6125                           
  6126                           ; BSR set to: 1
  6127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  6128  003724  0060  F598  F060   	movff	_nout,?_vfprintf
  6129  00372A  0060  F59C  F061   	movff	_nout+1,?_vfprintf+1
  6130                           
  6131                           ; BSR set to: 1
  6132  003730  0012               	return		;funcret
  6133  003732                     __end_of_vfprintf:
  6134                           	opt callstack 0
  6135                           
  6136 ;; *************** function _vfpfcnvrt *****************
  6137 ;; Defined at:
  6138 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6139 ;; Parameters:    Size  Location     Type
  6140 ;;  fp              2   70[COMRAM] PTR struct _IO_FILE
  6141 ;;		 -> sprintf@f(6), NULL(0), 
  6142 ;;  fmt             1   72[COMRAM] PTR PTR unsigned char 
  6143 ;;		 -> vfprintf@cfmt(1), 
  6144 ;;  ap              1   73[COMRAM] PTR PTR void 
  6145 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6146 ;; Auto vars:     Size  Location     Type
  6147 ;;  ll              8   74[COMRAM] long long 
  6148 ;;  llu             8    0        unsigned long long 
  6149 ;;  f               4    0        unsigned long long 
  6150 ;;  vp              3    0        PTR void 
  6151 ;;  ct              3    0        unsigned char [3]
  6152 ;;  cp              2   82[COMRAM] PTR unsigned char 
  6153 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(4), STR_14(4), 
  6154 ;;		 -> STR_12(4), STR_10(4), STR_8(4), STR_6(4), 
  6155 ;;		 -> STR_4(5), 
  6156 ;;  i               2    0        int 
  6157 ;;  done            2    0        int 
  6158 ;;  c               1    0        unsigned char 
  6159 ;; Return value:  Size  Location     Type
  6160 ;;                  2   70[COMRAM] int 
  6161 ;; Registers used:
  6162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6163 ;; Tracked objects:
  6164 ;;		On entry : 3E/1
  6165 ;;		On exit  : 0/0
  6166 ;;		Unchanged: 0/0
  6167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6168 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6169 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6171 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6172 ;;Total ram usage:       14 bytes
  6173 ;; Hardware stack levels used:    1
  6174 ;; Hardware stack levels required when called:   10
  6175 ;; This function calls:
  6176 ;;		_dtoa
  6177 ;;		_fputc
  6178 ;;		_stoa
  6179 ;; This function is called by:
  6180 ;;		_vfprintf
  6181 ;; This function uses a non-reentrant model
  6182 ;;
  6183                           
  6184                           	psect	text45
  6185  0027A4                     __ptext45:
  6186                           	opt callstack 0
  6187  0027A4                     _vfpfcnvrt:
  6188                           	opt callstack 17
  6189                           
  6190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  6191                           
  6192                           ; BSR set to: 1
  6193                           ;incstack = 0
  6194  0027A4  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6195  0027A6  6ED9               	movwf	fsr2l,c
  6196  0027A8  6ADA               	clrf	fsr2h,c
  6197  0027AA  006F FF7F FFF6     	movff	indf2,tblptrl
  6198  0027B0                     	if	1	;There is more than 1 active tblptr byte
  6199  0027B0  0E20               	movlw	high __smallconst
  6200  0027B2  6EF7               	movwf	tblptrh,c
  6201  0027B4                     	endif
  6202  0027B4                     	if	0	;tblptru may be non-zero
  6203  0027B4                     	endif
  6204  0027B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6205  0027B4  0E00               	movlw	low (__smallconst shr (0+16))
  6206  0027B6  6EF8               	movwf	tblptru,c
  6207  0027B8                     	endif
  6208  0027B8  0008               	tblrd		*
  6209  0027BA  50F5               	movf	tablat,w,c
  6210  0027BC  0A25               	xorlw	37
  6211  0027BE  A4D8               	btfss	status,2,c
  6212  0027C0  D0D5               	goto	l4831
  6213                           
  6214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  6215  0027C2  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6216  0027C4  6ED9               	movwf	fsr2l,c
  6217  0027C6  6ADA               	clrf	fsr2h,c
  6218  0027C8  2ADF               	incf	indf2,f,c
  6219                           
  6220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  6221  0027CA  0E00               	movlw	0
  6222  0027CC  0101               	movlb	1	; () banked
  6223  0027CE  6F69               	movwf	(_width+1)& (0+255),b
  6224  0027D0  0E00               	movlw	0
  6225  0027D2  6F68               	movwf	_width& (0+255),b
  6226  0027D4  0060  F5A0  F056   	movff	_width,_flags
  6227  0027DA  0060  F5A4  F057   	movff	_width+1,_flags+1
  6228                           
  6229                           ; BSR set to: 1
  6230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  6231  0027E0  0100               	movlb	0	; () banked
  6232  0027E2  6990               	setf	_prec& (0+255),b
  6233  0027E4  6991               	setf	(_prec+1)& (0+255),b
  6234                           
  6235                           ; BSR set to: 0
  6236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  6237  0027E6  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6238  0027E8  6ED9               	movwf	fsr2l,c
  6239  0027EA  6ADA               	clrf	fsr2h,c
  6240  0027EC  006F FF7F FFF6     	movff	indf2,tblptrl
  6241  0027F2                     	if	1	;There is more than 1 active tblptr byte
  6242  0027F2  0E20               	movlw	high __smallconst
  6243  0027F4  6EF7               	movwf	tblptrh,c
  6244  0027F6                     	endif
  6245  0027F6                     	if	0	;tblptru may be non-zero
  6246  0027F6                     	endif
  6247  0027F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6248  0027F6  0E00               	movlw	low (__smallconst shr (0+16))
  6249  0027F8  6EF8               	movwf	tblptru,c
  6250  0027FA                     	endif
  6251  0027FA  0008               	tblrd		*
  6252  0027FC  50F5               	movf	tablat,w,c
  6253  0027FE  0A64               	xorlw	100
  6254  002800  B4D8               	btfsc	status,2,c
  6255  002802  D00F               	goto	u3780
  6256                           
  6257                           ; BSR set to: 0
  6258  002804  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6259  002806  6ED9               	movwf	fsr2l,c
  6260  002808  6ADA               	clrf	fsr2h,c
  6261  00280A  006F FF7F FFF6     	movff	indf2,tblptrl
  6262  002810                     	if	1	;There is more than 1 active tblptr byte
  6263  002810  0E20               	movlw	high __smallconst
  6264  002812  6EF7               	movwf	tblptrh,c
  6265  002814                     	endif
  6266  002814                     	if	0	;tblptru may be non-zero
  6267  002814                     	endif
  6268  002814                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6269  002814  0E00               	movlw	low (__smallconst shr (0+16))
  6270  002816  6EF8               	movwf	tblptru,c
  6271  002818                     	endif
  6272  002818  0008               	tblrd		*
  6273  00281A  50F5               	movf	tablat,w,c
  6274  00281C  0A69               	xorlw	105
  6275  00281E  A4D8               	btfss	status,2,c
  6276  002820  D042               	goto	l4805
  6277  002822                     u3780:
  6278                           
  6279                           ; BSR set to: 0
  6280                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  6281  002822  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6282  002824  6ED9               	movwf	fsr2l,c
  6283  002826  6ADA               	clrf	fsr2h,c
  6284  002828  2ADF               	incf	indf2,f,c
  6285                           
  6286                           ; BSR set to: 0
  6287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  6288  00282A  504A               	movf	vfpfcnvrt@ap^0,w,c
  6289  00282C  6ED9               	movwf	fsr2l,c
  6290  00282E  6ADA               	clrf	fsr2h,c
  6291  002830  50DF               	movf	indf2,w,c
  6292  002832  2ADF               	incf	indf2,f,c
  6293  002834  2ADF               	incf	indf2,f,c
  6294  002836  6ED9               	movwf	fsr2l,c
  6295  002838  6ADA               	clrf	fsr2h,c
  6296  00283A  006F FF78  F04B    	movff	postinc2,vfpfcnvrt@ll
  6297  002840  006F FF74  F04C    	movff	postdec2,vfpfcnvrt@ll+1
  6298  002846  0E00               	movlw	0
  6299  002848  BE4C               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  6300  00284A  0EFF               	movlw	-1
  6301  00284C  6E4D               	movwf	(vfpfcnvrt@ll+2)^0,c
  6302  00284E  6E4E               	movwf	(vfpfcnvrt@ll+3)^0,c
  6303  002850  6E4F               	movwf	(vfpfcnvrt@ll+4)^0,c
  6304  002852  6E50               	movwf	(vfpfcnvrt@ll+5)^0,c
  6305  002854  6E51               	movwf	(vfpfcnvrt@ll+6)^0,c
  6306  002856  6E52               	movwf	(vfpfcnvrt@ll+7)^0,c
  6307                           
  6308                           ; BSR set to: 0
  6309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  6310  002858  0060  F11C  F023   	movff	vfpfcnvrt@fp,dtoa@fp
  6311  00285E  0060  F120  F024   	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6312  002864  0060  F12C  F025   	movff	vfpfcnvrt@ll,dtoa@d
  6313  00286A  0060  F130  F026   	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6314  002870  0060  F134  F027   	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6315  002876  0060  F138  F028   	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6316  00287C  0060  F13C  F029   	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6317  002882  0060  F140  F02A   	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6318  002888  0060  F144  F02B   	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6319  00288E  0060  F148  F02C   	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6320  002894  EC28  F010         	call	_dtoa	;wreg free
  6321  002898  0060  F08C  F047   	movff	?_dtoa,?_vfpfcnvrt
  6322  00289E  0060  F090  F048   	movff	?_dtoa+1,?_vfpfcnvrt+1
  6323  0028A4  0012               	return	
  6324  0028A6                     l4805:
  6325                           
  6326                           ; BSR set to: 0
  6327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  6328  0028A6  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6329  0028A8  6ED9               	movwf	fsr2l,c
  6330  0028AA  6ADA               	clrf	fsr2h,c
  6331  0028AC  006F FF7F FFF6     	movff	indf2,tblptrl
  6332  0028B2                     	if	1	;There is more than 1 active tblptr byte
  6333  0028B2  0E20               	movlw	high __smallconst
  6334  0028B4  6EF7               	movwf	tblptrh,c
  6335  0028B6                     	endif
  6336  0028B6                     	if	0	;tblptru may be non-zero
  6337  0028B6                     	endif
  6338  0028B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6339  0028B6  0E00               	movlw	low (__smallconst shr (0+16))
  6340  0028B8  6EF8               	movwf	tblptru,c
  6341  0028BA                     	endif
  6342  0028BA  0008               	tblrd		*
  6343  0028BC  50F5               	movf	tablat,w,c
  6344  0028BE  0A73               	xorlw	115
  6345  0028C0  A4D8               	btfss	status,2,c
  6346  0028C2  D027               	goto	l4815
  6347                           
  6348                           ; BSR set to: 0
  6349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  6350  0028C4  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6351  0028C6  6ED9               	movwf	fsr2l,c
  6352  0028C8  6ADA               	clrf	fsr2h,c
  6353  0028CA  2ADF               	incf	indf2,f,c
  6354                           
  6355                           ; BSR set to: 0
  6356                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  6357  0028CC  504A               	movf	vfpfcnvrt@ap^0,w,c
  6358  0028CE  6ED9               	movwf	fsr2l,c
  6359  0028D0  6ADA               	clrf	fsr2h,c
  6360  0028D2  0E02               	movlw	2
  6361  0028D4  26DF               	addwf	indf2,f,c
  6362  0028D6  5CDF               	subwf	indf2,w,c
  6363  0028D8  6ED9               	movwf	fsr2l,c
  6364  0028DA  6ADA               	clrf	fsr2h,c
  6365  0028DC  006F FF78  F053    	movff	postinc2,vfpfcnvrt@cp
  6366  0028E2  006F FF78  F054    	movff	postinc2,vfpfcnvrt@cp+1
  6367                           
  6368                           ; BSR set to: 0
  6369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  6370  0028E8  0060  F11C  F011   	movff	vfpfcnvrt@fp,stoa@fp
  6371  0028EE  0060  F120  F012   	movff	vfpfcnvrt@fp+1,stoa@fp+1
  6372  0028F4  0060  F14C  F013   	movff	vfpfcnvrt@cp,stoa@s
  6373  0028FA  0060  F150  F014   	movff	vfpfcnvrt@cp+1,stoa@s+1
  6374  002900  ECD1  F014         	call	_stoa	;wreg free
  6375  002904  0060  F044  F047   	movff	?_stoa,?_vfpfcnvrt
  6376  00290A  0060  F048  F048   	movff	?_stoa+1,?_vfpfcnvrt+1
  6377  002910  0012               	return	
  6378  002912                     l4815:
  6379                           
  6380                           ; BSR set to: 0
  6381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  6382  002912  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6383  002914  6ED9               	movwf	fsr2l,c
  6384  002916  6ADA               	clrf	fsr2h,c
  6385  002918  006F FF7F FFF6     	movff	indf2,tblptrl
  6386  00291E                     	if	1	;There is more than 1 active tblptr byte
  6387  00291E  0E20               	movlw	high __smallconst
  6388  002920  6EF7               	movwf	tblptrh,c
  6389  002922                     	endif
  6390  002922                     	if	0	;tblptru may be non-zero
  6391  002922                     	endif
  6392  002922                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6393  002922  0E00               	movlw	low (__smallconst shr (0+16))
  6394  002924  6EF8               	movwf	tblptru,c
  6395  002926                     	endif
  6396  002926  0008               	tblrd		*
  6397  002928  50F5               	movf	tablat,w,c
  6398  00292A  0A25               	xorlw	37
  6399  00292C  A4D8               	btfss	status,2,c
  6400  00292E  D015               	goto	l4825
  6401                           
  6402                           ; BSR set to: 0
  6403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  6404  002930  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6405  002932  6ED9               	movwf	fsr2l,c
  6406  002934  6ADA               	clrf	fsr2h,c
  6407  002936  2ADF               	incf	indf2,f,c
  6408                           
  6409                           ; BSR set to: 0
  6410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  6411  002938  0E00               	movlw	0
  6412  00293A  6E09               	movwf	(fputc@c+1)^0,c
  6413  00293C  0E25               	movlw	37
  6414  00293E  6E08               	movwf	fputc@c^0,c
  6415  002940  0060  F11C  F00A   	movff	vfpfcnvrt@fp,fputc@fp
  6416  002946  0060  F120  F00B   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6417  00294C  EC6F  F018         	call	_fputc	;wreg free
  6418  002950                     l4821:
  6419                           
  6420                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  6421  002950  0E00               	movlw	0
  6422  002952  6E48               	movwf	(?_vfpfcnvrt+1)^0,c
  6423  002954  0E01               	movlw	1
  6424  002956  6E47               	movwf	?_vfpfcnvrt^0,c
  6425  002958  0012               	return	
  6426  00295A                     l4825:
  6427                           
  6428                           ; BSR set to: 0
  6429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  6430  00295A  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6431  00295C  6ED9               	movwf	fsr2l,c
  6432  00295E  6ADA               	clrf	fsr2h,c
  6433  002960  2ADF               	incf	indf2,f,c
  6434                           
  6435                           ; BSR set to: 0
  6436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  6437  002962  0E00               	movlw	0
  6438  002964  6E48               	movwf	(?_vfpfcnvrt+1)^0,c
  6439  002966  0E00               	movlw	0
  6440  002968  6E47               	movwf	?_vfpfcnvrt^0,c
  6441  00296A  0012               	return	
  6442  00296C                     l4831:
  6443                           
  6444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  6445  00296C  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6446  00296E  6ED9               	movwf	fsr2l,c
  6447  002970  6ADA               	clrf	fsr2h,c
  6448  002972  006F FF7F FFF6     	movff	indf2,tblptrl
  6449  002978                     	if	1	;There is more than 1 active tblptr byte
  6450  002978  0E20               	movlw	high __smallconst
  6451  00297A  6EF7               	movwf	tblptrh,c
  6452  00297C                     	endif
  6453  00297C                     	if	0	;tblptru may be non-zero
  6454  00297C                     	endif
  6455  00297C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6456  00297C  0E00               	movlw	low (__smallconst shr (0+16))
  6457  00297E  6EF8               	movwf	tblptru,c
  6458  002980                     	endif
  6459  002980  0008               	tblrd		*
  6460  002982  50F5               	movf	tablat,w,c
  6461  002984  6E08               	movwf	fputc@c^0,c
  6462  002986  6A09               	clrf	(fputc@c+1)^0,c
  6463  002988  0060  F11C  F00A   	movff	vfpfcnvrt@fp,fputc@fp
  6464  00298E  0060  F120  F00B   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6465  002994  EC6F  F018         	call	_fputc	;wreg free
  6466                           
  6467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  6468  002998  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6469  00299A  6ED9               	movwf	fsr2l,c
  6470  00299C  6ADA               	clrf	fsr2h,c
  6471  00299E  2ADF               	incf	indf2,f,c
  6472  0029A0  D7D7               	goto	l4821
  6473  0029A2                     __end_of_vfpfcnvrt:
  6474                           	opt callstack 0
  6475                           
  6476 ;; *************** function _stoa *****************
  6477 ;; Defined at:
  6478 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6479 ;; Parameters:    Size  Location     Type
  6480 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6481 ;;		 -> sprintf@f(6), NULL(0), 
  6482 ;;  s               2   18[COMRAM] PTR unsigned char 
  6483 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(4), STR_14(4), 
  6484 ;;		 -> STR_12(4), STR_10(4), STR_8(4), STR_6(4), 
  6485 ;;		 -> STR_4(5), 
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;  nuls            7   21[COMRAM] unsigned char [7]
  6488 ;;  l               2   36[COMRAM] int 
  6489 ;;  p               2   34[COMRAM] int 
  6490 ;;  cp              2   32[COMRAM] PTR unsigned char 
  6491 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), STR_16(4), 
  6492 ;;		 -> STR_14(4), STR_12(4), STR_10(4), STR_8(4), 
  6493 ;;		 -> STR_6(4), STR_4(5), 
  6494 ;;  w               2   30[COMRAM] int 
  6495 ;;  i               2   28[COMRAM] int 
  6496 ;; Return value:  Size  Location     Type
  6497 ;;                  2   16[COMRAM] int 
  6498 ;; Registers used:
  6499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6500 ;; Tracked objects:
  6501 ;;		On entry : 3F/0
  6502 ;;		On exit  : 0/0
  6503 ;;		Unchanged: 0/0
  6504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6505 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6506 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6507 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6508 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6509 ;;Total ram usage:       22 bytes
  6510 ;; Hardware stack levels used:    1
  6511 ;; Hardware stack levels required when called:    7
  6512 ;; This function calls:
  6513 ;;		_fputc
  6514 ;;		_strlen
  6515 ;; This function is called by:
  6516 ;;		_vfpfcnvrt
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520                           	psect	text46
  6521  0029A2                     __ptext46:
  6522                           	opt callstack 0
  6523  0029A2                     _stoa:
  6524                           	opt callstack 19
  6525                           
  6526                           ; BSR set to: 0
  6527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  6528                           
  6529                           ;incstack = 0
  6530  0029A2  EE20  F192         	lfsr	2,stoa@F1139
  6531  0029A6  EE10  F016         	lfsr	1,stoa@nuls
  6532  0029AA  0E06               	movlw	6
  6533  0029AC                     u3641:
  6534  0029AC  006F FF6F FFE3     	movff	plusw2,plusw1
  6535  0029B2  06E8               	decf	wreg,f,c
  6536  0029B4  E2FB               	bc	u3641
  6537                           
  6538                           ; BSR set to: 0
  6539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  6540  0029B6  0060  F04C  F021   	movff	stoa@s,stoa@cp
  6541  0029BC  0060  F050  F022   	movff	stoa@s+1,stoa@cp+1
  6542                           
  6543                           ; BSR set to: 0
  6544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  6545  0029C2  5021               	movf	stoa@cp^0,w,c
  6546  0029C4  1022               	iorwf	(stoa@cp+1)^0,w,c
  6547  0029C6  A4D8               	btfss	status,2,c
  6548  0029C8  D003               	goto	l4739
  6549                           
  6550                           ; BSR set to: 0
  6551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  6552  0029CA  0E16               	movlw	low stoa@nuls
  6553  0029CC  6E21               	movwf	stoa@cp^0,c
  6554  0029CE  6A22               	clrf	(stoa@cp+1)^0,c
  6555  0029D0                     l4739:
  6556                           
  6557                           ; BSR set to: 0
  6558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  6559  0029D0  0060  F084  F006   	movff	stoa@cp,strlen@s
  6560  0029D6  0060  F088  F007   	movff	stoa@cp+1,strlen@s+1
  6561  0029DC  EC99  F01B         	call	_strlen	;wreg free
  6562  0029E0  0060  F018  F025   	movff	?_strlen,stoa@l
  6563  0029E6  0060  F01C  F026   	movff	?_strlen+1,stoa@l+1
  6564                           
  6565                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  6566  0029EC  0060  F240  F023   	movff	_prec,stoa@p
  6567  0029F2  0060  F244  F024   	movff	_prec+1,stoa@p+1
  6568                           
  6569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  6570  0029F8  BE24               	btfsc	(stoa@p+1)^0,7,c
  6571  0029FA  D010               	goto	l1339
  6572  0029FC  5025               	movf	stoa@l^0,w,c
  6573  0029FE  5C23               	subwf	stoa@p^0,w,c
  6574  002A00  5024               	movf	(stoa@p+1)^0,w,c
  6575  002A02  0A80               	xorlw	128
  6576  002A04  6E15               	movwf	??_stoa^0,c
  6577  002A06  5026               	movf	(stoa@l+1)^0,w,c
  6578  002A08  0A80               	xorlw	128
  6579  002A0A  5815               	subwfb	??_stoa^0,w,c
  6580  002A0C  B0D8               	btfsc	status,0,c
  6581  002A0E  D006               	goto	l1339
  6582  002A10  0060  F08C  F025   	movff	stoa@p,stoa@l
  6583  002A16  0060  F090  F026   	movff	stoa@p+1,stoa@l+1
  6584  002A1C                     l1339:
  6585                           
  6586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
  6587  002A1C  0060  F094  F023   	movff	stoa@l,stoa@p
  6588  002A22  0060  F098  F024   	movff	stoa@l+1,stoa@p+1
  6589                           
  6590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
  6591  002A28  0060  F5A0  F01F   	movff	_width,stoa@w
  6592  002A2E  0060  F5A4  F020   	movff	_width+1,stoa@w+1
  6593                           
  6594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  6595  002A34  A056               	btfss	_flags^0,0,c
  6596  002A36  D00F               	goto	l4753
  6597  002A38  D018               	goto	u3690
  6598  002A3A                     l4749:
  6599                           
  6600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  6601  002A3A  0E00               	movlw	0
  6602  002A3C  6E09               	movwf	(fputc@c+1)^0,c
  6603  002A3E  0E20               	movlw	32
  6604  002A40  6E08               	movwf	fputc@c^0,c
  6605  002A42  0060  F044  F00A   	movff	stoa@fp,fputc@fp
  6606  002A48  0060  F048  F00B   	movff	stoa@fp+1,fputc@fp+1
  6607  002A4E  EC6F  F018         	call	_fputc	;wreg free
  6608                           
  6609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
  6610  002A52  4A25               	infsnz	stoa@l^0,f,c
  6611  002A54  2A26               	incf	(stoa@l+1)^0,f,c
  6612  002A56                     l4753:
  6613                           
  6614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  6615  002A56  501F               	movf	stoa@w^0,w,c
  6616  002A58  5C25               	subwf	stoa@l^0,w,c
  6617  002A5A  5026               	movf	(stoa@l+1)^0,w,c
  6618  002A5C  0A80               	xorlw	128
  6619  002A5E  6E15               	movwf	??_stoa^0,c
  6620  002A60  5020               	movf	(stoa@w+1)^0,w,c
  6621  002A62  0A80               	xorlw	128
  6622  002A64  5815               	subwfb	??_stoa^0,w,c
  6623  002A66  A0D8               	btfss	status,0,c
  6624  002A68  D7E8               	goto	l4749
  6625  002A6A                     u3690:
  6626                           
  6627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  6628  002A6A  0E00               	movlw	0
  6629  002A6C  6E1E               	movwf	(stoa@i+1)^0,c
  6630  002A6E  0E00               	movlw	0
  6631  002A70  6E1D               	movwf	stoa@i^0,c
  6632                           
  6633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  6634  002A72  D025               	goto	l4763
  6635  002A74                     l4757:
  6636                           
  6637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  6638  002A74  0060  F087  FFF6   	movff	stoa@cp,tblptrl
  6639  002A7A  0060  F08B  FFF7   	movff	stoa@cp+1,tblptrh
  6640  002A80  0E00               	movlw	low (__smallconst shr (0+16))
  6641  002A82  6EF8               	movwf	tblptru,c
  6642  002A84  0E1F               	movlw	(high __ramtop+-1)
  6643  002A86  64F7               	cpfsgt	tblptrh,c
  6644  002A88  D003               	bra	u3707
  6645  002A8A  0008               	tblrd		*
  6646  002A8C  50F5               	movf	tablat,w,c
  6647  002A8E  D007               	bra	u3700
  6648  002A90                     u3707:
  6649  002A90  006F FFDB FFE1     	movff	tblptrl,fsr1l
  6650  002A96  006F FFDF FFE2     	movff	tblptrh,fsr1h
  6651  002A9C  50E7               	movf	indf1,w,c
  6652  002A9E                     u3700:
  6653  002A9E  6E15               	movwf	??_stoa^0,c
  6654  002AA0  5015               	movf	??_stoa^0,w,c
  6655  002AA2  6E08               	movwf	fputc@c^0,c
  6656  002AA4  6A09               	clrf	(fputc@c+1)^0,c
  6657  002AA6  0060  F044  F00A   	movff	stoa@fp,fputc@fp
  6658  002AAC  0060  F048  F00B   	movff	stoa@fp+1,fputc@fp+1
  6659  002AB2  EC6F  F018         	call	_fputc	;wreg free
  6660                           
  6661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  6662  002AB6  4A21               	infsnz	stoa@cp^0,f,c
  6663  002AB8  2A22               	incf	(stoa@cp+1)^0,f,c
  6664                           
  6665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
  6666  002ABA  4A1D               	infsnz	stoa@i^0,f,c
  6667  002ABC  2A1E               	incf	(stoa@i+1)^0,f,c
  6668  002ABE                     l4763:
  6669                           
  6670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  6671  002ABE  5023               	movf	stoa@p^0,w,c
  6672  002AC0  5C1D               	subwf	stoa@i^0,w,c
  6673  002AC2  501E               	movf	(stoa@i+1)^0,w,c
  6674  002AC4  0A80               	xorlw	128
  6675  002AC6  6E15               	movwf	??_stoa^0,c
  6676  002AC8  5024               	movf	(stoa@p+1)^0,w,c
  6677  002ACA  0A80               	xorlw	128
  6678  002ACC  5815               	subwfb	??_stoa^0,w,c
  6679  002ACE  A0D8               	btfss	status,0,c
  6680  002AD0  D7D1               	goto	l4757
  6681                           
  6682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  6683  002AD2  B056               	btfsc	_flags^0,0,c
  6684  002AD4  D00F               	goto	l4771
  6685  002AD6  D018               	goto	u3730
  6686  002AD8                     l4767:
  6687                           
  6688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  6689  002AD8  0E00               	movlw	0
  6690  002ADA  6E09               	movwf	(fputc@c+1)^0,c
  6691  002ADC  0E20               	movlw	32
  6692  002ADE  6E08               	movwf	fputc@c^0,c
  6693  002AE0  0060  F044  F00A   	movff	stoa@fp,fputc@fp
  6694  002AE6  0060  F048  F00B   	movff	stoa@fp+1,fputc@fp+1
  6695  002AEC  EC6F  F018         	call	_fputc	;wreg free
  6696                           
  6697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
  6698  002AF0  4A25               	infsnz	stoa@l^0,f,c
  6699  002AF2  2A26               	incf	(stoa@l+1)^0,f,c
  6700  002AF4                     l4771:
  6701                           
  6702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  6703  002AF4  501F               	movf	stoa@w^0,w,c
  6704  002AF6  5C25               	subwf	stoa@l^0,w,c
  6705  002AF8  5026               	movf	(stoa@l+1)^0,w,c
  6706  002AFA  0A80               	xorlw	128
  6707  002AFC  6E15               	movwf	??_stoa^0,c
  6708  002AFE  5020               	movf	(stoa@w+1)^0,w,c
  6709  002B00  0A80               	xorlw	128
  6710  002B02  5815               	subwfb	??_stoa^0,w,c
  6711  002B04  A0D8               	btfss	status,0,c
  6712  002B06  D7E8               	goto	l4767
  6713  002B08                     u3730:
  6714                           
  6715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
  6716                           
  6717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 586:     }
  6718  002B08  0060  F094  F011   	movff	stoa@l,?_stoa
  6719  002B0E  0060  F098  F012   	movff	stoa@l+1,?_stoa+1
  6720  002B14  0012               	return		;funcret
  6721  002B16                     __end_of_stoa:
  6722                           	opt callstack 0
  6723                           
  6724 ;; *************** function _dtoa *****************
  6725 ;; Defined at:
  6726 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6727 ;; Parameters:    Size  Location     Type
  6728 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  6729 ;;		 -> sprintf@f(6), NULL(0), 
  6730 ;;  d               8   36[COMRAM] long long 
  6731 ;; Auto vars:     Size  Location     Type
  6732 ;;  n               8   60[COMRAM] long long 
  6733 ;;  i               2   68[COMRAM] int 
  6734 ;;  s               2   58[COMRAM] int 
  6735 ;;  w               2   56[COMRAM] int 
  6736 ;;  p               2   54[COMRAM] int 
  6737 ;; Return value:  Size  Location     Type
  6738 ;;                  2   34[COMRAM] int 
  6739 ;; Registers used:
  6740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6741 ;; Tracked objects:
  6742 ;;		On entry : 3F/0
  6743 ;;		On exit  : 0/0
  6744 ;;		Unchanged: 0/0
  6745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6746 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6747 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6748 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6749 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6750 ;;Total ram usage:       36 bytes
  6751 ;; Hardware stack levels used:    1
  6752 ;; Hardware stack levels required when called:    9
  6753 ;; This function calls:
  6754 ;;		___aodiv
  6755 ;;		___aomod
  6756 ;;		_abs
  6757 ;;		_pad
  6758 ;; This function is called by:
  6759 ;;		_vfpfcnvrt
  6760 ;; This function uses a non-reentrant model
  6761 ;;
  6762                           
  6763                           	psect	text47
  6764  002050                     __ptext47:
  6765                           	opt callstack 0
  6766  002050                     _dtoa:
  6767                           	opt callstack 17
  6768                           
  6769                           ; BSR set to: 0
  6770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
  6771                           
  6772                           ;incstack = 0
  6773  002050  0060  F094  F03D   	movff	dtoa@d,dtoa@n
  6774  002056  0060  F098  F03E   	movff	dtoa@d+1,dtoa@n+1
  6775  00205C  0060  F09C  F03F   	movff	dtoa@d+2,dtoa@n+2
  6776  002062  0060  F0A0  F040   	movff	dtoa@d+3,dtoa@n+3
  6777  002068  0060  F0A4  F041   	movff	dtoa@d+4,dtoa@n+4
  6778  00206E  0060  F0A8  F042   	movff	dtoa@d+5,dtoa@n+5
  6779  002074  0060  F0AC  F043   	movff	dtoa@d+6,dtoa@n+6
  6780  00207A  0060  F0B0  F044   	movff	dtoa@d+7,dtoa@n+7
  6781                           
  6782                           ; BSR set to: 0
  6783                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  6784  002080  AE44               	btfss	(dtoa@n+7)^0,7,c
  6785  002082  D002               	goto	u3490
  6786  002084  0E01               	movlw	1
  6787  002086  D001               	goto	u3500
  6788  002088                     u3490:
  6789  002088  0E00               	movlw	0
  6790  00208A                     u3500:
  6791  00208A  6E3B               	movwf	dtoa@s^0,c
  6792  00208C  6A3C               	clrf	(dtoa@s+1)^0,c
  6793                           
  6794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  6795  00208E  503B               	movf	dtoa@s^0,w,c
  6796  002090  103C               	iorwf	(dtoa@s+1)^0,w,c
  6797  002092  B4D8               	btfsc	status,2,c
  6798  002094  D010               	goto	l4675
  6799                           
  6800                           ; BSR set to: 0
  6801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  6802  002096  1E44               	comf	(dtoa@n+7)^0,f,c
  6803  002098  1E43               	comf	(dtoa@n+6)^0,f,c
  6804  00209A  1E42               	comf	(dtoa@n+5)^0,f,c
  6805  00209C  1E41               	comf	(dtoa@n+4)^0,f,c
  6806  00209E  1E40               	comf	(dtoa@n+3)^0,f,c
  6807  0020A0  1E3F               	comf	(dtoa@n+2)^0,f,c
  6808  0020A2  1E3E               	comf	(dtoa@n+1)^0,f,c
  6809  0020A4  6C3D               	negf	dtoa@n^0,c
  6810  0020A6  0E00               	movlw	0
  6811  0020A8  223E               	addwfc	(dtoa@n+1)^0,f,c
  6812  0020AA  223F               	addwfc	(dtoa@n+2)^0,f,c
  6813  0020AC  2240               	addwfc	(dtoa@n+3)^0,f,c
  6814  0020AE  2241               	addwfc	(dtoa@n+4)^0,f,c
  6815  0020B0  2242               	addwfc	(dtoa@n+5)^0,f,c
  6816  0020B2  2243               	addwfc	(dtoa@n+6)^0,f,c
  6817  0020B4  2244               	addwfc	(dtoa@n+7)^0,f,c
  6818  0020B6                     l4675:
  6819                           
  6820                           ; BSR set to: 0
  6821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  6822  0020B6  AF91               	btfss	(_prec+1)& (0+255),7,b
  6823                           
  6824                           ; BSR set to: 0
  6825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  6826  0020B8  9256               	bcf	_flags^0,1,c
  6827                           
  6828                           ; BSR set to: 0
  6829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  6830  0020BA  BF91               	btfsc	(_prec+1)& (0+255),7,b
  6831  0020BC  D005               	goto	u3530
  6832  0020BE  5191               	movf	(_prec+1)& (0+255),w,b
  6833  0020C0  E108               	bnz	l1310
  6834  0020C2  0590               	decf	_prec& (0+255),w,b
  6835  0020C4  B0D8               	btfsc	status,0,c
  6836  0020C6  D005               	goto	l1310
  6837  0020C8                     u3530:
  6838                           
  6839                           ; BSR set to: 0
  6840  0020C8  0E00               	movlw	0
  6841  0020CA  6E38               	movwf	(dtoa@p+1)^0,c
  6842  0020CC  0E01               	movlw	1
  6843  0020CE  6E37               	movwf	dtoa@p^0,c
  6844  0020D0  D006               	goto	l1312
  6845  0020D2                     l1310:
  6846                           
  6847                           ; BSR set to: 0
  6848  0020D2  0060  F240  F037   	movff	_prec,dtoa@p
  6849  0020D8  0060  F244  F038   	movff	_prec+1,dtoa@p+1
  6850  0020DE                     l1312:
  6851                           
  6852                           ; BSR set to: 0
  6853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
  6854  0020DE  0060  F5A0  F039   	movff	_width,dtoa@w
  6855  0020E4  0060  F5A4  F03A   	movff	_width+1,dtoa@w+1
  6856                           
  6857                           ; BSR set to: 0
  6858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  6859  0020EA  503B               	movf	dtoa@s^0,w,c
  6860  0020EC  103C               	iorwf	(dtoa@s+1)^0,w,c
  6861  0020EE  A4D8               	btfss	status,2,c
  6862  0020F0  D002               	goto	u3550
  6863                           
  6864                           ; BSR set to: 0
  6865  0020F2  A456               	btfss	_flags^0,2,c
  6866  0020F4  D003               	goto	l4689
  6867  0020F6                     u3550:
  6868                           
  6869                           ; BSR set to: 0
  6870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
  6871  0020F6  0639               	decf	dtoa@w^0,f,c
  6872  0020F8  A0D8               	btfss	status,0,c
  6873  0020FA  063A               	decf	(dtoa@w+1)^0,f,c
  6874  0020FC                     l4689:
  6875                           
  6876                           ; BSR set to: 0
  6877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  6878  0020FC  0E00               	movlw	0
  6879  0020FE  6E46               	movwf	(dtoa@i+1)^0,c
  6880  002100  0E1F               	movlw	31
  6881  002102  6E45               	movwf	dtoa@i^0,c
  6882                           
  6883                           ; BSR set to: 0
  6884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  6885  002104  0E00               	movlw	0
  6886  002106  0101               	movlb	1	; () banked
  6887  002108  6F91               	movwf	(_dbuf+31)& (0+255),b
  6888                           
  6889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6890  00210A  D09E               	goto	l4703
  6891  00210C                     l4693:
  6892                           
  6893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
  6894  00210C  0645               	decf	dtoa@i^0,f,c
  6895  00210E  A0D8               	btfss	status,0,c
  6896  002110  0646               	decf	(dtoa@i+1)^0,f,c
  6897                           
  6898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  6899  002112  0E72               	movlw	low _dbuf
  6900  002114  2445               	addwf	dtoa@i^0,w,c
  6901  002116  6ED9               	movwf	fsr2l,c
  6902  002118  0E01               	movlw	high _dbuf
  6903  00211A  2046               	addwfc	(dtoa@i+1)^0,w,c
  6904  00211C  6EDA               	movwf	fsr2h,c
  6905  00211E  0060  F0F4  F006   	movff	dtoa@n,___aomod@dividend
  6906  002124  0060  F0F8  F007   	movff	dtoa@n+1,___aomod@dividend+1
  6907  00212A  0060  F0FC  F008   	movff	dtoa@n+2,___aomod@dividend+2
  6908  002130  0060  F100  F009   	movff	dtoa@n+3,___aomod@dividend+3
  6909  002136  0060  F104  F00A   	movff	dtoa@n+4,___aomod@dividend+4
  6910  00213C  0060  F108  F00B   	movff	dtoa@n+5,___aomod@dividend+5
  6911  002142  0060  F10C  F00C   	movff	dtoa@n+6,___aomod@dividend+6
  6912  002148  0060  F110  F00D   	movff	dtoa@n+7,___aomod@dividend+7
  6913  00214E  0E0A               	movlw	10
  6914  002150  6E0E               	movwf	___aomod@divisor^0,c
  6915  002152  0E00               	movlw	0
  6916  002154  6E0F               	movwf	(___aomod@divisor+1)^0,c
  6917  002156  0E00               	movlw	0
  6918  002158  6E10               	movwf	(___aomod@divisor+2)^0,c
  6919  00215A  0E00               	movlw	0
  6920  00215C  6E11               	movwf	(___aomod@divisor+3)^0,c
  6921  00215E  0E00               	movlw	0
  6922  002160  6E12               	movwf	(___aomod@divisor+4)^0,c
  6923  002162  0E00               	movlw	0
  6924  002164  6E13               	movwf	(___aomod@divisor+5)^0,c
  6925  002166  0E00               	movlw	0
  6926  002168  6E14               	movwf	(___aomod@divisor+6)^0,c
  6927  00216A  0E00               	movlw	0
  6928  00216C  6E15               	movwf	(___aomod@divisor+7)^0,c
  6929  00216E  EC37  F016         	call	___aomod	;wreg free
  6930  002172  0060  F018  F02D   	movff	?___aomod,??_dtoa
  6931  002178  0060  F01C  F02E   	movff	?___aomod+1,??_dtoa+1
  6932  00217E  0060  F020  F02F   	movff	?___aomod+2,??_dtoa+2
  6933  002184  0060  F024  F030   	movff	?___aomod+3,??_dtoa+3
  6934  00218A  0060  F028  F031   	movff	?___aomod+4,??_dtoa+4
  6935  002190  0060  F02C  F032   	movff	?___aomod+5,??_dtoa+5
  6936  002196  0060  F030  F033   	movff	?___aomod+6,??_dtoa+6
  6937  00219C  0060  F034  F034   	movff	?___aomod+7,??_dtoa+7
  6938  0021A2  0060  F0B4  F018   	movff	??_dtoa,abs@a
  6939  0021A8  0060  F0BC  F019   	movff	??_dtoa+2,abs@a+1
  6940  0021AE  EC91  F01C         	call	_abs	;wreg free
  6941  0021B2  5018               	movf	?_abs^0,w,c
  6942  0021B4  0F30               	addlw	48
  6943  0021B6  6EDF               	movwf	indf2,c
  6944                           
  6945                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
  6946  0021B8  0637               	decf	dtoa@p^0,f,c
  6947  0021BA  A0D8               	btfss	status,0,c
  6948  0021BC  0638               	decf	(dtoa@p+1)^0,f,c
  6949                           
  6950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
  6951  0021BE  0639               	decf	dtoa@w^0,f,c
  6952  0021C0  A0D8               	btfss	status,0,c
  6953  0021C2  063A               	decf	(dtoa@w+1)^0,f,c
  6954                           
  6955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  6956  0021C4  0060  F0F4  F006   	movff	dtoa@n,___aodiv@dividend
  6957  0021CA  0060  F0F8  F007   	movff	dtoa@n+1,___aodiv@dividend+1
  6958  0021D0  0060  F0FC  F008   	movff	dtoa@n+2,___aodiv@dividend+2
  6959  0021D6  0060  F100  F009   	movff	dtoa@n+3,___aodiv@dividend+3
  6960  0021DC  0060  F104  F00A   	movff	dtoa@n+4,___aodiv@dividend+4
  6961  0021E2  0060  F108  F00B   	movff	dtoa@n+5,___aodiv@dividend+5
  6962  0021E8  0060  F10C  F00C   	movff	dtoa@n+6,___aodiv@dividend+6
  6963  0021EE  0060  F110  F00D   	movff	dtoa@n+7,___aodiv@dividend+7
  6964  0021F4  0E0A               	movlw	10
  6965  0021F6  6E0E               	movwf	___aodiv@divisor^0,c
  6966  0021F8  0E00               	movlw	0
  6967  0021FA  6E0F               	movwf	(___aodiv@divisor+1)^0,c
  6968  0021FC  0E00               	movlw	0
  6969  0021FE  6E10               	movwf	(___aodiv@divisor+2)^0,c
  6970  002200  0E00               	movlw	0
  6971  002202  6E11               	movwf	(___aodiv@divisor+3)^0,c
  6972  002204  0E00               	movlw	0
  6973  002206  6E12               	movwf	(___aodiv@divisor+4)^0,c
  6974  002208  0E00               	movlw	0
  6975  00220A  6E13               	movwf	(___aodiv@divisor+5)^0,c
  6976  00220C  0E00               	movlw	0
  6977  00220E  6E14               	movwf	(___aodiv@divisor+6)^0,c
  6978  002210  0E00               	movlw	0
  6979  002212  6E15               	movwf	(___aodiv@divisor+7)^0,c
  6980  002214  EC8B  F015         	call	___aodiv	;wreg free
  6981  002218  0060  F018  F03D   	movff	?___aodiv,dtoa@n
  6982  00221E  0060  F01C  F03E   	movff	?___aodiv+1,dtoa@n+1
  6983  002224  0060  F020  F03F   	movff	?___aodiv+2,dtoa@n+2
  6984  00222A  0060  F024  F040   	movff	?___aodiv+3,dtoa@n+3
  6985  002230  0060  F028  F041   	movff	?___aodiv+4,dtoa@n+4
  6986  002236  0060  F02C  F042   	movff	?___aodiv+5,dtoa@n+5
  6987  00223C  0060  F030  F043   	movff	?___aodiv+6,dtoa@n+6
  6988  002242  0060  F034  F044   	movff	?___aodiv+7,dtoa@n+7
  6989  002248                     l4703:
  6990                           
  6991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6992  002248  BE46               	btfsc	(dtoa@i+1)^0,7,c
  6993  00224A  D01F               	goto	u3600
  6994  00224C  5046               	movf	(dtoa@i+1)^0,w,c
  6995  00224E  E103               	bnz	u3560
  6996  002250  0445               	decf	dtoa@i^0,w,c
  6997  002252  A0D8               	btfss	status,0,c
  6998  002254  D01A               	goto	u3600
  6999  002256                     u3560:
  7000  002256  503D               	movf	dtoa@n^0,w,c
  7001  002258  103E               	iorwf	(dtoa@n+1)^0,w,c
  7002  00225A  103F               	iorwf	(dtoa@n+2)^0,w,c
  7003  00225C  1040               	iorwf	(dtoa@n+3)^0,w,c
  7004  00225E  1041               	iorwf	(dtoa@n+4)^0,w,c
  7005  002260  1042               	iorwf	(dtoa@n+5)^0,w,c
  7006  002262  1043               	iorwf	(dtoa@n+6)^0,w,c
  7007  002264  1044               	iorwf	(dtoa@n+7)^0,w,c
  7008  002266  A4D8               	btfss	status,2,c
  7009  002268  D751               	goto	l4693
  7010  00226A  BE38               	btfsc	(dtoa@p+1)^0,7,c
  7011  00226C  D005               	goto	u3580
  7012  00226E  5038               	movf	(dtoa@p+1)^0,w,c
  7013  002270  E102               	bnz	u3581
  7014  002272  0437               	decf	dtoa@p^0,w,c
  7015  002274  B0D8               	btfsc	status,0,c
  7016  002276                     u3581:
  7017  002276  D74A               	goto	l4693
  7018  002278                     u3580:
  7019  002278  BE3A               	btfsc	(dtoa@w+1)^0,7,c
  7020  00227A  D007               	goto	u3600
  7021  00227C  503A               	movf	(dtoa@w+1)^0,w,c
  7022  00227E  E103               	bnz	u3590
  7023  002280  0439               	decf	dtoa@w^0,w,c
  7024  002282  A0D8               	btfss	status,0,c
  7025  002284  D002               	goto	u3600
  7026  002286                     u3590:
  7027  002286  B256               	btfsc	_flags^0,1,c
  7028  002288  D741               	goto	l4693
  7029  00228A                     u3600:
  7030                           
  7031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  7032  00228A  503B               	movf	dtoa@s^0,w,c
  7033  00228C  103C               	iorwf	(dtoa@s+1)^0,w,c
  7034  00228E  A4D8               	btfss	status,2,c
  7035  002290  D002               	goto	u3620
  7036  002292  A456               	btfss	_flags^0,2,c
  7037  002294  D018               	goto	l4727
  7038  002296                     u3620:
  7039                           
  7040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
  7041  002296  0645               	decf	dtoa@i^0,f,c
  7042  002298  A0D8               	btfss	status,0,c
  7043  00229A  0646               	decf	(dtoa@i+1)^0,f,c
  7044                           
  7045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  7046  00229C  503B               	movf	dtoa@s^0,w,c
  7047  00229E  103C               	iorwf	(dtoa@s+1)^0,w,c
  7048  0022A0  A4D8               	btfss	status,2,c
  7049  0022A2  D004               	goto	l4723
  7050  0022A4  0E00               	movlw	0
  7051  0022A6  6E36               	movwf	(_dtoa$2599+1)^0,c
  7052  0022A8  0E2B               	movlw	43
  7053  0022AA  D003               	goto	L10
  7054  0022AC                     l4723:
  7055  0022AC  0E00               	movlw	0
  7056  0022AE  6E36               	movwf	(_dtoa$2599+1)^0,c
  7057  0022B0  0E2D               	movlw	45
  7058  0022B2                     L10:
  7059  0022B2  6E35               	movwf	_dtoa$2599^0,c
  7060  0022B4  0E72               	movlw	low _dbuf
  7061  0022B6  2445               	addwf	dtoa@i^0,w,c
  7062  0022B8  6ED9               	movwf	fsr2l,c
  7063  0022BA  0E01               	movlw	high _dbuf
  7064  0022BC  2046               	addwfc	(dtoa@i+1)^0,w,c
  7065  0022BE  6EDA               	movwf	fsr2h,c
  7066  0022C0  0060  F0D7  FFDF   	movff	_dtoa$2599,indf2
  7067  0022C6                     l4727:
  7068                           
  7069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  7070  0022C6  0060  F08C  F018   	movff	dtoa@fp,pad@fp
  7071  0022CC  0060  F090  F019   	movff	dtoa@fp+1,pad@fp+1
  7072  0022D2  0E72               	movlw	low _dbuf
  7073  0022D4  2445               	addwf	dtoa@i^0,w,c
  7074  0022D6  6E1A               	movwf	pad@buf^0,c
  7075  0022D8  0E01               	movlw	high _dbuf
  7076  0022DA  2046               	addwfc	(dtoa@i+1)^0,w,c
  7077  0022DC  6E1B               	movwf	(pad@buf+1)^0,c
  7078  0022DE  0060  F0E4  F01C   	movff	dtoa@w,pad@p
  7079  0022E4  0060  F0E8  F01D   	movff	dtoa@w+1,pad@p+1
  7080  0022EA  EC16  F018         	call	_pad	;wreg free
  7081  0022EE  0060  F060  F023   	movff	?_pad,?_dtoa
  7082  0022F4  0060  F064  F024   	movff	?_pad+1,?_dtoa+1
  7083  0022FA  0012               	return		;funcret
  7084  0022FC                     __end_of_dtoa:
  7085                           	opt callstack 0
  7086                           
  7087 ;; *************** function _pad *****************
  7088 ;; Defined at:
  7089 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7090 ;; Parameters:    Size  Location     Type
  7091 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  7092 ;;		 -> sprintf@f(6), NULL(0), 
  7093 ;;  buf             2   25[COMRAM] PTR unsigned char 
  7094 ;;		 -> dbuf(32), 
  7095 ;;  p               2   27[COMRAM] int 
  7096 ;; Auto vars:     Size  Location     Type
  7097 ;;  w               2   32[COMRAM] int 
  7098 ;;  i               2   30[COMRAM] int 
  7099 ;; Return value:  Size  Location     Type
  7100 ;;                  2   23[COMRAM] int 
  7101 ;; Registers used:
  7102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7103 ;; Tracked objects:
  7104 ;;		On entry : 0/1
  7105 ;;		On exit  : 0/0
  7106 ;;		Unchanged: 0/0
  7107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7108 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7109 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7110 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7111 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7112 ;;Total ram usage:       11 bytes
  7113 ;; Hardware stack levels used:    1
  7114 ;; Hardware stack levels required when called:    8
  7115 ;; This function calls:
  7116 ;;		_fputc
  7117 ;;		_fputs
  7118 ;;		_strlen
  7119 ;; This function is called by:
  7120 ;;		_dtoa
  7121 ;; This function uses a non-reentrant model
  7122 ;;
  7123                           
  7124                           	psect	text48
  7125  00302C                     __ptext48:
  7126                           	opt callstack 0
  7127  00302C                     _pad:
  7128                           	opt callstack 17
  7129                           
  7130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  7131                           
  7132                           ;incstack = 0
  7133  00302C  A056               	btfss	_flags^0,0,c
  7134  00302E  D00E               	goto	l4567
  7135                           
  7136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  7137  003030  0060  F068  F011   	movff	pad@buf,fputs@s
  7138  003036  0060  F06C  F012   	movff	pad@buf+1,fputs@s+1
  7139  00303C  0060  F060  F013   	movff	pad@fp,fputs@fp
  7140  003042  0060  F064  F014   	movff	pad@fp+1,fputs@fp+1
  7141  003048  EC72  F01C         	call	_fputs	;wreg free
  7142  00304C                     l4567:
  7143                           
  7144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  7145  00304C  BE1D               	btfsc	(pad@p+1)^0,7,c
  7146  00304E  D007               	goto	l4571
  7147  003050  0060  F070  F021   	movff	pad@p,pad@w
  7148  003056  0060  F074  F022   	movff	pad@p+1,pad@w+1
  7149  00305C  D004               	goto	l1299
  7150  00305E                     l4571:
  7151  00305E  0E00               	movlw	0
  7152  003060  6E22               	movwf	(pad@w+1)^0,c
  7153  003062  0E00               	movlw	0
  7154  003064  6E21               	movwf	pad@w^0,c
  7155  003066                     l1299:
  7156                           
  7157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  7158  003066  0E00               	movlw	0
  7159  003068  6E20               	movwf	(pad@i+1)^0,c
  7160  00306A  0E00               	movlw	0
  7161  00306C  6E1F               	movwf	pad@i^0,c
  7162                           
  7163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  7164  00306E  D00E               	goto	l4577
  7165  003070                     l4573:
  7166                           
  7167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  7168  003070  0E00               	movlw	0
  7169  003072  6E09               	movwf	(fputc@c+1)^0,c
  7170  003074  0E20               	movlw	32
  7171  003076  6E08               	movwf	fputc@c^0,c
  7172  003078  0060  F060  F00A   	movff	pad@fp,fputc@fp
  7173  00307E  0060  F064  F00B   	movff	pad@fp+1,fputc@fp+1
  7174  003084  EC6F  F018         	call	_fputc	;wreg free
  7175                           
  7176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
  7177  003088  4A1F               	infsnz	pad@i^0,f,c
  7178  00308A  2A20               	incf	(pad@i+1)^0,f,c
  7179  00308C                     l4577:
  7180                           
  7181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  7182  00308C  5021               	movf	pad@w^0,w,c
  7183  00308E  5C1F               	subwf	pad@i^0,w,c
  7184  003090  5020               	movf	(pad@i+1)^0,w,c
  7185  003092  0A80               	xorlw	128
  7186  003094  6E1E               	movwf	??_pad^0,c
  7187  003096  5022               	movf	(pad@w+1)^0,w,c
  7188  003098  0A80               	xorlw	128
  7189  00309A  581E               	subwfb	??_pad^0,w,c
  7190  00309C  A0D8               	btfss	status,0,c
  7191  00309E  D7E8               	goto	l4573
  7192                           
  7193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  7194  0030A0  B056               	btfsc	_flags^0,0,c
  7195  0030A2  D00E               	goto	l4581
  7196                           
  7197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  7198  0030A4  0060  F068  F011   	movff	pad@buf,fputs@s
  7199  0030AA  0060  F06C  F012   	movff	pad@buf+1,fputs@s+1
  7200  0030B0  0060  F060  F013   	movff	pad@fp,fputs@fp
  7201  0030B6  0060  F064  F014   	movff	pad@fp+1,fputs@fp+1
  7202  0030BC  EC72  F01C         	call	_fputs	;wreg free
  7203  0030C0                     l4581:
  7204                           
  7205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  7206  0030C0  0060  F068  F006   	movff	pad@buf,strlen@s
  7207  0030C6  0060  F06C  F007   	movff	pad@buf+1,strlen@s+1
  7208  0030CC  EC99  F01B         	call	_strlen	;wreg free
  7209  0030D0  5021               	movf	pad@w^0,w,c
  7210  0030D2  2406               	addwf	?_strlen^0,w,c
  7211  0030D4  6E18               	movwf	?_pad^0,c
  7212  0030D6  5022               	movf	(pad@w+1)^0,w,c
  7213  0030D8  2007               	addwfc	(?_strlen+1)^0,w,c
  7214  0030DA  6E19               	movwf	(?_pad+1)^0,c
  7215  0030DC  0012               	return		;funcret
  7216  0030DE                     __end_of_pad:
  7217                           	opt callstack 0
  7218                           
  7219 ;; *************** function _strlen *****************
  7220 ;; Defined at:
  7221 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
  7222 ;; Parameters:    Size  Location     Type
  7223 ;;  s               2    5[COMRAM] PTR const unsigned char 
  7224 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  7225 ;;		 -> STR_16(4), STR_14(4), STR_12(4), STR_10(4), 
  7226 ;;		 -> STR_8(4), STR_6(4), STR_4(5), main@buffer(24), 
  7227 ;;		 -> work_sw@buffer(128), 
  7228 ;; Auto vars:     Size  Location     Type
  7229 ;;  a               2    7[COMRAM] PTR const unsigned char 
  7230 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  7231 ;;		 -> STR_16(4), STR_14(4), STR_12(4), STR_10(4), 
  7232 ;;		 -> STR_8(4), STR_6(4), STR_4(5), main@buffer(24), 
  7233 ;;		 -> work_sw@buffer(128), 
  7234 ;; Return value:  Size  Location     Type
  7235 ;;                  2    5[COMRAM] unsigned int 
  7236 ;; Registers used:
  7237 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7238 ;; Tracked objects:
  7239 ;;		On entry : 0/1
  7240 ;;		On exit  : 0/0
  7241 ;;		Unchanged: 0/0
  7242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7243 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7244 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7246 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7247 ;;Total ram usage:        4 bytes
  7248 ;; Hardware stack levels used:    1
  7249 ;; Hardware stack levels required when called:    4
  7250 ;; This function calls:
  7251 ;;		Nothing
  7252 ;; This function is called by:
  7253 ;;		_eaDogM_WriteString
  7254 ;;		_pad
  7255 ;;		_stoa
  7256 ;; This function uses a non-reentrant model
  7257 ;;
  7258                           
  7259                           	psect	text49
  7260  003732                     __ptext49:
  7261                           	opt callstack 0
  7262  003732                     _strlen:
  7263                           	opt callstack 21
  7264                           
  7265                           ;incstack = 0
  7266  003732  0060  F018  F008   	movff	strlen@s,strlen@a
  7267  003738  0060  F01C  F009   	movff	strlen@s+1,strlen@a+1
  7268  00373E  D002               	goto	l4549
  7269  003740                     l4547:
  7270  003740  4A06               	infsnz	strlen@s^0,f,c
  7271  003742  2A07               	incf	(strlen@s+1)^0,f,c
  7272  003744                     l4549:
  7273  003744  0060  F01B  FFF6   	movff	strlen@s,tblptrl
  7274  00374A  0060  F01F  FFF7   	movff	strlen@s+1,tblptrh
  7275  003750  0E00               	movlw	low (__smallconst shr (0+16))
  7276  003752  6EF8               	movwf	tblptru,c
  7277  003754  0E1F               	movlw	(high __ramtop+-1)
  7278  003756  64F7               	cpfsgt	tblptrh,c
  7279  003758  D003               	bra	u3287
  7280  00375A  0008               	tblrd		*
  7281  00375C  50F5               	movf	tablat,w,c
  7282  00375E  D007               	bra	u3280
  7283  003760                     u3287:
  7284  003760  006F FFDB FFE1     	movff	tblptrl,fsr1l
  7285  003766  006F FFDF FFE2     	movff	tblptrh,fsr1h
  7286  00376C  50E7               	movf	indf1,w,c
  7287  00376E                     u3280:
  7288  00376E  0900               	iorlw	0
  7289  003770  A4D8               	btfss	status,2,c
  7290  003772  D7E6               	goto	l4547
  7291  003774  5008               	movf	strlen@a^0,w,c
  7292  003776  5C06               	subwf	strlen@s^0,w,c
  7293  003778  6E06               	movwf	?_strlen^0,c
  7294  00377A  5009               	movf	(strlen@a+1)^0,w,c
  7295  00377C  5807               	subwfb	(strlen@s+1)^0,w,c
  7296  00377E  6E07               	movwf	(?_strlen+1)^0,c
  7297  003780  0012               	return		;funcret
  7298  003782                     __end_of_strlen:
  7299                           	opt callstack 0
  7300                           
  7301 ;; *************** function _fputs *****************
  7302 ;; Defined at:
  7303 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
  7304 ;; Parameters:    Size  Location     Type
  7305 ;;  s               2   16[COMRAM] PTR const unsigned char 
  7306 ;;		 -> dbuf(32), 
  7307 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  7308 ;;		 -> sprintf@f(6), NULL(0), 
  7309 ;; Auto vars:     Size  Location     Type
  7310 ;;  i               2   21[COMRAM] int 
  7311 ;;  c               1   20[COMRAM] unsigned char 
  7312 ;; Return value:  Size  Location     Type
  7313 ;;                  2   16[COMRAM] int 
  7314 ;; Registers used:
  7315 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7316 ;; Tracked objects:
  7317 ;;		On entry : 0/1
  7318 ;;		On exit  : 0/0
  7319 ;;		Unchanged: 0/0
  7320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7321 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7322 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7324 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7325 ;;Total ram usage:        7 bytes
  7326 ;; Hardware stack levels used:    1
  7327 ;; Hardware stack levels required when called:    7
  7328 ;; This function calls:
  7329 ;;		_fputc
  7330 ;; This function is called by:
  7331 ;;		_pad
  7332 ;; This function uses a non-reentrant model
  7333 ;;
  7334                           
  7335                           	psect	text50
  7336  0038E4                     __ptext50:
  7337                           	opt callstack 0
  7338  0038E4                     _fputs:
  7339                           	opt callstack 17
  7340                           
  7341                           ;incstack = 0
  7342  0038E4  0E00               	movlw	0
  7343  0038E6  6E17               	movwf	(fputs@i+1)^0,c
  7344  0038E8  0E00               	movlw	0
  7345  0038EA  6E16               	movwf	fputs@i^0,c
  7346  0038EC  D00E               	goto	l4561
  7347  0038EE                     l4557:
  7348  0038EE  0060  F054  F008   	movff	fputs@c,fputc@c
  7349  0038F4  6A09               	clrf	(fputc@c+1)^0,c
  7350  0038F6  0060  F04C  F00A   	movff	fputs@fp,fputc@fp
  7351  0038FC  0060  F050  F00B   	movff	fputs@fp+1,fputc@fp+1
  7352  003902  EC6F  F018         	call	_fputc	;wreg free
  7353  003906  4A16               	infsnz	fputs@i^0,f,c
  7354  003908  2A17               	incf	(fputs@i+1)^0,f,c
  7355  00390A                     l4561:
  7356  00390A  5016               	movf	fputs@i^0,w,c
  7357  00390C  2411               	addwf	fputs@s^0,w,c
  7358  00390E  6ED9               	movwf	fsr2l,c
  7359  003910  5017               	movf	(fputs@i+1)^0,w,c
  7360  003912  2012               	addwfc	(fputs@s+1)^0,w,c
  7361  003914  6EDA               	movwf	fsr2h,c
  7362  003916  50DF               	movf	indf2,w,c
  7363  003918  6E15               	movwf	fputs@c^0,c
  7364  00391A  5015               	movf	fputs@c^0,w,c
  7365  00391C  B4D8               	btfsc	status,2,c
  7366  00391E  0012               	return	
  7367  003920  D7E6               	goto	l4557
  7368  003922                     __end_of_fputs:
  7369                           	opt callstack 0
  7370                           
  7371 ;; *************** function _fputc *****************
  7372 ;; Defined at:
  7373 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
  7374 ;; Parameters:    Size  Location     Type
  7375 ;;  c               2    7[COMRAM] int 
  7376 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  7377 ;;		 -> sprintf@f(6), NULL(0), 
  7378 ;; Auto vars:     Size  Location     Type
  7379 ;;		None
  7380 ;; Return value:  Size  Location     Type
  7381 ;;                  2    7[COMRAM] int 
  7382 ;; Registers used:
  7383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7384 ;; Tracked objects:
  7385 ;;		On entry : 0/0
  7386 ;;		On exit  : 0/0
  7387 ;;		Unchanged: 0/0
  7388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7389 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7391 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7392 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7393 ;;Total ram usage:        9 bytes
  7394 ;; Hardware stack levels used:    1
  7395 ;; Hardware stack levels required when called:    6
  7396 ;; This function calls:
  7397 ;;		_putch
  7398 ;; This function is called by:
  7399 ;;		_pad
  7400 ;;		_stoa
  7401 ;;		_vfpfcnvrt
  7402 ;;		_fputs
  7403 ;; This function uses a non-reentrant model
  7404 ;;
  7405                           
  7406                           	psect	text51
  7407  0030DE                     __ptext51:
  7408                           	opt callstack 0
  7409  0030DE                     _fputc:
  7410                           	opt callstack 19
  7411                           
  7412                           ;incstack = 0
  7413  0030DE  500A               	movf	fputc@fp^0,w,c
  7414  0030E0  100B               	iorwf	(fputc@fp+1)^0,w,c
  7415  0030E2  B4D8               	btfsc	status,2,c
  7416  0030E4  D004               	goto	u3250
  7417  0030E6  500A               	movf	fputc@fp^0,w,c
  7418  0030E8  100B               	iorwf	(fputc@fp+1)^0,w,c
  7419  0030EA  A4D8               	btfss	status,2,c
  7420  0030EC  D004               	goto	l4537
  7421  0030EE                     u3250:
  7422  0030EE  5008               	movf	fputc@c^0,w,c
  7423  0030F0  ECD2  F01F         	call	_putch
  7424  0030F4  0012               	return	
  7425  0030F6                     l4537:
  7426  0030F6  EE20 F004          	lfsr	2,4
  7427  0030FA  500A               	movf	fputc@fp^0,w,c
  7428  0030FC  26D9               	addwf	fsr2l,f,c
  7429  0030FE  500B               	movf	(fputc@fp+1)^0,w,c
  7430  003100  22DA               	addwfc	fsr2h,f,c
  7431  003102  50DE               	movf	postinc2,w,c
  7432  003104  10DE               	iorwf	postinc2,w,c
  7433  003106  B4D8               	btfsc	status,2,c
  7434  003108  D016               	goto	u3270
  7435  00310A  EE20 F004          	lfsr	2,4
  7436  00310E  500A               	movf	fputc@fp^0,w,c
  7437  003110  26D9               	addwf	fsr2l,f,c
  7438  003112  500B               	movf	(fputc@fp+1)^0,w,c
  7439  003114  22DA               	addwfc	fsr2h,f,c
  7440  003116  EE10 F002          	lfsr	1,2
  7441  00311A  500A               	movf	fputc@fp^0,w,c
  7442  00311C  26E1               	addwf	fsr1l,f,c
  7443  00311E  500B               	movf	(fputc@fp+1)^0,w,c
  7444  003120  22E2               	addwfc	fsr1h,f,c
  7445  003122  50DE               	movf	postinc2,w,c
  7446  003124  5CE6               	subwf	postinc1,w,c
  7447  003126  50E6               	movf	postinc1,w,c
  7448  003128  0A80               	xorlw	128
  7449  00312A  6E10               	movwf	(??_fputc+4)^0,c
  7450  00312C  50DE               	movf	postinc2,w,c
  7451  00312E  0A80               	xorlw	128
  7452  003130  5810               	subwfb	(??_fputc+4)^0,w,c
  7453  003132  B0D8               	btfsc	status,0,c
  7454  003134  0012               	return	
  7455  003136                     u3270:
  7456  003136  EE20 F002          	lfsr	2,2
  7457  00313A  500A               	movf	fputc@fp^0,w,c
  7458  00313C  26D9               	addwf	fsr2l,f,c
  7459  00313E  500B               	movf	(fputc@fp+1)^0,w,c
  7460  003140  22DA               	addwfc	fsr2h,f,c
  7461  003142  006F FF78  F00C    	movff	postinc2,??_fputc
  7462  003148  006F FF74  F00D    	movff	postdec2,??_fputc+1
  7463  00314E  0060  F02B  FFD9   	movff	fputc@fp,fsr2l
  7464  003154  0060  F02F  FFDA   	movff	fputc@fp+1,fsr2h
  7465  00315A  006F FF78  F00E    	movff	postinc2,??_fputc+2
  7466  003160  006F FF74  F00F    	movff	postdec2,??_fputc+3
  7467  003166  500C               	movf	??_fputc^0,w,c
  7468  003168  240E               	addwf	(??_fputc+2)^0,w,c
  7469  00316A  6ED9               	movwf	fsr2l,c
  7470  00316C  500D               	movf	(??_fputc+1)^0,w,c
  7471  00316E  200F               	addwfc	(??_fputc+3)^0,w,c
  7472  003170  6EDA               	movwf	fsr2h,c
  7473  003172  0060  F023  FFDF   	movff	fputc@c,indf2
  7474  003178  EE20 F002          	lfsr	2,2
  7475  00317C  500A               	movf	fputc@fp^0,w,c
  7476  00317E  26D9               	addwf	fsr2l,f,c
  7477  003180  500B               	movf	(fputc@fp+1)^0,w,c
  7478  003182  22DA               	addwfc	fsr2h,f,c
  7479  003184  2ADE               	incf	postinc2,f,c
  7480  003186  0E00               	movlw	0
  7481  003188  22DD               	addwfc	postdec2,f,c
  7482  00318A  0012               	return		;funcret
  7483  00318C                     __end_of_fputc:
  7484                           	opt callstack 0
  7485                           
  7486 ;; *************** function _putch *****************
  7487 ;; Defined at:
  7488 ;;		line 221 in file "mcc_generated_files/uart2.c"
  7489 ;; Parameters:    Size  Location     Type
  7490 ;;  txData          1    wreg     unsigned char 
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;  txData          1    6[COMRAM] unsigned char 
  7493 ;; Return value:  Size  Location     Type
  7494 ;;                  1    wreg      void 
  7495 ;; Registers used:
  7496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7497 ;; Tracked objects:
  7498 ;;		On entry : 0/0
  7499 ;;		On exit  : 3F/39
  7500 ;;		Unchanged: 0/0
  7501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7503 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7505 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7506 ;;Total ram usage:        1 bytes
  7507 ;; Hardware stack levels used:    1
  7508 ;; Hardware stack levels required when called:    5
  7509 ;; This function calls:
  7510 ;;		_UART2_Write
  7511 ;; This function is called by:
  7512 ;;		_fputc
  7513 ;; This function uses a non-reentrant model
  7514 ;;
  7515                           
  7516                           	psect	text52
  7517  003FA4                     __ptext52:
  7518                           	opt callstack 0
  7519  003FA4                     _putch:
  7520                           	opt callstack 19
  7521                           
  7522                           ;incstack = 0
  7523                           ;putch@txData stored from wreg
  7524  003FA4  6E07               	movwf	putch@txData^0,c
  7525                           
  7526                           ;mcc_generated_files/uart2.c: 221: void putch(char txData);mcc_generated_files/uart2.c: 
      +                          222: {;mcc_generated_files/uart2.c: 223:     UART2_Write(txData);
  7527  003FA6  5007               	movf	putch@txData^0,w,c
  7528  003FA8  EC51  F01C         	call	_UART2_Write
  7529                           
  7530                           ; BSR set to: 57
  7531  003FAC  0012               	return		;funcret
  7532  003FAE                     __end_of_putch:
  7533                           	opt callstack 0
  7534                           
  7535 ;; *************** function _UART2_Write *****************
  7536 ;; Defined at:
  7537 ;;		line 193 in file "mcc_generated_files/uart2.c"
  7538 ;; Parameters:    Size  Location     Type
  7539 ;;  txData          1    wreg     unsigned char 
  7540 ;; Auto vars:     Size  Location     Type
  7541 ;;  txData          1    5[COMRAM] unsigned char 
  7542 ;; Return value:  Size  Location     Type
  7543 ;;                  1    wreg      void 
  7544 ;; Registers used:
  7545 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7546 ;; Tracked objects:
  7547 ;;		On entry : 0/0
  7548 ;;		On exit  : 3F/39
  7549 ;;		Unchanged: 0/0
  7550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7552 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7554 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7555 ;;Total ram usage:        1 bytes
  7556 ;; Hardware stack levels used:    1
  7557 ;; Hardware stack levels required when called:    4
  7558 ;; This function calls:
  7559 ;;		Nothing
  7560 ;; This function is called by:
  7561 ;;		_putch
  7562 ;;		_Digital232_RW
  7563 ;; This function uses a non-reentrant model
  7564 ;;
  7565                           
  7566                           	psect	text53
  7567  0038A2                     __ptext53:
  7568                           	opt callstack 0
  7569  0038A2                     _UART2_Write:
  7570                           	opt callstack 19
  7571                           
  7572                           ; BSR set to: 57
  7573                           ;incstack = 0
  7574                           ;UART2_Write@txData stored from wreg
  7575  0038A2  6E06               	movwf	UART2_Write@txData^0,c
  7576  0038A4                     
  7577                           ;mcc_generated_files/uart2.c: 195:     while(0 == uart2TxBufferRemaining)
  7578                           
  7579                           ;mcc_generated_files/uart2.c: 193: void UART2_Write(uint8_t txData);mcc_generated_files/
      +                          uart2.c: 194: {;mcc_generated_files/uart2.c: 195:     while(0 == uart2TxBufferRemaining)
  7580  0038A4  0100               	movlb	0	; () banked
  7581  0038A6  5196               	movf	_uart2TxBufferRemaining& (0+255),w,b	;volatile
  7582  0038A8  B4D8               	btfsc	status,2,c
  7583  0038AA  D7FC               	goto	l4511
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;mcc_generated_files/uart2.c: 199:     if(0 == PIE6bits.U2TXIE)
  7587  0038AC  0139               	movlb	57	; () banked
  7588  0038AE  B796               	btfsc	150,3,b	;volatile
  7589  0038B0  D004               	goto	l492
  7590                           
  7591                           ; BSR set to: 57
  7592                           ;mcc_generated_files/uart2.c: 200:     {;mcc_generated_files/uart2.c: 201:         U2TXB
      +                           = txData;
  7593  0038B2  0060  F01B  FDD2   	movff	UART2_Write@txData,15826	;volatile
  7594                           
  7595                           ;mcc_generated_files/uart2.c: 202:     }
  7596  0038B8  D012               	goto	l4527
  7597  0038BA                     l492:
  7598                           
  7599                           ; BSR set to: 57
  7600                           ;mcc_generated_files/uart2.c: 204:     {;mcc_generated_files/uart2.c: 205:         PIE6b
      +                          its.U2TXIE = 0;
  7601  0038BA  9796               	bcf	150,3,b	;volatile
  7602                           
  7603                           ; BSR set to: 57
  7604                           ;mcc_generated_files/uart2.c: 206:         uart2TxBuffer[uart2TxHead++] = txData;
  7605  0038BC  0E1E               	movlw	low _uart2TxBuffer
  7606  0038BE  0100               	movlb	0	; () banked
  7607  0038C0  2598               	addwf	_uart2TxHead& (0+255),w,b	;volatile
  7608  0038C2  6ED9               	movwf	fsr2l,c
  7609  0038C4  6ADA               	clrf	fsr2h,c
  7610  0038C6  0E01               	movlw	high _uart2TxBuffer
  7611  0038C8  22DA               	addwfc	fsr2h,f,c
  7612  0038CA  0060  F01B  FFDF   	movff	UART2_Write@txData,indf2
  7613                           
  7614                           ; BSR set to: 0
  7615  0038D0  2B98               	incf	_uart2TxHead& (0+255),f,b	;volatile
  7616                           
  7617                           ; BSR set to: 0
  7618                           ;mcc_generated_files/uart2.c: 207:         if(sizeof(uart2TxBuffer) <= uart2TxHead)
  7619  0038D2  0E07               	movlw	7
  7620  0038D4  6598               	cpfsgt	_uart2TxHead& (0+255),b
  7621  0038D6  D002               	goto	l4525
  7622                           
  7623                           ; BSR set to: 0
  7624                           ;mcc_generated_files/uart2.c: 208:         {;mcc_generated_files/uart2.c: 209:          
      +                             uart2TxHead = 0;
  7625  0038D8  0E00               	movlw	0
  7626  0038DA  6F98               	movwf	_uart2TxHead& (0+255),b	;volatile
  7627  0038DC                     l4525:
  7628                           
  7629                           ; BSR set to: 0
  7630                           ;mcc_generated_files/uart2.c: 211:         uart2TxBufferRemaining--;
  7631  0038DC  0796               	decf	_uart2TxBufferRemaining& (0+255),f,b	;volatile
  7632  0038DE                     l4527:
  7633                           
  7634                           ;mcc_generated_files/uart2.c: 213:     PIE6bits.U2TXIE = 1;
  7635  0038DE  0139               	movlb	57	; () banked
  7636  0038E0  8796               	bsf	150,3,b	;volatile
  7637                           
  7638                           ; BSR set to: 57
  7639  0038E2  0012               	return		;funcret
  7640  0038E4                     __end_of_UART2_Write:
  7641                           	opt callstack 0
  7642                           
  7643 ;; *************** function _abs *****************
  7644 ;; Defined at:
  7645 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
  7646 ;; Parameters:    Size  Location     Type
  7647 ;;  a               2   23[COMRAM] int 
  7648 ;; Auto vars:     Size  Location     Type
  7649 ;;		None
  7650 ;; Return value:  Size  Location     Type
  7651 ;;                  2   23[COMRAM] int 
  7652 ;; Registers used:
  7653 ;;		wreg, status,2, status,0
  7654 ;; Tracked objects:
  7655 ;;		On entry : 0/1
  7656 ;;		On exit  : 0/0
  7657 ;;		Unchanged: 0/0
  7658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7659 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7661 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7662 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7663 ;;Total ram usage:        4 bytes
  7664 ;; Hardware stack levels used:    1
  7665 ;; Hardware stack levels required when called:    4
  7666 ;; This function calls:
  7667 ;;		Nothing
  7668 ;; This function is called by:
  7669 ;;		_dtoa
  7670 ;; This function uses a non-reentrant model
  7671 ;;
  7672                           
  7673                           	psect	text54
  7674  003922                     __ptext54:
  7675                           	opt callstack 0
  7676  003922                     _abs:
  7677                           	opt callstack 21
  7678                           
  7679                           ; BSR set to: 57
  7680                           ;incstack = 0
  7681  003922  BE19               	btfsc	(abs@a+1)^0,7,c
  7682  003924  D005               	goto	u3350
  7683  003926  5019               	movf	(abs@a+1)^0,w,c
  7684  003928  E114               	bnz	l2046
  7685  00392A  0418               	decf	abs@a^0,w,c
  7686  00392C  B0D8               	btfsc	status,0,c
  7687  00392E  D011               	goto	l2046
  7688  003930                     u3350:
  7689  003930  0060  F060  F01A   	movff	abs@a,??_abs
  7690  003936  0060  F064  F01B   	movff	abs@a+1,??_abs+1
  7691  00393C  1E1A               	comf	??_abs^0,f,c
  7692  00393E  1E1B               	comf	(??_abs+1)^0,f,c
  7693  003940  4A1A               	infsnz	??_abs^0,f,c
  7694  003942  2A1B               	incf	(??_abs+1)^0,f,c
  7695  003944  0060  F068  F018   	movff	??_abs,?_abs
  7696  00394A  0060  F06C  F019   	movff	??_abs+1,?_abs+1
  7697  003950  0012               	return	
  7698  003952                     l2046:
  7699  003952  0060  F060  F018   	movff	abs@a,?_abs
  7700  003958  0060  F064  F019   	movff	abs@a+1,?_abs+1
  7701  00395E  0012               	return		;funcret
  7702  003960                     __end_of_abs:
  7703                           	opt callstack 0
  7704                           
  7705 ;; *************** function ___aomod *****************
  7706 ;; Defined at:
  7707 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
  7708 ;; Parameters:    Size  Location     Type
  7709 ;;  dividend        8    5[COMRAM] long long 
  7710 ;;  divisor         8   13[COMRAM] long long 
  7711 ;; Auto vars:     Size  Location     Type
  7712 ;;  sign            1   22[COMRAM] unsigned char 
  7713 ;;  counter         1   21[COMRAM] unsigned char 
  7714 ;; Return value:  Size  Location     Type
  7715 ;;                  8    5[COMRAM] long long 
  7716 ;; Registers used:
  7717 ;;		wreg, status,2, status,0
  7718 ;; Tracked objects:
  7719 ;;		On entry : 0/1
  7720 ;;		On exit  : 0/0
  7721 ;;		Unchanged: 0/0
  7722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7723 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7724 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7726 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7727 ;;Total ram usage:       18 bytes
  7728 ;; Hardware stack levels used:    1
  7729 ;; Hardware stack levels required when called:    4
  7730 ;; This function calls:
  7731 ;;		Nothing
  7732 ;; This function is called by:
  7733 ;;		_dtoa
  7734 ;; This function uses a non-reentrant model
  7735 ;;
  7736                           
  7737                           	psect	text55
  7738  002C6E                     __ptext55:
  7739                           	opt callstack 0
  7740  002C6E                     ___aomod:
  7741                           	opt callstack 21
  7742                           
  7743                           ;incstack = 0
  7744  002C6E  0E00               	movlw	0
  7745  002C70  6E17               	movwf	___aomod@sign^0,c
  7746  002C72  AE0D               	btfss	(___aomod@dividend+7)^0,7,c
  7747  002C74  D012               	goto	l4641
  7748  002C76  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  7749  002C78  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  7750  002C7A  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  7751  002C7C  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  7752  002C7E  1E09               	comf	(___aomod@dividend+3)^0,f,c
  7753  002C80  1E08               	comf	(___aomod@dividend+2)^0,f,c
  7754  002C82  1E07               	comf	(___aomod@dividend+1)^0,f,c
  7755  002C84  6C06               	negf	___aomod@dividend^0,c
  7756  002C86  0E00               	movlw	0
  7757  002C88  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  7758  002C8A  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  7759  002C8C  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  7760  002C8E  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  7761  002C90  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  7762  002C92  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  7763  002C94  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  7764  002C96  0E01               	movlw	1
  7765  002C98  6E17               	movwf	___aomod@sign^0,c
  7766  002C9A                     l4641:
  7767  002C9A  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  7768  002C9C  D010               	goto	l4645
  7769  002C9E  1E15               	comf	(___aomod@divisor+7)^0,f,c
  7770  002CA0  1E14               	comf	(___aomod@divisor+6)^0,f,c
  7771  002CA2  1E13               	comf	(___aomod@divisor+5)^0,f,c
  7772  002CA4  1E12               	comf	(___aomod@divisor+4)^0,f,c
  7773  002CA6  1E11               	comf	(___aomod@divisor+3)^0,f,c
  7774  002CA8  1E10               	comf	(___aomod@divisor+2)^0,f,c
  7775  002CAA  1E0F               	comf	(___aomod@divisor+1)^0,f,c
  7776  002CAC  6C0E               	negf	___aomod@divisor^0,c
  7777  002CAE  0E00               	movlw	0
  7778  002CB0  220F               	addwfc	(___aomod@divisor+1)^0,f,c
  7779  002CB2  2210               	addwfc	(___aomod@divisor+2)^0,f,c
  7780  002CB4  2211               	addwfc	(___aomod@divisor+3)^0,f,c
  7781  002CB6  2212               	addwfc	(___aomod@divisor+4)^0,f,c
  7782  002CB8  2213               	addwfc	(___aomod@divisor+5)^0,f,c
  7783  002CBA  2214               	addwfc	(___aomod@divisor+6)^0,f,c
  7784  002CBC  2215               	addwfc	(___aomod@divisor+7)^0,f,c
  7785  002CBE                     l4645:
  7786  002CBE  500E               	movf	___aomod@divisor^0,w,c
  7787  002CC0  100F               	iorwf	(___aomod@divisor+1)^0,w,c
  7788  002CC2  1010               	iorwf	(___aomod@divisor+2)^0,w,c
  7789  002CC4  1011               	iorwf	(___aomod@divisor+3)^0,w,c
  7790  002CC6  1012               	iorwf	(___aomod@divisor+4)^0,w,c
  7791  002CC8  1013               	iorwf	(___aomod@divisor+5)^0,w,c
  7792  002CCA  1014               	iorwf	(___aomod@divisor+6)^0,w,c
  7793  002CCC  1015               	iorwf	(___aomod@divisor+7)^0,w,c
  7794  002CCE  B4D8               	btfsc	status,2,c
  7795  002CD0  D03C               	goto	l4661
  7796  002CD2  0E01               	movlw	1
  7797  002CD4  6E16               	movwf	___aomod@counter^0,c
  7798  002CD6  D00A               	goto	l4651
  7799  002CD8                     l4649:
  7800  002CD8  90D8               	bcf	status,0,c
  7801  002CDA  360E               	rlcf	___aomod@divisor^0,f,c
  7802  002CDC  360F               	rlcf	(___aomod@divisor+1)^0,f,c
  7803  002CDE  3610               	rlcf	(___aomod@divisor+2)^0,f,c
  7804  002CE0  3611               	rlcf	(___aomod@divisor+3)^0,f,c
  7805  002CE2  3612               	rlcf	(___aomod@divisor+4)^0,f,c
  7806  002CE4  3613               	rlcf	(___aomod@divisor+5)^0,f,c
  7807  002CE6  3614               	rlcf	(___aomod@divisor+6)^0,f,c
  7808  002CE8  3615               	rlcf	(___aomod@divisor+7)^0,f,c
  7809  002CEA  2A16               	incf	___aomod@counter^0,f,c
  7810  002CEC                     l4651:
  7811  002CEC  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  7812  002CEE  D7F4               	goto	l4649
  7813  002CF0                     u3460:
  7814  002CF0  500E               	movf	___aomod@divisor^0,w,c
  7815  002CF2  5C06               	subwf	___aomod@dividend^0,w,c
  7816  002CF4  500F               	movf	(___aomod@divisor+1)^0,w,c
  7817  002CF6  5807               	subwfb	(___aomod@dividend+1)^0,w,c
  7818  002CF8  5010               	movf	(___aomod@divisor+2)^0,w,c
  7819  002CFA  5808               	subwfb	(___aomod@dividend+2)^0,w,c
  7820  002CFC  5011               	movf	(___aomod@divisor+3)^0,w,c
  7821  002CFE  5809               	subwfb	(___aomod@dividend+3)^0,w,c
  7822  002D00  5012               	movf	(___aomod@divisor+4)^0,w,c
  7823  002D02  580A               	subwfb	(___aomod@dividend+4)^0,w,c
  7824  002D04  5013               	movf	(___aomod@divisor+5)^0,w,c
  7825  002D06  580B               	subwfb	(___aomod@dividend+5)^0,w,c
  7826  002D08  5014               	movf	(___aomod@divisor+6)^0,w,c
  7827  002D0A  580C               	subwfb	(___aomod@dividend+6)^0,w,c
  7828  002D0C  5015               	movf	(___aomod@divisor+7)^0,w,c
  7829  002D0E  580D               	subwfb	(___aomod@dividend+7)^0,w,c
  7830  002D10  A0D8               	btfss	status,0,c
  7831  002D12  D010               	goto	l4657
  7832  002D14  500E               	movf	___aomod@divisor^0,w,c
  7833  002D16  5E06               	subwf	___aomod@dividend^0,f,c
  7834  002D18  500F               	movf	(___aomod@divisor+1)^0,w,c
  7835  002D1A  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
  7836  002D1C  5010               	movf	(___aomod@divisor+2)^0,w,c
  7837  002D1E  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
  7838  002D20  5011               	movf	(___aomod@divisor+3)^0,w,c
  7839  002D22  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
  7840  002D24  5012               	movf	(___aomod@divisor+4)^0,w,c
  7841  002D26  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
  7842  002D28  5013               	movf	(___aomod@divisor+5)^0,w,c
  7843  002D2A  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
  7844  002D2C  5014               	movf	(___aomod@divisor+6)^0,w,c
  7845  002D2E  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
  7846  002D30  5015               	movf	(___aomod@divisor+7)^0,w,c
  7847  002D32  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
  7848  002D34                     l4657:
  7849  002D34  90D8               	bcf	status,0,c
  7850  002D36  3215               	rrcf	(___aomod@divisor+7)^0,f,c
  7851  002D38  3214               	rrcf	(___aomod@divisor+6)^0,f,c
  7852  002D3A  3213               	rrcf	(___aomod@divisor+5)^0,f,c
  7853  002D3C  3212               	rrcf	(___aomod@divisor+4)^0,f,c
  7854  002D3E  3211               	rrcf	(___aomod@divisor+3)^0,f,c
  7855  002D40  3210               	rrcf	(___aomod@divisor+2)^0,f,c
  7856  002D42  320F               	rrcf	(___aomod@divisor+1)^0,f,c
  7857  002D44  320E               	rrcf	___aomod@divisor^0,f,c
  7858  002D46  2E16               	decfsz	___aomod@counter^0,f,c
  7859  002D48  D7D3               	goto	u3460
  7860  002D4A                     l4661:
  7861  002D4A  5017               	movf	___aomod@sign^0,w,c
  7862  002D4C  B4D8               	btfsc	status,2,c
  7863  002D4E  D010               	goto	l4665
  7864  002D50  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  7865  002D52  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  7866  002D54  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  7867  002D56  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  7868  002D58  1E09               	comf	(___aomod@dividend+3)^0,f,c
  7869  002D5A  1E08               	comf	(___aomod@dividend+2)^0,f,c
  7870  002D5C  1E07               	comf	(___aomod@dividend+1)^0,f,c
  7871  002D5E  6C06               	negf	___aomod@dividend^0,c
  7872  002D60  0E00               	movlw	0
  7873  002D62  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  7874  002D64  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  7875  002D66  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  7876  002D68  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  7877  002D6A  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  7878  002D6C  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  7879  002D6E  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  7880  002D70                     l4665:
  7881  002D70  0060  F018  F006   	movff	___aomod@dividend,?___aomod
  7882  002D76  0060  F01C  F007   	movff	___aomod@dividend+1,?___aomod+1
  7883  002D7C  0060  F020  F008   	movff	___aomod@dividend+2,?___aomod+2
  7884  002D82  0060  F024  F009   	movff	___aomod@dividend+3,?___aomod+3
  7885  002D88  0060  F028  F00A   	movff	___aomod@dividend+4,?___aomod+4
  7886  002D8E  0060  F02C  F00B   	movff	___aomod@dividend+5,?___aomod+5
  7887  002D94  0060  F030  F00C   	movff	___aomod@dividend+6,?___aomod+6
  7888  002D9A  0060  F034  F00D   	movff	___aomod@dividend+7,?___aomod+7
  7889  002DA0  0012               	return		;funcret
  7890  002DA2                     __end_of___aomod:
  7891                           	opt callstack 0
  7892                           
  7893 ;; *************** function ___aodiv *****************
  7894 ;; Defined at:
  7895 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
  7896 ;; Parameters:    Size  Location     Type
  7897 ;;  dividend        8    5[COMRAM] long long 
  7898 ;;  divisor         8   13[COMRAM] long long 
  7899 ;; Auto vars:     Size  Location     Type
  7900 ;;  quotient        8   23[COMRAM] long long 
  7901 ;;  sign            1   22[COMRAM] unsigned char 
  7902 ;;  counter         1   21[COMRAM] unsigned char 
  7903 ;; Return value:  Size  Location     Type
  7904 ;;                  8    5[COMRAM] long long 
  7905 ;; Registers used:
  7906 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7907 ;; Tracked objects:
  7908 ;;		On entry : 0/1
  7909 ;;		On exit  : 0/0
  7910 ;;		Unchanged: 0/0
  7911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7912 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7913 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7915 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7916 ;;Total ram usage:       26 bytes
  7917 ;; Hardware stack levels used:    1
  7918 ;; Hardware stack levels required when called:    4
  7919 ;; This function calls:
  7920 ;;		Nothing
  7921 ;; This function is called by:
  7922 ;;		_dtoa
  7923 ;; This function uses a non-reentrant model
  7924 ;;
  7925                           
  7926                           	psect	text56
  7927  002B16                     __ptext56:
  7928                           	opt callstack 0
  7929  002B16                     ___aodiv:
  7930                           	opt callstack 21
  7931                           
  7932                           ;incstack = 0
  7933  002B16  0E00               	movlw	0
  7934  002B18  6E17               	movwf	___aodiv@sign^0,c
  7935  002B1A  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  7936  002B1C  D012               	goto	l4597
  7937  002B1E  1E15               	comf	(___aodiv@divisor+7)^0,f,c
  7938  002B20  1E14               	comf	(___aodiv@divisor+6)^0,f,c
  7939  002B22  1E13               	comf	(___aodiv@divisor+5)^0,f,c
  7940  002B24  1E12               	comf	(___aodiv@divisor+4)^0,f,c
  7941  002B26  1E11               	comf	(___aodiv@divisor+3)^0,f,c
  7942  002B28  1E10               	comf	(___aodiv@divisor+2)^0,f,c
  7943  002B2A  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
  7944  002B2C  6C0E               	negf	___aodiv@divisor^0,c
  7945  002B2E  0E00               	movlw	0
  7946  002B30  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
  7947  002B32  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
  7948  002B34  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
  7949  002B36  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
  7950  002B38  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
  7951  002B3A  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
  7952  002B3C  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
  7953  002B3E  0E01               	movlw	1
  7954  002B40  6E17               	movwf	___aodiv@sign^0,c
  7955  002B42                     l4597:
  7956  002B42  AE0D               	btfss	(___aodiv@dividend+7)^0,7,c
  7957  002B44  D012               	goto	l4603
  7958  002B46  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
  7959  002B48  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
  7960  002B4A  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
  7961  002B4C  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
  7962  002B4E  1E09               	comf	(___aodiv@dividend+3)^0,f,c
  7963  002B50  1E08               	comf	(___aodiv@dividend+2)^0,f,c
  7964  002B52  1E07               	comf	(___aodiv@dividend+1)^0,f,c
  7965  002B54  6C06               	negf	___aodiv@dividend^0,c
  7966  002B56  0E00               	movlw	0
  7967  002B58  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
  7968  002B5A  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
  7969  002B5C  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
  7970  002B5E  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
  7971  002B60  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
  7972  002B62  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
  7973  002B64  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
  7974  002B66  0E01               	movlw	1
  7975  002B68  1A17               	xorwf	___aodiv@sign^0,f,c
  7976  002B6A                     l4603:
  7977  002B6A  EE20  F018         	lfsr	2,___aodiv@quotient
  7978  002B6E  0E07               	movlw	7
  7979  002B70                     u3381:
  7980  002B70  6ADE               	clrf	postinc2,c
  7981  002B72  06E8               	decf	wreg,f,c
  7982  002B74  E2FD               	bc	u3381
  7983  002B76  500E               	movf	___aodiv@divisor^0,w,c
  7984  002B78  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
  7985  002B7A  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
  7986  002B7C  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
  7987  002B7E  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
  7988  002B80  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
  7989  002B82  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
  7990  002B84  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
  7991  002B86  B4D8               	btfsc	status,2,c
  7992  002B88  D046               	goto	l4625
  7993  002B8A  0E01               	movlw	1
  7994  002B8C  6E16               	movwf	___aodiv@counter^0,c
  7995  002B8E  D00A               	goto	l4611
  7996  002B90                     l4609:
  7997  002B90  90D8               	bcf	status,0,c
  7998  002B92  360E               	rlcf	___aodiv@divisor^0,f,c
  7999  002B94  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
  8000  002B96  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
  8001  002B98  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
  8002  002B9A  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
  8003  002B9C  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
  8004  002B9E  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
  8005  002BA0  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
  8006  002BA2  2A16               	incf	___aodiv@counter^0,f,c
  8007  002BA4                     l4611:
  8008  002BA4  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  8009  002BA6  D7F4               	goto	l4609
  8010  002BA8                     u3400:
  8011  002BA8  90D8               	bcf	status,0,c
  8012  002BAA  3618               	rlcf	___aodiv@quotient^0,f,c
  8013  002BAC  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
  8014  002BAE  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
  8015  002BB0  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
  8016  002BB2  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
  8017  002BB4  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
  8018  002BB6  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
  8019  002BB8  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
  8020  002BBA  500E               	movf	___aodiv@divisor^0,w,c
  8021  002BBC  5C06               	subwf	___aodiv@dividend^0,w,c
  8022  002BBE  500F               	movf	(___aodiv@divisor+1)^0,w,c
  8023  002BC0  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
  8024  002BC2  5010               	movf	(___aodiv@divisor+2)^0,w,c
  8025  002BC4  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
  8026  002BC6  5011               	movf	(___aodiv@divisor+3)^0,w,c
  8027  002BC8  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
  8028  002BCA  5012               	movf	(___aodiv@divisor+4)^0,w,c
  8029  002BCC  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
  8030  002BCE  5013               	movf	(___aodiv@divisor+5)^0,w,c
  8031  002BD0  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
  8032  002BD2  5014               	movf	(___aodiv@divisor+6)^0,w,c
  8033  002BD4  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
  8034  002BD6  5015               	movf	(___aodiv@divisor+7)^0,w,c
  8035  002BD8  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
  8036  002BDA  A0D8               	btfss	status,0,c
  8037  002BDC  D011               	goto	l4621
  8038  002BDE  500E               	movf	___aodiv@divisor^0,w,c
  8039  002BE0  5E06               	subwf	___aodiv@dividend^0,f,c
  8040  002BE2  500F               	movf	(___aodiv@divisor+1)^0,w,c
  8041  002BE4  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
  8042  002BE6  5010               	movf	(___aodiv@divisor+2)^0,w,c
  8043  002BE8  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
  8044  002BEA  5011               	movf	(___aodiv@divisor+3)^0,w,c
  8045  002BEC  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
  8046  002BEE  5012               	movf	(___aodiv@divisor+4)^0,w,c
  8047  002BF0  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
  8048  002BF2  5013               	movf	(___aodiv@divisor+5)^0,w,c
  8049  002BF4  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
  8050  002BF6  5014               	movf	(___aodiv@divisor+6)^0,w,c
  8051  002BF8  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
  8052  002BFA  5015               	movf	(___aodiv@divisor+7)^0,w,c
  8053  002BFC  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
  8054  002BFE  8018               	bsf	___aodiv@quotient^0,0,c
  8055  002C00                     l4621:
  8056  002C00  90D8               	bcf	status,0,c
  8057  002C02  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
  8058  002C04  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
  8059  002C06  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
  8060  002C08  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
  8061  002C0A  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
  8062  002C0C  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
  8063  002C0E  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
  8064  002C10  320E               	rrcf	___aodiv@divisor^0,f,c
  8065  002C12  2E16               	decfsz	___aodiv@counter^0,f,c
  8066  002C14  D7C9               	goto	u3400
  8067  002C16                     l4625:
  8068  002C16  5017               	movf	___aodiv@sign^0,w,c
  8069  002C18  B4D8               	btfsc	status,2,c
  8070  002C1A  D010               	goto	l4629
  8071  002C1C  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
  8072  002C1E  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
  8073  002C20  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
  8074  002C22  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
  8075  002C24  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
  8076  002C26  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
  8077  002C28  1E19               	comf	(___aodiv@quotient+1)^0,f,c
  8078  002C2A  6C18               	negf	___aodiv@quotient^0,c
  8079  002C2C  0E00               	movlw	0
  8080  002C2E  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
  8081  002C30  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
  8082  002C32  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
  8083  002C34  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
  8084  002C36  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
  8085  002C38  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
  8086  002C3A  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
  8087  002C3C                     l4629:
  8088  002C3C  0060  F060  F006   	movff	___aodiv@quotient,?___aodiv
  8089  002C42  0060  F064  F007   	movff	___aodiv@quotient+1,?___aodiv+1
  8090  002C48  0060  F068  F008   	movff	___aodiv@quotient+2,?___aodiv+2
  8091  002C4E  0060  F06C  F009   	movff	___aodiv@quotient+3,?___aodiv+3
  8092  002C54  0060  F070  F00A   	movff	___aodiv@quotient+4,?___aodiv+4
  8093  002C5A  0060  F074  F00B   	movff	___aodiv@quotient+5,?___aodiv+5
  8094  002C60  0060  F078  F00C   	movff	___aodiv@quotient+6,?___aodiv+6
  8095  002C66  0060  F07C  F00D   	movff	___aodiv@quotient+7,?___aodiv+7
  8096  002C6C  0012               	return		;funcret
  8097  002C6E                     __end_of___aodiv:
  8098                           	opt callstack 0
  8099                           
  8100 ;; *************** function _UART2_is_rx_ready *****************
  8101 ;; Defined at:
  8102 ;;		line 152 in file "mcc_generated_files/uart2.c"
  8103 ;; Parameters:    Size  Location     Type
  8104 ;;		None
  8105 ;; Auto vars:     Size  Location     Type
  8106 ;;		None
  8107 ;; Return value:  Size  Location     Type
  8108 ;;                  1    wreg      unsigned char 
  8109 ;; Registers used:
  8110 ;;		wreg, status,2
  8111 ;; Tracked objects:
  8112 ;;		On entry : 0/1
  8113 ;;		On exit  : 3F/0
  8114 ;;		Unchanged: 0/0
  8115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8120 ;;Total ram usage:        0 bytes
  8121 ;; Hardware stack levels used:    1
  8122 ;; Hardware stack levels required when called:    4
  8123 ;; This function calls:
  8124 ;;		Nothing
  8125 ;; This function is called by:
  8126 ;;		_Digital232_init
  8127 ;;		_Digital232_RW
  8128 ;; This function uses a non-reentrant model
  8129 ;;
  8130                           
  8131                           	psect	text57
  8132  003FAE                     __ptext57:
  8133                           	opt callstack 0
  8134  003FAE                     _UART2_is_rx_ready:
  8135                           	opt callstack 25
  8136                           
  8137                           ;mcc_generated_files/uart2.c: 154:     return uart2RxCount;
  8138                           
  8139                           ;incstack = 0
  8140  003FAE  0100               	movlb	0	; () banked
  8141  003FB0  5195               	movf	_uart2RxCount& (0+255),w,b	;volatile
  8142                           
  8143                           ; BSR set to: 0
  8144  003FB2  0012               	return		;funcret
  8145  003FB4                     __end_of_UART2_is_rx_ready:
  8146                           	opt callstack 0
  8147                           
  8148 ;; *************** function _UART2_Read *****************
  8149 ;; Defined at:
  8150 ;;		line 171 in file "mcc_generated_files/uart2.c"
  8151 ;; Parameters:    Size  Location     Type
  8152 ;;		None
  8153 ;; Auto vars:     Size  Location     Type
  8154 ;;  readValue       1    5[COMRAM] unsigned char 
  8155 ;; Return value:  Size  Location     Type
  8156 ;;                  1    wreg      unsigned char 
  8157 ;; Registers used:
  8158 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8159 ;; Tracked objects:
  8160 ;;		On entry : 3F/0
  8161 ;;		On exit  : 3F/39
  8162 ;;		Unchanged: 0/0
  8163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8165 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8167 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8168 ;;Total ram usage:        1 bytes
  8169 ;; Hardware stack levels used:    1
  8170 ;; Hardware stack levels required when called:    4
  8171 ;; This function calls:
  8172 ;;		Nothing
  8173 ;; This function is called by:
  8174 ;;		_Digital232_init
  8175 ;;		_Digital232_RW
  8176 ;; This function uses a non-reentrant model
  8177 ;;
  8178                           
  8179                           	psect	text58
  8180  00385E                     __ptext58:
  8181                           	opt callstack 0
  8182  00385E                     _UART2_Read:
  8183                           	opt callstack 25
  8184                           
  8185                           ; BSR set to: 0
  8186                           ;mcc_generated_files/uart2.c: 175:     while(0 == uart2RxCount)
  8187                           
  8188                           ; BSR set to: 0
  8189                           ;mcc_generated_files/uart2.c: 175:     while(0 == uart2RxCount)
  8190                           
  8191                           ; BSR set to: 0
  8192                           ;incstack = 0
  8193  00385E  5195               	movf	_uart2RxCount& (0+255),w,b	;volatile
  8194  003860  B4D8               	btfsc	status,2,c
  8195  003862  D7FD               	goto	_UART2_Read
  8196                           
  8197                           ; BSR set to: 0
  8198                           ;mcc_generated_files/uart2.c: 179:     uart2RxLastError = uart2RxStatusBuffer[uart2RxTai
      +                          l];
  8199  003864  0E0E               	movlw	low _uart2RxStatusBuffer
  8200  003866  2458               	addwf	_uart2RxTail^0,w,c	;volatile
  8201  003868  6ED9               	movwf	fsr2l,c
  8202  00386A  6ADA               	clrf	fsr2h,c
  8203  00386C  0E01               	movlw	high _uart2RxStatusBuffer
  8204  00386E  22DA               	addwfc	fsr2h,f,c
  8205  003870  50DF               	movf	indf2,w,c
  8206  003872  0101               	movlb	1	; () banked
  8207  003874  6F70               	movwf	_uart2RxLastError& (0+255),b	;volatile
  8208                           
  8209                           ;mcc_generated_files/uart2.c: 181:     readValue = uart2RxBuffer[uart2RxTail++];
  8210  003876  0E16               	movlw	low _uart2RxBuffer
  8211  003878  2458               	addwf	_uart2RxTail^0,w,c	;volatile
  8212  00387A  6ED9               	movwf	fsr2l,c
  8213  00387C  6ADA               	clrf	fsr2h,c
  8214  00387E  0E01               	movlw	high _uart2RxBuffer
  8215  003880  22DA               	addwfc	fsr2h,f,c
  8216  003882  50DF               	movf	indf2,w,c
  8217  003884  6E06               	movwf	UART2_Read@readValue^0,c
  8218                           
  8219                           ; BSR set to: 1
  8220  003886  2A58               	incf	_uart2RxTail^0,f,c	;volatile
  8221                           
  8222                           ; BSR set to: 1
  8223                           ;mcc_generated_files/uart2.c: 182:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
  8224  003888  0E07               	movlw	7
  8225  00388A  6458               	cpfsgt	_uart2RxTail^0,c
  8226  00388C  D002               	goto	l5093
  8227                           
  8228                           ; BSR set to: 1
  8229                           ;mcc_generated_files/uart2.c: 183:     {;mcc_generated_files/uart2.c: 184:         uart2
      +                          RxTail = 0;
  8230  00388E  0E00               	movlw	0
  8231  003890  6E58               	movwf	_uart2RxTail^0,c	;volatile
  8232  003892                     l5093:
  8233                           
  8234                           ; BSR set to: 1
  8235                           ;mcc_generated_files/uart2.c: 186:     PIE6bits.U2RXIE = 0;
  8236  003892  0139               	movlb	57	; () banked
  8237  003894  9596               	bcf	150,2,b	;volatile
  8238                           
  8239                           ; BSR set to: 57
  8240                           ;mcc_generated_files/uart2.c: 187:     uart2RxCount--;
  8241  003896  0100               	movlb	0	; () banked
  8242  003898  0795               	decf	_uart2RxCount& (0+255),f,b	;volatile
  8243                           
  8244                           ; BSR set to: 0
  8245                           ;mcc_generated_files/uart2.c: 188:     PIE6bits.U2RXIE = 1;
  8246  00389A  0139               	movlb	57	; () banked
  8247  00389C  8596               	bsf	150,2,b	;volatile
  8248                           
  8249                           ; BSR set to: 57
  8250                           ;mcc_generated_files/uart2.c: 190:     return readValue;
  8251  00389E  5006               	movf	UART2_Read@readValue^0,w,c
  8252                           
  8253                           ; BSR set to: 57
  8254  0038A0  0012               	return		;funcret
  8255  0038A2                     __end_of_UART2_Read:
  8256                           	opt callstack 0
  8257                           
  8258 ;; *************** function _TimerDone *****************
  8259 ;; Defined at:
  8260 ;;		line 19 in file "timers.c"
  8261 ;; Parameters:    Size  Location     Type
  8262 ;;  timer           1    wreg     const unsigned char 
  8263 ;; Auto vars:     Size  Location     Type
  8264 ;;  timer           1    7[COMRAM] const unsigned char 
  8265 ;; Return value:  Size  Location     Type
  8266 ;;                  1    wreg      _Bool 
  8267 ;; Registers used:
  8268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8269 ;; Tracked objects:
  8270 ;;		On entry : 0/1
  8271 ;;		On exit  : 0/0
  8272 ;;		Unchanged: 0/0
  8273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8275 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8276 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8277 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8278 ;;Total ram usage:        3 bytes
  8279 ;; Hardware stack levels used:    1
  8280 ;; Hardware stack levels required when called:    4
  8281 ;; This function calls:
  8282 ;;		Nothing
  8283 ;; This function is called by:
  8284 ;;		_work_sw
  8285 ;;		_main
  8286 ;;		_Digital232_RW
  8287 ;;		_WaitMs
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291                           	psect	text59
  8292  003C44                     __ptext59:
  8293                           	opt callstack 0
  8294  003C44                     _TimerDone:
  8295                           	opt callstack 25
  8296                           
  8297                           ; BSR set to: 57
  8298                           ;incstack = 0
  8299                           ;TimerDone@timer stored from wreg
  8300  003C44  6E08               	movwf	TimerDone@timer^0,c
  8301  003C46  0004               	clrwdt		;# 
  8302                           
  8303                           ;timers.c: 22:  if (tickCount[timer] == 0) {
  8304  003C48  5008               	movf	TimerDone@timer^0,w,c
  8305  003C4A  0D02               	mullw	2
  8306  003C4C  0E00               	movlw	low _tickCount
  8307  003C4E  24F3               	addwf	243,w,c
  8308  003C50  6ED9               	movwf	fsr2l,c
  8309  003C52  0E01               	movlw	high _tickCount
  8310  003C54  20F4               	addwfc	prodh,w,c
  8311  003C56  6EDA               	movwf	fsr2h,c
  8312  003C58  50DE               	movf	postinc2,w,c
  8313  003C5A  10DE               	iorwf	postinc2,w,c
  8314  003C5C  A4D8               	btfss	status,2,c
  8315  003C5E  D002               	goto	l4871
  8316                           
  8317                           ;timers.c: 23:   return 1;
  8318  003C60  0E01               	movlw	1
  8319  003C62  0012               	return	
  8320  003C64                     l4871:
  8321                           
  8322                           ;timers.c: 25:  return 0;
  8323  003C64  0E00               	movlw	0
  8324  003C66  0012               	return		;funcret
  8325  003C68                     __end_of_TimerDone:
  8326                           	opt callstack 0
  8327                           
  8328 ;; *************** function _StartTimer *****************
  8329 ;; Defined at:
  8330 ;;		line 11 in file "timers.c"
  8331 ;; Parameters:    Size  Location     Type
  8332 ;;  timer           1    wreg     const unsigned char 
  8333 ;;  count           2    5[COMRAM] const unsigned short 
  8334 ;; Auto vars:     Size  Location     Type
  8335 ;;  timer           1    9[COMRAM] const unsigned char 
  8336 ;; Return value:  Size  Location     Type
  8337 ;;                  1    wreg      void 
  8338 ;; Registers used:
  8339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8340 ;; Tracked objects:
  8341 ;;		On entry : 0/1
  8342 ;;		On exit  : 0/0
  8343 ;;		Unchanged: 0/0
  8344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8345 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8346 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8347 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8348 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8349 ;;Total ram usage:        5 bytes
  8350 ;; Hardware stack levels used:    1
  8351 ;; Hardware stack levels required when called:    4
  8352 ;; This function calls:
  8353 ;;		Nothing
  8354 ;; This function is called by:
  8355 ;;		_work_sw
  8356 ;;		_main
  8357 ;;		_Digital232_init
  8358 ;;		_Digital232_RW
  8359 ;;		_led_lightshow
  8360 ;;		_WaitMs
  8361 ;; This function uses a non-reentrant model
  8362 ;;
  8363                           
  8364                           	psect	text60
  8365  003AB0                     __ptext60:
  8366                           	opt callstack 0
  8367  003AB0                     _StartTimer:
  8368                           	opt callstack 25
  8369                           
  8370                           ;incstack = 0
  8371                           ;StartTimer@timer stored from wreg
  8372  003AB0  6E0A               	movwf	StartTimer@timer^0,c
  8373                           
  8374                           ;timers.c: 11: __attribute__((inline)) void StartTimer(const uint8_t timer, const uint16
      +                          _t count);timers.c: 12: {;timers.c: 13:  tickCount[timer] = count << 1;
  8375  003AB2  0060  F018  F008   	movff	StartTimer@count,??_StartTimer
  8376  003AB8  0060  F01C  F009   	movff	StartTimer@count+1,??_StartTimer+1
  8377  003ABE  90D8               	bcf	status,0,c
  8378  003AC0  3608               	rlcf	??_StartTimer^0,f,c
  8379  003AC2  3609               	rlcf	(??_StartTimer+1)^0,f,c
  8380  003AC4  500A               	movf	StartTimer@timer^0,w,c
  8381  003AC6  0D02               	mullw	2
  8382  003AC8  0E00               	movlw	low _tickCount
  8383  003ACA  24F3               	addwf	243,w,c
  8384  003ACC  6ED9               	movwf	fsr2l,c
  8385  003ACE  0E01               	movlw	high _tickCount
  8386  003AD0  20F4               	addwfc	prodh,w,c
  8387  003AD2  6EDA               	movwf	fsr2h,c
  8388  003AD4  0060  F023  FFDE   	movff	??_StartTimer,postinc2
  8389  003ADA  0060  F027  FFDD   	movff	??_StartTimer+1,postdec2
  8390  003AE0  0012               	return		;funcret
  8391  003AE2                     __end_of_StartTimer:
  8392                           	opt callstack 0
  8393                           
  8394 ;; *************** function _PWM8_LoadDutyValue *****************
  8395 ;; Defined at:
  8396 ;;		line 74 in file "mcc_generated_files/pwm8.c"
  8397 ;; Parameters:    Size  Location     Type
  8398 ;;  dutyValue       2    5[COMRAM] unsigned short 
  8399 ;; Auto vars:     Size  Location     Type
  8400 ;;		None
  8401 ;; Return value:  Size  Location     Type
  8402 ;;                  1    wreg      void 
  8403 ;; Registers used:
  8404 ;;		wreg, status,2, status,0
  8405 ;; Tracked objects:
  8406 ;;		On entry : 0/0
  8407 ;;		On exit  : 0/0
  8408 ;;		Unchanged: 0/0
  8409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8410 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8412 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8413 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8414 ;;Total ram usage:        4 bytes
  8415 ;; Hardware stack levels used:    1
  8416 ;; Hardware stack levels required when called:    4
  8417 ;; This function calls:
  8418 ;;		Nothing
  8419 ;; This function is called by:
  8420 ;;		_Digital232_RW
  8421 ;; This function uses a non-reentrant model
  8422 ;;
  8423                           
  8424                           	psect	text61
  8425  003A0E                     __ptext61:
  8426                           	opt callstack 0
  8427  003A0E                     _PWM8_LoadDutyValue:
  8428                           	opt callstack 25
  8429                           
  8430                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  8431                           
  8432                           ;incstack = 0
  8433  003A0E  0060  F018  F008   	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  8434  003A14  0060  F01C  F009   	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
  8435  003A1A  90D8               	bcf	status,0,c
  8436  003A1C  3209               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
  8437  003A1E  3208               	rrcf	??_PWM8_LoadDutyValue^0,f,c
  8438  003A20  90D8               	bcf	status,0,c
  8439  003A22  3209               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
  8440  003A24  3208               	rrcf	??_PWM8_LoadDutyValue^0,f,c
  8441  003A26  5008               	movf	??_PWM8_LoadDutyValue^0,w,c
  8442  003A28  6E61               	movwf	97,c	;volatile
  8443                           
  8444                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
  8445  003A2A  0060  F018  F008   	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  8446  003A30  0E03               	movlw	3
  8447  003A32  1608               	andwf	??_PWM8_LoadDutyValue^0,f,c
  8448  003A34  0E06               	movlw	6
  8449  003A36  6E09               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
  8450  003A38                     u3895:
  8451  003A38  90D8               	bcf	status,0,c
  8452  003A3A  3608               	rlcf	??_PWM8_LoadDutyValue^0,f,c
  8453  003A3C  2E09               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
  8454  003A3E  D7FC               	goto	u3895
  8455  003A40  5008               	movf	??_PWM8_LoadDutyValue^0,w,c
  8456  003A42  6E60               	movwf	96,c	;volatile
  8457  003A44  0012               	return		;funcret
  8458  003A46                     __end_of_PWM8_LoadDutyValue:
  8459                           	opt callstack 0
  8460                           
  8461 ;; *************** function _ADCC_GetConversionResult *****************
  8462 ;; Defined at:
  8463 ;;		line 131 in file "mcc_generated_files/adcc.c"
  8464 ;; Parameters:    Size  Location     Type
  8465 ;;		None
  8466 ;; Auto vars:     Size  Location     Type
  8467 ;;		None
  8468 ;; Return value:  Size  Location     Type
  8469 ;;                  2    5[COMRAM] unsigned short 
  8470 ;; Registers used:
  8471 ;;		wreg, status,2, status,0
  8472 ;; Tracked objects:
  8473 ;;		On entry : 3F/1
  8474 ;;		On exit  : 3F/3E
  8475 ;;		Unchanged: 0/0
  8476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8477 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8479 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8480 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8481 ;;Total ram usage:        4 bytes
  8482 ;; Hardware stack levels used:    1
  8483 ;; Hardware stack levels required when called:    4
  8484 ;; This function calls:
  8485 ;;		Nothing
  8486 ;; This function is called by:
  8487 ;;		_Digital232_RW
  8488 ;; This function uses a non-reentrant model
  8489 ;;
  8490                           
  8491                           	psect	text62
  8492  003E84                     __ptext62:
  8493                           	opt callstack 0
  8494  003E84                     _ADCC_GetConversionResult:
  8495                           	opt callstack 25
  8496                           
  8497                           ; BSR set to: 1
  8498                           ;mcc_generated_files/adcc.c: 134:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8499                           
  8500                           ;incstack = 0
  8501  003E84  013E               	movlb	62	; () banked
  8502  003E86  51F0               	movf	240,w,b	;volatile
  8503  003E88  6E09               	movwf	(??_ADCC_GetConversionResult+1)^0,c
  8504  003E8A  6A08               	clrf	??_ADCC_GetConversionResult^0,c
  8505  003E8C  51EF               	movf	239,w,b	;volatile
  8506  003E8E  2408               	addwf	??_ADCC_GetConversionResult^0,w,c
  8507  003E90  6E06               	movwf	?_ADCC_GetConversionResult^0,c
  8508  003E92  0E00               	movlw	0
  8509  003E94  2009               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
  8510  003E96  6E07               	movwf	(?_ADCC_GetConversionResult+1)^0,c
  8511                           
  8512                           ; BSR set to: 62
  8513  003E98  0012               	return		;funcret
  8514  003E9A                     __end_of_ADCC_GetConversionResult:
  8515                           	opt callstack 0
  8516                           
  8517 ;; *************** function _Default_ISR *****************
  8518 ;; Defined at:
  8519 ;;		line 80 in file "mcc_generated_files/interrupt_manager.c"
  8520 ;; Parameters:    Size  Location     Type
  8521 ;;		None
  8522 ;; Auto vars:     Size  Location     Type
  8523 ;;		None
  8524 ;; Return value:  Size  Location     Type
  8525 ;;                  1    wreg      void 
  8526 ;; Registers used:
  8527 ;;		None
  8528 ;; Tracked objects:
  8529 ;;		On entry : 0/0
  8530 ;;		On exit  : 0/0
  8531 ;;		Unchanged: 0/0
  8532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8537 ;;Total ram usage:        0 bytes
  8538 ;; Hardware stack levels used:    1
  8539 ;; This function calls:
  8540 ;;		Nothing
  8541 ;; This function is called by:
  8542 ;;		Interrupt level 2
  8543 ;; This function uses a non-reentrant model
  8544 ;;
  8545                           
  8546                           	psect	text63
  8547  003FC4                     __ptext63:
  8548                           	opt callstack 0
  8549  003FC4                     _Default_ISR:
  8550                           	opt callstack 20
  8551                           
  8552                           ; BSR set to: 62
  8553                           ;incstack = 0
  8554  003FC4  0011               	retfie		f
  8555  003FC6                     __end_of_Default_ISR:
  8556                           	opt callstack 0
  8557                           
  8558 ;; *************** function _UART1_tx_vect_isr *****************
  8559 ;; Defined at:
  8560 ;;		line 225 in file "mcc_generated_files/uart1.c"
  8561 ;; Parameters:    Size  Location     Type
  8562 ;;		None
  8563 ;; Auto vars:     Size  Location     Type
  8564 ;;		None
  8565 ;; Return value:  Size  Location     Type
  8566 ;;                  1    wreg      void 
  8567 ;; Registers used:
  8568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8569 ;; Tracked objects:
  8570 ;;		On entry : 0/0
  8571 ;;		On exit  : 0/0
  8572 ;;		Unchanged: 0/0
  8573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8578 ;;Total ram usage:        0 bytes
  8579 ;; Hardware stack levels used:    1
  8580 ;; Hardware stack levels required when called:    1
  8581 ;; This function calls:
  8582 ;;		Absolute function
  8583 ;;		_UART1_Transmit_ISR
  8584 ;; This function is called by:
  8585 ;;		Interrupt level 2
  8586 ;; This function uses a non-reentrant model
  8587 ;;
  8588                           
  8589                           	psect	text64
  8590  003C68                     __ptext64:
  8591                           	opt callstack 0
  8592  003C68                     _UART1_tx_vect_isr:
  8593                           	opt callstack 19
  8594                           
  8595                           ;mcc_generated_files/uart1.c: 227:     if(UART1_TxInterruptHandler)
  8596                           
  8597                           ;incstack = 0
  8598  003C68  0101               	movlb	1	; () banked
  8599  003C6A  515A               	movf	_UART1_TxInterruptHandler& (0+255),w,b
  8600  003C6C  115B               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
  8601  003C6E  115C               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
  8602  003C70  B4D8               	btfsc	status,2,c
  8603  003C72  0011               	retfie		f
  8604                           
  8605                           ; BSR set to: 1
  8606                           ;mcc_generated_files/uart1.c: 228:     {;mcc_generated_files/uart1.c: 229:         UART1
      +                          _TxInterruptHandler();
  8607  003C74  D801               	call	i2u290_48
  8608  003C76  0011               	retfie		f
  8609  003C78                     i2u290_48:
  8610  003C78  0005               	push	
  8611  003C7A  6EFA               	movwf	pclath,c
  8612  003C7C  515A               	movf	_UART1_TxInterruptHandler& (0+255),w,b
  8613  003C7E  6EFD               	movwf	tosl,c
  8614  003C80  515B               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
  8615  003C82  6EFE               	movwf	tosh,c
  8616  003C84  515C               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
  8617  003C86  6EFF               	movwf	tosu,c
  8618  003C88  50FA               	movf	pclath,w,c
  8619  003C8A  0012               	return		;indir
  8620  003C8C                     __end_of_UART1_tx_vect_isr:
  8621                           	opt callstack 0
  8622                           
  8623 ;; *************** function _UART1_Transmit_ISR *****************
  8624 ;; Defined at:
  8625 ;;		line 243 in file "mcc_generated_files/uart1.c"
  8626 ;; Parameters:    Size  Location     Type
  8627 ;;		None
  8628 ;; Auto vars:     Size  Location     Type
  8629 ;;		None
  8630 ;; Return value:  Size  Location     Type
  8631 ;;                  1    wreg      void 
  8632 ;; Registers used:
  8633 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8634 ;; Tracked objects:
  8635 ;;		On entry : 3F/1
  8636 ;;		On exit  : 6/0
  8637 ;;		Unchanged: 0/0
  8638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8643 ;;Total ram usage:        0 bytes
  8644 ;; Hardware stack levels used:    1
  8645 ;; This function calls:
  8646 ;;		Nothing
  8647 ;; This function is called by:
  8648 ;;		_UART1_Initialize
  8649 ;;		_UART1_tx_vect_isr
  8650 ;; This function uses a non-reentrant model
  8651 ;;
  8652                           
  8653                           	psect	text65
  8654  003AE2                     __ptext65:
  8655                           	opt callstack 0
  8656  003AE2                     _UART1_Transmit_ISR:
  8657                           	opt callstack 19
  8658                           
  8659                           ; BSR set to: 1
  8660                           ;mcc_generated_files/uart1.c: 246:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
  8661                           
  8662                           ;incstack = 0
  8663  003AE2  0E08               	movlw	8
  8664  003AE4  0100               	movlb	0	; () banked
  8665  003AE6  619B               	cpfslt	_uart1TxBufferRemaining& (0+255),b
  8666  003AE8  D012               	goto	i2l342
  8667                           
  8668                           ; BSR set to: 0
  8669                           ;mcc_generated_files/uart1.c: 247:     {;mcc_generated_files/uart1.c: 248:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
  8670  003AEA  0E36               	movlw	low _uart1TxBuffer
  8671  003AEC  259C               	addwf	_uart1TxTail& (0+255),w,b	;volatile
  8672  003AEE  6ED9               	movwf	fsr2l,c
  8673  003AF0  6ADA               	clrf	fsr2h,c
  8674  003AF2  0E01               	movlw	high _uart1TxBuffer
  8675  003AF4  22DA               	addwfc	fsr2h,f,c
  8676  003AF6  50DF               	movf	indf2,w,c
  8677  003AF8  013D               	movlb	61	; () banked
  8678  003AFA  6FEA               	movwf	234,b	;volatile
  8679                           
  8680                           ; BSR set to: 61
  8681  003AFC  0100               	movlb	0	; () banked
  8682  003AFE  2B9C               	incf	_uart1TxTail& (0+255),f,b	;volatile
  8683                           
  8684                           ; BSR set to: 0
  8685                           ;mcc_generated_files/uart1.c: 249:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
  8686  003B00  0E07               	movlw	7
  8687  003B02  659C               	cpfsgt	_uart1TxTail& (0+255),b
  8688  003B04  D002               	goto	i2l4029
  8689                           
  8690                           ; BSR set to: 0
  8691                           ;mcc_generated_files/uart1.c: 250:         {;mcc_generated_files/uart1.c: 251:          
      +                             uart1TxTail = 0;
  8692  003B06  0E00               	movlw	0
  8693  003B08  6F9C               	movwf	_uart1TxTail& (0+255),b	;volatile
  8694  003B0A                     i2l4029:
  8695                           
  8696                           ; BSR set to: 0
  8697                           ;mcc_generated_files/uart1.c: 253:         uart1TxBufferRemaining++;
  8698  003B0A  2B9B               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
  8699                           
  8700                           ;mcc_generated_files/uart1.c: 254:     }
  8701  003B0C  0012               	return	
  8702  003B0E                     i2l342:
  8703                           
  8704                           ; BSR set to: 0
  8705                           ;mcc_generated_files/uart1.c: 256:     {;mcc_generated_files/uart1.c: 257:         PIE3b
      +                          its.U1TXIE = 0;
  8706  003B0E  0139               	movlb	57	; () banked
  8707  003B10  9993               	bcf	147,4,b	;volatile
  8708  003B12  0012               	return		;funcret
  8709  003B14                     __end_of_UART1_Transmit_ISR:
  8710                           	opt callstack 0
  8711                           
  8712 ;; *************** function _UART1_rx_vect_isr *****************
  8713 ;; Defined at:
  8714 ;;		line 233 in file "mcc_generated_files/uart1.c"
  8715 ;; Parameters:    Size  Location     Type
  8716 ;;		None
  8717 ;; Auto vars:     Size  Location     Type
  8718 ;;		None
  8719 ;; Return value:  Size  Location     Type
  8720 ;;                  1    wreg      void 
  8721 ;; Registers used:
  8722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8723 ;; Tracked objects:
  8724 ;;		On entry : 0/0
  8725 ;;		On exit  : 0/0
  8726 ;;		Unchanged: 0/0
  8727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8732 ;;Total ram usage:        0 bytes
  8733 ;; Hardware stack levels used:    1
  8734 ;; Hardware stack levels required when called:    3
  8735 ;; This function calls:
  8736 ;;		Absolute function
  8737 ;;		_UART1_Receive_ISR
  8738 ;; This function is called by:
  8739 ;;		Interrupt level 2
  8740 ;; This function uses a non-reentrant model
  8741 ;;
  8742                           
  8743                           	psect	text66
  8744  003C8C                     __ptext66:
  8745                           	opt callstack 0
  8746  003C8C                     _UART1_rx_vect_isr:
  8747                           	opt callstack 17
  8748                           
  8749                           ;mcc_generated_files/uart1.c: 235:     if(UART1_RxInterruptHandler)
  8750                           
  8751                           ;incstack = 0
  8752  003C8C  0101               	movlb	1	; () banked
  8753  003C8E  515D               	movf	_UART1_RxInterruptHandler& (0+255),w,b
  8754  003C90  115E               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
  8755  003C92  115F               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
  8756  003C94  B4D8               	btfsc	status,2,c
  8757  003C96  0011               	retfie		f
  8758                           
  8759                           ; BSR set to: 1
  8760                           ;mcc_generated_files/uart1.c: 236:     {;mcc_generated_files/uart1.c: 237:         UART1
      +                          _RxInterruptHandler();
  8761  003C98  D801               	call	i2u292_48
  8762  003C9A  0011               	retfie		f
  8763  003C9C                     i2u292_48:
  8764  003C9C  0005               	push	
  8765  003C9E  6EFA               	movwf	pclath,c
  8766  003CA0  515D               	movf	_UART1_RxInterruptHandler& (0+255),w,b
  8767  003CA2  6EFD               	movwf	tosl,c
  8768  003CA4  515E               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
  8769  003CA6  6EFE               	movwf	tosh,c
  8770  003CA8  515F               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
  8771  003CAA  6EFF               	movwf	tosu,c
  8772  003CAC  50FA               	movf	pclath,w,c
  8773  003CAE  0012               	return		;indir
  8774  003CB0                     __end_of_UART1_rx_vect_isr:
  8775                           	opt callstack 0
  8776                           
  8777 ;; *************** function _UART1_Receive_ISR *****************
  8778 ;; Defined at:
  8779 ;;		line 263 in file "mcc_generated_files/uart1.c"
  8780 ;; Parameters:    Size  Location     Type
  8781 ;;		None
  8782 ;; Auto vars:     Size  Location     Type
  8783 ;;		None
  8784 ;; Return value:  Size  Location     Type
  8785 ;;                  1    wreg      void 
  8786 ;; Registers used:
  8787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8788 ;; Tracked objects:
  8789 ;;		On entry : 3F/1
  8790 ;;		On exit  : 0/0
  8791 ;;		Unchanged: 0/0
  8792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8797 ;;Total ram usage:        0 bytes
  8798 ;; Hardware stack levels used:    1
  8799 ;; Hardware stack levels required when called:    2
  8800 ;; This function calls:
  8801 ;;		Absolute function
  8802 ;;		_UART1_DefaultErrorHandler
  8803 ;;		_UART1_DefaultFramingErrorHandler
  8804 ;;		_UART1_DefaultOverrunErrorHandler
  8805 ;;		_UART1_RxDataHandler
  8806 ;; This function is called by:
  8807 ;;		_UART1_Initialize
  8808 ;;		_UART1_rx_vect_isr
  8809 ;; This function uses a non-reentrant model
  8810 ;;
  8811                           
  8812                           	psect	text67
  8813  0032E4                     __ptext67:
  8814                           	opt callstack 0
  8815  0032E4                     _UART1_Receive_ISR:
  8816                           	opt callstack 17
  8817                           
  8818                           ; BSR set to: 1
  8819                           ;mcc_generated_files/uart1.c: 266:     uart1RxStatusBuffer[uart1RxHead].status = 0;
  8820                           
  8821                           ;incstack = 0
  8822  0032E4  0E26               	movlw	low _uart1RxStatusBuffer
  8823  0032E6  245A               	addwf	_uart1RxHead^0,w,c	;volatile
  8824  0032E8  6ED9               	movwf	fsr2l,c
  8825  0032EA  6ADA               	clrf	fsr2h,c
  8826  0032EC  0E01               	movlw	high _uart1RxStatusBuffer
  8827  0032EE  22DA               	addwfc	fsr2h,f,c
  8828  0032F0  0E00               	movlw	0
  8829  0032F2  6EDF               	movwf	indf2,c
  8830                           
  8831                           ; BSR set to: 1
  8832                           ;mcc_generated_files/uart1.c: 268:     if(U1ERRIRbits.FERIF){
  8833  0032F4  013D               	movlb	61	; () banked
  8834  0032F6  A7F9               	btfss	249,3,b	;volatile
  8835  0032F8  D014               	goto	i2u243_49
  8836                           
  8837                           ; BSR set to: 61
  8838                           ;mcc_generated_files/uart1.c: 269:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
  8839  0032FA  0E26               	movlw	low _uart1RxStatusBuffer
  8840  0032FC  245A               	addwf	_uart1RxHead^0,w,c	;volatile
  8841  0032FE  6ED9               	movwf	fsr2l,c
  8842  003300  6ADA               	clrf	fsr2h,c
  8843  003302  0E01               	movlw	high _uart1RxStatusBuffer
  8844  003304  22DA               	addwfc	fsr2h,f,c
  8845  003306  0101               	movlb	1	; () banked
  8846  003308  82DF               	bsf	indf2,1,c
  8847                           
  8848                           ; BSR set to: 1
  8849                           ;mcc_generated_files/uart1.c: 270:         UART1_FramingErrorHandler();
  8850  00330A  D801               	call	i2u243_48
  8851  00330C  D00A               	goto	i2u243_49
  8852  00330E                     i2u243_48:
  8853  00330E  0005               	push	
  8854  003310  6EFA               	movwf	pclath,c
  8855  003312  5157               	movf	_UART1_FramingErrorHandler& (0+255),w,b
  8856  003314  6EFD               	movwf	tosl,c
  8857  003316  5158               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
  8858  003318  6EFE               	movwf	tosh,c
  8859  00331A  5159               	movf	(_UART1_FramingErrorHandler+2)& (0+255),w,b
  8860  00331C  6EFF               	movwf	tosu,c
  8861  00331E  50FA               	movf	pclath,w,c
  8862  003320  0012               	return		;indir
  8863  003322                     i2u243_49:
  8864                           
  8865                           ;mcc_generated_files/uart1.c: 273:     if(U1ERRIRbits.RXFOIF){
  8866  003322  013D               	movlb	61	; () banked
  8867  003324  A3F9               	btfss	249,1,b	;volatile
  8868  003326  D014               	goto	i2u245_49
  8869                           
  8870                           ; BSR set to: 61
  8871                           ;mcc_generated_files/uart1.c: 274:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
  8872  003328  0E26               	movlw	low _uart1RxStatusBuffer
  8873  00332A  245A               	addwf	_uart1RxHead^0,w,c	;volatile
  8874  00332C  6ED9               	movwf	fsr2l,c
  8875  00332E  6ADA               	clrf	fsr2h,c
  8876  003330  0E01               	movlw	high _uart1RxStatusBuffer
  8877  003332  22DA               	addwfc	fsr2h,f,c
  8878  003334  0101               	movlb	1	; () banked
  8879  003336  84DF               	bsf	indf2,2,c
  8880                           
  8881                           ; BSR set to: 1
  8882                           ;mcc_generated_files/uart1.c: 275:         UART1_OverrunErrorHandler();
  8883  003338  D801               	call	i2u245_48
  8884  00333A  D00A               	goto	i2u245_49
  8885  00333C                     i2u245_48:
  8886  00333C  0005               	push	
  8887  00333E  6EFA               	movwf	pclath,c
  8888  003340  5154               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
  8889  003342  6EFD               	movwf	tosl,c
  8890  003344  5155               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
  8891  003346  6EFE               	movwf	tosh,c
  8892  003348  5156               	movf	(_UART1_OverrunErrorHandler+2)& (0+255),w,b
  8893  00334A  6EFF               	movwf	tosu,c
  8894  00334C  50FA               	movf	pclath,w,c
  8895  00334E  0012               	return		;indir
  8896  003350                     i2u245_49:
  8897                           
  8898                           ;mcc_generated_files/uart1.c: 278:     if(uart1RxStatusBuffer[uart1RxHead].status){
  8899  003350  0E26               	movlw	low _uart1RxStatusBuffer
  8900  003352  245A               	addwf	_uart1RxHead^0,w,c	;volatile
  8901  003354  6ED9               	movwf	fsr2l,c
  8902  003356  6ADA               	clrf	fsr2h,c
  8903  003358  0E01               	movlw	high _uart1RxStatusBuffer
  8904  00335A  22DA               	addwfc	fsr2h,f,c
  8905  00335C  50DF               	movf	indf2,w,c
  8906  00335E  B4D8               	btfsc	status,2,c
  8907  003360  D00D               	goto	i2l4049
  8908                           
  8909                           ;mcc_generated_files/uart1.c: 279:         UART1_ErrorHandler();
  8910  003362  D801               	call	i2u247_48
  8911  003364  0012               	return	
  8912  003366                     i2u247_48:
  8913  003366  0005               	push	
  8914  003368  6EFA               	movwf	pclath,c
  8915  00336A  0101               	movlb	1	; () banked
  8916  00336C  5151               	movf	_UART1_ErrorHandler& (0+255),w,b
  8917  00336E  6EFD               	movwf	tosl,c
  8918  003370  5152               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
  8919  003372  6EFE               	movwf	tosh,c
  8920  003374  5153               	movf	(_UART1_ErrorHandler+2)& (0+255),w,b
  8921  003376  6EFF               	movwf	tosu,c
  8922  003378  50FA               	movf	pclath,w,c
  8923  00337A  0012               	return		;indir
  8924  00337C                     i2l4049:
  8925                           
  8926                           ;mcc_generated_files/uart1.c: 281:         UART1_RxDataHandler();
  8927  00337C  EC58  F01E         	call	_UART1_RxDataHandler	;wreg free
  8928  003380  0012               	return		;funcret
  8929  003382                     __end_of_UART1_Receive_ISR:
  8930                           	opt callstack 0
  8931                           
  8932 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
  8933 ;; Defined at:
  8934 ;;		line 299 in file "mcc_generated_files/uart1.c"
  8935 ;; Parameters:    Size  Location     Type
  8936 ;;		None
  8937 ;; Auto vars:     Size  Location     Type
  8938 ;;		None
  8939 ;; Return value:  Size  Location     Type
  8940 ;;                  1    wreg      void 
  8941 ;; Registers used:
  8942 ;;		None
  8943 ;; Tracked objects:
  8944 ;;		On entry : 3F/1
  8945 ;;		On exit  : 3F/1
  8946 ;;		Unchanged: 3F/0
  8947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8952 ;;Total ram usage:        0 bytes
  8953 ;; Hardware stack levels used:    1
  8954 ;; This function calls:
  8955 ;;		Nothing
  8956 ;; This function is called by:
  8957 ;;		_UART1_Initialize
  8958 ;;		_UART1_Receive_ISR
  8959 ;; This function uses a non-reentrant model
  8960 ;;
  8961                           
  8962                           	psect	text68
  8963  003FC6                     __ptext68:
  8964                           	opt callstack 0
  8965  003FC6                     _UART1_DefaultOverrunErrorHandler:
  8966                           	opt callstack 18
  8967                           
  8968                           ; BSR set to: 1
  8969                           
  8970                           ;incstack = 0
  8971  003FC6  0012               	return		;funcret
  8972  003FC8                     __end_of_UART1_DefaultOverrunErrorHandler:
  8973                           	opt callstack 0
  8974                           
  8975 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
  8976 ;; Defined at:
  8977 ;;		line 297 in file "mcc_generated_files/uart1.c"
  8978 ;; Parameters:    Size  Location     Type
  8979 ;;		None
  8980 ;; Auto vars:     Size  Location     Type
  8981 ;;		None
  8982 ;; Return value:  Size  Location     Type
  8983 ;;                  1    wreg      void 
  8984 ;; Registers used:
  8985 ;;		None
  8986 ;; Tracked objects:
  8987 ;;		On entry : 3F/1
  8988 ;;		On exit  : 3F/1
  8989 ;;		Unchanged: 3F/0
  8990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8995 ;;Total ram usage:        0 bytes
  8996 ;; Hardware stack levels used:    1
  8997 ;; This function calls:
  8998 ;;		Nothing
  8999 ;; This function is called by:
  9000 ;;		_UART1_Initialize
  9001 ;;		_UART1_Receive_ISR
  9002 ;; This function uses a non-reentrant model
  9003 ;;
  9004                           
  9005                           	psect	text69
  9006  003FC8                     __ptext69:
  9007                           	opt callstack 0
  9008  003FC8                     _UART1_DefaultFramingErrorHandler:
  9009                           	opt callstack 18
  9010                           
  9011                           ; BSR set to: 1
  9012                           
  9013                           ; BSR set to: 1
  9014                           ;incstack = 0
  9015  003FC8  0012               	return		;funcret
  9016  003FCA                     __end_of_UART1_DefaultFramingErrorHandler:
  9017                           	opt callstack 0
  9018                           
  9019 ;; *************** function _UART1_DefaultErrorHandler *****************
  9020 ;; Defined at:
  9021 ;;		line 301 in file "mcc_generated_files/uart1.c"
  9022 ;; Parameters:    Size  Location     Type
  9023 ;;		None
  9024 ;; Auto vars:     Size  Location     Type
  9025 ;;		None
  9026 ;; Return value:  Size  Location     Type
  9027 ;;                  1    wreg      void 
  9028 ;; Registers used:
  9029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9030 ;; Tracked objects:
  9031 ;;		On entry : 3F/1
  9032 ;;		On exit  : 3F/0
  9033 ;;		Unchanged: 0/0
  9034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9039 ;;Total ram usage:        0 bytes
  9040 ;; Hardware stack levels used:    1
  9041 ;; Hardware stack levels required when called:    1
  9042 ;; This function calls:
  9043 ;;		_UART1_RxDataHandler
  9044 ;; This function is called by:
  9045 ;;		_UART1_Initialize
  9046 ;;		_UART1_Receive_ISR
  9047 ;; This function uses a non-reentrant model
  9048 ;;
  9049                           
  9050                           	psect	text70
  9051  003FB4                     __ptext70:
  9052                           	opt callstack 0
  9053  003FB4                     _UART1_DefaultErrorHandler:
  9054                           	opt callstack 17
  9055                           
  9056                           ; BSR set to: 1
  9057                           ;mcc_generated_files/uart1.c: 302:     UART1_RxDataHandler();
  9058                           
  9059                           ; BSR set to: 1
  9060                           ;incstack = 0
  9061  003FB4  EC58  F01E         	call	_UART1_RxDataHandler	;wreg free
  9062                           
  9063                           ; BSR set to: 0
  9064  003FB8  0012               	return		;funcret
  9065  003FBA                     __end_of_UART1_DefaultErrorHandler:
  9066                           	opt callstack 0
  9067                           
  9068 ;; *************** function _UART1_RxDataHandler *****************
  9069 ;; Defined at:
  9070 ;;		line 287 in file "mcc_generated_files/uart1.c"
  9071 ;; Parameters:    Size  Location     Type
  9072 ;;		None
  9073 ;; Auto vars:     Size  Location     Type
  9074 ;;		None
  9075 ;; Return value:  Size  Location     Type
  9076 ;;                  1    wreg      void 
  9077 ;; Registers used:
  9078 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9079 ;; Tracked objects:
  9080 ;;		On entry : 0/3D
  9081 ;;		On exit  : 3F/0
  9082 ;;		Unchanged: 0/0
  9083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9088 ;;Total ram usage:        0 bytes
  9089 ;; Hardware stack levels used:    1
  9090 ;; This function calls:
  9091 ;;		Nothing
  9092 ;; This function is called by:
  9093 ;;		_UART1_Receive_ISR
  9094 ;;		_UART1_DefaultErrorHandler
  9095 ;; This function uses a non-reentrant model
  9096 ;;
  9097                           
  9098                           	psect	text71
  9099  003CB0                     __ptext71:
  9100                           	opt callstack 0
  9101  003CB0                     _UART1_RxDataHandler:
  9102                           	opt callstack 18
  9103                           
  9104                           ;mcc_generated_files/uart1.c: 289:     uart1RxBuffer[uart1RxHead++] = U1RXB;
  9105                           
  9106                           ; BSR set to: 0
  9107                           ;incstack = 0
  9108  003CB0  0E2E               	movlw	low _uart1RxBuffer
  9109  003CB2  245A               	addwf	_uart1RxHead^0,w,c	;volatile
  9110  003CB4  6ED9               	movwf	fsr2l,c
  9111  003CB6  6ADA               	clrf	fsr2h,c
  9112  003CB8  0E01               	movlw	high _uart1RxBuffer
  9113  003CBA  22DA               	addwfc	fsr2h,f,c
  9114  003CBC  006F F7A3 FFDF     	movff	15848,indf2	;volatile
  9115  003CC2  2A5A               	incf	_uart1RxHead^0,f,c	;volatile
  9116                           
  9117                           ;mcc_generated_files/uart1.c: 290:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
  9118  003CC4  0E07               	movlw	7
  9119  003CC6  645A               	cpfsgt	_uart1RxHead^0,c
  9120  003CC8  D002               	goto	i2l3647
  9121                           
  9122                           ;mcc_generated_files/uart1.c: 291:     {;mcc_generated_files/uart1.c: 292:         uart1
      +                          RxHead = 0;
  9123  003CCA  0E00               	movlw	0
  9124  003CCC  6E5A               	movwf	_uart1RxHead^0,c	;volatile
  9125  003CCE                     i2l3647:
  9126                           
  9127                           ;mcc_generated_files/uart1.c: 294:     uart1RxCount++;
  9128  003CCE  0100               	movlb	0	; () banked
  9129  003CD0  2B99               	incf	_uart1RxCount& (0+255),f,b	;volatile
  9130                           
  9131                           ; BSR set to: 0
  9132  003CD2  0012               	return		;funcret
  9133  003CD4                     __end_of_UART1_RxDataHandler:
  9134                           	opt callstack 0
  9135                           
  9136 ;; *************** function _UART2_tx_vect_isr *****************
  9137 ;; Defined at:
  9138 ;;		line 226 in file "mcc_generated_files/uart2.c"
  9139 ;; Parameters:    Size  Location     Type
  9140 ;;		None
  9141 ;; Auto vars:     Size  Location     Type
  9142 ;;		None
  9143 ;; Return value:  Size  Location     Type
  9144 ;;                  1    wreg      void 
  9145 ;; Registers used:
  9146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  9147 ;; Tracked objects:
  9148 ;;		On entry : 0/0
  9149 ;;		On exit  : 0/0
  9150 ;;		Unchanged: 0/0
  9151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9156 ;;Total ram usage:        0 bytes
  9157 ;; Hardware stack levels used:    1
  9158 ;; Hardware stack levels required when called:    1
  9159 ;; This function calls:
  9160 ;;		Absolute function
  9161 ;;		_UART2_Transmit_ISR
  9162 ;; This function is called by:
  9163 ;;		Interrupt level 2
  9164 ;; This function uses a non-reentrant model
  9165 ;;
  9166                           
  9167                           	psect	text72
  9168  003CD4                     __ptext72:
  9169                           	opt callstack 0
  9170  003CD4                     _UART2_tx_vect_isr:
  9171                           	opt callstack 19
  9172                           
  9173                           ;mcc_generated_files/uart2.c: 228:     if(UART2_TxInterruptHandler)
  9174                           
  9175                           ; BSR set to: 0
  9176                           ;incstack = 0
  9177  003CD4  0101               	movlb	1	; () banked
  9178  003CD6  5160               	movf	_UART2_TxInterruptHandler& (0+255),w,b
  9179  003CD8  1161               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
  9180  003CDA  1162               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
  9181  003CDC  B4D8               	btfsc	status,2,c
  9182  003CDE  0011               	retfie		f
  9183                           
  9184                           ; BSR set to: 1
  9185                           ;mcc_generated_files/uart2.c: 229:     {;mcc_generated_files/uart2.c: 230:         UART2
      +                          _TxInterruptHandler();
  9186  003CE0  D801               	call	i2u294_48
  9187  003CE2  0011               	retfie		f
  9188  003CE4                     i2u294_48:
  9189  003CE4  0005               	push	
  9190  003CE6  6EFA               	movwf	pclath,c
  9191  003CE8  5160               	movf	_UART2_TxInterruptHandler& (0+255),w,b
  9192  003CEA  6EFD               	movwf	tosl,c
  9193  003CEC  5161               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
  9194  003CEE  6EFE               	movwf	tosh,c
  9195  003CF0  5162               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
  9196  003CF2  6EFF               	movwf	tosu,c
  9197  003CF4  50FA               	movf	pclath,w,c
  9198  003CF6  0012               	return		;indir
  9199  003CF8                     __end_of_UART2_tx_vect_isr:
  9200                           	opt callstack 0
  9201                           
  9202 ;; *************** function _UART2_Transmit_ISR *****************
  9203 ;; Defined at:
  9204 ;;		line 244 in file "mcc_generated_files/uart2.c"
  9205 ;; Parameters:    Size  Location     Type
  9206 ;;		None
  9207 ;; Auto vars:     Size  Location     Type
  9208 ;;		None
  9209 ;; Return value:  Size  Location     Type
  9210 ;;                  1    wreg      void 
  9211 ;; Registers used:
  9212 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9213 ;; Tracked objects:
  9214 ;;		On entry : 3F/1
  9215 ;;		On exit  : 6/0
  9216 ;;		Unchanged: 0/0
  9217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9222 ;;Total ram usage:        0 bytes
  9223 ;; Hardware stack levels used:    1
  9224 ;; This function calls:
  9225 ;;		Nothing
  9226 ;; This function is called by:
  9227 ;;		_UART2_Initialize
  9228 ;;		_UART2_tx_vect_isr
  9229 ;; This function uses a non-reentrant model
  9230 ;;
  9231                           
  9232                           	psect	text73
  9233  003B14                     __ptext73:
  9234                           	opt callstack 0
  9235  003B14                     _UART2_Transmit_ISR:
  9236                           	opt callstack 19
  9237                           
  9238                           ; BSR set to: 1
  9239                           ;mcc_generated_files/uart2.c: 247:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
  9240                           
  9241                           ;incstack = 0
  9242  003B14  0E08               	movlw	8
  9243  003B16  0100               	movlb	0	; () banked
  9244  003B18  6196               	cpfslt	_uart2TxBufferRemaining& (0+255),b
  9245  003B1A  D012               	goto	i2l516
  9246                           
  9247                           ; BSR set to: 0
  9248                           ;mcc_generated_files/uart2.c: 248:     {;mcc_generated_files/uart2.c: 249:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
  9249  003B1C  0E1E               	movlw	low _uart2TxBuffer
  9250  003B1E  2597               	addwf	_uart2TxTail& (0+255),w,b	;volatile
  9251  003B20  6ED9               	movwf	fsr2l,c
  9252  003B22  6ADA               	clrf	fsr2h,c
  9253  003B24  0E01               	movlw	high _uart2TxBuffer
  9254  003B26  22DA               	addwfc	fsr2h,f,c
  9255  003B28  50DF               	movf	indf2,w,c
  9256  003B2A  013D               	movlb	61	; () banked
  9257  003B2C  6FD2               	movwf	210,b	;volatile
  9258                           
  9259                           ; BSR set to: 61
  9260  003B2E  0100               	movlb	0	; () banked
  9261  003B30  2B97               	incf	_uart2TxTail& (0+255),f,b	;volatile
  9262                           
  9263                           ; BSR set to: 0
  9264                           ;mcc_generated_files/uart2.c: 250:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
  9265  003B32  0E07               	movlw	7
  9266  003B34  6597               	cpfsgt	_uart2TxTail& (0+255),b
  9267  003B36  D002               	goto	i2l4061
  9268                           
  9269                           ; BSR set to: 0
  9270                           ;mcc_generated_files/uart2.c: 251:         {;mcc_generated_files/uart2.c: 252:          
      +                             uart2TxTail = 0;
  9271  003B38  0E00               	movlw	0
  9272  003B3A  6F97               	movwf	_uart2TxTail& (0+255),b	;volatile
  9273  003B3C                     i2l4061:
  9274                           
  9275                           ; BSR set to: 0
  9276                           ;mcc_generated_files/uart2.c: 254:         uart2TxBufferRemaining++;
  9277  003B3C  2B96               	incf	_uart2TxBufferRemaining& (0+255),f,b	;volatile
  9278                           
  9279                           ;mcc_generated_files/uart2.c: 255:     }
  9280  003B3E  0012               	return	
  9281  003B40                     i2l516:
  9282                           
  9283                           ; BSR set to: 0
  9284                           ;mcc_generated_files/uart2.c: 257:     {;mcc_generated_files/uart2.c: 258:         PIE6b
      +                          its.U2TXIE = 0;
  9285  003B40  0139               	movlb	57	; () banked
  9286  003B42  9796               	bcf	150,3,b	;volatile
  9287  003B44  0012               	return		;funcret
  9288  003B46                     __end_of_UART2_Transmit_ISR:
  9289                           	opt callstack 0
  9290                           
  9291 ;; *************** function _UART2_rx_vect_isr *****************
  9292 ;; Defined at:
  9293 ;;		line 234 in file "mcc_generated_files/uart2.c"
  9294 ;; Parameters:    Size  Location     Type
  9295 ;;		None
  9296 ;; Auto vars:     Size  Location     Type
  9297 ;;		None
  9298 ;; Return value:  Size  Location     Type
  9299 ;;                  1    wreg      void 
  9300 ;; Registers used:
  9301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  9302 ;; Tracked objects:
  9303 ;;		On entry : 0/0
  9304 ;;		On exit  : 0/0
  9305 ;;		Unchanged: 0/0
  9306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9311 ;;Total ram usage:        0 bytes
  9312 ;; Hardware stack levels used:    1
  9313 ;; Hardware stack levels required when called:    3
  9314 ;; This function calls:
  9315 ;;		Absolute function
  9316 ;;		_UART2_Receive_ISR
  9317 ;; This function is called by:
  9318 ;;		Interrupt level 2
  9319 ;; This function uses a non-reentrant model
  9320 ;;
  9321                           
  9322                           	psect	text74
  9323  003CF8                     __ptext74:
  9324                           	opt callstack 0
  9325  003CF8                     _UART2_rx_vect_isr:
  9326                           	opt callstack 17
  9327                           
  9328                           ;mcc_generated_files/uart2.c: 236:     if(UART2_RxInterruptHandler)
  9329                           
  9330                           ;incstack = 0
  9331  003CF8  0101               	movlb	1	; () banked
  9332  003CFA  5163               	movf	_UART2_RxInterruptHandler& (0+255),w,b
  9333  003CFC  1164               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
  9334  003CFE  1165               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
  9335  003D00  B4D8               	btfsc	status,2,c
  9336  003D02  0011               	retfie		f
  9337                           
  9338                           ; BSR set to: 1
  9339                           ;mcc_generated_files/uart2.c: 237:     {;mcc_generated_files/uart2.c: 238:         UART2
      +                          _RxInterruptHandler();
  9340  003D04  D801               	call	i2u296_48
  9341  003D06  0011               	retfie		f
  9342  003D08                     i2u296_48:
  9343  003D08  0005               	push	
  9344  003D0A  6EFA               	movwf	pclath,c
  9345  003D0C  5163               	movf	_UART2_RxInterruptHandler& (0+255),w,b
  9346  003D0E  6EFD               	movwf	tosl,c
  9347  003D10  5164               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
  9348  003D12  6EFE               	movwf	tosh,c
  9349  003D14  5165               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
  9350  003D16  6EFF               	movwf	tosu,c
  9351  003D18  50FA               	movf	pclath,w,c
  9352  003D1A  0012               	return		;indir
  9353  003D1C                     __end_of_UART2_rx_vect_isr:
  9354                           	opt callstack 0
  9355                           
  9356 ;; *************** function _UART2_Receive_ISR *****************
  9357 ;; Defined at:
  9358 ;;		line 264 in file "mcc_generated_files/uart2.c"
  9359 ;; Parameters:    Size  Location     Type
  9360 ;;		None
  9361 ;; Auto vars:     Size  Location     Type
  9362 ;;		None
  9363 ;; Return value:  Size  Location     Type
  9364 ;;                  1    wreg      void 
  9365 ;; Registers used:
  9366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  9367 ;; Tracked objects:
  9368 ;;		On entry : 3F/1
  9369 ;;		On exit  : 0/0
  9370 ;;		Unchanged: 0/0
  9371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9376 ;;Total ram usage:        0 bytes
  9377 ;; Hardware stack levels used:    1
  9378 ;; Hardware stack levels required when called:    2
  9379 ;; This function calls:
  9380 ;;		Absolute function
  9381 ;;		_UART2_DefaultErrorHandler
  9382 ;;		_UART2_DefaultFramingErrorHandler
  9383 ;;		_UART2_DefaultOverrunErrorHandler
  9384 ;;		_UART2_RxDataHandler
  9385 ;; This function is called by:
  9386 ;;		_UART2_Initialize
  9387 ;;		_UART2_rx_vect_isr
  9388 ;; This function uses a non-reentrant model
  9389 ;;
  9390                           
  9391                           	psect	text75
  9392  003382                     __ptext75:
  9393                           	opt callstack 0
  9394  003382                     _UART2_Receive_ISR:
  9395                           	opt callstack 17
  9396                           
  9397                           ; BSR set to: 1
  9398                           ;mcc_generated_files/uart2.c: 267:     uart2RxStatusBuffer[uart2RxHead].status = 0;
  9399                           
  9400                           ;incstack = 0
  9401  003382  0E0E               	movlw	low _uart2RxStatusBuffer
  9402  003384  2459               	addwf	_uart2RxHead^0,w,c	;volatile
  9403  003386  6ED9               	movwf	fsr2l,c
  9404  003388  6ADA               	clrf	fsr2h,c
  9405  00338A  0E01               	movlw	high _uart2RxStatusBuffer
  9406  00338C  22DA               	addwfc	fsr2h,f,c
  9407  00338E  0E00               	movlw	0
  9408  003390  6EDF               	movwf	indf2,c
  9409                           
  9410                           ; BSR set to: 1
  9411                           ;mcc_generated_files/uart2.c: 269:     if(U2ERRIRbits.FERIF){
  9412  003392  013D               	movlb	61	; () banked
  9413  003394  A7E1               	btfss	225,3,b	;volatile
  9414  003396  D014               	goto	i2u251_49
  9415                           
  9416                           ; BSR set to: 61
  9417                           ;mcc_generated_files/uart2.c: 270:         uart2RxStatusBuffer[uart2RxHead].ferr = 1;
  9418  003398  0E0E               	movlw	low _uart2RxStatusBuffer
  9419  00339A  2459               	addwf	_uart2RxHead^0,w,c	;volatile
  9420  00339C  6ED9               	movwf	fsr2l,c
  9421  00339E  6ADA               	clrf	fsr2h,c
  9422  0033A0  0E01               	movlw	high _uart2RxStatusBuffer
  9423  0033A2  22DA               	addwfc	fsr2h,f,c
  9424  0033A4  0101               	movlb	1	; () banked
  9425  0033A6  82DF               	bsf	indf2,1,c
  9426                           
  9427                           ; BSR set to: 1
  9428                           ;mcc_generated_files/uart2.c: 271:         UART2_FramingErrorHandler();
  9429  0033A8  D801               	call	i2u251_48
  9430  0033AA  D00A               	goto	i2u251_49
  9431  0033AC                     i2u251_48:
  9432  0033AC  0005               	push	
  9433  0033AE  6EFA               	movwf	pclath,c
  9434  0033B0  514E               	movf	_UART2_FramingErrorHandler& (0+255),w,b
  9435  0033B2  6EFD               	movwf	tosl,c
  9436  0033B4  514F               	movf	(_UART2_FramingErrorHandler+1)& (0+255),w,b
  9437  0033B6  6EFE               	movwf	tosh,c
  9438  0033B8  5150               	movf	(_UART2_FramingErrorHandler+2)& (0+255),w,b
  9439  0033BA  6EFF               	movwf	tosu,c
  9440  0033BC  50FA               	movf	pclath,w,c
  9441  0033BE  0012               	return		;indir
  9442  0033C0                     i2u251_49:
  9443                           
  9444                           ;mcc_generated_files/uart2.c: 274:     if(U2ERRIRbits.RXFOIF){
  9445  0033C0  013D               	movlb	61	; () banked
  9446  0033C2  A3E1               	btfss	225,1,b	;volatile
  9447  0033C4  D014               	goto	i2u253_49
  9448                           
  9449                           ; BSR set to: 61
  9450                           ;mcc_generated_files/uart2.c: 275:         uart2RxStatusBuffer[uart2RxHead].oerr = 1;
  9451  0033C6  0E0E               	movlw	low _uart2RxStatusBuffer
  9452  0033C8  2459               	addwf	_uart2RxHead^0,w,c	;volatile
  9453  0033CA  6ED9               	movwf	fsr2l,c
  9454  0033CC  6ADA               	clrf	fsr2h,c
  9455  0033CE  0E01               	movlw	high _uart2RxStatusBuffer
  9456  0033D0  22DA               	addwfc	fsr2h,f,c
  9457  0033D2  0101               	movlb	1	; () banked
  9458  0033D4  84DF               	bsf	indf2,2,c
  9459                           
  9460                           ; BSR set to: 1
  9461                           ;mcc_generated_files/uart2.c: 276:         UART2_OverrunErrorHandler();
  9462  0033D6  D801               	call	i2u253_48
  9463  0033D8  D00A               	goto	i2u253_49
  9464  0033DA                     i2u253_48:
  9465  0033DA  0005               	push	
  9466  0033DC  6EFA               	movwf	pclath,c
  9467  0033DE  514B               	movf	_UART2_OverrunErrorHandler& (0+255),w,b
  9468  0033E0  6EFD               	movwf	tosl,c
  9469  0033E2  514C               	movf	(_UART2_OverrunErrorHandler+1)& (0+255),w,b
  9470  0033E4  6EFE               	movwf	tosh,c
  9471  0033E6  514D               	movf	(_UART2_OverrunErrorHandler+2)& (0+255),w,b
  9472  0033E8  6EFF               	movwf	tosu,c
  9473  0033EA  50FA               	movf	pclath,w,c
  9474  0033EC  0012               	return		;indir
  9475  0033EE                     i2u253_49:
  9476                           
  9477                           ;mcc_generated_files/uart2.c: 279:     if(uart2RxStatusBuffer[uart2RxHead].status){
  9478  0033EE  0E0E               	movlw	low _uart2RxStatusBuffer
  9479  0033F0  2459               	addwf	_uart2RxHead^0,w,c	;volatile
  9480  0033F2  6ED9               	movwf	fsr2l,c
  9481  0033F4  6ADA               	clrf	fsr2h,c
  9482  0033F6  0E01               	movlw	high _uart2RxStatusBuffer
  9483  0033F8  22DA               	addwfc	fsr2h,f,c
  9484  0033FA  50DF               	movf	indf2,w,c
  9485  0033FC  B4D8               	btfsc	status,2,c
  9486  0033FE  D00D               	goto	i2l4081
  9487                           
  9488                           ;mcc_generated_files/uart2.c: 280:         UART2_ErrorHandler();
  9489  003400  D801               	call	i2u255_48
  9490  003402  0012               	return	
  9491  003404                     i2u255_48:
  9492  003404  0005               	push	
  9493  003406  6EFA               	movwf	pclath,c
  9494  003408  0101               	movlb	1	; () banked
  9495  00340A  5148               	movf	_UART2_ErrorHandler& (0+255),w,b
  9496  00340C  6EFD               	movwf	tosl,c
  9497  00340E  5149               	movf	(_UART2_ErrorHandler+1)& (0+255),w,b
  9498  003410  6EFE               	movwf	tosh,c
  9499  003412  514A               	movf	(_UART2_ErrorHandler+2)& (0+255),w,b
  9500  003414  6EFF               	movwf	tosu,c
  9501  003416  50FA               	movf	pclath,w,c
  9502  003418  0012               	return		;indir
  9503  00341A                     i2l4081:
  9504                           
  9505                           ;mcc_generated_files/uart2.c: 282:         UART2_RxDataHandler();
  9506  00341A  EC8E  F01E         	call	_UART2_RxDataHandler	;wreg free
  9507  00341E  0012               	return		;funcret
  9508  003420                     __end_of_UART2_Receive_ISR:
  9509                           	opt callstack 0
  9510                           
  9511 ;; *************** function _UART2_DefaultOverrunErrorHandler *****************
  9512 ;; Defined at:
  9513 ;;		line 300 in file "mcc_generated_files/uart2.c"
  9514 ;; Parameters:    Size  Location     Type
  9515 ;;		None
  9516 ;; Auto vars:     Size  Location     Type
  9517 ;;		None
  9518 ;; Return value:  Size  Location     Type
  9519 ;;                  1    wreg      void 
  9520 ;; Registers used:
  9521 ;;		None
  9522 ;; Tracked objects:
  9523 ;;		On entry : 3F/1
  9524 ;;		On exit  : 3F/1
  9525 ;;		Unchanged: 3F/0
  9526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9531 ;;Total ram usage:        0 bytes
  9532 ;; Hardware stack levels used:    1
  9533 ;; This function calls:
  9534 ;;		Nothing
  9535 ;; This function is called by:
  9536 ;;		_UART2_Initialize
  9537 ;;		_UART2_Receive_ISR
  9538 ;; This function uses a non-reentrant model
  9539 ;;
  9540                           
  9541                           	psect	text76
  9542  003FCA                     __ptext76:
  9543                           	opt callstack 0
  9544  003FCA                     _UART2_DefaultOverrunErrorHandler:
  9545                           	opt callstack 18
  9546                           
  9547                           ; BSR set to: 1
  9548                           
  9549                           ;incstack = 0
  9550  003FCA  0012               	return		;funcret
  9551  003FCC                     __end_of_UART2_DefaultOverrunErrorHandler:
  9552                           	opt callstack 0
  9553                           
  9554 ;; *************** function _UART2_DefaultFramingErrorHandler *****************
  9555 ;; Defined at:
  9556 ;;		line 298 in file "mcc_generated_files/uart2.c"
  9557 ;; Parameters:    Size  Location     Type
  9558 ;;		None
  9559 ;; Auto vars:     Size  Location     Type
  9560 ;;		None
  9561 ;; Return value:  Size  Location     Type
  9562 ;;                  1    wreg      void 
  9563 ;; Registers used:
  9564 ;;		None
  9565 ;; Tracked objects:
  9566 ;;		On entry : 3F/1
  9567 ;;		On exit  : 3F/1
  9568 ;;		Unchanged: 3F/0
  9569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9574 ;;Total ram usage:        0 bytes
  9575 ;; Hardware stack levels used:    1
  9576 ;; This function calls:
  9577 ;;		Nothing
  9578 ;; This function is called by:
  9579 ;;		_UART2_Initialize
  9580 ;;		_UART2_Receive_ISR
  9581 ;; This function uses a non-reentrant model
  9582 ;;
  9583                           
  9584                           	psect	text77
  9585  003FCC                     __ptext77:
  9586                           	opt callstack 0
  9587  003FCC                     _UART2_DefaultFramingErrorHandler:
  9588                           	opt callstack 18
  9589                           
  9590                           ; BSR set to: 1
  9591                           
  9592                           ; BSR set to: 1
  9593                           ;incstack = 0
  9594  003FCC  0012               	return		;funcret
  9595  003FCE                     __end_of_UART2_DefaultFramingErrorHandler:
  9596                           	opt callstack 0
  9597                           
  9598 ;; *************** function _UART2_DefaultErrorHandler *****************
  9599 ;; Defined at:
  9600 ;;		line 302 in file "mcc_generated_files/uart2.c"
  9601 ;; Parameters:    Size  Location     Type
  9602 ;;		None
  9603 ;; Auto vars:     Size  Location     Type
  9604 ;;		None
  9605 ;; Return value:  Size  Location     Type
  9606 ;;                  1    wreg      void 
  9607 ;; Registers used:
  9608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9609 ;; Tracked objects:
  9610 ;;		On entry : 3F/1
  9611 ;;		On exit  : 3F/0
  9612 ;;		Unchanged: 0/0
  9613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9618 ;;Total ram usage:        0 bytes
  9619 ;; Hardware stack levels used:    1
  9620 ;; Hardware stack levels required when called:    1
  9621 ;; This function calls:
  9622 ;;		_UART2_RxDataHandler
  9623 ;; This function is called by:
  9624 ;;		_UART2_Initialize
  9625 ;;		_UART2_Receive_ISR
  9626 ;; This function uses a non-reentrant model
  9627 ;;
  9628                           
  9629                           	psect	text78
  9630  003FBA                     __ptext78:
  9631                           	opt callstack 0
  9632  003FBA                     _UART2_DefaultErrorHandler:
  9633                           	opt callstack 17
  9634                           
  9635                           ; BSR set to: 1
  9636                           ;mcc_generated_files/uart2.c: 303:     UART2_RxDataHandler();
  9637                           
  9638                           ; BSR set to: 1
  9639                           ;incstack = 0
  9640  003FBA  EC8E  F01E         	call	_UART2_RxDataHandler	;wreg free
  9641                           
  9642                           ; BSR set to: 0
  9643  003FBE  0012               	return		;funcret
  9644  003FC0                     __end_of_UART2_DefaultErrorHandler:
  9645                           	opt callstack 0
  9646                           
  9647 ;; *************** function _UART2_RxDataHandler *****************
  9648 ;; Defined at:
  9649 ;;		line 288 in file "mcc_generated_files/uart2.c"
  9650 ;; Parameters:    Size  Location     Type
  9651 ;;		None
  9652 ;; Auto vars:     Size  Location     Type
  9653 ;;		None
  9654 ;; Return value:  Size  Location     Type
  9655 ;;                  1    wreg      void 
  9656 ;; Registers used:
  9657 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9658 ;; Tracked objects:
  9659 ;;		On entry : 0/3D
  9660 ;;		On exit  : 3F/0
  9661 ;;		Unchanged: 0/0
  9662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9667 ;;Total ram usage:        0 bytes
  9668 ;; Hardware stack levels used:    1
  9669 ;; This function calls:
  9670 ;;		Nothing
  9671 ;; This function is called by:
  9672 ;;		_UART2_Receive_ISR
  9673 ;;		_UART2_DefaultErrorHandler
  9674 ;; This function uses a non-reentrant model
  9675 ;;
  9676                           
  9677                           	psect	text79
  9678  003D1C                     __ptext79:
  9679                           	opt callstack 0
  9680  003D1C                     _UART2_RxDataHandler:
  9681                           	opt callstack 18
  9682                           
  9683                           ;mcc_generated_files/uart2.c: 290:     uart2RxBuffer[uart2RxHead++] = U2RXB;
  9684                           
  9685                           ; BSR set to: 0
  9686                           ;incstack = 0
  9687  003D1C  0E16               	movlw	low _uart2RxBuffer
  9688  003D1E  2459               	addwf	_uart2RxHead^0,w,c	;volatile
  9689  003D20  6ED9               	movwf	fsr2l,c
  9690  003D22  6ADA               	clrf	fsr2h,c
  9691  003D24  0E01               	movlw	high _uart2RxBuffer
  9692  003D26  22DA               	addwfc	fsr2h,f,c
  9693  003D28  006F F743 FFDF     	movff	15824,indf2	;volatile
  9694  003D2E  2A59               	incf	_uart2RxHead^0,f,c	;volatile
  9695                           
  9696                           ;mcc_generated_files/uart2.c: 291:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
  9697  003D30  0E07               	movlw	7
  9698  003D32  6459               	cpfsgt	_uart2RxHead^0,c
  9699  003D34  D002               	goto	i2l3667
  9700                           
  9701                           ;mcc_generated_files/uart2.c: 292:     {;mcc_generated_files/uart2.c: 293:         uart2
      +                          RxHead = 0;
  9702  003D36  0E00               	movlw	0
  9703  003D38  6E59               	movwf	_uart2RxHead^0,c	;volatile
  9704  003D3A                     i2l3667:
  9705                           
  9706                           ;mcc_generated_files/uart2.c: 295:     uart2RxCount++;
  9707  003D3A  0100               	movlb	0	; () banked
  9708  003D3C  2B95               	incf	_uart2RxCount& (0+255),f,b	;volatile
  9709                           
  9710                           ; BSR set to: 0
  9711  003D3E  0012               	return		;funcret
  9712  003D40                     __end_of_UART2_RxDataHandler:
  9713                           	opt callstack 0
  9714                           
  9715 ;; *************** function _TMR6_ISR *****************
  9716 ;; Defined at:
  9717 ;;		line 168 in file "mcc_generated_files/tmr6.c"
  9718 ;; Parameters:    Size  Location     Type
  9719 ;;		None
  9720 ;; Auto vars:     Size  Location     Type
  9721 ;;		None
  9722 ;; Return value:  Size  Location     Type
  9723 ;;                  1    wreg      void 
  9724 ;; Registers used:
  9725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  9726 ;; Tracked objects:
  9727 ;;		On entry : 0/0
  9728 ;;		On exit  : 0/0
  9729 ;;		Unchanged: 0/0
  9730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9735 ;;Total ram usage:        0 bytes
  9736 ;; Hardware stack levels used:    1
  9737 ;; Hardware stack levels required when called:    1
  9738 ;; This function calls:
  9739 ;;		Absolute function
  9740 ;;		_TMR6_DefaultInterruptHandler
  9741 ;; This function is called by:
  9742 ;;		Interrupt level 2
  9743 ;; This function uses a non-reentrant model
  9744 ;;
  9745                           
  9746                           	psect	text80
  9747  003BF8                     __ptext80:
  9748                           	opt callstack 0
  9749  003BF8                     _TMR6_ISR:
  9750                           	opt callstack 19
  9751                           
  9752                           ;mcc_generated_files/tmr6.c: 172:  PIR9bits.TMR6IF = 0;
  9753                           
  9754                           ; BSR set to: 0
  9755                           ;incstack = 0
  9756  003BF8  0139               	movlb	57	; () banked
  9757  003BFA  91A9               	bcf	169,0,b	;volatile
  9758                           
  9759                           ; BSR set to: 57
  9760                           ;mcc_generated_files/tmr6.c: 174:  if (TMR6_InterruptHandler) {
  9761  003BFC  0101               	movlb	1	; () banked
  9762  003BFE  5145               	movf	_TMR6_InterruptHandler& (0+255),w,b
  9763  003C00  1146               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
  9764  003C02  1147               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
  9765  003C04  B4D8               	btfsc	status,2,c
  9766  003C06  0011               	retfie		f
  9767                           
  9768                           ; BSR set to: 1
  9769                           ;mcc_generated_files/tmr6.c: 175:   TMR6_InterruptHandler();
  9770  003C08  D801               	call	i2u298_48
  9771  003C0A  0011               	retfie		f
  9772  003C0C                     i2u298_48:
  9773  003C0C  0005               	push	
  9774  003C0E  6EFA               	movwf	pclath,c
  9775  003C10  5145               	movf	_TMR6_InterruptHandler& (0+255),w,b
  9776  003C12  6EFD               	movwf	tosl,c
  9777  003C14  5146               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
  9778  003C16  6EFE               	movwf	tosh,c
  9779  003C18  5147               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
  9780  003C1A  6EFF               	movwf	tosu,c
  9781  003C1C  50FA               	movf	pclath,w,c
  9782  003C1E  0012               	return		;indir
  9783  003C20                     __end_of_TMR6_ISR:
  9784                           	opt callstack 0
  9785                           
  9786 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  9787 ;; Defined at:
  9788 ;;		line 184 in file "mcc_generated_files/tmr6.c"
  9789 ;; Parameters:    Size  Location     Type
  9790 ;;		None
  9791 ;; Auto vars:     Size  Location     Type
  9792 ;;  i               1    2[COMRAM] unsigned char 
  9793 ;; Return value:  Size  Location     Type
  9794 ;;                  1    wreg      void 
  9795 ;; Registers used:
  9796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9797 ;; Tracked objects:
  9798 ;;		On entry : 3F/1
  9799 ;;		On exit  : 3F/1
  9800 ;;		Unchanged: 3F/0
  9801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9803 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9804 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9805 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9806 ;;Total ram usage:        3 bytes
  9807 ;; Hardware stack levels used:    1
  9808 ;; This function calls:
  9809 ;;		Nothing
  9810 ;; This function is called by:
  9811 ;;		_TMR6_Initialize
  9812 ;;		_TMR6_ISR
  9813 ;; This function uses a non-reentrant model
  9814 ;;
  9815                           
  9816                           	psect	text81
  9817  003960                     __ptext81:
  9818                           	opt callstack 0
  9819  003960                     _TMR6_DefaultInterruptHandler:
  9820                           	opt callstack 19
  9821                           
  9822                           ; BSR set to: 1
  9823                           ;mcc_generated_files/tmr6.c: 186:  uint8_t i;;mcc_generated_files/tmr6.c: 190:  for (i =
      +                           0; i < TMR_COUNT; i++) {
  9824                           
  9825                           ;incstack = 0
  9826  003960  0E00               	movlw	0
  9827  003962  6E03               	movwf	TMR6_DefaultInterruptHandler@i^0,c
  9828  003964                     i2l4089:
  9829                           
  9830                           ; BSR set to: 1
  9831                           ;mcc_generated_files/tmr6.c: 191:   if (tickCount[i] != 0) {
  9832  003964  5003               	movf	TMR6_DefaultInterruptHandler@i^0,w,c
  9833  003966  0D02               	mullw	2
  9834  003968  0E00               	movlw	low _tickCount
  9835  00396A  24F3               	addwf	243,w,c
  9836  00396C  6ED9               	movwf	fsr2l,c
  9837  00396E  0E01               	movlw	high _tickCount
  9838  003970  20F4               	addwfc	prodh,w,c
  9839  003972  6EDA               	movwf	fsr2h,c
  9840  003974  50DE               	movf	postinc2,w,c
  9841  003976  10DE               	iorwf	postinc2,w,c
  9842  003978  B4D8               	btfsc	status,2,c
  9843  00397A  D00B               	goto	i2l4093
  9844                           
  9845                           ; BSR set to: 1
  9846                           ;mcc_generated_files/tmr6.c: 192:    tickCount[i]--;
  9847  00397C  5003               	movf	TMR6_DefaultInterruptHandler@i^0,w,c
  9848  00397E  0D02               	mullw	2
  9849  003980  0E00               	movlw	low _tickCount
  9850  003982  24F3               	addwf	243,w,c
  9851  003984  6ED9               	movwf	fsr2l,c
  9852  003986  0E01               	movlw	high _tickCount
  9853  003988  20F4               	addwfc	prodh,w,c
  9854  00398A  6EDA               	movwf	fsr2h,c
  9855  00398C  06DE               	decf	postinc2,f,c
  9856  00398E  0E00               	movlw	0
  9857  003990  5ADD               	subwfb	postdec2,f,c
  9858  003992                     i2l4093:
  9859                           
  9860                           ; BSR set to: 1
  9861                           ;mcc_generated_files/tmr6.c: 194:  }
  9862  003992  2A03               	incf	TMR6_DefaultInterruptHandler@i^0,f,c
  9863                           
  9864                           ; BSR set to: 1
  9865  003994  0E06               	movlw	6
  9866  003996  6403               	cpfsgt	TMR6_DefaultInterruptHandler@i^0,c
  9867  003998  D7E5               	goto	i2l4089
  9868  00399A  0012               	return	
  9869  00399C                     __end_of_TMR6_DefaultInterruptHandler:
  9870                           	opt callstack 0
  9871                           
  9872 ;; *************** function _TMR5_ISR *****************
  9873 ;; Defined at:
  9874 ;;		line 166 in file "mcc_generated_files/tmr5.c"
  9875 ;; Parameters:    Size  Location     Type
  9876 ;;		None
  9877 ;; Auto vars:     Size  Location     Type
  9878 ;;		None
  9879 ;; Return value:  Size  Location     Type
  9880 ;;                  1    wreg      void 
  9881 ;; Registers used:
  9882 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9883 ;; Tracked objects:
  9884 ;;		On entry : 0/0
  9885 ;;		On exit  : 3F/1
  9886 ;;		Unchanged: 0/0
  9887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9892 ;;Total ram usage:        0 bytes
  9893 ;; Hardware stack levels used:    1
  9894 ;; Hardware stack levels required when called:    2
  9895 ;; This function calls:
  9896 ;;		_TMR5_CallBack
  9897 ;;		_TMR5_WriteTimer
  9898 ;; This function is called by:
  9899 ;;		Interrupt level 2
  9900 ;; This function uses a non-reentrant model
  9901 ;;
  9902                           
  9903                           	psect	text82
  9904  003A48                     __ptext82:
  9905                           	opt callstack 0
  9906  003A48                     _TMR5_ISR:
  9907                           	opt callstack 18
  9908                           
  9909                           ;mcc_generated_files/tmr5.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr5.c: 171:     PIR8bits.TMR5IF = 0;
  9910                           
  9911                           ; BSR set to: 1
  9912                           ;incstack = 0
  9913  003A48  0139               	movlb	57	; () banked
  9914  003A4A  9DA8               	bcf	168,6,b	;volatile
  9915                           
  9916                           ; BSR set to: 57
  9917                           ;mcc_generated_files/tmr5.c: 172:     TMR5_WriteTimer(timer5ReloadVal);
  9918  003A4C  0060  F5B8  F004   	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
  9919  003A52  0060  F5BC  F005   	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
  9920  003A58  ECA0  F01E         	call	_TMR5_WriteTimer	;wreg free
  9921                           
  9922                           ; BSR set to: 57
  9923                           ;mcc_generated_files/tmr5.c: 175:     if (++CountCallBack >= 50)
  9924  003A5C  0101               	movlb	1	; () banked
  9925  003A5E  4B6C               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
  9926  003A60  2B6D               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  9927  003A62  516D               	movf	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  9928  003A64  E104               	bnz	i2u299_40
  9929  003A66  0E32               	movlw	50
  9930  003A68  5D6C               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
  9931  003A6A  A0D8               	btfss	status,0,c
  9932  003A6C  0011               	retfie		f
  9933  003A6E                     i2u299_40:
  9934                           
  9935                           ; BSR set to: 1
  9936                           ;mcc_generated_files/tmr5.c: 176:     {;mcc_generated_files/tmr5.c: 178:         TMR5_Ca
      +                          llBack();
  9937  003A6E  ECD4  F01E         	call	_TMR5_CallBack	;wreg free
  9938                           
  9939                           ;mcc_generated_files/tmr5.c: 181:         CountCallBack = 0;
  9940  003A72  0E00               	movlw	0
  9941  003A74  0101               	movlb	1	; () banked
  9942  003A76  6F6D               	movwf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
  9943  003A78  0E00               	movlw	0
  9944  003A7A  6F6C               	movwf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
  9945                           
  9946                           ; BSR set to: 1
  9947  003A7C  0011               	retfie		f
  9948  003A7E                     __end_of_TMR5_ISR:
  9949                           	opt callstack 0
  9950                           
  9951 ;; *************** function _TMR5_WriteTimer *****************
  9952 ;; Defined at:
  9953 ;;		line 129 in file "mcc_generated_files/tmr5.c"
  9954 ;; Parameters:    Size  Location     Type
  9955 ;;  timerVal        2    3[COMRAM] unsigned short 
  9956 ;; Auto vars:     Size  Location     Type
  9957 ;;		None
  9958 ;; Return value:  Size  Location     Type
  9959 ;;                  1    wreg      void 
  9960 ;; Registers used:
  9961 ;;		None
  9962 ;; Tracked objects:
  9963 ;;		On entry : 3F/39
  9964 ;;		On exit  : 3F/39
  9965 ;;		Unchanged: 3E/0
  9966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9967 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9970 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9971 ;;Total ram usage:        2 bytes
  9972 ;; Hardware stack levels used:    1
  9973 ;; This function calls:
  9974 ;;		Nothing
  9975 ;; This function is called by:
  9976 ;;		_TMR5_ISR
  9977 ;; This function uses a non-reentrant model
  9978 ;;
  9979                           
  9980                           	psect	text83
  9981  003D40                     __ptext83:
  9982                           	opt callstack 0
  9983  003D40                     _TMR5_WriteTimer:
  9984                           	opt callstack 19
  9985                           
  9986                           ; BSR set to: 57
  9987                           ;mcc_generated_files/tmr5.c: 129: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 130: {;mcc_generated_files/tmr5.c: 131:     if (T5CONbits.NOT_SYNC == 1)
  9988                           
  9989                           ; BSR set to: 1
  9990                           ;incstack = 0
  9991  003D40  A49A               	btfss	154,2,c	;volatile
  9992  003D42  D009               	goto	i2l774
  9993                           
  9994                           ; BSR set to: 57
  9995                           ;mcc_generated_files/tmr5.c: 132:     {;mcc_generated_files/tmr5.c: 134:         T5CONbi
      +                          ts.TMR5ON = 0;
  9996  003D44  909A               	bcf	154,0,c	;volatile
  9997                           
  9998                           ;mcc_generated_files/tmr5.c: 137:         TMR5H = (timerVal >> 8);
  9999  003D46  0060  F017  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 10000                           
 10001                           ;mcc_generated_files/tmr5.c: 138:         TMR5L = timerVal;
 10002  003D4C  0060  F013  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 10003                           
 10004                           ;mcc_generated_files/tmr5.c: 141:         T5CONbits.TMR5ON =1;
 10005  003D52  809A               	bsf	154,0,c	;volatile
 10006                           
 10007                           ;mcc_generated_files/tmr5.c: 142:     }
 10008  003D54  0012               	return	
 10009  003D56                     i2l774:
 10010                           
 10011                           ; BSR set to: 57
 10012                           ;mcc_generated_files/tmr5.c: 144:     {;mcc_generated_files/tmr5.c: 146:         TMR5H =
      +                           (timerVal >> 8);
 10013  003D56  0060  F017  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 10014                           
 10015                           ;mcc_generated_files/tmr5.c: 147:         TMR5L = timerVal;
 10016  003D5C  0060  F013  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 10017                           
 10018                           ; BSR set to: 57
 10019  003D62  0012               	return		;funcret
 10020  003D64                     __end_of_TMR5_WriteTimer:
 10021                           	opt callstack 0
 10022                           
 10023 ;; *************** function _TMR5_CallBack *****************
 10024 ;; Defined at:
 10025 ;;		line 185 in file "mcc_generated_files/tmr5.c"
 10026 ;; Parameters:    Size  Location     Type
 10027 ;;		None
 10028 ;; Auto vars:     Size  Location     Type
 10029 ;;		None
 10030 ;; Return value:  Size  Location     Type
 10031 ;;                  1    wreg      void 
 10032 ;; Registers used:
 10033 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10034 ;; Tracked objects:
 10035 ;;		On entry : 3F/1
 10036 ;;		On exit  : 0/0
 10037 ;;		Unchanged: 0/0
 10038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10043 ;;Total ram usage:        0 bytes
 10044 ;; Hardware stack levels used:    1
 10045 ;; Hardware stack levels required when called:    1
 10046 ;; This function calls:
 10047 ;;		Absolute function
 10048 ;;		_TMR5_DefaultInterruptHandler
 10049 ;; This function is called by:
 10050 ;;		_TMR5_ISR
 10051 ;; This function uses a non-reentrant model
 10052 ;;
 10053                           
 10054                           	psect	text84
 10055  003DA8                     __ptext84:
 10056                           	opt callstack 0
 10057  003DA8                     _TMR5_CallBack:
 10058                           	opt callstack 18
 10059                           
 10060                           ; BSR set to: 1
 10061                           ;mcc_generated_files/tmr5.c: 188:     if(TMR5_InterruptHandler)
 10062                           
 10063                           ; BSR set to: 57
 10064                           ;incstack = 0
 10065  003DA8  5142               	movf	_TMR5_InterruptHandler& (0+255),w,b
 10066  003DAA  1143               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 10067  003DAC  1144               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 10068  003DAE  B4D8               	btfsc	status,2,c
 10069  003DB0  0012               	return	
 10070                           
 10071                           ; BSR set to: 1
 10072                           ;mcc_generated_files/tmr5.c: 189:     {;mcc_generated_files/tmr5.c: 190:         TMR5_In
      +                          terruptHandler();
 10073  003DB2  D801               	call	i2u260_48
 10074  003DB4  0012               	return	
 10075  003DB6                     i2u260_48:
 10076  003DB6  0005               	push	
 10077  003DB8  6EFA               	movwf	pclath,c
 10078  003DBA  5142               	movf	_TMR5_InterruptHandler& (0+255),w,b
 10079  003DBC  6EFD               	movwf	tosl,c
 10080  003DBE  5143               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 10081  003DC0  6EFE               	movwf	tosh,c
 10082  003DC2  5144               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 10083  003DC4  6EFF               	movwf	tosu,c
 10084  003DC6  50FA               	movf	pclath,w,c
 10085  003DC8  0012               	return		;indir
 10086  003DCA                     __end_of_TMR5_CallBack:
 10087                           	opt callstack 0
 10088                           
 10089 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 10090 ;; Defined at:
 10091 ;;		line 198 in file "mcc_generated_files/tmr5.c"
 10092 ;; Parameters:    Size  Location     Type
 10093 ;;		None
 10094 ;; Auto vars:     Size  Location     Type
 10095 ;;		None
 10096 ;; Return value:  Size  Location     Type
 10097 ;;                  1    wreg      void 
 10098 ;; Registers used:
 10099 ;;		wreg, status,2, status,0
 10100 ;; Tracked objects:
 10101 ;;		On entry : 3F/1
 10102 ;;		On exit  : 3F/1
 10103 ;;		Unchanged: 3F/0
 10104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10107 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10108 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10109 ;;Total ram usage:        1 bytes
 10110 ;; Hardware stack levels used:    1
 10111 ;; This function calls:
 10112 ;;		Nothing
 10113 ;; This function is called by:
 10114 ;;		_TMR5_Initialize
 10115 ;;		_TMR5_CallBack
 10116 ;; This function uses a non-reentrant model
 10117 ;;
 10118                           
 10119                           	psect	text85
 10120  003E3A                     __ptext85:
 10121                           	opt callstack 0
 10122  003E3A                     _TMR5_DefaultInterruptHandler:
 10123                           	opt callstack 18
 10124                           
 10125                           ; BSR set to: 1
 10126                           ;mcc_generated_files/tmr5.c: 201:   LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 10127                           
 10128                           ;incstack = 0
 10129  003E3A  A0BE               	btfss	190,0,c	;volatile
 10130  003E3C  D002               	goto	i2u232_40
 10131  003E3E  0E01               	movlw	1
 10132  003E40  D001               	goto	i2u232_46
 10133  003E42                     i2u232_40:
 10134  003E42  0E00               	movlw	0
 10135  003E44                     i2u232_46:
 10136  003E44  0AFF               	xorlw	255
 10137  003E46  6E04               	movwf	??_TMR5_DefaultInterruptHandler^0,c
 10138  003E48  50BE               	movf	190,w,c	;volatile
 10139  003E4A  1804               	xorwf	??_TMR5_DefaultInterruptHandler^0,w,c
 10140  003E4C  0BFE               	andlw	-2
 10141  003E4E  1804               	xorwf	??_TMR5_DefaultInterruptHandler^0,w,c
 10142  003E50  6EBE               	movwf	190,c	;volatile
 10143                           
 10144                           ; BSR set to: 1
 10145  003E52  0012               	return		;funcret
 10146  003E54                     __end_of_TMR5_DefaultInterruptHandler:
 10147                           	opt callstack 0
 10148                           
 10149                           ;
 10150                           ; Interrupt Vector Table @ 0x8
 10151                           ;
 10152                           
 10153                           	psect	ivt0x8
 10154  000008                     __pivt0x8:
 10155                           	opt callstack 0
 10156  000008                     ivt0x8_base:
 10157                           	opt callstack 0
 10158                           
 10159                           ; Vector 0 : SWINT
 10160  000008  0FF1               	dw	_Default_ISR shr (0+2)
 10161                           
 10162                           ; Vector 1 : HLVD
 10163  00000A  0FF1               	dw	_Default_ISR shr (0+2)
 10164                           
 10165                           ; Vector 2 : OSF
 10166  00000C  0FF1               	dw	_Default_ISR shr (0+2)
 10167                           
 10168                           ; Vector 3 : CSW
 10169  00000E  0FF1               	dw	_Default_ISR shr (0+2)
 10170                           
 10171                           ; Vector 4 : NVM
 10172  000010  0FF1               	dw	_Default_ISR shr (0+2)
 10173                           
 10174                           ; Vector 5 : SCAN
 10175  000012  0FF1               	dw	_Default_ISR shr (0+2)
 10176                           
 10177                           ; Vector 6 : CRC
 10178  000014  0FF1               	dw	_Default_ISR shr (0+2)
 10179                           
 10180                           ; Vector 7 : IOC
 10181  000016  0FF1               	dw	_Default_ISR shr (0+2)
 10182                           
 10183                           ; Vector 8 : INT0
 10184  000018  0FF1               	dw	_Default_ISR shr (0+2)
 10185                           
 10186                           ; Vector 9 : ZCD
 10187  00001A  0FF1               	dw	_Default_ISR shr (0+2)
 10188                           
 10189                           ; Vector 10 : AD
 10190  00001C  0FF1               	dw	_Default_ISR shr (0+2)
 10191                           
 10192                           ; Vector 11 : ADT
 10193  00001E  0FF1               	dw	_Default_ISR shr (0+2)
 10194                           
 10195                           ; Vector 12 : CMP1
 10196  000020  0FF1               	dw	_Default_ISR shr (0+2)
 10197                           
 10198                           ; Vector 13 : SMT1
 10199  000022  0FF1               	dw	_Default_ISR shr (0+2)
 10200                           
 10201                           ; Vector 14 : SMT1PRA
 10202  000024  0FF1               	dw	_Default_ISR shr (0+2)
 10203                           
 10204                           ; Vector 15 : SMT1PRW
 10205  000026  0FF1               	dw	_Default_ISR shr (0+2)
 10206                           
 10207                           ; Vector 16 : DMA1SCNT
 10208  000028  0FF1               	dw	_Default_ISR shr (0+2)
 10209                           
 10210                           ; Vector 17 : DMA1DCNT
 10211  00002A  0FF1               	dw	_Default_ISR shr (0+2)
 10212                           
 10213                           ; Vector 18 : DMA1OR
 10214  00002C  0FF1               	dw	_Default_ISR shr (0+2)
 10215                           
 10216                           ; Vector 19 : DMA1A
 10217  00002E  0FF1               	dw	_Default_ISR shr (0+2)
 10218                           
 10219                           ; Vector 20 : SPI1RX
 10220  000030  0FF1               	dw	_Default_ISR shr (0+2)
 10221                           
 10222                           ; Vector 21 : SPI1TX
 10223  000032  0FF1               	dw	_Default_ISR shr (0+2)
 10224                           
 10225                           ; Vector 22 : SPI1
 10226  000034  0FF1               	dw	_Default_ISR shr (0+2)
 10227                           
 10228                           ; Vector 23 : I2C1RX
 10229  000036  0FF1               	dw	_Default_ISR shr (0+2)
 10230                           
 10231                           ; Vector 24 : I2C1TX
 10232  000038  0FF1               	dw	_Default_ISR shr (0+2)
 10233                           
 10234                           ; Vector 25 : I2C1
 10235  00003A  0FF1               	dw	_Default_ISR shr (0+2)
 10236                           
 10237                           ; Vector 26 : I2C1E
 10238  00003C  0FF1               	dw	_Default_ISR shr (0+2)
 10239                           
 10240                           ; Vector 27 : U1RX
 10241  00003E  0F23               	dw	_UART1_rx_vect_isr shr (0+2)
 10242                           
 10243                           ; Vector 28 : U1TX
 10244  000040  0F1A               	dw	_UART1_tx_vect_isr shr (0+2)
 10245                           
 10246                           ; Vector 29 : U1E
 10247  000042  0FF1               	dw	_Default_ISR shr (0+2)
 10248                           
 10249                           ; Vector 30 : U1
 10250  000044  0FF1               	dw	_Default_ISR shr (0+2)
 10251                           
 10252                           ; Vector 31 : TMR0
 10253  000046  0FF1               	dw	_Default_ISR shr (0+2)
 10254                           
 10255                           ; Vector 32 : TMR1
 10256  000048  0FF1               	dw	_Default_ISR shr (0+2)
 10257                           
 10258                           ; Vector 33 : TMR1G
 10259  00004A  0FF1               	dw	_Default_ISR shr (0+2)
 10260                           
 10261                           ; Vector 34 : TMR2
 10262  00004C  0FF1               	dw	_Default_ISR shr (0+2)
 10263                           
 10264                           ; Vector 35 : CCP1
 10265  00004E  0FF1               	dw	_Default_ISR shr (0+2)
 10266                           
 10267                           ; Vector 36 : Undefined
 10268  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 10269                           
 10270                           ; Vector 37 : NCO1
 10271  000052  0FF1               	dw	_Default_ISR shr (0+2)
 10272                           
 10273                           ; Vector 38 : CWG1
 10274  000054  0FF1               	dw	_Default_ISR shr (0+2)
 10275                           
 10276                           ; Vector 39 : CLC1
 10277  000056  0FF1               	dw	_Default_ISR shr (0+2)
 10278                           
 10279                           ; Vector 40 : INT1
 10280  000058  0FF1               	dw	_Default_ISR shr (0+2)
 10281                           
 10282                           ; Vector 41 : CMP2
 10283  00005A  0FF1               	dw	_Default_ISR shr (0+2)
 10284                           
 10285                           ; Vector 42 : DMA2SCNT
 10286  00005C  0FF1               	dw	_Default_ISR shr (0+2)
 10287                           
 10288                           ; Vector 43 : DMA2DCNT
 10289  00005E  0FF1               	dw	_Default_ISR shr (0+2)
 10290                           
 10291                           ; Vector 44 : DMA2OR
 10292  000060  0FF1               	dw	_Default_ISR shr (0+2)
 10293                           
 10294                           ; Vector 45 : DMA2A
 10295  000062  0FF1               	dw	_Default_ISR shr (0+2)
 10296                           
 10297                           ; Vector 46 : I2C2RX
 10298  000064  0FF1               	dw	_Default_ISR shr (0+2)
 10299                           
 10300                           ; Vector 47 : I2C2TX
 10301  000066  0FF1               	dw	_Default_ISR shr (0+2)
 10302                           
 10303                           ; Vector 48 : I2C2
 10304  000068  0FF1               	dw	_Default_ISR shr (0+2)
 10305                           
 10306                           ; Vector 49 : I2C2E
 10307  00006A  0FF1               	dw	_Default_ISR shr (0+2)
 10308                           
 10309                           ; Vector 50 : U2RX
 10310  00006C  0F3E               	dw	_UART2_rx_vect_isr shr (0+2)
 10311                           
 10312                           ; Vector 51 : U2TX
 10313  00006E  0F35               	dw	_UART2_tx_vect_isr shr (0+2)
 10314                           
 10315                           ; Vector 52 : U2E
 10316  000070  0FF1               	dw	_Default_ISR shr (0+2)
 10317                           
 10318                           ; Vector 53 : U2
 10319  000072  0FF1               	dw	_Default_ISR shr (0+2)
 10320                           
 10321                           ; Vector 54 : TMR3
 10322  000074  0FF1               	dw	_Default_ISR shr (0+2)
 10323                           
 10324                           ; Vector 55 : TMR3G
 10325  000076  0FF1               	dw	_Default_ISR shr (0+2)
 10326                           
 10327                           ; Vector 56 : TMR4
 10328  000078  0FF1               	dw	_Default_ISR shr (0+2)
 10329                           
 10330                           ; Vector 57 : CCP2
 10331  00007A  0FF1               	dw	_Default_ISR shr (0+2)
 10332                           
 10333                           ; Vector 58 : Undefined
 10334  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 10335                           
 10336                           ; Vector 59 : CWG2
 10337  00007E  0FF1               	dw	_Default_ISR shr (0+2)
 10338                           
 10339                           ; Vector 60 : CLC2
 10340  000080  0FF1               	dw	_Default_ISR shr (0+2)
 10341                           
 10342                           ; Vector 61 : INT2
 10343  000082  0FF1               	dw	_Default_ISR shr (0+2)
 10344                           
 10345                           ; Vector 62 : Undefined
 10346  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 10347                           
 10348                           ; Vector 63 : Undefined
 10349  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 10350                           
 10351                           ; Vector 64 : Undefined
 10352  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 10353                           
 10354                           ; Vector 65 : Undefined
 10355  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 10356                           
 10357                           ; Vector 66 : Undefined
 10358  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 10359                           
 10360                           ; Vector 67 : Undefined
 10361  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 10362                           
 10363                           ; Vector 68 : Undefined
 10364  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 10365                           
 10366                           ; Vector 69 : Undefined
 10367  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 10368                           
 10369                           ; Vector 70 : TMR5
 10370  000094  0E92               	dw	_TMR5_ISR shr (0+2)
 10371                           
 10372                           ; Vector 71 : TMR5G
 10373  000096  0FF1               	dw	_Default_ISR shr (0+2)
 10374                           
 10375                           ; Vector 72 : TMR6
 10376  000098  0EFE               	dw	_TMR6_ISR shr (0+2)
 10377                           
 10378                           ; Vector 73 : CCP3
 10379  00009A  0FF1               	dw	_Default_ISR shr (0+2)
 10380                           
 10381                           ; Vector 74 : CWG3
 10382  00009C  0FF1               	dw	_Default_ISR shr (0+2)
 10383                           
 10384                           ; Vector 75 : CLC3
 10385  00009E  0FF1               	dw	_Default_ISR shr (0+2)
 10386                           
 10387                           ; Vector 76 : Undefined
 10388  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 10389                           
 10390                           ; Vector 77 : Undefined
 10391  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 10392                           
 10393                           ; Vector 78 : Undefined
 10394  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 10395                           
 10396                           ; Vector 79 : Undefined
 10397  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 10398                           
 10399                           ; Vector 80 : CCP4
 10400  0000A8  0FF1               	dw	_Default_ISR shr (0+2)
 10401                           
 10402                           ; Vector 81 : CLC4
 10403  0000AA  0FF1               	dw	_Default_ISR shr (0+2)
 10404  0000AC                     ivt0x8_undefint:
 10405                           	opt callstack 0
 10406  0000AC  00FF               	reset	
 10407                           
 10408                           	psect	text86
 10409  000000                     __ptext86:
 10410                           	opt callstack 0
 10411                           
 10412                           	psect	rparam
 10413  0000                     tosu	equ	0x3FFF
 10414                           tosh	equ	0x3FFE
 10415                           tosl	equ	0x3FFD
 10416                           stkptr	equ	0x3FFC
 10417                           pclatu	equ	0x3FFB
 10418                           pclath	equ	0x3FFA
 10419                           pcl	equ	0x3FF9
 10420                           tblptru	equ	0x3FF8
 10421                           tblptrh	equ	0x3FF7
 10422                           tblptrl	equ	0x3FF6
 10423                           tablat	equ	0x3FF5
 10424                           prodh	equ	0x3FF4
 10425                           prodl	equ	0x3FF3
 10426                           indf0	equ	0x3FEF
 10427                           postinc0	equ	0x3FEE
 10428                           postdec0	equ	0x3FED
 10429                           preinc0	equ	0x3FEC
 10430                           plusw0	equ	0x3FEB
 10431                           fsr0h	equ	0x3FEA
 10432                           fsr0l	equ	0x3FE9
 10433                           wreg	equ	0x3FE8
 10434                           indf1	equ	0x3FE7
 10435                           postinc1	equ	0x3FE6
 10436                           postdec1	equ	0x3FE5
 10437                           preinc1	equ	0x3FE4
 10438                           plusw1	equ	0x3FE3
 10439                           fsr1h	equ	0x3FE2
 10440                           fsr1l	equ	0x3FE1
 10441                           bsr	equ	0x3FE0
 10442                           indf2	equ	0x3FDF
 10443                           postinc2	equ	0x3FDE
 10444                           postdec2	equ	0x3FDD
 10445                           preinc2	equ	0x3FDC
 10446                           plusw2	equ	0x3FDB
 10447                           fsr2h	equ	0x3FDA
 10448                           fsr2l	equ	0x3FD9
 10449                           status	equ	0x3FD8


Data Sizes:
    Strings     78
    Constant    0
    Data        49
    BSS         165
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     85      90
    BANK0           160     48      64
    BANK1           256      0     193
    BANK2           256    128     128
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), 
		 -> STR_16(CODE[4]), STR_14(CODE[4]), STR_12(CODE[4]), STR_10(CODE[4]), 
		 -> STR_8(CODE[4]), STR_6(CODE[4]), STR_4(CODE[5]), main@buffer(BANK0[24]), 
		 -> work_sw@buffer(BANK2[128]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 128
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), 
		 -> STR_16(CODE[4]), STR_14(CODE[4]), STR_12(CODE[4]), STR_10(CODE[4]), 
		 -> STR_8(CODE[4]), STR_6(CODE[4]), STR_4(CODE[5]), main@buffer(BANK0[24]), 
		 -> work_sw@buffer(BANK2[128]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_15(CODE[3]), STR_13(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), 
		 -> STR_7(CODE[3]), STR_5(CODE[3]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_3(CODE[12]), STR_2(CODE[17]), STR_1(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    S3071_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_15(CODE[3]), STR_13(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), 
		 -> STR_7(CODE[3]), STR_5(CODE[3]), STR_3(CODE[12]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 17
		 -> STR_15(CODE[3]), STR_13(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), 
		 -> STR_7(CODE[3]), STR_5(CODE[3]), STR_3(CODE[12]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), STR_16(CODE[4]), STR_14(CODE[4]), 
		 -> STR_12(CODE[4]), STR_10(CODE[4]), STR_8(CODE[4]), STR_6(CODE[4]), 
		 -> STR_4(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), STR_16(CODE[4]), STR_14(CODE[4]), 
		 -> STR_12(CODE[4]), STR_10(CODE[4]), STR_8(CODE[4]), STR_6(CODE[4]), 
		 -> STR_4(CODE[5]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), STR_16(CODE[4]), 
		 -> STR_14(CODE[4]), STR_12(CODE[4]), STR_10(CODE[4]), STR_8(CODE[4]), 
		 -> STR_6(CODE[4]), STR_4(CODE[5]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    eaDogM_WriteStringAtPos@strPtr	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    eaDogM_WriteString@strPtr	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    once@once_flag	PTR _Bool  size(2) Largest target is 36
		 -> IO(BANK1[36]), 

    sounds	PTR struct OUT_data1 size(2) Largest target is 36
		 -> IO(BANK1[36]), 

    switches	PTR struct IN_data size(2) Largest target is 36
		 -> IO(BANK1[36]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    UART2_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    UART2_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultErrorHandler(), 

    UART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultOverrunErrorHandler(), 

    UART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultFramingErrorHandler(), 

    UART2_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultErrorHandler(), Absolute function(), 

    UART2_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultOverrunErrorHandler(), Absolute function(), 

    UART2_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultFramingErrorHandler(), Absolute function(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _eaDogM_WriteStringAtPos->_eaDogM_WriteString
    _eaDogM_WriteString->_strlen
    _eaDogM_WriteString->_wdtdelay
    _led_lightshow->___awdiv
    _init_display->_send_lcd_cmd
    _init_display->_send_lcd_cmd_long
    _send_lcd_cmd_long->_wdtdelay
    _eaDogM_WriteCommand->_send_lcd_cmd
    _send_lcd_cmd->_wdtdelay
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART2_Initialize->_UART2_SetErrorHandler
    _UART2_Initialize->_UART2_SetFramingErrorHandler
    _UART2_Initialize->_UART2_SetOverrunErrorHandler
    _UART2_Initialize->_UART2_SetRxInterruptHandler
    _UART2_Initialize->_UART2_SetTxInterruptHandler
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _WaitMs->_StartTimer
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART2_Write
    _abs->___aomod

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    _TMR6_ISR->_TMR6_DefaultInterruptHandler

Critical Paths under _TMR5_ISR in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    _TMR5_CallBack->_TMR5_DefaultInterruptHandler

Critical Paths under _main in BANK0

    _main->_sprintf
    _work_sw->_sprintf
    _sprintf->_vfprintf
    _Digital232_init->_printf
    _Digital232_RW->_printf
    _printf->_vfprintf

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_work_sw

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0   74953
                                             20 BANK0     28    28      0
                      _Digital232_RW
                    _Digital232_init
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                      _led_lightshow
                               _once
                            _sprintf
                            _work_sw
 ---------------------------------------------------------------------------------
 (1) _work_sw                                            128   128      0   18185
                                              0 BANK2    128   128      0
                         _StartTimer
                          _TimerDone
            _eaDogM_WriteStringAtPos
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16     9      7   14221
                                              4 BANK0     16     9      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     1      3    2786
                                             13 COMRAM     4     1      3
                 _eaDogM_WriteString
                       _send_lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   4     2      2    1419
                                              9 COMRAM     4     2      2
                  _SPI1_Exchange8bit
                             _strlen
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (1) _once                                                 2     0      2     332
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _led_lightshow                                        5     3      2    1770
                                             13 COMRAM     5     3      2
                         _StartTimer
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     625
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    2140
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     1      0     734
                                              9 COMRAM     1     1      0
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     1      0     765
                                             10 COMRAM     1     1      0
                       _send_lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd                                         1     1      0     734
                                              9 COMRAM     1     1      0
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (4) _wdtdelay                                             4     0      4     672
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _SPI1_Exchange8bit                                    1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1486
                    _ADCC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0     605
              _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetOverrunErrorHandler                         3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetFramingErrorHandler                         3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetErrorHandler                                3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     605
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     121
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     121
                                              8 COMRAM     2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      34
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Digital232_init                                      0     0      0   16500
               _ADCC_StartConversion
                         _StartTimer
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                             _printf
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2    1474
                                             10 COMRAM     2     0      2
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Digital232_RW                                        4     4      0   15683
                                             10 BANK0      4     4      0
           _ADCC_GetConversionResult
                 _PWM8_LoadDutyValue
                         _StartTimer
                          _TimerDone
                         _UART2_Read
                        _UART2_Write
                  _UART2_is_rx_ready
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     3      3   13996
                                              4 BANK0      6     3      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             5     1      4   13369
                                             84 COMRAM     1     1      0
                                              0 BANK0      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           37    33      4   12617
                                             70 COMRAM    14    10      4
                               _dtoa
                              _fputc
                               _stoa
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2922
                                             16 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    7129
                                             34 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4863
                                             23 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     400
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2170
                                             16 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1670
                                              7 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      93
                                              6 COMRAM     1     1      0
                        _UART2_Write
 ---------------------------------------------------------------------------------
 (8) _UART2_Write                                          1     1      0      62
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      37
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            3     3      0      31
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _StartTimer                                           5     3      2     962
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   4     2      2     332
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             4     2      2       0
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART2_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART2_DefaultErrorHandler *
   _UART2_DefaultFramingErrorHandler *
   _UART2_DefaultOverrunErrorHandler *
                _UART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART2_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART2_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART2_DefaultErrorHandler                           0     0      0       0
                _UART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART2_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TMR6_ISR                                            0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _TMR6_DefaultInterruptHandler                        3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TMR5_ISR                                            0     0      0     229
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR5_WriteTimer                                     2     0      2     229
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR5_DefaultInterruptHandler                        1     1      0       0
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Digital232_RW
     _ADCC_GetConversionResult
     _PWM8_LoadDutyValue
     _StartTimer
     _TimerDone
     _UART2_Read
     _UART2_Write
     _UART2_is_rx_ready
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART2_Write
               _fputs
                 _fputc
                   _putch
                     _UART2_Write
               _strlen
           _fputc
             _putch
               _UART2_Write
           _stoa
             _fputc
               _putch
                 _UART2_Write
             _strlen
   _Digital232_init
     _ADCC_StartConversion
     _StartTimer
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART2_Write
               _fputs
                 _fputc
                   _putch
                     _UART2_Write
               _strlen
           _fputc
             _putch
               _UART2_Write
           _stoa
             _fputc
               _putch
                 _UART2_Write
             _strlen
   _SYSTEM_Initialize
     _ADCC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _eaDogM_WriteCommand
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _SPI1_Exchange8bit
       _strlen
       _wdtdelay
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
   _init_display
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _led_lightshow
     _StartTimer
     ___awdiv
   _once
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _UART2_Write
             _fputs
               _fputc
                 _putch
                   _UART2_Write
             _strlen
         _fputc
           _putch
             _UART2_Write
         _stoa
           _fputc
             _putch
               _UART2_Write
           _strlen
   _work_sw
     _StartTimer
     _TimerDone
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _SPI1_Exchange8bit
         _strlen
         _wdtdelay
       _send_lcd_cmd
         _SPI1_Exchange8bit
         _wdtdelay
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART2_Write
               _fputs
                 _fputc
                   _putch
                     _UART2_Write
               _strlen
           _fputc
             _putch
               _UART2_Write
           _stoa
             _fputc
               _putch
                 _UART2_Write
             _strlen

 _Default_ISR (ROOT)

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *
     Absolute function(Fake) *
     _UART2_DefaultErrorHandler *
       _UART2_RxDataHandler
     _UART2_DefaultFramingErrorHandler *
     _UART2_DefaultOverrunErrorHandler *
     _UART2_RxDataHandler *

 _TMR6_ISR (ROOT)
   Absolute function(Fake) *
   _TMR6_DefaultInterruptHandler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     80      80       9       50.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C1       7       75.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     30      40       5       40.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     55      5A       1       94.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1DB      58        0.0%
DATA                 0      0     1DB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Sep  3 00:30:56 2019

                           _SPI1_Exchange8bit 3E20              __end_of_TMR5_SetInterruptHandler 3F8A  
                   __end_of_UART2_is_rx_ready 3FB4                            ?_SPI1_Exchange8bit 0001  
                                 __CFG_CP$OFF 000000                                            l66 3DFE  
                                          _IO 019D                                  ___awdiv@sign 000B  
                           ??_TMR5_WriteTimer 0006                                   __CFG_LVP$ON 000000  
                               work_sw@buffer 0200                                           l492 38BA  
                                         l987 3E2E                                           _GIE 01FE97  
                                         _abs 3922                           ??_SPI1_Exchange8bit 0006  
                                         _pad 302C                       __size_of_PMD_Initialize 0022  
               eaDogM_WriteStringAtPos@strPtr 000F                               _TMR2_Initialize 3DCA  
                                         prod 003FF3                                           tosl 003FFD  
                                         wreg 003FE8                               send_lcd_cmd@cmd 000A  
                          _UART1_Transmit_ISR 3AE2                                 __CFG_BBEN$OFF 000000  
                                __CFG_ZCD$OFF 000000                                          l1123 260E  
                                        ?_abs 0018                                          l1060 240C  
                                        l1310 20D2                                          l1206 39AE  
                                        l1312 20DE                                          l1128 26DC  
                                        l1064 2492                                          l1162 2E80  
                                        l1069 2500                                          l2046 3952  
                                        l1183 3BB6                                          l1339 2A1C  
                                        l1299 3066                          _ADCC_StartConversion 3F8A  
                                        l4511 38A4                                          l5305 26B6  
                                        l5161 34D6                                          l4611 2BA4  
                                        l4603 2B6A                                          l5331 2728  
                                        l5139 3BC0                                          l5155 34C6  
                                        l5093 3892                                          l4621 2C00  
                                        l4525 38DC                                          l5325 26FE  
                                        l5405 2E16                                          l5501 2442  
                                        ?_pad 0018                                          l4527 38DE  
                                        l4703 2248                                          l5351 2764  
                                        l5319 26E0                                          l5167 34EC  
                                        l5183 351E                                          l5415 2E64  
                                        l4609 2B90                                          l4625 2C16  
                                        l4641 2C9A                                          l4537 30F6  
                                        l4561 390A                                          l5281 25F6  
                                        l5273 25DE                                          l5265 259E  
                                        l5169 34F4                                          l5409 2E42  
                                        l4651 2CEC                                          l4547 3740  
                                        l4571 305E                                          l4723 22AC  
                                        l5291 2618                                          l5187 352C  
                                        l5179 3514                                          l4629 2C3C  
                                        l4661 2D4A                                          l4645 2CBE  
                                        l4557 38EE                                          l4549 3744  
                                        l4581 30C0                                          l4573 3070  
                                        l4821 2950                                          l4805 28A6  
                                        l5285 2602                                          l5277 25EA  
                                        l5293 2620                                          l5381 2DB0  
                                        l5429 3BF4                                          l5509 2498  
                                        l5525 2510                                          l5461 2364  
                                        l4567 304C                                          l4727 22C6  
                                        l4815 2912                                          l4831 296C  
                                        l4911 370C                                          l5295 2654  
                                        l4903 3670                                          l4665 2D70  
                                        l4657 2D34                                          l4649 2CD8  
                                        l4577 308C                                          l4753 2A56  
                                        l4825 295A                                          l5393 2DD8  
                                        l4675 20B6                                          l4771 2AF4  
                                        l4763 2ABE                                          l4739 29D0  
                                        l5483 23BC                                          l5491 2412  
                                        l4597 2B42                                          l4693 210C  
                                        l4757 2A74                                          l4749 2A3A  
                                        l4909 36E8                                          l5389 2DD2  
                                        l5469 2382                                          l4871 3C64  
                                        l4767 2AD8                                          l4689 20FC  
                                        l4897 3648                                          STR_1 2001  
                                        STR_2 2012                                          STR_3 2023  
                                        STR_4 202F                                          STR_5 204C  
                                        STR_6 2048                                          STR_7 204C  
                                        STR_8 2038                                          STR_9 204C  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                                          _LATD 003FBD  
                                        _LATE 003FBE                                          u4100 273C  
                                        u3400 2BA8                                          u4120 2750  
                                        u3250 30EE                                          _T2PR 003FAB  
                                        u3500 208A                                          u4220 2E58  
                                        u3350 3930                                          u3270 3136  
                                        u4230 2E74                                          u3280 376E  
                                        u3600 228A                                          u3530 20C8  
                                        u3460 2CF0                                          u3620 2296  
                                        u3700 2A9E                                          u3381 2B70  
                                        u3550 20F6                                          u3287 3760  
                                        u3560 2256                                          u3641 29AC  
                                        u3490 2088                                          u3730 2B08  
                                        _T6PR 003F93                                          u3707 2A90  
                                        u3580 2278                                          _PMD0 0039C0  
                                        u3581 2276                                          _PMD1 0039C1  
                                        u3590 2286                                          _PMD2 0039C2  
                                        _PMD3 0039C3                                          _PMD4 0039C4  
                                        _PMD5 0039C5                                          u3690 2A6A  
                                        _PMD6 0039C6                                          _PMD7 0039C7  
                                        u3780 2822                                          u3940 34F8  
                                        u3855 384C                                          u3856 384E  
                                        u3895 3A38                                          _PLLR 01CEE0  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                                 __CFG_FCMEN$ON 000000  
                         ?_UART1_Transmit_ISR 0001                        led_lightshow@alive_led 0092  
                                        abs@a 0018                                          _dbuf 0172  
                                        _main 22FC                                          _dtoa 2050  
                                        _once 3BCE                                          _prec 0090  
                                        _nout 0166                                          pad@i 001F  
                       __end_of_Digital232_RW 27A4                                          pad@p 001C  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf1 003FE7                                          indf2 003FDF  
                                        fsr1l 003FE1                                          pad@w 0021  
                                        fsr2l 003FD9                                          _stoa 29A2  
                                        prodl 003FF3                                          start 00AE  
                             _timer5ReloadVal 016E                                ?_led_lightshow 000E  
                   __end_of_SPI1_Exchange8bit 3E3A                 ??_UART1_SetTxInterruptHandler 0009  
               ??_UART2_SetRxInterruptHandler 0009                                 __CFG_CSWEN$ON 000000  
                           _UART1_rx_vect_isr 3C8C                                  ___param_bank 000000  
                                 ?_UART2_Read 0001                            ?_UART1_rx_vect_isr 0001  
                                       ??_abs 001A                                         ??_pad 001E  
              __size_of_OSCILLATOR_Initialize 001C                          ??_UART1_Transmit_ISR 0001  
               __end_of_OSCILLATOR_Initialize 3E04                               __end_of___aodiv 2C6E  
                                       _ADCAP 003EF5                                         _ADACT 003EFE  
                                       ?_main 0001                                         ?_dtoa 0023  
                                       _ADCLK 003EFF                               __end_of___aomod 2DA2  
                                       _ADPCH 003EF1                                         _ADREF 003EFD  
                             __end_of___awdiv 353A                                         ?_once 0006  
                                       STR_10 203C                                         STR_11 204C  
                                       STR_12 2040                                         STR_13 204C  
                                       STR_14 2044                                         STR_15 204C  
                                       STR_16 2034                                 __CFG_WDTE$OFF 000000  
                                       _ADRPT 003EEC                                         ?_stoa 0011  
                             ___awdiv@divisor 0008                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                      eaDogM_WriteStringAtPos@c 000E  
                                       _U1P1L 003DEC                                         _U1P3H 003DF1  
                                       _T2CON 003FAC                                         _U1P2L 003DEE  
                                       _U1P3L 003DF0                                         _U2P1L 003DD4  
                                       _U2P2L 003DD6                                         _U2P3L 003DD8  
                    eaDogM_WriteStringAtPos@r 0011                                         _T5CLK 003F9D  
                                       _T2HLT 003FAD                                         _T5CON 003F9A  
                                       _T6CON 003F94                                __CFG_DEBUG$OFF 000000  
                                       _T6HLT 003F95                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         _T2RST 003FAF  
                                       _U1RXB 003DE8                                         _U2UIR 003DE0  
                                       _U1TXB 003DEA                                         _U2RXB 003DD0  
                                       _U2TXB 003DD2                                         i2l342 3B0E  
                                       i2l516 3B40                                         _T6TMR 003F92  
                                       _T6RST 003F97                           ??_UART1_rx_vect_isr 0001  
                                       i2l774 3D56                               ___awdiv@counter 000A  
                                       _OSCEN 0039DD                                  vfpfcnvrt@fmt 0049  
                                       _TMR5H 003F99                                         _TMR5L 003F98  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                   _Default_ISR 3FC4  
                    eaDogM_WriteString@strPtr 000A             __size_of_TMR6_SetInterruptHandler 0014  
                   ?_TMR6_SetInterruptHandler 0006                             _UART1_tx_vect_isr 3C68  
                               __CFG_WRTB$OFF 000000                                 __CFG_WRTC$OFF 000000  
                               __CFG_WRTD$OFF 000000                              __end_of_TMR5_ISR 3A7E  
                            __end_of_TMR6_ISR 3C20                                         _flags 0056  
                             _Digital232_init 2E8C                         ?_ADCC_StartConversion 0001  
                                       _fputc 30DE                    __size_of_send_lcd_cmd_long 0024  
                                       _fputs 38E4                            __CFG_MCLRE$EXTMCLR 000000  
                          ?_UART1_tx_vect_isr 0001                                         pad@fp 0018  
                                       _width 0168                                         _putch 3FA4  
                                       dtoa@d 0025                                         dtoa@i 0045  
                                       main@y 008F                                         dtoa@n 003D  
                                       dtoa@p 0037                                         dtoa@s 003B  
                                       dtoa@w 0039                              led_lightshow@seq 0012  
                                       pclath 003FFA                                         tablat 003FF5  
                   ??_eaDogM_WriteStringAtPos 0011                                         plusw1 003FE3  
                                       plusw2 003FDB                                         stoa@i 001D  
                                       stoa@l 0025                                         stoa@p 0023  
                                       stoa@s 0013                                         stoa@w 001F  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 3F26  
                 _UART1_SetRxInterruptHandler 3F12                               __end_of_sprintf 3816  
                             __end_of_work_sw 34B2      __end_of_UART1_DefaultFramingErrorHandler 3FCA  
   __size_of_UART1_DefaultFramingErrorHandler 0002            ??_UART1_DefaultFramingErrorHandler 0001  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 3FC8  
                         ??_UART1_tx_vect_isr 0001                     __end_of_UART1_rx_vect_isr 3CB0  
                    __size_of_SPI1_Initialize 0018                ??_TMR6_DefaultInterruptHandler 0001  
                             _TMR5_Initialize 3782                ??_UART2_SetOverrunErrorHandler 0009  
                             __initialization 353A                             _UART2_rx_vect_isr 3CF8  
              eaDogM_WriteString@bytesWritten 000D                                  __end_of_main 2582  
                                __end_of_dtoa 22FC                                  __end_of_once 3BF8  
                                __end_of_stoa 2B16                    __size_of_UART2_is_rx_ready 0006  
                              __CFG_SAFEN$OFF 000000                   ??_UART1_DefaultErrorHandler 0001  
                          ?_UART2_rx_vect_isr 0001                       __end_of_TMR2_Initialize 3DE8  
                                ?_UART2_Write 0001                                        ??_main 0074  
                                      ??_dtoa 002D                                        ??_once 0008  
                              __CFG_PR1WAY$ON 000000                      _TMR5_SetInterruptHandler 3F76  
                                      ??_stoa 0015                                 __activetblptr 000003  
        __size_of_UART1_SetTxInterruptHandler 0014                           ??_UART2_rx_vect_isr 0001  
                         eaDogM_WriteString@i 000C                     __end_of_UART1_tx_vect_isr 3C8C  
        __size_of_UART2_SetRxInterruptHandler 0014                                __CFG_MVECEN$ON 000000  
                             _TMR6_Initialize 3B76                               _PWM8_Initialize 3E6C  
                 __end_of_UART2_RxDataHandler 3D40                              _UART1_Initialize 2F74  
                           _UART2_tx_vect_isr 3CD4                            _UART2_Transmit_ISR 3B14  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        ?_fputc 0008  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 0011                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0006  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 3A0E  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                          ?_UART2_tx_vect_isr 0001                                TimerDone@timer 0008  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RC3I2C 003A6A                                        _RD1I2C 003A7B  
                                      _RC4I2C 003A6B                                        _U1BRGH 003DF6  
                                      _U1FIFO 003DF7                                        _U2CON0 003DDA  
                                      _U2CON1 003DDB                                        _U1BRGL 003DF5  
                                      _U2CON2 003DDC                                        _U2BRGH 003DDE  
                                      _U2FIFO 003DDF                                        _U2BRGL 003DDD  
                                      _T5GATE 003F9C                           __size_of_UART2_Read 0044  
                                      _T5GCON 003F9B                                        _RC3PPS 003A13  
                                      _RD1PPS 003A19                                        _RB6PPS 003A0E  
                                      _RC5PPS 003A15                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _RC6PPS 003A16                                        _ODCOND 003A72  
                                      _ODCONE 003A82                                __CFG_WDTCCS$SC 000000  
                                      i2l4061 3B3C                                        i2l4029 3B0A  
                                      i2l4081 341A                                        i2l4049 337C  
                                      i2l4093 3992                                        i2l4089 3964  
                                      i2l3647 3CCE                                        i2l3667 3D3A  
                               ?_init_display 0001                                        _IVTADH 00389E  
                                      _IVTADL 00389D                                        _IVTADU 00389F  
                __size_of_eaDogM_WriteCommand 000A                                        _OSCFRQ 0039DF  
                         ?_UART2_Transmit_ISR 0001                               ??_led_lightshow 0010  
                       _UART1_SetErrorHandler 3F4E                    ??_ADCC_GetConversionResult 0008  
                       SPI1_Exchange8bit@data 0006                           ?_PWM8_LoadDutyValue 0006  
                         ??_UART2_tx_vect_isr 0001                     __end_of_UART2_rx_vect_isr 3D1C  
                  __size_of_SPI1_Exchange8bit 001A                                __CFG_XINST$OFF 000000  
                            _UART2_Initialize 318C                                        _WaitMs 3BA2  
                                _CCPTMRS1bits 003F5F                     _UART2_OverrunErrorHandler 014B  
                                vfprintf@cfmt 0055                           _uart2RxStatusBuffer 010E  
          __size_of_UART2_DefaultErrorHandler 0006                                     ??___aodiv 0016  
                                   ??___aomod 0016                                     ??___awdiv 000A  
                              __CFG_STVREN$ON 000000                    ?_UART2_DefaultErrorHandler 0001  
                        send_lcd_cmd_long@cmd 000A                                        clear_0 357E  
                                      clear_1 358A                           UART2_Read@readValue 0006  
                            ___awdiv@quotient 000C                          ??_UART2_Transmit_ISR 0001  
                                      _printf 3E04                                        pad@buf 001A  
                          _eaDogM_WriteString 3614                                        _sounds 0199  
                                      dtoa@fp 0023                                        _strlen 3732  
                          __size_of_TimerDone 0024                       __end_of_Digital232_init 2F74  
                        ??_PWM8_LoadDutyValue 0008                               _ADCC_Initialize 367A  
                                      fputc@c 0008                                _PMD_Initialize 3D86  
                                      fputs@c 0015                                        fputs@i 0016  
                                      fputs@s 0011                     __end_of_UART2_tx_vect_isr 3CF8  
                                __mediumconst 0000                                        tblptrh 003FF7  
                                      tblptrl 003FF6                                        tblptru 003FF8  
                      ??_ADCC_StartConversion 0006                           ?_eaDogM_WriteString 000A  
                            __end_of_wdtdelay 39D6                                        stoa@cp 0021  
                                      stoa@fp 0011                              __end_of_vfprintf 3732  
                               wdtdelay@delay 0006                                    _StartTimer 3AB0  
    TMR5_SetInterruptHandler@InterruptHandler 0006      TMR6_SetInterruptHandler@InterruptHandler 0006  
 UART2_SetTxInterruptHandler@InterruptHandler 0006   UART2_SetRxInterruptHandler@InterruptHandler 0006  
 UART1_SetTxInterruptHandler@InterruptHandler 0006   UART1_SetRxInterruptHandler@InterruptHandler 0006  
        __end_of_UART1_SetOverrunErrorHandler 3F3A         __size_of_UART1_SetOverrunErrorHandler 0014  
                _UART1_SetOverrunErrorHandler 3F26                     _UART1_DefaultErrorHandler 3FB4  
                                   ??_sprintf 0056                                     ??_work_sw 0056  
               __size_of_INTERRUPT_Initialize 0048                                ??_init_display 000B  
                __size_of_UART1_RxDataHandler 0024                       __end_of_TMR5_Initialize 37CE  
                           _SYSTEM_Initialize 3A7E                                    __accesstop 0060  
                     __end_of__initialization 35A6                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                    __size_of_UART1_rx_vect_isr 0024  
                             _TMR5_WriteTimer 3D40                          ??_eaDogM_WriteString 000C  
                              __pcstackCOMRAM 0001                         _UART2_SetErrorHandler 3EEA  
                                __pidataBANK0 3FC0                                  __pidataBANK1 3B46  
                         ??_SYSTEM_Initialize 000B                                     ?_TMR5_ISR 0001  
                                   ?_TMR6_ISR 0001                                ivt0x8_undefint 00AC  
                               __end_of_fputc 318C                                 __end_of_fputs 3922  
                           ??_SPI1_Initialize 0006             __end_of_UART2_DefaultErrorHandler 3FC0  
                       __end_of_TMR5_CallBack 3DCA                                 __end_of_putch 3FAE  
                            ?_TMR2_Initialize 0001                       __end_of_PWM8_Initialize 3E84  
                     __end_of_TMR6_Initialize 3BA2                        __end_of_PMD_Initialize 3DA8  
                  __size_of_UART1_tx_vect_isr 0024                     _UART1_FramingErrorHandler 0157  
                 ADCC_StartConversion@channel 0006                      _UART2_RxInterruptHandler 0163  
                                     ??_fputc 000C                     __end_of_SYSTEM_Initialize 3AB0  
                                     ??_fputs 0015                               __CFG_IVT1WAY$ON 000000  
                                     ??_putch 0007                                    __pbssBANK0 0090  
                                  __pbssBANK1 0100                 ?_UART1_SetOverrunErrorHandler 0006  
                      ?_UART1_SetErrorHandler 0006                             __end_of_TimerDone 3C68  
                ?_UART2_SetTxInterruptHandler 0006                    __size_of_UART2_rx_vect_isr 0024  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                                       ?_WaitMs 000B  
                                ??_UART2_Read 0006                               __CFG_PPS1WAY$ON 000000  
            __end_of_TMR6_SetInterruptHandler 3F76          __end_of_UART2_SetFramingErrorHandler 3EEA  
       __size_of_UART2_SetFramingErrorHandler 0014                  _UART2_SetFramingErrorHandler 3ED6  
                     __end_of_ADCC_Initialize 36D6                                 ?_send_lcd_cmd 0001  
                                  ??_TMR5_ISR 0006                                    ??_TMR6_ISR 0004  
                                     _ADSTPTH 003EE5                                       _ADSTPTL 003EE4  
                                     ?_printf 0064                               ?_PMD_Initialize 0001  
                           _UART1_Receive_ISR 32E4                                       ?_strlen 0006  
                             StartTimer@count 0006                                       _U1ERRIE 003DFA  
                                     _U1ERRIR 003DF9                                       _U2ERRIE 003DE2  
                                     _U2ERRIR 003DE1                               StartTimer@timer 000A  
                            ?_Digital232_init 0001                           __CFG_PWRTS$PWRT_OFF 000000  
                                ?_Default_ISR 0001                            ?_UART1_Receive_ISR 0001  
                  __size_of_UART2_tx_vect_isr 0024                          __size_of_UART2_Write 0042  
                                     _U1RXPPS 003AE5                                       _U2RXPPS 003AE8  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                                     _IVTLOCK 003FD4                            __size_of_vfpfcnvrt 01FE  
                                     _SPI1CLK 003D1C                                       _SPI1RXB 003D10  
                                     _SPI1TXB 003D11                                       _OSCTUNE 0039DE  
                                     _PWM8DCH 003F61                                       _PWM8DCL 003F60  
                                     _PWM8CON 003F62                                       _SLRCONA 003A43  
                                     _SLRCONB 003A53                                       _SLRCONC 003A63  
                                     _SLRCOND 003A73                                       _SLRCONE 003A83  
                                 ?_StartTimer 0006                           ??_UART1_Receive_ISR 0001  
                     __end_of_TMR5_WriteTimer 3D64                            __end_of_UART2_Read 38A2  
                            ?_TMR5_Initialize 0001                     INTERRUPT_Initialize@state 0006  
                                     __Hparam 0000                        ?_UART2_SetErrorHandler 0006  
                                     __Lparam 0000                      __end_of_UART1_Initialize 302C  
               ??_UART2_SetTxInterruptHandler 0009                    ??_TMR5_SetInterruptHandler 0009  
                             __size_of_WaitMs 002C                                ??_send_lcd_cmd 000A  
                                     ___aodiv 2B16                                       ___aomod 2C6E  
                                     ___awdiv 34B2                                     ?_wdtdelay 0006  
                   __end_of_UART1_Receive_ISR 3382                                     ?_vfprintf 0060  
                                __psmallconst 2000                 ?_UART2_SetFramingErrorHandler 0006  
                        __end_of_init_display 3614                                       __pcinit 353A  
                         _eaDogM_WriteCommand 3F9A                              ?_PWM8_Initialize 0001  
                            ?_TMR6_Initialize 0001                                       __ramtop 2000  
                 __size_of_UART1_Transmit_ISR 0032                                       __ptext0 22FC  
                                     __ptext1 3420                                       __ptext2 37CE  
                                     __ptext3 3D64                                       __ptext4 3614  
                                     __ptext5 3BCE                                       __ptext6 2DA2  
                                     __ptext7 34B2                                       __ptext8 35AC  
                                     __ptext9 3C20                             _UART2_Receive_ISR 3382  
                             __size_of_printf 001C                               __CFG_WRTAPP$OFF 000000  
                             __size_of_strlen 0050      __end_of_UART2_DefaultOverrunErrorHandler 3FCC  
   __size_of_UART2_DefaultOverrunErrorHandler 0002            ??_UART2_DefaultOverrunErrorHandler 0001  
           ?_UART2_DefaultOverrunErrorHandler 0001              _UART2_DefaultOverrunErrorHandler 3FCA  
                       _OSCILLATOR_Initialize 3DE8                                  __size_of_abs 003E  
                      __size_of_Digital232_RW 0222                                  __size_of_pad 00B2  
                          ?_UART2_Receive_ISR 0001                      ??_PIN_MANAGER_Initialize 0006  
                             __CFG_WRTSAF$OFF 000000                                     _T5CONbits 003F9A  
                    __end_of_UART2_Initialize 3238                    __size_of_SYSTEM_Initialize 0032  
                                     _sprintf 37CE                            led_lightshow@cylon 009F  
                        end_of_initialization 35A6                                       _work_sw 3420  
                         ??_UART2_Receive_ISR 0001                            led_lightshow@speed 000E  
                        ?_eaDogM_WriteCommand 0001                                       fputc@fp 000A  
         __end_of_UART1_SetTxInterruptHandler 3F12                   _UART1_SetTxInterruptHandler 3EFE  
                                     fputs@fp 0013           __end_of_UART2_SetRxInterruptHandler 3EC2  
                 _UART2_SetRxInterruptHandler 3EAE                ??_UART1_SetOverrunErrorHandler 0009  
                           __end_of_vfpfcnvrt 29A2                                     _SPI1TCNTL 003D12  
                                     postdec1 003FE5                                       postdec2 003FDD  
                                     postinc0 003FEE                                       postinc1 003FE6  
                                     postinc2 003FDE                                    ??_wdtdelay 000A  
                            ?_ADCC_Initialize 0001                   ??_UART2_DefaultErrorHandler 0001  
                         __size_of_StartTimer 0032                                    ??_vfprintf 0055  
                   __end_of_UART2_Receive_ISR 3420                                wdtdelay@dcount 013E  
                         _UART1_RxDataHandler 3CB0                         __CFG_WDTCPS$WDTCPS_31 000000  
                                     strlen@a 0008                                       strlen@s 0006  
                    _TMR6_SetInterruptHandler 3F62                         _TMR5_InterruptHandler 0142  
        __size_of_UART2_SetTxInterruptHandler 0014                         WaitMs@numMilliseconds 000B  
                    ?_eaDogM_WriteStringAtPos 000E                              __CFG_FEXTOSC$ECH 000000  
                        ?_UART1_RxDataHandler 0001                              ?_TMR5_WriteTimer 0004  
                       ??_eaDogM_WriteCommand 000B                       TMR5_WriteTimer@timerVal 0004  
                __size_of_UART2_RxDataHandler 0024                                    main@buffer 0076  
                             _SPI1_Initialize 3E54                                 _Digital232_RW 2582  
                       __end_of_led_lightshow 2E8C                                led_lightshow@j 016A  
                              __end_of_WaitMs 3BCE                  __end_of_INTERRUPT_Initialize 385E  
                  __size_of_UART1_Receive_ISR 009E                                   vfpfcnvrt@ap 004A  
                                 vfpfcnvrt@cp 0053                                   vfpfcnvrt@fp 0047  
                                 vfpfcnvrt@ll 004B                             __size_of_TMR5_ISR 0036  
                           __size_of_TMR6_ISR 0028                   __size_of_UART2_Transmit_ISR 0032  
                      ?_OSCILLATOR_Initialize 0001             __size_of_ADCC_GetConversionResult 0016  
                   ?_ADCC_GetConversionResult 0006                                __end_of_printf 3E20  
                 __size_of_PWM8_LoadDutyValue 0038                                __end_of_strlen 3782  
              ??_UART2_SetFramingErrorHandler 0009                           start_initialization 353A  
        __end_of_TMR5_DefaultInterruptHandler 3E54         __size_of_TMR5_DefaultInterruptHandler 001A  
                _TMR5_DefaultInterruptHandler 3E3A               __size_of_PIN_MANAGER_Initialize 00AC  
                                 __end_of_abs 3960                                   __end_of_pad 30DE  
                        __size_of_Default_ISR 0002                       ??_UART1_SetErrorHandler 0009  
                   _UART2_DefaultErrorHandler 3FBA                          __end_of_send_lcd_cmd 3A0E  
                       ??_UART1_RxDataHandler 0001                 __size_of_ADCC_StartConversion 0010  
                                 putch@txData 0007                                    ivt0x8_base 0008  
                               _uart1RxBuffer 012E                                 _uart1TxBuffer 0136  
                               _uart2RxBuffer 0116                                ?_Digital232_RW 0001  
                               _uart2TxBuffer 011E                              __CFG_LPBOREN$OFF 000000  
                                    ??_WaitMs 000D                         __size_of_init_display 0068  
                                 vfprintf@fmt 0062                   __size_of_eaDogM_WriteString 0066  
                            ??_PMD_Initialize 0006                                     _TimerDone 3C44  
                                 __pdataBANK0 009E                                   __pdataBANK1 0192  
                  __size_of_UART2_Receive_ISR 009E                             UART2_Write@txData 0006  
                                    ??_printf 0056                                      ??_strlen 0008  
             __end_of_eaDogM_WriteStringAtPos 3D86                                   __pbssCOMRAM 0056  
                          _UART1_ErrorHandler 0151                     _UART2_FramingErrorHandler 014E  
                               __pcstackBANK0 0060                                 __pcstackBANK2 0200  
                            ___aodiv@dividend 0006                      __size_of_TMR2_Initialize 001E  
                                ??_StartTimer 0008                       __end_of_SPI1_Initialize 3E6C  
                    _UART1_RxInterruptHandler 015D                      _UART2_TxInterruptHandler 0160  
               ?_TMR5_DefaultInterruptHandler 0001                                Digital232_RW@i 006C  
                              Digital232_RW@j 006D                                Digital232_RW@x 0094  
                                _init_display 35AC                        __size_of_TMR5_CallBack 0022  
                 PWM8_LoadDutyValue@dutyValue 0006                       ??_UART2_SetErrorHandler 0009  
                ?_UART1_SetRxInterruptHandler 0006                         _TMR6_InterruptHandler 0145  
                      _PIN_MANAGER_Initialize 3238                                     _dtoa$2599 0035  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 3F4E  
       __size_of_UART1_SetFramingErrorHandler 0014                  _UART1_SetFramingErrorHandler 3F3A  
                                  ?_TimerDone 0001                                      ?___aodiv 0006  
                                    ?___aomod 0006                                      ?___awdiv 0006  
                            ___aodiv@quotient 0018                            ??_UART1_Initialize 0009  
                          __end_of_StartTimer 3AE2                              _uart1RxLastError 0171  
                               ??_UART2_Write 0006                             __size_of_wdtdelay 003A  
                           __size_of_vfprintf 005C                        __CFG_BBSIZE$BBSIZE_512 000000  
                                 __smallconst 2000      __end_of_UART1_DefaultOverrunErrorHandler 3FC8  
   __size_of_UART1_DefaultOverrunErrorHandler 0002            ??_UART1_DefaultOverrunErrorHandler 0001  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 3FC6  
                           ?_UART2_Initialize 0001                                      ?_sprintf 0064  
                              __size_of_fputc 00AE                                      _T2CLKCON 003FAE  
                              __size_of_fputs 003E                                   _U1ERRIRbits 003DF9  
                                    ?_work_sw 0001                            ??_UART2_Initialize 0009  
                              __size_of_putch 000A                      __size_of_Digital232_init 00E8  
                        _INTERRUPT_Initialize 3816                                      _T6CLKCON 003F96  
                             ??_Digital232_RW 006A                              _uart2RxLastError 0170  
                                 _U2ERRIRbits 003DE1         UART2_SetErrorHandler@interruptHandler 0006  
       UART1_SetErrorHandler@interruptHandler 0006                                      _LATCbits 003FBC  
                                    _LATEbits 003FBE                                      _IPR3bits 003983  
                                    _PIE3bits 003993                                     _tickCount 0100  
                                    _IPR6bits 003986                                      _IPR8bits 003988  
                                    _PIE6bits 003996                                      _IPR9bits 003989  
                                    _PIE8bits 003998                           __CFG_BORV$VBOR_2P45 000000  
                                    _PIE9bits 003999                 ??_UART1_SetRxInterruptHandler 0009  
                                    i2u232_40 3E42                                      i2u232_46 3E44  
                                    i2u251_48 33AC                                      i2u243_48 330E  
                                    i2u251_49 33C0                                      i2u243_49 3322  
                                    i2u260_48 3DB6                                      i2u253_48 33DA  
                                    i2u245_48 333C                                      i2u253_49 33EE  
                                    i2u245_49 3350                                      i2u255_48 3404  
                                    i2u247_48 3366                                      i2u290_48 3C78  
                                    _PIR2bits 0039A2                                      _SPI1BAUD 003D19  
                                    i2u292_48 3C9C                                      i2u294_48 3CE4  
                                    _PIR4bits 0039A4                                      _SPI1CON0 003D14  
                                    _SPI1CON1 003D15                                      _SPI1CON2 003D16  
                                    i2u296_48 3D08                                      i2u299_40 3A6E  
                                    i2u298_48 3C0C                                      _PIR8bits 0039A8  
                                    _PIR9bits 0039A9                    ??_TMR6_SetInterruptHandler 0009  
                    __size_of_TMR5_Initialize 004C                    __end_of_UART1_Transmit_ISR 3B14  
                                    _TMR5_ISR 3A48                                      _TMR6_ISR 3BF8  
               ?_UART1_SetFramingErrorHandler 0006                                     _vfpfcnvrt 27A4  
                               _TMR5_CallBack 3DA8                           _UART2_RxDataHandler 3D1C  
                                  _ADCON0bits 003EF8                         __size_of_send_lcd_cmd 0038  
           __size_of_TMR5_SetInterruptHandler 0014                     ?_TMR5_SetInterruptHandler 0006  
                          _UART2_ErrorHandler 0148                           __end_of_UART2_Write 38E4  
                    __size_of_PWM8_Initialize 0018                      __size_of_TMR6_Initialize 002C  
                            ?_SPI1_Initialize 0001                                   _INTCON0bits 003FD2  
                                   copy_data0 354E                         ?_INTERRUPT_Initialize 0001  
                        ?_UART2_RxDataHandler 0001                        _uart1TxBufferRemaining 009B  
                           ??_TMR2_Initialize 0006                ??_TMR5_DefaultInterruptHandler 0004  
         __end_of_UART2_SetTxInterruptHandler 3EAE                   _UART2_SetTxInterruptHandler 3E9A  
                                _uart1RxCount 0099                                  _uart2RxCount 0095  
                                    __Hrparam 0000              __size_of_eaDogM_WriteStringAtPos 0022  
            __end_of_ADCC_GetConversionResult 3E9A                       __CFG_RSTOSC$EXTOSC_4PLL 000000  
                                  vfprintf@ap 0063                                      __Lrparam 0000  
                                  vfprintf@fp 0060                            __CFG_BOREN$SBORDIS 000000  
                                 ??_TimerDone 0006                       ??_OSCILLATOR_Initialize 0006  
                                _send_lcd_cmd 39D6                              __size_of___aodiv 0158  
                            __size_of___aomod 0134                              __size_of___awdiv 0088  
                              ?_TMR5_CallBack 0001                                    ?_vfpfcnvrt 0047  
                             ___aodiv@divisor 000E                               ___aodiv@counter 0016  
        __size_of_UART1_SetRxInterruptHandler 0014                                    sprintf@fmt 0066  
                    __size_of_ADCC_Initialize 005C                   __end_of_eaDogM_WriteCommand 3FA4  
                                    __pivt0x8 0008                                      __ptext10 3F9A  
                                    __ptext11 39D6                                      __ptext20 3EEA  
                                    __ptext12 399C                                      __ptext21 2F74  
                                    __ptext13 3E20                                      __ptext30 3F76  
                                    __ptext22 3EFE                                      __ptext14 3A7E  
                                    __ptext31 3DCA                                      __ptext23 3F12  
                                    __ptext15 318C                                      __ptext40 3BA2  
                                    __ptext32 3E54                                      __ptext24 3F26  
                                    __ptext16 3E9A                                      __ptext41 3F8A  
                                    __ptext33 3E6C                                      __ptext25 3F3A  
                                    __ptext17 3EAE                                      __ptext50 38E4  
                                    __ptext42 2582                                      __ptext34 3D86  
                                    __ptext26 3F4E                                      __ptext18 3EC2  
                                    __ptext51 30DE                                      __ptext43 3E04  
                                    __ptext35 3238                                      __ptext27 3B76  
                                    __ptext19 3ED6                                      __ptext60 3AB0  
                                    __ptext52 3FA4                                      __ptext44 36D6  
                                    __ptext36 3DE8                                      __ptext28 3F62  
                                    __ptext61 3A0E                                      __ptext53 38A2  
                                    __ptext45 27A4                                      __ptext37 3816  
                                    __ptext29 3782                                      __ptext70 3FB4  
                                    __ptext62 3E84                                      __ptext54 3922  
                                    __ptext46 29A2                                      __ptext38 367A  
                                    __ptext71 3CB0                                      __ptext63 3FC4  
                                    __ptext55 2C6E                                      __ptext47 2050  
                                    __ptext39 2E8C                                      __ptext80 3BF8  
                                    __ptext72 3CD4                                      __ptext64 3C68  
                                    __ptext56 2B16                                      __ptext48 302C  
                                    __ptext81 3960                                      __ptext73 3B14  
                                    __ptext65 3AE2                                      __ptext57 3FAE  
                                    __ptext49 3732                                      __ptext82 3A48  
                                    __ptext74 3CF8                                      __ptext66 3C8C  
                                    __ptext58 385E                                      __ptext83 3D40  
                                    __ptext75 3382                                      __ptext67 32E4  
                                    __ptext59 3C44                                      __ptext84 3DA8  
                                    __ptext76 3FCA                                      __ptext68 3FC6  
                                    __ptext85 3E3A                                      __ptext77 3FCC  
                                    __ptext69 3FC8                                      __ptext86 0000  
                                    __ptext78 3FBA                                      __ptext79 3D1C  
              __size_of_UART1_SetErrorHandler 0014                 TMR6_DefaultInterruptHandler@i 0003  
               __end_of_UART1_SetErrorHandler 3F62                              __size_of_sprintf 0048  
                       ??_UART2_RxDataHandler 0001                              __size_of_work_sw 0092  
                         led_lightshow@LED_UP 009E                                 __size_of_main 0286  
                               __size_of_dtoa 02AC                                 __size_of_once 002A  
                               __size_of_stoa 0174      __end_of_UART2_DefaultFramingErrorHandler 3FCE  
   __size_of_UART2_DefaultFramingErrorHandler 0002            ??_UART2_DefaultFramingErrorHandler 0001  
           ?_UART2_DefaultFramingErrorHandler 0001              _UART2_DefaultFramingErrorHandler 3FCC  
                        __CFG_WDTCWS$WDTCWS_7 000000                                   _IVTLOCKbits 003FD4  
                           ??_Digital232_init 0056                      __size_of_TMR5_WriteTimer 0024  
                   _UART1_OverrunErrorHandler 0154                                     stoa@F1139 0192  
UART2_SetOverrunErrorHandler@interruptHandler 0006  UART1_SetOverrunErrorHandler@interruptHandler 0006  
          __size_of_UART1_DefaultErrorHandler 0006                  __end_of_ADCC_StartConversion 3F9A  
                  ?_UART1_DefaultErrorHandler 0001                                      _wdtdelay 399C  
                  __end_of_UART2_Transmit_ISR 3B46                                      _vfprintf 36D6  
                                   printf@fmt 0064                    __end_of_PWM8_LoadDutyValue 3A46  
                                    _switches 019B                                   _UART2_Write 38A2  
                           ??_TMR5_Initialize 0009                              ___aomod@dividend 0006  
                               ??_Default_ISR 0001                ??_UART1_SetFramingErrorHandler 0009  
                 __end_of_UART1_RxDataHandler 3CD4                                   _uart1RxHead 005A  
                                 _uart1TxHead 009D                                   _uart2RxHead 0059  
                                 _uart1RxTail 009A                                   _uart2TxHead 0098  
                                 _uart1TxTail 009C                                   _uart2RxTail 0058  
                      __size_of_led_lightshow 00EA                                   _uart2TxTail 0097  
                      ??_INTERRUPT_Initialize 0006          __end_of_TMR6_DefaultInterruptHandler 399C  
       __size_of_TMR6_DefaultInterruptHandler 003C                  _TMR6_DefaultInterruptHandler 3960  
        __end_of_UART2_SetOverrunErrorHandler 3ED6         __size_of_UART2_SetOverrunErrorHandler 0014  
                _UART2_SetOverrunErrorHandler 3EC2                                      intlevel2 0000  
                                   sprintf@ap 006D                             _send_lcd_cmd_long 3C20  
                     ?_PIN_MANAGER_Initialize 0001                             ??_TMR6_Initialize 0009  
                           ??_PWM8_Initialize 0006                             __CFG_CLKOUTEN$OFF 000000  
                          ?_send_lcd_cmd_long 0001                    __end_of_eaDogM_WriteString 367A  
              __size_of_UART2_SetErrorHandler 0014                 __end_of_UART2_SetErrorHandler 3EFE  
                         _uart1RxStatusBuffer 0126                                    _SPI1SCKPPS 003ADE  
                                  _SPI1SDIPPS 003ADF                               ??_TMR5_CallBack 0005  
                         ??_send_lcd_cmd_long 000A                                      printf@ap 0069  
                      eaDogM_WriteCommand@cmd 000B                                    _UART2_Read 385E  
UART2_SetFramingErrorHandler@interruptHandler 0006  UART1_SetFramingErrorHandler@interruptHandler 0006  
                    _ADCC_GetConversionResult 3E84             __end_of_UART1_DefaultErrorHandler 3FBA  
                             ___aomod@divisor 000E                                   ??_vfpfcnvrt 004B  
                                    stoa@nuls 0016                               ___aomod@counter 0016  
                           _UART2_is_rx_ready 3FAE                        _uart2TxBufferRemaining 0096  
                                    sprintf@f 006E                                      sprintf@s 0064  
                          ?_UART2_is_rx_ready 0001                         TMR5_ISR@CountCallBack 016C  
                   __size_of_UART1_Initialize 00B8                      _UART1_TxInterruptHandler 015A  
                         ??_UART2_is_rx_ready 0006                     __end_of_send_lcd_cmd_long 3C44  
                         __end_of_Default_ISR 3FC6                                  ___aodiv@sign 0017  
              __end_of_PIN_MANAGER_Initialize 32E4                             ??_ADCC_Initialize 0006  
               ?_TMR6_DefaultInterruptHandler 0001                 ?_UART2_SetOverrunErrorHandler 0006  
                ?_UART1_SetTxInterruptHandler 0006                       _eaDogM_WriteStringAtPos 3D64  
                ?_UART2_SetRxInterruptHandler 0006                                  ___aomod@sign 0017  
                               once@once_flag 0006                                 _led_lightshow 2DA2  
                   __size_of_UART2_Initialize 00AC  
