

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Sep  1 17:52:25 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,inline
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,inline
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=4,class=CODE,delta=1
    81                           	psect	text64,global,reloc=4,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=4,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=4,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=4,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=4,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=4,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   104                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   107  0000                     
   108                           ; Version 2.10
   109                           ; Generated 31/07/2019 GMT
   110                           ; 
   111                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   112                           ; All rights reserved.
   113                           ; 
   114                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   115                           ; 
   116                           ; Redistribution and use in source and binary forms, with or without modification, are
   117                           ; permitted provided that the following conditions are met:
   118                           ; 
   119                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   120                           ;        conditions and the following disclaimer.
   121                           ; 
   122                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   123                           ;        of conditions and the following disclaimer in the documentation and/or other
   124                           ;        materials provided with the distribution.
   125                           ; 
   126                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   127                           ;        software without specific prior written permission.
   128                           ; 
   129                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   130                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   131                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   132                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   133                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   134                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   135                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   136                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   137                           ; 
   138                           ; 
   139                           ; Code-generator required, PIC18F47K42 Definitions
   140                           ; 
   141                           ; SFR Addresses
   142  0000                     
   143                           	psect	idataBANK0
   144  003FA4                     __pidataBANK0:
   145                           	opt callstack 0
   146                           
   147                           ;initializer for led_lightshow@LED_UP
   148  003FA4  01                 	db	1
   149                           
   150                           ;initializer for led_lightshow@cylon
   151  003FA5  FF                 	db	255
   152                           
   153                           	psect	idataBANK1
   154  003B2A                     __pidataBANK1:
   155                           	opt callstack 0
   156                           
   157                           ;initializer for stoa@F1139
   158  003B2A  28                 	db	40
   159  003B2B  6E                 	db	110
   160  003B2C  75                 	db	117
   161  003B2D  6C                 	db	108
   162  003B2E  6C                 	db	108
   163  003B2F  29                 	db	41
   164  003B30  00                 	db	0
   165                           
   166                           ;initializer for _sounds
   167  003B31  A5                 	db	low (_IO+6)
   168  003B32  01                 	db	high (_IO+6)
   169                           
   170                           ;initializer for _switches
   171  003B33  9F                 	db	low _IO
   172  003B34  01                 	db	high _IO
   173                           
   174                           ;initializer for _IO
   175  003B35  00                 	db	0
   176  003B36  00                 	db	0
   177  003B37  00                 	db	0
   178  003B38  00                 	db	0
   179  003B39  00                 	db	0
   180  003B3A  00                 	db	0
   181  003B3B  00                 	db	0
   182  003B3C  00                 	db	0
   183  003B3D  00                 	db	0
   184  003B3E  00                 	db	0
   185  003B3F  00                 	db	0
   186  003B40  00                 	db	0
   187  003B41  00                 	db	0
   188  003B42  00                 	db	0
   189  003B43  00                 	db	0
   190  003B44  00                 	db	0
   191  003B45  00                 	db	0
   192  003B46  00                 	db	0
   193  003B47  00                 	db	0
   194  003B48  32                 	db	50
   195  003B49  00                 	db	0
   196  003B4A  0000               	dw	0
   197  003B4C  000A               	dw	10
   198  003B4E  0000               	dw	0
   199  003B50  0000               	dw	0
   200  003B52  01                 	db	1
   201  003B53  00                 	db	0
   202  003B54  00                 	db	0
   203  003B55  01                 	db	1
   204  003B56  01                 	db	1
   205  003B57  01                 	db	1
   206  003B58  00                 	db	0
   207  0000                     _IVTADL	set	14493
   208  0000                     _IVTADH	set	14494
   209  0000                     _IVTADU	set	14495
   210  0000                     _PIR2bits	set	14754
   211  0000                     _PIE8bits	set	14744
   212  0000                     _PIR8bits	set	14760
   213  0000                     _PIE9bits	set	14745
   214  0000                     _PIR9bits	set	14761
   215  0000                     _PIR4bits	set	14756
   216  0000                     _PIE6bits	set	14742
   217  0000                     _PIE3bits	set	14739
   218  0000                     _IPR8bits	set	14728
   219  0000                     _IPR9bits	set	14729
   220  0000                     _IPR3bits	set	14723
   221  0000                     _IPR6bits	set	14726
   222  0000                     _PMD7	set	14791
   223  0000                     _PMD6	set	14790
   224  0000                     _PMD5	set	14789
   225  0000                     _PMD4	set	14788
   226  0000                     _PMD3	set	14787
   227  0000                     _PMD2	set	14786
   228  0000                     _PMD1	set	14785
   229  0000                     _PMD0	set	14784
   230  0000                     _OSCTUNE	set	14814
   231  0000                     _OSCFRQ	set	14815
   232  0000                     _OSCEN	set	14813
   233  0000                     _OSCCON3	set	14811
   234  0000                     _OSCCON1	set	14809
   235  0000                     _PLLR	set	118496
   236  0000                     _SPI1SDIPPS	set	15071
   237  0000                     _U1RXPPS	set	15077
   238  0000                     _RC6PPS	set	14870
   239  0000                     _RC5PPS	set	14869
   240  0000                     _RD1PPS	set	14873
   241  0000                     _RC3PPS	set	14867
   242  0000                     _RB6PPS	set	14862
   243  0000                     _SPI1SCKPPS	set	15070
   244  0000                     _U2RXPPS	set	15080
   245  0000                     _SLRCONE	set	14979
   246  0000                     _SLRCOND	set	14963
   247  0000                     _SLRCONC	set	14947
   248  0000                     _SLRCONB	set	14931
   249  0000                     _SLRCONA	set	14915
   250  0000                     _ODCOND	set	14962
   251  0000                     _ODCONC	set	14946
   252  0000                     _ODCONB	set	14930
   253  0000                     _ODCONA	set	14914
   254  0000                     _ODCONE	set	14978
   255  0000                     _RD1I2C	set	14971
   256  0000                     _RD0I2C	set	14970
   257  0000                     _RC4I2C	set	14955
   258  0000                     _RC3I2C	set	14954
   259  0000                     _RB2I2C	set	14939
   260  0000                     _RB1I2C	set	14938
   261  0000                     _WPUC	set	14945
   262  0000                     _WPUA	set	14913
   263  0000                     _WPUB	set	14929
   264  0000                     _WPUE	set	14977
   265  0000                     _WPUD	set	14961
   266  0000                     _ANSELA	set	14912
   267  0000                     _ANSELE	set	14976
   268  0000                     _ANSELB	set	14928
   269  0000                     _ANSELC	set	14944
   270  0000                     _ANSELD	set	14960
   271  0000                     _SPI1RXB	set	15632
   272  0000                     _SPI1TXB	set	15633
   273  0000                     _SPI1TCNTL	set	15634
   274  0000                     _SPI1CON0	set	15636
   275  0000                     _SPI1CLK	set	15644
   276  0000                     _SPI1BAUD	set	15641
   277  0000                     _SPI1CON2	set	15638
   278  0000                     _SPI1CON1	set	15637
   279  0000                     _U2RXB	set	15824
   280  0000                     _U2TXB	set	15826
   281  0000                     _U2ERRIRbits	set	15841
   282  0000                     _U2ERRIE	set	15842
   283  0000                     _U2ERRIR	set	15841
   284  0000                     _U2UIR	set	15840
   285  0000                     _U2FIFO	set	15839
   286  0000                     _U2BRGH	set	15838
   287  0000                     _U2BRGL	set	15837
   288  0000                     _U2CON2	set	15836
   289  0000                     _U2CON1	set	15835
   290  0000                     _U2CON0	set	15834
   291  0000                     _U2P3L	set	15832
   292  0000                     _U2P2L	set	15830
   293  0000                     _U2P1L	set	15828
   294  0000                     _U1RXB	set	15848
   295  0000                     _U1TXB	set	15850
   296  0000                     _U1ERRIRbits	set	15865
   297  0000                     _U1ERRIE	set	15866
   298  0000                     _U1ERRIR	set	15865
   299  0000                     _U1UIR	set	15864
   300  0000                     _U1FIFO	set	15863
   301  0000                     _U1BRGH	set	15862
   302  0000                     _U1BRGL	set	15861
   303  0000                     _U1CON2	set	15860
   304  0000                     _U1CON1	set	15859
   305  0000                     _U1CON0	set	15858
   306  0000                     _U1P3H	set	15857
   307  0000                     _U1P3L	set	15856
   308  0000                     _U1P2H	set	15855
   309  0000                     _U1P2L	set	15854
   310  0000                     _U1P1H	set	15853
   311  0000                     _U1P1L	set	15852
   312  0000                     _ADRESL	set	16111
   313  0000                     _ADRESH	set	16112
   314  0000                     _ADCON0bits	set	16120
   315  0000                     _ADCON0	set	16120
   316  0000                     _ADCLK	set	16127
   317  0000                     _ADACT	set	16126
   318  0000                     _ADREF	set	16125
   319  0000                     _ADSTAT	set	16124
   320  0000                     _ADCON3	set	16123
   321  0000                     _ADCON2	set	16122
   322  0000                     _ADCON1	set	16121
   323  0000                     _ADPREH	set	16119
   324  0000                     _ADPREL	set	16118
   325  0000                     _ADCAP	set	16117
   326  0000                     _ADACQH	set	16116
   327  0000                     _ADACQL	set	16115
   328  0000                     _ADPCH	set	16113
   329  0000                     _ADRPT	set	16108
   330  0000                     _ADACCU	set	16106
   331  0000                     _ADSTPTH	set	16101
   332  0000                     _ADSTPTL	set	16100
   333  0000                     _ADUTHH	set	16097
   334  0000                     _ADUTHL	set	16096
   335  0000                     _ADLTHH	set	16095
   336  0000                     _ADLTHL	set	16094
   337  0000                     _CCPTMRS1bits	set	16223
   338  0000                     _LATCbits	set	16316
   339  0000                     _LATEbits	set	16318
   340  0000                     _T5CONbits	set	16282
   341  0000                     _T5CON	set	16282
   342  0000                     _TMR5L	set	16280
   343  0000                     _TMR5H	set	16281
   344  0000                     _T5CLK	set	16285
   345  0000                     _T5GATE	set	16284
   346  0000                     _T5GCON	set	16283
   347  0000                     _T6CON	set	16276
   348  0000                     _T6TMR	set	16274
   349  0000                     _T6PR	set	16275
   350  0000                     _T6RST	set	16279
   351  0000                     _T6HLT	set	16277
   352  0000                     _T6CLKCON	set	16278
   353  0000                     _PWM8DCL	set	16224
   354  0000                     _PWM8DCH	set	16225
   355  0000                     _PWM8CON	set	16226
   356  0000                     _T2CON	set	16300
   357  0000                     _T2TMR	set	16298
   358  0000                     _T2PR	set	16299
   359  0000                     _T2RST	set	16303
   360  0000                     _T2HLT	set	16301
   361  0000                     _T2CLKCON	set	16302
   362  0000                     _IVTLOCKbits	set	16340
   363  0000                     _IVTLOCK	set	16340
   364  0000                     _INTCON0bits	set	16338
   365  0000                     _TRISD	set	16325
   366  0000                     _TRISC	set	16324
   367  0000                     _TRISB	set	16323
   368  0000                     _TRISA	set	16322
   369  0000                     _TRISE	set	16326
   370  0000                     _LATC	set	16316
   371  0000                     _LATB	set	16315
   372  0000                     _LATA	set	16314
   373  0000                     _LATD	set	16317
   374  0000                     _LATE	set	16318
   375  0000                     _GIE	set	130711
   376                           
   377                           	psect	smallconst
   378  002000                     __psmallconst:
   379                           	opt callstack 0
   380  002000  00                 	db	0
   381  002001                     STR_1:
   382                           
   383                           ; BSR set to: 1
   384  002001  20                 	db	32
   385  002002  48                 	db	72	;'H'
   386  002003  20                 	db	32
   387  002004  25                 	db	37
   388  002005  69                 	db	105	;'i'
   389  002006  2C                 	db	44
   390  002007  20                 	db	32
   391  002008  4D                 	db	77	;'M'
   392  002009  20                 	db	32
   393  00200A  25                 	db	37
   394  00200B  69                 	db	105	;'i'
   395  00200C  20                 	db	32
   396  00200D  20                 	db	32
   397  00200E  20                 	db	32
   398  00200F  20                 	db	32
   399  002010  20                 	db	32
   400  002011  00                 	db	0
   401  002012                     STR_2:
   402                           
   403                           ; BSR set to: 1
   404  002012  20                 	db	32
   405  002013  53                 	db	83	;'S'
   406  002014  63                 	db	99	;'c'
   407  002015  6F                 	db	111	;'o'
   408  002016  72                 	db	114	;'r'
   409  002017  65                 	db	101	;'e'
   410  002018  20                 	db	32
   411  002019  25                 	db	37
   412  00201A  69                 	db	105	;'i'
   413  00201B  20                 	db	32
   414  00201C  25                 	db	37
   415  00201D  69                 	db	105	;'i'
   416  00201E  20                 	db	32
   417  00201F  20                 	db	32
   418  002020  20                 	db	32
   419  002021  20                 	db	32
   420  002022  00                 	db	0
   421  002023                     STR_3:
   422                           
   423                           ; BSR set to: 1
   424  002023  20                 	db	32
   425  002024  44                 	db	68	;'D'
   426  002025  6F                 	db	111	;'o'
   427  002026  6E                 	db	110	;'n'
   428  002027  65                 	db	101	;'e'
   429  002028  2C                 	db	44
   430  002029  20                 	db	32
   431  00202A  4F                 	db	79	;'O'
   432  00202B  4B                 	db	75	;'K'
   433  00202C  20                 	db	32
   434  00202D  00                 	db	0
   435  00202E                     STR_15:
   436                           
   437                           ; BSR set to: 1
   438  00202E  52                 	db	82	;'R'
   439  00202F  30                 	db	48	;'0'
   440  002030  0D                 	db	13
   441  002031  00                 	db	0
   442  002032                     STR_7:
   443                           
   444                           ; BSR set to: 1
   445  002032  54                 	db	84	;'T'
   446  002033  32                 	db	50	;'2'
   447  002034  0D                 	db	13
   448  002035  00                 	db	0
   449  002036                     STR_9:
   450                           
   451                           ; BSR set to: 1
   452  002036  43                 	db	67	;'C'
   453  002037  34                 	db	52	;'4'
   454  002038  0D                 	db	13
   455  002039  00                 	db	0
   456  00203A                     STR_11:
   457                           
   458                           ; BSR set to: 1
   459  00203A  46                 	db	70	;'F'
   460  00203B  34                 	db	52	;'4'
   461  00203C  0D                 	db	13
   462  00203D  00                 	db	0
   463  00203E                     STR_13:
   464                           
   465                           ; BSR set to: 1
   466  00203E  4D                 	db	77	;'M'
   467  00203F  34                 	db	52	;'4'
   468  002040  0D                 	db	13
   469  002041  00                 	db	0
   470  002042                     STR_5:
   471                           
   472                           ; BSR set to: 1
   473  002042  58                 	db	88	;'X'
   474  002043  51                 	db	81	;'Q'
   475  002044  0D                 	db	13
   476  002045  00                 	db	0
   477  002046                     STR_4:
   478                           
   479                           ; BSR set to: 1
   480  002046  25                 	db	37
   481  002047  73                 	db	115	;'s'
   482  002048  00                 	db	0
   483  0000                     
   484                           ; #config settings
   485  002049  00                 	db	0	; dummy byte at the end
   486  0000                     
   487                           	psect	cinit
   488  003590                     __pcinit:
   489                           	opt callstack 0
   490  003590                     start_initialization:
   491                           	opt callstack 0
   492  003590                     __initialization:
   493                           	opt callstack 0
   494                           
   495                           ; Initialize objects allocated to BANK1 (47 bytes)
   496                           ; load TBLPTR registers with __pidataBANK1
   497  003590  0E2A               	movlw	low __pidataBANK1
   498  003592  6EF6               	movwf	tblptrl,c
   499  003594  0E3B               	movlw	high __pidataBANK1
   500  003596  6EF7               	movwf	tblptrh,c
   501  003598  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   502  00359A  6EF8               	movwf	tblptru,c
   503  00359C  EE00  F194         	lfsr	0,__pdataBANK1
   504  0035A0  EE10 F02F          	lfsr	1,47
   505  0035A4                     copy_data0:
   506  0035A4  0009               	tblrd		*+
   507  0035A6  006F FFD7 FFEE     	movff	tablat,postinc0
   508  0035AC  50E5               	movf	postdec1,w,c
   509  0035AE  50E1               	movf	fsr1l,w,c
   510  0035B0  E1F9               	bnz	copy_data0
   511                           
   512                           ; Initialize objects allocated to BANK0 (2 bytes)
   513                           ; load TBLPTR registers with __pidataBANK0
   514  0035B2  0EA4               	movlw	low __pidataBANK0
   515  0035B4  6EF6               	movwf	tblptrl,c
   516  0035B6  0E3F               	movlw	high __pidataBANK0
   517  0035B8  6EF7               	movwf	tblptrh,c
   518  0035BA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   519  0035BC  6EF8               	movwf	tblptru,c
   520  0035BE  0009               	tblrd		*+	;fetch initializer
   521  0035C0  006F FFD4  F0FE    	movff	tablat,__pdataBANK0
   522  0035C6  0009               	tblrd		*+	;fetch initializer
   523  0035C8  006F FFD4  F0FF    	movff	tablat,__pdataBANK0+1
   524                           
   525                           ; Clear objects allocated to BANK1 (148 bytes)
   526  0035CE  EE00  F100         	lfsr	0,__pbssBANK1
   527  0035D2  0E94               	movlw	148
   528  0035D4                     clear_0:
   529  0035D4  6AEE               	clrf	postinc0,c
   530  0035D6  06E8               	decf	wreg,f,c
   531  0035D8  E1FD               	bnz	clear_0
   532                           
   533                           ; Clear objects allocated to BANK0 (12 bytes)
   534  0035DA  EE00  F0F2         	lfsr	0,__pbssBANK0
   535  0035DE  0E0C               	movlw	12
   536  0035E0                     clear_1:
   537  0035E0  6AEE               	clrf	postinc0,c
   538  0035E2  06E8               	decf	wreg,f,c
   539  0035E4  E1FD               	bnz	clear_1
   540                           
   541                           ; Clear objects allocated to COMRAM (5 bytes)
   542  0035E6  6A5A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   543  0035E8  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   544  0035EA  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   545  0035EC  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   546  0035EE  6A56               	clrf	__pbssCOMRAM& (0+255),c
   547                           
   548                           ;
   549                           ; Setup IVTBASE
   550                           ;
   551  0035F0  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   552  0035F2  6ED5               	movwf	213,c
   553  0035F4  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   554  0035F6  6ED6               	movwf	214,c
   555  0035F8  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   556  0035FA  6ED7               	movwf	215,c
   557  0035FC                     end_of_initialization:
   558                           	opt callstack 0
   559  0035FC                     __end_of__initialization:
   560                           	opt callstack 0
   561  0035FC  0100               	movlb	0
   562  0035FE  EF7B  F011         	goto	_main	;jump to C main() function
   563                           
   564                           	psect	bssCOMRAM
   565  000056                     __pbssCOMRAM:
   566                           	opt callstack 0
   567  000056                     _flags:
   568                           	opt callstack 0
   569  000056                     	ds	2
   570  000058                     _uart2RxTail:
   571                           	opt callstack 0
   572  000058                     	ds	1
   573  000059                     _uart2RxHead:
   574                           	opt callstack 0
   575  000059                     	ds	1
   576  00005A                     _uart1RxHead:
   577                           	opt callstack 0
   578  00005A                     	ds	1
   579                           
   580                           	psect	bssBANK0
   581  0000F2                     __pbssBANK0:
   582                           	opt callstack 0
   583  0000F2                     _prec:
   584                           	opt callstack 0
   585  0000F2                     	ds	2
   586  0000F4                     led_lightshow@alive_led:
   587                           	opt callstack 0
   588  0000F4                     	ds	2
   589  0000F6                     Digital232_RW@x:
   590                           	opt callstack 0
   591  0000F6                     	ds	1
   592  0000F7                     _uart2RxCount:
   593                           	opt callstack 0
   594  0000F7                     	ds	1
   595  0000F8                     _uart2TxBufferRemaining:
   596                           	opt callstack 0
   597  0000F8                     	ds	1
   598  0000F9                     _uart2TxTail:
   599                           	opt callstack 0
   600  0000F9                     	ds	1
   601  0000FA                     _uart2TxHead:
   602                           	opt callstack 0
   603  0000FA                     	ds	1
   604  0000FB                     _uart1TxBufferRemaining:
   605                           	opt callstack 0
   606  0000FB                     	ds	1
   607  0000FC                     _uart1TxTail:
   608                           	opt callstack 0
   609  0000FC                     	ds	1
   610  0000FD                     _uart1TxHead:
   611                           	opt callstack 0
   612  0000FD                     	ds	1
   613                           
   614                           	psect	dataBANK0
   615  0000FE                     __pdataBANK0:
   616                           	opt callstack 0
   617  0000FE                     led_lightshow@LED_UP:
   618                           	opt callstack 0
   619  0000FE                     	ds	1
   620  0000FF                     led_lightshow@cylon:
   621                           	opt callstack 0
   622  0000FF                     	ds	1
   623                           
   624                           	psect	bssBANK1
   625  000100                     __pbssBANK1:
   626                           	opt callstack 0
   627  000100                     _tickCount:
   628                           	opt callstack 0
   629  000100                     	ds	14
   630  00010E                     _uart2RxStatusBuffer:
   631                           	opt callstack 0
   632  00010E                     	ds	8
   633  000116                     _uart2RxBuffer:
   634                           	opt callstack 0
   635  000116                     	ds	8
   636  00011E                     _uart2TxBuffer:
   637                           	opt callstack 0
   638  00011E                     	ds	8
   639  000126                     _uart1RxStatusBuffer:
   640                           	opt callstack 0
   641  000126                     	ds	8
   642  00012E                     _uart1RxBuffer:
   643                           	opt callstack 0
   644  00012E                     	ds	8
   645  000136                     _uart1TxBuffer:
   646                           	opt callstack 0
   647  000136                     	ds	8
   648  00013E                     wdtdelay@dcount:
   649                           	opt callstack 0
   650  00013E                     	ds	4
   651  000142                     _TMR5_InterruptHandler:
   652                           	opt callstack 0
   653  000142                     	ds	3
   654  000145                     _TMR6_InterruptHandler:
   655                           	opt callstack 0
   656  000145                     	ds	3
   657  000148                     _UART2_ErrorHandler:
   658                           	opt callstack 0
   659  000148                     	ds	3
   660  00014B                     _UART2_OverrunErrorHandler:
   661                           	opt callstack 0
   662  00014B                     	ds	3
   663  00014E                     _UART2_FramingErrorHandler:
   664                           	opt callstack 0
   665  00014E                     	ds	3
   666  000151                     _UART1_ErrorHandler:
   667                           	opt callstack 0
   668  000151                     	ds	3
   669  000154                     _UART1_OverrunErrorHandler:
   670                           	opt callstack 0
   671  000154                     	ds	3
   672  000157                     _UART1_FramingErrorHandler:
   673                           	opt callstack 0
   674  000157                     	ds	3
   675  00015A                     _UART1_TxInterruptHandler:
   676                           	opt callstack 0
   677  00015A                     	ds	3
   678  00015D                     _UART1_RxInterruptHandler:
   679                           	opt callstack 0
   680  00015D                     	ds	3
   681  000160                     _UART2_TxInterruptHandler:
   682                           	opt callstack 0
   683  000160                     	ds	3
   684  000163                     _UART2_RxInterruptHandler:
   685                           	opt callstack 0
   686  000163                     	ds	3
   687  000166                     _nout:
   688                           	opt callstack 0
   689  000166                     	ds	2
   690  000168                     _width:
   691                           	opt callstack 0
   692  000168                     	ds	2
   693  00016A                     led_lightshow@j:
   694                           	opt callstack 0
   695  00016A                     	ds	2
   696  00016C                     TMR5_ISR@CountCallBack:
   697                           	opt callstack 0
   698  00016C                     	ds	2
   699  00016E                     _timer5ReloadVal:
   700                           	opt callstack 0
   701  00016E                     	ds	2
   702  000170                     _uart2RxLastError:
   703                           	opt callstack 0
   704  000170                     	ds	1
   705  000171                     _uart1RxLastError:
   706                           	opt callstack 0
   707  000171                     	ds	1
   708  000172                     _uart1RxCount:
   709                           	opt callstack 0
   710  000172                     	ds	1
   711  000173                     _uart1RxTail:
   712                           	opt callstack 0
   713  000173                     	ds	1
   714  000174                     _dbuf:
   715                           	opt callstack 0
   716  000174                     	ds	32
   717                           
   718                           	psect	dataBANK1
   719  000194                     __pdataBANK1:
   720                           	opt callstack 0
   721  000194                     stoa@F1139:
   722                           	opt callstack 0
   723  000194                     	ds	7
   724  00019B                     _sounds:
   725                           	opt callstack 0
   726  00019B                     	ds	2
   727  00019D                     _switches:
   728                           	opt callstack 0
   729  00019D                     	ds	2
   730  00019F                     _IO:
   731                           	opt callstack 0
   732  00019F                     	ds	36
   733                           
   734                           	psect	cstackBANK1
   735  0001C3                     __pcstackBANK1:
   736                           	opt callstack 0
   737  0001C3                     ??_main:
   738                           
   739                           ; 1 bytes @ 0x0
   740  0001C3                     	ds	3
   741  0001C6                     main@y:
   742                           	opt callstack 0
   743                           
   744                           ; 1 bytes @ 0x3
   745  0001C6                     	ds	1
   746                           
   747                           	psect	cstackBANK0
   748  000060                     __pcstackBANK0:
   749                           	opt callstack 0
   750  000060                     ?_vfprintf:
   751                           	opt callstack 0
   752  000060                     vfprintf@fp:
   753                           	opt callstack 0
   754                           
   755                           ; 2 bytes @ 0x0
   756  000060                     	ds	2
   757  000062                     vfprintf@fmt:
   758                           	opt callstack 0
   759                           
   760                           ; 1 bytes @ 0x2
   761  000062                     	ds	1
   762  000063                     vfprintf@ap:
   763                           	opt callstack 0
   764                           
   765                           ; 1 bytes @ 0x3
   766  000063                     	ds	1
   767  000064                     ?_sprintf:
   768                           	opt callstack 0
   769  000064                     ?_printf:
   770                           	opt callstack 0
   771  000064                     sprintf@s:
   772                           	opt callstack 0
   773  000064                     printf@fmt:
   774                           	opt callstack 0
   775                           
   776                           ; 1 bytes @ 0x4
   777  000064                     	ds	1
   778  000065                     sprintf@fmt:
   779                           	opt callstack 0
   780                           
   781                           ; 1 bytes @ 0x5
   782  000065                     	ds	4
   783  000069                     printf@ap:
   784                           	opt callstack 0
   785                           
   786                           ; 1 bytes @ 0x9
   787  000069                     	ds	1
   788  00006A                     ??_Digital232_RW:
   789                           
   790                           ; 1 bytes @ 0xA
   791  00006A                     	ds	2
   792  00006C                     Digital232_RW@i:
   793                           	opt callstack 0
   794  00006C                     sprintf@ap:
   795                           	opt callstack 0
   796                           
   797                           ; 1 bytes @ 0xC
   798  00006C                     	ds	1
   799  00006D                     Digital232_RW@j:
   800                           	opt callstack 0
   801  00006D                     sprintf@f:
   802                           	opt callstack 0
   803                           
   804                           ; 5 bytes @ 0xD
   805  00006D                     	ds	5
   806  000072                     work_sw@buffer:
   807                           	opt callstack 0
   808                           
   809                           ; 128 bytes @ 0x12
   810  000072                     	ds	128
   811                           
   812                           	psect	cstackCOMRAM
   813  000001                     __pcstackCOMRAM:
   814                           	opt callstack 0
   815  000001                     
   816                           ; 1 bytes @ 0x0
   817  000001                     	ds	2
   818  000003                     TMR6_DefaultInterruptHandler@i:
   819                           	opt callstack 0
   820                           
   821                           ; 1 bytes @ 0x2
   822  000003                     	ds	1
   823  000004                     ??_TMR5_DefaultInterruptHandler:
   824  000004                     TMR5_WriteTimer@timerVal:
   825                           	opt callstack 0
   826                           
   827                           ; 2 bytes @ 0x3
   828  000004                     	ds	1
   829  000005                     
   830                           ; 1 bytes @ 0x4
   831  000005                     	ds	1
   832  000006                     ?_strlen:
   833                           	opt callstack 0
   834  000006                     ?_ADCC_GetConversionResult:
   835                           	opt callstack 0
   836  000006                     ?___awdiv:
   837                           	opt callstack 0
   838  000006                     ?___aodiv:
   839                           	opt callstack 0
   840  000006                     ?___aomod:
   841                           	opt callstack 0
   842  000006                     INTERRUPT_Initialize@state:
   843                           	opt callstack 0
   844  000006                     UART2_Read@readValue:
   845                           	opt callstack 0
   846  000006                     UART2_Write@txData:
   847                           	opt callstack 0
   848  000006                     ADCC_StartConversion@channel:
   849                           	opt callstack 0
   850  000006                     SPI1_Exchange8bit@data:
   851                           	opt callstack 0
   852  000006                     PWM8_LoadDutyValue@dutyValue:
   853                           	opt callstack 0
   854  000006                     once@once_flag:
   855                           	opt callstack 0
   856  000006                     StartTimer@count:
   857                           	opt callstack 0
   858  000006                     ___awdiv@dividend:
   859                           	opt callstack 0
   860  000006                     strlen@s:
   861                           	opt callstack 0
   862  000006                     UART1_SetFramingErrorHandler@interruptHandler:
   863                           	opt callstack 0
   864  000006                     UART1_SetOverrunErrorHandler@interruptHandler:
   865                           	opt callstack 0
   866  000006                     UART1_SetErrorHandler@interruptHandler:
   867                           	opt callstack 0
   868  000006                     UART1_SetRxInterruptHandler@InterruptHandler:
   869                           	opt callstack 0
   870  000006                     UART1_SetTxInterruptHandler@InterruptHandler:
   871                           	opt callstack 0
   872  000006                     UART2_SetFramingErrorHandler@interruptHandler:
   873                           	opt callstack 0
   874  000006                     UART2_SetOverrunErrorHandler@interruptHandler:
   875                           	opt callstack 0
   876  000006                     UART2_SetErrorHandler@interruptHandler:
   877                           	opt callstack 0
   878  000006                     UART2_SetRxInterruptHandler@InterruptHandler:
   879                           	opt callstack 0
   880  000006                     UART2_SetTxInterruptHandler@InterruptHandler:
   881                           	opt callstack 0
   882  000006                     TMR6_SetInterruptHandler@InterruptHandler:
   883                           	opt callstack 0
   884  000006                     TMR5_SetInterruptHandler@InterruptHandler:
   885                           	opt callstack 0
   886  000006                     wdtdelay@delay:
   887                           	opt callstack 0
   888  000006                     ___aodiv@dividend:
   889                           	opt callstack 0
   890  000006                     ___aomod@dividend:
   891                           	opt callstack 0
   892                           
   893                           ; 8 bytes @ 0x5
   894  000006                     	ds	1
   895  000007                     putch@txData:
   896                           	opt callstack 0
   897                           
   898                           ; 1 bytes @ 0x6
   899  000007                     	ds	1
   900  000008                     ??_StartTimer:
   901  000008                     ??_PWM8_LoadDutyValue:
   902  000008                     ??_ADCC_GetConversionResult:
   903  000008                     TimerDone@timer:
   904                           	opt callstack 0
   905  000008                     ___awdiv@divisor:
   906                           	opt callstack 0
   907  000008                     fputc@c:
   908                           	opt callstack 0
   909  000008                     strlen@a:
   910                           	opt callstack 0
   911                           
   912                           ; 2 bytes @ 0x7
   913  000008                     	ds	1
   914  000009                     ??_TMR5_Initialize:
   915  000009                     
   916                           ; 1 bytes @ 0x8
   917  000009                     	ds	1
   918  00000A                     StartTimer@timer:
   919                           	opt callstack 0
   920  00000A                     send_lcd_cmd@cmd:
   921                           	opt callstack 0
   922  00000A                     send_lcd_cmd_long@cmd:
   923                           	opt callstack 0
   924  00000A                     ___awdiv@counter:
   925                           	opt callstack 0
   926  00000A                     eaDogM_WriteString@strPtr:
   927                           	opt callstack 0
   928  00000A                     fputc@fp:
   929                           	opt callstack 0
   930                           
   931                           ; 2 bytes @ 0x9
   932  00000A                     	ds	1
   933  00000B                     eaDogM_WriteCommand@cmd:
   934                           	opt callstack 0
   935  00000B                     ___awdiv@sign:
   936                           	opt callstack 0
   937  00000B                     WaitMs@numMilliseconds:
   938                           	opt callstack 0
   939                           
   940                           ; 2 bytes @ 0xA
   941  00000B                     	ds	1
   942  00000C                     ??_fputc:
   943  00000C                     ??_eaDogM_WriteString:
   944  00000C                     ___awdiv@quotient:
   945                           	opt callstack 0
   946                           
   947                           ; 2 bytes @ 0xB
   948  00000C                     	ds	1
   949  00000D                     
   950                           ; 1 bytes @ 0xC
   951  00000D                     	ds	1
   952  00000E                     eaDogM_WriteString@i:
   953                           	opt callstack 0
   954  00000E                     led_lightshow@speed:
   955                           	opt callstack 0
   956  00000E                     ___aodiv@divisor:
   957                           	opt callstack 0
   958  00000E                     ___aomod@divisor:
   959                           	opt callstack 0
   960                           
   961                           ; 8 bytes @ 0xD
   962  00000E                     	ds	1
   963  00000F                     eaDogM_WriteString@bytesWritten:
   964                           	opt callstack 0
   965                           
   966                           ; 1 bytes @ 0xE
   967  00000F                     	ds	1
   968  000010                     ??_led_lightshow:
   969  000010                     eaDogM_WriteStringAtPos@c:
   970                           	opt callstack 0
   971                           
   972                           ; 1 bytes @ 0xF
   973  000010                     	ds	1
   974  000011                     ?_stoa:
   975                           	opt callstack 0
   976  000011                     eaDogM_WriteStringAtPos@strPtr:
   977                           	opt callstack 0
   978  000011                     stoa@fp:
   979                           	opt callstack 0
   980  000011                     fputs@s:
   981                           	opt callstack 0
   982                           
   983                           ; 2 bytes @ 0x10
   984  000011                     	ds	1
   985  000012                     led_lightshow@seq:
   986                           	opt callstack 0
   987                           
   988                           ; 1 bytes @ 0x11
   989  000012                     	ds	1
   990  000013                     eaDogM_WriteStringAtPos@r:
   991                           	opt callstack 0
   992  000013                     stoa@s:
   993                           	opt callstack 0
   994  000013                     fputs@fp:
   995                           	opt callstack 0
   996                           
   997                           ; 2 bytes @ 0x12
   998  000013                     	ds	2
   999  000015                     ??_stoa:
  1000  000015                     fputs@c:
  1001                           	opt callstack 0
  1002                           
  1003                           ; 1 bytes @ 0x14
  1004  000015                     	ds	1
  1005  000016                     ___aodiv@counter:
  1006                           	opt callstack 0
  1007  000016                     ___aomod@counter:
  1008                           	opt callstack 0
  1009  000016                     fputs@i:
  1010                           	opt callstack 0
  1011  000016                     stoa@nuls:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 7 bytes @ 0x15
  1015  000016                     	ds	1
  1016  000017                     ___aodiv@sign:
  1017                           	opt callstack 0
  1018  000017                     ___aomod@sign:
  1019                           	opt callstack 0
  1020                           
  1021                           ; 1 bytes @ 0x16
  1022  000017                     	ds	1
  1023  000018                     ?_abs:
  1024                           	opt callstack 0
  1025  000018                     ?_pad:
  1026                           	opt callstack 0
  1027  000018                     pad@fp:
  1028                           	opt callstack 0
  1029  000018                     abs@a:
  1030                           	opt callstack 0
  1031  000018                     ___aodiv@quotient:
  1032                           	opt callstack 0
  1033                           
  1034                           ; 8 bytes @ 0x17
  1035  000018                     	ds	2
  1036  00001A                     ??_abs:
  1037  00001A                     pad@buf:
  1038                           	opt callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x19
  1041  00001A                     	ds	2
  1042  00001C                     pad@p:
  1043                           	opt callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x1B
  1046  00001C                     	ds	1
  1047  00001D                     stoa@i:
  1048                           	opt callstack 0
  1049                           
  1050                           ; 2 bytes @ 0x1C
  1051  00001D                     	ds	1
  1052  00001E                     ??_pad:
  1053                           
  1054                           ; 1 bytes @ 0x1D
  1055  00001E                     	ds	1
  1056  00001F                     pad@i:
  1057                           	opt callstack 0
  1058  00001F                     stoa@w:
  1059                           	opt callstack 0
  1060                           
  1061                           ; 2 bytes @ 0x1E
  1062  00001F                     	ds	2
  1063  000021                     pad@w:
  1064                           	opt callstack 0
  1065  000021                     stoa@cp:
  1066                           	opt callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x20
  1069  000021                     	ds	2
  1070  000023                     ?_dtoa:
  1071                           	opt callstack 0
  1072  000023                     dtoa@fp:
  1073                           	opt callstack 0
  1074  000023                     stoa@p:
  1075                           	opt callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x22
  1078  000023                     	ds	2
  1079  000025                     stoa@l:
  1080                           	opt callstack 0
  1081  000025                     dtoa@d:
  1082                           	opt callstack 0
  1083                           
  1084                           ; 8 bytes @ 0x24
  1085  000025                     	ds	8
  1086  00002D                     ??_dtoa:
  1087                           
  1088                           ; 1 bytes @ 0x2C
  1089  00002D                     	ds	8
  1090  000035                     _dtoa$2597:
  1091                           	opt callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x34
  1094  000035                     	ds	2
  1095  000037                     dtoa@p:
  1096                           	opt callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x36
  1099  000037                     	ds	2
  1100  000039                     dtoa@w:
  1101                           	opt callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x38
  1104  000039                     	ds	2
  1105  00003B                     dtoa@s:
  1106                           	opt callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x3A
  1109  00003B                     	ds	2
  1110  00003D                     dtoa@n:
  1111                           	opt callstack 0
  1112                           
  1113                           ; 8 bytes @ 0x3C
  1114  00003D                     	ds	8
  1115  000045                     dtoa@i:
  1116                           	opt callstack 0
  1117                           
  1118                           ; 2 bytes @ 0x44
  1119  000045                     	ds	2
  1120  000047                     ?_vfpfcnvrt:
  1121                           	opt callstack 0
  1122  000047                     vfpfcnvrt@fp:
  1123                           	opt callstack 0
  1124                           
  1125                           ; 2 bytes @ 0x46
  1126  000047                     	ds	2
  1127  000049                     vfpfcnvrt@fmt:
  1128                           	opt callstack 0
  1129                           
  1130                           ; 1 bytes @ 0x48
  1131  000049                     	ds	1
  1132  00004A                     vfpfcnvrt@ap:
  1133                           	opt callstack 0
  1134                           
  1135                           ; 1 bytes @ 0x49
  1136  00004A                     	ds	1
  1137  00004B                     vfpfcnvrt@ll:
  1138                           	opt callstack 0
  1139                           
  1140                           ; 8 bytes @ 0x4A
  1141  00004B                     	ds	8
  1142  000053                     vfpfcnvrt@cp:
  1143                           	opt callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x52
  1146  000053                     	ds	2
  1147  000055                     vfprintf@cfmt:
  1148                           	opt callstack 0
  1149                           
  1150                           ; 1 bytes @ 0x54
  1151  000055                     	ds	1
  1152  000056                     
  1153                           ; 1 bytes @ 0x55
  1154 ;;
  1155 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1156 ;;
  1157 ;; *************** function _main *****************
  1158 ;; Defined at:
  1159 ;;		line 91 in file "main.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;		None
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;  y               1    3[BANK1 ] unsigned char 
  1164 ;;  x               1    0        unsigned char 
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  1    wreg      void 
  1167 ;; Registers used:
  1168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 3F/1
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1175 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1176 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1177 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1178 ;;Total ram usage:        4 bytes
  1179 ;; Hardware stack levels required when called:   14
  1180 ;; This function calls:
  1181 ;;		_Digital232_RW
  1182 ;;		_Digital232_init
  1183 ;;		_SYSTEM_Initialize
  1184 ;;		_StartTimer
  1185 ;;		_TimerDone
  1186 ;;		_eaDogM_WriteCommand
  1187 ;;		_eaDogM_WriteStringAtPos
  1188 ;;		_init_display
  1189 ;;		_led_lightshow
  1190 ;;		_once
  1191 ;;		_work_sw
  1192 ;; This function is called by:
  1193 ;;		Startup code after reset
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           	psect	text0
  1198  0022F6                     __ptext0:
  1199                           	opt callstack 0
  1200  0022F6                     _main:
  1201                           	opt callstack 17
  1202                           
  1203                           ;incstack = 0
  1204  0022F6  0E00               	movlw	0
  1205  0022F8  0101               	movlb	1	; () banked
  1206  0022FA  6FC6               	movwf	main@y& (0+255),b
  1207                           
  1208                           ; BSR set to: 1
  1209                           ;main.c: 95:  SYSTEM_Initialize();
  1210  0022FC  EC31  F01D         	call	_SYSTEM_Initialize	;wreg free
  1211                           
  1212                           ; BSR set to: 61
  1213                           ;main.c: 102:  (INTCON0bits.GIEH = 1);
  1214  002300  8ED2               	bsf	210,7,c	;volatile
  1215                           
  1216                           ; BSR set to: 61
  1217                           ;main.c: 105:  (INTCON0bits.GIEL = 1);
  1218  002302  8CD2               	bsf	210,6,c	;volatile
  1219                           
  1220                           ; BSR set to: 61
  1221                           ;main.c: 113:  IO.input_ok = 0;
  1222  002304  0E00               	movlw	0
  1223  002306  0101               	movlb	1	; () banked
  1224  002308  6FA9               	movwf	(_IO+10)& (0+255),b
  1225                           
  1226                           ; BSR set to: 1
  1227                           ;main.c: 114:  IO.output_ok = 0;
  1228  00230A  0E00               	movlw	0
  1229  00230C  6FAA               	movwf	(_IO+11)& (0+255),b
  1230                           
  1231                           ; BSR set to: 1
  1232                           ;main.c: 115:  IO.d232 = D232_IDLE;
  1233  00230E  0E00               	movlw	0
  1234  002310  6FAC               	movwf	(_IO+13)& (0+255),b
  1235                           
  1236                           ; BSR set to: 1
  1237                           ;main.c: 116:  IO.io = IO_IDLE;
  1238  002312  0E00               	movlw	0
  1239  002314  6FAB               	movwf	(_IO+12)& (0+255),b
  1240                           
  1241                           ; BSR set to: 1
  1242                           ;main.c: 118:  init_display();
  1243  002316  EC01  F01B         	call	_init_display	;wreg free
  1244                           
  1245                           ; BSR set to: 1
  1246                           ;main.c: 119:  eaDogM_WriteCommand(0b00001100);
  1247  00231A  0E0C               	movlw	12
  1248  00231C  ECBF  F01F         	call	_eaDogM_WriteCommand
  1249                           
  1250                           ; BSR set to: 1
  1251                           ;main.c: 121:  StartTimer(TMR_INIT, 1000);
  1252  002320  0E03               	movlw	3
  1253  002322  6E07               	movwf	(StartTimer@count+1)^0,c
  1254  002324  0EE8               	movlw	232
  1255  002326  6E06               	movwf	StartTimer@count^0,c
  1256  002328  0E01               	movlw	1
  1257  00232A  EC4A  F01D         	call	_StartTimer
  1258                           
  1259                           ;main.c: 122:  Digital232_init();
  1260  00232E  EC27  F017         	call	_Digital232_init	;wreg free
  1261                           
  1262                           ;main.c: 123:  eaDogM_WriteStringAtPos(0, 0, " Done, OK ");
  1263  002332  0E00               	movlw	0
  1264  002334  6E10               	movwf	eaDogM_WriteStringAtPos@c^0,c
  1265  002336  0E23               	movlw	low STR_3
  1266  002338  6E11               	movwf	eaDogM_WriteStringAtPos@strPtr^0,c
  1267  00233A  5011               	movf	eaDogM_WriteStringAtPos@strPtr^0,w,c
  1268  00233C  A4D8               	btfss	status,2,c
  1269  00233E  0E20               	movlw	high __smallconst
  1270  002340  6E12               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)^0,c
  1271  002342  0E00               	movlw	0
  1272  002344  ECA4  F01E         	call	_eaDogM_WriteStringAtPos
  1273  002348                     l5455:
  1274                           
  1275                           ;main.c: 127:   work_sw();
  1276  002348  EC86  F01A         	call	_work_sw	;wreg free
  1277                           
  1278                           ;main.c: 128:   if (Digital232_RW() && switches->detonator)
  1279  00234C  ECA2  F012         	call	_Digital232_RW	;wreg free
  1280  002350  0900               	iorlw	0
  1281  002352  A4D8               	btfss	status,2,c
  1282                           
  1283                           ; BSR set to: 1
  1284  002354  A39F               	btfss	_IO& (0+255),1,b
  1285  002356  D007               	goto	l5463
  1286                           
  1287                           ; BSR set to: 1
  1288                           ;main.c: 129:    led_lightshow(IO.seq_value, 1);
  1289  002358  0E00               	movlw	0
  1290  00235A  6E0F               	movwf	(led_lightshow@speed+1)^0,c
  1291  00235C  0E01               	movlw	1
  1292  00235E  6E0E               	movwf	led_lightshow@speed^0,c
  1293  002360  51AF               	movf	(_IO+16)& (0+255),w,b
  1294  002362  ECB2  F016         	call	_led_lightshow
  1295  002366                     l5463:
  1296                           
  1297                           ;main.c: 131:   if (!switches->detonator) {
  1298  002366  0101               	movlb	1	; () banked
  1299  002368  B39F               	btfsc	_IO& (0+255),1,b
  1300  00236A  D0B3               	goto	l5519
  1301                           
  1302                           ; BSR set to: 1
  1303                           ;main.c: 132:    IO.outbytes[1] = IO.outbytes[1] | 0x02;
  1304  00236C  51A5               	movf	(_IO+6)& (0+255),w,b
  1305  00236E  0902               	iorlw	2
  1306  002370  6FA5               	movwf	(_IO+6)& (0+255),b
  1307                           
  1308                           ; BSR set to: 1
  1309                           ;main.c: 133:    if (IO.outbytes[2]&0b00000001) {
  1310  002372  A1A6               	btfss	(_IO+7)& (0+255),0,b
  1311  002374  D039               	goto	l5485
  1312                           
  1313                           ; BSR set to: 1
  1314                           ;main.c: 134:     if (TimerDone(TMR_EXTRA)) {
  1315  002376  0E04               	movlw	4
  1316  002378  EC14  F01E         	call	_TimerDone
  1317  00237C  0900               	iorlw	0
  1318  00237E  B4D8               	btfsc	status,2,c
  1319  002380  D033               	goto	l5485
  1320                           
  1321                           ;main.c: 135:      IO.outbytes[1] = IO.outbytes[1] | 0x04;
  1322  002382  0101               	movlb	1	; () banked
  1323  002384  51A5               	movf	(_IO+6)& (0+255),w,b
  1324  002386  0904               	iorlw	4
  1325  002388  6FA5               	movwf	(_IO+6)& (0+255),b
  1326                           
  1327                           ; BSR set to: 1
  1328                           ;main.c: 136:      if (once(&IO.f1))
  1329  00238A  0EBF               	movlw	low (_IO+32)
  1330  00238C  6E06               	movwf	once@once_flag^0,c
  1331  00238E  0E01               	movlw	high (_IO+32)
  1332  002390  6E07               	movwf	(once@once_flag+1)^0,c
  1333  002392  ECD9  F01D         	call	_once	;wreg free
  1334  002396  0900               	iorlw	0
  1335  002398  B4D8               	btfsc	status,2,c
  1336  00239A  D002               	goto	l5477
  1337                           
  1338                           ;main.c: 137:       IO.hits++;
  1339  00239C  0101               	movlb	1	; () banked
  1340  00239E  2BB0               	incf	(_IO+17)& (0+255),f,b
  1341  0023A0                     l5477:
  1342                           
  1343                           ;main.c: 138:      if (IO.speed_update && IO.speed-- < 2) {
  1344  0023A0  0101               	movlb	1	; () banked
  1345  0023A2  51BC               	movf	(_IO+29)& (0+255),w,b
  1346  0023A4  B4D8               	btfsc	status,2,c
  1347  0023A6  D01E               	goto	l1060
  1348                           
  1349                           ; BSR set to: 1
  1350  0023A8  51B6               	movf	(_IO+23)& (0+255),w,b
  1351  0023AA  6FC3               	movwf	??_main& (0+255),b
  1352  0023AC  51B7               	movf	(_IO+24)& (0+255),w,b
  1353  0023AE  6FC4               	movwf	(??_main+1)& (0+255),b
  1354  0023B0  0E01               	movlw	1
  1355  0023B2  5FB6               	subwf	(_IO+23)& (0+255),f,b
  1356  0023B4  0E00               	movlw	0
  1357  0023B6  5BB7               	subwfb	(_IO+24)& (0+255),f,b
  1358  0023B8  51C4               	movf	(??_main+1)& (0+255),w,b
  1359  0023BA  E114               	bnz	l1060
  1360  0023BC  0E02               	movlw	2
  1361  0023BE  5DC3               	subwf	??_main& (0+255),w,b
  1362  0023C0  B0D8               	btfsc	status,0,c
  1363  0023C2  D010               	goto	l1060
  1364                           
  1365                           ; BSR set to: 1
  1366                           ;main.c: 139:       IO.speed = 10;
  1367  0023C4  0E00               	movlw	0
  1368  0023C6  6FB7               	movwf	(_IO+24)& (0+255),b
  1369  0023C8  0E0A               	movlw	10
  1370  0023CA  6FB6               	movwf	(_IO+23)& (0+255),b
  1371                           
  1372                           ;main.c: 140:       IO.sequence_done = 1;
  1373  0023CC  0E01               	movlw	1
  1374  0023CE  6FBD               	movwf	(_IO+30)& (0+255),b
  1375                           
  1376                           ;main.c: 141:       IO.seq_value = 2;
  1377  0023D0  0E02               	movlw	2
  1378  0023D2  6FAF               	movwf	(_IO+16)& (0+255),b
  1379                           
  1380                           ;main.c: 142:       IO.slower = 0;
  1381  0023D4  0E00               	movlw	0
  1382  0023D6  6FB9               	movwf	(_IO+26)& (0+255),b
  1383  0023D8  0E00               	movlw	0
  1384  0023DA  6FB8               	movwf	(_IO+25)& (0+255),b
  1385                           
  1386                           ; BSR set to: 1
  1387                           ;main.c: 143:       IO.stats = IO.score;
  1388  0023DC  C1B2  F1B3         	movff	_IO+19,_IO+20
  1389                           
  1390                           ;main.c: 144:       IO.win = 1;
  1391  0023E0  0E01               	movlw	1
  1392  0023E2  6FBE               	movwf	(_IO+31)& (0+255),b
  1393  0023E4                     l1060:
  1394                           
  1395                           ; BSR set to: 1
  1396                           ;main.c: 146:      IO.speed_update = 0;
  1397  0023E4  0E00               	movlw	0
  1398  0023E6  6FBC               	movwf	(_IO+29)& (0+255),b
  1399  0023E8                     l5485:
  1400                           
  1401                           ;main.c: 151:    if (IO.outbytes[2]&0b10000000) {
  1402  0023E8  0101               	movlb	1	; () banked
  1403  0023EA  AFA6               	btfss	(_IO+7)& (0+255),7,b
  1404  0023EC  D039               	goto	l5503
  1405                           
  1406                           ; BSR set to: 1
  1407                           ;main.c: 152:     if (TimerDone(TMR_EXTRA)) {
  1408  0023EE  0E04               	movlw	4
  1409  0023F0  EC14  F01E         	call	_TimerDone
  1410  0023F4  0900               	iorlw	0
  1411  0023F6  B4D8               	btfsc	status,2,c
  1412  0023F8  D033               	goto	l5503
  1413                           
  1414                           ;main.c: 153:      IO.outbytes[1] = IO.outbytes[1] | 0x01;
  1415  0023FA  0101               	movlb	1	; () banked
  1416  0023FC  51A5               	movf	(_IO+6)& (0+255),w,b
  1417  0023FE  0901               	iorlw	1
  1418  002400  6FA5               	movwf	(_IO+6)& (0+255),b
  1419                           
  1420                           ; BSR set to: 1
  1421                           ;main.c: 154:      if (once(&IO.f2))
  1422  002402  0EC0               	movlw	low (_IO+33)
  1423  002404  6E06               	movwf	once@once_flag^0,c
  1424  002406  0E01               	movlw	high (_IO+33)
  1425  002408  6E07               	movwf	(once@once_flag+1)^0,c
  1426  00240A  ECD9  F01D         	call	_once	;wreg free
  1427  00240E  0900               	iorlw	0
  1428  002410  B4D8               	btfsc	status,2,c
  1429  002412  D002               	goto	l5495
  1430                           
  1431                           ;main.c: 155:       IO.hits++;
  1432  002414  0101               	movlb	1	; () banked
  1433  002416  2BB0               	incf	(_IO+17)& (0+255),f,b
  1434  002418                     l5495:
  1435                           
  1436                           ;main.c: 156:      if (IO.speed_update && IO.speed-- < 2) {
  1437  002418  0101               	movlb	1	; () banked
  1438  00241A  51BC               	movf	(_IO+29)& (0+255),w,b
  1439  00241C  B4D8               	btfsc	status,2,c
  1440  00241E  D01E               	goto	l1064
  1441                           
  1442                           ; BSR set to: 1
  1443  002420  51B6               	movf	(_IO+23)& (0+255),w,b
  1444  002422  6FC3               	movwf	??_main& (0+255),b
  1445  002424  51B7               	movf	(_IO+24)& (0+255),w,b
  1446  002426  6FC4               	movwf	(??_main+1)& (0+255),b
  1447  002428  0E01               	movlw	1
  1448  00242A  5FB6               	subwf	(_IO+23)& (0+255),f,b
  1449  00242C  0E00               	movlw	0
  1450  00242E  5BB7               	subwfb	(_IO+24)& (0+255),f,b
  1451  002430  51C4               	movf	(??_main+1)& (0+255),w,b
  1452  002432  E114               	bnz	l1064
  1453  002434  0E02               	movlw	2
  1454  002436  5DC3               	subwf	??_main& (0+255),w,b
  1455  002438  B0D8               	btfsc	status,0,c
  1456  00243A  D010               	goto	l1064
  1457                           
  1458                           ; BSR set to: 1
  1459                           ;main.c: 157:       IO.speed = 10;
  1460  00243C  0E00               	movlw	0
  1461  00243E  6FB7               	movwf	(_IO+24)& (0+255),b
  1462  002440  0E0A               	movlw	10
  1463  002442  6FB6               	movwf	(_IO+23)& (0+255),b
  1464                           
  1465                           ;main.c: 158:       IO.sequence_done = 1;
  1466  002444  0E01               	movlw	1
  1467  002446  6FBD               	movwf	(_IO+30)& (0+255),b
  1468                           
  1469                           ;main.c: 159:       IO.seq_value = 2;
  1470  002448  0E02               	movlw	2
  1471  00244A  6FAF               	movwf	(_IO+16)& (0+255),b
  1472                           
  1473                           ;main.c: 160:       IO.slower = 0;
  1474  00244C  0E00               	movlw	0
  1475  00244E  6FB9               	movwf	(_IO+26)& (0+255),b
  1476  002450  0E00               	movlw	0
  1477  002452  6FB8               	movwf	(_IO+25)& (0+255),b
  1478                           
  1479                           ; BSR set to: 1
  1480                           ;main.c: 161:       IO.stats = IO.score;
  1481  002454  C1B2  F1B3         	movff	_IO+19,_IO+20
  1482                           
  1483                           ;main.c: 162:       IO.win = 1;
  1484  002458  0E01               	movlw	1
  1485  00245A  6FBE               	movwf	(_IO+31)& (0+255),b
  1486  00245C                     l1064:
  1487                           
  1488                           ; BSR set to: 1
  1489                           ;main.c: 164:      IO.speed_update = 0;
  1490  00245C  0E00               	movlw	0
  1491  00245E  6FBC               	movwf	(_IO+29)& (0+255),b
  1492  002460                     l5503:
  1493                           
  1494                           ;main.c: 169:    if (IO.outbytes[2]&0b01111110) {
  1495  002460  0060  F698  F1C3   	movff	_IO+7,??_main
  1496  002466  0E7E               	movlw	126
  1497  002468  0101               	movlb	1	; () banked
  1498  00246A  17C3               	andwf	??_main& (0+255),f,b
  1499  00246C  B4D8               	btfsc	status,2,c
  1500  00246E  D76C               	goto	l5455
  1501                           
  1502                           ; BSR set to: 1
  1503                           ;main.c: 170:     if (TimerDone(TMR_EXTRA_MISS)) {
  1504  002470  0E05               	movlw	5
  1505  002472  EC14  F01E         	call	_TimerDone
  1506  002476  0900               	iorlw	0
  1507  002478  B4D8               	btfsc	status,2,c
  1508  00247A  D766               	goto	l5455
  1509                           
  1510                           ;main.c: 171:      if (once(&IO.f3)) {
  1511  00247C  0EC1               	movlw	low (_IO+34)
  1512  00247E  6E06               	movwf	once@once_flag^0,c
  1513  002480  0E01               	movlw	high (_IO+34)
  1514  002482  6E07               	movwf	(once@once_flag+1)^0,c
  1515  002484  ECD9  F01D         	call	_once	;wreg free
  1516  002488  0900               	iorlw	0
  1517  00248A  B4D8               	btfsc	status,2,c
  1518  00248C  D75D               	goto	l5455
  1519                           
  1520                           ;main.c: 172:       IO.misses++;
  1521  00248E  0101               	movlb	1	; () banked
  1522  002490  2BB1               	incf	(_IO+18)& (0+255),f,b
  1523                           
  1524                           ; BSR set to: 1
  1525                           ;main.c: 173:       if (IO.speed_update && (IO.misses++ > 20)) {
  1526  002492  51BC               	movf	(_IO+29)& (0+255),w,b
  1527  002494  B4D8               	btfsc	status,2,c
  1528  002496  D758               	goto	l5455
  1529                           
  1530                           ; BSR set to: 1
  1531  002498  EE20  F1B1         	lfsr	2,_IO+18
  1532  00249C  006F FF7C  F1C3    	movff	indf2,??_main
  1533  0024A2  0E01               	movlw	1
  1534  0024A4  26DF               	addwf	indf2,f,c
  1535  0024A6  0E14               	movlw	20
  1536  0024A8  65C3               	cpfsgt	??_main& (0+255),b
  1537  0024AA  D74E               	goto	l5455
  1538                           
  1539                           ; BSR set to: 1
  1540                           ;main.c: 174:        if (IO.score-- < 10)
  1541  0024AC  EE20  F1B2         	lfsr	2,_IO+19
  1542  0024B0  006F FF7C  F1C3    	movff	indf2,??_main
  1543  0024B6  0E01               	movlw	1
  1544  0024B8  5EDF               	subwf	indf2,f,c
  1545  0024BA  0E0A               	movlw	10
  1546  0024BC  61C3               	cpfslt	??_main& (0+255),b
  1547  0024BE  D002               	goto	l1069
  1548                           
  1549                           ; BSR set to: 1
  1550                           ;main.c: 175:         IO.score = 10;
  1551  0024C0  0E0A               	movlw	10
  1552  0024C2  6FB2               	movwf	(_IO+19)& (0+255),b
  1553  0024C4                     l1069:
  1554                           
  1555                           ; BSR set to: 1
  1556                           ;main.c: 177:        IO.slower = 10;
  1557  0024C4  0E00               	movlw	0
  1558  0024C6  6FB9               	movwf	(_IO+26)& (0+255),b
  1559  0024C8  0E0A               	movlw	10
  1560  0024CA  6FB8               	movwf	(_IO+25)& (0+255),b
  1561                           
  1562                           ;main.c: 178:        IO.speed_update = 0;
  1563  0024CC  0E00               	movlw	0
  1564  0024CE  6FBC               	movwf	(_IO+29)& (0+255),b
  1565                           
  1566                           ; BSR set to: 1
  1567                           ;main.c: 183:   } else {
  1568                           
  1569                           ;main.c: 182:    }
  1570  0024D0  D73B               	goto	l5455
  1571  0024D2                     l5519:
  1572                           
  1573                           ; BSR set to: 1
  1574                           ;main.c: 184:    StartTimer(TMR_EXTRA, 500);
  1575  0024D2  0E01               	movlw	1
  1576  0024D4  6E07               	movwf	(StartTimer@count+1)^0,c
  1577  0024D6  0EF4               	movlw	244
  1578  0024D8  6E06               	movwf	StartTimer@count^0,c
  1579  0024DA  0E04               	movlw	4
  1580  0024DC  EC4A  F01D         	call	_StartTimer
  1581                           
  1582                           ;main.c: 185:    StartTimer(TMR_EXTRA_MISS, 25);
  1583  0024E0  0E00               	movlw	0
  1584  0024E2  6E07               	movwf	(StartTimer@count+1)^0,c
  1585  0024E4  0E19               	movlw	25
  1586  0024E6  6E06               	movwf	StartTimer@count^0,c
  1587  0024E8  0E05               	movlw	5
  1588  0024EA  EC4A  F01D         	call	_StartTimer
  1589                           
  1590                           ;main.c: 186:    IO.outbytes[1] = IO.outbytes[1] & (~0x02);
  1591  0024EE  0101               	movlb	1	; () banked
  1592  0024F0  51A5               	movf	(_IO+6)& (0+255),w,b
  1593  0024F2  0BFD               	andlw	253
  1594  0024F4  6FA5               	movwf	(_IO+6)& (0+255),b
  1595                           
  1596                           ; BSR set to: 1
  1597                           ;main.c: 187:    IO.outbytes[1] = IO.outbytes[1] & (~0x04);
  1598  0024F6  51A5               	movf	(_IO+6)& (0+255),w,b
  1599  0024F8  0BFB               	andlw	251
  1600  0024FA  6FA5               	movwf	(_IO+6)& (0+255),b
  1601                           
  1602                           ; BSR set to: 1
  1603                           ;main.c: 188:    IO.outbytes[1] = IO.outbytes[1] & (~0x01);
  1604  0024FC  51A5               	movf	(_IO+6)& (0+255),w,b
  1605  0024FE  0BFE               	andlw	254
  1606  002500  6FA5               	movwf	(_IO+6)& (0+255),b
  1607                           
  1608                           ; BSR set to: 1
  1609                           ;main.c: 189:    IO.speed_update = 1;
  1610  002502  0E01               	movlw	1
  1611  002504  6FBC               	movwf	(_IO+29)& (0+255),b
  1612                           
  1613                           ; BSR set to: 1
  1614                           ;main.c: 190:    IO.f1 = 1;
  1615  002506  0E01               	movlw	1
  1616  002508  6FBF               	movwf	(_IO+32)& (0+255),b
  1617                           
  1618                           ; BSR set to: 1
  1619                           ;main.c: 191:    IO.f2 = 1;
  1620  00250A  0E01               	movlw	1
  1621  00250C  6FC0               	movwf	(_IO+33)& (0+255),b
  1622                           
  1623                           ; BSR set to: 1
  1624                           ;main.c: 192:    IO.f3 = 1;
  1625  00250E  0E01               	movlw	1
  1626  002510  6FC1               	movwf	(_IO+34)& (0+255),b
  1627                           
  1628                           ; BSR set to: 1
  1629                           ;main.c: 193:    if (TimerDone(TMR_SEQ)) {
  1630  002512  0E06               	movlw	6
  1631  002514  EC14  F01E         	call	_TimerDone
  1632  002518  0900               	iorlw	0
  1633  00251A  B4D8               	btfsc	status,2,c
  1634  00251C  D715               	goto	l5455
  1635                           
  1636                           ;main.c: 194:     IO.seq_value = 0;
  1637  00251E  0E00               	movlw	0
  1638  002520  0101               	movlb	1	; () banked
  1639  002522  6FAF               	movwf	(_IO+16)& (0+255),b
  1640                           
  1641                           ;main.c: 195:     if (IO.win) {
  1642  002524  51BE               	movf	(_IO+31)& (0+255),w,b
  1643  002526  B4D8               	btfsc	status,2,c
  1644  002528  D70F               	goto	l5455
  1645                           
  1646                           ; BSR set to: 1
  1647                           ;main.c: 196:      IO.win = 0;
  1648  00252A  0E00               	movlw	0
  1649  00252C  6FBE               	movwf	(_IO+31)& (0+255),b
  1650                           
  1651                           ;main.c: 197:      IO.hits = 0;
  1652  00252E  0E00               	movlw	0
  1653  002530  6FB0               	movwf	(_IO+17)& (0+255),b
  1654                           
  1655                           ;main.c: 198:      IO.misses = 0;
  1656  002532  0E00               	movlw	0
  1657  002534  6FB1               	movwf	(_IO+18)& (0+255),b
  1658                           
  1659                           ;main.c: 199:      IO.clock = 0;
  1660  002536  0E00               	movlw	0
  1661  002538  6FBB               	movwf	(_IO+28)& (0+255),b
  1662  00253A  0E00               	movlw	0
  1663  00253C  6FBA               	movwf	(_IO+27)& (0+255),b
  1664                           
  1665                           ;main.c: 200:      IO.score = 50;
  1666  00253E  0E32               	movlw	50
  1667  002540  6FB2               	movwf	(_IO+19)& (0+255),b
  1668  002542  D702               	goto	l5455
  1669  002544                     __end_of_main:
  1670                           	opt callstack 0
  1671                           
  1672 ;; *************** function _work_sw *****************
  1673 ;; Defined at:
  1674 ;;		line 74 in file "main.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;		None
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;  buffer        128   18[BANK0 ] unsigned char [64][2]
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      void 
  1681 ;; Registers used:
  1682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/1
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1689 ;;      Locals:         0     128       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1691 ;;      Totals:         0     128       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1692 ;;Total ram usage:      128 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; Hardware stack levels required when called:   13
  1695 ;; This function calls:
  1696 ;;		_StartTimer
  1697 ;;		_TimerDone
  1698 ;;		_eaDogM_WriteStringAtPos
  1699 ;;		_sprintf
  1700 ;; This function is called by:
  1701 ;;		_main
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           	psect	text1
  1706  00350C                     __ptext1:
  1707                           	opt callstack 0
  1708  00350C                     _work_sw:
  1709                           	opt callstack 17
  1710                           
  1711                           ;main.c: 76:  char buffer[2][64];;main.c: 77:  if (TimerDone(TMR_INIT)) {
  1712                           
  1713                           ; BSR set to: 1
  1714                           ;incstack = 0
  1715  00350C  0E01               	movlw	1
  1716  00350E  EC14  F01E         	call	_TimerDone
  1717  003512  0900               	iorlw	0
  1718  003514  B4D8               	btfsc	status,2,c
  1719  003516  0012               	return	
  1720                           
  1721                           ;main.c: 78:   IO.clock++;
  1722  003518  0101               	movlb	1	; () banked
  1723  00351A  4BBA               	infsnz	(_IO+27)& (0+255),f,b
  1724  00351C  2BBB               	incf	(_IO+28)& (0+255),f,b
  1725                           
  1726                           ; BSR set to: 1
  1727                           ;main.c: 79:   sprintf(buffer[0], " H %i, M %i     ", IO.hits, IO.misses);
  1728  00351E  0E72               	movlw	low work_sw@buffer
  1729  003520  0100               	movlb	0	; () banked
  1730  003522  6F64               	movwf	sprintf@s& (0+255),b
  1731  003524  0E01               	movlw	low STR_1
  1732  003526  6F65               	movwf	sprintf@fmt& (0+255),b
  1733  003528  0060  F6C0  F066   	movff	_IO+17,?_sprintf+2
  1734  00352E  6B67               	clrf	(?_sprintf+3)& (0+255),b
  1735  003530  0060  F6C4  F068   	movff	_IO+18,?_sprintf+4
  1736  003536  6B69               	clrf	(?_sprintf+5)& (0+255),b
  1737  003538  EC46  F01C         	call	_sprintf	;wreg free
  1738                           
  1739                           ; BSR set to: 0
  1740                           ;main.c: 80:   sprintf(buffer[1], " Score %i %i    ", IO.score, IO.clock);
  1741  00353C  0EB2               	movlw	low (work_sw@buffer+64)
  1742  00353E  6F64               	movwf	sprintf@s& (0+255),b
  1743  003540  0E12               	movlw	low STR_2
  1744  003542  6F65               	movwf	sprintf@fmt& (0+255),b
  1745  003544  0060  F6C8  F066   	movff	_IO+19,?_sprintf+2
  1746  00354A  6B67               	clrf	(?_sprintf+3)& (0+255),b
  1747  00354C  0060  F6E8  F068   	movff	_IO+27,?_sprintf+4
  1748  003552  0060  F6EC  F069   	movff	_IO+28,?_sprintf+5
  1749  003558  EC46  F01C         	call	_sprintf	;wreg free
  1750                           
  1751                           ; BSR set to: 0
  1752                           ;main.c: 81:   buffer[1][16] = 0;
  1753  00355C  0E00               	movlw	0
  1754  00355E  6FC2               	movwf	(work_sw@buffer+80)& (0+255),b
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;main.c: 82:   eaDogM_WriteStringAtPos(1, 0, buffer[0]);
  1758  003560  0E00               	movlw	0
  1759  003562  6E10               	movwf	eaDogM_WriteStringAtPos@c^0,c
  1760  003564  0E72               	movlw	low work_sw@buffer
  1761  003566  6E11               	movwf	eaDogM_WriteStringAtPos@strPtr^0,c
  1762  003568  6A12               	clrf	(eaDogM_WriteStringAtPos@strPtr+1)^0,c
  1763  00356A  0E01               	movlw	1
  1764  00356C  ECA4  F01E         	call	_eaDogM_WriteStringAtPos
  1765                           
  1766                           ;main.c: 83:   eaDogM_WriteStringAtPos(2, 0, buffer[1]);
  1767  003570  0E00               	movlw	0
  1768  003572  6E10               	movwf	eaDogM_WriteStringAtPos@c^0,c
  1769  003574  0EB2               	movlw	low (work_sw@buffer+64)
  1770  003576  6E11               	movwf	eaDogM_WriteStringAtPos@strPtr^0,c
  1771  003578  6A12               	clrf	(eaDogM_WriteStringAtPos@strPtr+1)^0,c
  1772  00357A  0E02               	movlw	2
  1773  00357C  ECA4  F01E         	call	_eaDogM_WriteStringAtPos
  1774                           
  1775                           ;main.c: 84:   StartTimer(TMR_INIT, 500);
  1776  003580  0E01               	movlw	1
  1777  003582  6E07               	movwf	(StartTimer@count+1)^0,c
  1778  003584  0EF4               	movlw	244
  1779  003586  6E06               	movwf	StartTimer@count^0,c
  1780  003588  0E01               	movlw	1
  1781  00358A  EC4A  F01D         	call	_StartTimer
  1782  00358E  0012               	return		;funcret
  1783  003590                     __end_of_work_sw:
  1784                           	opt callstack 0
  1785                           
  1786 ;; *************** function _sprintf *****************
  1787 ;; Defined at:
  1788 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;  s               1    4[BANK0 ] PTR unsigned char 
  1791 ;;		 -> work_sw@buffer(128), 
  1792 ;;  fmt             1    5[BANK0 ] PTR const unsigned char 
  1793 ;;		 -> STR_2(17), STR_1(17), 
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;  f               5   13[BANK0 ] struct _IO_FILE
  1796 ;;  ret             2    0        int 
  1797 ;;  ap              1   12[BANK0 ] PTR void [1]
  1798 ;;		 -> ?_printf(2), ?_sprintf(2), 
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  2    4[BANK0 ] int 
  1801 ;; Registers used:
  1802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1803 ;; Tracked objects:
  1804 ;;		On entry : 3F/0
  1805 ;;		On exit  : 3F/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1808 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1809 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1811 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1812 ;;Total ram usage:       14 bytes
  1813 ;; Hardware stack levels used:    1
  1814 ;; Hardware stack levels required when called:   12
  1815 ;; This function calls:
  1816 ;;		_vfprintf
  1817 ;; This function is called by:
  1818 ;;		_work_sw
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           	psect	text2
  1823  00388C                     __ptext2:
  1824                           	opt callstack 0
  1825  00388C                     _sprintf:
  1826                           	opt callstack 17
  1827                           
  1828                           ; BSR set to: 0
  1829                           
  1830                           ;incstack = 0
  1831  00388C  0E66               	movlw	low (?_sprintf+2)
  1832  00388E  6F6C               	movwf	sprintf@ap& (0+255),b
  1833  003890  0060  F190  F06D   	movff	sprintf@s,sprintf@f
  1834                           
  1835                           ; BSR set to: 0
  1836  003896  0E00               	movlw	0
  1837  003898  6F6F               	movwf	(sprintf@f+2)& (0+255),b
  1838  00389A  0E00               	movlw	0
  1839  00389C  6F6E               	movwf	(sprintf@f+1)& (0+255),b
  1840                           
  1841                           ; BSR set to: 0
  1842  00389E  0E00               	movlw	0
  1843  0038A0  6F71               	movwf	(sprintf@f+4)& (0+255),b
  1844  0038A2  0E00               	movlw	0
  1845  0038A4  6F70               	movwf	(sprintf@f+3)& (0+255),b
  1846                           
  1847                           ; BSR set to: 0
  1848  0038A6  0E6D               	movlw	low sprintf@f
  1849  0038A8  6F60               	movwf	vfprintf@fp& (0+255),b
  1850  0038AA  6B61               	clrf	(vfprintf@fp+1)& (0+255),b
  1851  0038AC  0060  F194  F062   	movff	sprintf@fmt,vfprintf@fmt
  1852  0038B2  0E6C               	movlw	low sprintf@ap
  1853  0038B4  6F63               	movwf	vfprintf@ap& (0+255),b
  1854  0038B6  EC63  F01B         	call	_vfprintf	;wreg free
  1855                           
  1856                           ; BSR set to: 1
  1857  0038BA  0100               	movlb	0	; () banked
  1858  0038BC  5164               	movf	sprintf@s& (0+255),w,b
  1859  0038BE  256E               	addwf	(sprintf@f+1)& (0+255),w,b
  1860  0038C0  6ED9               	movwf	fsr2l,c
  1861  0038C2  6ADA               	clrf	fsr2h,c
  1862  0038C4  0E00               	movlw	0
  1863  0038C6  6EDF               	movwf	indf2,c
  1864                           
  1865                           ; BSR set to: 0
  1866  0038C8  0012               	return		;funcret
  1867  0038CA                     __end_of_sprintf:
  1868                           	opt callstack 0
  1869                           
  1870 ;; *************** function _eaDogM_WriteStringAtPos *****************
  1871 ;; Defined at:
  1872 ;;		line 122 in file "eadog.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  r               1    wreg     const unsigned char 
  1875 ;;  c               1   15[COMRAM] const unsigned char 
  1876 ;;  strPtr          2   16[COMRAM] PTR unsigned char 
  1877 ;;		 -> STR_3(11), work_sw@buffer(128), 
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;  r               1   18[COMRAM] const unsigned char 
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  1    wreg      void 
  1882 ;; Registers used:
  1883 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/1
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1889 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1890 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1892 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1893 ;;Total ram usage:        4 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; Hardware stack levels required when called:    6
  1896 ;; This function calls:
  1897 ;;		_eaDogM_WriteString
  1898 ;;		_send_lcd_cmd
  1899 ;; This function is called by:
  1900 ;;		_work_sw
  1901 ;;		_main
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           	psect	text3
  1906  003D48                     __ptext3:
  1907                           	opt callstack 0
  1908  003D48                     _eaDogM_WriteStringAtPos:
  1909                           	opt callstack 23
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;incstack = 0
  1913                           ;eaDogM_WriteStringAtPos@r stored from wreg
  1914  003D48  6E13               	movwf	eaDogM_WriteStringAtPos@r^0,c
  1915                           
  1916                           ;eadog.c: 122: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 123: {;eadog.c: 124:  send_lcd_cmd((0b10000000 + (r * 16) + c));
  1917  003D4A  5013               	movf	eaDogM_WriteStringAtPos@r^0,w,c
  1918  003D4C  0D10               	mullw	16
  1919  003D4E  50F3               	movf	243,w,c
  1920  003D50  2410               	addwf	eaDogM_WriteStringAtPos@c^0,w,c
  1921  003D52  0F80               	addlw	128
  1922  003D54  ECDE  F01C         	call	_send_lcd_cmd
  1923                           
  1924                           ; BSR set to: 1
  1925                           ;eadog.c: 125:  eaDogM_WriteString(strPtr);
  1926  003D58  0060  F044  F00A   	movff	eaDogM_WriteStringAtPos@strPtr,eaDogM_WriteString@strPtr
  1927  003D5E  0060  F048  F00B   	movff	eaDogM_WriteStringAtPos@strPtr+1,eaDogM_WriteString@strPtr+1
  1928  003D64  ECF8  F017         	call	_eaDogM_WriteString	;wreg free
  1929  003D68  0012               	return		;funcret
  1930  003D6A                     __end_of_eaDogM_WriteStringAtPos:
  1931                           	opt callstack 0
  1932                           
  1933 ;; *************** function _eaDogM_WriteString *****************
  1934 ;; Defined at:
  1935 ;;		line 106 in file "eadog.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;  strPtr          2    9[COMRAM] PTR unsigned char 
  1938 ;;		 -> STR_3(11), work_sw@buffer(128), 
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;  bytesWritten    1   14[COMRAM] unsigned char 
  1941 ;;  i               1   13[COMRAM] unsigned char 
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  1    wreg      void 
  1944 ;; Registers used:
  1945 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1946 ;; Tracked objects:
  1947 ;;		On entry : 3F/1
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1951 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1952 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1953 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1954 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1955 ;;Total ram usage:        6 bytes
  1956 ;; Hardware stack levels used:    1
  1957 ;; Hardware stack levels required when called:    5
  1958 ;; This function calls:
  1959 ;;		_SPI1_Exchange8bit
  1960 ;;		_strlen
  1961 ;;		_wdtdelay
  1962 ;; This function is called by:
  1963 ;;		_eaDogM_WriteStringAtPos
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           	psect	text4
  1968  002FF0                     __ptext4:
  1969                           	opt callstack 0
  1970  002FF0                     _eaDogM_WriteString:
  1971                           	opt callstack 23
  1972                           
  1973                           ; BSR set to: 1
  1974                           ;eadog.c: 106: void eaDogM_WriteString(char *strPtr);eadog.c: 107: {;eadog.c: 108:  uint
      +                          8_t i = strlen(strPtr);
  1975                           
  1976                           ;incstack = 0
  1977  002FF0  0060  F028  F006   	movff	eaDogM_WriteString@strPtr,strlen@s
  1978  002FF6  0060  F02C  F007   	movff	eaDogM_WriteString@strPtr+1,strlen@s+1
  1979  002FFC  EC91  F01B         	call	_strlen	;wreg free
  1980  003000  5006               	movf	?_strlen^0,w,c
  1981  003002  6E0E               	movwf	eaDogM_WriteString@i^0,c
  1982                           
  1983                           ;eadog.c: 109:  uint8_t bytesWritten = 0;
  1984  003004  0E00               	movlw	0
  1985  003006  6E0F               	movwf	eaDogM_WriteString@bytesWritten^0,c
  1986  003008  82BC               	bsf	188,1,c	;volatile
  1987  00300A  94BC               	bcf	188,2,c	;volatile
  1988                           
  1989                           ;eadog.c: 113:  if (i > 64) strPtr[64] = 0;
  1990  00300C  0E40               	movlw	64
  1991  00300E  640E               	cpfsgt	eaDogM_WriteString@i^0,c
  1992  003010  D046               	goto	l4899
  1993  003012  0E40               	movlw	64
  1994  003014  240A               	addwf	eaDogM_WriteString@strPtr^0,w,c
  1995  003016  6E0C               	movwf	??_eaDogM_WriteString^0,c
  1996  003018  0E00               	movlw	0
  1997  00301A  200B               	addwfc	(eaDogM_WriteString@strPtr+1)^0,w,c
  1998  00301C  6E0D               	movwf	(??_eaDogM_WriteString+1)^0,c
  1999  00301E  0060  F033  FFF6   	movff	??_eaDogM_WriteString,tblptrl
  2000  003024  0060  F037  FFF7   	movff	??_eaDogM_WriteString+1,tblptrh
  2001  00302A  0E00               	movlw	low (__smallconst shr (0+16))
  2002  00302C  6EF8               	movwf	tblptru,c
  2003  00302E  0E1F               	movlw	(high __ramtop+-1)
  2004  003030  64F7               	cpfsgt	tblptrh,c
  2005  003032  D004               	bra	u3877
  2006  003034  0E00               	movlw	0
  2007  003036  6EF5               	movwf	tablat,c
  2008  003038  000C               	tblwt		*
  2009  00303A  D008               	bra	u3870
  2010  00303C                     u3877:
  2011  00303C  006F FFDB FFE1     	movff	tblptrl,fsr1l
  2012  003042  006F FFDF FFE2     	movff	tblptrh,fsr1h
  2013  003048  0E00               	movlw	0
  2014  00304A  6EE7               	movwf	indf1,c
  2015  00304C                     u3870:
  2016  00304C  D028               	goto	l4899
  2017  00304E                     l4893:
  2018                           
  2019                           ;eadog.c: 116:   wdtdelay(9);
  2020  00304E  0E09               	movlw	9
  2021  003050  6E06               	movwf	wdtdelay@delay^0,c
  2022  003052  0E00               	movlw	0
  2023  003054  6E07               	movwf	(wdtdelay@delay+1)^0,c
  2024  003056  0E00               	movlw	0
  2025  003058  6E08               	movwf	(wdtdelay@delay+2)^0,c
  2026  00305A  0E00               	movlw	0
  2027  00305C  6E09               	movwf	(wdtdelay@delay+3)^0,c
  2028  00305E  ECC1  F01C         	call	_wdtdelay	;wreg free
  2029                           
  2030                           ; BSR set to: 1
  2031                           ;eadog.c: 117:   SPI1_Exchange8bit(strPtr[bytesWritten]);
  2032  003062  500F               	movf	eaDogM_WriteString@bytesWritten^0,w,c
  2033  003064  240A               	addwf	eaDogM_WriteString@strPtr^0,w,c
  2034  003066  6E0C               	movwf	??_eaDogM_WriteString^0,c
  2035  003068  0E00               	movlw	0
  2036  00306A  200B               	addwfc	(eaDogM_WriteString@strPtr+1)^0,w,c
  2037  00306C  6E0D               	movwf	(??_eaDogM_WriteString+1)^0,c
  2038  00306E  0060  F033  FFF6   	movff	??_eaDogM_WriteString,tblptrl
  2039  003074  0060  F037  FFF7   	movff	??_eaDogM_WriteString+1,tblptrh
  2040  00307A  0E00               	movlw	low (__smallconst shr (0+16))
  2041  00307C  6EF8               	movwf	tblptru,c
  2042  00307E  0E1F               	movlw	(high __ramtop+-1)
  2043  003080  64F7               	cpfsgt	tblptrh,c
  2044  003082  D003               	bra	u3887
  2045  003084  0008               	tblrd		*
  2046  003086  50F5               	movf	tablat,w,c
  2047  003088  D007               	bra	u3880
  2048  00308A                     u3887:
  2049  00308A  006F FFDB FFE1     	movff	tblptrl,fsr1l
  2050  003090  006F FFDF FFE2     	movff	tblptrh,fsr1h
  2051  003096  50E7               	movf	indf1,w,c
  2052  003098                     u3880:
  2053  003098  EC02  F01F         	call	_SPI1_Exchange8bit
  2054                           
  2055                           ; BSR set to: 61
  2056                           ;eadog.c: 118:   bytesWritten++;
  2057  00309C  2A0F               	incf	eaDogM_WriteString@bytesWritten^0,f,c
  2058  00309E                     l4899:
  2059                           
  2060                           ;eadog.c: 115:  while (bytesWritten < i) {
  2061  00309E  500E               	movf	eaDogM_WriteString@i^0,w,c
  2062  0030A0  5C0F               	subwf	eaDogM_WriteString@bytesWritten^0,w,c
  2063  0030A2  B0D8               	btfsc	status,0,c
  2064  0030A4  0012               	return	
  2065  0030A6  D7D3               	goto	l4893
  2066  0030A8                     __end_of_eaDogM_WriteString:
  2067                           	opt callstack 0
  2068                           
  2069 ;; *************** function _once *****************
  2070 ;; Defined at:
  2071 ;;		line 190 in file "d232.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;  once_flag       2    5[COMRAM] PTR _Bool 
  2074 ;;		 -> IO(36), 
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;		None
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  1    wreg      _Bool 
  2079 ;; Registers used:
  2080 ;;		wreg, fsr2l, fsr2h, status,2
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/1
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2086 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2089 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2090 ;;Total ram usage:        2 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    4
  2093 ;; This function calls:
  2094 ;;		Nothing
  2095 ;; This function is called by:
  2096 ;;		_main
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           	psect	text5
  2101  003BB2                     __ptext5:
  2102                           	opt callstack 0
  2103  003BB2                     _once:
  2104                           	opt callstack 26
  2105                           
  2106                           ;d232.c: 190: _Bool once(_Bool *once_flag);d232.c: 191: {;d232.c: 192:  if (*once_flag) 
      +                          {
  2107                           
  2108                           ;incstack = 0
  2109  003BB2  0060  F01B  FFD9   	movff	once@once_flag,fsr2l
  2110  003BB8  0060  F01F  FFDA   	movff	once@once_flag+1,fsr2h
  2111  003BBE  50DF               	movf	indf2,w,c
  2112  003BC0  B4D8               	btfsc	status,2,c
  2113  003BC2  D00A               	goto	l5425
  2114                           
  2115                           ;d232.c: 193:   *once_flag = 0;
  2116  003BC4  0060  F01B  FFD9   	movff	once@once_flag,fsr2l
  2117  003BCA  0060  F01F  FFDA   	movff	once@once_flag+1,fsr2h
  2118  003BD0  0E00               	movlw	0
  2119  003BD2  6EDF               	movwf	indf2,c
  2120                           
  2121                           ;d232.c: 194:   return 1;
  2122  003BD4  0E01               	movlw	1
  2123  003BD6  0012               	return	
  2124  003BD8                     l5425:
  2125                           
  2126                           ;d232.c: 197:   return 0;
  2127  003BD8  0E00               	movlw	0
  2128  003BDA  0012               	return		;funcret
  2129  003BDC                     __end_of_once:
  2130                           	opt callstack 0
  2131                           
  2132 ;; *************** function _led_lightshow *****************
  2133 ;; Defined at:
  2134 ;;		line 142 in file "d232.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  seq             1    wreg     unsigned char 
  2137 ;;  speed           2   13[COMRAM] unsigned short 
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;  seq             1   17[COMRAM] unsigned char 
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  1    wreg      void 
  2142 ;; Registers used:
  2143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2144 ;; Tracked objects:
  2145 ;;		On entry : 3F/1
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2149 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2150 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2151 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2152 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2153 ;;Total ram usage:        5 bytes
  2154 ;; Hardware stack levels used:    1
  2155 ;; Hardware stack levels required when called:    5
  2156 ;; This function calls:
  2157 ;;		_StartTimer
  2158 ;;		___awdiv
  2159 ;; This function is called by:
  2160 ;;		_main
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text6
  2165  002D64                     __ptext6:
  2166                           	opt callstack 0
  2167  002D64                     _led_lightshow:
  2168                           	opt callstack 25
  2169                           
  2170                           ;incstack = 0
  2171                           ;led_lightshow@seq stored from wreg
  2172  002D64  6E12               	movwf	led_lightshow@seq^0,c
  2173                           
  2174                           ;d232.c: 142: void led_lightshow(uint8_t seq, uint16_t speed);d232.c: 143: {;d232.c: 144
      +                          :  static uint16_t j = 0;;d232.c: 145:  static uint8_t cylon = 0xff;;d232.c: 146:  stati
      +                          c int16_t alive_led = 0;;d232.c: 147:  static _Bool LED_UP = 1;;d232.c: 149:  if (seq ==
      +                           1) {
  2175  002D66  0412               	decf	led_lightshow@seq^0,w,c
  2176  002D68  A4D8               	btfss	status,2,c
  2177  002D6A  D003               	goto	l5377
  2178                           
  2179                           ;d232.c: 150:   IO.outbytes[2] = IO.inbytes[0];
  2180  002D6C  C19F  F1A6         	movff	_IO,_IO+7
  2181                           
  2182                           ;d232.c: 151:   return;
  2183  002D70  0012               	return	
  2184  002D72                     l5377:
  2185                           
  2186                           ;d232.c: 154:  if (seq == 2) {
  2187  002D72  0E02               	movlw	2
  2188  002D74  1812               	xorwf	led_lightshow@seq^0,w,c
  2189  002D76  A4D8               	btfss	status,2,c
  2190  002D78  D010               	goto	l5389
  2191                           
  2192                           ;d232.c: 155:   if (IO.sequence_done) {
  2193  002D7A  0101               	movlb	1	; () banked
  2194  002D7C  51BD               	movf	(_IO+30)& (0+255),w,b
  2195  002D7E  B4D8               	btfsc	status,2,c
  2196  002D80  D009               	goto	l5385
  2197                           
  2198                           ; BSR set to: 1
  2199                           ;d232.c: 156:    IO.sequence_done = 0;
  2200  002D82  0E00               	movlw	0
  2201  002D84  6FBD               	movwf	(_IO+30)& (0+255),b
  2202                           
  2203                           ; BSR set to: 1
  2204                           ;d232.c: 157:    StartTimer(TMR_SEQ, 3000);
  2205  002D86  0E0B               	movlw	11
  2206  002D88  6E07               	movwf	(StartTimer@count+1)^0,c
  2207  002D8A  0EB8               	movlw	184
  2208  002D8C  6E06               	movwf	StartTimer@count^0,c
  2209  002D8E  0E06               	movlw	6
  2210  002D90  EC4A  F01D         	call	_StartTimer
  2211  002D94                     l5385:
  2212                           
  2213                           ;d232.c: 159:   IO.outbytes[2] = 0xff;
  2214  002D94  0101               	movlb	1	; () banked
  2215  002D96  69A6               	setf	(_IO+7)& (0+255),b
  2216  002D98  0012               	return	
  2217  002D9A                     l5389:
  2218                           
  2219                           ;d232.c: 163:  if (j++ >= speed) {
  2220  002D9A  0101               	movlb	1	; () banked
  2221  002D9C  516A               	movf	led_lightshow@j& (0+255),w,b
  2222  002D9E  6E10               	movwf	??_led_lightshow^0,c
  2223  002DA0  516B               	movf	(led_lightshow@j+1)& (0+255),w,b
  2224  002DA2  6E11               	movwf	(??_led_lightshow+1)^0,c
  2225  002DA4  4B6A               	infsnz	led_lightshow@j& (0+255),f,b
  2226  002DA6  2B6B               	incf	(led_lightshow@j+1)& (0+255),f,b
  2227  002DA8  500E               	movf	led_lightshow@speed^0,w,c
  2228  002DAA  5C10               	subwf	??_led_lightshow^0,w,c
  2229  002DAC  500F               	movf	(led_lightshow@speed+1)^0,w,c
  2230  002DAE  5811               	subwfb	(??_led_lightshow+1)^0,w,c
  2231  002DB0  A0D8               	btfss	status,0,c
  2232  002DB2  0012               	return	
  2233                           
  2234                           ; BSR set to: 1
  2235                           ;d232.c: 167:    IO.outbytes[2] = cylon;
  2236  002DB4  C0FF  F1A6         	movff	led_lightshow@cylon,_IO+7
  2237                           
  2238                           ; BSR set to: 1
  2239                           ;d232.c: 170:   if (LED_UP && (alive_led != 0)) {
  2240  002DB8  0100               	movlb	0	; () banked
  2241  002DBA  51FE               	movf	led_lightshow@LED_UP& (0+255),w,b
  2242  002DBC  B4D8               	btfsc	status,2,c
  2243  002DBE  D00C               	goto	l5401
  2244                           
  2245                           ; BSR set to: 0
  2246  002DC0  51F4               	movf	led_lightshow@alive_led& (0+255),w,b
  2247  002DC2  11F5               	iorwf	(led_lightshow@alive_led+1)& (0+255),w,b
  2248  002DC4  B4D8               	btfsc	status,2,c
  2249  002DC6  D008               	goto	l5401
  2250                           
  2251                           ; BSR set to: 0
  2252                           ;d232.c: 171:    alive_led = alive_led * 2;
  2253  002DC8  90D8               	bcf	status,0,c
  2254  002DCA  35F4               	rlcf	led_lightshow@alive_led& (0+255),w,b
  2255  002DCC  6FF4               	movwf	led_lightshow@alive_led& (0+255),b
  2256  002DCE  35F5               	rlcf	(led_lightshow@alive_led+1)& (0+255),w,b
  2257  002DD0  6FF5               	movwf	(led_lightshow@alive_led+1)& (0+255),b
  2258                           
  2259                           ;d232.c: 172:    cylon = cylon << 1;
  2260  002DD2  51FF               	movf	led_lightshow@cylon& (0+255),w,b
  2261  002DD4  25FF               	addwf	led_lightshow@cylon& (0+255),w,b
  2262  002DD6  D018               	goto	L1
  2263  002DD8                     l5401:
  2264                           
  2265                           ; BSR set to: 0
  2266                           ;d232.c: 174:    if (alive_led != 0) alive_led = alive_led / 2;
  2267  002DD8  51F4               	movf	led_lightshow@alive_led& (0+255),w,b
  2268  002DDA  11F5               	iorwf	(led_lightshow@alive_led+1)& (0+255),w,b
  2269  002DDC  B4D8               	btfsc	status,2,c
  2270  002DDE  D012               	goto	l5405
  2271                           
  2272                           ; BSR set to: 0
  2273  002DE0  0060  F3D0  F006   	movff	led_lightshow@alive_led,___awdiv@dividend
  2274  002DE6  0060  F3D4  F007   	movff	led_lightshow@alive_led+1,___awdiv@dividend+1
  2275  002DEC  0E00               	movlw	0
  2276  002DEE  6E09               	movwf	(___awdiv@divisor+1)^0,c
  2277  002DF0  0E02               	movlw	2
  2278  002DF2  6E08               	movwf	___awdiv@divisor^0,c
  2279  002DF4  EC42  F01A         	call	___awdiv	;wreg free
  2280  002DF8  0060  F018  F0F4   	movff	?___awdiv,led_lightshow@alive_led
  2281  002DFE  0060  F01C  F0F5   	movff	?___awdiv+1,led_lightshow@alive_led+1
  2282  002E04                     l5405:
  2283                           
  2284                           ; BSR set to: 0
  2285                           ;d232.c: 175:    cylon = cylon >> 1;
  2286  002E04  90D8               	bcf	status,0,c
  2287  002E06  31FF               	rrcf	led_lightshow@cylon& (0+255),w,b
  2288  002E08                     L1:
  2289  002E08  6FFF               	movwf	led_lightshow@cylon& (0+255),b
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;d232.c: 177:   if (alive_led < 2) {
  2293  002E0A  BFF5               	btfsc	(led_lightshow@alive_led+1)& (0+255),7,b
  2294  002E0C  D006               	goto	u4280
  2295  002E0E  51F5               	movf	(led_lightshow@alive_led+1)& (0+255),w,b
  2296  002E10  E10A               	bnz	l5411
  2297  002E12  0E02               	movlw	2
  2298  002E14  5DF4               	subwf	led_lightshow@alive_led& (0+255),w,b
  2299  002E16  B0D8               	btfsc	status,0,c
  2300  002E18  D006               	goto	l5411
  2301  002E1A                     u4280:
  2302                           
  2303                           ; BSR set to: 0
  2304                           ;d232.c: 178:    alive_led = 2;
  2305  002E1A  0E00               	movlw	0
  2306  002E1C  6FF5               	movwf	(led_lightshow@alive_led+1)& (0+255),b
  2307  002E1E  0E02               	movlw	2
  2308  002E20  6FF4               	movwf	led_lightshow@alive_led& (0+255),b
  2309                           
  2310                           ;d232.c: 179:    LED_UP = 1;
  2311  002E22  0E01               	movlw	1
  2312  002E24  D00D               	goto	L2
  2313  002E26                     l5411:
  2314                           
  2315                           ; BSR set to: 0
  2316                           ;d232.c: 181:    if (alive_led > 128) {
  2317  002E26  BFF5               	btfsc	(led_lightshow@alive_led+1)& (0+255),7,b
  2318  002E28  D00C               	goto	l1162
  2319  002E2A  51F5               	movf	(led_lightshow@alive_led+1)& (0+255),w,b
  2320  002E2C  E104               	bnz	u4290
  2321  002E2E  0E81               	movlw	129
  2322  002E30  5DF4               	subwf	led_lightshow@alive_led& (0+255),w,b
  2323  002E32  A0D8               	btfss	status,0,c
  2324  002E34  D006               	goto	l1162
  2325  002E36                     u4290:
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;d232.c: 182:     alive_led = 128;
  2329  002E36  0E00               	movlw	0
  2330  002E38  6FF5               	movwf	(led_lightshow@alive_led+1)& (0+255),b
  2331  002E3A  0E80               	movlw	128
  2332  002E3C  6FF4               	movwf	led_lightshow@alive_led& (0+255),b
  2333                           
  2334                           ;d232.c: 183:     LED_UP = 0;
  2335  002E3E  0E00               	movlw	0
  2336  002E40                     L2:
  2337  002E40  6FFE               	movwf	led_lightshow@LED_UP& (0+255),b
  2338  002E42                     l1162:
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;d232.c: 186:   j = 0;
  2342  002E42  0E00               	movlw	0
  2343  002E44  0101               	movlb	1	; () banked
  2344  002E46  6F6B               	movwf	(led_lightshow@j+1)& (0+255),b
  2345  002E48  0E00               	movlw	0
  2346  002E4A  6F6A               	movwf	led_lightshow@j& (0+255),b
  2347  002E4C  0012               	return		;funcret
  2348  002E4E                     __end_of_led_lightshow:
  2349                           	opt callstack 0
  2350                           
  2351 ;; *************** function ___awdiv *****************
  2352 ;; Defined at:
  2353 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  dividend        2    5[COMRAM] int 
  2356 ;;  divisor         2    7[COMRAM] int 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;  quotient        2   11[COMRAM] int 
  2359 ;;  sign            1   10[COMRAM] unsigned char 
  2360 ;;  counter         1    9[COMRAM] unsigned char 
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  2    5[COMRAM] int 
  2363 ;; Registers used:
  2364 ;;		wreg, status,2, status,0
  2365 ;; Tracked objects:
  2366 ;;		On entry : 3F/0
  2367 ;;		On exit  : 3F/0
  2368 ;;		Unchanged: 3F/0
  2369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2370 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2371 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2373 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2374 ;;Total ram usage:        8 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; Hardware stack levels required when called:    4
  2377 ;; This function calls:
  2378 ;;		Nothing
  2379 ;; This function is called by:
  2380 ;;		_led_lightshow
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384                           	psect	text7
  2385  003484                     __ptext7:
  2386                           	opt callstack 0
  2387  003484                     ___awdiv:
  2388                           	opt callstack 25
  2389                           
  2390                           ; BSR set to: 0
  2391                           
  2392                           ;incstack = 0
  2393  003484  0E00               	movlw	0
  2394  003486  6E0B               	movwf	___awdiv@sign^0,c
  2395                           
  2396                           ; BSR set to: 0
  2397  003488  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  2398  00348A  D006               	goto	l5151
  2399                           
  2400                           ; BSR set to: 0
  2401  00348C  6C08               	negf	___awdiv@divisor^0,c
  2402  00348E  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  2403  003490  B0D8               	btfsc	status,0,c
  2404  003492  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  2405                           
  2406                           ; BSR set to: 0
  2407  003494  0E01               	movlw	1
  2408  003496  6E0B               	movwf	___awdiv@sign^0,c
  2409  003498                     l5151:
  2410                           
  2411                           ; BSR set to: 0
  2412  003498  AE07               	btfss	(___awdiv@dividend+1)^0,7,c
  2413  00349A  D006               	goto	l5157
  2414                           
  2415                           ; BSR set to: 0
  2416  00349C  6C06               	negf	___awdiv@dividend^0,c
  2417  00349E  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  2418  0034A0  B0D8               	btfsc	status,0,c
  2419  0034A2  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  2420                           
  2421                           ; BSR set to: 0
  2422  0034A4  0E01               	movlw	1
  2423  0034A6  1A0B               	xorwf	___awdiv@sign^0,f,c
  2424  0034A8                     l5157:
  2425                           
  2426                           ; BSR set to: 0
  2427  0034A8  0E00               	movlw	0
  2428  0034AA  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  2429  0034AC  0E00               	movlw	0
  2430  0034AE  6E0C               	movwf	___awdiv@quotient^0,c
  2431                           
  2432                           ; BSR set to: 0
  2433  0034B0  5008               	movf	___awdiv@divisor^0,w,c
  2434  0034B2  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  2435  0034B4  B4D8               	btfsc	status,2,c
  2436  0034B6  D01C               	goto	l5179
  2437                           
  2438                           ; BSR set to: 0
  2439  0034B8  0E01               	movlw	1
  2440  0034BA  6E0A               	movwf	___awdiv@counter^0,c
  2441  0034BC  D004               	goto	l5165
  2442  0034BE                     l5163:
  2443                           
  2444                           ; BSR set to: 0
  2445  0034BE  90D8               	bcf	status,0,c
  2446  0034C0  3608               	rlcf	___awdiv@divisor^0,f,c
  2447  0034C2  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  2448  0034C4  2A0A               	incf	___awdiv@counter^0,f,c
  2449  0034C6                     l5165:
  2450                           
  2451                           ; BSR set to: 0
  2452  0034C6  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  2453  0034C8  D7FA               	goto	l5163
  2454  0034CA                     u4000:
  2455                           
  2456                           ; BSR set to: 0
  2457  0034CA  90D8               	bcf	status,0,c
  2458  0034CC  360C               	rlcf	___awdiv@quotient^0,f,c
  2459  0034CE  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  2460                           
  2461                           ; BSR set to: 0
  2462  0034D0  5008               	movf	___awdiv@divisor^0,w,c
  2463  0034D2  5C06               	subwf	___awdiv@dividend^0,w,c
  2464  0034D4  5009               	movf	(___awdiv@divisor+1)^0,w,c
  2465  0034D6  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  2466  0034D8  A0D8               	btfss	status,0,c
  2467  0034DA  D005               	goto	l5175
  2468                           
  2469                           ; BSR set to: 0
  2470  0034DC  5008               	movf	___awdiv@divisor^0,w,c
  2471  0034DE  5E06               	subwf	___awdiv@dividend^0,f,c
  2472  0034E0  5009               	movf	(___awdiv@divisor+1)^0,w,c
  2473  0034E2  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  2474                           
  2475                           ; BSR set to: 0
  2476  0034E4  800C               	bsf	___awdiv@quotient^0,0,c
  2477  0034E6                     l5175:
  2478                           
  2479                           ; BSR set to: 0
  2480  0034E6  90D8               	bcf	status,0,c
  2481  0034E8  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  2482  0034EA  3208               	rrcf	___awdiv@divisor^0,f,c
  2483                           
  2484                           ; BSR set to: 0
  2485  0034EC  2E0A               	decfsz	___awdiv@counter^0,f,c
  2486  0034EE  D7ED               	goto	u4000
  2487  0034F0                     l5179:
  2488                           
  2489                           ; BSR set to: 0
  2490  0034F0  500B               	movf	___awdiv@sign^0,w,c
  2491  0034F2  B4D8               	btfsc	status,2,c
  2492  0034F4  D004               	goto	l5183
  2493                           
  2494                           ; BSR set to: 0
  2495  0034F6  6C0C               	negf	___awdiv@quotient^0,c
  2496  0034F8  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  2497  0034FA  B0D8               	btfsc	status,0,c
  2498  0034FC  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  2499  0034FE                     l5183:
  2500                           
  2501                           ; BSR set to: 0
  2502  0034FE  0060  F030  F006   	movff	___awdiv@quotient,?___awdiv
  2503  003504  0060  F034  F007   	movff	___awdiv@quotient+1,?___awdiv+1
  2504                           
  2505                           ; BSR set to: 0
  2506  00350A  0012               	return		;funcret
  2507  00350C                     __end_of___awdiv:
  2508                           	opt callstack 0
  2509                           
  2510 ;; *************** function _init_display *****************
  2511 ;; Defined at:
  2512 ;;		line 27 in file "eadog.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;		None
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;		None
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  1    wreg      void 
  2519 ;; Registers used:
  2520 ;;		wreg, status,2, status,0, cstack
  2521 ;; Tracked objects:
  2522 ;;		On entry : 3F/1
  2523 ;;		On exit  : 3F/1
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2530 ;;Total ram usage:        0 bytes
  2531 ;; Hardware stack levels used:    1
  2532 ;; Hardware stack levels required when called:    6
  2533 ;; This function calls:
  2534 ;;		_send_lcd_cmd
  2535 ;;		_send_lcd_cmd_long
  2536 ;;		_wdtdelay
  2537 ;; This function is called by:
  2538 ;;		_main
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           	psect	text8
  2543  003602                     __ptext8:
  2544                           	opt callstack 0
  2545  003602                     _init_display:
  2546                           	opt callstack 24
  2547                           
  2548                           ; BSR set to: 1
  2549                           
  2550                           ; BSR set to: 0
  2551                           ;incstack = 0
  2552                           ;eadog.c: 29:  do { LATCbits.LATC2 = 1; } while(0);
  2553  003602  84BC               	bsf	188,2,c	;volatile
  2554                           
  2555                           ; BSR set to: 1
  2556                           ;eadog.c: 30:  wdtdelay(350000);
  2557  003604  0E30               	movlw	48
  2558  003606  6E06               	movwf	wdtdelay@delay^0,c
  2559  003608  0E57               	movlw	87
  2560  00360A  6E07               	movwf	(wdtdelay@delay+1)^0,c
  2561  00360C  0E05               	movlw	5
  2562  00360E  6E08               	movwf	(wdtdelay@delay+2)^0,c
  2563  003610  0E00               	movlw	0
  2564  003612  6E09               	movwf	(wdtdelay@delay+3)^0,c
  2565  003614  ECC1  F01C         	call	_wdtdelay	;wreg free
  2566                           
  2567                           ;eadog.c: 31:  send_lcd_cmd(0x39);
  2568  003618  0E39               	movlw	57
  2569  00361A  ECDE  F01C         	call	_send_lcd_cmd
  2570                           
  2571                           ;eadog.c: 32:  send_lcd_cmd(0x1d);
  2572  00361E  0E1D               	movlw	29
  2573  003620  ECDE  F01C         	call	_send_lcd_cmd
  2574                           
  2575                           ;eadog.c: 33:  send_lcd_cmd(0x50);
  2576  003624  0E50               	movlw	80
  2577  003626  ECDE  F01C         	call	_send_lcd_cmd
  2578                           
  2579                           ;eadog.c: 34:  send_lcd_cmd(0x6c);
  2580  00362A  0E6C               	movlw	108
  2581  00362C  ECDE  F01C         	call	_send_lcd_cmd
  2582                           
  2583                           ;eadog.c: 35:  send_lcd_cmd(0x76);
  2584  003630  0E76               	movlw	118
  2585  003632  ECDE  F01C         	call	_send_lcd_cmd
  2586                           
  2587                           ;eadog.c: 36:  send_lcd_cmd_long(0x38);
  2588  003636  0E38               	movlw	56
  2589  003638  EC02  F01E         	call	_send_lcd_cmd_long
  2590                           
  2591                           ;eadog.c: 37:  send_lcd_cmd(0x0f);
  2592  00363C  0E0F               	movlw	15
  2593  00363E  ECDE  F01C         	call	_send_lcd_cmd
  2594                           
  2595                           ;eadog.c: 38:  send_lcd_cmd_long(0x01);
  2596  003642  0E01               	movlw	1
  2597  003644  EC02  F01E         	call	_send_lcd_cmd_long
  2598                           
  2599                           ;eadog.c: 39:  send_lcd_cmd(0x02);
  2600  003648  0E02               	movlw	2
  2601  00364A  ECDE  F01C         	call	_send_lcd_cmd
  2602                           
  2603                           ;eadog.c: 40:  send_lcd_cmd(0x06);
  2604  00364E  0E06               	movlw	6
  2605  003650  ECDE  F01C         	call	_send_lcd_cmd
  2606                           
  2607                           ;eadog.c: 41:  wdtdelay(800);
  2608  003654  0E20               	movlw	32
  2609  003656  6E06               	movwf	wdtdelay@delay^0,c
  2610  003658  0E03               	movlw	3
  2611  00365A  6E07               	movwf	(wdtdelay@delay+1)^0,c
  2612  00365C  0E00               	movlw	0
  2613  00365E  6E08               	movwf	(wdtdelay@delay+2)^0,c
  2614  003660  0E00               	movlw	0
  2615  003662  6E09               	movwf	(wdtdelay@delay+3)^0,c
  2616  003664  ECC1  F01C         	call	_wdtdelay	;wreg free
  2617                           
  2618                           ; BSR set to: 1
  2619  003668  0012               	return		;funcret
  2620  00366A                     __end_of_init_display:
  2621                           	opt callstack 0
  2622                           
  2623 ;; *************** function _send_lcd_cmd_long *****************
  2624 ;; Defined at:
  2625 ;;		line 71 in file "eadog.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  cmd             1    wreg     const unsigned char 
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;  cmd             1    9[COMRAM] const unsigned char 
  2630 ;; Return value:  Size  Location     Type
  2631 ;;                  1    wreg      void 
  2632 ;; Registers used:
  2633 ;;		wreg, status,2, status,0, cstack
  2634 ;; Tracked objects:
  2635 ;;		On entry : 3F/1
  2636 ;;		On exit  : 3F/1
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2640 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2642 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2643 ;;Total ram usage:        1 bytes
  2644 ;; Hardware stack levels used:    1
  2645 ;; Hardware stack levels required when called:    5
  2646 ;; This function calls:
  2647 ;;		_SPI1_Exchange8bit
  2648 ;;		_wdtdelay
  2649 ;; This function is called by:
  2650 ;;		_init_display
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           	psect	text9
  2655  003C04                     __ptext9:
  2656                           	opt callstack 0
  2657  003C04                     _send_lcd_cmd_long:
  2658                           	opt callstack 24
  2659                           
  2660                           ; BSR set to: 1
  2661                           ;incstack = 0
  2662                           ;send_lcd_cmd_long@cmd stored from wreg
  2663  003C04  6E0A               	movwf	send_lcd_cmd_long@cmd^0,c
  2664                           
  2665                           ;eadog.c: 71: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 72: {;eadog.c: 7
      +                          3:  do { LATCbits.LATC1 = 0; } while(0);
  2666  003C06  92BC               	bcf	188,1,c	;volatile
  2667                           
  2668                           ;eadog.c: 74:  do { LATCbits.LATC2 = 0; } while(0);
  2669  003C08  94BC               	bcf	188,2,c	;volatile
  2670                           
  2671                           ;eadog.c: 75:  SPI1_Exchange8bit(cmd);
  2672  003C0A  500A               	movf	send_lcd_cmd_long@cmd^0,w,c
  2673  003C0C  EC02  F01F         	call	_SPI1_Exchange8bit
  2674                           
  2675                           ; BSR set to: 61
  2676                           ;eadog.c: 76:  wdtdelay(800);
  2677  003C10  0E20               	movlw	32
  2678  003C12  6E06               	movwf	wdtdelay@delay^0,c
  2679  003C14  0E03               	movlw	3
  2680  003C16  6E07               	movwf	(wdtdelay@delay+1)^0,c
  2681  003C18  0E00               	movlw	0
  2682  003C1A  6E08               	movwf	(wdtdelay@delay+2)^0,c
  2683  003C1C  0E00               	movlw	0
  2684  003C1E  6E09               	movwf	(wdtdelay@delay+3)^0,c
  2685  003C20  ECC1  F01C         	call	_wdtdelay	;wreg free
  2686                           
  2687                           ; BSR set to: 1
  2688  003C24  82BC               	bsf	188,1,c	;volatile
  2689                           
  2690                           ; BSR set to: 1
  2691  003C26  0012               	return		;funcret
  2692  003C28                     __end_of_send_lcd_cmd_long:
  2693                           	opt callstack 0
  2694                           
  2695 ;; *************** function _eaDogM_WriteCommand *****************
  2696 ;; Defined at:
  2697 ;;		line 85 in file "eadog.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;  cmd             1    wreg     const unsigned char 
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;  cmd             1   10[COMRAM] const unsigned char 
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg, status,2, status,0, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 3F/1
  2708 ;;		On exit  : 3F/1
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2712 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2714 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2715 ;;Total ram usage:        1 bytes
  2716 ;; Hardware stack levels used:    1
  2717 ;; Hardware stack levels required when called:    6
  2718 ;; This function calls:
  2719 ;;		_send_lcd_cmd
  2720 ;; This function is called by:
  2721 ;;		_main
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           	psect	text10
  2726  003F7E                     __ptext10:
  2727                           	opt callstack 0
  2728  003F7E                     _eaDogM_WriteCommand:
  2729                           	opt callstack 24
  2730                           
  2731                           ; BSR set to: 1
  2732                           ;incstack = 0
  2733                           ;eaDogM_WriteCommand@cmd stored from wreg
  2734  003F7E  6E0B               	movwf	eaDogM_WriteCommand@cmd^0,c
  2735                           
  2736                           ;eadog.c: 85: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  s
      +                          end_lcd_cmd(cmd);
  2737  003F80  500B               	movf	eaDogM_WriteCommand@cmd^0,w,c
  2738  003F82  ECDE  F01C         	call	_send_lcd_cmd
  2739                           
  2740                           ; BSR set to: 1
  2741  003F86  0012               	return		;funcret
  2742  003F88                     __end_of_eaDogM_WriteCommand:
  2743                           	opt callstack 0
  2744                           
  2745 ;; *************** function _send_lcd_cmd *****************
  2746 ;; Defined at:
  2747 ;;		line 58 in file "eadog.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;  cmd             1    wreg     const unsigned char 
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;  cmd             1    9[COMRAM] const unsigned char 
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  1    wreg      void 
  2754 ;; Registers used:
  2755 ;;		wreg, status,2, status,0, cstack
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/1
  2758 ;;		On exit  : 3F/1
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2762 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2764 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2765 ;;Total ram usage:        1 bytes
  2766 ;; Hardware stack levels used:    1
  2767 ;; Hardware stack levels required when called:    5
  2768 ;; This function calls:
  2769 ;;		_SPI1_Exchange8bit
  2770 ;;		_wdtdelay
  2771 ;; This function is called by:
  2772 ;;		_init_display
  2773 ;;		_eaDogM_WriteCommand
  2774 ;;		_eaDogM_WriteStringAtPos
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           	psect	text11
  2779  0039BC                     __ptext11:
  2780                           	opt callstack 0
  2781  0039BC                     _send_lcd_cmd:
  2782                           	opt callstack 23
  2783                           
  2784                           ; BSR set to: 1
  2785                           ;incstack = 0
  2786                           ;send_lcd_cmd@cmd stored from wreg
  2787  0039BC  6E0A               	movwf	send_lcd_cmd@cmd^0,c
  2788                           
  2789                           ;eadog.c: 58: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 59: {;eadog.c: 60:  d
      +                          o { LATCbits.LATC1 = 0; } while(0);
  2790  0039BE  92BC               	bcf	188,1,c	;volatile
  2791                           
  2792                           ;eadog.c: 61:  do { LATCbits.LATC2 = 0; } while(0);
  2793  0039C0  94BC               	bcf	188,2,c	;volatile
  2794                           
  2795                           ;eadog.c: 62:  wdtdelay(10);
  2796  0039C2  0E0A               	movlw	10
  2797  0039C4  6E06               	movwf	wdtdelay@delay^0,c
  2798  0039C6  0E00               	movlw	0
  2799  0039C8  6E07               	movwf	(wdtdelay@delay+1)^0,c
  2800  0039CA  0E00               	movlw	0
  2801  0039CC  6E08               	movwf	(wdtdelay@delay+2)^0,c
  2802  0039CE  0E00               	movlw	0
  2803  0039D0  6E09               	movwf	(wdtdelay@delay+3)^0,c
  2804  0039D2  ECC1  F01C         	call	_wdtdelay	;wreg free
  2805                           
  2806                           ; BSR set to: 1
  2807                           ;eadog.c: 63:  SPI1_Exchange8bit(cmd);
  2808  0039D6  500A               	movf	send_lcd_cmd@cmd^0,w,c
  2809  0039D8  EC02  F01F         	call	_SPI1_Exchange8bit
  2810                           
  2811                           ; BSR set to: 61
  2812                           ;eadog.c: 64:  wdtdelay(10);
  2813  0039DC  0E0A               	movlw	10
  2814  0039DE  6E06               	movwf	wdtdelay@delay^0,c
  2815  0039E0  0E00               	movlw	0
  2816  0039E2  6E07               	movwf	(wdtdelay@delay+1)^0,c
  2817  0039E4  0E00               	movlw	0
  2818  0039E6  6E08               	movwf	(wdtdelay@delay+2)^0,c
  2819  0039E8  0E00               	movlw	0
  2820  0039EA  6E09               	movwf	(wdtdelay@delay+3)^0,c
  2821  0039EC  ECC1  F01C         	call	_wdtdelay	;wreg free
  2822                           
  2823                           ; BSR set to: 1
  2824  0039F0  82BC               	bsf	188,1,c	;volatile
  2825                           
  2826                           ; BSR set to: 1
  2827  0039F2  0012               	return		;funcret
  2828  0039F4                     __end_of_send_lcd_cmd:
  2829                           	opt callstack 0
  2830                           
  2831 ;; *************** function _wdtdelay *****************
  2832 ;; Defined at:
  2833 ;;		line 14 in file "eadog.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;  delay           4    5[COMRAM] const unsigned long 
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;		None
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  1    wreg      void 
  2840 ;; Registers used:
  2841 ;;		wreg, status,2, status,0
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/1
  2844 ;;		On exit  : 3F/1
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2847 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2850 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2851 ;;Total ram usage:        4 bytes
  2852 ;; Hardware stack levels used:    1
  2853 ;; Hardware stack levels required when called:    4
  2854 ;; This function calls:
  2855 ;;		Nothing
  2856 ;; This function is called by:
  2857 ;;		_init_display
  2858 ;;		_send_lcd_cmd
  2859 ;;		_send_lcd_cmd_long
  2860 ;;		_eaDogM_WriteString
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864                           	psect	text12
  2865  003982                     __ptext12:
  2866                           	opt callstack 0
  2867  003982                     _wdtdelay:
  2868                           	opt callstack 23
  2869                           
  2870                           ;eadog.c: 14: void wdtdelay(const uint32_t delay);eadog.c: 15: {;eadog.c: 16:  static ui
      +                          nt32_t dcount;;eadog.c: 18:  for (dcount = 0; dcount <= delay; dcount++) {
  2871                           
  2872                           ; BSR set to: 1
  2873                           ;incstack = 0
  2874  003982  0E00               	movlw	0
  2875  003984  0101               	movlb	1	; () banked
  2876  003986  6F3E               	movwf	wdtdelay@dcount& (0+255),b
  2877  003988  0E00               	movlw	0
  2878  00398A  6F3F               	movwf	(wdtdelay@dcount+1)& (0+255),b
  2879  00398C  0E00               	movlw	0
  2880  00398E  6F40               	movwf	(wdtdelay@dcount+2)& (0+255),b
  2881  003990  0E00               	movlw	0
  2882  003992  6F41               	movwf	(wdtdelay@dcount+3)& (0+255),b
  2883  003994                     l1206:
  2884                           
  2885                           ; BSR set to: 1
  2886                           ;eadog.c: 19:   __nop();
  2887  003994  F000               	nop	
  2888  003996  0004               	clrwdt		;# 
  2889                           
  2890                           ;eadog.c: 21:  };
  2891  003998  0E01               	movlw	1
  2892  00399A  0101               	movlb	1	; () banked
  2893  00399C  273E               	addwf	wdtdelay@dcount& (0+255),f,b
  2894  00399E  0E00               	movlw	0
  2895  0039A0  233F               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  2896  0039A2  2340               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  2897  0039A4  2341               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  2898  0039A6  513E               	movf	wdtdelay@dcount& (0+255),w,b
  2899  0039A8  5C06               	subwf	wdtdelay@delay^0,w,c
  2900  0039AA  513F               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  2901  0039AC  5807               	subwfb	(wdtdelay@delay+1)^0,w,c
  2902  0039AE  5140               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  2903  0039B0  5808               	subwfb	(wdtdelay@delay+2)^0,w,c
  2904  0039B2  5141               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  2905  0039B4  5809               	subwfb	(wdtdelay@delay+3)^0,w,c
  2906  0039B6  A0D8               	btfss	status,0,c
  2907  0039B8  0012               	return	
  2908  0039BA  D7EC               	goto	l1206
  2909  0039BC                     __end_of_wdtdelay:
  2910                           	opt callstack 0
  2911                           
  2912 ;; *************** function _SPI1_Exchange8bit *****************
  2913 ;; Defined at:
  2914 ;;		line 79 in file "mcc_generated_files/spi1.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;  data            1    wreg     unsigned char 
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  data            1    5[COMRAM] unsigned char 
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      unsigned char 
  2921 ;; Registers used:
  2922 ;;		wreg, status,2
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/1
  2925 ;;		On exit  : 3F/3D
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2929 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2931 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2932 ;;Total ram usage:        1 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; Hardware stack levels required when called:    4
  2935 ;; This function calls:
  2936 ;;		Nothing
  2937 ;; This function is called by:
  2938 ;;		_send_lcd_cmd
  2939 ;;		_send_lcd_cmd_long
  2940 ;;		_eaDogM_WriteString
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text13
  2945  003E04                     __ptext13:
  2946                           	opt callstack 0
  2947  003E04                     _SPI1_Exchange8bit:
  2948                           	opt callstack 23
  2949                           
  2950                           ; BSR set to: 1
  2951                           ;incstack = 0
  2952                           ;SPI1_Exchange8bit@data stored from wreg
  2953  003E04  6E06               	movwf	SPI1_Exchange8bit@data^0,c
  2954                           
  2955                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  2956  003E06  0E01               	movlw	1
  2957  003E08  013D               	movlb	61	; () banked
  2958  003E0A  6F12               	movwf	18,b	;volatile
  2959                           
  2960                           ; BSR set to: 61
  2961                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  2962  003E0C  0060  F01B  FD11   	movff	SPI1_Exchange8bit@data,15633	;volatile
  2963  003E12                     l987:
  2964                           
  2965                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  2966  003E12  0139               	movlb	57	; () banked
  2967  003E14  A9A2               	btfss	162,4,b	;volatile
  2968  003E16  D7FD               	goto	l987
  2969                           
  2970                           ; BSR set to: 57
  2971                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  2972  003E18  013D               	movlb	61	; () banked
  2973  003E1A  5110               	movf	16,w,b	;volatile
  2974                           
  2975                           ; BSR set to: 61
  2976  003E1C  0012               	return		;funcret
  2977  003E1E                     __end_of_SPI1_Exchange8bit:
  2978                           	opt callstack 0
  2979                           
  2980 ;; *************** function _SYSTEM_Initialize *****************
  2981 ;; Defined at:
  2982 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;		None
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;		None
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  1    wreg      void 
  2989 ;; Registers used:
  2990 ;;		wreg, status,2, status,0, cstack
  2991 ;; Tracked objects:
  2992 ;;		On entry : 3F/1
  2993 ;;		On exit  : 3F/3D
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3000 ;;Total ram usage:        0 bytes
  3001 ;; Hardware stack levels used:    1
  3002 ;; Hardware stack levels required when called:    6
  3003 ;; This function calls:
  3004 ;;		_ADCC_Initialize
  3005 ;;		_INTERRUPT_Initialize
  3006 ;;		_OSCILLATOR_Initialize
  3007 ;;		_PIN_MANAGER_Initialize
  3008 ;;		_PMD_Initialize
  3009 ;;		_PWM8_Initialize
  3010 ;;		_SPI1_Initialize
  3011 ;;		_TMR2_Initialize
  3012 ;;		_TMR5_Initialize
  3013 ;;		_TMR6_Initialize
  3014 ;;		_UART1_Initialize
  3015 ;;		_UART2_Initialize
  3016 ;; This function is called by:
  3017 ;;		_main
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           	psect	text14
  3022  003A62                     __ptext14:
  3023                           	opt callstack 0
  3024  003A62                     _SYSTEM_Initialize:
  3025                           	opt callstack 24
  3026                           
  3027                           ; BSR set to: 1
  3028                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  3029                           
  3030                           ; BSR set to: 61
  3031                           ;incstack = 0
  3032  003A62  ECDF  F01B         	call	_INTERRUPT_Initialize	;wreg free
  3033                           
  3034                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  3035  003A66  ECB5  F01E         	call	_PMD_Initialize	;wreg free
  3036                           
  3037                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3038  003A6A  EC03  F019         	call	_PIN_MANAGER_Initialize	;wreg free
  3039                           
  3040                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3041  003A6E  ECE6  F01E         	call	_OSCILLATOR_Initialize	;wreg free
  3042                           
  3043                           ; BSR set to: 57
  3044                           ;mcc_generated_files/mcc.c: 56:     TMR6_Initialize();
  3045  003A72  ECAD  F01D         	call	_TMR6_Initialize	;wreg free
  3046                           
  3047                           ; BSR set to: 57
  3048                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  3049  003A76  EC35  F01B         	call	_ADCC_Initialize	;wreg free
  3050                           
  3051                           ; BSR set to: 62
  3052                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  3053  003A7A  ECD7  F01E         	call	_TMR2_Initialize	;wreg free
  3054                           
  3055                           ; BSR set to: 57
  3056                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
  3057  003A7E  EC28  F01F         	call	_PWM8_Initialize	;wreg free
  3058                           
  3059                           ;mcc_generated_files/mcc.c: 60:     TMR5_Initialize();
  3060  003A82  ECB9  F01B         	call	_TMR5_Initialize	;wreg free
  3061                           
  3062                           ;mcc_generated_files/mcc.c: 61:     UART2_Initialize();
  3063  003A86  ECAD  F018         	call	_UART2_Initialize	;wreg free
  3064                           
  3065                           ;mcc_generated_files/mcc.c: 62:     UART1_Initialize();
  3066  003A8A  EC9B  F017         	call	_UART1_Initialize	;wreg free
  3067                           
  3068                           ; BSR set to: 57
  3069                           ;mcc_generated_files/mcc.c: 63:     SPI1_Initialize();
  3070  003A8E  EC1C  F01F         	call	_SPI1_Initialize	;wreg free
  3071                           
  3072                           ; BSR set to: 61
  3073  003A92  0012               	return		;funcret
  3074  003A94                     __end_of_SYSTEM_Initialize:
  3075                           	opt callstack 0
  3076                           
  3077 ;; *************** function _UART2_Initialize *****************
  3078 ;; Defined at:
  3079 ;;		line 87 in file "mcc_generated_files/uart2.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;		None
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;		None
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      void 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 3F/39
  3090 ;;		On exit  : 3F/39
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3097 ;;Total ram usage:        0 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; Hardware stack levels required when called:    5
  3100 ;; This function calls:
  3101 ;;		_UART2_SetErrorHandler
  3102 ;;		_UART2_SetFramingErrorHandler
  3103 ;;		_UART2_SetOverrunErrorHandler
  3104 ;;		_UART2_SetRxInterruptHandler
  3105 ;;		_UART2_SetTxInterruptHandler
  3106 ;; This function is called by:
  3107 ;;		_SYSTEM_Initialize
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           	psect	text15
  3112  00315A                     __ptext15:
  3113                           	opt callstack 0
  3114  00315A                     _UART2_Initialize:
  3115                           	opt callstack 24
  3116                           
  3117                           ; BSR set to: 57
  3118                           ;mcc_generated_files/uart2.c: 90:     PIE6bits.U2RXIE = 0;
  3119                           
  3120                           ; BSR set to: 61
  3121                           ;incstack = 0
  3122  00315A  9596               	bcf	150,2,b	;volatile
  3123                           
  3124                           ; BSR set to: 57
  3125                           ;mcc_generated_files/uart2.c: 91:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
  3126  00315C  0E50               	movlw	low _UART2_Receive_ISR
  3127  00315E  6E06               	movwf	UART2_SetRxInterruptHandler@InterruptHandler^0,c
  3128  003160  0E33               	movlw	high _UART2_Receive_ISR
  3129  003162  6E07               	movwf	(UART2_SetRxInterruptHandler@InterruptHandler+1)^0,c
  3130  003164  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
  3131  003166  6E08               	movwf	(UART2_SetRxInterruptHandler@InterruptHandler+2)^0,c
  3132  003168  EC49  F01F         	call	_UART2_SetRxInterruptHandler	;wreg free
  3133                           
  3134                           ; BSR set to: 57
  3135                           ;mcc_generated_files/uart2.c: 92:     PIE6bits.U2TXIE = 0;
  3136  00316C  9796               	bcf	150,3,b	;volatile
  3137                           
  3138                           ;mcc_generated_files/uart2.c: 93:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
  3139  00316E  0EF8               	movlw	low _UART2_Transmit_ISR
  3140  003170  6E06               	movwf	UART2_SetTxInterruptHandler@InterruptHandler^0,c
  3141  003172  0E3A               	movlw	high _UART2_Transmit_ISR
  3142  003174  6E07               	movwf	(UART2_SetTxInterruptHandler@InterruptHandler+1)^0,c
  3143  003176  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
  3144  003178  6E08               	movwf	(UART2_SetTxInterruptHandler@InterruptHandler+2)^0,c
  3145  00317A  EC3F  F01F         	call	_UART2_SetTxInterruptHandler	;wreg free
  3146                           
  3147                           ; BSR set to: 57
  3148                           ;mcc_generated_files/uart2.c: 98:     U2P1L = 0x00;
  3149  00317E  0E00               	movlw	0
  3150  003180  013D               	movlb	61	; () banked
  3151  003182  6FD4               	movwf	212,b	;volatile
  3152                           
  3153                           ; BSR set to: 61
  3154                           ;mcc_generated_files/uart2.c: 101:     U2P2L = 0x00;
  3155  003184  0E00               	movlw	0
  3156  003186  6FD6               	movwf	214,b	;volatile
  3157                           
  3158                           ; BSR set to: 61
  3159                           ;mcc_generated_files/uart2.c: 104:     U2P3L = 0x00;
  3160  003188  0E00               	movlw	0
  3161  00318A  6FD8               	movwf	216,b	;volatile
  3162                           
  3163                           ; BSR set to: 61
  3164                           ;mcc_generated_files/uart2.c: 107:     U2CON0 = 0xB0;
  3165  00318C  0EB0               	movlw	176
  3166  00318E  6FDA               	movwf	218,b	;volatile
  3167                           
  3168                           ; BSR set to: 61
  3169                           ;mcc_generated_files/uart2.c: 110:     U2CON1 = 0x80;
  3170  003190  0E80               	movlw	128
  3171  003192  6FDB               	movwf	219,b	;volatile
  3172                           
  3173                           ; BSR set to: 61
  3174                           ;mcc_generated_files/uart2.c: 113:     U2CON2 = 0x00;
  3175  003194  0E00               	movlw	0
  3176  003196  6FDC               	movwf	220,b	;volatile
  3177                           
  3178                           ; BSR set to: 61
  3179                           ;mcc_generated_files/uart2.c: 116:     U2BRGL = 0x40;
  3180  003198  0E40               	movlw	64
  3181  00319A  6FDD               	movwf	221,b	;volatile
  3182                           
  3183                           ; BSR set to: 61
  3184                           ;mcc_generated_files/uart2.c: 119:     U2BRGH = 0x03;
  3185  00319C  0E03               	movlw	3
  3186  00319E  6FDE               	movwf	222,b	;volatile
  3187                           
  3188                           ; BSR set to: 61
  3189                           ;mcc_generated_files/uart2.c: 122:     U2FIFO = 0x00;
  3190  0031A0  0E00               	movlw	0
  3191  0031A2  6FDF               	movwf	223,b	;volatile
  3192                           
  3193                           ; BSR set to: 61
  3194                           ;mcc_generated_files/uart2.c: 125:     U2UIR = 0x00;
  3195  0031A4  0E00               	movlw	0
  3196  0031A6  6FE0               	movwf	224,b	;volatile
  3197                           
  3198                           ; BSR set to: 61
  3199                           ;mcc_generated_files/uart2.c: 128:     U2ERRIR = 0x00;
  3200  0031A8  0E00               	movlw	0
  3201  0031AA  6FE1               	movwf	225,b	;volatile
  3202                           
  3203                           ; BSR set to: 61
  3204                           ;mcc_generated_files/uart2.c: 131:     U2ERRIE = 0x00;
  3205  0031AC  0E00               	movlw	0
  3206  0031AE  6FE2               	movwf	226,b	;volatile
  3207                           
  3208                           ;mcc_generated_files/uart2.c: 134:     UART2_SetFramingErrorHandler(UART2_DefaultFraming
      +                          ErrorHandler);
  3209  0031B0  0EB0               	movlw	low _UART2_DefaultFramingErrorHandler
  3210  0031B2  6E06               	movwf	UART2_SetFramingErrorHandler@interruptHandler^0,c
  3211  0031B4  0E3F               	movlw	high _UART2_DefaultFramingErrorHandler
  3212  0031B6  6E07               	movwf	(UART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  3213  0031B8  0E00               	movlw	low (_UART2_DefaultFramingErrorHandler shr (0+16))
  3214  0031BA  6E08               	movwf	(UART2_SetFramingErrorHandler@interruptHandler+2)^0,c
  3215  0031BC  EC5D  F01F         	call	_UART2_SetFramingErrorHandler	;wreg free
  3216                           
  3217                           ;mcc_generated_files/uart2.c: 135:     UART2_SetOverrunErrorHandler(UART2_DefaultOverrun
      +                          ErrorHandler);
  3218  0031C0  0EAE               	movlw	low _UART2_DefaultOverrunErrorHandler
  3219  0031C2  6E06               	movwf	UART2_SetOverrunErrorHandler@interruptHandler^0,c
  3220  0031C4  0E3F               	movlw	high _UART2_DefaultOverrunErrorHandler
  3221  0031C6  6E07               	movwf	(UART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3222  0031C8  0E00               	movlw	low (_UART2_DefaultOverrunErrorHandler shr (0+16))
  3223  0031CA  6E08               	movwf	(UART2_SetOverrunErrorHandler@interruptHandler+2)^0,c
  3224  0031CC  EC53  F01F         	call	_UART2_SetOverrunErrorHandler	;wreg free
  3225                           
  3226                           ;mcc_generated_files/uart2.c: 136:     UART2_SetErrorHandler(UART2_DefaultErrorHandler);
  3227  0031D0  0E9E               	movlw	low _UART2_DefaultErrorHandler
  3228  0031D2  6E06               	movwf	UART2_SetErrorHandler@interruptHandler^0,c
  3229  0031D4  0E3F               	movlw	high _UART2_DefaultErrorHandler
  3230  0031D6  6E07               	movwf	(UART2_SetErrorHandler@interruptHandler+1)^0,c
  3231  0031D8  0E00               	movlw	low (_UART2_DefaultErrorHandler shr (0+16))
  3232  0031DA  6E08               	movwf	(UART2_SetErrorHandler@interruptHandler+2)^0,c
  3233  0031DC  EC67  F01F         	call	_UART2_SetErrorHandler	;wreg free
  3234                           
  3235                           ; BSR set to: 61
  3236                           ;mcc_generated_files/uart2.c: 138:     uart2RxLastError.status = 0;
  3237  0031E0  0E00               	movlw	0
  3238  0031E2  0101               	movlb	1	; () banked
  3239  0031E4  6F70               	movwf	_uart2RxLastError& (0+255),b	;volatile
  3240                           
  3241                           ; BSR set to: 1
  3242                           ;mcc_generated_files/uart2.c: 141:     uart2TxHead = 0;
  3243  0031E6  0E00               	movlw	0
  3244  0031E8  0100               	movlb	0	; () banked
  3245  0031EA  6FFA               	movwf	_uart2TxHead& (0+255),b	;volatile
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;mcc_generated_files/uart2.c: 142:     uart2TxTail = 0;
  3249  0031EC  0E00               	movlw	0
  3250  0031EE  6FF9               	movwf	_uart2TxTail& (0+255),b	;volatile
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;mcc_generated_files/uart2.c: 143:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
  3254  0031F0  0E08               	movlw	8
  3255  0031F2  6FF8               	movwf	_uart2TxBufferRemaining& (0+255),b	;volatile
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;mcc_generated_files/uart2.c: 144:     uart2RxHead = 0;
  3259  0031F4  0E00               	movlw	0
  3260  0031F6  6E59               	movwf	_uart2RxHead^0,c	;volatile
  3261                           
  3262                           ; BSR set to: 0
  3263                           ;mcc_generated_files/uart2.c: 145:     uart2RxTail = 0;
  3264  0031F8  0E00               	movlw	0
  3265  0031FA  6E58               	movwf	_uart2RxTail^0,c	;volatile
  3266                           
  3267                           ; BSR set to: 0
  3268                           ;mcc_generated_files/uart2.c: 146:     uart2RxCount = 0;
  3269  0031FC  0E00               	movlw	0
  3270  0031FE  6FF7               	movwf	_uart2RxCount& (0+255),b	;volatile
  3271                           
  3272                           ; BSR set to: 0
  3273                           ;mcc_generated_files/uart2.c: 149:     PIE6bits.U2RXIE = 1;
  3274  003200  0139               	movlb	57	; () banked
  3275  003202  8596               	bsf	150,2,b	;volatile
  3276                           
  3277                           ; BSR set to: 57
  3278  003204  0012               	return		;funcret
  3279  003206                     __end_of_UART2_Initialize:
  3280                           	opt callstack 0
  3281                           
  3282 ;; *************** function _UART2_SetTxInterruptHandler *****************
  3283 ;; Defined at:
  3284 ;;		line 324 in file "mcc_generated_files/uart2.c"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  3287 ;;		 -> UART2_Transmit_ISR(1), 
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;		None
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  1    wreg      void 
  3292 ;; Registers used:
  3293 ;;		wreg, status,2, status,0
  3294 ;; Tracked objects:
  3295 ;;		On entry : 3F/39
  3296 ;;		On exit  : 3F/39
  3297 ;;		Unchanged: 3E/0
  3298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3299 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3302 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3303 ;;Total ram usage:        3 bytes
  3304 ;; Hardware stack levels used:    1
  3305 ;; Hardware stack levels required when called:    4
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_UART2_Initialize
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           	psect	text16
  3314  003E7E                     __ptext16:
  3315                           	opt callstack 0
  3316  003E7E                     _UART2_SetTxInterruptHandler:
  3317                           	opt callstack 24
  3318                           
  3319                           ; BSR set to: 57
  3320                           ;mcc_generated_files/uart2.c: 325:     UART2_TxInterruptHandler = InterruptHandler;
  3321                           
  3322                           ; BSR set to: 57
  3323                           ;incstack = 0
  3324  003E7E  0060  F018  F160   	movff	UART2_SetTxInterruptHandler@InterruptHandler,_UART2_TxInterruptHandler
  3325  003E84  0060  F01C  F161   	movff	UART2_SetTxInterruptHandler@InterruptHandler+1,_UART2_TxInterruptHandler+1
  3326  003E8A  0060  F020  F162   	movff	UART2_SetTxInterruptHandler@InterruptHandler+2,_UART2_TxInterruptHandler+2
  3327                           
  3328                           ; BSR set to: 57
  3329  003E90  0012               	return		;funcret
  3330  003E92                     __end_of_UART2_SetTxInterruptHandler:
  3331                           	opt callstack 0
  3332                           
  3333 ;; *************** function _UART2_SetRxInterruptHandler *****************
  3334 ;; Defined at:
  3335 ;;		line 320 in file "mcc_generated_files/uart2.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  3338 ;;		 -> UART2_Receive_ISR(1), 
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;		None
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  1    wreg      void 
  3343 ;; Registers used:
  3344 ;;		wreg, status,2, status,0
  3345 ;; Tracked objects:
  3346 ;;		On entry : 3F/39
  3347 ;;		On exit  : 3F/39
  3348 ;;		Unchanged: 3E/0
  3349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3350 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3353 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3354 ;;Total ram usage:        3 bytes
  3355 ;; Hardware stack levels used:    1
  3356 ;; Hardware stack levels required when called:    4
  3357 ;; This function calls:
  3358 ;;		Nothing
  3359 ;; This function is called by:
  3360 ;;		_UART2_Initialize
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           	psect	text17
  3365  003E92                     __ptext17:
  3366                           	opt callstack 0
  3367  003E92                     _UART2_SetRxInterruptHandler:
  3368                           	opt callstack 24
  3369                           
  3370                           ; BSR set to: 57
  3371                           ;mcc_generated_files/uart2.c: 321:     UART2_RxInterruptHandler = InterruptHandler;
  3372                           
  3373                           ; BSR set to: 57
  3374                           ;incstack = 0
  3375  003E92  0060  F018  F163   	movff	UART2_SetRxInterruptHandler@InterruptHandler,_UART2_RxInterruptHandler
  3376  003E98  0060  F01C  F164   	movff	UART2_SetRxInterruptHandler@InterruptHandler+1,_UART2_RxInterruptHandler+1
  3377  003E9E  0060  F020  F165   	movff	UART2_SetRxInterruptHandler@InterruptHandler+2,_UART2_RxInterruptHandler+2
  3378                           
  3379                           ; BSR set to: 57
  3380  003EA4  0012               	return		;funcret
  3381  003EA6                     __end_of_UART2_SetRxInterruptHandler:
  3382                           	opt callstack 0
  3383                           
  3384 ;; *************** function _UART2_SetOverrunErrorHandler *****************
  3385 ;; Defined at:
  3386 ;;		line 310 in file "mcc_generated_files/uart2.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  3389 ;;		 -> UART2_DefaultOverrunErrorHandler(1), 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;		None
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  1    wreg      void 
  3394 ;; Registers used:
  3395 ;;		wreg, status,2, status,0
  3396 ;; Tracked objects:
  3397 ;;		On entry : 3F/3D
  3398 ;;		On exit  : 3F/3D
  3399 ;;		Unchanged: 3E/0
  3400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3401 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3404 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3405 ;;Total ram usage:        3 bytes
  3406 ;; Hardware stack levels used:    1
  3407 ;; Hardware stack levels required when called:    4
  3408 ;; This function calls:
  3409 ;;		Nothing
  3410 ;; This function is called by:
  3411 ;;		_UART2_Initialize
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           	psect	text18
  3416  003EA6                     __ptext18:
  3417                           	opt callstack 0
  3418  003EA6                     _UART2_SetOverrunErrorHandler:
  3419                           	opt callstack 24
  3420                           
  3421                           ; BSR set to: 61
  3422                           ;mcc_generated_files/uart2.c: 311:     UART2_OverrunErrorHandler = interruptHandler;
  3423                           
  3424                           ; BSR set to: 57
  3425                           ;incstack = 0
  3426  003EA6  0060  F018  F14B   	movff	UART2_SetOverrunErrorHandler@interruptHandler,_UART2_OverrunErrorHandler
  3427  003EAC  0060  F01C  F14C   	movff	UART2_SetOverrunErrorHandler@interruptHandler+1,_UART2_OverrunErrorHandler+1
  3428  003EB2  0060  F020  F14D   	movff	UART2_SetOverrunErrorHandler@interruptHandler+2,_UART2_OverrunErrorHandler+2
  3429                           
  3430                           ; BSR set to: 61
  3431  003EB8  0012               	return		;funcret
  3432  003EBA                     __end_of_UART2_SetOverrunErrorHandler:
  3433                           	opt callstack 0
  3434                           
  3435 ;; *************** function _UART2_SetFramingErrorHandler *****************
  3436 ;; Defined at:
  3437 ;;		line 306 in file "mcc_generated_files/uart2.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  3440 ;;		 -> UART2_DefaultFramingErrorHandler(1), 
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;		None
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  1    wreg      void 
  3445 ;; Registers used:
  3446 ;;		wreg, status,2, status,0
  3447 ;; Tracked objects:
  3448 ;;		On entry : 3F/3D
  3449 ;;		On exit  : 3F/3D
  3450 ;;		Unchanged: 3E/0
  3451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3452 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3455 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3456 ;;Total ram usage:        3 bytes
  3457 ;; Hardware stack levels used:    1
  3458 ;; Hardware stack levels required when called:    4
  3459 ;; This function calls:
  3460 ;;		Nothing
  3461 ;; This function is called by:
  3462 ;;		_UART2_Initialize
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           	psect	text19
  3467  003EBA                     __ptext19:
  3468                           	opt callstack 0
  3469  003EBA                     _UART2_SetFramingErrorHandler:
  3470                           	opt callstack 24
  3471                           
  3472                           ; BSR set to: 61
  3473                           ;mcc_generated_files/uart2.c: 307:     UART2_FramingErrorHandler = interruptHandler;
  3474                           
  3475                           ; BSR set to: 61
  3476                           ;incstack = 0
  3477  003EBA  0060  F018  F14E   	movff	UART2_SetFramingErrorHandler@interruptHandler,_UART2_FramingErrorHandler
  3478  003EC0  0060  F01C  F14F   	movff	UART2_SetFramingErrorHandler@interruptHandler+1,_UART2_FramingErrorHandler+1
  3479  003EC6  0060  F020  F150   	movff	UART2_SetFramingErrorHandler@interruptHandler+2,_UART2_FramingErrorHandler+2
  3480                           
  3481                           ; BSR set to: 61
  3482  003ECC  0012               	return		;funcret
  3483  003ECE                     __end_of_UART2_SetFramingErrorHandler:
  3484                           	opt callstack 0
  3485                           
  3486 ;; *************** function _UART2_SetErrorHandler *****************
  3487 ;; Defined at:
  3488 ;;		line 314 in file "mcc_generated_files/uart2.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  3491 ;;		 -> UART2_DefaultErrorHandler(1), 
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;		None
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  1    wreg      void 
  3496 ;; Registers used:
  3497 ;;		wreg, status,2, status,0
  3498 ;; Tracked objects:
  3499 ;;		On entry : 3F/3D
  3500 ;;		On exit  : 3F/3D
  3501 ;;		Unchanged: 3E/0
  3502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3503 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3506 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3507 ;;Total ram usage:        3 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; Hardware stack levels required when called:    4
  3510 ;; This function calls:
  3511 ;;		Nothing
  3512 ;; This function is called by:
  3513 ;;		_UART2_Initialize
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           	psect	text20
  3518  003ECE                     __ptext20:
  3519                           	opt callstack 0
  3520  003ECE                     _UART2_SetErrorHandler:
  3521                           	opt callstack 24
  3522                           
  3523                           ; BSR set to: 61
  3524                           ;mcc_generated_files/uart2.c: 315:     UART2_ErrorHandler = interruptHandler;
  3525                           
  3526                           ; BSR set to: 61
  3527                           ;incstack = 0
  3528  003ECE  0060  F018  F148   	movff	UART2_SetErrorHandler@interruptHandler,_UART2_ErrorHandler
  3529  003ED4  0060  F01C  F149   	movff	UART2_SetErrorHandler@interruptHandler+1,_UART2_ErrorHandler+1
  3530  003EDA  0060  F020  F14A   	movff	UART2_SetErrorHandler@interruptHandler+2,_UART2_ErrorHandler+2
  3531                           
  3532                           ; BSR set to: 61
  3533  003EE0  0012               	return		;funcret
  3534  003EE2                     __end_of_UART2_SetErrorHandler:
  3535                           	opt callstack 0
  3536                           
  3537 ;; *************** function _UART1_Initialize *****************
  3538 ;; Defined at:
  3539 ;;		line 87 in file "mcc_generated_files/uart1.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;		None
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;		None
  3544 ;; Return value:  Size  Location     Type
  3545 ;;                  1    wreg      void 
  3546 ;; Registers used:
  3547 ;;		wreg, status,2, status,0, cstack
  3548 ;; Tracked objects:
  3549 ;;		On entry : 3F/39
  3550 ;;		On exit  : 3F/39
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3557 ;;Total ram usage:        0 bytes
  3558 ;; Hardware stack levels used:    1
  3559 ;; Hardware stack levels required when called:    5
  3560 ;; This function calls:
  3561 ;;		_UART1_SetErrorHandler
  3562 ;;		_UART1_SetFramingErrorHandler
  3563 ;;		_UART1_SetOverrunErrorHandler
  3564 ;;		_UART1_SetRxInterruptHandler
  3565 ;;		_UART1_SetTxInterruptHandler
  3566 ;; This function is called by:
  3567 ;;		_SYSTEM_Initialize
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           	psect	text21
  3572  002F36                     __ptext21:
  3573                           	opt callstack 0
  3574  002F36                     _UART1_Initialize:
  3575                           	opt callstack 24
  3576                           
  3577                           ; BSR set to: 57
  3578                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
  3579                           
  3580                           ; BSR set to: 61
  3581                           ;incstack = 0
  3582  002F36  9793               	bcf	147,3,b	;volatile
  3583                           
  3584                           ; BSR set to: 57
  3585                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  3586  002F38  0EB2               	movlw	low _UART1_Receive_ISR
  3587  002F3A  6E06               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
  3588  002F3C  0E32               	movlw	high _UART1_Receive_ISR
  3589  002F3E  6E07               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
  3590  002F40  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
  3591  002F42  6E08               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+2)^0,c
  3592  002F44  EC7B  F01F         	call	_UART1_SetRxInterruptHandler	;wreg free
  3593                           
  3594                           ; BSR set to: 57
  3595                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
  3596  002F48  9993               	bcf	147,4,b	;volatile
  3597                           
  3598                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  3599  002F4A  0EC6               	movlw	low _UART1_Transmit_ISR
  3600  002F4C  6E06               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
  3601  002F4E  0E3A               	movlw	high _UART1_Transmit_ISR
  3602  002F50  6E07               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
  3603  002F52  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
  3604  002F54  6E08               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+2)^0,c
  3605  002F56  EC71  F01F         	call	_UART1_SetTxInterruptHandler	;wreg free
  3606                           
  3607                           ; BSR set to: 57
  3608                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
  3609  002F5A  0E00               	movlw	0
  3610  002F5C  013D               	movlb	61	; () banked
  3611  002F5E  6FEC               	movwf	236,b	;volatile
  3612                           
  3613                           ; BSR set to: 61
  3614                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
  3615  002F60  0E00               	movlw	0
  3616  002F62  6FED               	movwf	237,b	;volatile
  3617                           
  3618                           ; BSR set to: 61
  3619                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
  3620  002F64  0E00               	movlw	0
  3621  002F66  6FEE               	movwf	238,b	;volatile
  3622                           
  3623                           ; BSR set to: 61
  3624                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
  3625  002F68  0E00               	movlw	0
  3626  002F6A  6FEF               	movwf	239,b	;volatile
  3627                           
  3628                           ; BSR set to: 61
  3629                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
  3630  002F6C  0E00               	movlw	0
  3631  002F6E  6FF0               	movwf	240,b	;volatile
  3632                           
  3633                           ; BSR set to: 61
  3634                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
  3635  002F70  0E00               	movlw	0
  3636  002F72  6FF1               	movwf	241,b	;volatile
  3637                           
  3638                           ; BSR set to: 61
  3639                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0x90;
  3640  002F74  0E90               	movlw	144
  3641  002F76  6FF2               	movwf	242,b	;volatile
  3642                           
  3643                           ; BSR set to: 61
  3644                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
  3645  002F78  0E80               	movlw	128
  3646  002F7A  6FF3               	movwf	243,b	;volatile
  3647                           
  3648                           ; BSR set to: 61
  3649                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
  3650  002F7C  0E00               	movlw	0
  3651  002F7E  6FF4               	movwf	244,b	;volatile
  3652                           
  3653                           ; BSR set to: 61
  3654                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x40;
  3655  002F80  0E40               	movlw	64
  3656  002F82  6FF5               	movwf	245,b	;volatile
  3657                           
  3658                           ; BSR set to: 61
  3659                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x03;
  3660  002F84  0E03               	movlw	3
  3661  002F86  6FF6               	movwf	246,b	;volatile
  3662                           
  3663                           ; BSR set to: 61
  3664                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
  3665  002F88  0E00               	movlw	0
  3666  002F8A  6FF7               	movwf	247,b	;volatile
  3667                           
  3668                           ; BSR set to: 61
  3669                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
  3670  002F8C  0E00               	movlw	0
  3671  002F8E  6FF8               	movwf	248,b	;volatile
  3672                           
  3673                           ; BSR set to: 61
  3674                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
  3675  002F90  0E00               	movlw	0
  3676  002F92  6FF9               	movwf	249,b	;volatile
  3677                           
  3678                           ; BSR set to: 61
  3679                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
  3680  002F94  0E00               	movlw	0
  3681  002F96  6FFA               	movwf	250,b	;volatile
  3682                           
  3683                           ; BSR set to: 61
  3684                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  3685  002F98  0EAC               	movlw	low _UART1_DefaultFramingErrorHandler
  3686  002F9A  6E06               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  3687  002F9C  0E3F               	movlw	high _UART1_DefaultFramingErrorHandler
  3688  002F9E  6E07               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  3689  002FA0  0E00               	movlw	low (_UART1_DefaultFramingErrorHandler shr (0+16))
  3690  002FA2  6E08               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+2)^0,c
  3691  002FA4  EC8F  F01F         	call	_UART1_SetFramingErrorHandler	;wreg free
  3692                           
  3693                           ; BSR set to: 61
  3694                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  3695  002FA8  0EAA               	movlw	low _UART1_DefaultOverrunErrorHandler
  3696  002FAA  6E06               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  3697  002FAC  0E3F               	movlw	high _UART1_DefaultOverrunErrorHandler
  3698  002FAE  6E07               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3699  002FB0  0E00               	movlw	low (_UART1_DefaultOverrunErrorHandler shr (0+16))
  3700  002FB2  6E08               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+2)^0,c
  3701  002FB4  EC85  F01F         	call	_UART1_SetOverrunErrorHandler	;wreg free
  3702                           
  3703                           ; BSR set to: 61
  3704                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  3705  002FB8  0E98               	movlw	low _UART1_DefaultErrorHandler
  3706  002FBA  6E06               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  3707  002FBC  0E3F               	movlw	high _UART1_DefaultErrorHandler
  3708  002FBE  6E07               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  3709  002FC0  0E00               	movlw	low (_UART1_DefaultErrorHandler shr (0+16))
  3710  002FC2  6E08               	movwf	(UART1_SetErrorHandler@interruptHandler+2)^0,c
  3711  002FC4  EC99  F01F         	call	_UART1_SetErrorHandler	;wreg free
  3712                           
  3713                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
  3714  002FC8  0E00               	movlw	0
  3715  002FCA  0101               	movlb	1	; () banked
  3716  002FCC  6F71               	movwf	_uart1RxLastError& (0+255),b	;volatile
  3717                           
  3718                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
  3719  002FCE  0E00               	movlw	0
  3720  002FD0  0100               	movlb	0	; () banked
  3721  002FD2  6FFD               	movwf	_uart1TxHead& (0+255),b	;volatile
  3722                           
  3723                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
  3724  002FD4  0E00               	movlw	0
  3725  002FD6  6FFC               	movwf	_uart1TxTail& (0+255),b	;volatile
  3726                           
  3727                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  3728  002FD8  0E08               	movlw	8
  3729  002FDA  6FFB               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
  3730                           
  3731                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
  3732  002FDC  0E00               	movlw	0
  3733  002FDE  6E5A               	movwf	_uart1RxHead^0,c	;volatile
  3734                           
  3735                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
  3736  002FE0  0E00               	movlw	0
  3737  002FE2  0101               	movlb	1	; () banked
  3738  002FE4  6F73               	movwf	_uart1RxTail& (0+255),b	;volatile
  3739                           
  3740                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
  3741  002FE6  0E00               	movlw	0
  3742  002FE8  6F72               	movwf	_uart1RxCount& (0+255),b	;volatile
  3743                           
  3744                           ; BSR set to: 1
  3745                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
  3746  002FEA  0139               	movlb	57	; () banked
  3747  002FEC  8793               	bsf	147,3,b	;volatile
  3748                           
  3749                           ; BSR set to: 57
  3750  002FEE  0012               	return		;funcret
  3751  002FF0                     __end_of_UART1_Initialize:
  3752                           	opt callstack 0
  3753                           
  3754 ;; *************** function _UART1_SetTxInterruptHandler *****************
  3755 ;; Defined at:
  3756 ;;		line 323 in file "mcc_generated_files/uart1.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  3759 ;;		 -> UART1_Transmit_ISR(1), 
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;		None
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  1    wreg      void 
  3764 ;; Registers used:
  3765 ;;		wreg, status,2, status,0
  3766 ;; Tracked objects:
  3767 ;;		On entry : 3F/39
  3768 ;;		On exit  : 3F/39
  3769 ;;		Unchanged: 3E/0
  3770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3771 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3774 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3775 ;;Total ram usage:        3 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; Hardware stack levels required when called:    4
  3778 ;; This function calls:
  3779 ;;		Nothing
  3780 ;; This function is called by:
  3781 ;;		_UART1_Initialize
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           	psect	text22
  3786  003EE2                     __ptext22:
  3787                           	opt callstack 0
  3788  003EE2                     _UART1_SetTxInterruptHandler:
  3789                           	opt callstack 24
  3790                           
  3791                           ; BSR set to: 57
  3792                           ;mcc_generated_files/uart1.c: 324:     UART1_TxInterruptHandler = InterruptHandler;
  3793                           
  3794                           ; BSR set to: 57
  3795                           ;incstack = 0
  3796  003EE2  0060  F018  F15A   	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  3797  003EE8  0060  F01C  F15B   	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  3798  003EEE  0060  F020  F15C   	movff	UART1_SetTxInterruptHandler@InterruptHandler+2,_UART1_TxInterruptHandler+2
  3799                           
  3800                           ; BSR set to: 57
  3801  003EF4  0012               	return		;funcret
  3802  003EF6                     __end_of_UART1_SetTxInterruptHandler:
  3803                           	opt callstack 0
  3804                           
  3805 ;; *************** function _UART1_SetRxInterruptHandler *****************
  3806 ;; Defined at:
  3807 ;;		line 319 in file "mcc_generated_files/uart1.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  3810 ;;		 -> UART1_Receive_ISR(1), 
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;		None
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  1    wreg      void 
  3815 ;; Registers used:
  3816 ;;		wreg, status,2, status,0
  3817 ;; Tracked objects:
  3818 ;;		On entry : 3F/39
  3819 ;;		On exit  : 3F/39
  3820 ;;		Unchanged: 3E/0
  3821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3822 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3825 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3826 ;;Total ram usage:        3 bytes
  3827 ;; Hardware stack levels used:    1
  3828 ;; Hardware stack levels required when called:    4
  3829 ;; This function calls:
  3830 ;;		Nothing
  3831 ;; This function is called by:
  3832 ;;		_UART1_Initialize
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           	psect	text23
  3837  003EF6                     __ptext23:
  3838                           	opt callstack 0
  3839  003EF6                     _UART1_SetRxInterruptHandler:
  3840                           	opt callstack 24
  3841                           
  3842                           ; BSR set to: 57
  3843                           ;mcc_generated_files/uart1.c: 320:     UART1_RxInterruptHandler = InterruptHandler;
  3844                           
  3845                           ; BSR set to: 57
  3846                           ;incstack = 0
  3847  003EF6  0060  F018  F15D   	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  3848  003EFC  0060  F01C  F15E   	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  3849  003F02  0060  F020  F15F   	movff	UART1_SetRxInterruptHandler@InterruptHandler+2,_UART1_RxInterruptHandler+2
  3850                           
  3851                           ; BSR set to: 57
  3852  003F08  0012               	return		;funcret
  3853  003F0A                     __end_of_UART1_SetRxInterruptHandler:
  3854                           	opt callstack 0
  3855                           
  3856 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  3857 ;; Defined at:
  3858 ;;		line 309 in file "mcc_generated_files/uart1.c"
  3859 ;; Parameters:    Size  Location     Type
  3860 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  3861 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;		None
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  1    wreg      void 
  3866 ;; Registers used:
  3867 ;;		wreg, status,2, status,0
  3868 ;; Tracked objects:
  3869 ;;		On entry : 3F/3D
  3870 ;;		On exit  : 3F/3D
  3871 ;;		Unchanged: 3E/0
  3872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3873 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3876 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3877 ;;Total ram usage:        3 bytes
  3878 ;; Hardware stack levels used:    1
  3879 ;; Hardware stack levels required when called:    4
  3880 ;; This function calls:
  3881 ;;		Nothing
  3882 ;; This function is called by:
  3883 ;;		_UART1_Initialize
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887                           	psect	text24
  3888  003F0A                     __ptext24:
  3889                           	opt callstack 0
  3890  003F0A                     _UART1_SetOverrunErrorHandler:
  3891                           	opt callstack 24
  3892                           
  3893                           ; BSR set to: 61
  3894                           ;mcc_generated_files/uart1.c: 310:     UART1_OverrunErrorHandler = interruptHandler;
  3895                           
  3896                           ; BSR set to: 57
  3897                           ;incstack = 0
  3898  003F0A  0060  F018  F154   	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  3899  003F10  0060  F01C  F155   	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  3900  003F16  0060  F020  F156   	movff	UART1_SetOverrunErrorHandler@interruptHandler+2,_UART1_OverrunErrorHandler+2
  3901                           
  3902                           ; BSR set to: 61
  3903  003F1C  0012               	return		;funcret
  3904  003F1E                     __end_of_UART1_SetOverrunErrorHandler:
  3905                           	opt callstack 0
  3906                           
  3907 ;; *************** function _UART1_SetFramingErrorHandler *****************
  3908 ;; Defined at:
  3909 ;;		line 305 in file "mcc_generated_files/uart1.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  3912 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;		None
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  1    wreg      void 
  3917 ;; Registers used:
  3918 ;;		wreg, status,2, status,0
  3919 ;; Tracked objects:
  3920 ;;		On entry : 3F/3D
  3921 ;;		On exit  : 3F/3D
  3922 ;;		Unchanged: 3E/0
  3923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3924 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3927 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3928 ;;Total ram usage:        3 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:    4
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		_UART1_Initialize
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text25
  3939  003F1E                     __ptext25:
  3940                           	opt callstack 0
  3941  003F1E                     _UART1_SetFramingErrorHandler:
  3942                           	opt callstack 24
  3943                           
  3944                           ; BSR set to: 61
  3945                           ;mcc_generated_files/uart1.c: 306:     UART1_FramingErrorHandler = interruptHandler;
  3946                           
  3947                           ; BSR set to: 61
  3948                           ;incstack = 0
  3949  003F1E  0060  F018  F157   	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  3950  003F24  0060  F01C  F158   	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  3951  003F2A  0060  F020  F159   	movff	UART1_SetFramingErrorHandler@interruptHandler+2,_UART1_FramingErrorHandler+2
  3952                           
  3953                           ; BSR set to: 61
  3954  003F30  0012               	return		;funcret
  3955  003F32                     __end_of_UART1_SetFramingErrorHandler:
  3956                           	opt callstack 0
  3957                           
  3958 ;; *************** function _UART1_SetErrorHandler *****************
  3959 ;; Defined at:
  3960 ;;		line 313 in file "mcc_generated_files/uart1.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  3963 ;;		 -> UART1_DefaultErrorHandler(1), 
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;		None
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  1    wreg      void 
  3968 ;; Registers used:
  3969 ;;		wreg, status,2, status,0
  3970 ;; Tracked objects:
  3971 ;;		On entry : 3F/3D
  3972 ;;		On exit  : 3F/3D
  3973 ;;		Unchanged: 3E/0
  3974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3975 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3978 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3979 ;;Total ram usage:        3 bytes
  3980 ;; Hardware stack levels used:    1
  3981 ;; Hardware stack levels required when called:    4
  3982 ;; This function calls:
  3983 ;;		Nothing
  3984 ;; This function is called by:
  3985 ;;		_UART1_Initialize
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           
  3989                           	psect	text26
  3990  003F32                     __ptext26:
  3991                           	opt callstack 0
  3992  003F32                     _UART1_SetErrorHandler:
  3993                           	opt callstack 24
  3994                           
  3995                           ; BSR set to: 61
  3996                           ;mcc_generated_files/uart1.c: 314:     UART1_ErrorHandler = interruptHandler;
  3997                           
  3998                           ; BSR set to: 61
  3999                           ;incstack = 0
  4000  003F32  0060  F018  F151   	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  4001  003F38  0060  F01C  F152   	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  4002  003F3E  0060  F020  F153   	movff	UART1_SetErrorHandler@interruptHandler+2,_UART1_ErrorHandler+2
  4003                           
  4004                           ; BSR set to: 61
  4005  003F44  0012               	return		;funcret
  4006  003F46                     __end_of_UART1_SetErrorHandler:
  4007                           	opt callstack 0
  4008                           
  4009 ;; *************** function _TMR6_Initialize *****************
  4010 ;; Defined at:
  4011 ;;		line 67 in file "mcc_generated_files/tmr6.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;		None
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;		None
  4016 ;; Return value:  Size  Location     Type
  4017 ;;                  1    wreg      void 
  4018 ;; Registers used:
  4019 ;;		wreg, status,2, status,0, cstack
  4020 ;; Tracked objects:
  4021 ;;		On entry : 3F/39
  4022 ;;		On exit  : 3F/39
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4029 ;;Total ram usage:        0 bytes
  4030 ;; Hardware stack levels used:    1
  4031 ;; Hardware stack levels required when called:    5
  4032 ;; This function calls:
  4033 ;;		_TMR6_SetInterruptHandler
  4034 ;; This function is called by:
  4035 ;;		_SYSTEM_Initialize
  4036 ;; This function uses a non-reentrant model
  4037 ;;
  4038                           
  4039                           	psect	text27
  4040  003B5A                     __ptext27:
  4041                           	opt callstack 0
  4042  003B5A                     _TMR6_Initialize:
  4043                           	opt callstack 24
  4044                           
  4045                           ; BSR set to: 57
  4046                           ;mcc_generated_files/tmr6.c: 72:  T6CLKCON = 0x01;
  4047                           
  4048                           ; BSR set to: 61
  4049                           ;incstack = 0
  4050  003B5A  0E01               	movlw	1
  4051  003B5C  6E96               	movwf	150,c	;volatile
  4052                           
  4053                           ;mcc_generated_files/tmr6.c: 75:  T6HLT = 0x00;
  4054  003B5E  0E00               	movlw	0
  4055  003B60  6E95               	movwf	149,c	;volatile
  4056                           
  4057                           ;mcc_generated_files/tmr6.c: 78:  T6RST = 0x00;
  4058  003B62  0E00               	movlw	0
  4059  003B64  6E97               	movwf	151,c	;volatile
  4060                           
  4061                           ;mcc_generated_files/tmr6.c: 81:  T6PR = 0x03;
  4062  003B66  0E03               	movlw	3
  4063  003B68  6E93               	movwf	147,c	;volatile
  4064                           
  4065                           ;mcc_generated_files/tmr6.c: 84:  T6TMR = 0x00;
  4066  003B6A  0E00               	movlw	0
  4067  003B6C  6E92               	movwf	146,c	;volatile
  4068                           
  4069                           ; BSR set to: 57
  4070                           ;mcc_generated_files/tmr6.c: 87:  PIR9bits.TMR6IF = 0;
  4071  003B6E  91A9               	bcf	169,0,b	;volatile
  4072                           
  4073                           ; BSR set to: 57
  4074                           ;mcc_generated_files/tmr6.c: 90:  PIE9bits.TMR6IE = 1;
  4075  003B70  8199               	bsf	153,0,b	;volatile
  4076                           
  4077                           ; BSR set to: 57
  4078                           ;mcc_generated_files/tmr6.c: 93:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
  4079  003B72  0E46               	movlw	low _TMR6_DefaultInterruptHandler
  4080  003B74  6E06               	movwf	TMR6_SetInterruptHandler@InterruptHandler^0,c
  4081  003B76  0E39               	movlw	high _TMR6_DefaultInterruptHandler
  4082  003B78  6E07               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)^0,c
  4083  003B7A  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
  4084  003B7C  6E08               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)^0,c
  4085  003B7E  ECA3  F01F         	call	_TMR6_SetInterruptHandler	;wreg free
  4086                           
  4087                           ; BSR set to: 57
  4088                           ;mcc_generated_files/tmr6.c: 96:  T6CON = 0xFF;
  4089  003B82  6894               	setf	148,c	;volatile
  4090                           
  4091                           ; BSR set to: 57
  4092  003B84  0012               	return		;funcret
  4093  003B86                     __end_of_TMR6_Initialize:
  4094                           	opt callstack 0
  4095                           
  4096 ;; *************** function _TMR6_SetInterruptHandler *****************
  4097 ;; Defined at:
  4098 ;;		line 179 in file "mcc_generated_files/tmr6.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  4101 ;;		 -> TMR6_DefaultInterruptHandler(1), 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;		None
  4104 ;; Return value:  Size  Location     Type
  4105 ;;                  1    wreg      void 
  4106 ;; Registers used:
  4107 ;;		wreg, status,2, status,0
  4108 ;; Tracked objects:
  4109 ;;		On entry : 3F/39
  4110 ;;		On exit  : 3F/39
  4111 ;;		Unchanged: 3E/0
  4112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4113 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4116 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4117 ;;Total ram usage:        3 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; Hardware stack levels required when called:    4
  4120 ;; This function calls:
  4121 ;;		Nothing
  4122 ;; This function is called by:
  4123 ;;		_TMR6_Initialize
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           	psect	text28
  4128  003F46                     __ptext28:
  4129                           	opt callstack 0
  4130  003F46                     _TMR6_SetInterruptHandler:
  4131                           	opt callstack 24
  4132                           
  4133                           ; BSR set to: 57
  4134                           ;mcc_generated_files/tmr6.c: 179: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 180: {;mcc_generated_files/tmr6.c: 181:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
  4135                           
  4136                           ; BSR set to: 57
  4137                           ;incstack = 0
  4138  003F46  0060  F018  F145   	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
  4139  003F4C  0060  F01C  F146   	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
  4140  003F52  0060  F020  F147   	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
  4141                           
  4142                           ; BSR set to: 57
  4143  003F58  0012               	return		;funcret
  4144  003F5A                     __end_of_TMR6_SetInterruptHandler:
  4145                           	opt callstack 0
  4146                           
  4147 ;; *************** function _TMR5_Initialize *****************
  4148 ;; Defined at:
  4149 ;;		line 66 in file "mcc_generated_files/tmr5.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;		None
  4152 ;; Auto vars:     Size  Location     Type
  4153 ;;		None
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  1    wreg      void 
  4156 ;; Registers used:
  4157 ;;		wreg, status,2, status,0, cstack
  4158 ;; Tracked objects:
  4159 ;;		On entry : 3F/3F
  4160 ;;		On exit  : 3F/39
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4165 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4166 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4167 ;;Total ram usage:        2 bytes
  4168 ;; Hardware stack levels used:    1
  4169 ;; Hardware stack levels required when called:    5
  4170 ;; This function calls:
  4171 ;;		_TMR5_SetInterruptHandler
  4172 ;; This function is called by:
  4173 ;;		_SYSTEM_Initialize
  4174 ;; This function uses a non-reentrant model
  4175 ;;
  4176                           
  4177                           	psect	text29
  4178  003772                     __ptext29:
  4179                           	opt callstack 0
  4180  003772                     _TMR5_Initialize:
  4181                           	opt callstack 24
  4182                           
  4183                           ; BSR set to: 63
  4184                           ;mcc_generated_files/tmr5.c: 71:     T5GCON = 0x00;
  4185                           
  4186                           ; BSR set to: 57
  4187                           ;incstack = 0
  4188  003772  0E00               	movlw	0
  4189  003774  6E9B               	movwf	155,c	;volatile
  4190                           
  4191                           ;mcc_generated_files/tmr5.c: 74:     T5GATE = 0x00;
  4192  003776  0E00               	movlw	0
  4193  003778  6E9C               	movwf	156,c	;volatile
  4194                           
  4195                           ;mcc_generated_files/tmr5.c: 77:     T5CLK = 0x01;
  4196  00377A  0E01               	movlw	1
  4197  00377C  6E9D               	movwf	157,c	;volatile
  4198                           
  4199                           ;mcc_generated_files/tmr5.c: 80:     TMR5H = 0x63;
  4200  00377E  0E63               	movlw	99
  4201  003780  6E99               	movwf	153,c	;volatile
  4202                           
  4203                           ;mcc_generated_files/tmr5.c: 83:     TMR5L = 0xC0;
  4204  003782  0EC0               	movlw	192
  4205  003784  6E98               	movwf	152,c	;volatile
  4206                           
  4207                           ; BSR set to: 63
  4208                           ;mcc_generated_files/tmr5.c: 86:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  4209  003786  5098               	movf	152,w,c	;volatile
  4210  003788  006F FE64  F009    	movff	16281,??_TMR5_Initialize	;volatile
  4211  00378E  6A0A               	clrf	(??_TMR5_Initialize+1)^0,c
  4212  003790  0060  F024  F00A   	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  4213  003796  6A09               	clrf	??_TMR5_Initialize^0,c
  4214  003798  1009               	iorwf	??_TMR5_Initialize^0,w,c
  4215  00379A  0101               	movlb	1	; () banked
  4216  00379C  6F6E               	movwf	_timer5ReloadVal& (0+255),b	;volatile
  4217  00379E  500A               	movf	(??_TMR5_Initialize+1)^0,w,c
  4218  0037A0  6F6F               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
  4219                           
  4220                           ; BSR set to: 1
  4221                           ;mcc_generated_files/tmr5.c: 89:     PIR8bits.TMR5IF = 0;
  4222  0037A2  0139               	movlb	57	; () banked
  4223  0037A4  9DA8               	bcf	168,6,b	;volatile
  4224                           
  4225                           ; BSR set to: 57
  4226                           ;mcc_generated_files/tmr5.c: 92:     PIE8bits.TMR5IE = 1;
  4227  0037A6  8D98               	bsf	152,6,b	;volatile
  4228                           
  4229                           ; BSR set to: 57
  4230                           ;mcc_generated_files/tmr5.c: 95:     TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandl
      +                          er);
  4231  0037A8  0E1E               	movlw	low _TMR5_DefaultInterruptHandler
  4232  0037AA  6E06               	movwf	TMR5_SetInterruptHandler@InterruptHandler^0,c
  4233  0037AC  0E3E               	movlw	high _TMR5_DefaultInterruptHandler
  4234  0037AE  6E07               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)^0,c
  4235  0037B0  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
  4236  0037B2  6E08               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)^0,c
  4237  0037B4  ECAD  F01F         	call	_TMR5_SetInterruptHandler	;wreg free
  4238                           
  4239                           ; BSR set to: 57
  4240                           ;mcc_generated_files/tmr5.c: 98:     T5CON = 0x31;
  4241  0037B8  0E31               	movlw	49
  4242  0037BA  6E9A               	movwf	154,c	;volatile
  4243                           
  4244                           ; BSR set to: 57
  4245  0037BC  0012               	return		;funcret
  4246  0037BE                     __end_of_TMR5_Initialize:
  4247                           	opt callstack 0
  4248                           
  4249 ;; *************** function _TMR5_SetInterruptHandler *****************
  4250 ;; Defined at:
  4251 ;;		line 194 in file "mcc_generated_files/tmr5.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  4254 ;;		 -> TMR5_DefaultInterruptHandler(1), 
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;		None
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  1    wreg      void 
  4259 ;; Registers used:
  4260 ;;		wreg, status,2, status,0
  4261 ;; Tracked objects:
  4262 ;;		On entry : 3F/39
  4263 ;;		On exit  : 3F/39
  4264 ;;		Unchanged: 3E/0
  4265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4266 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4269 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4270 ;;Total ram usage:        3 bytes
  4271 ;; Hardware stack levels used:    1
  4272 ;; Hardware stack levels required when called:    4
  4273 ;; This function calls:
  4274 ;;		Nothing
  4275 ;; This function is called by:
  4276 ;;		_TMR5_Initialize
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text30
  4281  003F5A                     __ptext30:
  4282                           	opt callstack 0
  4283  003F5A                     _TMR5_SetInterruptHandler:
  4284                           	opt callstack 24
  4285                           
  4286                           ; BSR set to: 57
  4287                           ;mcc_generated_files/tmr5.c: 195:     TMR5_InterruptHandler = InterruptHandler;
  4288                           
  4289                           ; BSR set to: 57
  4290                           ;incstack = 0
  4291  003F5A  0060  F018  F142   	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
  4292  003F60  0060  F01C  F143   	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
  4293  003F66  0060  F020  F144   	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
  4294                           
  4295                           ; BSR set to: 57
  4296  003F6C  0012               	return		;funcret
  4297  003F6E                     __end_of_TMR5_SetInterruptHandler:
  4298                           	opt callstack 0
  4299                           
  4300 ;; *************** function _TMR2_Initialize *****************
  4301 ;; Defined at:
  4302 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;		None
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;		None
  4307 ;; Return value:  Size  Location     Type
  4308 ;;                  1    wreg      void 
  4309 ;; Registers used:
  4310 ;;		wreg, status,2
  4311 ;; Tracked objects:
  4312 ;;		On entry : 3F/3E
  4313 ;;		On exit  : 3F/39
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4320 ;;Total ram usage:        0 bytes
  4321 ;; Hardware stack levels used:    1
  4322 ;; Hardware stack levels required when called:    4
  4323 ;; This function calls:
  4324 ;;		Nothing
  4325 ;; This function is called by:
  4326 ;;		_SYSTEM_Initialize
  4327 ;; This function uses a non-reentrant model
  4328 ;;
  4329                           
  4330                           	psect	text31
  4331  003DAE                     __ptext31:
  4332                           	opt callstack 0
  4333  003DAE                     _TMR2_Initialize:
  4334                           	opt callstack 25
  4335                           
  4336                           ; BSR set to: 62
  4337                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
  4338                           
  4339                           ; BSR set to: 57
  4340                           ;incstack = 0
  4341  003DAE  0E01               	movlw	1
  4342  003DB0  6EAE               	movwf	174,c	;volatile
  4343                           
  4344                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  4345  003DB2  0E00               	movlw	0
  4346  003DB4  6EAD               	movwf	173,c	;volatile
  4347                           
  4348                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  4349  003DB6  0E00               	movlw	0
  4350  003DB8  6EAF               	movwf	175,c	;volatile
  4351                           
  4352                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
  4353  003DBA  0E63               	movlw	99
  4354  003DBC  6EAB               	movwf	171,c	;volatile
  4355                           
  4356                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  4357  003DBE  0E00               	movlw	0
  4358  003DC0  6EAA               	movwf	170,c	;volatile
  4359                           
  4360                           ; BSR set to: 62
  4361                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  4362  003DC2  0139               	movlb	57	; () banked
  4363  003DC4  95A4               	bcf	164,2,b	;volatile
  4364                           
  4365                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
  4366  003DC6  0EC0               	movlw	192
  4367  003DC8  6EAC               	movwf	172,c	;volatile
  4368                           
  4369                           ; BSR set to: 57
  4370  003DCA  0012               	return		;funcret
  4371  003DCC                     __end_of_TMR2_Initialize:
  4372                           	opt callstack 0
  4373                           
  4374 ;; *************** function _SPI1_Initialize *****************
  4375 ;; Defined at:
  4376 ;;		line 64 in file "mcc_generated_files/spi1.c"
  4377 ;; Parameters:    Size  Location     Type
  4378 ;;		None
  4379 ;; Auto vars:     Size  Location     Type
  4380 ;;		None
  4381 ;; Return value:  Size  Location     Type
  4382 ;;                  1    wreg      void 
  4383 ;; Registers used:
  4384 ;;		wreg, status,2
  4385 ;; Tracked objects:
  4386 ;;		On entry : 3F/39
  4387 ;;		On exit  : 3F/3D
  4388 ;;		Unchanged: 0/0
  4389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4394 ;;Total ram usage:        0 bytes
  4395 ;; Hardware stack levels used:    1
  4396 ;; Hardware stack levels required when called:    4
  4397 ;; This function calls:
  4398 ;;		Nothing
  4399 ;; This function is called by:
  4400 ;;		_SYSTEM_Initialize
  4401 ;; This function uses a non-reentrant model
  4402 ;;
  4403                           
  4404                           	psect	text32
  4405  003E38                     __ptext32:
  4406                           	opt callstack 0
  4407  003E38                     _SPI1_Initialize:
  4408                           	opt callstack 25
  4409                           
  4410                           ; BSR set to: 57
  4411                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
  4412                           
  4413                           ; BSR set to: 57
  4414                           ;incstack = 0
  4415  003E38  0E40               	movlw	64
  4416  003E3A  013D               	movlb	61	; () banked
  4417  003E3C  6F15               	movwf	21,b	;volatile
  4418                           
  4419                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
  4420  003E3E  0E03               	movlw	3
  4421  003E40  6F16               	movwf	22,b	;volatile
  4422                           
  4423                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x0F;
  4424  003E42  0E0F               	movlw	15
  4425  003E44  6F19               	movwf	25,b	;volatile
  4426                           
  4427                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
  4428  003E46  0E00               	movlw	0
  4429  003E48  6F1C               	movwf	28,b	;volatile
  4430                           
  4431                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x82;
  4432  003E4A  0E82               	movlw	130
  4433  003E4C  6F14               	movwf	20,b	;volatile
  4434                           
  4435                           ; BSR set to: 61
  4436  003E4E  0012               	return		;funcret
  4437  003E50                     __end_of_SPI1_Initialize:
  4438                           	opt callstack 0
  4439                           
  4440 ;; *************** function _PWM8_Initialize *****************
  4441 ;; Defined at:
  4442 ;;		line 58 in file "mcc_generated_files/pwm8.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;		None
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;		None
  4447 ;; Return value:  Size  Location     Type
  4448 ;;                  1    wreg      void 
  4449 ;; Registers used:
  4450 ;;		wreg, status,2
  4451 ;; Tracked objects:
  4452 ;;		On entry : 3F/39
  4453 ;;		On exit  : 3F/3F
  4454 ;;		Unchanged: 0/0
  4455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4460 ;;Total ram usage:        0 bytes
  4461 ;; Hardware stack levels used:    1
  4462 ;; Hardware stack levels required when called:    4
  4463 ;; This function calls:
  4464 ;;		Nothing
  4465 ;; This function is called by:
  4466 ;;		_SYSTEM_Initialize
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469                           
  4470                           	psect	text33
  4471  003E50                     __ptext33:
  4472                           	opt callstack 0
  4473  003E50                     _PWM8_Initialize:
  4474                           	opt callstack 25
  4475                           
  4476                           ; BSR set to: 57
  4477                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
  4478                           
  4479                           ; BSR set to: 61
  4480                           ;incstack = 0
  4481  003E50  0E80               	movlw	128
  4482  003E52  6E62               	movwf	98,c	;volatile
  4483                           
  4484                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x31;
  4485  003E54  0E31               	movlw	49
  4486  003E56  6E61               	movwf	97,c	;volatile
  4487                           
  4488                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0xC0;
  4489  003E58  0EC0               	movlw	192
  4490  003E5A  6E60               	movwf	96,c	;volatile
  4491                           
  4492                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
  4493  003E5C  013F               	movlb	63	; () banked
  4494  003E5E  515F               	movf	95,w,b	;volatile
  4495  003E60  0B3F               	andlw	-193
  4496  003E62  0940               	iorlw	64
  4497  003E64  6F5F               	movwf	95,b	;volatile
  4498                           
  4499                           ; BSR set to: 63
  4500  003E66  0012               	return		;funcret
  4501  003E68                     __end_of_PWM8_Initialize:
  4502                           	opt callstack 0
  4503                           
  4504 ;; *************** function _PMD_Initialize *****************
  4505 ;; Defined at:
  4506 ;;		line 84 in file "mcc_generated_files/mcc.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;		None
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;		None
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  1    wreg      void 
  4513 ;; Registers used:
  4514 ;;		wreg, status,2
  4515 ;; Tracked objects:
  4516 ;;		On entry : 3F/39
  4517 ;;		On exit  : 3F/39
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4524 ;;Total ram usage:        0 bytes
  4525 ;; Hardware stack levels used:    1
  4526 ;; Hardware stack levels required when called:    4
  4527 ;; This function calls:
  4528 ;;		Nothing
  4529 ;; This function is called by:
  4530 ;;		_SYSTEM_Initialize
  4531 ;; This function uses a non-reentrant model
  4532 ;;
  4533                           
  4534                           	psect	text34
  4535  003D6A                     __ptext34:
  4536                           	opt callstack 0
  4537  003D6A                     _PMD_Initialize:
  4538                           	opt callstack 25
  4539                           
  4540                           ; BSR set to: 57
  4541                           ;mcc_generated_files/mcc.c: 87:     PMD0 = 0x00;
  4542                           
  4543                           ; BSR set to: 63
  4544                           ;incstack = 0
  4545  003D6A  0E00               	movlw	0
  4546  003D6C  6FC0               	movwf	192,b	;volatile
  4547                           
  4548                           ;mcc_generated_files/mcc.c: 89:     PMD1 = 0x00;
  4549  003D6E  0E00               	movlw	0
  4550  003D70  6FC1               	movwf	193,b	;volatile
  4551                           
  4552                           ;mcc_generated_files/mcc.c: 91:     PMD2 = 0x00;
  4553  003D72  0E00               	movlw	0
  4554  003D74  6FC2               	movwf	194,b	;volatile
  4555                           
  4556                           ;mcc_generated_files/mcc.c: 93:     PMD3 = 0x00;
  4557  003D76  0E00               	movlw	0
  4558  003D78  6FC3               	movwf	195,b	;volatile
  4559                           
  4560                           ;mcc_generated_files/mcc.c: 95:     PMD4 = 0x00;
  4561  003D7A  0E00               	movlw	0
  4562  003D7C  6FC4               	movwf	196,b	;volatile
  4563                           
  4564                           ;mcc_generated_files/mcc.c: 97:     PMD5 = 0x00;
  4565  003D7E  0E00               	movlw	0
  4566  003D80  6FC5               	movwf	197,b	;volatile
  4567                           
  4568                           ;mcc_generated_files/mcc.c: 99:     PMD6 = 0x00;
  4569  003D82  0E00               	movlw	0
  4570  003D84  6FC6               	movwf	198,b	;volatile
  4571                           
  4572                           ;mcc_generated_files/mcc.c: 101:     PMD7 = 0x00;
  4573  003D86  0E00               	movlw	0
  4574  003D88  6FC7               	movwf	199,b	;volatile
  4575                           
  4576                           ; BSR set to: 57
  4577  003D8A  0012               	return		;funcret
  4578  003D8C                     __end_of_PMD_Initialize:
  4579                           	opt callstack 0
  4580                           
  4581 ;; *************** function _PIN_MANAGER_Initialize *****************
  4582 ;; Defined at:
  4583 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;		None
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;		None
  4588 ;; Return value:  Size  Location     Type
  4589 ;;                  1    wreg      void 
  4590 ;; Registers used:
  4591 ;;		wreg, status,2
  4592 ;; Tracked objects:
  4593 ;;		On entry : 3F/39
  4594 ;;		On exit  : 3F/3A
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4601 ;;Total ram usage:        0 bytes
  4602 ;; Hardware stack levels used:    1
  4603 ;; Hardware stack levels required when called:    4
  4604 ;; This function calls:
  4605 ;;		Nothing
  4606 ;; This function is called by:
  4607 ;;		_SYSTEM_Initialize
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           	psect	text35
  4612  003206                     __ptext35:
  4613                           	opt callstack 0
  4614  003206                     _PIN_MANAGER_Initialize:
  4615                           	opt callstack 25
  4616                           
  4617                           ; BSR set to: 57
  4618                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x01;
  4619                           
  4620                           ; BSR set to: 57
  4621                           ;incstack = 0
  4622  003206  0E01               	movlw	1
  4623  003208  6EBE               	movwf	190,c	;volatile
  4624                           
  4625                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x02;
  4626  00320A  0E02               	movlw	2
  4627  00320C  6EBD               	movwf	189,c	;volatile
  4628                           
  4629                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  4630  00320E  0E00               	movlw	0
  4631  003210  6EBA               	movwf	186,c	;volatile
  4632                           
  4633                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  4634  003212  0E00               	movlw	0
  4635  003214  6EBB               	movwf	187,c	;volatile
  4636                           
  4637                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x06;
  4638  003216  0E06               	movlw	6
  4639  003218  6EBC               	movwf	188,c	;volatile
  4640                           
  4641                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x06;
  4642  00321A  0E06               	movlw	6
  4643  00321C  6EC6               	movwf	198,c	;volatile
  4644                           
  4645                           ; BSR set to: 57
  4646                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  4647  00321E  68C2               	setf	194,c	;volatile
  4648                           
  4649                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  4650  003220  0EBF               	movlw	191
  4651  003222  6EC3               	movwf	195,c	;volatile
  4652                           
  4653                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x91;
  4654  003224  0E91               	movlw	145
  4655  003226  6EC4               	movwf	196,c	;volatile
  4656                           
  4657                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFD;
  4658  003228  0EFD               	movlw	253
  4659  00322A  6EC5               	movwf	197,c	;volatile
  4660                           
  4661                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFD;
  4662  00322C  0EFD               	movlw	253
  4663  00322E  013A               	movlb	58	; () banked
  4664  003230  6F70               	movwf	112,b	;volatile
  4665                           
  4666                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
  4667  003232  0E00               	movlw	0
  4668  003234  6F60               	movwf	96,b	;volatile
  4669                           
  4670                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3F;
  4671  003236  0E3F               	movlw	63
  4672  003238  6F50               	movwf	80,b	;volatile
  4673                           
  4674                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x06;
  4675  00323A  0E06               	movlw	6
  4676  00323C  6F80               	movwf	128,b	;volatile
  4677                           
  4678                           ; BSR set to: 58
  4679                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  4680  00323E  6940               	setf	64,b	;volatile
  4681                           
  4682                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  4683  003240  0E00               	movlw	0
  4684  003242  6F71               	movwf	113,b	;volatile
  4685                           
  4686                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  4687  003244  0E00               	movlw	0
  4688  003246  6F81               	movwf	129,b	;volatile
  4689                           
  4690                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  4691  003248  0E00               	movlw	0
  4692  00324A  6F51               	movwf	81,b	;volatile
  4693                           
  4694                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  4695  00324C  0E00               	movlw	0
  4696  00324E  6F41               	movwf	65,b	;volatile
  4697                           
  4698                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  4699  003250  0E00               	movlw	0
  4700  003252  6F61               	movwf	97,b	;volatile
  4701                           
  4702                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  4703  003254  0E00               	movlw	0
  4704  003256  6F5A               	movwf	90,b	;volatile
  4705                           
  4706                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  4707  003258  0E00               	movlw	0
  4708  00325A  6F5B               	movwf	91,b	;volatile
  4709                           
  4710                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  4711  00325C  0E00               	movlw	0
  4712  00325E  6F6A               	movwf	106,b	;volatile
  4713                           
  4714                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  4715  003260  0E00               	movlw	0
  4716  003262  6F6B               	movwf	107,b	;volatile
  4717                           
  4718                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  4719  003264  0E00               	movlw	0
  4720  003266  6F7A               	movwf	122,b	;volatile
  4721                           
  4722                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  4723  003268  0E00               	movlw	0
  4724  00326A  6F7B               	movwf	123,b	;volatile
  4725                           
  4726                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  4727  00326C  0E00               	movlw	0
  4728  00326E  6F82               	movwf	130,b	;volatile
  4729                           
  4730                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  4731  003270  0E00               	movlw	0
  4732  003272  6F42               	movwf	66,b	;volatile
  4733                           
  4734                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
  4735  003274  0E00               	movlw	0
  4736  003276  6F52               	movwf	82,b	;volatile
  4737                           
  4738                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
  4739  003278  0E00               	movlw	0
  4740  00327A  6F62               	movwf	98,b	;volatile
  4741                           
  4742                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  4743  00327C  0E00               	movlw	0
  4744  00327E  6F72               	movwf	114,b	;volatile
  4745                           
  4746                           ; BSR set to: 58
  4747                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  4748  003280  6943               	setf	67,b	;volatile
  4749                           
  4750                           ; BSR set to: 58
  4751                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  4752  003282  6953               	setf	83,b	;volatile
  4753                           
  4754                           ; BSR set to: 58
  4755                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  4756  003284  6963               	setf	99,b	;volatile
  4757                           
  4758                           ; BSR set to: 58
  4759                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  4760  003286  6973               	setf	115,b	;volatile
  4761                           
  4762                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  4763  003288  0E07               	movlw	7
  4764  00328A  6F83               	movwf	131,b	;volatile
  4765                           
  4766                           ;mcc_generated_files/pin_manager.c: 128:     U2RXPPS = 0x0F;
  4767  00328C  0E0F               	movlw	15
  4768  00328E  6FE8               	movwf	232,b	;volatile
  4769                           
  4770                           ;mcc_generated_files/pin_manager.c: 129:     SPI1SCKPPS = 0x13;
  4771  003290  0E13               	movlw	19
  4772  003292  6FDE               	movwf	222,b	;volatile
  4773                           
  4774                           ;mcc_generated_files/pin_manager.c: 130:     RB6PPS = 0x16;
  4775  003294  0E16               	movlw	22
  4776  003296  6F0E               	movwf	14,b	;volatile
  4777                           
  4778                           ;mcc_generated_files/pin_manager.c: 131:     RC3PPS = 0x1E;
  4779  003298  0E1E               	movlw	30
  4780  00329A  6F13               	movwf	19,b	;volatile
  4781                           
  4782                           ;mcc_generated_files/pin_manager.c: 132:     RD1PPS = 0x10;
  4783  00329C  0E10               	movlw	16
  4784  00329E  6F19               	movwf	25,b	;volatile
  4785                           
  4786                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
  4787  0032A0  0E1F               	movlw	31
  4788  0032A2  6F15               	movwf	21,b	;volatile
  4789                           
  4790                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
  4791  0032A4  0E13               	movlw	19
  4792  0032A6  6F16               	movwf	22,b	;volatile
  4793                           
  4794                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
  4795  0032A8  0E17               	movlw	23
  4796  0032AA  6FE5               	movwf	229,b	;volatile
  4797                           
  4798                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
  4799  0032AC  0E14               	movlw	20
  4800  0032AE  6FDF               	movwf	223,b	;volatile
  4801                           
  4802                           ; BSR set to: 58
  4803  0032B0  0012               	return		;funcret
  4804  0032B2                     __end_of_PIN_MANAGER_Initialize:
  4805                           	opt callstack 0
  4806                           
  4807 ;; *************** function _OSCILLATOR_Initialize *****************
  4808 ;; Defined at:
  4809 ;;		line 66 in file "mcc_generated_files/mcc.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;		None
  4812 ;; Auto vars:     Size  Location     Type
  4813 ;;		None
  4814 ;; Return value:  Size  Location     Type
  4815 ;;                  1    wreg      void 
  4816 ;; Registers used:
  4817 ;;		wreg, status,2
  4818 ;; Tracked objects:
  4819 ;;		On entry : 3F/3A
  4820 ;;		On exit  : 3F/39
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4827 ;;Total ram usage:        0 bytes
  4828 ;; Hardware stack levels used:    1
  4829 ;; Hardware stack levels required when called:    4
  4830 ;; This function calls:
  4831 ;;		Nothing
  4832 ;; This function is called by:
  4833 ;;		_SYSTEM_Initialize
  4834 ;; This function uses a non-reentrant model
  4835 ;;
  4836                           
  4837                           	psect	text36
  4838  003DCC                     __ptext36:
  4839                           	opt callstack 0
  4840  003DCC                     _OSCILLATOR_Initialize:
  4841                           	opt callstack 25
  4842                           
  4843                           ; BSR set to: 58
  4844                           ;mcc_generated_files/mcc.c: 69:     OSCCON1 = 0x20;
  4845                           
  4846                           ; BSR set to: 58
  4847                           ;incstack = 0
  4848  003DCC  0E20               	movlw	32
  4849  003DCE  0139               	movlb	57	; () banked
  4850  003DD0  6FD9               	movwf	217,b	;volatile
  4851                           
  4852                           ;mcc_generated_files/mcc.c: 71:     OSCCON3 = 0x00;
  4853  003DD2  0E00               	movlw	0
  4854  003DD4  6FDB               	movwf	219,b	;volatile
  4855                           
  4856                           ;mcc_generated_files/mcc.c: 73:     OSCEN = 0x00;
  4857  003DD6  0E00               	movlw	0
  4858  003DD8  6FDD               	movwf	221,b	;volatile
  4859                           
  4860                           ;mcc_generated_files/mcc.c: 75:     OSCFRQ = 0x08;
  4861  003DDA  0E08               	movlw	8
  4862  003DDC  6FDF               	movwf	223,b	;volatile
  4863                           
  4864                           ;mcc_generated_files/mcc.c: 77:     OSCTUNE = 0x00;
  4865  003DDE  0E00               	movlw	0
  4866  003DE0  6FDE               	movwf	222,b	;volatile
  4867  003DE2                     l66:
  4868                           
  4869                           ; BSR set to: 57
  4870                           ;mcc_generated_files/mcc.c: 79:     while(PLLR == 0)
  4871  003DE2  B1DC               	btfsc	220,0,b	;volatile
  4872  003DE4  0012               	return	
  4873  003DE6  D7FD               	goto	l66
  4874  003DE8                     __end_of_OSCILLATOR_Initialize:
  4875                           	opt callstack 0
  4876                           
  4877 ;; *************** function _INTERRUPT_Initialize *****************
  4878 ;; Defined at:
  4879 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4880 ;; Parameters:    Size  Location     Type
  4881 ;;		None
  4882 ;; Auto vars:     Size  Location     Type
  4883 ;;  state           1    5[COMRAM] _Bool 
  4884 ;; Return value:  Size  Location     Type
  4885 ;;                  1    wreg      void 
  4886 ;; Registers used:
  4887 ;;		wreg, status,2
  4888 ;; Tracked objects:
  4889 ;;		On entry : 3F/1
  4890 ;;		On exit  : 3F/39
  4891 ;;		Unchanged: 0/0
  4892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4894 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4896 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4897 ;;Total ram usage:        1 bytes
  4898 ;; Hardware stack levels used:    1
  4899 ;; Hardware stack levels required when called:    4
  4900 ;; This function calls:
  4901 ;;		Nothing
  4902 ;; This function is called by:
  4903 ;;		_SYSTEM_Initialize
  4904 ;; This function uses a non-reentrant model
  4905 ;;
  4906                           
  4907                           	psect	text37
  4908  0037BE                     __ptext37:
  4909                           	opt callstack 0
  4910  0037BE                     _INTERRUPT_Initialize:
  4911                           	opt callstack 25
  4912                           
  4913                           ; BSR set to: 1
  4914                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
  4915                           
  4916                           ; BSR set to: 57
  4917                           ;incstack = 0
  4918  0037BE  8AD2               	bsf	210,5,c	;volatile
  4919                           
  4920                           ; BSR set to: 1
  4921                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
  4922  0037C0  0E00               	movlw	0
  4923  0037C2  BED2               	btfsc	16338,7,c	;volatile
  4924  0037C4  0E01               	movlw	1
  4925  0037C6  6E06               	movwf	INTERRUPT_Initialize@state^0,c
  4926                           
  4927                           ; BSR set to: 1
  4928                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
  4929  0037C8  9ED2               	bcf	16338,7,c	;volatile
  4930                           
  4931                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
  4932  0037CA  0E55               	movlw	85
  4933  0037CC  6ED4               	movwf	212,c	;volatile
  4934                           
  4935                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
  4936  0037CE  0EAA               	movlw	170
  4937  0037D0  6ED4               	movwf	212,c	;volatile
  4938                           
  4939                           ; BSR set to: 1
  4940                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
  4941  0037D2  90D4               	bcf	212,0,c	;volatile
  4942                           
  4943                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
  4944  0037D4  0E00               	movlw	0
  4945  0037D6  0138               	movlb	56	; () banked
  4946  0037D8  6F9F               	movwf	159,b	;volatile
  4947                           
  4948                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
  4949  0037DA  0E00               	movlw	0
  4950  0037DC  6F9E               	movwf	158,b	;volatile
  4951                           
  4952                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
  4953  0037DE  0E08               	movlw	8
  4954  0037E0  6F9D               	movwf	157,b	;volatile
  4955                           
  4956                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
  4957  0037E2  0E55               	movlw	85
  4958  0037E4  6ED4               	movwf	212,c	;volatile
  4959                           
  4960                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
  4961  0037E6  0EAA               	movlw	170
  4962  0037E8  6ED4               	movwf	212,c	;volatile
  4963                           
  4964                           ; BSR set to: 56
  4965                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
  4966  0037EA  80D4               	bsf	212,0,c	;volatile
  4967                           
  4968                           ; BSR set to: 56
  4969                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
  4970  0037EC  B006               	btfsc	INTERRUPT_Initialize@state^0,0,c
  4971  0037EE  D002               	bra	u3915
  4972  0037F0  9ED2               	bcf	16338,7,c	;volatile
  4973  0037F2  D001               	bra	u3916
  4974  0037F4                     u3915:
  4975  0037F4  8ED2               	bsf	16338,7,c	;volatile
  4976  0037F6                     u3916:
  4977                           
  4978                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR6bits.U2TXIP = 1;
  4979  0037F6  0139               	movlb	57	; () banked
  4980  0037F8  8786               	bsf	134,3,b	;volatile
  4981                           
  4982                           ; BSR set to: 57
  4983                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR6bits.U2RXIP = 1;
  4984  0037FA  8586               	bsf	134,2,b	;volatile
  4985                           
  4986                           ; BSR set to: 57
  4987                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR3bits.U1TXIP = 1;
  4988  0037FC  8983               	bsf	131,4,b	;volatile
  4989                           
  4990                           ; BSR set to: 57
  4991                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR3bits.U1RXIP = 1;
  4992  0037FE  8783               	bsf	131,3,b	;volatile
  4993                           
  4994                           ; BSR set to: 57
  4995                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR9bits.TMR6IP = 1;
  4996  003800  8189               	bsf	137,0,b	;volatile
  4997                           
  4998                           ; BSR set to: 57
  4999                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR8bits.TMR5IP = 1;
  5000  003802  8D88               	bsf	136,6,b	;volatile
  5001                           
  5002                           ; BSR set to: 57
  5003  003804  0012               	return		;funcret
  5004  003806                     __end_of_INTERRUPT_Initialize:
  5005                           	opt callstack 0
  5006                           
  5007 ;; *************** function _ADCC_Initialize *****************
  5008 ;; Defined at:
  5009 ;;		line 62 in file "mcc_generated_files/adcc.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;		None
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;		None
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  1    wreg      void 
  5016 ;; Registers used:
  5017 ;;		wreg, status,2
  5018 ;; Tracked objects:
  5019 ;;		On entry : 3F/39
  5020 ;;		On exit  : 3F/3E
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5027 ;;Total ram usage:        0 bytes
  5028 ;; Hardware stack levels used:    1
  5029 ;; Hardware stack levels required when called:    4
  5030 ;; This function calls:
  5031 ;;		Nothing
  5032 ;; This function is called by:
  5033 ;;		_SYSTEM_Initialize
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037                           	psect	text38
  5038  00366A                     __ptext38:
  5039                           	opt callstack 0
  5040  00366A                     _ADCC_Initialize:
  5041                           	opt callstack 25
  5042                           
  5043                           ; BSR set to: 57
  5044                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  5045                           
  5046                           ; BSR set to: 57
  5047                           ;incstack = 0
  5048  00366A  0E00               	movlw	0
  5049  00366C  013E               	movlb	62	; () banked
  5050  00366E  6FDE               	movwf	222,b	;volatile
  5051                           
  5052                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  5053  003670  0E00               	movlw	0
  5054  003672  6FDF               	movwf	223,b	;volatile
  5055                           
  5056                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  5057  003674  0E00               	movlw	0
  5058  003676  6FE0               	movwf	224,b	;volatile
  5059                           
  5060                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  5061  003678  0E00               	movlw	0
  5062  00367A  6FE1               	movwf	225,b	;volatile
  5063                           
  5064                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  5065  00367C  0E00               	movlw	0
  5066  00367E  6FE4               	movwf	228,b	;volatile
  5067                           
  5068                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  5069  003680  0E00               	movlw	0
  5070  003682  6FE5               	movwf	229,b	;volatile
  5071                           
  5072                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
  5073  003684  0E00               	movlw	0
  5074  003686  6FEA               	movwf	234,b	;volatile
  5075                           
  5076                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
  5077  003688  0E00               	movlw	0
  5078  00368A  6FEC               	movwf	236,b	;volatile
  5079                           
  5080                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  5081  00368C  0E00               	movlw	0
  5082  00368E  6FF1               	movwf	241,b	;volatile
  5083                           
  5084                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x00;
  5085  003690  0E00               	movlw	0
  5086  003692  6FF3               	movwf	243,b	;volatile
  5087                           
  5088                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x00;
  5089  003694  0E00               	movlw	0
  5090  003696  6FF4               	movwf	244,b	;volatile
  5091                           
  5092                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
  5093  003698  0E00               	movlw	0
  5094  00369A  6FF5               	movwf	245,b	;volatile
  5095                           
  5096                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
  5097  00369C  0E00               	movlw	0
  5098  00369E  6FF6               	movwf	246,b	;volatile
  5099                           
  5100                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
  5101  0036A0  0E00               	movlw	0
  5102  0036A2  6FF7               	movwf	247,b	;volatile
  5103                           
  5104                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
  5105  0036A4  0E00               	movlw	0
  5106  0036A6  6FF9               	movwf	249,b	;volatile
  5107                           
  5108                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x02;
  5109  0036A8  0E02               	movlw	2
  5110  0036AA  6FFA               	movwf	250,b	;volatile
  5111                           
  5112                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x20;
  5113  0036AC  0E20               	movlw	32
  5114  0036AE  6FFB               	movwf	251,b	;volatile
  5115                           
  5116                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
  5117  0036B0  0E00               	movlw	0
  5118  0036B2  6FFC               	movwf	252,b	;volatile
  5119                           
  5120                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
  5121  0036B4  0E00               	movlw	0
  5122  0036B6  6FFD               	movwf	253,b	;volatile
  5123                           
  5124                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
  5125  0036B8  0E00               	movlw	0
  5126  0036BA  6FFE               	movwf	254,b	;volatile
  5127                           
  5128                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x3F;
  5129  0036BC  0E3F               	movlw	63
  5130  0036BE  6FFF               	movwf	255,b	;volatile
  5131                           
  5132                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0xC4;
  5133  0036C0  0EC4               	movlw	196
  5134  0036C2  6FF8               	movwf	248,b	;volatile
  5135                           
  5136                           ; BSR set to: 62
  5137  0036C4  0012               	return		;funcret
  5138  0036C6                     __end_of_ADCC_Initialize:
  5139                           	opt callstack 0
  5140                           
  5141 ;; *************** function _Digital232_init *****************
  5142 ;; Defined at:
  5143 ;;		line 9 in file "d232.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;		None
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;		None
  5148 ;; Return value:  Size  Location     Type
  5149 ;;                  1    wreg      void 
  5150 ;; Registers used:
  5151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/1
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5161 ;;Total ram usage:        0 bytes
  5162 ;; Hardware stack levels used:    1
  5163 ;; Hardware stack levels required when called:   13
  5164 ;; This function calls:
  5165 ;;		_ADCC_StartConversion
  5166 ;;		_StartTimer
  5167 ;;		_UART2_Read
  5168 ;;		_UART2_is_rx_ready
  5169 ;;		_WaitMs
  5170 ;;		_printf
  5171 ;; This function is called by:
  5172 ;;		_main
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           	psect	text39
  5177  002E4E                     __ptext39:
  5178                           	opt callstack 0
  5179  002E4E                     _Digital232_init:
  5180                           	opt callstack 17
  5181                           
  5182                           ;d232.c: 11:  printf("%s", "XQ\r");
  5183                           
  5184                           ; BSR set to: 62
  5185                           ;incstack = 0
  5186  002E4E  0E46               	movlw	low STR_4
  5187  002E50  0100               	movlb	0	; () banked
  5188  002E52  6F64               	movwf	printf@fmt& (0+255),b
  5189  002E54  0E42               	movlw	low STR_5
  5190  002E56  6F65               	movwf	(?_printf+1)& (0+255),b
  5191  002E58  5165               	movf	(?_printf+1)& (0+255),w,b
  5192  002E5A  A4D8               	btfss	status,2,c
  5193  002E5C  0E20               	movlw	high __smallconst
  5194  002E5E  6F66               	movwf	(?_printf+2)& (0+255),b
  5195  002E60  ECF4  F01E         	call	_printf	;wreg free
  5196                           
  5197                           ; BSR set to: 1
  5198                           ;d232.c: 12:  WaitMs(5);
  5199  002E64  0E00               	movlw	0
  5200  002E66  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  5201  002E68  0E05               	movlw	5
  5202  002E6A  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  5203  002E6C  ECC3  F01D         	call	_WaitMs	;wreg free
  5204                           
  5205                           ;d232.c: 13:  printf("%s", "T2\r");
  5206  002E70  0E46               	movlw	low STR_4
  5207  002E72  0100               	movlb	0	; () banked
  5208  002E74  6F64               	movwf	printf@fmt& (0+255),b
  5209  002E76  0E32               	movlw	low STR_7
  5210  002E78  6F65               	movwf	(?_printf+1)& (0+255),b
  5211  002E7A  5165               	movf	(?_printf+1)& (0+255),w,b
  5212  002E7C  A4D8               	btfss	status,2,c
  5213  002E7E  0E20               	movlw	high __smallconst
  5214  002E80  6F66               	movwf	(?_printf+2)& (0+255),b
  5215  002E82  ECF4  F01E         	call	_printf	;wreg free
  5216                           
  5217                           ;d232.c: 14:  WaitMs(800);
  5218  002E86  0E03               	movlw	3
  5219  002E88  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  5220  002E8A  0E20               	movlw	32
  5221  002E8C  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  5222  002E8E  ECC3  F01D         	call	_WaitMs	;wreg free
  5223                           
  5224                           ;d232.c: 15:  printf("%s", "C4\r");
  5225  002E92  0E46               	movlw	low STR_4
  5226  002E94  0100               	movlb	0	; () banked
  5227  002E96  6F64               	movwf	printf@fmt& (0+255),b
  5228  002E98  0E36               	movlw	low STR_9
  5229  002E9A  6F65               	movwf	(?_printf+1)& (0+255),b
  5230  002E9C  5165               	movf	(?_printf+1)& (0+255),w,b
  5231  002E9E  A4D8               	btfss	status,2,c
  5232  002EA0  0E20               	movlw	high __smallconst
  5233  002EA2  6F66               	movwf	(?_printf+2)& (0+255),b
  5234  002EA4  ECF4  F01E         	call	_printf	;wreg free
  5235                           
  5236                           ; BSR set to: 1
  5237                           ;d232.c: 16:  WaitMs(5);
  5238  002EA8  0E00               	movlw	0
  5239  002EAA  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  5240  002EAC  0E05               	movlw	5
  5241  002EAE  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  5242  002EB0  ECC3  F01D         	call	_WaitMs	;wreg free
  5243                           
  5244                           ;d232.c: 17:  printf("%s", "F4\r");
  5245  002EB4  0E46               	movlw	low STR_4
  5246  002EB6  0100               	movlb	0	; () banked
  5247  002EB8  6F64               	movwf	printf@fmt& (0+255),b
  5248  002EBA  0E3A               	movlw	low STR_11
  5249  002EBC  6F65               	movwf	(?_printf+1)& (0+255),b
  5250  002EBE  5165               	movf	(?_printf+1)& (0+255),w,b
  5251  002EC0  A4D8               	btfss	status,2,c
  5252  002EC2  0E20               	movlw	high __smallconst
  5253  002EC4  6F66               	movwf	(?_printf+2)& (0+255),b
  5254  002EC6  ECF4  F01E         	call	_printf	;wreg free
  5255                           
  5256                           ; BSR set to: 1
  5257                           ;d232.c: 18:  WaitMs(5);
  5258  002ECA  0E00               	movlw	0
  5259  002ECC  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  5260  002ECE  0E05               	movlw	5
  5261  002ED0  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  5262  002ED2  ECC3  F01D         	call	_WaitMs	;wreg free
  5263                           
  5264                           ;d232.c: 19:  printf("%s", "M4\r");
  5265  002ED6  0E46               	movlw	low STR_4
  5266  002ED8  0100               	movlb	0	; () banked
  5267  002EDA  6F64               	movwf	printf@fmt& (0+255),b
  5268  002EDC  0E3E               	movlw	low STR_13
  5269  002EDE  6F65               	movwf	(?_printf+1)& (0+255),b
  5270  002EE0  5165               	movf	(?_printf+1)& (0+255),w,b
  5271  002EE2  A4D8               	btfss	status,2,c
  5272  002EE4  0E20               	movlw	high __smallconst
  5273  002EE6  6F66               	movwf	(?_printf+2)& (0+255),b
  5274  002EE8  ECF4  F01E         	call	_printf	;wreg free
  5275                           
  5276                           ;d232.c: 20:  WaitMs(5);
  5277  002EEC  0E00               	movlw	0
  5278  002EEE  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  5279  002EF0  0E05               	movlw	5
  5280  002EF2  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  5281  002EF4  ECC3  F01D         	call	_WaitMs	;wreg free
  5282                           
  5283                           ;d232.c: 21:  IO.d232 = D232_INIT;
  5284  002EF8  0E01               	movlw	1
  5285  002EFA  0101               	movlb	1	; () banked
  5286  002EFC  6FAC               	movwf	(_IO+13)& (0+255),b
  5287                           
  5288                           ; BSR set to: 1
  5289                           ;d232.c: 25:  if (UART2_is_rx_ready())
  5290  002EFE  ECC9  F01F         	call	_UART2_is_rx_ready	;wreg free
  5291  002F02  0900               	iorlw	0
  5292  002F04  A4D8               	btfss	status,2,c
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;d232.c: 26:   UART2_Read();
  5296  002F06  EC03  F01C         	call	_UART2_Read	;wreg free
  5297                           
  5298                           ;d232.c: 27:  IO.io = IO_INIT;
  5299  002F0A  0E01               	movlw	1
  5300  002F0C  0101               	movlb	1	; () banked
  5301  002F0E  6FAB               	movwf	(_IO+12)& (0+255),b
  5302                           
  5303                           ; BSR set to: 1
  5304                           ;d232.c: 28:  IO.srq = S_IDLE;
  5305  002F10  0E00               	movlw	0
  5306  002F12  6FAD               	movwf	(_IO+14)& (0+255),b
  5307                           
  5308                           ; BSR set to: 1
  5309                           ;d232.c: 29:  IO.srq_value = 0;
  5310  002F14  0E00               	movlw	0
  5311  002F16  6FAE               	movwf	(_IO+15)& (0+255),b
  5312                           
  5313                           ; BSR set to: 1
  5314                           ;d232.c: 30:  IO.button_value = 0;
  5315  002F18  0E00               	movlw	0
  5316  002F1A  6FB5               	movwf	(_IO+22)& (0+255),b
  5317  002F1C  0E00               	movlw	0
  5318  002F1E  6FB4               	movwf	(_IO+21)& (0+255),b
  5319                           
  5320                           ; BSR set to: 1
  5321                           ;d232.c: 31:  ADCC_StartConversion(channel_ANA0);
  5322  002F20  0E00               	movlw	0
  5323  002F22  ECB7  F01F         	call	_ADCC_StartConversion
  5324                           
  5325                           ; BSR set to: 62
  5326                           ;d232.c: 32:  StartTimer(TMR_SPS, 10);
  5327  002F26  0E00               	movlw	0
  5328  002F28  6E07               	movwf	(StartTimer@count+1)^0,c
  5329  002F2A  0E0A               	movlw	10
  5330  002F2C  6E06               	movwf	StartTimer@count^0,c
  5331  002F2E  0E03               	movlw	3
  5332  002F30  EC4A  F01D         	call	_StartTimer
  5333  002F34  0012               	return		;funcret
  5334  002F36                     __end_of_Digital232_init:
  5335                           	opt callstack 0
  5336                           
  5337 ;; *************** function _WaitMs *****************
  5338 ;; Defined at:
  5339 ;;		line 31 in file "timers.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;  numMilliseco    2   10[COMRAM] const unsigned short 
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;		None
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  1    wreg      void 
  5346 ;; Registers used:
  5347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5348 ;; Tracked objects:
  5349 ;;		On entry : 3F/1
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5353 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5356 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5357 ;;Total ram usage:        2 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; Hardware stack levels required when called:    5
  5360 ;; This function calls:
  5361 ;;		_StartTimer
  5362 ;;		_TimerDone
  5363 ;; This function is called by:
  5364 ;;		_Digital232_init
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           	psect	text40
  5369  003B86                     __ptext40:
  5370                           	opt callstack 0
  5371  003B86                     _WaitMs:
  5372                           	opt callstack 24
  5373                           
  5374                           ; BSR set to: 1
  5375                           ;timers.c: 31: void WaitMs(const uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  5376                           
  5377                           ;incstack = 0
  5378  003B86  0060  F02C  F006   	movff	WaitMs@numMilliseconds,StartTimer@count
  5379  003B8C  0060  F030  F007   	movff	WaitMs@numMilliseconds+1,StartTimer@count+1
  5380  003B92  0E00               	movlw	0
  5381  003B94  EC4A  F01D         	call	_StartTimer
  5382                           
  5383                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  5384  003B98  D005               	goto	l5135
  5385  003B9A                     l1183:
  5386                           
  5387                           ;timers.c: 35:   __nop();
  5388  003B9A  F000               	nop	
  5389                           
  5390                           ;timers.c: 36:   __nop();
  5391  003B9C  F000               	nop	
  5392                           
  5393                           ;timers.c: 37:   __nop();
  5394  003B9E  F000               	nop	
  5395                           
  5396                           ;timers.c: 38:   __nop();
  5397  003BA0  F000               	nop	
  5398  003BA2  0004               	clrwdt		;# 
  5399  003BA4                     l5135:
  5400                           
  5401                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  5402  003BA4  0E00               	movlw	0
  5403  003BA6  EC14  F01E         	call	_TimerDone
  5404  003BAA  0900               	iorlw	0
  5405  003BAC  A4D8               	btfss	status,2,c
  5406  003BAE  0012               	return	
  5407  003BB0  D7F4               	goto	l1183
  5408  003BB2                     __end_of_WaitMs:
  5409                           	opt callstack 0
  5410                           
  5411 ;; *************** function _ADCC_StartConversion *****************
  5412 ;; Defined at:
  5413 ;;		line 113 in file "mcc_generated_files/adcc.c"
  5414 ;; Parameters:    Size  Location     Type
  5415 ;;  channel         1    wreg     enum E15799
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;  channel         1    5[COMRAM] enum E15799
  5418 ;; Return value:  Size  Location     Type
  5419 ;;                  1    wreg      void 
  5420 ;; Registers used:
  5421 ;;		wreg
  5422 ;; Tracked objects:
  5423 ;;		On entry : 3F/1
  5424 ;;		On exit  : 3F/3E
  5425 ;;		Unchanged: 0/0
  5426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5428 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5430 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5431 ;;Total ram usage:        1 bytes
  5432 ;; Hardware stack levels used:    1
  5433 ;; Hardware stack levels required when called:    4
  5434 ;; This function calls:
  5435 ;;		Nothing
  5436 ;; This function is called by:
  5437 ;;		_Digital232_init
  5438 ;; This function uses a non-reentrant model
  5439 ;;
  5440                           
  5441                           	psect	text41
  5442  003F6E                     __ptext41:
  5443                           	opt callstack 0
  5444  003F6E                     _ADCC_StartConversion:
  5445                           	opt callstack 25
  5446                           
  5447                           ;incstack = 0
  5448                           ;ADCC_StartConversion@channel stored from wreg
  5449  003F6E  6E06               	movwf	ADCC_StartConversion@channel^0,c
  5450                           
  5451                           ;mcc_generated_files/adcc.c: 113: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 114: {;mcc_generated_files/adcc.c: 116:     ADPCH = channel;
  5452  003F70  0060  F01B  FEF1   	movff	ADCC_StartConversion@channel,16113	;volatile
  5453                           
  5454                           ;mcc_generated_files/adcc.c: 119:     ADCON0bits.ADON = 1;
  5455  003F76  013E               	movlb	62	; () banked
  5456  003F78  8FF8               	bsf	248,7,b	;volatile
  5457                           
  5458                           ; BSR set to: 62
  5459                           ;mcc_generated_files/adcc.c: 122:     ADCON0bits.ADGO = 1;
  5460  003F7A  81F8               	bsf	248,0,b	;volatile
  5461                           
  5462                           ; BSR set to: 62
  5463  003F7C  0012               	return		;funcret
  5464  003F7E                     __end_of_ADCC_StartConversion:
  5465                           	opt callstack 0
  5466                           
  5467 ;; *************** function _Digital232_RW *****************
  5468 ;; Defined at:
  5469 ;;		line 35 in file "d232.c"
  5470 ;; Parameters:    Size  Location     Type
  5471 ;;		None
  5472 ;; Auto vars:     Size  Location     Type
  5473 ;;  j               1   13[BANK0 ] unsigned char 
  5474 ;;  i               1   12[BANK0 ] unsigned char 
  5475 ;; Return value:  Size  Location     Type
  5476 ;;                  1    wreg      _Bool 
  5477 ;; Registers used:
  5478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/1
  5481 ;;		On exit  : 3F/1
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5485 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5486 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5487 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5488 ;;Total ram usage:        4 bytes
  5489 ;; Hardware stack levels used:    1
  5490 ;; Hardware stack levels required when called:   13
  5491 ;; This function calls:
  5492 ;;		_ADCC_GetConversionResult
  5493 ;;		_PWM8_LoadDutyValue
  5494 ;;		_StartTimer
  5495 ;;		_TimerDone
  5496 ;;		_UART2_Read
  5497 ;;		_UART2_Write
  5498 ;;		_UART2_is_rx_ready
  5499 ;;		_printf
  5500 ;; This function is called by:
  5501 ;;		_main
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           
  5505                           	psect	text42
  5506  002544                     __ptext42:
  5507                           	opt callstack 0
  5508  002544                     _Digital232_RW:
  5509                           	opt callstack 17
  5510                           
  5511                           ; BSR set to: 62
  5512                           ;incstack = 0
  5513  002544  0E00               	movlw	0
  5514  002546  0100               	movlb	0	; () banked
  5515  002548  6F6D               	movwf	Digital232_RW@j& (0+255),b
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;d232.c: 38:  static uint8_t x = 0;;d232.c: 41:  if (!TimerDone(TMR_SPS)) {
  5519  00254A  0E03               	movlw	3
  5520  00254C  EC14  F01E         	call	_TimerDone
  5521  002550  0900               	iorlw	0
  5522  002552  A4D8               	btfss	status,2,c
  5523  002554  D005               	goto	l5261
  5524                           
  5525                           ;d232.c: 42:   IO.io = IO_IDLE;
  5526  002556  0E00               	movlw	0
  5527  002558  0101               	movlb	1	; () banked
  5528  00255A  6FAB               	movwf	(_IO+12)& (0+255),b
  5529                           
  5530                           ; BSR set to: 1
  5531                           ;d232.c: 43:   return 0;
  5532  00255C  0E00               	movlw	0
  5533  00255E  0012               	return	
  5534  002560                     l5261:
  5535                           
  5536                           ;d232.c: 46:  StartTimer(TMR_SPS, 10 + IO.speed + IO.slower);
  5537  002560  0101               	movlb	1	; () banked
  5538  002562  51B8               	movf	(_IO+25)& (0+255),w,b
  5539  002564  25B6               	addwf	(_IO+23)& (0+255),w,b
  5540  002566  0100               	movlb	0	; () banked
  5541  002568  6F6A               	movwf	??_Digital232_RW& (0+255),b
  5542  00256A  0101               	movlb	1	; () banked
  5543  00256C  51B9               	movf	(_IO+26)& (0+255),w,b
  5544  00256E  21B7               	addwfc	(_IO+24)& (0+255),w,b
  5545  002570  0100               	movlb	0	; () banked
  5546  002572  6F6B               	movwf	(??_Digital232_RW+1)& (0+255),b
  5547  002574  0E0A               	movlw	10
  5548  002576  256A               	addwf	??_Digital232_RW& (0+255),w,b
  5549  002578  6E06               	movwf	StartTimer@count^0,c
  5550  00257A  0E00               	movlw	0
  5551  00257C  216B               	addwfc	(??_Digital232_RW+1)& (0+255),w,b
  5552  00257E  6E07               	movwf	(StartTimer@count+1)^0,c
  5553  002580  0E03               	movlw	3
  5554  002582  EC4A  F01D         	call	_StartTimer
  5555                           
  5556                           ;d232.c: 51:  IO.srq = S_IDLE;
  5557  002586  0E00               	movlw	0
  5558  002588  0101               	movlb	1	; () banked
  5559  00258A  6FAD               	movwf	(_IO+14)& (0+255),b
  5560                           
  5561                           ; BSR set to: 1
  5562                           ;d232.c: 53:  if (UART2_is_rx_ready()) {
  5563  00258C  ECC9  F01F         	call	_UART2_is_rx_ready	;wreg free
  5564  002590  0900               	iorlw	0
  5565  002592  B4D8               	btfsc	status,2,c
  5566  002594  D040               	goto	l5291
  5567                           
  5568                           ; BSR set to: 0
  5569                           ;d232.c: 54:   j = UART2_Read();
  5570  002596  EC03  F01C         	call	_UART2_Read	;wreg free
  5571  00259A  0100               	movlb	0	; () banked
  5572  00259C  6F6D               	movwf	Digital232_RW@j& (0+255),b
  5573                           
  5574                           ;d232.c: 58:   switch (IO.srq) {
  5575  00259E  D021               	goto	l5289
  5576  0025A0                     l5269:
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;d232.c: 60:    if (j == 'S')
  5580  0025A0  0E53               	movlw	83
  5581  0025A2  196D               	xorwf	Digital232_RW@j& (0+255),w,b
  5582  0025A4  A4D8               	btfss	status,2,c
  5583  0025A6  D037               	goto	l5291
  5584                           
  5585                           ; BSR set to: 0
  5586                           ;d232.c: 61:     IO.srq = S_S;
  5587  0025A8  0E01               	movlw	1
  5588  0025AA  D018               	goto	L7
  5589  0025AC                     l5273:
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;d232.c: 64:    if (j == 'R')
  5593  0025AC  0E52               	movlw	82
  5594  0025AE  196D               	xorwf	Digital232_RW@j& (0+255),w,b
  5595  0025B0  A4D8               	btfss	status,2,c
  5596  0025B2  D031               	goto	l5291
  5597                           
  5598                           ; BSR set to: 0
  5599                           ;d232.c: 65:     IO.srq = S_R;
  5600  0025B4  0E02               	movlw	2
  5601  0025B6  D012               	goto	L7
  5602  0025B8                     l5277:
  5603                           
  5604                           ; BSR set to: 0
  5605                           ;d232.c: 68:    if (j == 'Q')
  5606  0025B8  0E51               	movlw	81
  5607  0025BA  196D               	xorwf	Digital232_RW@j& (0+255),w,b
  5608  0025BC  A4D8               	btfss	status,2,c
  5609  0025BE  D02B               	goto	l5291
  5610                           
  5611                           ; BSR set to: 0
  5612                           ;d232.c: 69:     IO.srq = S_Q;
  5613  0025C0  0E03               	movlw	3
  5614  0025C2  D00C               	goto	L7
  5615  0025C4                     l5281:
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;d232.c: 72:    if (j == ' ')
  5619  0025C4  0E20               	movlw	32
  5620  0025C6  196D               	xorwf	Digital232_RW@j& (0+255),w,b
  5621  0025C8  A4D8               	btfss	status,2,c
  5622  0025CA  D025               	goto	l5291
  5623                           
  5624                           ; BSR set to: 0
  5625                           ;d232.c: 73:     IO.srq = S_NUM;
  5626  0025CC  0E04               	movlw	4
  5627  0025CE  D006               	goto	L7
  5628  0025D0                     l1123:
  5629                           
  5630                           ; BSR set to: 0
  5631                           ;d232.c: 76:    IO.srq_value = j;
  5632  0025D0  0060  F1B4  F1AE   	movff	Digital232_RW@j,_IO+15
  5633                           
  5634                           ; BSR set to: 0
  5635                           ;d232.c: 77:    IO.srq = S_UPDATE;
  5636  0025D6  0E05               	movlw	5
  5637  0025D8  D001               	goto	L7
  5638  0025DA                     l5287:
  5639                           
  5640                           ; BSR set to: 0
  5641                           ;d232.c: 80:    IO.srq = S_IDLE;
  5642  0025DA  0E00               	movlw	0
  5643  0025DC                     L7:
  5644  0025DC  0101               	movlb	1	; () banked
  5645  0025DE  6FAD               	movwf	(_IO+14)& (0+255),b
  5646                           
  5647                           ;d232.c: 81:   }
  5648  0025E0  D01A               	goto	l5291
  5649  0025E2                     l5289:
  5650                           
  5651                           ; BSR set to: 0
  5652  0025E2  0101               	movlb	1	; () banked
  5653  0025E4  51AD               	movf	(_IO+14)& (0+255),w,b
  5654  0025E6  0100               	movlb	0	; () banked
  5655  0025E8  6F6A               	movwf	??_Digital232_RW& (0+255),b
  5656  0025EA  6B6B               	clrf	(??_Digital232_RW+1)& (0+255),b
  5657                           
  5658                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5659                           ; Switch size 1, requested type "simple"
  5660                           ; Number of cases is 1, Range of values is 0 to 0
  5661                           ; switch strategies available:
  5662                           ; Name         Instructions Cycles
  5663                           ; simple_byte            4     3 (average)
  5664                           ;	Chosen strategy is simple_byte
  5665  0025EC  516B               	movf	(??_Digital232_RW+1)& (0+255),w,b
  5666  0025EE  0A00               	xorlw	0	; case 0
  5667  0025F0  A4D8               	btfss	status,2,c
  5668  0025F2  D7F3               	goto	l5287
  5669                           
  5670                           ; BSR set to: 0
  5671                           ; Switch size 1, requested type "simple"
  5672                           ; Number of cases is 5, Range of values is 0 to 4
  5673                           ; switch strategies available:
  5674                           ; Name         Instructions Cycles
  5675                           ; simple_byte           16     9 (average)
  5676                           ;	Chosen strategy is simple_byte
  5677  0025F4  516A               	movf	??_Digital232_RW& (0+255),w,b
  5678  0025F6  0A00               	xorlw	0	; case 0
  5679  0025F8  B4D8               	btfsc	status,2,c
  5680  0025FA  D7D2               	goto	l5269
  5681  0025FC  0A01               	xorlw	1	; case 1
  5682  0025FE  B4D8               	btfsc	status,2,c
  5683  002600  D7D5               	goto	l5273
  5684  002602  0A03               	xorlw	3	; case 2
  5685  002604  B4D8               	btfsc	status,2,c
  5686  002606  D7D8               	goto	l5277
  5687  002608  0A01               	xorlw	1	; case 3
  5688  00260A  B4D8               	btfsc	status,2,c
  5689  00260C  D7DB               	goto	l5281
  5690  00260E  0A07               	xorlw	7	; case 4
  5691  002610  B4D8               	btfsc	status,2,c
  5692  002612  D7DE               	goto	l1123
  5693  002614  D7E2               	goto	l5287
  5694  002616                     l5291:
  5695                           
  5696                           ;d232.c: 84:  UART2_Write('D');
  5697  002616  0E44               	movlw	68
  5698  002618  EC25  F01C         	call	_UART2_Write
  5699                           
  5700                           ;d232.c: 85:  UART2_Write(IO.outbytes[4]);
  5701  00261C  0101               	movlb	1	; () banked
  5702  00261E  51A8               	movf	(_IO+9)& (0+255),w,b
  5703  002620  EC25  F01C         	call	_UART2_Write
  5704                           
  5705                           ;d232.c: 86:  UART2_Write(IO.outbytes[3]);
  5706  002624  0101               	movlb	1	; () banked
  5707  002626  51A7               	movf	(_IO+8)& (0+255),w,b
  5708  002628  EC25  F01C         	call	_UART2_Write
  5709                           
  5710                           ;d232.c: 87:  UART2_Write(IO.outbytes[2]);
  5711  00262C  0101               	movlb	1	; () banked
  5712  00262E  51A6               	movf	(_IO+7)& (0+255),w,b
  5713  002630  EC25  F01C         	call	_UART2_Write
  5714                           
  5715                           ;d232.c: 88:  UART2_Write(IO.outbytes[1]);
  5716  002634  0101               	movlb	1	; () banked
  5717  002636  51A5               	movf	(_IO+6)& (0+255),w,b
  5718  002638  EC25  F01C         	call	_UART2_Write
  5719                           
  5720                           ;d232.c: 89:  UART2_Write(IO.outbytes[0]);
  5721  00263C  0101               	movlb	1	; () banked
  5722  00263E  51A4               	movf	(_IO+5)& (0+255),w,b
  5723  002640  EC25  F01C         	call	_UART2_Write
  5724                           
  5725                           ;d232.c: 90:  UART2_Write('\r');
  5726  002644  0E0D               	movlw	13
  5727  002646  EC25  F01C         	call	_UART2_Write
  5728                           
  5729                           ; BSR set to: 57
  5730                           ;d232.c: 91:  printf("%s", "R0\r");
  5731  00264A  0E46               	movlw	low STR_4
  5732  00264C  0100               	movlb	0	; () banked
  5733  00264E  6F64               	movwf	printf@fmt& (0+255),b
  5734  002650  0E2E               	movlw	low STR_15
  5735  002652  6F65               	movwf	(?_printf+1)& (0+255),b
  5736  002654  5165               	movf	(?_printf+1)& (0+255),w,b
  5737  002656  A4D8               	btfss	status,2,c
  5738  002658  0E20               	movlw	high __smallconst
  5739  00265A  6F66               	movwf	(?_printf+2)& (0+255),b
  5740  00265C  ECF4  F01E         	call	_printf	;wreg free
  5741                           
  5742                           ; BSR set to: 1
  5743                           ;d232.c: 92:  IO.output_ok = 1;
  5744  002660  0E01               	movlw	1
  5745  002662  6FAA               	movwf	(_IO+11)& (0+255),b
  5746                           
  5747                           ; BSR set to: 1
  5748                           ;d232.c: 93:  IO.io = IO_OUT;
  5749  002664  0E02               	movlw	2
  5750  002666  6FAB               	movwf	(_IO+12)& (0+255),b
  5751                           
  5752                           ; BSR set to: 1
  5753                           ;d232.c: 97:  StartTimer(TMR_RXTO, 250);
  5754  002668  0E00               	movlw	0
  5755  00266A  6E07               	movwf	(StartTimer@count+1)^0,c
  5756  00266C  0EFA               	movlw	250
  5757  00266E  6E06               	movwf	StartTimer@count^0,c
  5758  002670  0E02               	movlw	2
  5759  002672  EC4A  F01D         	call	_StartTimer
  5760                           
  5761                           ;d232.c: 98:  while (!UART2_is_rx_ready()) {
  5762  002676  D015               	goto	l5315
  5763  002678                     l5301:
  5764                           
  5765                           ; BSR set to: 0
  5766                           ;d232.c: 99:   if (TimerDone(TMR_RXTO)) {
  5767  002678  0E02               	movlw	2
  5768  00267A  EC14  F01E         	call	_TimerDone
  5769  00267E  0900               	iorlw	0
  5770  002680  B4D8               	btfsc	status,2,c
  5771  002682  D00F               	goto	l5315
  5772                           
  5773                           ;d232.c: 100:    PWM8_LoadDutyValue(x++);
  5774  002684  0060  F3D8  F006   	movff	Digital232_RW@x,PWM8_LoadDutyValue@dutyValue
  5775  00268A  6A07               	clrf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  5776  00268C  ECFA  F01C         	call	_PWM8_LoadDutyValue	;wreg free
  5777  002690  0100               	movlb	0	; () banked
  5778  002692  2BF6               	incf	Digital232_RW@x& (0+255),f,b
  5779                           
  5780                           ; BSR set to: 0
  5781                           ;d232.c: 101:    if (x > 3)
  5782  002694  0E03               	movlw	3
  5783  002696  65F6               	cpfsgt	Digital232_RW@x& (0+255),b
  5784  002698  D002               	goto	l1128
  5785                           
  5786                           ; BSR set to: 0
  5787                           ;d232.c: 102:     x = 0;
  5788  00269A  0E00               	movlw	0
  5789  00269C  6FF6               	movwf	Digital232_RW@x& (0+255),b
  5790  00269E                     l1128:
  5791                           
  5792                           ; BSR set to: 0
  5793                           ;d232.c: 103:    IO.io = IO_FAIL;
  5794  00269E  0E06               	movlw	6
  5795  0026A0  D75B               	goto	L8
  5796  0026A2                     l5315:
  5797                           
  5798                           ;d232.c: 98:  while (!UART2_is_rx_ready()) {
  5799  0026A2  ECC9  F01F         	call	_UART2_is_rx_ready	;wreg free
  5800  0026A6  0900               	iorlw	0
  5801  0026A8  B4D8               	btfsc	status,2,c
  5802  0026AA  D7E6               	goto	l5301
  5803                           
  5804                           ; BSR set to: 0
  5805                           ;d232.c: 111:  i = 0;
  5806  0026AC  0E00               	movlw	0
  5807  0026AE  6F6C               	movwf	Digital232_RW@i& (0+255),b
  5808                           
  5809                           ; BSR set to: 0
  5810                           ;d232.c: 112:  StartTimer(TMR_RXTO, 250);
  5811  0026B0  0E00               	movlw	0
  5812  0026B2  6E07               	movwf	(StartTimer@count+1)^0,c
  5813  0026B4  0EFA               	movlw	250
  5814  0026B6  6E06               	movwf	StartTimer@count^0,c
  5815  0026B8  0E02               	movlw	2
  5816  0026BA  EC4A  F01D         	call	_StartTimer
  5817                           
  5818                           ;d232.c: 113:  while (!TimerDone(TMR_RXTO) && (i < 6)) {
  5819  0026BE  D015               	goto	l5327
  5820  0026C0                     l5321:
  5821                           
  5822                           ; BSR set to: 0
  5823                           ;d232.c: 114:   if (UART2_is_rx_ready()) {
  5824  0026C0  ECC9  F01F         	call	_UART2_is_rx_ready	;wreg free
  5825  0026C4  0900               	iorlw	0
  5826  0026C6  B4D8               	btfsc	status,2,c
  5827  0026C8  D010               	goto	l5327
  5828                           
  5829                           ; BSR set to: 0
  5830                           ;d232.c: 115:    IO.inbytes[4 - i] = UART2_Read();
  5831  0026CA  EC03  F01C         	call	_UART2_Read	;wreg free
  5832  0026CE  0100               	movlb	0	; () banked
  5833  0026D0  6F6A               	movwf	??_Digital232_RW& (0+255),b
  5834  0026D2  516C               	movf	Digital232_RW@i& (0+255),w,b
  5835  0026D4  08A3               	sublw	low (_IO+4)
  5836  0026D6  6ED9               	movwf	fsr2l,c
  5837  0026D8  0E00               	movlw	0
  5838  0026DA  A0D8               	btfss	status,0,c
  5839  0026DC  2AE8               	incf	wreg,f,c
  5840  0026DE  0801               	sublw	high (_IO+4)
  5841  0026E0  6EDA               	movwf	fsr2h,c
  5842  0026E2  0060  F1AB  FFDF   	movff	??_Digital232_RW,indf2
  5843                           
  5844                           ; BSR set to: 0
  5845                           ;d232.c: 116:    i++;
  5846  0026E8  2B6C               	incf	Digital232_RW@i& (0+255),f,b
  5847  0026EA                     l5327:
  5848                           
  5849                           ;d232.c: 113:  while (!TimerDone(TMR_RXTO) && (i < 6)) {
  5850  0026EA  0E02               	movlw	2
  5851  0026EC  EC14  F01E         	call	_TimerDone
  5852  0026F0  0900               	iorlw	0
  5853  0026F2  A4D8               	btfss	status,2,c
  5854  0026F4  D004               	goto	u4160
  5855  0026F6  0E05               	movlw	5
  5856  0026F8  0100               	movlb	0	; () banked
  5857  0026FA  656C               	cpfsgt	Digital232_RW@i& (0+255),b
  5858  0026FC  D7E1               	goto	l5321
  5859  0026FE                     u4160:
  5860                           
  5861                           ;d232.c: 119:  if (TimerDone(TMR_RXTO) || i < 6) {
  5862  0026FE  0E02               	movlw	2
  5863  002700  EC14  F01E         	call	_TimerDone
  5864  002704  0900               	iorlw	0
  5865  002706  A4D8               	btfss	status,2,c
  5866  002708  D004               	goto	u4180
  5867  00270A  0E06               	movlw	6
  5868  00270C  0100               	movlb	0	; () banked
  5869  00270E  616C               	cpfslt	Digital232_RW@i& (0+255),b
  5870  002710  D00A               	goto	l5347
  5871  002712                     u4180:
  5872                           
  5873                           ;d232.c: 120:   PWM8_LoadDutyValue(x++);
  5874  002712  0060  F3D8  F006   	movff	Digital232_RW@x,PWM8_LoadDutyValue@dutyValue
  5875  002718  6A07               	clrf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  5876  00271A  ECFA  F01C         	call	_PWM8_LoadDutyValue	;wreg free
  5877  00271E  0100               	movlb	0	; () banked
  5878  002720  2BF6               	incf	Digital232_RW@x& (0+255),f,b
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;d232.c: 121:   if (x > 16)
  5882  002722  0E10               	movlw	16
  5883  002724  D7B8               	goto	L9
  5884  002726                     l5347:
  5885                           
  5886                           ; BSR set to: 0
  5887                           ;d232.c: 127:  if (UART2_is_rx_ready())
  5888  002726  ECC9  F01F         	call	_UART2_is_rx_ready	;wreg free
  5889  00272A  0900               	iorlw	0
  5890  00272C  A4D8               	btfss	status,2,c
  5891                           
  5892                           ; BSR set to: 0
  5893                           ;d232.c: 128:   UART2_Read();
  5894  00272E  EC03  F01C         	call	_UART2_Read	;wreg free
  5895                           
  5896                           ;d232.c: 130:  IO.input_ok = 1;
  5897  002732  0E01               	movlw	1
  5898  002734  0101               	movlb	1	; () banked
  5899  002736  6FA9               	movwf	(_IO+10)& (0+255),b
  5900                           
  5901                           ; BSR set to: 1
  5902                           ;d232.c: 131:  IO.io = IO_IN;
  5903  002738  0E03               	movlw	3
  5904  00273A  6FAB               	movwf	(_IO+12)& (0+255),b
  5905                           
  5906                           ; BSR set to: 1
  5907                           ;d232.c: 132:  IO.d232 = D232_OUT_IN;
  5908  00273C  0E02               	movlw	2
  5909  00273E  6FAC               	movwf	(_IO+13)& (0+255),b
  5910                           
  5911                           ; BSR set to: 1
  5912                           ;d232.c: 136:  IO.button_value = ADCC_GetConversionResult();
  5913  002740  EC34  F01F         	call	_ADCC_GetConversionResult	;wreg free
  5914  002744  0060  F018  F1B4   	movff	?_ADCC_GetConversionResult,_IO+21
  5915  00274A  0060  F01C  F1B5   	movff	?_ADCC_GetConversionResult+1,_IO+22
  5916                           
  5917                           ; BSR set to: 62
  5918                           ;d232.c: 137:  PWM8_LoadDutyValue(199);
  5919  002750  0E00               	movlw	0
  5920  002752  6E07               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  5921  002754  0EC7               	movlw	199
  5922  002756  6E06               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  5923  002758  ECFA  F01C         	call	_PWM8_LoadDutyValue	;wreg free
  5924                           
  5925                           ;d232.c: 138:  IO.io = IO_UPDATE;
  5926  00275C  0E05               	movlw	5
  5927  00275E  0101               	movlb	1	; () banked
  5928  002760  6FAB               	movwf	(_IO+12)& (0+255),b
  5929                           
  5930                           ; BSR set to: 1
  5931                           ;d232.c: 139:  return 1;
  5932  002762  0E01               	movlw	1
  5933                           
  5934                           ; BSR set to: 1
  5935  002764  0012               	return		;funcret
  5936  002766                     __end_of_Digital232_RW:
  5937                           	opt callstack 0
  5938                           
  5939 ;; *************** function _printf *****************
  5940 ;; Defined at:
  5941 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;  fmt             1    4[BANK0 ] PTR const unsigned char 
  5944 ;;		 -> STR_14(3), STR_12(3), STR_10(3), STR_8(3), 
  5945 ;;		 -> STR_6(3), STR_4(3), 
  5946 ;; Auto vars:     Size  Location     Type
  5947 ;;  ret             2    0        int 
  5948 ;;  ap              1    9[BANK0 ] PTR void [1]
  5949 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  2    4[BANK0 ] int 
  5952 ;; Registers used:
  5953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5954 ;; Tracked objects:
  5955 ;;		On entry : 3F/0
  5956 ;;		On exit  : 3F/1
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5959 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5960 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5962 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5963 ;;Total ram usage:        6 bytes
  5964 ;; Hardware stack levels used:    1
  5965 ;; Hardware stack levels required when called:   12
  5966 ;; This function calls:
  5967 ;;		_vfprintf
  5968 ;; This function is called by:
  5969 ;;		_Digital232_init
  5970 ;;		_Digital232_RW
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974                           	psect	text43
  5975  003DE8                     __ptext43:
  5976                           	opt callstack 0
  5977  003DE8                     _printf:
  5978                           	opt callstack 17
  5979                           
  5980                           ; BSR set to: 0
  5981                           
  5982                           ; BSR set to: 1
  5983                           ;incstack = 0
  5984  003DE8  0E65               	movlw	low (?_printf+1)
  5985  003DEA  6F69               	movwf	printf@ap& (0+255),b
  5986                           
  5987                           ; BSR set to: 0
  5988  003DEC  0E00               	movlw	0
  5989  003DEE  6F60               	movwf	vfprintf@fp& (0+255),b
  5990  003DF0  0E00               	movlw	0
  5991  003DF2  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  5992  003DF4  0060  F190  F062   	movff	printf@fmt,vfprintf@fmt
  5993  003DFA  0E69               	movlw	low printf@ap
  5994  003DFC  6F63               	movwf	vfprintf@ap& (0+255),b
  5995  003DFE  EC63  F01B         	call	_vfprintf	;wreg free
  5996                           
  5997                           ; BSR set to: 1
  5998  003E02  0012               	return		;funcret
  5999  003E04                     __end_of_printf:
  6000                           	opt callstack 0
  6001                           
  6002 ;; *************** function _vfprintf *****************
  6003 ;; Defined at:
  6004 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  6007 ;;		 -> sprintf@f(5), NULL(0), 
  6008 ;;  fmt             1    2[BANK0 ] PTR const unsigned char 
  6009 ;;		 -> STR_14(3), STR_12(3), STR_10(3), STR_8(3), 
  6010 ;;		 -> STR_6(3), STR_4(3), STR_2(17), STR_1(17), 
  6011 ;;  ap              1    3[BANK0 ] PTR PTR void 
  6012 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6013 ;; Auto vars:     Size  Location     Type
  6014 ;;  cfmt            1   84[COMRAM] PTR unsigned char 
  6015 ;;		 -> STR_14(3), STR_12(3), STR_10(3), STR_8(3), 
  6016 ;;		 -> STR_6(3), STR_4(3), STR_2(17), STR_1(17), 
  6017 ;; Return value:  Size  Location     Type
  6018 ;;                  2    0[BANK0 ] int 
  6019 ;; Registers used:
  6020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6021 ;; Tracked objects:
  6022 ;;		On entry : 3F/0
  6023 ;;		On exit  : 3F/1
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6026 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6027 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6029 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6030 ;;Total ram usage:        5 bytes
  6031 ;; Hardware stack levels used:    1
  6032 ;; Hardware stack levels required when called:   11
  6033 ;; This function calls:
  6034 ;;		_vfpfcnvrt
  6035 ;; This function is called by:
  6036 ;;		_sprintf
  6037 ;;		_printf
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041                           	psect	text44
  6042  0036C6                     __ptext44:
  6043                           	opt callstack 0
  6044  0036C6                     _vfprintf:
  6045                           	opt callstack 17
  6046                           
  6047                           ; BSR set to: 0
  6048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6049                           
  6050                           ; BSR set to: 1
  6051                           ;incstack = 0
  6052  0036C6  0060  F188  F055   	movff	vfprintf@fmt,vfprintf@cfmt
  6053                           
  6054                           ; BSR set to: 0
  6055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  6056  0036CC  0E00               	movlw	0
  6057  0036CE  0101               	movlb	1	; () banked
  6058  0036D0  6F67               	movwf	(_nout+1)& (0+255),b
  6059  0036D2  0E00               	movlw	0
  6060  0036D4  6F66               	movwf	_nout& (0+255),b
  6061                           
  6062                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6063  0036D6  D012               	goto	l4907
  6064  0036D8                     l4905:
  6065                           
  6066                           ; BSR set to: 1
  6067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6068  0036D8  0060  F180  F047   	movff	vfprintf@fp,vfpfcnvrt@fp
  6069  0036DE  0060  F184  F048   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6070  0036E4  0E55               	movlw	low vfprintf@cfmt
  6071  0036E6  6E49               	movwf	vfpfcnvrt@fmt^0,c
  6072  0036E8  0060  F18C  F04A   	movff	vfprintf@ap,vfpfcnvrt@ap
  6073  0036EE  ECB3  F013         	call	_vfpfcnvrt	;wreg free
  6074  0036F2  5047               	movf	?_vfpfcnvrt^0,w,c
  6075  0036F4  0101               	movlb	1	; () banked
  6076  0036F6  2766               	addwf	_nout& (0+255),f,b
  6077  0036F8  5048               	movf	(?_vfpfcnvrt+1)^0,w,c
  6078  0036FA  2367               	addwfc	(_nout+1)& (0+255),f,b
  6079  0036FC                     l4907:
  6080                           
  6081                           ; BSR set to: 1
  6082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6083  0036FC  0060  F157  FFF6   	movff	vfprintf@cfmt,tblptrl
  6084  003702                     	if	1	;There is more than 1 active tblptr byte
  6085  003702  0E20               	movlw	high __smallconst
  6086  003704  6EF7               	movwf	tblptrh,c
  6087  003706                     	endif
  6088  003706                     	if	0	;tblptru may be non-zero
  6089  003706                     	endif
  6090  003706                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6091  003706  0E00               	movlw	low (__smallconst shr (0+16))
  6092  003708  6EF8               	movwf	tblptru,c
  6093  00370A                     	endif
  6094  00370A  0008               	tblrd		*
  6095  00370C  50F5               	movf	tablat,w,c
  6096  00370E  0900               	iorlw	0
  6097  003710  A4D8               	btfss	status,2,c
  6098  003712  D7E2               	goto	l4905
  6099                           
  6100                           ; BSR set to: 1
  6101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  6102  003714  0060  F598  F060   	movff	_nout,?_vfprintf
  6103  00371A  0060  F59C  F061   	movff	_nout+1,?_vfprintf+1
  6104                           
  6105                           ; BSR set to: 1
  6106  003720  0012               	return		;funcret
  6107  003722                     __end_of_vfprintf:
  6108                           	opt callstack 0
  6109                           
  6110 ;; *************** function _vfpfcnvrt *****************
  6111 ;; Defined at:
  6112 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6113 ;; Parameters:    Size  Location     Type
  6114 ;;  fp              2   70[COMRAM] PTR struct _IO_FILE
  6115 ;;		 -> sprintf@f(5), NULL(0), 
  6116 ;;  fmt             1   72[COMRAM] PTR PTR unsigned char 
  6117 ;;		 -> vfprintf@cfmt(1), 
  6118 ;;  ap              1   73[COMRAM] PTR PTR void 
  6119 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;  ll              8   74[COMRAM] long long 
  6122 ;;  llu             8    0        unsigned long long 
  6123 ;;  f               4    0        unsigned long long 
  6124 ;;  vp              3    0        PTR void 
  6125 ;;  ct              3    0        unsigned char [3]
  6126 ;;  cp              2   82[COMRAM] PTR unsigned char 
  6127 ;;		 -> ?_printf(2), ?_sprintf(2), STR_15(4), STR_13(4), 
  6128 ;;		 -> STR_11(4), STR_9(4), STR_7(4), STR_5(4), 
  6129 ;;  i               2    0        int 
  6130 ;;  done            2    0        int 
  6131 ;;  c               1    0        unsigned char 
  6132 ;; Return value:  Size  Location     Type
  6133 ;;                  2   70[COMRAM] int 
  6134 ;; Registers used:
  6135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6136 ;; Tracked objects:
  6137 ;;		On entry : 3E/1
  6138 ;;		On exit  : 0/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6141 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6142 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6144 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6145 ;;Total ram usage:       14 bytes
  6146 ;; Hardware stack levels used:    1
  6147 ;; Hardware stack levels required when called:   10
  6148 ;; This function calls:
  6149 ;;		_dtoa
  6150 ;;		_fputc
  6151 ;;		_stoa
  6152 ;; This function is called by:
  6153 ;;		_vfprintf
  6154 ;; This function uses a non-reentrant model
  6155 ;;
  6156                           
  6157                           	psect	text45
  6158  002766                     __ptext45:
  6159                           	opt callstack 0
  6160  002766                     _vfpfcnvrt:
  6161                           	opt callstack 17
  6162                           
  6163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  6164                           
  6165                           ; BSR set to: 1
  6166                           ;incstack = 0
  6167  002766  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6168  002768  6ED9               	movwf	fsr2l,c
  6169  00276A  6ADA               	clrf	fsr2h,c
  6170  00276C  006F FF7F FFF6     	movff	indf2,tblptrl
  6171  002772                     	if	1	;There is more than 1 active tblptr byte
  6172  002772  0E20               	movlw	high __smallconst
  6173  002774  6EF7               	movwf	tblptrh,c
  6174  002776                     	endif
  6175  002776                     	if	0	;tblptru may be non-zero
  6176  002776                     	endif
  6177  002776                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6178  002776  0E00               	movlw	low (__smallconst shr (0+16))
  6179  002778  6EF8               	movwf	tblptru,c
  6180  00277A                     	endif
  6181  00277A  0008               	tblrd		*
  6182  00277C  50F5               	movf	tablat,w,c
  6183  00277E  0A25               	xorlw	37
  6184  002780  A4D8               	btfss	status,2,c
  6185  002782  D0D5               	goto	l4827
  6186                           
  6187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  6188  002784  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6189  002786  6ED9               	movwf	fsr2l,c
  6190  002788  6ADA               	clrf	fsr2h,c
  6191  00278A  2ADF               	incf	indf2,f,c
  6192                           
  6193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  6194  00278C  0E00               	movlw	0
  6195  00278E  0101               	movlb	1	; () banked
  6196  002790  6F69               	movwf	(_width+1)& (0+255),b
  6197  002792  0E00               	movlw	0
  6198  002794  6F68               	movwf	_width& (0+255),b
  6199  002796  0060  F5A0  F056   	movff	_width,_flags
  6200  00279C  0060  F5A4  F057   	movff	_width+1,_flags+1
  6201                           
  6202                           ; BSR set to: 1
  6203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  6204  0027A2  0100               	movlb	0	; () banked
  6205  0027A4  69F2               	setf	_prec& (0+255),b
  6206  0027A6  69F3               	setf	(_prec+1)& (0+255),b
  6207                           
  6208                           ; BSR set to: 0
  6209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  6210  0027A8  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6211  0027AA  6ED9               	movwf	fsr2l,c
  6212  0027AC  6ADA               	clrf	fsr2h,c
  6213  0027AE  006F FF7F FFF6     	movff	indf2,tblptrl
  6214  0027B4                     	if	1	;There is more than 1 active tblptr byte
  6215  0027B4  0E20               	movlw	high __smallconst
  6216  0027B6  6EF7               	movwf	tblptrh,c
  6217  0027B8                     	endif
  6218  0027B8                     	if	0	;tblptru may be non-zero
  6219  0027B8                     	endif
  6220  0027B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6221  0027B8  0E00               	movlw	low (__smallconst shr (0+16))
  6222  0027BA  6EF8               	movwf	tblptru,c
  6223  0027BC                     	endif
  6224  0027BC  0008               	tblrd		*
  6225  0027BE  50F5               	movf	tablat,w,c
  6226  0027C0  0A64               	xorlw	100
  6227  0027C2  B4D8               	btfsc	status,2,c
  6228  0027C4  D00F               	goto	u3820
  6229                           
  6230                           ; BSR set to: 0
  6231  0027C6  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6232  0027C8  6ED9               	movwf	fsr2l,c
  6233  0027CA  6ADA               	clrf	fsr2h,c
  6234  0027CC  006F FF7F FFF6     	movff	indf2,tblptrl
  6235  0027D2                     	if	1	;There is more than 1 active tblptr byte
  6236  0027D2  0E20               	movlw	high __smallconst
  6237  0027D4  6EF7               	movwf	tblptrh,c
  6238  0027D6                     	endif
  6239  0027D6                     	if	0	;tblptru may be non-zero
  6240  0027D6                     	endif
  6241  0027D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6242  0027D6  0E00               	movlw	low (__smallconst shr (0+16))
  6243  0027D8  6EF8               	movwf	tblptru,c
  6244  0027DA                     	endif
  6245  0027DA  0008               	tblrd		*
  6246  0027DC  50F5               	movf	tablat,w,c
  6247  0027DE  0A69               	xorlw	105
  6248  0027E0  A4D8               	btfss	status,2,c
  6249  0027E2  D042               	goto	l4801
  6250  0027E4                     u3820:
  6251                           
  6252                           ; BSR set to: 0
  6253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  6254  0027E4  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6255  0027E6  6ED9               	movwf	fsr2l,c
  6256  0027E8  6ADA               	clrf	fsr2h,c
  6257  0027EA  2ADF               	incf	indf2,f,c
  6258                           
  6259                           ; BSR set to: 0
  6260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  6261  0027EC  504A               	movf	vfpfcnvrt@ap^0,w,c
  6262  0027EE  6ED9               	movwf	fsr2l,c
  6263  0027F0  6ADA               	clrf	fsr2h,c
  6264  0027F2  50DF               	movf	indf2,w,c
  6265  0027F4  2ADF               	incf	indf2,f,c
  6266  0027F6  2ADF               	incf	indf2,f,c
  6267  0027F8  6ED9               	movwf	fsr2l,c
  6268  0027FA  6ADA               	clrf	fsr2h,c
  6269  0027FC  006F FF78  F04B    	movff	postinc2,vfpfcnvrt@ll
  6270  002802  006F FF74  F04C    	movff	postdec2,vfpfcnvrt@ll+1
  6271  002808  0E00               	movlw	0
  6272  00280A  BE4C               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  6273  00280C  0EFF               	movlw	-1
  6274  00280E  6E4D               	movwf	(vfpfcnvrt@ll+2)^0,c
  6275  002810  6E4E               	movwf	(vfpfcnvrt@ll+3)^0,c
  6276  002812  6E4F               	movwf	(vfpfcnvrt@ll+4)^0,c
  6277  002814  6E50               	movwf	(vfpfcnvrt@ll+5)^0,c
  6278  002816  6E51               	movwf	(vfpfcnvrt@ll+6)^0,c
  6279  002818  6E52               	movwf	(vfpfcnvrt@ll+7)^0,c
  6280                           
  6281                           ; BSR set to: 0
  6282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  6283  00281A  0060  F11C  F023   	movff	vfpfcnvrt@fp,dtoa@fp
  6284  002820  0060  F120  F024   	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6285  002826  0060  F12C  F025   	movff	vfpfcnvrt@ll,dtoa@d
  6286  00282C  0060  F130  F026   	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6287  002832  0060  F134  F027   	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6288  002838  0060  F138  F028   	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6289  00283E  0060  F13C  F029   	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6290  002844  0060  F140  F02A   	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6291  00284A  0060  F144  F02B   	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6292  002850  0060  F148  F02C   	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6293  002856  EC25  F010         	call	_dtoa	;wreg free
  6294  00285A  0060  F08C  F047   	movff	?_dtoa,?_vfpfcnvrt
  6295  002860  0060  F090  F048   	movff	?_dtoa+1,?_vfpfcnvrt+1
  6296  002866  0012               	return	
  6297  002868                     l4801:
  6298                           
  6299                           ; BSR set to: 0
  6300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  6301  002868  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6302  00286A  6ED9               	movwf	fsr2l,c
  6303  00286C  6ADA               	clrf	fsr2h,c
  6304  00286E  006F FF7F FFF6     	movff	indf2,tblptrl
  6305  002874                     	if	1	;There is more than 1 active tblptr byte
  6306  002874  0E20               	movlw	high __smallconst
  6307  002876  6EF7               	movwf	tblptrh,c
  6308  002878                     	endif
  6309  002878                     	if	0	;tblptru may be non-zero
  6310  002878                     	endif
  6311  002878                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6312  002878  0E00               	movlw	low (__smallconst shr (0+16))
  6313  00287A  6EF8               	movwf	tblptru,c
  6314  00287C                     	endif
  6315  00287C  0008               	tblrd		*
  6316  00287E  50F5               	movf	tablat,w,c
  6317  002880  0A73               	xorlw	115
  6318  002882  A4D8               	btfss	status,2,c
  6319  002884  D027               	goto	l4811
  6320                           
  6321                           ; BSR set to: 0
  6322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  6323  002886  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6324  002888  6ED9               	movwf	fsr2l,c
  6325  00288A  6ADA               	clrf	fsr2h,c
  6326  00288C  2ADF               	incf	indf2,f,c
  6327                           
  6328                           ; BSR set to: 0
  6329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  6330  00288E  504A               	movf	vfpfcnvrt@ap^0,w,c
  6331  002890  6ED9               	movwf	fsr2l,c
  6332  002892  6ADA               	clrf	fsr2h,c
  6333  002894  0E02               	movlw	2
  6334  002896  26DF               	addwf	indf2,f,c
  6335  002898  5CDF               	subwf	indf2,w,c
  6336  00289A  6ED9               	movwf	fsr2l,c
  6337  00289C  6ADA               	clrf	fsr2h,c
  6338  00289E  006F FF78  F053    	movff	postinc2,vfpfcnvrt@cp
  6339  0028A4  006F FF78  F054    	movff	postinc2,vfpfcnvrt@cp+1
  6340                           
  6341                           ; BSR set to: 0
  6342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  6343  0028AA  0060  F11C  F011   	movff	vfpfcnvrt@fp,stoa@fp
  6344  0028B0  0060  F120  F012   	movff	vfpfcnvrt@fp+1,stoa@fp+1
  6345  0028B6  0060  F14C  F013   	movff	vfpfcnvrt@cp,stoa@s
  6346  0028BC  0060  F150  F014   	movff	vfpfcnvrt@cp+1,stoa@s+1
  6347  0028C2  ECB2  F014         	call	_stoa	;wreg free
  6348  0028C6  0060  F044  F047   	movff	?_stoa,?_vfpfcnvrt
  6349  0028CC  0060  F048  F048   	movff	?_stoa+1,?_vfpfcnvrt+1
  6350  0028D2  0012               	return	
  6351  0028D4                     l4811:
  6352                           
  6353                           ; BSR set to: 0
  6354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  6355  0028D4  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6356  0028D6  6ED9               	movwf	fsr2l,c
  6357  0028D8  6ADA               	clrf	fsr2h,c
  6358  0028DA  006F FF7F FFF6     	movff	indf2,tblptrl
  6359  0028E0                     	if	1	;There is more than 1 active tblptr byte
  6360  0028E0  0E20               	movlw	high __smallconst
  6361  0028E2  6EF7               	movwf	tblptrh,c
  6362  0028E4                     	endif
  6363  0028E4                     	if	0	;tblptru may be non-zero
  6364  0028E4                     	endif
  6365  0028E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6366  0028E4  0E00               	movlw	low (__smallconst shr (0+16))
  6367  0028E6  6EF8               	movwf	tblptru,c
  6368  0028E8                     	endif
  6369  0028E8  0008               	tblrd		*
  6370  0028EA  50F5               	movf	tablat,w,c
  6371  0028EC  0A25               	xorlw	37
  6372  0028EE  A4D8               	btfss	status,2,c
  6373  0028F0  D015               	goto	l4821
  6374                           
  6375                           ; BSR set to: 0
  6376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  6377  0028F2  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6378  0028F4  6ED9               	movwf	fsr2l,c
  6379  0028F6  6ADA               	clrf	fsr2h,c
  6380  0028F8  2ADF               	incf	indf2,f,c
  6381                           
  6382                           ; BSR set to: 0
  6383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  6384  0028FA  0E00               	movlw	0
  6385  0028FC  6E09               	movwf	(fputc@c+1)^0,c
  6386  0028FE  0E25               	movlw	37
  6387  002900  6E08               	movwf	fputc@c^0,c
  6388  002902  0060  F11C  F00A   	movff	vfpfcnvrt@fp,fputc@fp
  6389  002908  0060  F120  F00B   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6390  00290E  ECF7  F019         	call	_fputc	;wreg free
  6391  002912                     l4817:
  6392                           
  6393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  6394  002912  0E00               	movlw	0
  6395  002914  6E48               	movwf	(?_vfpfcnvrt+1)^0,c
  6396  002916  0E01               	movlw	1
  6397  002918  6E47               	movwf	?_vfpfcnvrt^0,c
  6398  00291A  0012               	return	
  6399  00291C                     l4821:
  6400                           
  6401                           ; BSR set to: 0
  6402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  6403  00291C  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6404  00291E  6ED9               	movwf	fsr2l,c
  6405  002920  6ADA               	clrf	fsr2h,c
  6406  002922  2ADF               	incf	indf2,f,c
  6407                           
  6408                           ; BSR set to: 0
  6409                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  6410  002924  0E00               	movlw	0
  6411  002926  6E48               	movwf	(?_vfpfcnvrt+1)^0,c
  6412  002928  0E00               	movlw	0
  6413  00292A  6E47               	movwf	?_vfpfcnvrt^0,c
  6414  00292C  0012               	return	
  6415  00292E                     l4827:
  6416                           
  6417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  6418  00292E  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6419  002930  6ED9               	movwf	fsr2l,c
  6420  002932  6ADA               	clrf	fsr2h,c
  6421  002934  006F FF7F FFF6     	movff	indf2,tblptrl
  6422  00293A                     	if	1	;There is more than 1 active tblptr byte
  6423  00293A  0E20               	movlw	high __smallconst
  6424  00293C  6EF7               	movwf	tblptrh,c
  6425  00293E                     	endif
  6426  00293E                     	if	0	;tblptru may be non-zero
  6427  00293E                     	endif
  6428  00293E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6429  00293E  0E00               	movlw	low (__smallconst shr (0+16))
  6430  002940  6EF8               	movwf	tblptru,c
  6431  002942                     	endif
  6432  002942  0008               	tblrd		*
  6433  002944  50F5               	movf	tablat,w,c
  6434  002946  6E08               	movwf	fputc@c^0,c
  6435  002948  6A09               	clrf	(fputc@c+1)^0,c
  6436  00294A  0060  F11C  F00A   	movff	vfpfcnvrt@fp,fputc@fp
  6437  002950  0060  F120  F00B   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6438  002956  ECF7  F019         	call	_fputc	;wreg free
  6439                           
  6440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  6441  00295A  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6442  00295C  6ED9               	movwf	fsr2l,c
  6443  00295E  6ADA               	clrf	fsr2h,c
  6444  002960  2ADF               	incf	indf2,f,c
  6445  002962  D7D7               	goto	l4817
  6446  002964                     __end_of_vfpfcnvrt:
  6447                           	opt callstack 0
  6448                           
  6449 ;; *************** function _stoa *****************
  6450 ;; Defined at:
  6451 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6452 ;; Parameters:    Size  Location     Type
  6453 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6454 ;;		 -> sprintf@f(5), NULL(0), 
  6455 ;;  s               2   18[COMRAM] PTR unsigned char 
  6456 ;;		 -> ?_printf(2), ?_sprintf(2), STR_15(4), STR_13(4), 
  6457 ;;		 -> STR_11(4), STR_9(4), STR_7(4), STR_5(4), 
  6458 ;; Auto vars:     Size  Location     Type
  6459 ;;  nuls            7   21[COMRAM] unsigned char [7]
  6460 ;;  l               2   36[COMRAM] int 
  6461 ;;  p               2   34[COMRAM] int 
  6462 ;;  cp              2   32[COMRAM] PTR unsigned char 
  6463 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), STR_15(4), 
  6464 ;;		 -> STR_13(4), STR_11(4), STR_9(4), STR_7(4), 
  6465 ;;		 -> STR_5(4), 
  6466 ;;  w               2   30[COMRAM] int 
  6467 ;;  i               2   28[COMRAM] int 
  6468 ;; Return value:  Size  Location     Type
  6469 ;;                  2   16[COMRAM] int 
  6470 ;; Registers used:
  6471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6472 ;; Tracked objects:
  6473 ;;		On entry : 3F/0
  6474 ;;		On exit  : 0/0
  6475 ;;		Unchanged: 0/0
  6476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6477 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6478 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6479 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6480 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6481 ;;Total ram usage:       22 bytes
  6482 ;; Hardware stack levels used:    1
  6483 ;; Hardware stack levels required when called:    7
  6484 ;; This function calls:
  6485 ;;		_fputc
  6486 ;;		_strlen
  6487 ;; This function is called by:
  6488 ;;		_vfpfcnvrt
  6489 ;; This function uses a non-reentrant model
  6490 ;;
  6491                           
  6492                           	psect	text46
  6493  002964                     __ptext46:
  6494                           	opt callstack 0
  6495  002964                     _stoa:
  6496                           	opt callstack 19
  6497                           
  6498                           ; BSR set to: 0
  6499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  6500                           
  6501                           ;incstack = 0
  6502  002964  EE20  F194         	lfsr	2,stoa@F1139
  6503  002968  EE10  F016         	lfsr	1,stoa@nuls
  6504  00296C  0E06               	movlw	6
  6505  00296E                     u3681:
  6506  00296E  006F FF6F FFE3     	movff	plusw2,plusw1
  6507  002974  06E8               	decf	wreg,f,c
  6508  002976  E2FB               	bc	u3681
  6509                           
  6510                           ; BSR set to: 0
  6511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  6512  002978  0060  F04C  F021   	movff	stoa@s,stoa@cp
  6513  00297E  0060  F050  F022   	movff	stoa@s+1,stoa@cp+1
  6514                           
  6515                           ; BSR set to: 0
  6516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  6517  002984  5021               	movf	stoa@cp^0,w,c
  6518  002986  1022               	iorwf	(stoa@cp+1)^0,w,c
  6519  002988  A4D8               	btfss	status,2,c
  6520  00298A  D003               	goto	l4735
  6521                           
  6522                           ; BSR set to: 0
  6523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  6524  00298C  0E16               	movlw	low stoa@nuls
  6525  00298E  6E21               	movwf	stoa@cp^0,c
  6526  002990  6A22               	clrf	(stoa@cp+1)^0,c
  6527  002992                     l4735:
  6528                           
  6529                           ; BSR set to: 0
  6530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  6531  002992  0060  F084  F006   	movff	stoa@cp,strlen@s
  6532  002998  0060  F088  F007   	movff	stoa@cp+1,strlen@s+1
  6533  00299E  EC91  F01B         	call	_strlen	;wreg free
  6534  0029A2  0060  F018  F025   	movff	?_strlen,stoa@l
  6535  0029A8  0060  F01C  F026   	movff	?_strlen+1,stoa@l+1
  6536                           
  6537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  6538  0029AE  0060  F3C8  F023   	movff	_prec,stoa@p
  6539  0029B4  0060  F3CC  F024   	movff	_prec+1,stoa@p+1
  6540                           
  6541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  6542  0029BA  BE24               	btfsc	(stoa@p+1)^0,7,c
  6543  0029BC  D010               	goto	l1339
  6544  0029BE  5025               	movf	stoa@l^0,w,c
  6545  0029C0  5C23               	subwf	stoa@p^0,w,c
  6546  0029C2  5024               	movf	(stoa@p+1)^0,w,c
  6547  0029C4  0A80               	xorlw	128
  6548  0029C6  6E15               	movwf	??_stoa^0,c
  6549  0029C8  5026               	movf	(stoa@l+1)^0,w,c
  6550  0029CA  0A80               	xorlw	128
  6551  0029CC  5815               	subwfb	??_stoa^0,w,c
  6552  0029CE  B0D8               	btfsc	status,0,c
  6553  0029D0  D006               	goto	l1339
  6554  0029D2  0060  F08C  F025   	movff	stoa@p,stoa@l
  6555  0029D8  0060  F090  F026   	movff	stoa@p+1,stoa@l+1
  6556  0029DE                     l1339:
  6557                           
  6558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
  6559  0029DE  0060  F094  F023   	movff	stoa@l,stoa@p
  6560  0029E4  0060  F098  F024   	movff	stoa@l+1,stoa@p+1
  6561                           
  6562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
  6563  0029EA  0060  F5A0  F01F   	movff	_width,stoa@w
  6564  0029F0  0060  F5A4  F020   	movff	_width+1,stoa@w+1
  6565                           
  6566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  6567  0029F6  A056               	btfss	_flags^0,0,c
  6568  0029F8  D00F               	goto	l4749
  6569  0029FA  D018               	goto	u3730
  6570  0029FC                     l4745:
  6571                           
  6572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  6573  0029FC  0E00               	movlw	0
  6574  0029FE  6E09               	movwf	(fputc@c+1)^0,c
  6575  002A00  0E20               	movlw	32
  6576  002A02  6E08               	movwf	fputc@c^0,c
  6577  002A04  0060  F044  F00A   	movff	stoa@fp,fputc@fp
  6578  002A0A  0060  F048  F00B   	movff	stoa@fp+1,fputc@fp+1
  6579  002A10  ECF7  F019         	call	_fputc	;wreg free
  6580                           
  6581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
  6582  002A14  4A25               	infsnz	stoa@l^0,f,c
  6583  002A16  2A26               	incf	(stoa@l+1)^0,f,c
  6584  002A18                     l4749:
  6585                           
  6586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  6587  002A18  501F               	movf	stoa@w^0,w,c
  6588  002A1A  5C25               	subwf	stoa@l^0,w,c
  6589  002A1C  5026               	movf	(stoa@l+1)^0,w,c
  6590  002A1E  0A80               	xorlw	128
  6591  002A20  6E15               	movwf	??_stoa^0,c
  6592  002A22  5020               	movf	(stoa@w+1)^0,w,c
  6593  002A24  0A80               	xorlw	128
  6594  002A26  5815               	subwfb	??_stoa^0,w,c
  6595  002A28  A0D8               	btfss	status,0,c
  6596  002A2A  D7E8               	goto	l4745
  6597  002A2C                     u3730:
  6598                           
  6599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  6600  002A2C  0E00               	movlw	0
  6601  002A2E  6E1E               	movwf	(stoa@i+1)^0,c
  6602  002A30  0E00               	movlw	0
  6603  002A32  6E1D               	movwf	stoa@i^0,c
  6604                           
  6605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  6606  002A34  D025               	goto	l4759
  6607  002A36                     l4753:
  6608                           
  6609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  6610  002A36  0060  F087  FFF6   	movff	stoa@cp,tblptrl
  6611  002A3C  0060  F08B  FFF7   	movff	stoa@cp+1,tblptrh
  6612  002A42  0E00               	movlw	low (__smallconst shr (0+16))
  6613  002A44  6EF8               	movwf	tblptru,c
  6614  002A46  0E1F               	movlw	(high __ramtop+-1)
  6615  002A48  64F7               	cpfsgt	tblptrh,c
  6616  002A4A  D003               	bra	u3747
  6617  002A4C  0008               	tblrd		*
  6618  002A4E  50F5               	movf	tablat,w,c
  6619  002A50  D007               	bra	u3740
  6620  002A52                     u3747:
  6621  002A52  006F FFDB FFE1     	movff	tblptrl,fsr1l
  6622  002A58  006F FFDF FFE2     	movff	tblptrh,fsr1h
  6623  002A5E  50E7               	movf	indf1,w,c
  6624  002A60                     u3740:
  6625  002A60  6E15               	movwf	??_stoa^0,c
  6626  002A62  5015               	movf	??_stoa^0,w,c
  6627  002A64  6E08               	movwf	fputc@c^0,c
  6628  002A66  6A09               	clrf	(fputc@c+1)^0,c
  6629  002A68  0060  F044  F00A   	movff	stoa@fp,fputc@fp
  6630  002A6E  0060  F048  F00B   	movff	stoa@fp+1,fputc@fp+1
  6631  002A74  ECF7  F019         	call	_fputc	;wreg free
  6632                           
  6633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  6634  002A78  4A21               	infsnz	stoa@cp^0,f,c
  6635  002A7A  2A22               	incf	(stoa@cp+1)^0,f,c
  6636                           
  6637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
  6638  002A7C  4A1D               	infsnz	stoa@i^0,f,c
  6639  002A7E  2A1E               	incf	(stoa@i+1)^0,f,c
  6640  002A80                     l4759:
  6641                           
  6642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  6643  002A80  5023               	movf	stoa@p^0,w,c
  6644  002A82  5C1D               	subwf	stoa@i^0,w,c
  6645  002A84  501E               	movf	(stoa@i+1)^0,w,c
  6646  002A86  0A80               	xorlw	128
  6647  002A88  6E15               	movwf	??_stoa^0,c
  6648  002A8A  5024               	movf	(stoa@p+1)^0,w,c
  6649  002A8C  0A80               	xorlw	128
  6650  002A8E  5815               	subwfb	??_stoa^0,w,c
  6651  002A90  A0D8               	btfss	status,0,c
  6652  002A92  D7D1               	goto	l4753
  6653                           
  6654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  6655  002A94  B056               	btfsc	_flags^0,0,c
  6656  002A96  D00F               	goto	l4767
  6657  002A98  D018               	goto	u3770
  6658  002A9A                     l4763:
  6659                           
  6660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  6661  002A9A  0E00               	movlw	0
  6662  002A9C  6E09               	movwf	(fputc@c+1)^0,c
  6663  002A9E  0E20               	movlw	32
  6664  002AA0  6E08               	movwf	fputc@c^0,c
  6665  002AA2  0060  F044  F00A   	movff	stoa@fp,fputc@fp
  6666  002AA8  0060  F048  F00B   	movff	stoa@fp+1,fputc@fp+1
  6667  002AAE  ECF7  F019         	call	_fputc	;wreg free
  6668                           
  6669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
  6670  002AB2  4A25               	infsnz	stoa@l^0,f,c
  6671  002AB4  2A26               	incf	(stoa@l+1)^0,f,c
  6672  002AB6                     l4767:
  6673                           
  6674                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  6675  002AB6  501F               	movf	stoa@w^0,w,c
  6676  002AB8  5C25               	subwf	stoa@l^0,w,c
  6677  002ABA  5026               	movf	(stoa@l+1)^0,w,c
  6678  002ABC  0A80               	xorlw	128
  6679  002ABE  6E15               	movwf	??_stoa^0,c
  6680  002AC0  5020               	movf	(stoa@w+1)^0,w,c
  6681  002AC2  0A80               	xorlw	128
  6682  002AC4  5815               	subwfb	??_stoa^0,w,c
  6683  002AC6  A0D8               	btfss	status,0,c
  6684  002AC8  D7E8               	goto	l4763
  6685  002ACA                     u3770:
  6686                           
  6687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
  6688                           
  6689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 586:     }
  6690  002ACA  0060  F094  F011   	movff	stoa@l,?_stoa
  6691  002AD0  0060  F098  F012   	movff	stoa@l+1,?_stoa+1
  6692  002AD6  0012               	return		;funcret
  6693  002AD8                     __end_of_stoa:
  6694                           	opt callstack 0
  6695                           
  6696 ;; *************** function _dtoa *****************
  6697 ;; Defined at:
  6698 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6699 ;; Parameters:    Size  Location     Type
  6700 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  6701 ;;		 -> sprintf@f(5), NULL(0), 
  6702 ;;  d               8   36[COMRAM] long long 
  6703 ;; Auto vars:     Size  Location     Type
  6704 ;;  n               8   60[COMRAM] long long 
  6705 ;;  i               2   68[COMRAM] int 
  6706 ;;  s               2   58[COMRAM] int 
  6707 ;;  w               2   56[COMRAM] int 
  6708 ;;  p               2   54[COMRAM] int 
  6709 ;; Return value:  Size  Location     Type
  6710 ;;                  2   34[COMRAM] int 
  6711 ;; Registers used:
  6712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6713 ;; Tracked objects:
  6714 ;;		On entry : 3F/0
  6715 ;;		On exit  : 0/0
  6716 ;;		Unchanged: 0/0
  6717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6718 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6719 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6720 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6721 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6722 ;;Total ram usage:       36 bytes
  6723 ;; Hardware stack levels used:    1
  6724 ;; Hardware stack levels required when called:    9
  6725 ;; This function calls:
  6726 ;;		___aodiv
  6727 ;;		___aomod
  6728 ;;		_abs
  6729 ;;		_pad
  6730 ;; This function is called by:
  6731 ;;		_vfpfcnvrt
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text47
  6736  00204A                     __ptext47:
  6737                           	opt callstack 0
  6738  00204A                     _dtoa:
  6739                           	opt callstack 17
  6740                           
  6741                           ; BSR set to: 0
  6742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
  6743                           
  6744                           ;incstack = 0
  6745  00204A  0060  F094  F03D   	movff	dtoa@d,dtoa@n
  6746  002050  0060  F098  F03E   	movff	dtoa@d+1,dtoa@n+1
  6747  002056  0060  F09C  F03F   	movff	dtoa@d+2,dtoa@n+2
  6748  00205C  0060  F0A0  F040   	movff	dtoa@d+3,dtoa@n+3
  6749  002062  0060  F0A4  F041   	movff	dtoa@d+4,dtoa@n+4
  6750  002068  0060  F0A8  F042   	movff	dtoa@d+5,dtoa@n+5
  6751  00206E  0060  F0AC  F043   	movff	dtoa@d+6,dtoa@n+6
  6752  002074  0060  F0B0  F044   	movff	dtoa@d+7,dtoa@n+7
  6753                           
  6754                           ; BSR set to: 0
  6755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  6756  00207A  AE44               	btfss	(dtoa@n+7)^0,7,c
  6757  00207C  D002               	goto	u3530
  6758  00207E  0E01               	movlw	1
  6759  002080  D001               	goto	u3540
  6760  002082                     u3530:
  6761  002082  0E00               	movlw	0
  6762  002084                     u3540:
  6763  002084  6E3B               	movwf	dtoa@s^0,c
  6764  002086  6A3C               	clrf	(dtoa@s+1)^0,c
  6765                           
  6766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  6767  002088  503B               	movf	dtoa@s^0,w,c
  6768  00208A  103C               	iorwf	(dtoa@s+1)^0,w,c
  6769  00208C  B4D8               	btfsc	status,2,c
  6770  00208E  D010               	goto	l4671
  6771                           
  6772                           ; BSR set to: 0
  6773                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  6774  002090  1E44               	comf	(dtoa@n+7)^0,f,c
  6775  002092  1E43               	comf	(dtoa@n+6)^0,f,c
  6776  002094  1E42               	comf	(dtoa@n+5)^0,f,c
  6777  002096  1E41               	comf	(dtoa@n+4)^0,f,c
  6778  002098  1E40               	comf	(dtoa@n+3)^0,f,c
  6779  00209A  1E3F               	comf	(dtoa@n+2)^0,f,c
  6780  00209C  1E3E               	comf	(dtoa@n+1)^0,f,c
  6781  00209E  6C3D               	negf	dtoa@n^0,c
  6782  0020A0  0E00               	movlw	0
  6783  0020A2  223E               	addwfc	(dtoa@n+1)^0,f,c
  6784  0020A4  223F               	addwfc	(dtoa@n+2)^0,f,c
  6785  0020A6  2240               	addwfc	(dtoa@n+3)^0,f,c
  6786  0020A8  2241               	addwfc	(dtoa@n+4)^0,f,c
  6787  0020AA  2242               	addwfc	(dtoa@n+5)^0,f,c
  6788  0020AC  2243               	addwfc	(dtoa@n+6)^0,f,c
  6789  0020AE  2244               	addwfc	(dtoa@n+7)^0,f,c
  6790  0020B0                     l4671:
  6791                           
  6792                           ; BSR set to: 0
  6793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  6794  0020B0  AFF3               	btfss	(_prec+1)& (0+255),7,b
  6795                           
  6796                           ; BSR set to: 0
  6797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  6798  0020B2  9256               	bcf	_flags^0,1,c
  6799                           
  6800                           ; BSR set to: 0
  6801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  6802  0020B4  BFF3               	btfsc	(_prec+1)& (0+255),7,b
  6803  0020B6  D005               	goto	u3570
  6804  0020B8  51F3               	movf	(_prec+1)& (0+255),w,b
  6805  0020BA  E108               	bnz	l1310
  6806  0020BC  05F2               	decf	_prec& (0+255),w,b
  6807  0020BE  B0D8               	btfsc	status,0,c
  6808  0020C0  D005               	goto	l1310
  6809  0020C2                     u3570:
  6810                           
  6811                           ; BSR set to: 0
  6812  0020C2  0E00               	movlw	0
  6813  0020C4  6E38               	movwf	(dtoa@p+1)^0,c
  6814  0020C6  0E01               	movlw	1
  6815  0020C8  6E37               	movwf	dtoa@p^0,c
  6816  0020CA  D006               	goto	l1312
  6817  0020CC                     l1310:
  6818                           
  6819                           ; BSR set to: 0
  6820  0020CC  0060  F3C8  F037   	movff	_prec,dtoa@p
  6821  0020D2  0060  F3CC  F038   	movff	_prec+1,dtoa@p+1
  6822  0020D8                     l1312:
  6823                           
  6824                           ; BSR set to: 0
  6825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
  6826  0020D8  0060  F5A0  F039   	movff	_width,dtoa@w
  6827  0020DE  0060  F5A4  F03A   	movff	_width+1,dtoa@w+1
  6828                           
  6829                           ; BSR set to: 0
  6830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  6831  0020E4  503B               	movf	dtoa@s^0,w,c
  6832  0020E6  103C               	iorwf	(dtoa@s+1)^0,w,c
  6833  0020E8  A4D8               	btfss	status,2,c
  6834  0020EA  D002               	goto	u3590
  6835                           
  6836                           ; BSR set to: 0
  6837  0020EC  A456               	btfss	_flags^0,2,c
  6838  0020EE  D003               	goto	l4685
  6839  0020F0                     u3590:
  6840                           
  6841                           ; BSR set to: 0
  6842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
  6843  0020F0  0639               	decf	dtoa@w^0,f,c
  6844  0020F2  A0D8               	btfss	status,0,c
  6845  0020F4  063A               	decf	(dtoa@w+1)^0,f,c
  6846  0020F6                     l4685:
  6847                           
  6848                           ; BSR set to: 0
  6849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  6850  0020F6  0E00               	movlw	0
  6851  0020F8  6E46               	movwf	(dtoa@i+1)^0,c
  6852  0020FA  0E1F               	movlw	31
  6853  0020FC  6E45               	movwf	dtoa@i^0,c
  6854                           
  6855                           ; BSR set to: 0
  6856                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  6857  0020FE  0E00               	movlw	0
  6858  002100  0101               	movlb	1	; () banked
  6859  002102  6F93               	movwf	(_dbuf+31)& (0+255),b
  6860                           
  6861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6862  002104  D09E               	goto	l4699
  6863  002106                     l4689:
  6864                           
  6865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
  6866  002106  0645               	decf	dtoa@i^0,f,c
  6867  002108  A0D8               	btfss	status,0,c
  6868  00210A  0646               	decf	(dtoa@i+1)^0,f,c
  6869                           
  6870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  6871  00210C  0E74               	movlw	low _dbuf
  6872  00210E  2445               	addwf	dtoa@i^0,w,c
  6873  002110  6ED9               	movwf	fsr2l,c
  6874  002112  0E01               	movlw	high _dbuf
  6875  002114  2046               	addwfc	(dtoa@i+1)^0,w,c
  6876  002116  6EDA               	movwf	fsr2h,c
  6877  002118  0060  F0F4  F006   	movff	dtoa@n,___aomod@dividend
  6878  00211E  0060  F0F8  F007   	movff	dtoa@n+1,___aomod@dividend+1
  6879  002124  0060  F0FC  F008   	movff	dtoa@n+2,___aomod@dividend+2
  6880  00212A  0060  F100  F009   	movff	dtoa@n+3,___aomod@dividend+3
  6881  002130  0060  F104  F00A   	movff	dtoa@n+4,___aomod@dividend+4
  6882  002136  0060  F108  F00B   	movff	dtoa@n+5,___aomod@dividend+5
  6883  00213C  0060  F10C  F00C   	movff	dtoa@n+6,___aomod@dividend+6
  6884  002142  0060  F110  F00D   	movff	dtoa@n+7,___aomod@dividend+7
  6885  002148  0E0A               	movlw	10
  6886  00214A  6E0E               	movwf	___aomod@divisor^0,c
  6887  00214C  0E00               	movlw	0
  6888  00214E  6E0F               	movwf	(___aomod@divisor+1)^0,c
  6889  002150  0E00               	movlw	0
  6890  002152  6E10               	movwf	(___aomod@divisor+2)^0,c
  6891  002154  0E00               	movlw	0
  6892  002156  6E11               	movwf	(___aomod@divisor+3)^0,c
  6893  002158  0E00               	movlw	0
  6894  00215A  6E12               	movwf	(___aomod@divisor+4)^0,c
  6895  00215C  0E00               	movlw	0
  6896  00215E  6E13               	movwf	(___aomod@divisor+5)^0,c
  6897  002160  0E00               	movlw	0
  6898  002162  6E14               	movwf	(___aomod@divisor+6)^0,c
  6899  002164  0E00               	movlw	0
  6900  002166  6E15               	movwf	(___aomod@divisor+7)^0,c
  6901  002168  EC18  F016         	call	___aomod	;wreg free
  6902  00216C  0060  F018  F02D   	movff	?___aomod,??_dtoa
  6903  002172  0060  F01C  F02E   	movff	?___aomod+1,??_dtoa+1
  6904  002178  0060  F020  F02F   	movff	?___aomod+2,??_dtoa+2
  6905  00217E  0060  F024  F030   	movff	?___aomod+3,??_dtoa+3
  6906  002184  0060  F028  F031   	movff	?___aomod+4,??_dtoa+4
  6907  00218A  0060  F02C  F032   	movff	?___aomod+5,??_dtoa+5
  6908  002190  0060  F030  F033   	movff	?___aomod+6,??_dtoa+6
  6909  002196  0060  F034  F034   	movff	?___aomod+7,??_dtoa+7
  6910  00219C  0060  F0B4  F018   	movff	??_dtoa,abs@a
  6911  0021A2  0060  F0BC  F019   	movff	??_dtoa+2,abs@a+1
  6912  0021A8  EC84  F01C         	call	_abs	;wreg free
  6913  0021AC  5018               	movf	?_abs^0,w,c
  6914  0021AE  0F30               	addlw	48
  6915  0021B0  6EDF               	movwf	indf2,c
  6916                           
  6917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
  6918  0021B2  0637               	decf	dtoa@p^0,f,c
  6919  0021B4  A0D8               	btfss	status,0,c
  6920  0021B6  0638               	decf	(dtoa@p+1)^0,f,c
  6921                           
  6922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
  6923  0021B8  0639               	decf	dtoa@w^0,f,c
  6924  0021BA  A0D8               	btfss	status,0,c
  6925  0021BC  063A               	decf	(dtoa@w+1)^0,f,c
  6926                           
  6927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  6928  0021BE  0060  F0F4  F006   	movff	dtoa@n,___aodiv@dividend
  6929  0021C4  0060  F0F8  F007   	movff	dtoa@n+1,___aodiv@dividend+1
  6930  0021CA  0060  F0FC  F008   	movff	dtoa@n+2,___aodiv@dividend+2
  6931  0021D0  0060  F100  F009   	movff	dtoa@n+3,___aodiv@dividend+3
  6932  0021D6  0060  F104  F00A   	movff	dtoa@n+4,___aodiv@dividend+4
  6933  0021DC  0060  F108  F00B   	movff	dtoa@n+5,___aodiv@dividend+5
  6934  0021E2  0060  F10C  F00C   	movff	dtoa@n+6,___aodiv@dividend+6
  6935  0021E8  0060  F110  F00D   	movff	dtoa@n+7,___aodiv@dividend+7
  6936  0021EE  0E0A               	movlw	10
  6937  0021F0  6E0E               	movwf	___aodiv@divisor^0,c
  6938  0021F2  0E00               	movlw	0
  6939  0021F4  6E0F               	movwf	(___aodiv@divisor+1)^0,c
  6940  0021F6  0E00               	movlw	0
  6941  0021F8  6E10               	movwf	(___aodiv@divisor+2)^0,c
  6942  0021FA  0E00               	movlw	0
  6943  0021FC  6E11               	movwf	(___aodiv@divisor+3)^0,c
  6944  0021FE  0E00               	movlw	0
  6945  002200  6E12               	movwf	(___aodiv@divisor+4)^0,c
  6946  002202  0E00               	movlw	0
  6947  002204  6E13               	movwf	(___aodiv@divisor+5)^0,c
  6948  002206  0E00               	movlw	0
  6949  002208  6E14               	movwf	(___aodiv@divisor+6)^0,c
  6950  00220A  0E00               	movlw	0
  6951  00220C  6E15               	movwf	(___aodiv@divisor+7)^0,c
  6952  00220E  EC6C  F015         	call	___aodiv	;wreg free
  6953  002212  0060  F018  F03D   	movff	?___aodiv,dtoa@n
  6954  002218  0060  F01C  F03E   	movff	?___aodiv+1,dtoa@n+1
  6955  00221E  0060  F020  F03F   	movff	?___aodiv+2,dtoa@n+2
  6956  002224  0060  F024  F040   	movff	?___aodiv+3,dtoa@n+3
  6957  00222A  0060  F028  F041   	movff	?___aodiv+4,dtoa@n+4
  6958  002230  0060  F02C  F042   	movff	?___aodiv+5,dtoa@n+5
  6959  002236  0060  F030  F043   	movff	?___aodiv+6,dtoa@n+6
  6960  00223C  0060  F034  F044   	movff	?___aodiv+7,dtoa@n+7
  6961  002242                     l4699:
  6962                           
  6963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6964  002242  BE46               	btfsc	(dtoa@i+1)^0,7,c
  6965  002244  D01F               	goto	u3640
  6966  002246  5046               	movf	(dtoa@i+1)^0,w,c
  6967  002248  E103               	bnz	u3600
  6968  00224A  0445               	decf	dtoa@i^0,w,c
  6969  00224C  A0D8               	btfss	status,0,c
  6970  00224E  D01A               	goto	u3640
  6971  002250                     u3600:
  6972  002250  503D               	movf	dtoa@n^0,w,c
  6973  002252  103E               	iorwf	(dtoa@n+1)^0,w,c
  6974  002254  103F               	iorwf	(dtoa@n+2)^0,w,c
  6975  002256  1040               	iorwf	(dtoa@n+3)^0,w,c
  6976  002258  1041               	iorwf	(dtoa@n+4)^0,w,c
  6977  00225A  1042               	iorwf	(dtoa@n+5)^0,w,c
  6978  00225C  1043               	iorwf	(dtoa@n+6)^0,w,c
  6979  00225E  1044               	iorwf	(dtoa@n+7)^0,w,c
  6980  002260  A4D8               	btfss	status,2,c
  6981  002262  D751               	goto	l4689
  6982  002264  BE38               	btfsc	(dtoa@p+1)^0,7,c
  6983  002266  D005               	goto	u3620
  6984  002268  5038               	movf	(dtoa@p+1)^0,w,c
  6985  00226A  E102               	bnz	u3621
  6986  00226C  0437               	decf	dtoa@p^0,w,c
  6987  00226E  B0D8               	btfsc	status,0,c
  6988  002270                     u3621:
  6989  002270  D74A               	goto	l4689
  6990  002272                     u3620:
  6991  002272  BE3A               	btfsc	(dtoa@w+1)^0,7,c
  6992  002274  D007               	goto	u3640
  6993  002276  503A               	movf	(dtoa@w+1)^0,w,c
  6994  002278  E103               	bnz	u3630
  6995  00227A  0439               	decf	dtoa@w^0,w,c
  6996  00227C  A0D8               	btfss	status,0,c
  6997  00227E  D002               	goto	u3640
  6998  002280                     u3630:
  6999  002280  B256               	btfsc	_flags^0,1,c
  7000  002282  D741               	goto	l4689
  7001  002284                     u3640:
  7002                           
  7003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  7004  002284  503B               	movf	dtoa@s^0,w,c
  7005  002286  103C               	iorwf	(dtoa@s+1)^0,w,c
  7006  002288  A4D8               	btfss	status,2,c
  7007  00228A  D002               	goto	u3660
  7008  00228C  A456               	btfss	_flags^0,2,c
  7009  00228E  D018               	goto	l4723
  7010  002290                     u3660:
  7011                           
  7012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
  7013  002290  0645               	decf	dtoa@i^0,f,c
  7014  002292  A0D8               	btfss	status,0,c
  7015  002294  0646               	decf	(dtoa@i+1)^0,f,c
  7016                           
  7017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  7018  002296  503B               	movf	dtoa@s^0,w,c
  7019  002298  103C               	iorwf	(dtoa@s+1)^0,w,c
  7020  00229A  A4D8               	btfss	status,2,c
  7021  00229C  D004               	goto	l4719
  7022  00229E  0E00               	movlw	0
  7023  0022A0  6E36               	movwf	(_dtoa$2597+1)^0,c
  7024  0022A2  0E2B               	movlw	43
  7025  0022A4  D003               	goto	L10
  7026  0022A6                     l4719:
  7027  0022A6  0E00               	movlw	0
  7028  0022A8  6E36               	movwf	(_dtoa$2597+1)^0,c
  7029  0022AA  0E2D               	movlw	45
  7030  0022AC                     L10:
  7031  0022AC  6E35               	movwf	_dtoa$2597^0,c
  7032  0022AE  0E74               	movlw	low _dbuf
  7033  0022B0  2445               	addwf	dtoa@i^0,w,c
  7034  0022B2  6ED9               	movwf	fsr2l,c
  7035  0022B4  0E01               	movlw	high _dbuf
  7036  0022B6  2046               	addwfc	(dtoa@i+1)^0,w,c
  7037  0022B8  6EDA               	movwf	fsr2h,c
  7038  0022BA  0060  F0D7  FFDF   	movff	_dtoa$2597,indf2
  7039  0022C0                     l4723:
  7040                           
  7041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  7042  0022C0  0060  F08C  F018   	movff	dtoa@fp,pad@fp
  7043  0022C6  0060  F090  F019   	movff	dtoa@fp+1,pad@fp+1
  7044  0022CC  0E74               	movlw	low _dbuf
  7045  0022CE  2445               	addwf	dtoa@i^0,w,c
  7046  0022D0  6E1A               	movwf	pad@buf^0,c
  7047  0022D2  0E01               	movlw	high _dbuf
  7048  0022D4  2046               	addwfc	(dtoa@i+1)^0,w,c
  7049  0022D6  6E1B               	movwf	(pad@buf+1)^0,c
  7050  0022D8  0060  F0E4  F01C   	movff	dtoa@w,pad@p
  7051  0022DE  0060  F0E8  F01D   	movff	dtoa@w+1,pad@p+1
  7052  0022E4  EC54  F018         	call	_pad	;wreg free
  7053  0022E8  0060  F060  F023   	movff	?_pad,?_dtoa
  7054  0022EE  0060  F064  F024   	movff	?_pad+1,?_dtoa+1
  7055  0022F4  0012               	return		;funcret
  7056  0022F6                     __end_of_dtoa:
  7057                           	opt callstack 0
  7058                           
  7059 ;; *************** function _pad *****************
  7060 ;; Defined at:
  7061 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7062 ;; Parameters:    Size  Location     Type
  7063 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  7064 ;;		 -> sprintf@f(5), NULL(0), 
  7065 ;;  buf             2   25[COMRAM] PTR unsigned char 
  7066 ;;		 -> dbuf(32), 
  7067 ;;  p               2   27[COMRAM] int 
  7068 ;; Auto vars:     Size  Location     Type
  7069 ;;  w               2   32[COMRAM] int 
  7070 ;;  i               2   30[COMRAM] int 
  7071 ;; Return value:  Size  Location     Type
  7072 ;;                  2   23[COMRAM] int 
  7073 ;; Registers used:
  7074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7075 ;; Tracked objects:
  7076 ;;		On entry : 0/1
  7077 ;;		On exit  : 0/0
  7078 ;;		Unchanged: 0/0
  7079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7080 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7081 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7082 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7083 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7084 ;;Total ram usage:       11 bytes
  7085 ;; Hardware stack levels used:    1
  7086 ;; Hardware stack levels required when called:    8
  7087 ;; This function calls:
  7088 ;;		_fputc
  7089 ;;		_fputs
  7090 ;;		_strlen
  7091 ;; This function is called by:
  7092 ;;		_dtoa
  7093 ;; This function uses a non-reentrant model
  7094 ;;
  7095                           
  7096                           	psect	text48
  7097  0030A8                     __ptext48:
  7098                           	opt callstack 0
  7099  0030A8                     _pad:
  7100                           	opt callstack 17
  7101                           
  7102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  7103                           
  7104                           ;incstack = 0
  7105  0030A8  A056               	btfss	_flags^0,0,c
  7106  0030AA  D00E               	goto	l4563
  7107                           
  7108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  7109  0030AC  0060  F068  F011   	movff	pad@buf,fputs@s
  7110  0030B2  0060  F06C  F012   	movff	pad@buf+1,fputs@s+1
  7111  0030B8  0060  F060  F013   	movff	pad@fp,fputs@fp
  7112  0030BE  0060  F064  F014   	movff	pad@fp+1,fputs@fp+1
  7113  0030C4  EC65  F01C         	call	_fputs	;wreg free
  7114  0030C8                     l4563:
  7115                           
  7116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  7117  0030C8  BE1D               	btfsc	(pad@p+1)^0,7,c
  7118  0030CA  D007               	goto	l4567
  7119  0030CC  0060  F070  F021   	movff	pad@p,pad@w
  7120  0030D2  0060  F074  F022   	movff	pad@p+1,pad@w+1
  7121  0030D8  D004               	goto	l1299
  7122  0030DA                     l4567:
  7123  0030DA  0E00               	movlw	0
  7124  0030DC  6E22               	movwf	(pad@w+1)^0,c
  7125  0030DE  0E00               	movlw	0
  7126  0030E0  6E21               	movwf	pad@w^0,c
  7127  0030E2                     l1299:
  7128                           
  7129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  7130  0030E2  0E00               	movlw	0
  7131  0030E4  6E20               	movwf	(pad@i+1)^0,c
  7132  0030E6  0E00               	movlw	0
  7133  0030E8  6E1F               	movwf	pad@i^0,c
  7134                           
  7135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  7136  0030EA  D00E               	goto	l4573
  7137  0030EC                     l4569:
  7138                           
  7139                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  7140  0030EC  0E00               	movlw	0
  7141  0030EE  6E09               	movwf	(fputc@c+1)^0,c
  7142  0030F0  0E20               	movlw	32
  7143  0030F2  6E08               	movwf	fputc@c^0,c
  7144  0030F4  0060  F060  F00A   	movff	pad@fp,fputc@fp
  7145  0030FA  0060  F064  F00B   	movff	pad@fp+1,fputc@fp+1
  7146  003100  ECF7  F019         	call	_fputc	;wreg free
  7147                           
  7148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
  7149  003104  4A1F               	infsnz	pad@i^0,f,c
  7150  003106  2A20               	incf	(pad@i+1)^0,f,c
  7151  003108                     l4573:
  7152                           
  7153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  7154  003108  5021               	movf	pad@w^0,w,c
  7155  00310A  5C1F               	subwf	pad@i^0,w,c
  7156  00310C  5020               	movf	(pad@i+1)^0,w,c
  7157  00310E  0A80               	xorlw	128
  7158  003110  6E1E               	movwf	??_pad^0,c
  7159  003112  5022               	movf	(pad@w+1)^0,w,c
  7160  003114  0A80               	xorlw	128
  7161  003116  581E               	subwfb	??_pad^0,w,c
  7162  003118  A0D8               	btfss	status,0,c
  7163  00311A  D7E8               	goto	l4569
  7164                           
  7165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  7166  00311C  B056               	btfsc	_flags^0,0,c
  7167  00311E  D00E               	goto	l4577
  7168                           
  7169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  7170  003120  0060  F068  F011   	movff	pad@buf,fputs@s
  7171  003126  0060  F06C  F012   	movff	pad@buf+1,fputs@s+1
  7172  00312C  0060  F060  F013   	movff	pad@fp,fputs@fp
  7173  003132  0060  F064  F014   	movff	pad@fp+1,fputs@fp+1
  7174  003138  EC65  F01C         	call	_fputs	;wreg free
  7175  00313C                     l4577:
  7176                           
  7177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  7178  00313C  0060  F068  F006   	movff	pad@buf,strlen@s
  7179  003142  0060  F06C  F007   	movff	pad@buf+1,strlen@s+1
  7180  003148  EC91  F01B         	call	_strlen	;wreg free
  7181  00314C  5021               	movf	pad@w^0,w,c
  7182  00314E  2406               	addwf	?_strlen^0,w,c
  7183  003150  6E18               	movwf	?_pad^0,c
  7184  003152  5022               	movf	(pad@w+1)^0,w,c
  7185  003154  2007               	addwfc	(?_strlen+1)^0,w,c
  7186  003156  6E19               	movwf	(?_pad+1)^0,c
  7187  003158  0012               	return		;funcret
  7188  00315A                     __end_of_pad:
  7189                           	opt callstack 0
  7190                           
  7191 ;; *************** function _strlen *****************
  7192 ;; Defined at:
  7193 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
  7194 ;; Parameters:    Size  Location     Type
  7195 ;;  s               2    5[COMRAM] PTR const unsigned char 
  7196 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  7197 ;;		 -> STR_15(4), STR_13(4), STR_11(4), STR_9(4), 
  7198 ;;		 -> STR_7(4), STR_5(4), STR_3(11), work_sw@buffer(128), 
  7199 ;; Auto vars:     Size  Location     Type
  7200 ;;  a               2    7[COMRAM] PTR const unsigned char 
  7201 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  7202 ;;		 -> STR_15(4), STR_13(4), STR_11(4), STR_9(4), 
  7203 ;;		 -> STR_7(4), STR_5(4), STR_3(11), work_sw@buffer(128), 
  7204 ;; Return value:  Size  Location     Type
  7205 ;;                  2    5[COMRAM] unsigned int 
  7206 ;; Registers used:
  7207 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7208 ;; Tracked objects:
  7209 ;;		On entry : 0/1
  7210 ;;		On exit  : 0/0
  7211 ;;		Unchanged: 0/0
  7212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7213 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7214 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7216 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7217 ;;Total ram usage:        4 bytes
  7218 ;; Hardware stack levels used:    1
  7219 ;; Hardware stack levels required when called:    4
  7220 ;; This function calls:
  7221 ;;		Nothing
  7222 ;; This function is called by:
  7223 ;;		_eaDogM_WriteString
  7224 ;;		_pad
  7225 ;;		_stoa
  7226 ;; This function uses a non-reentrant model
  7227 ;;
  7228                           
  7229                           	psect	text49
  7230  003722                     __ptext49:
  7231                           	opt callstack 0
  7232  003722                     _strlen:
  7233                           	opt callstack 21
  7234                           
  7235                           ;incstack = 0
  7236  003722  0060  F018  F008   	movff	strlen@s,strlen@a
  7237  003728  0060  F01C  F009   	movff	strlen@s+1,strlen@a+1
  7238  00372E  D002               	goto	l4545
  7239  003730                     l4543:
  7240  003730  4A06               	infsnz	strlen@s^0,f,c
  7241  003732  2A07               	incf	(strlen@s+1)^0,f,c
  7242  003734                     l4545:
  7243  003734  0060  F01B  FFF6   	movff	strlen@s,tblptrl
  7244  00373A  0060  F01F  FFF7   	movff	strlen@s+1,tblptrh
  7245  003740  0E00               	movlw	low (__smallconst shr (0+16))
  7246  003742  6EF8               	movwf	tblptru,c
  7247  003744  0E1F               	movlw	(high __ramtop+-1)
  7248  003746  64F7               	cpfsgt	tblptrh,c
  7249  003748  D003               	bra	u3327
  7250  00374A  0008               	tblrd		*
  7251  00374C  50F5               	movf	tablat,w,c
  7252  00374E  D007               	bra	u3320
  7253  003750                     u3327:
  7254  003750  006F FFDB FFE1     	movff	tblptrl,fsr1l
  7255  003756  006F FFDF FFE2     	movff	tblptrh,fsr1h
  7256  00375C  50E7               	movf	indf1,w,c
  7257  00375E                     u3320:
  7258  00375E  0900               	iorlw	0
  7259  003760  A4D8               	btfss	status,2,c
  7260  003762  D7E6               	goto	l4543
  7261  003764  5008               	movf	strlen@a^0,w,c
  7262  003766  5C06               	subwf	strlen@s^0,w,c
  7263  003768  6E06               	movwf	?_strlen^0,c
  7264  00376A  5009               	movf	(strlen@a+1)^0,w,c
  7265  00376C  5807               	subwfb	(strlen@s+1)^0,w,c
  7266  00376E  6E07               	movwf	(?_strlen+1)^0,c
  7267  003770  0012               	return		;funcret
  7268  003772                     __end_of_strlen:
  7269                           	opt callstack 0
  7270                           
  7271 ;; *************** function _fputs *****************
  7272 ;; Defined at:
  7273 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
  7274 ;; Parameters:    Size  Location     Type
  7275 ;;  s               2   16[COMRAM] PTR const unsigned char 
  7276 ;;		 -> dbuf(32), 
  7277 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  7278 ;;		 -> sprintf@f(5), NULL(0), 
  7279 ;; Auto vars:     Size  Location     Type
  7280 ;;  i               2   21[COMRAM] int 
  7281 ;;  c               1   20[COMRAM] unsigned char 
  7282 ;; Return value:  Size  Location     Type
  7283 ;;                  2   16[COMRAM] int 
  7284 ;; Registers used:
  7285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7286 ;; Tracked objects:
  7287 ;;		On entry : 0/1
  7288 ;;		On exit  : 0/0
  7289 ;;		Unchanged: 0/0
  7290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7291 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7292 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7294 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7295 ;;Total ram usage:        7 bytes
  7296 ;; Hardware stack levels used:    1
  7297 ;; Hardware stack levels required when called:    7
  7298 ;; This function calls:
  7299 ;;		_fputc
  7300 ;; This function is called by:
  7301 ;;		_pad
  7302 ;; This function uses a non-reentrant model
  7303 ;;
  7304                           
  7305                           	psect	text50
  7306  0038CA                     __ptext50:
  7307                           	opt callstack 0
  7308  0038CA                     _fputs:
  7309                           	opt callstack 17
  7310                           
  7311                           ;incstack = 0
  7312  0038CA  0E00               	movlw	0
  7313  0038CC  6E17               	movwf	(fputs@i+1)^0,c
  7314  0038CE  0E00               	movlw	0
  7315  0038D0  6E16               	movwf	fputs@i^0,c
  7316  0038D2  D00E               	goto	l4557
  7317  0038D4                     l4553:
  7318  0038D4  0060  F054  F008   	movff	fputs@c,fputc@c
  7319  0038DA  6A09               	clrf	(fputc@c+1)^0,c
  7320  0038DC  0060  F04C  F00A   	movff	fputs@fp,fputc@fp
  7321  0038E2  0060  F050  F00B   	movff	fputs@fp+1,fputc@fp+1
  7322  0038E8  ECF7  F019         	call	_fputc	;wreg free
  7323  0038EC  4A16               	infsnz	fputs@i^0,f,c
  7324  0038EE  2A17               	incf	(fputs@i+1)^0,f,c
  7325  0038F0                     l4557:
  7326  0038F0  5016               	movf	fputs@i^0,w,c
  7327  0038F2  2411               	addwf	fputs@s^0,w,c
  7328  0038F4  6ED9               	movwf	fsr2l,c
  7329  0038F6  5017               	movf	(fputs@i+1)^0,w,c
  7330  0038F8  2012               	addwfc	(fputs@s+1)^0,w,c
  7331  0038FA  6EDA               	movwf	fsr2h,c
  7332  0038FC  50DF               	movf	indf2,w,c
  7333  0038FE  6E15               	movwf	fputs@c^0,c
  7334  003900  5015               	movf	fputs@c^0,w,c
  7335  003902  B4D8               	btfsc	status,2,c
  7336  003904  0012               	return	
  7337  003906  D7E6               	goto	l4553
  7338  003908                     __end_of_fputs:
  7339                           	opt callstack 0
  7340                           
  7341 ;; *************** function _fputc *****************
  7342 ;; Defined at:
  7343 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
  7344 ;; Parameters:    Size  Location     Type
  7345 ;;  c               2    7[COMRAM] int 
  7346 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  7347 ;;		 -> sprintf@f(5), NULL(0), 
  7348 ;; Auto vars:     Size  Location     Type
  7349 ;;		None
  7350 ;; Return value:  Size  Location     Type
  7351 ;;                  2    7[COMRAM] int 
  7352 ;; Registers used:
  7353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7354 ;; Tracked objects:
  7355 ;;		On entry : 0/0
  7356 ;;		On exit  : 0/0
  7357 ;;		Unchanged: 0/0
  7358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7359 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7361 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7362 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7363 ;;Total ram usage:        9 bytes
  7364 ;; Hardware stack levels used:    1
  7365 ;; Hardware stack levels required when called:    6
  7366 ;; This function calls:
  7367 ;;		_putch
  7368 ;; This function is called by:
  7369 ;;		_pad
  7370 ;;		_stoa
  7371 ;;		_vfpfcnvrt
  7372 ;;		_fputs
  7373 ;; This function uses a non-reentrant model
  7374 ;;
  7375                           
  7376                           	psect	text51
  7377  0033EE                     __ptext51:
  7378                           	opt callstack 0
  7379  0033EE                     _fputc:
  7380                           	opt callstack 19
  7381                           
  7382                           ;incstack = 0
  7383  0033EE  500A               	movf	fputc@fp^0,w,c
  7384  0033F0  100B               	iorwf	(fputc@fp+1)^0,w,c
  7385  0033F2  B4D8               	btfsc	status,2,c
  7386  0033F4  D004               	goto	u3290
  7387  0033F6  500A               	movf	fputc@fp^0,w,c
  7388  0033F8  100B               	iorwf	(fputc@fp+1)^0,w,c
  7389  0033FA  A4D8               	btfss	status,2,c
  7390  0033FC  D004               	goto	l4533
  7391  0033FE                     u3290:
  7392  0033FE  5008               	movf	fputc@c^0,w,c
  7393  003400  ECC4  F01F         	call	_putch
  7394  003404  0012               	return	
  7395  003406                     l4533:
  7396  003406  EE20 F003          	lfsr	2,3
  7397  00340A  500A               	movf	fputc@fp^0,w,c
  7398  00340C  26D9               	addwf	fsr2l,f,c
  7399  00340E  500B               	movf	(fputc@fp+1)^0,w,c
  7400  003410  22DA               	addwfc	fsr2h,f,c
  7401  003412  50DE               	movf	postinc2,w,c
  7402  003414  10DE               	iorwf	postinc2,w,c
  7403  003416  B4D8               	btfsc	status,2,c
  7404  003418  D016               	goto	u3310
  7405  00341A  EE20 F003          	lfsr	2,3
  7406  00341E  500A               	movf	fputc@fp^0,w,c
  7407  003420  26D9               	addwf	fsr2l,f,c
  7408  003422  500B               	movf	(fputc@fp+1)^0,w,c
  7409  003424  22DA               	addwfc	fsr2h,f,c
  7410  003426  EE10 F001          	lfsr	1,1
  7411  00342A  500A               	movf	fputc@fp^0,w,c
  7412  00342C  26E1               	addwf	fsr1l,f,c
  7413  00342E  500B               	movf	(fputc@fp+1)^0,w,c
  7414  003430  22E2               	addwfc	fsr1h,f,c
  7415  003432  50DE               	movf	postinc2,w,c
  7416  003434  5CE6               	subwf	postinc1,w,c
  7417  003436  50E6               	movf	postinc1,w,c
  7418  003438  0A80               	xorlw	128
  7419  00343A  6E10               	movwf	(??_fputc+4)^0,c
  7420  00343C  50DE               	movf	postinc2,w,c
  7421  00343E  0A80               	xorlw	128
  7422  003440  5810               	subwfb	(??_fputc+4)^0,w,c
  7423  003442  B0D8               	btfsc	status,0,c
  7424  003444  0012               	return	
  7425  003446                     u3310:
  7426  003446  EE20 F001          	lfsr	2,1
  7427  00344A  500A               	movf	fputc@fp^0,w,c
  7428  00344C  26D9               	addwf	fsr2l,f,c
  7429  00344E  500B               	movf	(fputc@fp+1)^0,w,c
  7430  003450  22DA               	addwfc	fsr2h,f,c
  7431  003452  50DF               	movf	indf2,w,c
  7432  003454  6E0C               	movwf	??_fputc^0,c
  7433  003456  0060  F02B  FFD9   	movff	fputc@fp,fsr2l
  7434  00345C  0060  F02F  FFDA   	movff	fputc@fp+1,fsr2h
  7435  003462  50DF               	movf	indf2,w,c
  7436  003464  240C               	addwf	??_fputc^0,w,c
  7437  003466  6ED9               	movwf	fsr2l,c
  7438  003468  6ADA               	clrf	fsr2h,c
  7439  00346A  0060  F023  FFDF   	movff	fputc@c,indf2
  7440  003470  EE20 F001          	lfsr	2,1
  7441  003474  500A               	movf	fputc@fp^0,w,c
  7442  003476  26D9               	addwf	fsr2l,f,c
  7443  003478  500B               	movf	(fputc@fp+1)^0,w,c
  7444  00347A  22DA               	addwfc	fsr2h,f,c
  7445  00347C  2ADE               	incf	postinc2,f,c
  7446  00347E  0E00               	movlw	0
  7447  003480  22DD               	addwfc	postdec2,f,c
  7448  003482  0012               	return		;funcret
  7449  003484                     __end_of_fputc:
  7450                           	opt callstack 0
  7451                           
  7452 ;; *************** function _putch *****************
  7453 ;; Defined at:
  7454 ;;		line 221 in file "mcc_generated_files/uart2.c"
  7455 ;; Parameters:    Size  Location     Type
  7456 ;;  txData          1    wreg     unsigned char 
  7457 ;; Auto vars:     Size  Location     Type
  7458 ;;  txData          1    6[COMRAM] unsigned char 
  7459 ;; Return value:  Size  Location     Type
  7460 ;;                  1    wreg      void 
  7461 ;; Registers used:
  7462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7463 ;; Tracked objects:
  7464 ;;		On entry : 0/0
  7465 ;;		On exit  : 3F/39
  7466 ;;		Unchanged: 0/0
  7467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7469 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7471 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7472 ;;Total ram usage:        1 bytes
  7473 ;; Hardware stack levels used:    1
  7474 ;; Hardware stack levels required when called:    5
  7475 ;; This function calls:
  7476 ;;		_UART2_Write
  7477 ;; This function is called by:
  7478 ;;		_fputc
  7479 ;; This function uses a non-reentrant model
  7480 ;;
  7481                           
  7482                           	psect	text52
  7483  003F88                     __ptext52:
  7484                           	opt callstack 0
  7485  003F88                     _putch:
  7486                           	opt callstack 19
  7487                           
  7488                           ;incstack = 0
  7489                           ;putch@txData stored from wreg
  7490  003F88  6E07               	movwf	putch@txData^0,c
  7491                           
  7492                           ;mcc_generated_files/uart2.c: 221: void putch(char txData);mcc_generated_files/uart2.c: 
      +                          222: {;mcc_generated_files/uart2.c: 223:     UART2_Write(txData);
  7493  003F8A  5007               	movf	putch@txData^0,w,c
  7494  003F8C  EC25  F01C         	call	_UART2_Write
  7495                           
  7496                           ; BSR set to: 57
  7497  003F90  0012               	return		;funcret
  7498  003F92                     __end_of_putch:
  7499                           	opt callstack 0
  7500                           
  7501 ;; *************** function _UART2_Write *****************
  7502 ;; Defined at:
  7503 ;;		line 193 in file "mcc_generated_files/uart2.c"
  7504 ;; Parameters:    Size  Location     Type
  7505 ;;  txData          1    wreg     unsigned char 
  7506 ;; Auto vars:     Size  Location     Type
  7507 ;;  txData          1    5[COMRAM] unsigned char 
  7508 ;; Return value:  Size  Location     Type
  7509 ;;                  1    wreg      void 
  7510 ;; Registers used:
  7511 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7512 ;; Tracked objects:
  7513 ;;		On entry : 0/0
  7514 ;;		On exit  : 3F/39
  7515 ;;		Unchanged: 0/0
  7516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7520 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7521 ;;Total ram usage:        1 bytes
  7522 ;; Hardware stack levels used:    1
  7523 ;; Hardware stack levels required when called:    4
  7524 ;; This function calls:
  7525 ;;		Nothing
  7526 ;; This function is called by:
  7527 ;;		_putch
  7528 ;;		_Digital232_RW
  7529 ;; This function uses a non-reentrant model
  7530 ;;
  7531                           
  7532                           	psect	text53
  7533  00384A                     __ptext53:
  7534                           	opt callstack 0
  7535  00384A                     _UART2_Write:
  7536                           	opt callstack 19
  7537                           
  7538                           ; BSR set to: 57
  7539                           ;incstack = 0
  7540                           ;UART2_Write@txData stored from wreg
  7541  00384A  6E06               	movwf	UART2_Write@txData^0,c
  7542  00384C                     
  7543                           ;mcc_generated_files/uart2.c: 195:     while(0 == uart2TxBufferRemaining)
  7544                           
  7545                           ;mcc_generated_files/uart2.c: 193: void UART2_Write(uint8_t txData);mcc_generated_files/
      +                          uart2.c: 194: {;mcc_generated_files/uart2.c: 195:     while(0 == uart2TxBufferRemaining)
  7546  00384C  0100               	movlb	0	; () banked
  7547  00384E  51F8               	movf	_uart2TxBufferRemaining& (0+255),w,b	;volatile
  7548  003850  B4D8               	btfsc	status,2,c
  7549  003852  D7FC               	goto	l4507
  7550                           
  7551                           ; BSR set to: 0
  7552                           ;mcc_generated_files/uart2.c: 199:     if(0 == PIE6bits.U2TXIE)
  7553  003854  0139               	movlb	57	; () banked
  7554  003856  B796               	btfsc	150,3,b	;volatile
  7555  003858  D004               	goto	l492
  7556                           
  7557                           ; BSR set to: 57
  7558                           ;mcc_generated_files/uart2.c: 200:     {;mcc_generated_files/uart2.c: 201:         U2TXB
      +                           = txData;
  7559  00385A  0060  F01B  FDD2   	movff	UART2_Write@txData,15826	;volatile
  7560                           
  7561                           ;mcc_generated_files/uart2.c: 202:     }
  7562  003860  D012               	goto	l4523
  7563  003862                     l492:
  7564                           
  7565                           ; BSR set to: 57
  7566                           ;mcc_generated_files/uart2.c: 204:     {;mcc_generated_files/uart2.c: 205:         PIE6b
      +                          its.U2TXIE = 0;
  7567  003862  9796               	bcf	150,3,b	;volatile
  7568                           
  7569                           ; BSR set to: 57
  7570                           ;mcc_generated_files/uart2.c: 206:         uart2TxBuffer[uart2TxHead++] = txData;
  7571  003864  0E1E               	movlw	low _uart2TxBuffer
  7572  003866  0100               	movlb	0	; () banked
  7573  003868  25FA               	addwf	_uart2TxHead& (0+255),w,b	;volatile
  7574  00386A  6ED9               	movwf	fsr2l,c
  7575  00386C  6ADA               	clrf	fsr2h,c
  7576  00386E  0E01               	movlw	high _uart2TxBuffer
  7577  003870  22DA               	addwfc	fsr2h,f,c
  7578  003872  0060  F01B  FFDF   	movff	UART2_Write@txData,indf2
  7579                           
  7580                           ; BSR set to: 0
  7581  003878  2BFA               	incf	_uart2TxHead& (0+255),f,b	;volatile
  7582                           
  7583                           ; BSR set to: 0
  7584                           ;mcc_generated_files/uart2.c: 207:         if(sizeof(uart2TxBuffer) <= uart2TxHead)
  7585  00387A  0E07               	movlw	7
  7586  00387C  65FA               	cpfsgt	_uart2TxHead& (0+255),b
  7587  00387E  D002               	goto	l4521
  7588                           
  7589                           ; BSR set to: 0
  7590                           ;mcc_generated_files/uart2.c: 208:         {;mcc_generated_files/uart2.c: 209:          
      +                             uart2TxHead = 0;
  7591  003880  0E00               	movlw	0
  7592  003882  6FFA               	movwf	_uart2TxHead& (0+255),b	;volatile
  7593  003884                     l4521:
  7594                           
  7595                           ; BSR set to: 0
  7596                           ;mcc_generated_files/uart2.c: 211:         uart2TxBufferRemaining--;
  7597  003884  07F8               	decf	_uart2TxBufferRemaining& (0+255),f,b	;volatile
  7598  003886                     l4523:
  7599                           
  7600                           ;mcc_generated_files/uart2.c: 213:     PIE6bits.U2TXIE = 1;
  7601  003886  0139               	movlb	57	; () banked
  7602  003888  8796               	bsf	150,3,b	;volatile
  7603                           
  7604                           ; BSR set to: 57
  7605  00388A  0012               	return		;funcret
  7606  00388C                     __end_of_UART2_Write:
  7607                           	opt callstack 0
  7608                           
  7609 ;; *************** function _abs *****************
  7610 ;; Defined at:
  7611 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
  7612 ;; Parameters:    Size  Location     Type
  7613 ;;  a               2   23[COMRAM] int 
  7614 ;; Auto vars:     Size  Location     Type
  7615 ;;		None
  7616 ;; Return value:  Size  Location     Type
  7617 ;;                  2   23[COMRAM] int 
  7618 ;; Registers used:
  7619 ;;		wreg, status,2, status,0
  7620 ;; Tracked objects:
  7621 ;;		On entry : 0/1
  7622 ;;		On exit  : 0/0
  7623 ;;		Unchanged: 0/0
  7624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7625 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7627 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7628 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7629 ;;Total ram usage:        4 bytes
  7630 ;; Hardware stack levels used:    1
  7631 ;; Hardware stack levels required when called:    4
  7632 ;; This function calls:
  7633 ;;		Nothing
  7634 ;; This function is called by:
  7635 ;;		_dtoa
  7636 ;; This function uses a non-reentrant model
  7637 ;;
  7638                           
  7639                           	psect	text54
  7640  003908                     __ptext54:
  7641                           	opt callstack 0
  7642  003908                     _abs:
  7643                           	opt callstack 21
  7644                           
  7645                           ; BSR set to: 57
  7646                           ;incstack = 0
  7647  003908  BE19               	btfsc	(abs@a+1)^0,7,c
  7648  00390A  D005               	goto	u3390
  7649  00390C  5019               	movf	(abs@a+1)^0,w,c
  7650  00390E  E114               	bnz	l2046
  7651  003910  0418               	decf	abs@a^0,w,c
  7652  003912  B0D8               	btfsc	status,0,c
  7653  003914  D011               	goto	l2046
  7654  003916                     u3390:
  7655  003916  0060  F060  F01A   	movff	abs@a,??_abs
  7656  00391C  0060  F064  F01B   	movff	abs@a+1,??_abs+1
  7657  003922  1E1A               	comf	??_abs^0,f,c
  7658  003924  1E1B               	comf	(??_abs+1)^0,f,c
  7659  003926  4A1A               	infsnz	??_abs^0,f,c
  7660  003928  2A1B               	incf	(??_abs+1)^0,f,c
  7661  00392A  0060  F068  F018   	movff	??_abs,?_abs
  7662  003930  0060  F06C  F019   	movff	??_abs+1,?_abs+1
  7663  003936  0012               	return	
  7664  003938                     l2046:
  7665  003938  0060  F060  F018   	movff	abs@a,?_abs
  7666  00393E  0060  F064  F019   	movff	abs@a+1,?_abs+1
  7667  003944  0012               	return		;funcret
  7668  003946                     __end_of_abs:
  7669                           	opt callstack 0
  7670                           
  7671 ;; *************** function ___aomod *****************
  7672 ;; Defined at:
  7673 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
  7674 ;; Parameters:    Size  Location     Type
  7675 ;;  dividend        8    5[COMRAM] long long 
  7676 ;;  divisor         8   13[COMRAM] long long 
  7677 ;; Auto vars:     Size  Location     Type
  7678 ;;  sign            1   22[COMRAM] unsigned char 
  7679 ;;  counter         1   21[COMRAM] unsigned char 
  7680 ;; Return value:  Size  Location     Type
  7681 ;;                  8    5[COMRAM] long long 
  7682 ;; Registers used:
  7683 ;;		wreg, status,2, status,0
  7684 ;; Tracked objects:
  7685 ;;		On entry : 0/1
  7686 ;;		On exit  : 0/0
  7687 ;;		Unchanged: 0/0
  7688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7689 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7690 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7692 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7693 ;;Total ram usage:       18 bytes
  7694 ;; Hardware stack levels used:    1
  7695 ;; Hardware stack levels required when called:    4
  7696 ;; This function calls:
  7697 ;;		Nothing
  7698 ;; This function is called by:
  7699 ;;		_dtoa
  7700 ;; This function uses a non-reentrant model
  7701 ;;
  7702                           
  7703                           	psect	text55
  7704  002C30                     __ptext55:
  7705                           	opt callstack 0
  7706  002C30                     ___aomod:
  7707                           	opt callstack 21
  7708                           
  7709                           ;incstack = 0
  7710  002C30  0E00               	movlw	0
  7711  002C32  6E17               	movwf	___aomod@sign^0,c
  7712  002C34  AE0D               	btfss	(___aomod@dividend+7)^0,7,c
  7713  002C36  D012               	goto	l4637
  7714  002C38  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  7715  002C3A  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  7716  002C3C  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  7717  002C3E  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  7718  002C40  1E09               	comf	(___aomod@dividend+3)^0,f,c
  7719  002C42  1E08               	comf	(___aomod@dividend+2)^0,f,c
  7720  002C44  1E07               	comf	(___aomod@dividend+1)^0,f,c
  7721  002C46  6C06               	negf	___aomod@dividend^0,c
  7722  002C48  0E00               	movlw	0
  7723  002C4A  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  7724  002C4C  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  7725  002C4E  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  7726  002C50  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  7727  002C52  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  7728  002C54  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  7729  002C56  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  7730  002C58  0E01               	movlw	1
  7731  002C5A  6E17               	movwf	___aomod@sign^0,c
  7732  002C5C                     l4637:
  7733  002C5C  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  7734  002C5E  D010               	goto	l4641
  7735  002C60  1E15               	comf	(___aomod@divisor+7)^0,f,c
  7736  002C62  1E14               	comf	(___aomod@divisor+6)^0,f,c
  7737  002C64  1E13               	comf	(___aomod@divisor+5)^0,f,c
  7738  002C66  1E12               	comf	(___aomod@divisor+4)^0,f,c
  7739  002C68  1E11               	comf	(___aomod@divisor+3)^0,f,c
  7740  002C6A  1E10               	comf	(___aomod@divisor+2)^0,f,c
  7741  002C6C  1E0F               	comf	(___aomod@divisor+1)^0,f,c
  7742  002C6E  6C0E               	negf	___aomod@divisor^0,c
  7743  002C70  0E00               	movlw	0
  7744  002C72  220F               	addwfc	(___aomod@divisor+1)^0,f,c
  7745  002C74  2210               	addwfc	(___aomod@divisor+2)^0,f,c
  7746  002C76  2211               	addwfc	(___aomod@divisor+3)^0,f,c
  7747  002C78  2212               	addwfc	(___aomod@divisor+4)^0,f,c
  7748  002C7A  2213               	addwfc	(___aomod@divisor+5)^0,f,c
  7749  002C7C  2214               	addwfc	(___aomod@divisor+6)^0,f,c
  7750  002C7E  2215               	addwfc	(___aomod@divisor+7)^0,f,c
  7751  002C80                     l4641:
  7752  002C80  500E               	movf	___aomod@divisor^0,w,c
  7753  002C82  100F               	iorwf	(___aomod@divisor+1)^0,w,c
  7754  002C84  1010               	iorwf	(___aomod@divisor+2)^0,w,c
  7755  002C86  1011               	iorwf	(___aomod@divisor+3)^0,w,c
  7756  002C88  1012               	iorwf	(___aomod@divisor+4)^0,w,c
  7757  002C8A  1013               	iorwf	(___aomod@divisor+5)^0,w,c
  7758  002C8C  1014               	iorwf	(___aomod@divisor+6)^0,w,c
  7759  002C8E  1015               	iorwf	(___aomod@divisor+7)^0,w,c
  7760  002C90  B4D8               	btfsc	status,2,c
  7761  002C92  D03C               	goto	l4657
  7762  002C94  0E01               	movlw	1
  7763  002C96  6E16               	movwf	___aomod@counter^0,c
  7764  002C98  D00A               	goto	l4647
  7765  002C9A                     l4645:
  7766  002C9A  90D8               	bcf	status,0,c
  7767  002C9C  360E               	rlcf	___aomod@divisor^0,f,c
  7768  002C9E  360F               	rlcf	(___aomod@divisor+1)^0,f,c
  7769  002CA0  3610               	rlcf	(___aomod@divisor+2)^0,f,c
  7770  002CA2  3611               	rlcf	(___aomod@divisor+3)^0,f,c
  7771  002CA4  3612               	rlcf	(___aomod@divisor+4)^0,f,c
  7772  002CA6  3613               	rlcf	(___aomod@divisor+5)^0,f,c
  7773  002CA8  3614               	rlcf	(___aomod@divisor+6)^0,f,c
  7774  002CAA  3615               	rlcf	(___aomod@divisor+7)^0,f,c
  7775  002CAC  2A16               	incf	___aomod@counter^0,f,c
  7776  002CAE                     l4647:
  7777  002CAE  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  7778  002CB0  D7F4               	goto	l4645
  7779  002CB2                     u3500:
  7780  002CB2  500E               	movf	___aomod@divisor^0,w,c
  7781  002CB4  5C06               	subwf	___aomod@dividend^0,w,c
  7782  002CB6  500F               	movf	(___aomod@divisor+1)^0,w,c
  7783  002CB8  5807               	subwfb	(___aomod@dividend+1)^0,w,c
  7784  002CBA  5010               	movf	(___aomod@divisor+2)^0,w,c
  7785  002CBC  5808               	subwfb	(___aomod@dividend+2)^0,w,c
  7786  002CBE  5011               	movf	(___aomod@divisor+3)^0,w,c
  7787  002CC0  5809               	subwfb	(___aomod@dividend+3)^0,w,c
  7788  002CC2  5012               	movf	(___aomod@divisor+4)^0,w,c
  7789  002CC4  580A               	subwfb	(___aomod@dividend+4)^0,w,c
  7790  002CC6  5013               	movf	(___aomod@divisor+5)^0,w,c
  7791  002CC8  580B               	subwfb	(___aomod@dividend+5)^0,w,c
  7792  002CCA  5014               	movf	(___aomod@divisor+6)^0,w,c
  7793  002CCC  580C               	subwfb	(___aomod@dividend+6)^0,w,c
  7794  002CCE  5015               	movf	(___aomod@divisor+7)^0,w,c
  7795  002CD0  580D               	subwfb	(___aomod@dividend+7)^0,w,c
  7796  002CD2  A0D8               	btfss	status,0,c
  7797  002CD4  D010               	goto	l4653
  7798  002CD6  500E               	movf	___aomod@divisor^0,w,c
  7799  002CD8  5E06               	subwf	___aomod@dividend^0,f,c
  7800  002CDA  500F               	movf	(___aomod@divisor+1)^0,w,c
  7801  002CDC  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
  7802  002CDE  5010               	movf	(___aomod@divisor+2)^0,w,c
  7803  002CE0  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
  7804  002CE2  5011               	movf	(___aomod@divisor+3)^0,w,c
  7805  002CE4  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
  7806  002CE6  5012               	movf	(___aomod@divisor+4)^0,w,c
  7807  002CE8  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
  7808  002CEA  5013               	movf	(___aomod@divisor+5)^0,w,c
  7809  002CEC  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
  7810  002CEE  5014               	movf	(___aomod@divisor+6)^0,w,c
  7811  002CF0  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
  7812  002CF2  5015               	movf	(___aomod@divisor+7)^0,w,c
  7813  002CF4  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
  7814  002CF6                     l4653:
  7815  002CF6  90D8               	bcf	status,0,c
  7816  002CF8  3215               	rrcf	(___aomod@divisor+7)^0,f,c
  7817  002CFA  3214               	rrcf	(___aomod@divisor+6)^0,f,c
  7818  002CFC  3213               	rrcf	(___aomod@divisor+5)^0,f,c
  7819  002CFE  3212               	rrcf	(___aomod@divisor+4)^0,f,c
  7820  002D00  3211               	rrcf	(___aomod@divisor+3)^0,f,c
  7821  002D02  3210               	rrcf	(___aomod@divisor+2)^0,f,c
  7822  002D04  320F               	rrcf	(___aomod@divisor+1)^0,f,c
  7823  002D06  320E               	rrcf	___aomod@divisor^0,f,c
  7824  002D08  2E16               	decfsz	___aomod@counter^0,f,c
  7825  002D0A  D7D3               	goto	u3500
  7826  002D0C                     l4657:
  7827  002D0C  5017               	movf	___aomod@sign^0,w,c
  7828  002D0E  B4D8               	btfsc	status,2,c
  7829  002D10  D010               	goto	l4661
  7830  002D12  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  7831  002D14  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  7832  002D16  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  7833  002D18  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  7834  002D1A  1E09               	comf	(___aomod@dividend+3)^0,f,c
  7835  002D1C  1E08               	comf	(___aomod@dividend+2)^0,f,c
  7836  002D1E  1E07               	comf	(___aomod@dividend+1)^0,f,c
  7837  002D20  6C06               	negf	___aomod@dividend^0,c
  7838  002D22  0E00               	movlw	0
  7839  002D24  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  7840  002D26  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  7841  002D28  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  7842  002D2A  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  7843  002D2C  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  7844  002D2E  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  7845  002D30  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  7846  002D32                     l4661:
  7847  002D32  0060  F018  F006   	movff	___aomod@dividend,?___aomod
  7848  002D38  0060  F01C  F007   	movff	___aomod@dividend+1,?___aomod+1
  7849  002D3E  0060  F020  F008   	movff	___aomod@dividend+2,?___aomod+2
  7850  002D44  0060  F024  F009   	movff	___aomod@dividend+3,?___aomod+3
  7851  002D4A  0060  F028  F00A   	movff	___aomod@dividend+4,?___aomod+4
  7852  002D50  0060  F02C  F00B   	movff	___aomod@dividend+5,?___aomod+5
  7853  002D56  0060  F030  F00C   	movff	___aomod@dividend+6,?___aomod+6
  7854  002D5C  0060  F034  F00D   	movff	___aomod@dividend+7,?___aomod+7
  7855  002D62  0012               	return		;funcret
  7856  002D64                     __end_of___aomod:
  7857                           	opt callstack 0
  7858                           
  7859 ;; *************** function ___aodiv *****************
  7860 ;; Defined at:
  7861 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
  7862 ;; Parameters:    Size  Location     Type
  7863 ;;  dividend        8    5[COMRAM] long long 
  7864 ;;  divisor         8   13[COMRAM] long long 
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;  quotient        8   23[COMRAM] long long 
  7867 ;;  sign            1   22[COMRAM] unsigned char 
  7868 ;;  counter         1   21[COMRAM] unsigned char 
  7869 ;; Return value:  Size  Location     Type
  7870 ;;                  8    5[COMRAM] long long 
  7871 ;; Registers used:
  7872 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7873 ;; Tracked objects:
  7874 ;;		On entry : 0/1
  7875 ;;		On exit  : 0/0
  7876 ;;		Unchanged: 0/0
  7877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7878 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7879 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7881 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7882 ;;Total ram usage:       26 bytes
  7883 ;; Hardware stack levels used:    1
  7884 ;; Hardware stack levels required when called:    4
  7885 ;; This function calls:
  7886 ;;		Nothing
  7887 ;; This function is called by:
  7888 ;;		_dtoa
  7889 ;; This function uses a non-reentrant model
  7890 ;;
  7891                           
  7892                           	psect	text56
  7893  002AD8                     __ptext56:
  7894                           	opt callstack 0
  7895  002AD8                     ___aodiv:
  7896                           	opt callstack 21
  7897                           
  7898                           ;incstack = 0
  7899  002AD8  0E00               	movlw	0
  7900  002ADA  6E17               	movwf	___aodiv@sign^0,c
  7901  002ADC  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  7902  002ADE  D012               	goto	l4593
  7903  002AE0  1E15               	comf	(___aodiv@divisor+7)^0,f,c
  7904  002AE2  1E14               	comf	(___aodiv@divisor+6)^0,f,c
  7905  002AE4  1E13               	comf	(___aodiv@divisor+5)^0,f,c
  7906  002AE6  1E12               	comf	(___aodiv@divisor+4)^0,f,c
  7907  002AE8  1E11               	comf	(___aodiv@divisor+3)^0,f,c
  7908  002AEA  1E10               	comf	(___aodiv@divisor+2)^0,f,c
  7909  002AEC  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
  7910  002AEE  6C0E               	negf	___aodiv@divisor^0,c
  7911  002AF0  0E00               	movlw	0
  7912  002AF2  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
  7913  002AF4  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
  7914  002AF6  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
  7915  002AF8  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
  7916  002AFA  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
  7917  002AFC  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
  7918  002AFE  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
  7919  002B00  0E01               	movlw	1
  7920  002B02  6E17               	movwf	___aodiv@sign^0,c
  7921  002B04                     l4593:
  7922  002B04  AE0D               	btfss	(___aodiv@dividend+7)^0,7,c
  7923  002B06  D012               	goto	l4599
  7924  002B08  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
  7925  002B0A  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
  7926  002B0C  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
  7927  002B0E  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
  7928  002B10  1E09               	comf	(___aodiv@dividend+3)^0,f,c
  7929  002B12  1E08               	comf	(___aodiv@dividend+2)^0,f,c
  7930  002B14  1E07               	comf	(___aodiv@dividend+1)^0,f,c
  7931  002B16  6C06               	negf	___aodiv@dividend^0,c
  7932  002B18  0E00               	movlw	0
  7933  002B1A  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
  7934  002B1C  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
  7935  002B1E  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
  7936  002B20  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
  7937  002B22  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
  7938  002B24  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
  7939  002B26  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
  7940  002B28  0E01               	movlw	1
  7941  002B2A  1A17               	xorwf	___aodiv@sign^0,f,c
  7942  002B2C                     l4599:
  7943  002B2C  EE20  F018         	lfsr	2,___aodiv@quotient
  7944  002B30  0E07               	movlw	7
  7945  002B32                     u3421:
  7946  002B32  6ADE               	clrf	postinc2,c
  7947  002B34  06E8               	decf	wreg,f,c
  7948  002B36  E2FD               	bc	u3421
  7949  002B38  500E               	movf	___aodiv@divisor^0,w,c
  7950  002B3A  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
  7951  002B3C  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
  7952  002B3E  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
  7953  002B40  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
  7954  002B42  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
  7955  002B44  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
  7956  002B46  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
  7957  002B48  B4D8               	btfsc	status,2,c
  7958  002B4A  D046               	goto	l4621
  7959  002B4C  0E01               	movlw	1
  7960  002B4E  6E16               	movwf	___aodiv@counter^0,c
  7961  002B50  D00A               	goto	l4607
  7962  002B52                     l4605:
  7963  002B52  90D8               	bcf	status,0,c
  7964  002B54  360E               	rlcf	___aodiv@divisor^0,f,c
  7965  002B56  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
  7966  002B58  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
  7967  002B5A  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
  7968  002B5C  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
  7969  002B5E  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
  7970  002B60  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
  7971  002B62  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
  7972  002B64  2A16               	incf	___aodiv@counter^0,f,c
  7973  002B66                     l4607:
  7974  002B66  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  7975  002B68  D7F4               	goto	l4605
  7976  002B6A                     u3440:
  7977  002B6A  90D8               	bcf	status,0,c
  7978  002B6C  3618               	rlcf	___aodiv@quotient^0,f,c
  7979  002B6E  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
  7980  002B70  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
  7981  002B72  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
  7982  002B74  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
  7983  002B76  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
  7984  002B78  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
  7985  002B7A  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
  7986  002B7C  500E               	movf	___aodiv@divisor^0,w,c
  7987  002B7E  5C06               	subwf	___aodiv@dividend^0,w,c
  7988  002B80  500F               	movf	(___aodiv@divisor+1)^0,w,c
  7989  002B82  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
  7990  002B84  5010               	movf	(___aodiv@divisor+2)^0,w,c
  7991  002B86  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
  7992  002B88  5011               	movf	(___aodiv@divisor+3)^0,w,c
  7993  002B8A  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
  7994  002B8C  5012               	movf	(___aodiv@divisor+4)^0,w,c
  7995  002B8E  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
  7996  002B90  5013               	movf	(___aodiv@divisor+5)^0,w,c
  7997  002B92  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
  7998  002B94  5014               	movf	(___aodiv@divisor+6)^0,w,c
  7999  002B96  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
  8000  002B98  5015               	movf	(___aodiv@divisor+7)^0,w,c
  8001  002B9A  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
  8002  002B9C  A0D8               	btfss	status,0,c
  8003  002B9E  D011               	goto	l4617
  8004  002BA0  500E               	movf	___aodiv@divisor^0,w,c
  8005  002BA2  5E06               	subwf	___aodiv@dividend^0,f,c
  8006  002BA4  500F               	movf	(___aodiv@divisor+1)^0,w,c
  8007  002BA6  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
  8008  002BA8  5010               	movf	(___aodiv@divisor+2)^0,w,c
  8009  002BAA  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
  8010  002BAC  5011               	movf	(___aodiv@divisor+3)^0,w,c
  8011  002BAE  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
  8012  002BB0  5012               	movf	(___aodiv@divisor+4)^0,w,c
  8013  002BB2  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
  8014  002BB4  5013               	movf	(___aodiv@divisor+5)^0,w,c
  8015  002BB6  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
  8016  002BB8  5014               	movf	(___aodiv@divisor+6)^0,w,c
  8017  002BBA  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
  8018  002BBC  5015               	movf	(___aodiv@divisor+7)^0,w,c
  8019  002BBE  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
  8020  002BC0  8018               	bsf	___aodiv@quotient^0,0,c
  8021  002BC2                     l4617:
  8022  002BC2  90D8               	bcf	status,0,c
  8023  002BC4  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
  8024  002BC6  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
  8025  002BC8  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
  8026  002BCA  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
  8027  002BCC  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
  8028  002BCE  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
  8029  002BD0  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
  8030  002BD2  320E               	rrcf	___aodiv@divisor^0,f,c
  8031  002BD4  2E16               	decfsz	___aodiv@counter^0,f,c
  8032  002BD6  D7C9               	goto	u3440
  8033  002BD8                     l4621:
  8034  002BD8  5017               	movf	___aodiv@sign^0,w,c
  8035  002BDA  B4D8               	btfsc	status,2,c
  8036  002BDC  D010               	goto	l4625
  8037  002BDE  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
  8038  002BE0  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
  8039  002BE2  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
  8040  002BE4  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
  8041  002BE6  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
  8042  002BE8  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
  8043  002BEA  1E19               	comf	(___aodiv@quotient+1)^0,f,c
  8044  002BEC  6C18               	negf	___aodiv@quotient^0,c
  8045  002BEE  0E00               	movlw	0
  8046  002BF0  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
  8047  002BF2  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
  8048  002BF4  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
  8049  002BF6  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
  8050  002BF8  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
  8051  002BFA  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
  8052  002BFC  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
  8053  002BFE                     l4625:
  8054  002BFE  0060  F060  F006   	movff	___aodiv@quotient,?___aodiv
  8055  002C04  0060  F064  F007   	movff	___aodiv@quotient+1,?___aodiv+1
  8056  002C0A  0060  F068  F008   	movff	___aodiv@quotient+2,?___aodiv+2
  8057  002C10  0060  F06C  F009   	movff	___aodiv@quotient+3,?___aodiv+3
  8058  002C16  0060  F070  F00A   	movff	___aodiv@quotient+4,?___aodiv+4
  8059  002C1C  0060  F074  F00B   	movff	___aodiv@quotient+5,?___aodiv+5
  8060  002C22  0060  F078  F00C   	movff	___aodiv@quotient+6,?___aodiv+6
  8061  002C28  0060  F07C  F00D   	movff	___aodiv@quotient+7,?___aodiv+7
  8062  002C2E  0012               	return		;funcret
  8063  002C30                     __end_of___aodiv:
  8064                           	opt callstack 0
  8065                           
  8066 ;; *************** function _UART2_is_rx_ready *****************
  8067 ;; Defined at:
  8068 ;;		line 152 in file "mcc_generated_files/uart2.c"
  8069 ;; Parameters:    Size  Location     Type
  8070 ;;		None
  8071 ;; Auto vars:     Size  Location     Type
  8072 ;;		None
  8073 ;; Return value:  Size  Location     Type
  8074 ;;                  1    wreg      unsigned char 
  8075 ;; Registers used:
  8076 ;;		wreg, status,2
  8077 ;; Tracked objects:
  8078 ;;		On entry : 0/1
  8079 ;;		On exit  : 3F/0
  8080 ;;		Unchanged: 0/0
  8081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8086 ;;Total ram usage:        0 bytes
  8087 ;; Hardware stack levels used:    1
  8088 ;; Hardware stack levels required when called:    4
  8089 ;; This function calls:
  8090 ;;		Nothing
  8091 ;; This function is called by:
  8092 ;;		_Digital232_init
  8093 ;;		_Digital232_RW
  8094 ;; This function uses a non-reentrant model
  8095 ;;
  8096                           
  8097                           	psect	text57
  8098  003F92                     __ptext57:
  8099                           	opt callstack 0
  8100  003F92                     _UART2_is_rx_ready:
  8101                           	opt callstack 25
  8102                           
  8103                           ;mcc_generated_files/uart2.c: 154:     return uart2RxCount;
  8104                           
  8105                           ;incstack = 0
  8106  003F92  0100               	movlb	0	; () banked
  8107  003F94  51F7               	movf	_uart2RxCount& (0+255),w,b	;volatile
  8108                           
  8109                           ; BSR set to: 0
  8110  003F96  0012               	return		;funcret
  8111  003F98                     __end_of_UART2_is_rx_ready:
  8112                           	opt callstack 0
  8113                           
  8114 ;; *************** function _UART2_Read *****************
  8115 ;; Defined at:
  8116 ;;		line 171 in file "mcc_generated_files/uart2.c"
  8117 ;; Parameters:    Size  Location     Type
  8118 ;;		None
  8119 ;; Auto vars:     Size  Location     Type
  8120 ;;  readValue       1    5[COMRAM] unsigned char 
  8121 ;; Return value:  Size  Location     Type
  8122 ;;                  1    wreg      unsigned char 
  8123 ;; Registers used:
  8124 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8125 ;; Tracked objects:
  8126 ;;		On entry : 3F/0
  8127 ;;		On exit  : 3F/39
  8128 ;;		Unchanged: 0/0
  8129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8131 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8133 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8134 ;;Total ram usage:        1 bytes
  8135 ;; Hardware stack levels used:    1
  8136 ;; Hardware stack levels required when called:    4
  8137 ;; This function calls:
  8138 ;;		Nothing
  8139 ;; This function is called by:
  8140 ;;		_Digital232_init
  8141 ;;		_Digital232_RW
  8142 ;; This function uses a non-reentrant model
  8143 ;;
  8144                           
  8145                           	psect	text58
  8146  003806                     __ptext58:
  8147                           	opt callstack 0
  8148  003806                     _UART2_Read:
  8149                           	opt callstack 25
  8150                           
  8151                           ; BSR set to: 0
  8152                           ;mcc_generated_files/uart2.c: 175:     while(0 == uart2RxCount)
  8153                           
  8154                           ; BSR set to: 0
  8155                           ;mcc_generated_files/uart2.c: 175:     while(0 == uart2RxCount)
  8156                           
  8157                           ; BSR set to: 0
  8158                           ;incstack = 0
  8159  003806  51F7               	movf	_uart2RxCount& (0+255),w,b	;volatile
  8160  003808  B4D8               	btfsc	status,2,c
  8161  00380A  D7FD               	goto	_UART2_Read
  8162                           
  8163                           ; BSR set to: 0
  8164                           ;mcc_generated_files/uart2.c: 179:     uart2RxLastError = uart2RxStatusBuffer[uart2RxTai
      +                          l];
  8165  00380C  0E0E               	movlw	low _uart2RxStatusBuffer
  8166  00380E  2458               	addwf	_uart2RxTail^0,w,c	;volatile
  8167  003810  6ED9               	movwf	fsr2l,c
  8168  003812  6ADA               	clrf	fsr2h,c
  8169  003814  0E01               	movlw	high _uart2RxStatusBuffer
  8170  003816  22DA               	addwfc	fsr2h,f,c
  8171  003818  50DF               	movf	indf2,w,c
  8172  00381A  0101               	movlb	1	; () banked
  8173  00381C  6F70               	movwf	_uart2RxLastError& (0+255),b	;volatile
  8174                           
  8175                           ;mcc_generated_files/uart2.c: 181:     readValue = uart2RxBuffer[uart2RxTail++];
  8176  00381E  0E16               	movlw	low _uart2RxBuffer
  8177  003820  2458               	addwf	_uart2RxTail^0,w,c	;volatile
  8178  003822  6ED9               	movwf	fsr2l,c
  8179  003824  6ADA               	clrf	fsr2h,c
  8180  003826  0E01               	movlw	high _uart2RxBuffer
  8181  003828  22DA               	addwfc	fsr2h,f,c
  8182  00382A  50DF               	movf	indf2,w,c
  8183  00382C  6E06               	movwf	UART2_Read@readValue^0,c
  8184                           
  8185                           ; BSR set to: 1
  8186  00382E  2A58               	incf	_uart2RxTail^0,f,c	;volatile
  8187                           
  8188                           ; BSR set to: 1
  8189                           ;mcc_generated_files/uart2.c: 182:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
  8190  003830  0E07               	movlw	7
  8191  003832  6458               	cpfsgt	_uart2RxTail^0,c
  8192  003834  D002               	goto	l5089
  8193                           
  8194                           ; BSR set to: 1
  8195                           ;mcc_generated_files/uart2.c: 183:     {;mcc_generated_files/uart2.c: 184:         uart2
      +                          RxTail = 0;
  8196  003836  0E00               	movlw	0
  8197  003838  6E58               	movwf	_uart2RxTail^0,c	;volatile
  8198  00383A                     l5089:
  8199                           
  8200                           ; BSR set to: 1
  8201                           ;mcc_generated_files/uart2.c: 186:     PIE6bits.U2RXIE = 0;
  8202  00383A  0139               	movlb	57	; () banked
  8203  00383C  9596               	bcf	150,2,b	;volatile
  8204                           
  8205                           ; BSR set to: 57
  8206                           ;mcc_generated_files/uart2.c: 187:     uart2RxCount--;
  8207  00383E  0100               	movlb	0	; () banked
  8208  003840  07F7               	decf	_uart2RxCount& (0+255),f,b	;volatile
  8209                           
  8210                           ; BSR set to: 0
  8211                           ;mcc_generated_files/uart2.c: 188:     PIE6bits.U2RXIE = 1;
  8212  003842  0139               	movlb	57	; () banked
  8213  003844  8596               	bsf	150,2,b	;volatile
  8214                           
  8215                           ; BSR set to: 57
  8216                           ;mcc_generated_files/uart2.c: 190:     return readValue;
  8217  003846  5006               	movf	UART2_Read@readValue^0,w,c
  8218                           
  8219                           ; BSR set to: 57
  8220  003848  0012               	return		;funcret
  8221  00384A                     __end_of_UART2_Read:
  8222                           	opt callstack 0
  8223                           
  8224 ;; *************** function _TimerDone *****************
  8225 ;; Defined at:
  8226 ;;		line 19 in file "timers.c"
  8227 ;; Parameters:    Size  Location     Type
  8228 ;;  timer           1    wreg     const unsigned char 
  8229 ;; Auto vars:     Size  Location     Type
  8230 ;;  timer           1    7[COMRAM] const unsigned char 
  8231 ;; Return value:  Size  Location     Type
  8232 ;;                  1    wreg      _Bool 
  8233 ;; Registers used:
  8234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8235 ;; Tracked objects:
  8236 ;;		On entry : 0/1
  8237 ;;		On exit  : 0/0
  8238 ;;		Unchanged: 0/0
  8239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8241 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8242 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8243 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8244 ;;Total ram usage:        3 bytes
  8245 ;; Hardware stack levels used:    1
  8246 ;; Hardware stack levels required when called:    4
  8247 ;; This function calls:
  8248 ;;		Nothing
  8249 ;; This function is called by:
  8250 ;;		_work_sw
  8251 ;;		_main
  8252 ;;		_Digital232_RW
  8253 ;;		_WaitMs
  8254 ;; This function uses a non-reentrant model
  8255 ;;
  8256                           
  8257                           	psect	text59
  8258  003C28                     __ptext59:
  8259                           	opt callstack 0
  8260  003C28                     _TimerDone:
  8261                           	opt callstack 25
  8262                           
  8263                           ; BSR set to: 57
  8264                           ;incstack = 0
  8265                           ;TimerDone@timer stored from wreg
  8266  003C28  6E08               	movwf	TimerDone@timer^0,c
  8267  003C2A  0004               	clrwdt		;# 
  8268                           
  8269                           ;timers.c: 22:  if (tickCount[timer] == 0) {
  8270  003C2C  5008               	movf	TimerDone@timer^0,w,c
  8271  003C2E  0D02               	mullw	2
  8272  003C30  0E00               	movlw	low _tickCount
  8273  003C32  24F3               	addwf	243,w,c
  8274  003C34  6ED9               	movwf	fsr2l,c
  8275  003C36  0E01               	movlw	high _tickCount
  8276  003C38  20F4               	addwfc	prodh,w,c
  8277  003C3A  6EDA               	movwf	fsr2h,c
  8278  003C3C  50DE               	movf	postinc2,w,c
  8279  003C3E  10DE               	iorwf	postinc2,w,c
  8280  003C40  A4D8               	btfss	status,2,c
  8281  003C42  D002               	goto	l4867
  8282                           
  8283                           ;timers.c: 23:   return 1;
  8284  003C44  0E01               	movlw	1
  8285  003C46  0012               	return	
  8286  003C48                     l4867:
  8287                           
  8288                           ;timers.c: 25:  return 0;
  8289  003C48  0E00               	movlw	0
  8290  003C4A  0012               	return		;funcret
  8291  003C4C                     __end_of_TimerDone:
  8292                           	opt callstack 0
  8293                           
  8294 ;; *************** function _StartTimer *****************
  8295 ;; Defined at:
  8296 ;;		line 11 in file "timers.c"
  8297 ;; Parameters:    Size  Location     Type
  8298 ;;  timer           1    wreg     const unsigned char 
  8299 ;;  count           2    5[COMRAM] const unsigned short 
  8300 ;; Auto vars:     Size  Location     Type
  8301 ;;  timer           1    9[COMRAM] const unsigned char 
  8302 ;; Return value:  Size  Location     Type
  8303 ;;                  1    wreg      void 
  8304 ;; Registers used:
  8305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8306 ;; Tracked objects:
  8307 ;;		On entry : 0/1
  8308 ;;		On exit  : 0/0
  8309 ;;		Unchanged: 0/0
  8310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8311 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8312 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8313 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8314 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8315 ;;Total ram usage:        5 bytes
  8316 ;; Hardware stack levels used:    1
  8317 ;; Hardware stack levels required when called:    4
  8318 ;; This function calls:
  8319 ;;		Nothing
  8320 ;; This function is called by:
  8321 ;;		_work_sw
  8322 ;;		_main
  8323 ;;		_Digital232_init
  8324 ;;		_Digital232_RW
  8325 ;;		_led_lightshow
  8326 ;;		_WaitMs
  8327 ;; This function uses a non-reentrant model
  8328 ;;
  8329                           
  8330                           	psect	text60
  8331  003A94                     __ptext60:
  8332                           	opt callstack 0
  8333  003A94                     _StartTimer:
  8334                           	opt callstack 25
  8335                           
  8336                           ;incstack = 0
  8337                           ;StartTimer@timer stored from wreg
  8338  003A94  6E0A               	movwf	StartTimer@timer^0,c
  8339                           
  8340                           ;timers.c: 11: __attribute__((inline)) void StartTimer(const uint8_t timer, const uint16
      +                          _t count);timers.c: 12: {;timers.c: 13:  tickCount[timer] = count << 1;
  8341  003A96  0060  F018  F008   	movff	StartTimer@count,??_StartTimer
  8342  003A9C  0060  F01C  F009   	movff	StartTimer@count+1,??_StartTimer+1
  8343  003AA2  90D8               	bcf	status,0,c
  8344  003AA4  3608               	rlcf	??_StartTimer^0,f,c
  8345  003AA6  3609               	rlcf	(??_StartTimer+1)^0,f,c
  8346  003AA8  500A               	movf	StartTimer@timer^0,w,c
  8347  003AAA  0D02               	mullw	2
  8348  003AAC  0E00               	movlw	low _tickCount
  8349  003AAE  24F3               	addwf	243,w,c
  8350  003AB0  6ED9               	movwf	fsr2l,c
  8351  003AB2  0E01               	movlw	high _tickCount
  8352  003AB4  20F4               	addwfc	prodh,w,c
  8353  003AB6  6EDA               	movwf	fsr2h,c
  8354  003AB8  0060  F023  FFDE   	movff	??_StartTimer,postinc2
  8355  003ABE  0060  F027  FFDD   	movff	??_StartTimer+1,postdec2
  8356  003AC4  0012               	return		;funcret
  8357  003AC6                     __end_of_StartTimer:
  8358                           	opt callstack 0
  8359                           
  8360 ;; *************** function _PWM8_LoadDutyValue *****************
  8361 ;; Defined at:
  8362 ;;		line 74 in file "mcc_generated_files/pwm8.c"
  8363 ;; Parameters:    Size  Location     Type
  8364 ;;  dutyValue       2    5[COMRAM] unsigned short 
  8365 ;; Auto vars:     Size  Location     Type
  8366 ;;		None
  8367 ;; Return value:  Size  Location     Type
  8368 ;;                  1    wreg      void 
  8369 ;; Registers used:
  8370 ;;		wreg, status,2, status,0
  8371 ;; Tracked objects:
  8372 ;;		On entry : 0/0
  8373 ;;		On exit  : 0/0
  8374 ;;		Unchanged: 0/0
  8375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8376 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8378 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8379 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8380 ;;Total ram usage:        4 bytes
  8381 ;; Hardware stack levels used:    1
  8382 ;; Hardware stack levels required when called:    4
  8383 ;; This function calls:
  8384 ;;		Nothing
  8385 ;; This function is called by:
  8386 ;;		_Digital232_RW
  8387 ;; This function uses a non-reentrant model
  8388 ;;
  8389                           
  8390                           	psect	text61
  8391  0039F4                     __ptext61:
  8392                           	opt callstack 0
  8393  0039F4                     _PWM8_LoadDutyValue:
  8394                           	opt callstack 25
  8395                           
  8396                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  8397                           
  8398                           ;incstack = 0
  8399  0039F4  0060  F018  F008   	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  8400  0039FA  0060  F01C  F009   	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
  8401  003A00  90D8               	bcf	status,0,c
  8402  003A02  3209               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
  8403  003A04  3208               	rrcf	??_PWM8_LoadDutyValue^0,f,c
  8404  003A06  90D8               	bcf	status,0,c
  8405  003A08  3209               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
  8406  003A0A  3208               	rrcf	??_PWM8_LoadDutyValue^0,f,c
  8407  003A0C  5008               	movf	??_PWM8_LoadDutyValue^0,w,c
  8408  003A0E  6E61               	movwf	97,c	;volatile
  8409                           
  8410                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
  8411  003A10  0060  F018  F008   	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  8412  003A16  0E03               	movlw	3
  8413  003A18  1608               	andwf	??_PWM8_LoadDutyValue^0,f,c
  8414  003A1A  0E06               	movlw	6
  8415  003A1C  6E09               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
  8416  003A1E                     u3955:
  8417  003A1E  90D8               	bcf	status,0,c
  8418  003A20  3608               	rlcf	??_PWM8_LoadDutyValue^0,f,c
  8419  003A22  2E09               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
  8420  003A24  D7FC               	goto	u3955
  8421  003A26  5008               	movf	??_PWM8_LoadDutyValue^0,w,c
  8422  003A28  6E60               	movwf	96,c	;volatile
  8423  003A2A  0012               	return		;funcret
  8424  003A2C                     __end_of_PWM8_LoadDutyValue:
  8425                           	opt callstack 0
  8426                           
  8427 ;; *************** function _ADCC_GetConversionResult *****************
  8428 ;; Defined at:
  8429 ;;		line 131 in file "mcc_generated_files/adcc.c"
  8430 ;; Parameters:    Size  Location     Type
  8431 ;;		None
  8432 ;; Auto vars:     Size  Location     Type
  8433 ;;		None
  8434 ;; Return value:  Size  Location     Type
  8435 ;;                  2    5[COMRAM] unsigned short 
  8436 ;; Registers used:
  8437 ;;		wreg, status,2, status,0
  8438 ;; Tracked objects:
  8439 ;;		On entry : 3F/1
  8440 ;;		On exit  : 3F/3E
  8441 ;;		Unchanged: 0/0
  8442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8443 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8445 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8446 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8447 ;;Total ram usage:        4 bytes
  8448 ;; Hardware stack levels used:    1
  8449 ;; Hardware stack levels required when called:    4
  8450 ;; This function calls:
  8451 ;;		Nothing
  8452 ;; This function is called by:
  8453 ;;		_Digital232_RW
  8454 ;; This function uses a non-reentrant model
  8455 ;;
  8456                           
  8457                           	psect	text62
  8458  003E68                     __ptext62:
  8459                           	opt callstack 0
  8460  003E68                     _ADCC_GetConversionResult:
  8461                           	opt callstack 25
  8462                           
  8463                           ; BSR set to: 1
  8464                           ;mcc_generated_files/adcc.c: 134:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8465                           
  8466                           ;incstack = 0
  8467  003E68  013E               	movlb	62	; () banked
  8468  003E6A  51F0               	movf	240,w,b	;volatile
  8469  003E6C  6E09               	movwf	(??_ADCC_GetConversionResult+1)^0,c
  8470  003E6E  6A08               	clrf	??_ADCC_GetConversionResult^0,c
  8471  003E70  51EF               	movf	239,w,b	;volatile
  8472  003E72  2408               	addwf	??_ADCC_GetConversionResult^0,w,c
  8473  003E74  6E06               	movwf	?_ADCC_GetConversionResult^0,c
  8474  003E76  0E00               	movlw	0
  8475  003E78  2009               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
  8476  003E7A  6E07               	movwf	(?_ADCC_GetConversionResult+1)^0,c
  8477                           
  8478                           ; BSR set to: 62
  8479  003E7C  0012               	return		;funcret
  8480  003E7E                     __end_of_ADCC_GetConversionResult:
  8481                           	opt callstack 0
  8482                           
  8483 ;; *************** function _Default_ISR *****************
  8484 ;; Defined at:
  8485 ;;		line 80 in file "mcc_generated_files/interrupt_manager.c"
  8486 ;; Parameters:    Size  Location     Type
  8487 ;;		None
  8488 ;; Auto vars:     Size  Location     Type
  8489 ;;		None
  8490 ;; Return value:  Size  Location     Type
  8491 ;;                  1    wreg      void 
  8492 ;; Registers used:
  8493 ;;		None
  8494 ;; Tracked objects:
  8495 ;;		On entry : 0/0
  8496 ;;		On exit  : 0/0
  8497 ;;		Unchanged: 0/0
  8498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8503 ;;Total ram usage:        0 bytes
  8504 ;; Hardware stack levels used:    1
  8505 ;; This function calls:
  8506 ;;		Nothing
  8507 ;; This function is called by:
  8508 ;;		Interrupt level 2
  8509 ;; This function uses a non-reentrant model
  8510 ;;
  8511                           
  8512                           	psect	text63
  8513  003FA8                     __ptext63:
  8514                           	opt callstack 0
  8515  003FA8                     _Default_ISR:
  8516                           	opt callstack 20
  8517                           
  8518                           ; BSR set to: 62
  8519                           ;incstack = 0
  8520  003FA8  0011               	retfie		f
  8521  003FAA                     __end_of_Default_ISR:
  8522                           	opt callstack 0
  8523                           
  8524 ;; *************** function _UART1_tx_vect_isr *****************
  8525 ;; Defined at:
  8526 ;;		line 225 in file "mcc_generated_files/uart1.c"
  8527 ;; Parameters:    Size  Location     Type
  8528 ;;		None
  8529 ;; Auto vars:     Size  Location     Type
  8530 ;;		None
  8531 ;; Return value:  Size  Location     Type
  8532 ;;                  1    wreg      void 
  8533 ;; Registers used:
  8534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8535 ;; Tracked objects:
  8536 ;;		On entry : 0/0
  8537 ;;		On exit  : 0/0
  8538 ;;		Unchanged: 0/0
  8539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8544 ;;Total ram usage:        0 bytes
  8545 ;; Hardware stack levels used:    1
  8546 ;; Hardware stack levels required when called:    1
  8547 ;; This function calls:
  8548 ;;		Absolute function
  8549 ;;		_UART1_Transmit_ISR
  8550 ;; This function is called by:
  8551 ;;		Interrupt level 2
  8552 ;; This function uses a non-reentrant model
  8553 ;;
  8554                           
  8555                           	psect	text64
  8556  003C4C                     __ptext64:
  8557                           	opt callstack 0
  8558  003C4C                     _UART1_tx_vect_isr:
  8559                           	opt callstack 19
  8560                           
  8561                           ;mcc_generated_files/uart1.c: 227:     if(UART1_TxInterruptHandler)
  8562                           
  8563                           ;incstack = 0
  8564  003C4C  0101               	movlb	1	; () banked
  8565  003C4E  515A               	movf	_UART1_TxInterruptHandler& (0+255),w,b
  8566  003C50  115B               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
  8567  003C52  115C               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
  8568  003C54  B4D8               	btfsc	status,2,c
  8569  003C56  0011               	retfie		f
  8570                           
  8571                           ; BSR set to: 1
  8572                           ;mcc_generated_files/uart1.c: 228:     {;mcc_generated_files/uart1.c: 229:         UART1
      +                          _TxInterruptHandler();
  8573  003C58  D801               	call	i2u294_48
  8574  003C5A  0011               	retfie		f
  8575  003C5C                     i2u294_48:
  8576  003C5C  0005               	push	
  8577  003C5E  6EFA               	movwf	pclath,c
  8578  003C60  515A               	movf	_UART1_TxInterruptHandler& (0+255),w,b
  8579  003C62  6EFD               	movwf	tosl,c
  8580  003C64  515B               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
  8581  003C66  6EFE               	movwf	tosh,c
  8582  003C68  515C               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
  8583  003C6A  6EFF               	movwf	tosu,c
  8584  003C6C  50FA               	movf	pclath,w,c
  8585  003C6E  0012               	return		;indir
  8586  003C70                     __end_of_UART1_tx_vect_isr:
  8587                           	opt callstack 0
  8588                           
  8589 ;; *************** function _UART1_Transmit_ISR *****************
  8590 ;; Defined at:
  8591 ;;		line 243 in file "mcc_generated_files/uart1.c"
  8592 ;; Parameters:    Size  Location     Type
  8593 ;;		None
  8594 ;; Auto vars:     Size  Location     Type
  8595 ;;		None
  8596 ;; Return value:  Size  Location     Type
  8597 ;;                  1    wreg      void 
  8598 ;; Registers used:
  8599 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8600 ;; Tracked objects:
  8601 ;;		On entry : 3F/1
  8602 ;;		On exit  : 6/0
  8603 ;;		Unchanged: 0/0
  8604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8609 ;;Total ram usage:        0 bytes
  8610 ;; Hardware stack levels used:    1
  8611 ;; This function calls:
  8612 ;;		Nothing
  8613 ;; This function is called by:
  8614 ;;		_UART1_Initialize
  8615 ;;		_UART1_tx_vect_isr
  8616 ;; This function uses a non-reentrant model
  8617 ;;
  8618                           
  8619                           	psect	text65
  8620  003AC6                     __ptext65:
  8621                           	opt callstack 0
  8622  003AC6                     _UART1_Transmit_ISR:
  8623                           	opt callstack 19
  8624                           
  8625                           ; BSR set to: 1
  8626                           ;mcc_generated_files/uart1.c: 246:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
  8627                           
  8628                           ;incstack = 0
  8629  003AC6  0E08               	movlw	8
  8630  003AC8  0100               	movlb	0	; () banked
  8631  003ACA  61FB               	cpfslt	_uart1TxBufferRemaining& (0+255),b
  8632  003ACC  D012               	goto	i2l342
  8633                           
  8634                           ; BSR set to: 0
  8635                           ;mcc_generated_files/uart1.c: 247:     {;mcc_generated_files/uart1.c: 248:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
  8636  003ACE  0E36               	movlw	low _uart1TxBuffer
  8637  003AD0  25FC               	addwf	_uart1TxTail& (0+255),w,b	;volatile
  8638  003AD2  6ED9               	movwf	fsr2l,c
  8639  003AD4  6ADA               	clrf	fsr2h,c
  8640  003AD6  0E01               	movlw	high _uart1TxBuffer
  8641  003AD8  22DA               	addwfc	fsr2h,f,c
  8642  003ADA  50DF               	movf	indf2,w,c
  8643  003ADC  013D               	movlb	61	; () banked
  8644  003ADE  6FEA               	movwf	234,b	;volatile
  8645                           
  8646                           ; BSR set to: 61
  8647  003AE0  0100               	movlb	0	; () banked
  8648  003AE2  2BFC               	incf	_uart1TxTail& (0+255),f,b	;volatile
  8649                           
  8650                           ; BSR set to: 0
  8651                           ;mcc_generated_files/uart1.c: 249:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
  8652  003AE4  0E07               	movlw	7
  8653  003AE6  65FC               	cpfsgt	_uart1TxTail& (0+255),b
  8654  003AE8  D002               	goto	i2l4027
  8655                           
  8656                           ; BSR set to: 0
  8657                           ;mcc_generated_files/uart1.c: 250:         {;mcc_generated_files/uart1.c: 251:          
      +                             uart1TxTail = 0;
  8658  003AEA  0E00               	movlw	0
  8659  003AEC  6FFC               	movwf	_uart1TxTail& (0+255),b	;volatile
  8660  003AEE                     i2l4027:
  8661                           
  8662                           ; BSR set to: 0
  8663                           ;mcc_generated_files/uart1.c: 253:         uart1TxBufferRemaining++;
  8664  003AEE  2BFB               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
  8665                           
  8666                           ;mcc_generated_files/uart1.c: 254:     }
  8667  003AF0  0012               	return	
  8668  003AF2                     i2l342:
  8669                           
  8670                           ; BSR set to: 0
  8671                           ;mcc_generated_files/uart1.c: 256:     {;mcc_generated_files/uart1.c: 257:         PIE3b
      +                          its.U1TXIE = 0;
  8672  003AF2  0139               	movlb	57	; () banked
  8673  003AF4  9993               	bcf	147,4,b	;volatile
  8674  003AF6  0012               	return		;funcret
  8675  003AF8                     __end_of_UART1_Transmit_ISR:
  8676                           	opt callstack 0
  8677                           
  8678 ;; *************** function _UART1_rx_vect_isr *****************
  8679 ;; Defined at:
  8680 ;;		line 233 in file "mcc_generated_files/uart1.c"
  8681 ;; Parameters:    Size  Location     Type
  8682 ;;		None
  8683 ;; Auto vars:     Size  Location     Type
  8684 ;;		None
  8685 ;; Return value:  Size  Location     Type
  8686 ;;                  1    wreg      void 
  8687 ;; Registers used:
  8688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8689 ;; Tracked objects:
  8690 ;;		On entry : 0/0
  8691 ;;		On exit  : 0/0
  8692 ;;		Unchanged: 0/0
  8693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8698 ;;Total ram usage:        0 bytes
  8699 ;; Hardware stack levels used:    1
  8700 ;; Hardware stack levels required when called:    3
  8701 ;; This function calls:
  8702 ;;		Absolute function
  8703 ;;		_UART1_Receive_ISR
  8704 ;; This function is called by:
  8705 ;;		Interrupt level 2
  8706 ;; This function uses a non-reentrant model
  8707 ;;
  8708                           
  8709                           	psect	text66
  8710  003C70                     __ptext66:
  8711                           	opt callstack 0
  8712  003C70                     _UART1_rx_vect_isr:
  8713                           	opt callstack 17
  8714                           
  8715                           ;mcc_generated_files/uart1.c: 235:     if(UART1_RxInterruptHandler)
  8716                           
  8717                           ;incstack = 0
  8718  003C70  0101               	movlb	1	; () banked
  8719  003C72  515D               	movf	_UART1_RxInterruptHandler& (0+255),w,b
  8720  003C74  115E               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
  8721  003C76  115F               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
  8722  003C78  B4D8               	btfsc	status,2,c
  8723  003C7A  0011               	retfie		f
  8724                           
  8725                           ; BSR set to: 1
  8726                           ;mcc_generated_files/uart1.c: 236:     {;mcc_generated_files/uart1.c: 237:         UART1
      +                          _RxInterruptHandler();
  8727  003C7C  D801               	call	i2u296_48
  8728  003C7E  0011               	retfie		f
  8729  003C80                     i2u296_48:
  8730  003C80  0005               	push	
  8731  003C82  6EFA               	movwf	pclath,c
  8732  003C84  515D               	movf	_UART1_RxInterruptHandler& (0+255),w,b
  8733  003C86  6EFD               	movwf	tosl,c
  8734  003C88  515E               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
  8735  003C8A  6EFE               	movwf	tosh,c
  8736  003C8C  515F               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
  8737  003C8E  6EFF               	movwf	tosu,c
  8738  003C90  50FA               	movf	pclath,w,c
  8739  003C92  0012               	return		;indir
  8740  003C94                     __end_of_UART1_rx_vect_isr:
  8741                           	opt callstack 0
  8742                           
  8743 ;; *************** function _UART1_Receive_ISR *****************
  8744 ;; Defined at:
  8745 ;;		line 263 in file "mcc_generated_files/uart1.c"
  8746 ;; Parameters:    Size  Location     Type
  8747 ;;		None
  8748 ;; Auto vars:     Size  Location     Type
  8749 ;;		None
  8750 ;; Return value:  Size  Location     Type
  8751 ;;                  1    wreg      void 
  8752 ;; Registers used:
  8753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8754 ;; Tracked objects:
  8755 ;;		On entry : 3F/1
  8756 ;;		On exit  : 0/0
  8757 ;;		Unchanged: 0/0
  8758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8763 ;;Total ram usage:        0 bytes
  8764 ;; Hardware stack levels used:    1
  8765 ;; Hardware stack levels required when called:    2
  8766 ;; This function calls:
  8767 ;;		Absolute function
  8768 ;;		_UART1_DefaultErrorHandler
  8769 ;;		_UART1_DefaultFramingErrorHandler
  8770 ;;		_UART1_DefaultOverrunErrorHandler
  8771 ;;		_UART1_RxDataHandler
  8772 ;; This function is called by:
  8773 ;;		_UART1_Initialize
  8774 ;;		_UART1_rx_vect_isr
  8775 ;; This function uses a non-reentrant model
  8776 ;;
  8777                           
  8778                           	psect	text67
  8779  0032B2                     __ptext67:
  8780                           	opt callstack 0
  8781  0032B2                     _UART1_Receive_ISR:
  8782                           	opt callstack 17
  8783                           
  8784                           ; BSR set to: 1
  8785                           ;mcc_generated_files/uart1.c: 266:     uart1RxStatusBuffer[uart1RxHead].status = 0;
  8786                           
  8787                           ;incstack = 0
  8788  0032B2  0E26               	movlw	low _uart1RxStatusBuffer
  8789  0032B4  245A               	addwf	_uart1RxHead^0,w,c	;volatile
  8790  0032B6  6ED9               	movwf	fsr2l,c
  8791  0032B8  6ADA               	clrf	fsr2h,c
  8792  0032BA  0E01               	movlw	high _uart1RxStatusBuffer
  8793  0032BC  22DA               	addwfc	fsr2h,f,c
  8794  0032BE  0E00               	movlw	0
  8795  0032C0  6EDF               	movwf	indf2,c
  8796                           
  8797                           ; BSR set to: 1
  8798                           ;mcc_generated_files/uart1.c: 268:     if(U1ERRIRbits.FERIF){
  8799  0032C2  013D               	movlb	61	; () banked
  8800  0032C4  A7F9               	btfss	249,3,b	;volatile
  8801  0032C6  D014               	goto	i2u247_49
  8802                           
  8803                           ; BSR set to: 61
  8804                           ;mcc_generated_files/uart1.c: 269:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
  8805  0032C8  0E26               	movlw	low _uart1RxStatusBuffer
  8806  0032CA  245A               	addwf	_uart1RxHead^0,w,c	;volatile
  8807  0032CC  6ED9               	movwf	fsr2l,c
  8808  0032CE  6ADA               	clrf	fsr2h,c
  8809  0032D0  0E01               	movlw	high _uart1RxStatusBuffer
  8810  0032D2  22DA               	addwfc	fsr2h,f,c
  8811  0032D4  0101               	movlb	1	; () banked
  8812  0032D6  82DF               	bsf	indf2,1,c
  8813                           
  8814                           ; BSR set to: 1
  8815                           ;mcc_generated_files/uart1.c: 270:         UART1_FramingErrorHandler();
  8816  0032D8  D801               	call	i2u247_48
  8817  0032DA  D00A               	goto	i2u247_49
  8818  0032DC                     i2u247_48:
  8819  0032DC  0005               	push	
  8820  0032DE  6EFA               	movwf	pclath,c
  8821  0032E0  5157               	movf	_UART1_FramingErrorHandler& (0+255),w,b
  8822  0032E2  6EFD               	movwf	tosl,c
  8823  0032E4  5158               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
  8824  0032E6  6EFE               	movwf	tosh,c
  8825  0032E8  5159               	movf	(_UART1_FramingErrorHandler+2)& (0+255),w,b
  8826  0032EA  6EFF               	movwf	tosu,c
  8827  0032EC  50FA               	movf	pclath,w,c
  8828  0032EE  0012               	return		;indir
  8829  0032F0                     i2u247_49:
  8830                           
  8831                           ;mcc_generated_files/uart1.c: 273:     if(U1ERRIRbits.RXFOIF){
  8832  0032F0  013D               	movlb	61	; () banked
  8833  0032F2  A3F9               	btfss	249,1,b	;volatile
  8834  0032F4  D014               	goto	i2u249_49
  8835                           
  8836                           ; BSR set to: 61
  8837                           ;mcc_generated_files/uart1.c: 274:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
  8838  0032F6  0E26               	movlw	low _uart1RxStatusBuffer
  8839  0032F8  245A               	addwf	_uart1RxHead^0,w,c	;volatile
  8840  0032FA  6ED9               	movwf	fsr2l,c
  8841  0032FC  6ADA               	clrf	fsr2h,c
  8842  0032FE  0E01               	movlw	high _uart1RxStatusBuffer
  8843  003300  22DA               	addwfc	fsr2h,f,c
  8844  003302  0101               	movlb	1	; () banked
  8845  003304  84DF               	bsf	indf2,2,c
  8846                           
  8847                           ; BSR set to: 1
  8848                           ;mcc_generated_files/uart1.c: 275:         UART1_OverrunErrorHandler();
  8849  003306  D801               	call	i2u249_48
  8850  003308  D00A               	goto	i2u249_49
  8851  00330A                     i2u249_48:
  8852  00330A  0005               	push	
  8853  00330C  6EFA               	movwf	pclath,c
  8854  00330E  5154               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
  8855  003310  6EFD               	movwf	tosl,c
  8856  003312  5155               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
  8857  003314  6EFE               	movwf	tosh,c
  8858  003316  5156               	movf	(_UART1_OverrunErrorHandler+2)& (0+255),w,b
  8859  003318  6EFF               	movwf	tosu,c
  8860  00331A  50FA               	movf	pclath,w,c
  8861  00331C  0012               	return		;indir
  8862  00331E                     i2u249_49:
  8863                           
  8864                           ;mcc_generated_files/uart1.c: 278:     if(uart1RxStatusBuffer[uart1RxHead].status){
  8865  00331E  0E26               	movlw	low _uart1RxStatusBuffer
  8866  003320  245A               	addwf	_uart1RxHead^0,w,c	;volatile
  8867  003322  6ED9               	movwf	fsr2l,c
  8868  003324  6ADA               	clrf	fsr2h,c
  8869  003326  0E01               	movlw	high _uart1RxStatusBuffer
  8870  003328  22DA               	addwfc	fsr2h,f,c
  8871  00332A  50DF               	movf	indf2,w,c
  8872  00332C  B4D8               	btfsc	status,2,c
  8873  00332E  D00D               	goto	i2l4047
  8874                           
  8875                           ;mcc_generated_files/uart1.c: 279:         UART1_ErrorHandler();
  8876  003330  D801               	call	i2u251_48
  8877  003332  0012               	return	
  8878  003334                     i2u251_48:
  8879  003334  0005               	push	
  8880  003336  6EFA               	movwf	pclath,c
  8881  003338  0101               	movlb	1	; () banked
  8882  00333A  5151               	movf	_UART1_ErrorHandler& (0+255),w,b
  8883  00333C  6EFD               	movwf	tosl,c
  8884  00333E  5152               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
  8885  003340  6EFE               	movwf	tosh,c
  8886  003342  5153               	movf	(_UART1_ErrorHandler+2)& (0+255),w,b
  8887  003344  6EFF               	movwf	tosu,c
  8888  003346  50FA               	movf	pclath,w,c
  8889  003348  0012               	return		;indir
  8890  00334A                     i2l4047:
  8891                           
  8892                           ;mcc_generated_files/uart1.c: 281:         UART1_RxDataHandler();
  8893  00334A  EC4A  F01E         	call	_UART1_RxDataHandler	;wreg free
  8894  00334E  0012               	return		;funcret
  8895  003350                     __end_of_UART1_Receive_ISR:
  8896                           	opt callstack 0
  8897                           
  8898 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
  8899 ;; Defined at:
  8900 ;;		line 299 in file "mcc_generated_files/uart1.c"
  8901 ;; Parameters:    Size  Location     Type
  8902 ;;		None
  8903 ;; Auto vars:     Size  Location     Type
  8904 ;;		None
  8905 ;; Return value:  Size  Location     Type
  8906 ;;                  1    wreg      void 
  8907 ;; Registers used:
  8908 ;;		None
  8909 ;; Tracked objects:
  8910 ;;		On entry : 3F/1
  8911 ;;		On exit  : 3F/1
  8912 ;;		Unchanged: 3F/0
  8913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8918 ;;Total ram usage:        0 bytes
  8919 ;; Hardware stack levels used:    1
  8920 ;; This function calls:
  8921 ;;		Nothing
  8922 ;; This function is called by:
  8923 ;;		_UART1_Initialize
  8924 ;;		_UART1_Receive_ISR
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           
  8928                           	psect	text68
  8929  003FAA                     __ptext68:
  8930                           	opt callstack 0
  8931  003FAA                     _UART1_DefaultOverrunErrorHandler:
  8932                           	opt callstack 18
  8933                           
  8934                           ; BSR set to: 1
  8935                           
  8936                           ;incstack = 0
  8937  003FAA  0012               	return		;funcret
  8938  003FAC                     __end_of_UART1_DefaultOverrunErrorHandler:
  8939                           	opt callstack 0
  8940                           
  8941 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
  8942 ;; Defined at:
  8943 ;;		line 297 in file "mcc_generated_files/uart1.c"
  8944 ;; Parameters:    Size  Location     Type
  8945 ;;		None
  8946 ;; Auto vars:     Size  Location     Type
  8947 ;;		None
  8948 ;; Return value:  Size  Location     Type
  8949 ;;                  1    wreg      void 
  8950 ;; Registers used:
  8951 ;;		None
  8952 ;; Tracked objects:
  8953 ;;		On entry : 3F/1
  8954 ;;		On exit  : 3F/1
  8955 ;;		Unchanged: 3F/0
  8956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8961 ;;Total ram usage:        0 bytes
  8962 ;; Hardware stack levels used:    1
  8963 ;; This function calls:
  8964 ;;		Nothing
  8965 ;; This function is called by:
  8966 ;;		_UART1_Initialize
  8967 ;;		_UART1_Receive_ISR
  8968 ;; This function uses a non-reentrant model
  8969 ;;
  8970                           
  8971                           	psect	text69
  8972  003FAC                     __ptext69:
  8973                           	opt callstack 0
  8974  003FAC                     _UART1_DefaultFramingErrorHandler:
  8975                           	opt callstack 18
  8976                           
  8977                           ; BSR set to: 1
  8978                           
  8979                           ; BSR set to: 1
  8980                           ;incstack = 0
  8981  003FAC  0012               	return		;funcret
  8982  003FAE                     __end_of_UART1_DefaultFramingErrorHandler:
  8983                           	opt callstack 0
  8984                           
  8985 ;; *************** function _UART1_DefaultErrorHandler *****************
  8986 ;; Defined at:
  8987 ;;		line 301 in file "mcc_generated_files/uart1.c"
  8988 ;; Parameters:    Size  Location     Type
  8989 ;;		None
  8990 ;; Auto vars:     Size  Location     Type
  8991 ;;		None
  8992 ;; Return value:  Size  Location     Type
  8993 ;;                  1    wreg      void 
  8994 ;; Registers used:
  8995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8996 ;; Tracked objects:
  8997 ;;		On entry : 3F/1
  8998 ;;		On exit  : 3F/1
  8999 ;;		Unchanged: 0/0
  9000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9005 ;;Total ram usage:        0 bytes
  9006 ;; Hardware stack levels used:    1
  9007 ;; Hardware stack levels required when called:    1
  9008 ;; This function calls:
  9009 ;;		_UART1_RxDataHandler
  9010 ;; This function is called by:
  9011 ;;		_UART1_Initialize
  9012 ;;		_UART1_Receive_ISR
  9013 ;; This function uses a non-reentrant model
  9014 ;;
  9015                           
  9016                           	psect	text70
  9017  003F98                     __ptext70:
  9018                           	opt callstack 0
  9019  003F98                     _UART1_DefaultErrorHandler:
  9020                           	opt callstack 17
  9021                           
  9022                           ; BSR set to: 1
  9023                           ;mcc_generated_files/uart1.c: 302:     UART1_RxDataHandler();
  9024                           
  9025                           ; BSR set to: 1
  9026                           ;incstack = 0
  9027  003F98  EC4A  F01E         	call	_UART1_RxDataHandler	;wreg free
  9028                           
  9029                           ; BSR set to: 1
  9030  003F9C  0012               	return		;funcret
  9031  003F9E                     __end_of_UART1_DefaultErrorHandler:
  9032                           	opt callstack 0
  9033                           
  9034 ;; *************** function _UART1_RxDataHandler *****************
  9035 ;; Defined at:
  9036 ;;		line 287 in file "mcc_generated_files/uart1.c"
  9037 ;; Parameters:    Size  Location     Type
  9038 ;;		None
  9039 ;; Auto vars:     Size  Location     Type
  9040 ;;		None
  9041 ;; Return value:  Size  Location     Type
  9042 ;;                  1    wreg      void 
  9043 ;; Registers used:
  9044 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9045 ;; Tracked objects:
  9046 ;;		On entry : 0/3D
  9047 ;;		On exit  : 3F/1
  9048 ;;		Unchanged: 0/0
  9049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9054 ;;Total ram usage:        0 bytes
  9055 ;; Hardware stack levels used:    1
  9056 ;; This function calls:
  9057 ;;		Nothing
  9058 ;; This function is called by:
  9059 ;;		_UART1_Receive_ISR
  9060 ;;		_UART1_DefaultErrorHandler
  9061 ;; This function uses a non-reentrant model
  9062 ;;
  9063                           
  9064                           	psect	text71
  9065  003C94                     __ptext71:
  9066                           	opt callstack 0
  9067  003C94                     _UART1_RxDataHandler:
  9068                           	opt callstack 18
  9069                           
  9070                           ;mcc_generated_files/uart1.c: 289:     uart1RxBuffer[uart1RxHead++] = U1RXB;
  9071                           
  9072                           ; BSR set to: 1
  9073                           ;incstack = 0
  9074  003C94  0E2E               	movlw	low _uart1RxBuffer
  9075  003C96  245A               	addwf	_uart1RxHead^0,w,c	;volatile
  9076  003C98  6ED9               	movwf	fsr2l,c
  9077  003C9A  6ADA               	clrf	fsr2h,c
  9078  003C9C  0E01               	movlw	high _uart1RxBuffer
  9079  003C9E  22DA               	addwfc	fsr2h,f,c
  9080  003CA0  006F F7A3 FFDF     	movff	15848,indf2	;volatile
  9081  003CA6  2A5A               	incf	_uart1RxHead^0,f,c	;volatile
  9082                           
  9083                           ;mcc_generated_files/uart1.c: 290:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
  9084  003CA8  0E07               	movlw	7
  9085  003CAA  645A               	cpfsgt	_uart1RxHead^0,c
  9086  003CAC  D002               	goto	i2l3645
  9087                           
  9088                           ;mcc_generated_files/uart1.c: 291:     {;mcc_generated_files/uart1.c: 292:         uart1
      +                          RxHead = 0;
  9089  003CAE  0E00               	movlw	0
  9090  003CB0  6E5A               	movwf	_uart1RxHead^0,c	;volatile
  9091  003CB2                     i2l3645:
  9092                           
  9093                           ;mcc_generated_files/uart1.c: 294:     uart1RxCount++;
  9094  003CB2  0101               	movlb	1	; () banked
  9095  003CB4  2B72               	incf	_uart1RxCount& (0+255),f,b	;volatile
  9096                           
  9097                           ; BSR set to: 1
  9098  003CB6  0012               	return		;funcret
  9099  003CB8                     __end_of_UART1_RxDataHandler:
  9100                           	opt callstack 0
  9101                           
  9102 ;; *************** function _UART2_tx_vect_isr *****************
  9103 ;; Defined at:
  9104 ;;		line 226 in file "mcc_generated_files/uart2.c"
  9105 ;; Parameters:    Size  Location     Type
  9106 ;;		None
  9107 ;; Auto vars:     Size  Location     Type
  9108 ;;		None
  9109 ;; Return value:  Size  Location     Type
  9110 ;;                  1    wreg      void 
  9111 ;; Registers used:
  9112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  9113 ;; Tracked objects:
  9114 ;;		On entry : 0/0
  9115 ;;		On exit  : 0/0
  9116 ;;		Unchanged: 0/0
  9117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9122 ;;Total ram usage:        0 bytes
  9123 ;; Hardware stack levels used:    1
  9124 ;; Hardware stack levels required when called:    1
  9125 ;; This function calls:
  9126 ;;		Absolute function
  9127 ;;		_UART2_Transmit_ISR
  9128 ;; This function is called by:
  9129 ;;		Interrupt level 2
  9130 ;; This function uses a non-reentrant model
  9131 ;;
  9132                           
  9133                           	psect	text72
  9134  003CB8                     __ptext72:
  9135                           	opt callstack 0
  9136  003CB8                     _UART2_tx_vect_isr:
  9137                           	opt callstack 19
  9138                           
  9139                           ;mcc_generated_files/uart2.c: 228:     if(UART2_TxInterruptHandler)
  9140                           
  9141                           ; BSR set to: 1
  9142                           ;incstack = 0
  9143  003CB8  0101               	movlb	1	; () banked
  9144  003CBA  5160               	movf	_UART2_TxInterruptHandler& (0+255),w,b
  9145  003CBC  1161               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
  9146  003CBE  1162               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
  9147  003CC0  B4D8               	btfsc	status,2,c
  9148  003CC2  0011               	retfie		f
  9149                           
  9150                           ; BSR set to: 1
  9151                           ;mcc_generated_files/uart2.c: 229:     {;mcc_generated_files/uart2.c: 230:         UART2
      +                          _TxInterruptHandler();
  9152  003CC4  D801               	call	i2u298_48
  9153  003CC6  0011               	retfie		f
  9154  003CC8                     i2u298_48:
  9155  003CC8  0005               	push	
  9156  003CCA  6EFA               	movwf	pclath,c
  9157  003CCC  5160               	movf	_UART2_TxInterruptHandler& (0+255),w,b
  9158  003CCE  6EFD               	movwf	tosl,c
  9159  003CD0  5161               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
  9160  003CD2  6EFE               	movwf	tosh,c
  9161  003CD4  5162               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
  9162  003CD6  6EFF               	movwf	tosu,c
  9163  003CD8  50FA               	movf	pclath,w,c
  9164  003CDA  0012               	return		;indir
  9165  003CDC                     __end_of_UART2_tx_vect_isr:
  9166                           	opt callstack 0
  9167                           
  9168 ;; *************** function _UART2_Transmit_ISR *****************
  9169 ;; Defined at:
  9170 ;;		line 244 in file "mcc_generated_files/uart2.c"
  9171 ;; Parameters:    Size  Location     Type
  9172 ;;		None
  9173 ;; Auto vars:     Size  Location     Type
  9174 ;;		None
  9175 ;; Return value:  Size  Location     Type
  9176 ;;                  1    wreg      void 
  9177 ;; Registers used:
  9178 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9179 ;; Tracked objects:
  9180 ;;		On entry : 3F/1
  9181 ;;		On exit  : 6/0
  9182 ;;		Unchanged: 0/0
  9183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9188 ;;Total ram usage:        0 bytes
  9189 ;; Hardware stack levels used:    1
  9190 ;; This function calls:
  9191 ;;		Nothing
  9192 ;; This function is called by:
  9193 ;;		_UART2_Initialize
  9194 ;;		_UART2_tx_vect_isr
  9195 ;; This function uses a non-reentrant model
  9196 ;;
  9197                           
  9198                           	psect	text73
  9199  003AF8                     __ptext73:
  9200                           	opt callstack 0
  9201  003AF8                     _UART2_Transmit_ISR:
  9202                           	opt callstack 19
  9203                           
  9204                           ; BSR set to: 1
  9205                           ;mcc_generated_files/uart2.c: 247:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
  9206                           
  9207                           ;incstack = 0
  9208  003AF8  0E08               	movlw	8
  9209  003AFA  0100               	movlb	0	; () banked
  9210  003AFC  61F8               	cpfslt	_uart2TxBufferRemaining& (0+255),b
  9211  003AFE  D012               	goto	i2l516
  9212                           
  9213                           ; BSR set to: 0
  9214                           ;mcc_generated_files/uart2.c: 248:     {;mcc_generated_files/uart2.c: 249:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
  9215  003B00  0E1E               	movlw	low _uart2TxBuffer
  9216  003B02  25F9               	addwf	_uart2TxTail& (0+255),w,b	;volatile
  9217  003B04  6ED9               	movwf	fsr2l,c
  9218  003B06  6ADA               	clrf	fsr2h,c
  9219  003B08  0E01               	movlw	high _uart2TxBuffer
  9220  003B0A  22DA               	addwfc	fsr2h,f,c
  9221  003B0C  50DF               	movf	indf2,w,c
  9222  003B0E  013D               	movlb	61	; () banked
  9223  003B10  6FD2               	movwf	210,b	;volatile
  9224                           
  9225                           ; BSR set to: 61
  9226  003B12  0100               	movlb	0	; () banked
  9227  003B14  2BF9               	incf	_uart2TxTail& (0+255),f,b	;volatile
  9228                           
  9229                           ; BSR set to: 0
  9230                           ;mcc_generated_files/uart2.c: 250:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
  9231  003B16  0E07               	movlw	7
  9232  003B18  65F9               	cpfsgt	_uart2TxTail& (0+255),b
  9233  003B1A  D002               	goto	i2l4059
  9234                           
  9235                           ; BSR set to: 0
  9236                           ;mcc_generated_files/uart2.c: 251:         {;mcc_generated_files/uart2.c: 252:          
      +                             uart2TxTail = 0;
  9237  003B1C  0E00               	movlw	0
  9238  003B1E  6FF9               	movwf	_uart2TxTail& (0+255),b	;volatile
  9239  003B20                     i2l4059:
  9240                           
  9241                           ; BSR set to: 0
  9242                           ;mcc_generated_files/uart2.c: 254:         uart2TxBufferRemaining++;
  9243  003B20  2BF8               	incf	_uart2TxBufferRemaining& (0+255),f,b	;volatile
  9244                           
  9245                           ;mcc_generated_files/uart2.c: 255:     }
  9246  003B22  0012               	return	
  9247  003B24                     i2l516:
  9248                           
  9249                           ; BSR set to: 0
  9250                           ;mcc_generated_files/uart2.c: 257:     {;mcc_generated_files/uart2.c: 258:         PIE6b
      +                          its.U2TXIE = 0;
  9251  003B24  0139               	movlb	57	; () banked
  9252  003B26  9796               	bcf	150,3,b	;volatile
  9253  003B28  0012               	return		;funcret
  9254  003B2A                     __end_of_UART2_Transmit_ISR:
  9255                           	opt callstack 0
  9256                           
  9257 ;; *************** function _UART2_rx_vect_isr *****************
  9258 ;; Defined at:
  9259 ;;		line 234 in file "mcc_generated_files/uart2.c"
  9260 ;; Parameters:    Size  Location     Type
  9261 ;;		None
  9262 ;; Auto vars:     Size  Location     Type
  9263 ;;		None
  9264 ;; Return value:  Size  Location     Type
  9265 ;;                  1    wreg      void 
  9266 ;; Registers used:
  9267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  9268 ;; Tracked objects:
  9269 ;;		On entry : 0/0
  9270 ;;		On exit  : 0/0
  9271 ;;		Unchanged: 0/0
  9272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9277 ;;Total ram usage:        0 bytes
  9278 ;; Hardware stack levels used:    1
  9279 ;; Hardware stack levels required when called:    3
  9280 ;; This function calls:
  9281 ;;		Absolute function
  9282 ;;		_UART2_Receive_ISR
  9283 ;; This function is called by:
  9284 ;;		Interrupt level 2
  9285 ;; This function uses a non-reentrant model
  9286 ;;
  9287                           
  9288                           	psect	text74
  9289  003CDC                     __ptext74:
  9290                           	opt callstack 0
  9291  003CDC                     _UART2_rx_vect_isr:
  9292                           	opt callstack 17
  9293                           
  9294                           ;mcc_generated_files/uart2.c: 236:     if(UART2_RxInterruptHandler)
  9295                           
  9296                           ;incstack = 0
  9297  003CDC  0101               	movlb	1	; () banked
  9298  003CDE  5163               	movf	_UART2_RxInterruptHandler& (0+255),w,b
  9299  003CE0  1164               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
  9300  003CE2  1165               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
  9301  003CE4  B4D8               	btfsc	status,2,c
  9302  003CE6  0011               	retfie		f
  9303                           
  9304                           ; BSR set to: 1
  9305                           ;mcc_generated_files/uart2.c: 237:     {;mcc_generated_files/uart2.c: 238:         UART2
      +                          _RxInterruptHandler();
  9306  003CE8  D801               	call	i2u300_48
  9307  003CEA  0011               	retfie		f
  9308  003CEC                     i2u300_48:
  9309  003CEC  0005               	push	
  9310  003CEE  6EFA               	movwf	pclath,c
  9311  003CF0  5163               	movf	_UART2_RxInterruptHandler& (0+255),w,b
  9312  003CF2  6EFD               	movwf	tosl,c
  9313  003CF4  5164               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
  9314  003CF6  6EFE               	movwf	tosh,c
  9315  003CF8  5165               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
  9316  003CFA  6EFF               	movwf	tosu,c
  9317  003CFC  50FA               	movf	pclath,w,c
  9318  003CFE  0012               	return		;indir
  9319  003D00                     __end_of_UART2_rx_vect_isr:
  9320                           	opt callstack 0
  9321                           
  9322 ;; *************** function _UART2_Receive_ISR *****************
  9323 ;; Defined at:
  9324 ;;		line 264 in file "mcc_generated_files/uart2.c"
  9325 ;; Parameters:    Size  Location     Type
  9326 ;;		None
  9327 ;; Auto vars:     Size  Location     Type
  9328 ;;		None
  9329 ;; Return value:  Size  Location     Type
  9330 ;;                  1    wreg      void 
  9331 ;; Registers used:
  9332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  9333 ;; Tracked objects:
  9334 ;;		On entry : 3F/1
  9335 ;;		On exit  : 0/0
  9336 ;;		Unchanged: 0/0
  9337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9342 ;;Total ram usage:        0 bytes
  9343 ;; Hardware stack levels used:    1
  9344 ;; Hardware stack levels required when called:    2
  9345 ;; This function calls:
  9346 ;;		Absolute function
  9347 ;;		_UART2_DefaultErrorHandler
  9348 ;;		_UART2_DefaultFramingErrorHandler
  9349 ;;		_UART2_DefaultOverrunErrorHandler
  9350 ;;		_UART2_RxDataHandler
  9351 ;; This function is called by:
  9352 ;;		_UART2_Initialize
  9353 ;;		_UART2_rx_vect_isr
  9354 ;; This function uses a non-reentrant model
  9355 ;;
  9356                           
  9357                           	psect	text75
  9358  003350                     __ptext75:
  9359                           	opt callstack 0
  9360  003350                     _UART2_Receive_ISR:
  9361                           	opt callstack 17
  9362                           
  9363                           ; BSR set to: 1
  9364                           ;mcc_generated_files/uart2.c: 267:     uart2RxStatusBuffer[uart2RxHead].status = 0;
  9365                           
  9366                           ;incstack = 0
  9367  003350  0E0E               	movlw	low _uart2RxStatusBuffer
  9368  003352  2459               	addwf	_uart2RxHead^0,w,c	;volatile
  9369  003354  6ED9               	movwf	fsr2l,c
  9370  003356  6ADA               	clrf	fsr2h,c
  9371  003358  0E01               	movlw	high _uart2RxStatusBuffer
  9372  00335A  22DA               	addwfc	fsr2h,f,c
  9373  00335C  0E00               	movlw	0
  9374  00335E  6EDF               	movwf	indf2,c
  9375                           
  9376                           ; BSR set to: 1
  9377                           ;mcc_generated_files/uart2.c: 269:     if(U2ERRIRbits.FERIF){
  9378  003360  013D               	movlb	61	; () banked
  9379  003362  A7E1               	btfss	225,3,b	;volatile
  9380  003364  D014               	goto	i2u255_49
  9381                           
  9382                           ; BSR set to: 61
  9383                           ;mcc_generated_files/uart2.c: 270:         uart2RxStatusBuffer[uart2RxHead].ferr = 1;
  9384  003366  0E0E               	movlw	low _uart2RxStatusBuffer
  9385  003368  2459               	addwf	_uart2RxHead^0,w,c	;volatile
  9386  00336A  6ED9               	movwf	fsr2l,c
  9387  00336C  6ADA               	clrf	fsr2h,c
  9388  00336E  0E01               	movlw	high _uart2RxStatusBuffer
  9389  003370  22DA               	addwfc	fsr2h,f,c
  9390  003372  0101               	movlb	1	; () banked
  9391  003374  82DF               	bsf	indf2,1,c
  9392                           
  9393                           ; BSR set to: 1
  9394                           ;mcc_generated_files/uart2.c: 271:         UART2_FramingErrorHandler();
  9395  003376  D801               	call	i2u255_48
  9396  003378  D00A               	goto	i2u255_49
  9397  00337A                     i2u255_48:
  9398  00337A  0005               	push	
  9399  00337C  6EFA               	movwf	pclath,c
  9400  00337E  514E               	movf	_UART2_FramingErrorHandler& (0+255),w,b
  9401  003380  6EFD               	movwf	tosl,c
  9402  003382  514F               	movf	(_UART2_FramingErrorHandler+1)& (0+255),w,b
  9403  003384  6EFE               	movwf	tosh,c
  9404  003386  5150               	movf	(_UART2_FramingErrorHandler+2)& (0+255),w,b
  9405  003388  6EFF               	movwf	tosu,c
  9406  00338A  50FA               	movf	pclath,w,c
  9407  00338C  0012               	return		;indir
  9408  00338E                     i2u255_49:
  9409                           
  9410                           ;mcc_generated_files/uart2.c: 274:     if(U2ERRIRbits.RXFOIF){
  9411  00338E  013D               	movlb	61	; () banked
  9412  003390  A3E1               	btfss	225,1,b	;volatile
  9413  003392  D014               	goto	i2u257_49
  9414                           
  9415                           ; BSR set to: 61
  9416                           ;mcc_generated_files/uart2.c: 275:         uart2RxStatusBuffer[uart2RxHead].oerr = 1;
  9417  003394  0E0E               	movlw	low _uart2RxStatusBuffer
  9418  003396  2459               	addwf	_uart2RxHead^0,w,c	;volatile
  9419  003398  6ED9               	movwf	fsr2l,c
  9420  00339A  6ADA               	clrf	fsr2h,c
  9421  00339C  0E01               	movlw	high _uart2RxStatusBuffer
  9422  00339E  22DA               	addwfc	fsr2h,f,c
  9423  0033A0  0101               	movlb	1	; () banked
  9424  0033A2  84DF               	bsf	indf2,2,c
  9425                           
  9426                           ; BSR set to: 1
  9427                           ;mcc_generated_files/uart2.c: 276:         UART2_OverrunErrorHandler();
  9428  0033A4  D801               	call	i2u257_48
  9429  0033A6  D00A               	goto	i2u257_49
  9430  0033A8                     i2u257_48:
  9431  0033A8  0005               	push	
  9432  0033AA  6EFA               	movwf	pclath,c
  9433  0033AC  514B               	movf	_UART2_OverrunErrorHandler& (0+255),w,b
  9434  0033AE  6EFD               	movwf	tosl,c
  9435  0033B0  514C               	movf	(_UART2_OverrunErrorHandler+1)& (0+255),w,b
  9436  0033B2  6EFE               	movwf	tosh,c
  9437  0033B4  514D               	movf	(_UART2_OverrunErrorHandler+2)& (0+255),w,b
  9438  0033B6  6EFF               	movwf	tosu,c
  9439  0033B8  50FA               	movf	pclath,w,c
  9440  0033BA  0012               	return		;indir
  9441  0033BC                     i2u257_49:
  9442                           
  9443                           ;mcc_generated_files/uart2.c: 279:     if(uart2RxStatusBuffer[uart2RxHead].status){
  9444  0033BC  0E0E               	movlw	low _uart2RxStatusBuffer
  9445  0033BE  2459               	addwf	_uart2RxHead^0,w,c	;volatile
  9446  0033C0  6ED9               	movwf	fsr2l,c
  9447  0033C2  6ADA               	clrf	fsr2h,c
  9448  0033C4  0E01               	movlw	high _uart2RxStatusBuffer
  9449  0033C6  22DA               	addwfc	fsr2h,f,c
  9450  0033C8  50DF               	movf	indf2,w,c
  9451  0033CA  B4D8               	btfsc	status,2,c
  9452  0033CC  D00D               	goto	i2l4079
  9453                           
  9454                           ;mcc_generated_files/uart2.c: 280:         UART2_ErrorHandler();
  9455  0033CE  D801               	call	i2u259_48
  9456  0033D0  0012               	return	
  9457  0033D2                     i2u259_48:
  9458  0033D2  0005               	push	
  9459  0033D4  6EFA               	movwf	pclath,c
  9460  0033D6  0101               	movlb	1	; () banked
  9461  0033D8  5148               	movf	_UART2_ErrorHandler& (0+255),w,b
  9462  0033DA  6EFD               	movwf	tosl,c
  9463  0033DC  5149               	movf	(_UART2_ErrorHandler+1)& (0+255),w,b
  9464  0033DE  6EFE               	movwf	tosh,c
  9465  0033E0  514A               	movf	(_UART2_ErrorHandler+2)& (0+255),w,b
  9466  0033E2  6EFF               	movwf	tosu,c
  9467  0033E4  50FA               	movf	pclath,w,c
  9468  0033E6  0012               	return		;indir
  9469  0033E8                     i2l4079:
  9470                           
  9471                           ;mcc_generated_files/uart2.c: 282:         UART2_RxDataHandler();
  9472  0033E8  EC80  F01E         	call	_UART2_RxDataHandler	;wreg free
  9473  0033EC  0012               	return		;funcret
  9474  0033EE                     __end_of_UART2_Receive_ISR:
  9475                           	opt callstack 0
  9476                           
  9477 ;; *************** function _UART2_DefaultOverrunErrorHandler *****************
  9478 ;; Defined at:
  9479 ;;		line 300 in file "mcc_generated_files/uart2.c"
  9480 ;; Parameters:    Size  Location     Type
  9481 ;;		None
  9482 ;; Auto vars:     Size  Location     Type
  9483 ;;		None
  9484 ;; Return value:  Size  Location     Type
  9485 ;;                  1    wreg      void 
  9486 ;; Registers used:
  9487 ;;		None
  9488 ;; Tracked objects:
  9489 ;;		On entry : 3F/1
  9490 ;;		On exit  : 3F/1
  9491 ;;		Unchanged: 3F/0
  9492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9497 ;;Total ram usage:        0 bytes
  9498 ;; Hardware stack levels used:    1
  9499 ;; This function calls:
  9500 ;;		Nothing
  9501 ;; This function is called by:
  9502 ;;		_UART2_Initialize
  9503 ;;		_UART2_Receive_ISR
  9504 ;; This function uses a non-reentrant model
  9505 ;;
  9506                           
  9507                           	psect	text76
  9508  003FAE                     __ptext76:
  9509                           	opt callstack 0
  9510  003FAE                     _UART2_DefaultOverrunErrorHandler:
  9511                           	opt callstack 18
  9512                           
  9513                           ; BSR set to: 1
  9514                           
  9515                           ;incstack = 0
  9516  003FAE  0012               	return		;funcret
  9517  003FB0                     __end_of_UART2_DefaultOverrunErrorHandler:
  9518                           	opt callstack 0
  9519                           
  9520 ;; *************** function _UART2_DefaultFramingErrorHandler *****************
  9521 ;; Defined at:
  9522 ;;		line 298 in file "mcc_generated_files/uart2.c"
  9523 ;; Parameters:    Size  Location     Type
  9524 ;;		None
  9525 ;; Auto vars:     Size  Location     Type
  9526 ;;		None
  9527 ;; Return value:  Size  Location     Type
  9528 ;;                  1    wreg      void 
  9529 ;; Registers used:
  9530 ;;		None
  9531 ;; Tracked objects:
  9532 ;;		On entry : 3F/1
  9533 ;;		On exit  : 3F/1
  9534 ;;		Unchanged: 3F/0
  9535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9540 ;;Total ram usage:        0 bytes
  9541 ;; Hardware stack levels used:    1
  9542 ;; This function calls:
  9543 ;;		Nothing
  9544 ;; This function is called by:
  9545 ;;		_UART2_Initialize
  9546 ;;		_UART2_Receive_ISR
  9547 ;; This function uses a non-reentrant model
  9548 ;;
  9549                           
  9550                           	psect	text77
  9551  003FB0                     __ptext77:
  9552                           	opt callstack 0
  9553  003FB0                     _UART2_DefaultFramingErrorHandler:
  9554                           	opt callstack 18
  9555                           
  9556                           ; BSR set to: 1
  9557                           
  9558                           ; BSR set to: 1
  9559                           ;incstack = 0
  9560  003FB0  0012               	return		;funcret
  9561  003FB2                     __end_of_UART2_DefaultFramingErrorHandler:
  9562                           	opt callstack 0
  9563                           
  9564 ;; *************** function _UART2_DefaultErrorHandler *****************
  9565 ;; Defined at:
  9566 ;;		line 302 in file "mcc_generated_files/uart2.c"
  9567 ;; Parameters:    Size  Location     Type
  9568 ;;		None
  9569 ;; Auto vars:     Size  Location     Type
  9570 ;;		None
  9571 ;; Return value:  Size  Location     Type
  9572 ;;                  1    wreg      void 
  9573 ;; Registers used:
  9574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9575 ;; Tracked objects:
  9576 ;;		On entry : 3F/1
  9577 ;;		On exit  : 3F/0
  9578 ;;		Unchanged: 0/0
  9579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9584 ;;Total ram usage:        0 bytes
  9585 ;; Hardware stack levels used:    1
  9586 ;; Hardware stack levels required when called:    1
  9587 ;; This function calls:
  9588 ;;		_UART2_RxDataHandler
  9589 ;; This function is called by:
  9590 ;;		_UART2_Initialize
  9591 ;;		_UART2_Receive_ISR
  9592 ;; This function uses a non-reentrant model
  9593 ;;
  9594                           
  9595                           	psect	text78
  9596  003F9E                     __ptext78:
  9597                           	opt callstack 0
  9598  003F9E                     _UART2_DefaultErrorHandler:
  9599                           	opt callstack 17
  9600                           
  9601                           ; BSR set to: 1
  9602                           ;mcc_generated_files/uart2.c: 303:     UART2_RxDataHandler();
  9603                           
  9604                           ; BSR set to: 1
  9605                           ;incstack = 0
  9606  003F9E  EC80  F01E         	call	_UART2_RxDataHandler	;wreg free
  9607                           
  9608                           ; BSR set to: 0
  9609  003FA2  0012               	return		;funcret
  9610  003FA4                     __end_of_UART2_DefaultErrorHandler:
  9611                           	opt callstack 0
  9612                           
  9613 ;; *************** function _UART2_RxDataHandler *****************
  9614 ;; Defined at:
  9615 ;;		line 288 in file "mcc_generated_files/uart2.c"
  9616 ;; Parameters:    Size  Location     Type
  9617 ;;		None
  9618 ;; Auto vars:     Size  Location     Type
  9619 ;;		None
  9620 ;; Return value:  Size  Location     Type
  9621 ;;                  1    wreg      void 
  9622 ;; Registers used:
  9623 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9624 ;; Tracked objects:
  9625 ;;		On entry : 0/3D
  9626 ;;		On exit  : 3F/0
  9627 ;;		Unchanged: 0/0
  9628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9633 ;;Total ram usage:        0 bytes
  9634 ;; Hardware stack levels used:    1
  9635 ;; This function calls:
  9636 ;;		Nothing
  9637 ;; This function is called by:
  9638 ;;		_UART2_Receive_ISR
  9639 ;;		_UART2_DefaultErrorHandler
  9640 ;; This function uses a non-reentrant model
  9641 ;;
  9642                           
  9643                           	psect	text79
  9644  003D00                     __ptext79:
  9645                           	opt callstack 0
  9646  003D00                     _UART2_RxDataHandler:
  9647                           	opt callstack 18
  9648                           
  9649                           ;mcc_generated_files/uart2.c: 290:     uart2RxBuffer[uart2RxHead++] = U2RXB;
  9650                           
  9651                           ; BSR set to: 0
  9652                           ;incstack = 0
  9653  003D00  0E16               	movlw	low _uart2RxBuffer
  9654  003D02  2459               	addwf	_uart2RxHead^0,w,c	;volatile
  9655  003D04  6ED9               	movwf	fsr2l,c
  9656  003D06  6ADA               	clrf	fsr2h,c
  9657  003D08  0E01               	movlw	high _uart2RxBuffer
  9658  003D0A  22DA               	addwfc	fsr2h,f,c
  9659  003D0C  006F F743 FFDF     	movff	15824,indf2	;volatile
  9660  003D12  2A59               	incf	_uart2RxHead^0,f,c	;volatile
  9661                           
  9662                           ;mcc_generated_files/uart2.c: 291:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
  9663  003D14  0E07               	movlw	7
  9664  003D16  6459               	cpfsgt	_uart2RxHead^0,c
  9665  003D18  D002               	goto	i2l3665
  9666                           
  9667                           ;mcc_generated_files/uart2.c: 292:     {;mcc_generated_files/uart2.c: 293:         uart2
      +                          RxHead = 0;
  9668  003D1A  0E00               	movlw	0
  9669  003D1C  6E59               	movwf	_uart2RxHead^0,c	;volatile
  9670  003D1E                     i2l3665:
  9671                           
  9672                           ;mcc_generated_files/uart2.c: 295:     uart2RxCount++;
  9673  003D1E  0100               	movlb	0	; () banked
  9674  003D20  2BF7               	incf	_uart2RxCount& (0+255),f,b	;volatile
  9675                           
  9676                           ; BSR set to: 0
  9677  003D22  0012               	return		;funcret
  9678  003D24                     __end_of_UART2_RxDataHandler:
  9679                           	opt callstack 0
  9680                           
  9681 ;; *************** function _TMR6_ISR *****************
  9682 ;; Defined at:
  9683 ;;		line 168 in file "mcc_generated_files/tmr6.c"
  9684 ;; Parameters:    Size  Location     Type
  9685 ;;		None
  9686 ;; Auto vars:     Size  Location     Type
  9687 ;;		None
  9688 ;; Return value:  Size  Location     Type
  9689 ;;                  1    wreg      void 
  9690 ;; Registers used:
  9691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  9692 ;; Tracked objects:
  9693 ;;		On entry : 0/0
  9694 ;;		On exit  : 0/0
  9695 ;;		Unchanged: 0/0
  9696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9701 ;;Total ram usage:        0 bytes
  9702 ;; Hardware stack levels used:    1
  9703 ;; Hardware stack levels required when called:    1
  9704 ;; This function calls:
  9705 ;;		Absolute function
  9706 ;;		_TMR6_DefaultInterruptHandler
  9707 ;; This function is called by:
  9708 ;;		Interrupt level 2
  9709 ;; This function uses a non-reentrant model
  9710 ;;
  9711                           
  9712                           	psect	text80
  9713  003BDC                     __ptext80:
  9714                           	opt callstack 0
  9715  003BDC                     _TMR6_ISR:
  9716                           	opt callstack 19
  9717                           
  9718                           ;mcc_generated_files/tmr6.c: 172:  PIR9bits.TMR6IF = 0;
  9719                           
  9720                           ; BSR set to: 0
  9721                           ;incstack = 0
  9722  003BDC  0139               	movlb	57	; () banked
  9723  003BDE  91A9               	bcf	169,0,b	;volatile
  9724                           
  9725                           ; BSR set to: 57
  9726                           ;mcc_generated_files/tmr6.c: 174:  if (TMR6_InterruptHandler) {
  9727  003BE0  0101               	movlb	1	; () banked
  9728  003BE2  5145               	movf	_TMR6_InterruptHandler& (0+255),w,b
  9729  003BE4  1146               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
  9730  003BE6  1147               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
  9731  003BE8  B4D8               	btfsc	status,2,c
  9732  003BEA  0011               	retfie		f
  9733                           
  9734                           ; BSR set to: 1
  9735                           ;mcc_generated_files/tmr6.c: 175:   TMR6_InterruptHandler();
  9736  003BEC  D801               	call	i2u302_48
  9737  003BEE  0011               	retfie		f
  9738  003BF0                     i2u302_48:
  9739  003BF0  0005               	push	
  9740  003BF2  6EFA               	movwf	pclath,c
  9741  003BF4  5145               	movf	_TMR6_InterruptHandler& (0+255),w,b
  9742  003BF6  6EFD               	movwf	tosl,c
  9743  003BF8  5146               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
  9744  003BFA  6EFE               	movwf	tosh,c
  9745  003BFC  5147               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
  9746  003BFE  6EFF               	movwf	tosu,c
  9747  003C00  50FA               	movf	pclath,w,c
  9748  003C02  0012               	return		;indir
  9749  003C04                     __end_of_TMR6_ISR:
  9750                           	opt callstack 0
  9751                           
  9752 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  9753 ;; Defined at:
  9754 ;;		line 184 in file "mcc_generated_files/tmr6.c"
  9755 ;; Parameters:    Size  Location     Type
  9756 ;;		None
  9757 ;; Auto vars:     Size  Location     Type
  9758 ;;  i               1    2[COMRAM] unsigned char 
  9759 ;; Return value:  Size  Location     Type
  9760 ;;                  1    wreg      void 
  9761 ;; Registers used:
  9762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9763 ;; Tracked objects:
  9764 ;;		On entry : 3F/1
  9765 ;;		On exit  : 3F/1
  9766 ;;		Unchanged: 3F/0
  9767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9769 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9770 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9771 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9772 ;;Total ram usage:        3 bytes
  9773 ;; Hardware stack levels used:    1
  9774 ;; This function calls:
  9775 ;;		Nothing
  9776 ;; This function is called by:
  9777 ;;		_TMR6_Initialize
  9778 ;;		_TMR6_ISR
  9779 ;; This function uses a non-reentrant model
  9780 ;;
  9781                           
  9782                           	psect	text81
  9783  003946                     __ptext81:
  9784                           	opt callstack 0
  9785  003946                     _TMR6_DefaultInterruptHandler:
  9786                           	opt callstack 19
  9787                           
  9788                           ; BSR set to: 1
  9789                           ;mcc_generated_files/tmr6.c: 186:  uint8_t i;;mcc_generated_files/tmr6.c: 190:  for (i =
      +                           0; i < TMR_COUNT; i++) {
  9790                           
  9791                           ;incstack = 0
  9792  003946  0E00               	movlw	0
  9793  003948  6E03               	movwf	TMR6_DefaultInterruptHandler@i^0,c
  9794  00394A                     i2l4087:
  9795                           
  9796                           ; BSR set to: 1
  9797                           ;mcc_generated_files/tmr6.c: 191:   if (tickCount[i] != 0) {
  9798  00394A  5003               	movf	TMR6_DefaultInterruptHandler@i^0,w,c
  9799  00394C  0D02               	mullw	2
  9800  00394E  0E00               	movlw	low _tickCount
  9801  003950  24F3               	addwf	243,w,c
  9802  003952  6ED9               	movwf	fsr2l,c
  9803  003954  0E01               	movlw	high _tickCount
  9804  003956  20F4               	addwfc	prodh,w,c
  9805  003958  6EDA               	movwf	fsr2h,c
  9806  00395A  50DE               	movf	postinc2,w,c
  9807  00395C  10DE               	iorwf	postinc2,w,c
  9808  00395E  B4D8               	btfsc	status,2,c
  9809  003960  D00B               	goto	i2l4091
  9810                           
  9811                           ; BSR set to: 1
  9812                           ;mcc_generated_files/tmr6.c: 192:    tickCount[i]--;
  9813  003962  5003               	movf	TMR6_DefaultInterruptHandler@i^0,w,c
  9814  003964  0D02               	mullw	2
  9815  003966  0E00               	movlw	low _tickCount
  9816  003968  24F3               	addwf	243,w,c
  9817  00396A  6ED9               	movwf	fsr2l,c
  9818  00396C  0E01               	movlw	high _tickCount
  9819  00396E  20F4               	addwfc	prodh,w,c
  9820  003970  6EDA               	movwf	fsr2h,c
  9821  003972  06DE               	decf	postinc2,f,c
  9822  003974  0E00               	movlw	0
  9823  003976  5ADD               	subwfb	postdec2,f,c
  9824  003978                     i2l4091:
  9825                           
  9826                           ; BSR set to: 1
  9827                           ;mcc_generated_files/tmr6.c: 194:  }
  9828  003978  2A03               	incf	TMR6_DefaultInterruptHandler@i^0,f,c
  9829                           
  9830                           ; BSR set to: 1
  9831  00397A  0E06               	movlw	6
  9832  00397C  6403               	cpfsgt	TMR6_DefaultInterruptHandler@i^0,c
  9833  00397E  D7E5               	goto	i2l4087
  9834  003980  0012               	return	
  9835  003982                     __end_of_TMR6_DefaultInterruptHandler:
  9836                           	opt callstack 0
  9837                           
  9838 ;; *************** function _TMR5_ISR *****************
  9839 ;; Defined at:
  9840 ;;		line 166 in file "mcc_generated_files/tmr5.c"
  9841 ;; Parameters:    Size  Location     Type
  9842 ;;		None
  9843 ;; Auto vars:     Size  Location     Type
  9844 ;;		None
  9845 ;; Return value:  Size  Location     Type
  9846 ;;                  1    wreg      void 
  9847 ;; Registers used:
  9848 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9849 ;; Tracked objects:
  9850 ;;		On entry : 0/0
  9851 ;;		On exit  : 3F/1
  9852 ;;		Unchanged: 0/0
  9853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9858 ;;Total ram usage:        0 bytes
  9859 ;; Hardware stack levels used:    1
  9860 ;; Hardware stack levels required when called:    2
  9861 ;; This function calls:
  9862 ;;		_TMR5_CallBack
  9863 ;;		_TMR5_WriteTimer
  9864 ;; This function is called by:
  9865 ;;		Interrupt level 2
  9866 ;; This function uses a non-reentrant model
  9867 ;;
  9868                           
  9869                           	psect	text82
  9870  003A2C                     __ptext82:
  9871                           	opt callstack 0
  9872  003A2C                     _TMR5_ISR:
  9873                           	opt callstack 18
  9874                           
  9875                           ;mcc_generated_files/tmr5.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr5.c: 171:     PIR8bits.TMR5IF = 0;
  9876                           
  9877                           ; BSR set to: 1
  9878                           ;incstack = 0
  9879  003A2C  0139               	movlb	57	; () banked
  9880  003A2E  9DA8               	bcf	168,6,b	;volatile
  9881                           
  9882                           ; BSR set to: 57
  9883                           ;mcc_generated_files/tmr5.c: 172:     TMR5_WriteTimer(timer5ReloadVal);
  9884  003A30  0060  F5B8  F004   	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
  9885  003A36  0060  F5BC  F005   	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
  9886  003A3C  EC92  F01E         	call	_TMR5_WriteTimer	;wreg free
  9887                           
  9888                           ; BSR set to: 57
  9889                           ;mcc_generated_files/tmr5.c: 175:     if (++CountCallBack >= 50)
  9890  003A40  0101               	movlb	1	; () banked
  9891  003A42  4B6C               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
  9892  003A44  2B6D               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
  9893  003A46  516D               	movf	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
  9894  003A48  E104               	bnz	i2u303_40
  9895  003A4A  0E32               	movlw	50
  9896  003A4C  5D6C               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
  9897  003A4E  A0D8               	btfss	status,0,c
  9898  003A50  0011               	retfie		f
  9899  003A52                     i2u303_40:
  9900                           
  9901                           ; BSR set to: 1
  9902                           ;mcc_generated_files/tmr5.c: 176:     {;mcc_generated_files/tmr5.c: 178:         TMR5_Ca
      +                          llBack();
  9903  003A52  ECC6  F01E         	call	_TMR5_CallBack	;wreg free
  9904                           
  9905                           ;mcc_generated_files/tmr5.c: 181:         CountCallBack = 0;
  9906  003A56  0E00               	movlw	0
  9907  003A58  0101               	movlb	1	; () banked
  9908  003A5A  6F6D               	movwf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
  9909  003A5C  0E00               	movlw	0
  9910  003A5E  6F6C               	movwf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
  9911                           
  9912                           ; BSR set to: 1
  9913  003A60  0011               	retfie		f
  9914  003A62                     __end_of_TMR5_ISR:
  9915                           	opt callstack 0
  9916                           
  9917 ;; *************** function _TMR5_WriteTimer *****************
  9918 ;; Defined at:
  9919 ;;		line 129 in file "mcc_generated_files/tmr5.c"
  9920 ;; Parameters:    Size  Location     Type
  9921 ;;  timerVal        2    3[COMRAM] unsigned short 
  9922 ;; Auto vars:     Size  Location     Type
  9923 ;;		None
  9924 ;; Return value:  Size  Location     Type
  9925 ;;                  1    wreg      void 
  9926 ;; Registers used:
  9927 ;;		None
  9928 ;; Tracked objects:
  9929 ;;		On entry : 3F/39
  9930 ;;		On exit  : 3F/39
  9931 ;;		Unchanged: 3E/0
  9932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9933 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9936 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9937 ;;Total ram usage:        2 bytes
  9938 ;; Hardware stack levels used:    1
  9939 ;; This function calls:
  9940 ;;		Nothing
  9941 ;; This function is called by:
  9942 ;;		_TMR5_ISR
  9943 ;; This function uses a non-reentrant model
  9944 ;;
  9945                           
  9946                           	psect	text83
  9947  003D24                     __ptext83:
  9948                           	opt callstack 0
  9949  003D24                     _TMR5_WriteTimer:
  9950                           	opt callstack 19
  9951                           
  9952                           ; BSR set to: 57
  9953                           ;mcc_generated_files/tmr5.c: 129: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 130: {;mcc_generated_files/tmr5.c: 131:     if (T5CONbits.NOT_SYNC == 1)
  9954                           
  9955                           ; BSR set to: 1
  9956                           ;incstack = 0
  9957  003D24  A49A               	btfss	154,2,c	;volatile
  9958  003D26  D009               	goto	i2l774
  9959                           
  9960                           ; BSR set to: 57
  9961                           ;mcc_generated_files/tmr5.c: 132:     {;mcc_generated_files/tmr5.c: 134:         T5CONbi
      +                          ts.TMR5ON = 0;
  9962  003D28  909A               	bcf	154,0,c	;volatile
  9963                           
  9964                           ;mcc_generated_files/tmr5.c: 137:         TMR5H = (timerVal >> 8);
  9965  003D2A  0060  F017  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
  9966                           
  9967                           ;mcc_generated_files/tmr5.c: 138:         TMR5L = timerVal;
  9968  003D30  0060  F013  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
  9969                           
  9970                           ;mcc_generated_files/tmr5.c: 141:         T5CONbits.TMR5ON =1;
  9971  003D36  809A               	bsf	154,0,c	;volatile
  9972                           
  9973                           ;mcc_generated_files/tmr5.c: 142:     }
  9974  003D38  0012               	return	
  9975  003D3A                     i2l774:
  9976                           
  9977                           ; BSR set to: 57
  9978                           ;mcc_generated_files/tmr5.c: 144:     {;mcc_generated_files/tmr5.c: 146:         TMR5H =
      +                           (timerVal >> 8);
  9979  003D3A  0060  F017  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
  9980                           
  9981                           ;mcc_generated_files/tmr5.c: 147:         TMR5L = timerVal;
  9982  003D40  0060  F013  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
  9983                           
  9984                           ; BSR set to: 57
  9985  003D46  0012               	return		;funcret
  9986  003D48                     __end_of_TMR5_WriteTimer:
  9987                           	opt callstack 0
  9988                           
  9989 ;; *************** function _TMR5_CallBack *****************
  9990 ;; Defined at:
  9991 ;;		line 185 in file "mcc_generated_files/tmr5.c"
  9992 ;; Parameters:    Size  Location     Type
  9993 ;;		None
  9994 ;; Auto vars:     Size  Location     Type
  9995 ;;		None
  9996 ;; Return value:  Size  Location     Type
  9997 ;;                  1    wreg      void 
  9998 ;; Registers used:
  9999 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10000 ;; Tracked objects:
 10001 ;;		On entry : 3F/1
 10002 ;;		On exit  : 0/0
 10003 ;;		Unchanged: 0/0
 10004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10009 ;;Total ram usage:        0 bytes
 10010 ;; Hardware stack levels used:    1
 10011 ;; Hardware stack levels required when called:    1
 10012 ;; This function calls:
 10013 ;;		Absolute function
 10014 ;;		_TMR5_DefaultInterruptHandler
 10015 ;; This function is called by:
 10016 ;;		_TMR5_ISR
 10017 ;; This function uses a non-reentrant model
 10018 ;;
 10019                           
 10020                           	psect	text84
 10021  003D8C                     __ptext84:
 10022                           	opt callstack 0
 10023  003D8C                     _TMR5_CallBack:
 10024                           	opt callstack 18
 10025                           
 10026                           ; BSR set to: 1
 10027                           ;mcc_generated_files/tmr5.c: 188:     if(TMR5_InterruptHandler)
 10028                           
 10029                           ; BSR set to: 57
 10030                           ;incstack = 0
 10031  003D8C  5142               	movf	_TMR5_InterruptHandler& (0+255),w,b
 10032  003D8E  1143               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 10033  003D90  1144               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 10034  003D92  B4D8               	btfsc	status,2,c
 10035  003D94  0012               	return	
 10036                           
 10037                           ; BSR set to: 1
 10038                           ;mcc_generated_files/tmr5.c: 189:     {;mcc_generated_files/tmr5.c: 190:         TMR5_In
      +                          terruptHandler();
 10039  003D96  D801               	call	i2u264_48
 10040  003D98  0012               	return	
 10041  003D9A                     i2u264_48:
 10042  003D9A  0005               	push	
 10043  003D9C  6EFA               	movwf	pclath,c
 10044  003D9E  5142               	movf	_TMR5_InterruptHandler& (0+255),w,b
 10045  003DA0  6EFD               	movwf	tosl,c
 10046  003DA2  5143               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 10047  003DA4  6EFE               	movwf	tosh,c
 10048  003DA6  5144               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 10049  003DA8  6EFF               	movwf	tosu,c
 10050  003DAA  50FA               	movf	pclath,w,c
 10051  003DAC  0012               	return		;indir
 10052  003DAE                     __end_of_TMR5_CallBack:
 10053                           	opt callstack 0
 10054                           
 10055 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 10056 ;; Defined at:
 10057 ;;		line 198 in file "mcc_generated_files/tmr5.c"
 10058 ;; Parameters:    Size  Location     Type
 10059 ;;		None
 10060 ;; Auto vars:     Size  Location     Type
 10061 ;;		None
 10062 ;; Return value:  Size  Location     Type
 10063 ;;                  1    wreg      void 
 10064 ;; Registers used:
 10065 ;;		wreg, status,2, status,0
 10066 ;; Tracked objects:
 10067 ;;		On entry : 3F/1
 10068 ;;		On exit  : 3F/1
 10069 ;;		Unchanged: 3F/0
 10070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10073 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10074 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10075 ;;Total ram usage:        1 bytes
 10076 ;; Hardware stack levels used:    1
 10077 ;; This function calls:
 10078 ;;		Nothing
 10079 ;; This function is called by:
 10080 ;;		_TMR5_Initialize
 10081 ;;		_TMR5_CallBack
 10082 ;; This function uses a non-reentrant model
 10083 ;;
 10084                           
 10085                           	psect	text85
 10086  003E1E                     __ptext85:
 10087                           	opt callstack 0
 10088  003E1E                     _TMR5_DefaultInterruptHandler:
 10089                           	opt callstack 18
 10090                           
 10091                           ; BSR set to: 1
 10092                           ;mcc_generated_files/tmr5.c: 201:   LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 10093                           
 10094                           ;incstack = 0
 10095  003E1E  A0BE               	btfss	190,0,c	;volatile
 10096  003E20  D002               	goto	i2u236_40
 10097  003E22  0E01               	movlw	1
 10098  003E24  D001               	goto	i2u236_46
 10099  003E26                     i2u236_40:
 10100  003E26  0E00               	movlw	0
 10101  003E28                     i2u236_46:
 10102  003E28  0AFF               	xorlw	255
 10103  003E2A  6E04               	movwf	??_TMR5_DefaultInterruptHandler^0,c
 10104  003E2C  50BE               	movf	190,w,c	;volatile
 10105  003E2E  1804               	xorwf	??_TMR5_DefaultInterruptHandler^0,w,c
 10106  003E30  0BFE               	andlw	-2
 10107  003E32  1804               	xorwf	??_TMR5_DefaultInterruptHandler^0,w,c
 10108  003E34  6EBE               	movwf	190,c	;volatile
 10109                           
 10110                           ; BSR set to: 1
 10111  003E36  0012               	return		;funcret
 10112  003E38                     __end_of_TMR5_DefaultInterruptHandler:
 10113                           	opt callstack 0
 10114                           
 10115                           ;
 10116                           ; Interrupt Vector Table @ 0x8
 10117                           ;
 10118                           
 10119                           	psect	ivt0x8
 10120  000008                     __pivt0x8:
 10121                           	opt callstack 0
 10122  000008                     ivt0x8_base:
 10123                           	opt callstack 0
 10124                           
 10125                           ; Vector 0 : SWINT
 10126  000008  0FEA               	dw	_Default_ISR shr (0+2)
 10127                           
 10128                           ; Vector 1 : HLVD
 10129  00000A  0FEA               	dw	_Default_ISR shr (0+2)
 10130                           
 10131                           ; Vector 2 : OSF
 10132  00000C  0FEA               	dw	_Default_ISR shr (0+2)
 10133                           
 10134                           ; Vector 3 : CSW
 10135  00000E  0FEA               	dw	_Default_ISR shr (0+2)
 10136                           
 10137                           ; Vector 4 : NVM
 10138  000010  0FEA               	dw	_Default_ISR shr (0+2)
 10139                           
 10140                           ; Vector 5 : SCAN
 10141  000012  0FEA               	dw	_Default_ISR shr (0+2)
 10142                           
 10143                           ; Vector 6 : CRC
 10144  000014  0FEA               	dw	_Default_ISR shr (0+2)
 10145                           
 10146                           ; Vector 7 : IOC
 10147  000016  0FEA               	dw	_Default_ISR shr (0+2)
 10148                           
 10149                           ; Vector 8 : INT0
 10150  000018  0FEA               	dw	_Default_ISR shr (0+2)
 10151                           
 10152                           ; Vector 9 : ZCD
 10153  00001A  0FEA               	dw	_Default_ISR shr (0+2)
 10154                           
 10155                           ; Vector 10 : AD
 10156  00001C  0FEA               	dw	_Default_ISR shr (0+2)
 10157                           
 10158                           ; Vector 11 : ADT
 10159  00001E  0FEA               	dw	_Default_ISR shr (0+2)
 10160                           
 10161                           ; Vector 12 : CMP1
 10162  000020  0FEA               	dw	_Default_ISR shr (0+2)
 10163                           
 10164                           ; Vector 13 : SMT1
 10165  000022  0FEA               	dw	_Default_ISR shr (0+2)
 10166                           
 10167                           ; Vector 14 : SMT1PRA
 10168  000024  0FEA               	dw	_Default_ISR shr (0+2)
 10169                           
 10170                           ; Vector 15 : SMT1PRW
 10171  000026  0FEA               	dw	_Default_ISR shr (0+2)
 10172                           
 10173                           ; Vector 16 : DMA1SCNT
 10174  000028  0FEA               	dw	_Default_ISR shr (0+2)
 10175                           
 10176                           ; Vector 17 : DMA1DCNT
 10177  00002A  0FEA               	dw	_Default_ISR shr (0+2)
 10178                           
 10179                           ; Vector 18 : DMA1OR
 10180  00002C  0FEA               	dw	_Default_ISR shr (0+2)
 10181                           
 10182                           ; Vector 19 : DMA1A
 10183  00002E  0FEA               	dw	_Default_ISR shr (0+2)
 10184                           
 10185                           ; Vector 20 : SPI1RX
 10186  000030  0FEA               	dw	_Default_ISR shr (0+2)
 10187                           
 10188                           ; Vector 21 : SPI1TX
 10189  000032  0FEA               	dw	_Default_ISR shr (0+2)
 10190                           
 10191                           ; Vector 22 : SPI1
 10192  000034  0FEA               	dw	_Default_ISR shr (0+2)
 10193                           
 10194                           ; Vector 23 : I2C1RX
 10195  000036  0FEA               	dw	_Default_ISR shr (0+2)
 10196                           
 10197                           ; Vector 24 : I2C1TX
 10198  000038  0FEA               	dw	_Default_ISR shr (0+2)
 10199                           
 10200                           ; Vector 25 : I2C1
 10201  00003A  0FEA               	dw	_Default_ISR shr (0+2)
 10202                           
 10203                           ; Vector 26 : I2C1E
 10204  00003C  0FEA               	dw	_Default_ISR shr (0+2)
 10205                           
 10206                           ; Vector 27 : U1RX
 10207  00003E  0F1C               	dw	_UART1_rx_vect_isr shr (0+2)
 10208                           
 10209                           ; Vector 28 : U1TX
 10210  000040  0F13               	dw	_UART1_tx_vect_isr shr (0+2)
 10211                           
 10212                           ; Vector 29 : U1E
 10213  000042  0FEA               	dw	_Default_ISR shr (0+2)
 10214                           
 10215                           ; Vector 30 : U1
 10216  000044  0FEA               	dw	_Default_ISR shr (0+2)
 10217                           
 10218                           ; Vector 31 : TMR0
 10219  000046  0FEA               	dw	_Default_ISR shr (0+2)
 10220                           
 10221                           ; Vector 32 : TMR1
 10222  000048  0FEA               	dw	_Default_ISR shr (0+2)
 10223                           
 10224                           ; Vector 33 : TMR1G
 10225  00004A  0FEA               	dw	_Default_ISR shr (0+2)
 10226                           
 10227                           ; Vector 34 : TMR2
 10228  00004C  0FEA               	dw	_Default_ISR shr (0+2)
 10229                           
 10230                           ; Vector 35 : CCP1
 10231  00004E  0FEA               	dw	_Default_ISR shr (0+2)
 10232                           
 10233                           ; Vector 36 : Undefined
 10234  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 10235                           
 10236                           ; Vector 37 : NCO1
 10237  000052  0FEA               	dw	_Default_ISR shr (0+2)
 10238                           
 10239                           ; Vector 38 : CWG1
 10240  000054  0FEA               	dw	_Default_ISR shr (0+2)
 10241                           
 10242                           ; Vector 39 : CLC1
 10243  000056  0FEA               	dw	_Default_ISR shr (0+2)
 10244                           
 10245                           ; Vector 40 : INT1
 10246  000058  0FEA               	dw	_Default_ISR shr (0+2)
 10247                           
 10248                           ; Vector 41 : CMP2
 10249  00005A  0FEA               	dw	_Default_ISR shr (0+2)
 10250                           
 10251                           ; Vector 42 : DMA2SCNT
 10252  00005C  0FEA               	dw	_Default_ISR shr (0+2)
 10253                           
 10254                           ; Vector 43 : DMA2DCNT
 10255  00005E  0FEA               	dw	_Default_ISR shr (0+2)
 10256                           
 10257                           ; Vector 44 : DMA2OR
 10258  000060  0FEA               	dw	_Default_ISR shr (0+2)
 10259                           
 10260                           ; Vector 45 : DMA2A
 10261  000062  0FEA               	dw	_Default_ISR shr (0+2)
 10262                           
 10263                           ; Vector 46 : I2C2RX
 10264  000064  0FEA               	dw	_Default_ISR shr (0+2)
 10265                           
 10266                           ; Vector 47 : I2C2TX
 10267  000066  0FEA               	dw	_Default_ISR shr (0+2)
 10268                           
 10269                           ; Vector 48 : I2C2
 10270  000068  0FEA               	dw	_Default_ISR shr (0+2)
 10271                           
 10272                           ; Vector 49 : I2C2E
 10273  00006A  0FEA               	dw	_Default_ISR shr (0+2)
 10274                           
 10275                           ; Vector 50 : U2RX
 10276  00006C  0F37               	dw	_UART2_rx_vect_isr shr (0+2)
 10277                           
 10278                           ; Vector 51 : U2TX
 10279  00006E  0F2E               	dw	_UART2_tx_vect_isr shr (0+2)
 10280                           
 10281                           ; Vector 52 : U2E
 10282  000070  0FEA               	dw	_Default_ISR shr (0+2)
 10283                           
 10284                           ; Vector 53 : U2
 10285  000072  0FEA               	dw	_Default_ISR shr (0+2)
 10286                           
 10287                           ; Vector 54 : TMR3
 10288  000074  0FEA               	dw	_Default_ISR shr (0+2)
 10289                           
 10290                           ; Vector 55 : TMR3G
 10291  000076  0FEA               	dw	_Default_ISR shr (0+2)
 10292                           
 10293                           ; Vector 56 : TMR4
 10294  000078  0FEA               	dw	_Default_ISR shr (0+2)
 10295                           
 10296                           ; Vector 57 : CCP2
 10297  00007A  0FEA               	dw	_Default_ISR shr (0+2)
 10298                           
 10299                           ; Vector 58 : Undefined
 10300  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 10301                           
 10302                           ; Vector 59 : CWG2
 10303  00007E  0FEA               	dw	_Default_ISR shr (0+2)
 10304                           
 10305                           ; Vector 60 : CLC2
 10306  000080  0FEA               	dw	_Default_ISR shr (0+2)
 10307                           
 10308                           ; Vector 61 : INT2
 10309  000082  0FEA               	dw	_Default_ISR shr (0+2)
 10310                           
 10311                           ; Vector 62 : Undefined
 10312  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 10313                           
 10314                           ; Vector 63 : Undefined
 10315  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 10316                           
 10317                           ; Vector 64 : Undefined
 10318  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 10319                           
 10320                           ; Vector 65 : Undefined
 10321  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 10322                           
 10323                           ; Vector 66 : Undefined
 10324  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 10325                           
 10326                           ; Vector 67 : Undefined
 10327  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 10328                           
 10329                           ; Vector 68 : Undefined
 10330  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 10331                           
 10332                           ; Vector 69 : Undefined
 10333  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 10334                           
 10335                           ; Vector 70 : TMR5
 10336  000094  0E8B               	dw	_TMR5_ISR shr (0+2)
 10337                           
 10338                           ; Vector 71 : TMR5G
 10339  000096  0FEA               	dw	_Default_ISR shr (0+2)
 10340                           
 10341                           ; Vector 72 : TMR6
 10342  000098  0EF7               	dw	_TMR6_ISR shr (0+2)
 10343                           
 10344                           ; Vector 73 : CCP3
 10345  00009A  0FEA               	dw	_Default_ISR shr (0+2)
 10346                           
 10347                           ; Vector 74 : CWG3
 10348  00009C  0FEA               	dw	_Default_ISR shr (0+2)
 10349                           
 10350                           ; Vector 75 : CLC3
 10351  00009E  0FEA               	dw	_Default_ISR shr (0+2)
 10352                           
 10353                           ; Vector 76 : Undefined
 10354  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 10355                           
 10356                           ; Vector 77 : Undefined
 10357  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 10358                           
 10359                           ; Vector 78 : Undefined
 10360  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 10361                           
 10362                           ; Vector 79 : Undefined
 10363  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 10364                           
 10365                           ; Vector 80 : CCP4
 10366  0000A8  0FEA               	dw	_Default_ISR shr (0+2)
 10367                           
 10368                           ; Vector 81 : CLC4
 10369  0000AA  0FEA               	dw	_Default_ISR shr (0+2)
 10370  0000AC                     ivt0x8_undefint:
 10371                           	opt callstack 0
 10372  0000AC  00FF               	reset	
 10373                           
 10374                           	psect	text86
 10375  000000                     __ptext86:
 10376                           	opt callstack 0
 10377                           
 10378                           	psect	rparam
 10379  0000                     tosu	equ	0x3FFF
 10380                           tosh	equ	0x3FFE
 10381                           tosl	equ	0x3FFD
 10382                           stkptr	equ	0x3FFC
 10383                           pclatu	equ	0x3FFB
 10384                           pclath	equ	0x3FFA
 10385                           pcl	equ	0x3FF9
 10386                           tblptru	equ	0x3FF8
 10387                           tblptrh	equ	0x3FF7
 10388                           tblptrl	equ	0x3FF6
 10389                           tablat	equ	0x3FF5
 10390                           prodh	equ	0x3FF4
 10391                           prodl	equ	0x3FF3
 10392                           indf0	equ	0x3FEF
 10393                           postinc0	equ	0x3FEE
 10394                           postdec0	equ	0x3FED
 10395                           preinc0	equ	0x3FEC
 10396                           plusw0	equ	0x3FEB
 10397                           fsr0h	equ	0x3FEA
 10398                           fsr0l	equ	0x3FE9
 10399                           wreg	equ	0x3FE8
 10400                           indf1	equ	0x3FE7
 10401                           postinc1	equ	0x3FE6
 10402                           postdec1	equ	0x3FE5
 10403                           preinc1	equ	0x3FE4
 10404                           plusw1	equ	0x3FE3
 10405                           fsr1h	equ	0x3FE2
 10406                           fsr1l	equ	0x3FE1
 10407                           bsr	equ	0x3FE0
 10408                           indf2	equ	0x3FDF
 10409                           postinc2	equ	0x3FDE
 10410                           postdec2	equ	0x3FDD
 10411                           preinc2	equ	0x3FDC
 10412                           plusw2	equ	0x3FDB
 10413                           fsr2h	equ	0x3FDA
 10414                           fsr2l	equ	0x3FD9
 10415                           status	equ	0x3FD8


Data Sizes:
    Strings     72
    Constant    0
    Data        49
    BSS         165
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     85      90
    BANK0           160    146     160
    BANK1           256      4     199
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), 
		 -> STR_15(CODE[4]), STR_13(CODE[4]), STR_11(CODE[4]), STR_9(CODE[4]), 
		 -> STR_7(CODE[4]), STR_5(CODE[4]), STR_3(CODE[11]), work_sw@buffer(BANK0[128]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 128
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), 
		 -> STR_15(CODE[4]), STR_13(CODE[4]), STR_11(CODE[4]), STR_9(CODE[4]), 
		 -> STR_7(CODE[4]), STR_5(CODE[4]), STR_3(CODE[11]), work_sw@buffer(BANK0[128]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_14(CODE[3]), STR_12(CODE[3]), STR_10(CODE[3]), STR_8(CODE[3]), 
		 -> STR_6(CODE[3]), STR_4(CODE[3]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 128
		 -> work_sw@buffer(BANK0[128]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 128
		 -> work_sw@buffer(BANK0[128]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[5]), NULL(NULL[0]), 

    S3069_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 128
		 -> work_sw@buffer(BANK0[128]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 128
		 -> work_sw@buffer(BANK0[128]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[5]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[5]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_14(CODE[3]), STR_12(CODE[3]), STR_10(CODE[3]), STR_8(CODE[3]), 
		 -> STR_6(CODE[3]), STR_4(CODE[3]), STR_2(CODE[17]), STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 17
		 -> STR_14(CODE[3]), STR_12(CODE[3]), STR_10(CODE[3]), STR_8(CODE[3]), 
		 -> STR_6(CODE[3]), STR_4(CODE[3]), STR_2(CODE[17]), STR_1(CODE[17]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), STR_15(CODE[4]), STR_13(CODE[4]), 
		 -> STR_11(CODE[4]), STR_9(CODE[4]), STR_7(CODE[4]), STR_5(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[5]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[5]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), STR_15(CODE[4]), STR_13(CODE[4]), 
		 -> STR_11(CODE[4]), STR_9(CODE[4]), STR_7(CODE[4]), STR_5(CODE[4]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), STR_15(CODE[4]), 
		 -> STR_13(CODE[4]), STR_11(CODE[4]), STR_9(CODE[4]), STR_7(CODE[4]), 
		 -> STR_5(CODE[4]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[5]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[5]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    eaDogM_WriteStringAtPos@strPtr	PTR unsigned char  size(2) Largest target is 128
		 -> STR_3(CODE[11]), work_sw@buffer(BANK0[128]), 

    eaDogM_WriteString@strPtr	PTR unsigned char  size(2) Largest target is 128
		 -> STR_3(CODE[11]), work_sw@buffer(BANK0[128]), 

    once@once_flag	PTR _Bool  size(2) Largest target is 36
		 -> IO(BANK1[36]), 

    sounds	PTR struct OUT_data1 size(2) Largest target is 36
		 -> IO(BANK1[36]), 

    switches	PTR struct IN_data size(2) Largest target is 36
		 -> IO(BANK1[36]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    UART2_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    UART2_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultErrorHandler(), 

    UART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultOverrunErrorHandler(), 

    UART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultFramingErrorHandler(), 

    UART2_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultErrorHandler(), Absolute function(), 

    UART2_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultOverrunErrorHandler(), Absolute function(), 

    UART2_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultFramingErrorHandler(), Absolute function(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _eaDogM_WriteStringAtPos->_eaDogM_WriteString
    _eaDogM_WriteString->_strlen
    _eaDogM_WriteString->_wdtdelay
    _led_lightshow->___awdiv
    _init_display->_send_lcd_cmd
    _init_display->_send_lcd_cmd_long
    _send_lcd_cmd_long->_wdtdelay
    _eaDogM_WriteCommand->_send_lcd_cmd
    _send_lcd_cmd->_wdtdelay
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART2_Initialize->_UART2_SetErrorHandler
    _UART2_Initialize->_UART2_SetFramingErrorHandler
    _UART2_Initialize->_UART2_SetOverrunErrorHandler
    _UART2_Initialize->_UART2_SetRxInterruptHandler
    _UART2_Initialize->_UART2_SetTxInterruptHandler
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _WaitMs->_StartTimer
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART2_Write
    _abs->___aomod

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    _TMR6_ISR->_TMR6_DefaultInterruptHandler

Critical Paths under _TMR5_ISR in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    _TMR5_CallBack->_TMR5_DefaultInterruptHandler

Critical Paths under _main in BANK0

    _main->_work_sw
    _work_sw->_sprintf
    _sprintf->_vfprintf
    _Digital232_init->_printf
    _Digital232_RW->_printf
    _printf->_vfprintf

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   60466
                                              0 BANK1      4     4      0
                      _Digital232_RW
                    _Digital232_init
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                      _led_lightshow
                               _once
                            _work_sw
 ---------------------------------------------------------------------------------
 (1) _work_sw                                            128   128      0   18005
                                             18 BANK0    128   128      0
                         _StartTimer
                          _TimerDone
            _eaDogM_WriteStringAtPos
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             14     8      6   14041
                                              4 BANK0     14     8      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     1      3    2786
                                             15 COMRAM     4     1      3
                 _eaDogM_WriteString
                       _send_lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   6     4      2    1419
                                              9 COMRAM     6     4      2
                  _SPI1_Exchange8bit
                             _strlen
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (1) _once                                                 2     0      2     332
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _led_lightshow                                        5     3      2    1770
                                             13 COMRAM     5     3      2
                         _StartTimer
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     625
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    2140
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     1      0     734
                                              9 COMRAM     1     1      0
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     1      0     765
                                             10 COMRAM     1     1      0
                       _send_lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd                                         1     1      0     734
                                              9 COMRAM     1     1      0
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (4) _wdtdelay                                             4     0      4     672
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _SPI1_Exchange8bit                                    1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1486
                    _ADCC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0     605
              _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetOverrunErrorHandler                         3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetFramingErrorHandler                         3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetErrorHandler                                3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     605
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     121
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     121
                                              8 COMRAM     2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      34
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Digital232_init                                      0     0      0   16500
               _ADCC_StartConversion
                         _StartTimer
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                             _printf
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2    1474
                                             10 COMRAM     2     0      2
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Digital232_RW                                        4     4      0   15683
                                             10 BANK0      4     4      0
           _ADCC_GetConversionResult
                 _PWM8_LoadDutyValue
                         _StartTimer
                          _TimerDone
                         _UART2_Read
                        _UART2_Write
                  _UART2_is_rx_ready
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     3      3   13996
                                              4 BANK0      6     3      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             5     1      4   13369
                                             84 COMRAM     1     1      0
                                              0 BANK0      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           37    33      4   12617
                                             70 COMRAM    14    10      4
                               _dtoa
                              _fputc
                               _stoa
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2922
                                             16 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    7129
                                             34 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4863
                                             23 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     400
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2170
                                             16 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1670
                                              7 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      93
                                              6 COMRAM     1     1      0
                        _UART2_Write
 ---------------------------------------------------------------------------------
 (8) _UART2_Write                                          1     1      0      62
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      37
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            3     3      0      31
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _StartTimer                                           5     3      2     962
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   4     2      2     332
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             4     2      2       0
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART2_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART2_DefaultErrorHandler *
   _UART2_DefaultFramingErrorHandler *
   _UART2_DefaultOverrunErrorHandler *
                _UART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART2_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART2_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART2_DefaultErrorHandler                           0     0      0       0
                _UART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART2_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TMR6_ISR                                            0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _TMR6_DefaultInterruptHandler                        3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TMR5_ISR                                            0     0      0     229
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR5_WriteTimer                                     2     0      2     229
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR5_DefaultInterruptHandler                        1     1      0       0
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Digital232_RW
     _ADCC_GetConversionResult
     _PWM8_LoadDutyValue
     _StartTimer
     _TimerDone
     _UART2_Read
     _UART2_Write
     _UART2_is_rx_ready
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART2_Write
               _fputs
                 _fputc
                   _putch
                     _UART2_Write
               _strlen
           _fputc
             _putch
               _UART2_Write
           _stoa
             _fputc
               _putch
                 _UART2_Write
             _strlen
   _Digital232_init
     _ADCC_StartConversion
     _StartTimer
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART2_Write
               _fputs
                 _fputc
                   _putch
                     _UART2_Write
               _strlen
           _fputc
             _putch
               _UART2_Write
           _stoa
             _fputc
               _putch
                 _UART2_Write
             _strlen
   _SYSTEM_Initialize
     _ADCC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _eaDogM_WriteCommand
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _SPI1_Exchange8bit
       _strlen
       _wdtdelay
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
   _init_display
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _led_lightshow
     _StartTimer
     ___awdiv
   _once
   _work_sw
     _StartTimer
     _TimerDone
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _SPI1_Exchange8bit
         _strlen
         _wdtdelay
       _send_lcd_cmd
         _SPI1_Exchange8bit
         _wdtdelay
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART2_Write
               _fputs
                 _fputc
                   _putch
                     _UART2_Write
               _strlen
           _fputc
             _putch
               _UART2_Write
           _stoa
             _fputc
               _putch
                 _UART2_Write
             _strlen

 _Default_ISR (ROOT)

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *
     Absolute function(Fake) *
     _UART2_DefaultErrorHandler *
       _UART2_RxDataHandler
     _UART2_DefaultFramingErrorHandler *
     _UART2_DefaultOverrunErrorHandler *
     _UART2_RxDataHandler *

 _TMR6_ISR (ROOT)
   Absolute function(Fake) *
   _TMR6_DefaultInterruptHandler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      C7       7       77.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     92      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     55      5A       1       94.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C1      58        0.0%
DATA                 0      0     1C1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Sep  1 17:52:25 2019

                           _SPI1_Exchange8bit 3E04              __end_of_TMR5_SetInterruptHandler 3F6E  
                   __end_of_UART2_is_rx_ready 3F98                            ?_SPI1_Exchange8bit 0001  
                                 __CFG_CP$OFF 000000                                            l66 3DE2  
                                          _IO 019F                                  ___awdiv@sign 000B  
                           ??_TMR5_WriteTimer 0006                                   __CFG_LVP$ON 000000  
                               work_sw@buffer 0072                                           l492 3862  
                                         l987 3E12                                           _GIE 01FE97  
                                         _abs 3908                           ??_SPI1_Exchange8bit 0006  
                                         _pad 30A8                       __size_of_PMD_Initialize 0022  
               eaDogM_WriteStringAtPos@strPtr 0011                               _TMR2_Initialize 3DAE  
                                         prod 003FF3                                           tosl 003FFD  
                                         wreg 003FE8                               send_lcd_cmd@cmd 000A  
                          _UART1_Transmit_ISR 3AC6                                 __CFG_BBEN$OFF 000000  
                                __CFG_ZCD$OFF 000000                                          l1123 25D0  
                                        ?_abs 0018                                          l1060 23E4  
                                        l1310 20CC                                          l1206 3994  
                                        l1312 20D8                                          l1128 269E  
                                        l1064 245C                                          l1162 2E42  
                                        l1069 24C4                                          l2046 3938  
                                        l1183 3B9A                                          l1339 29DE  
                                        l1299 30E2                                          l5301 2678  
                        _ADCC_StartConversion 3F6E                                          l5135 3BA4  
                                        l5151 3498                                          l4521 3884  
                                        l5321 26C0                                          l5401 2DD8  
                                        l4523 3886                                          l4507 384C  
                                        l5315 26A2                                          l5163 34BE  
                                        l5411 2E26                                          l4605 2B52  
                                        l4621 2BD8                                          l4533 3406  
                                        l5261 2560                                          l5165 34C6  
                                        l5157 34A8                                          l5405 2E04  
                                        ?_pad 0018                                          l4607 2B66  
                                        l4543 3730                                          l5327 26EA  
                                        l5183 34FE                                          l5175 34E6  
                                        l5503 2460                                          l5089 383A  
                                        l4625 2BFE                                          l4617 2BC2  
                                        l4641 2C80                                          l4553 38D4  
                                        l4545 3734                                          l4801 2868  
                                        l5281 25C4                                          l5273 25AC  
                                        l5425 3BD8                                          l4563 30C8  
                                        l4723 22C0                                          l4811 28D4  
                                        l5347 2726                                          l5291 2616  
                                        l5179 34F0                                          l4661 2D32  
                                        l4653 2CF6                                          l4645 2C9A  
                                        l4637 2C5C                                          l4557 38F0  
                                        l4573 3108                                          l4821 291C  
                                        l5277 25B8                                          l5269 25A0  
                                        l4647 2CAE                                          l4567 30DA  
                                        l4719 22A6                                          l4671 20B0  
                                        l4735 2992                                          l5287 25DA  
                                        l5519 24D2                                          l5463 2366  
                                        l5455 2348                                          l4593 2B04  
                                        l4657 2D0C                                          l4577 313C  
                                        l4569 30EC                                          l4753 2A36  
                                        l4745 29FC                                          l4817 2912  
                                        l4905 36D8                                          l5289 25E2  
                                        l5385 2D94                                          l5377 2D72  
                                        l4763 2A9A                                          l4827 292E  
                                        l4907 36FC                                          l4685 20F6  
                                        l4749 2A18                                          l5389 2D9A  
                                        l5477 23A0                                          l5485 23E8  
                                        l4599 2B2C                                          l4767 2AB6  
                                        l4759 2A80                                          l5495 2418  
                                        l4689 2106                                          l4867 3C48  
                                        l4699 2242                                          l4893 304E  
                                        l4899 309E                                          STR_1 2001  
                                        STR_2 2012                                          STR_3 2023  
                                        STR_4 2046                                          STR_5 2042  
                                        STR_6 2046                                          STR_7 2032  
                                        STR_8 2046                                          STR_9 2036  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                                          u4000 34CA  
                                        _LATD 003FBD                                          _LATE 003FBE  
                                        u3310 3446                                          u3320 375E  
                                        _T2PR 003FAB                                          u3500 2CB2  
                                        u3421 2B32                                          u3327 3750  
                                        u3440 2B6A                                          u3600 2250  
                                        u4160 26FE                                          u3290 33FE  
                                        u3530 2082                                          u3620 2272  
                                        u3540 2084                                          u4180 2712  
                                        u3621 2270                                          u3390 3916  
                                        u3630 2280                                          u3640 2284  
                                        u4280 2E1A                                          u3570 20C2  
                                        u3730 2A2C                                          u4290 2E36  
                                        _T6PR 003F93                                          u3660 2290  
                                        u3740 2A60                                          u3820 27E4  
                                        _PMD0 0039C0                                          _PMD1 0039C1  
                                        u3590 20F0                                          _PMD2 0039C2  
                                        _PMD3 0039C3                                          _PMD4 0039C4  
                                        u3681 296E                                          _PMD5 0039C5  
                                        u3770 2ACA                                          _PMD6 0039C6  
                                        u3747 2A52                                          u3915 37F4  
                                        _PMD7 0039C7                                          u3916 37F6  
                                        u3870 304C                                          u3880 3098  
                                        u3955 3A1E                                          u3877 303C  
                                        u3887 308A                                          _PLLR 01CEE0  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                                 __CFG_FCMEN$ON 000000  
                         ?_UART1_Transmit_ISR 0001                        led_lightshow@alive_led 00F4  
                                        abs@a 0018                                          _dbuf 0174  
                                        _main 22F6                                          _dtoa 204A  
                                        _once 3BB2                                          _prec 00F2  
                                        _nout 0166                                          pad@i 001F  
                       __end_of_Digital232_RW 2766                                          pad@p 001C  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf1 003FE7                                          indf2 003FDF  
                                        fsr1l 003FE1                                          pad@w 0021  
                                        fsr2l 003FD9                                          _stoa 2964  
                                        prodl 003FF3                                          start 00AE  
                             _timer5ReloadVal 016E                                ?_led_lightshow 000E  
                   __end_of_SPI1_Exchange8bit 3E1E                 ??_UART1_SetTxInterruptHandler 0009  
               ??_UART2_SetRxInterruptHandler 0009                                 __CFG_CSWEN$ON 000000  
                           _UART1_rx_vect_isr 3C70                                  ___param_bank 000000  
                                 ?_UART2_Read 0001                            ?_UART1_rx_vect_isr 0001  
                                       ??_abs 001A                                         ??_pad 001E  
              __size_of_OSCILLATOR_Initialize 001C                          ??_UART1_Transmit_ISR 0001  
               __end_of_OSCILLATOR_Initialize 3DE8                               __end_of___aodiv 2C30  
                                       _ADCAP 003EF5                                         _ADACT 003EFE  
                                       ?_main 0001                                         ?_dtoa 0023  
                                       _ADCLK 003EFF                               __end_of___aomod 2D64  
                                       _ADPCH 003EF1                                         _ADREF 003EFD  
                             __end_of___awdiv 350C                                         ?_once 0006  
                                       STR_10 2046                                         STR_11 203A  
                                       STR_12 2046                                         STR_13 203E  
                                       STR_14 2046                                         STR_15 202E  
                               __CFG_WDTE$OFF 000000                                         _ADRPT 003EEC  
                                       ?_stoa 0011                               ___awdiv@divisor 0008  
                                       _U1P1H 003DED                                         _U1P2H 003DEF  
                    eaDogM_WriteStringAtPos@c 0010                                         _U1P1L 003DEC  
                                       _U1P3H 003DF1                                         _T2CON 003FAC  
                                       _U1P2L 003DEE                                         _U1P3L 003DF0  
                                       _U2P1L 003DD4                                         _U2P2L 003DD6  
                                       _U2P3L 003DD8                      eaDogM_WriteStringAtPos@r 0013  
                                       _T5CLK 003F9D                                         _T2HLT 003FAD  
                                       _T5CON 003F9A                                         _T6CON 003F94  
                              __CFG_DEBUG$OFF 000000                                         _T6HLT 003F95  
                                       _T2TMR 003FAA                                         _U1UIR 003DF8  
                                       _T2RST 003FAF                                         _U1RXB 003DE8  
                                       _U2UIR 003DE0                                         _U1TXB 003DEA  
                                       _U2RXB 003DD0                                         _U2TXB 003DD2  
                                       i2l342 3AF2                                         i2l516 3B24  
                                       _T6TMR 003F92                                         _T6RST 003F97  
                         ??_UART1_rx_vect_isr 0001                                         i2l774 3D3A  
                             ___awdiv@counter 000A                                         _OSCEN 0039DD  
                                vfpfcnvrt@fmt 0049                                         _TMR5H 003F99  
                                       _TMR5L 003F98                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                       _TRISD 003FC5                                         _TRISE 003FC6  
                                 _Default_ISR 3FA8                      eaDogM_WriteString@strPtr 000A  
           __size_of_TMR6_SetInterruptHandler 0014                     ?_TMR6_SetInterruptHandler 0006  
                           _UART1_tx_vect_isr 3C4C                                 __CFG_WRTB$OFF 000000  
                               __CFG_WRTC$OFF 000000                                 __CFG_WRTD$OFF 000000  
                            __end_of_TMR5_ISR 3A62                              __end_of_TMR6_ISR 3C04  
                                       _flags 0056                               _Digital232_init 2E4E  
                       ?_ADCC_StartConversion 0001                                         _fputc 33EE  
                  __size_of_send_lcd_cmd_long 0024                                         _fputs 38CA  
                          __CFG_MCLRE$EXTMCLR 000000                            ?_UART1_tx_vect_isr 0001  
                                       pad@fp 0018                                         _width 0168  
                                       _putch 3F88                                         dtoa@d 0025  
                                       dtoa@i 0045                                         main@y 01C6  
                                       dtoa@n 003D                                         dtoa@p 0037  
                                       dtoa@s 003B                                         dtoa@w 0039  
                            led_lightshow@seq 0012                                         pclath 003FFA  
                                       tablat 003FF5                     ??_eaDogM_WriteStringAtPos 0013  
                                       plusw1 003FE3                                         plusw2 003FDB  
                                       stoa@i 001D                                         stoa@l 0025  
                                       stoa@p 0023                                         stoa@s 0013  
                                       stoa@w 001F                                         status 003FD8  
         __end_of_UART1_SetRxInterruptHandler 3F0A                   _UART1_SetRxInterruptHandler 3EF6  
                             __end_of_sprintf 38CA                               __end_of_work_sw 3590  
    __end_of_UART1_DefaultFramingErrorHandler 3FAE     __size_of_UART1_DefaultFramingErrorHandler 0002  
          ??_UART1_DefaultFramingErrorHandler 0001             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler 3FAC                           ??_UART1_tx_vect_isr 0001  
                   __end_of_UART1_rx_vect_isr 3C94                      __size_of_SPI1_Initialize 0018  
              ??_TMR6_DefaultInterruptHandler 0001                               _TMR5_Initialize 3772  
              ??_UART2_SetOverrunErrorHandler 0009                               __initialization 3590  
                           _UART2_rx_vect_isr 3CDC                eaDogM_WriteString@bytesWritten 000F  
                                __end_of_main 2544                                  __end_of_dtoa 22F6  
                                __end_of_once 3BDC                                  __end_of_stoa 2AD8  
                  __size_of_UART2_is_rx_ready 0006                                __CFG_SAFEN$OFF 000000  
                 ??_UART1_DefaultErrorHandler 0001                            ?_UART2_rx_vect_isr 0001  
                     __end_of_TMR2_Initialize 3DCC                                  ?_UART2_Write 0001  
                                      ??_main 01C3                                        ??_dtoa 002D  
                                      ??_once 0008                                __CFG_PR1WAY$ON 000000  
                    _TMR5_SetInterruptHandler 3F5A                                        ??_stoa 0015  
                               __activetblptr 000003          __size_of_UART1_SetTxInterruptHandler 0014  
                         ??_UART2_rx_vect_isr 0001                           eaDogM_WriteString@i 000E  
                   __end_of_UART1_tx_vect_isr 3C70          __size_of_UART2_SetRxInterruptHandler 0014  
                              __CFG_MVECEN$ON 000000                               _TMR6_Initialize 3B5A  
                             _PWM8_Initialize 3E50                   __end_of_UART2_RxDataHandler 3D24  
                            _UART1_Initialize 2F36                             _UART2_tx_vect_isr 3CB8  
                          _UART2_Transmit_ISR 3AF8                                        _ADACCU 003EEA  
                                      _ADACQH 003EF4                                        _ADACQL 003EF3  
                                      _ADCON0 003EF8                                        _ADCON1 003EF9  
                                      _ADCON2 003EFA                                        _ADCON3 003EFB  
                                      ?_fputc 0008                                        _ADLTHH 003EDF  
                                      _ADLTHL 003EDE                                        ?_fputs 0011  
                                      _ADRESH 003EF0                                        _ADRESL 003EEF  
                                      _ADPREH 003EF7                                        _ADPREL 003EF6  
                                      _ADSTAT 003EFC                                        _ADUTHH 003EE1  
                            ___awdiv@dividend 0006                                        _ADUTHL 003EE0  
                          _PWM8_LoadDutyValue 39F4                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _ANSELD 003A70  
                                      _ANSELE 003A80                            ?_UART2_tx_vect_isr 0001  
                              TimerDone@timer 0008                                        _RB1I2C 003A5A  
                                      _RB2I2C 003A5B                                        _RD0I2C 003A7A  
                                      _U1CON0 003DF2                                        _U1CON1 003DF3  
                                      _U1CON2 003DF4                                        _RC3I2C 003A6A  
                                      _RD1I2C 003A7B                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _U2CON0 003DDA                                        _U2CON1 003DDB  
                                      _U1BRGL 003DF5                                        _U2CON2 003DDC  
                                      _U2BRGH 003DDE                                        _U2FIFO 003DDF  
                                      _U2BRGL 003DDD                                        _T5GATE 003F9C  
                         __size_of_UART2_Read 0044                                        _T5GCON 003F9B  
                                      _RC3PPS 003A13                                        _RD1PPS 003A19  
                                      _RB6PPS 003A0E                                        _RC5PPS 003A15  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                        _RC6PPS 003A16  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                              __CFG_WDTCCS$SC 000000                                        i2l4027 3AEE  
                                      i2l4047 334A                                        i2l4091 3978  
                                      i2l4059 3B20                                        i2l4087 394A  
                                      i2l4079 33E8                                        i2l3645 3CB2  
                                      i2l3665 3D1E                                 ?_init_display 0001  
                                      _IVTADH 00389E                                        _IVTADL 00389D  
                                      _IVTADU 00389F                  __size_of_eaDogM_WriteCommand 000A  
                                      _OSCFRQ 0039DF                           ?_UART2_Transmit_ISR 0001  
                             ??_led_lightshow 0010                         _UART1_SetErrorHandler 3F32  
                  ??_ADCC_GetConversionResult 0008                         SPI1_Exchange8bit@data 0006  
                         ?_PWM8_LoadDutyValue 0006                           ??_UART2_tx_vect_isr 0001  
                   __end_of_UART2_rx_vect_isr 3D00                    __size_of_SPI1_Exchange8bit 001A  
                              __CFG_XINST$OFF 000000                              _UART2_Initialize 315A  
                                      _WaitMs 3B86                                  _CCPTMRS1bits 003F5F  
                   _UART2_OverrunErrorHandler 014B                                  vfprintf@cfmt 0055  
                         _uart2RxStatusBuffer 010E            __size_of_UART2_DefaultErrorHandler 0006  
                                   ??___aodiv 0016                                     ??___aomod 0016  
                                   ??___awdiv 000A                                __CFG_STVREN$ON 000000  
                  ?_UART2_DefaultErrorHandler 0001                          send_lcd_cmd_long@cmd 000A  
                                      clear_0 35D4                                        clear_1 35E0  
                         UART2_Read@readValue 0006                              ___awdiv@quotient 000C  
                        ??_UART2_Transmit_ISR 0001                                        _printf 3DE8  
                                      pad@buf 001A                            _eaDogM_WriteString 2FF0  
                                      _sounds 019B                                        dtoa@fp 0023  
                                      _strlen 3722                            __size_of_TimerDone 0024  
                     __end_of_Digital232_init 2F36                          ??_PWM8_LoadDutyValue 0008  
                             _ADCC_Initialize 366A                                        fputc@c 0008  
                              _PMD_Initialize 3D6A                                        fputs@c 0015  
                                      fputs@i 0016                                        fputs@s 0011  
                   __end_of_UART2_tx_vect_isr 3CDC                                  __mediumconst 0000  
                                      tblptrh 003FF7                                        tblptrl 003FF6  
                                      tblptru 003FF8                        ??_ADCC_StartConversion 0006  
                         ?_eaDogM_WriteString 000A                              __end_of_wdtdelay 39BC  
                                      stoa@cp 0021                                        stoa@fp 0011  
                            __end_of_vfprintf 3722                                 wdtdelay@delay 0006  
                                  _StartTimer 3A94      TMR5_SetInterruptHandler@InterruptHandler 0006  
    TMR6_SetInterruptHandler@InterruptHandler 0006   UART2_SetTxInterruptHandler@InterruptHandler 0006  
 UART2_SetRxInterruptHandler@InterruptHandler 0006   UART1_SetTxInterruptHandler@InterruptHandler 0006  
 UART1_SetRxInterruptHandler@InterruptHandler 0006          __end_of_UART1_SetOverrunErrorHandler 3F1E  
       __size_of_UART1_SetOverrunErrorHandler 0014                  _UART1_SetOverrunErrorHandler 3F0A  
                   _UART1_DefaultErrorHandler 3F98                                     ??_sprintf 0056  
                                   ??_work_sw 0056                 __size_of_INTERRUPT_Initialize 0048  
                              ??_init_display 000B                  __size_of_UART1_RxDataHandler 0024  
                     __end_of_TMR5_Initialize 37BE                             _SYSTEM_Initialize 3A62  
                                  __accesstop 0060                       __end_of__initialization 35FC  
                          ?_SYSTEM_Initialize 0001                                 ___rparam_used 000001  
                  __size_of_UART1_rx_vect_isr 0024                               _TMR5_WriteTimer 3D24  
                        ??_eaDogM_WriteString 000C                                __pcstackCOMRAM 0001  
                       _UART2_SetErrorHandler 3ECE                                  __pidataBANK0 3FA4  
                                __pidataBANK1 3B2A                           ??_SYSTEM_Initialize 000B  
                                   ?_TMR5_ISR 0001                                     ?_TMR6_ISR 0001  
                              ivt0x8_undefint 00AC                                 __end_of_fputc 3484  
                               __end_of_fputs 3908                             ??_SPI1_Initialize 0006  
           __end_of_UART2_DefaultErrorHandler 3FA4                         __end_of_TMR5_CallBack 3DAE  
                               __end_of_putch 3F92                              ?_TMR2_Initialize 0001  
                     __end_of_PWM8_Initialize 3E68                       __end_of_TMR6_Initialize 3B86  
                      __end_of_PMD_Initialize 3D8C                    __size_of_UART1_tx_vect_isr 0024  
                   _UART1_FramingErrorHandler 0157                   ADCC_StartConversion@channel 0006  
                    _UART2_RxInterruptHandler 0163                                       ??_fputc 000C  
                   __end_of_SYSTEM_Initialize 3A94                                       ??_fputs 0015  
                             __CFG_IVT1WAY$ON 000000                                       ??_putch 0007  
                                  __pbssBANK0 00F2                                    __pbssBANK1 0100  
               ?_UART1_SetOverrunErrorHandler 0006                        ?_UART1_SetErrorHandler 0006  
                           __end_of_TimerDone 3C4C                  ?_UART2_SetTxInterruptHandler 0006  
                  __size_of_UART2_rx_vect_isr 0024                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                                     ?_WaitMs 000B                                  ??_UART2_Read 0006  
                             __CFG_PPS1WAY$ON 000000              __end_of_TMR6_SetInterruptHandler 3F5A  
        __end_of_UART2_SetFramingErrorHandler 3ECE         __size_of_UART2_SetFramingErrorHandler 0014  
                _UART2_SetFramingErrorHandler 3EBA                       __end_of_ADCC_Initialize 36C6  
                               ?_send_lcd_cmd 0001                                    ??_TMR5_ISR 0006  
                                  ??_TMR6_ISR 0004                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                                       ?_printf 0064  
                             ?_PMD_Initialize 0001                             _UART1_Receive_ISR 32B2  
                                     ?_strlen 0006                               StartTimer@count 0006  
                                     _U1ERRIE 003DFA                                       _U1ERRIR 003DF9  
                                     _U2ERRIE 003DE2                                       _U2ERRIR 003DE1  
                             StartTimer@timer 000A                              ?_Digital232_init 0001  
                         __CFG_PWRTS$PWRT_OFF 000000                                  ?_Default_ISR 0001  
                          ?_UART1_Receive_ISR 0001                    __size_of_UART2_tx_vect_isr 0024  
                        __size_of_UART2_Write 0042                                       _U1RXPPS 003AE5  
                                     _U2RXPPS 003AE8                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                                       _IVTLOCK 003FD4  
                          __size_of_vfpfcnvrt 01FE                                       _SPI1CLK 003D1C  
                                     _SPI1RXB 003D10                                       _SPI1TXB 003D11  
                                     _OSCTUNE 0039DE                                       _PWM8DCH 003F61  
                                     _PWM8DCL 003F60                                       _PWM8CON 003F62  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                                   ?_StartTimer 0006  
                         ??_UART1_Receive_ISR 0001                       __end_of_TMR5_WriteTimer 3D48  
                          __end_of_UART2_Read 384A                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0006                                       __Hparam 0000  
                      ?_UART2_SetErrorHandler 0006                                       __Lparam 0000  
                    __end_of_UART1_Initialize 2FF0                 ??_UART2_SetTxInterruptHandler 0009  
                  ??_TMR5_SetInterruptHandler 0009                               __size_of_WaitMs 002C  
                              ??_send_lcd_cmd 000A                                       ___aodiv 2AD8  
                                     ___aomod 2C30                                       ___awdiv 3484  
                                   ?_wdtdelay 0006                     __end_of_UART1_Receive_ISR 3350  
                                   ?_vfprintf 0060                                  __psmallconst 2000  
               ?_UART2_SetFramingErrorHandler 0006                          __end_of_init_display 366A  
                                     __pcinit 3590                           _eaDogM_WriteCommand 3F7E  
                            ?_PWM8_Initialize 0001                              ?_TMR6_Initialize 0001  
                                     __ramtop 2000                   __size_of_UART1_Transmit_ISR 0032  
                                     __ptext0 22F6                                       __ptext1 350C  
                                     __ptext2 388C                                       __ptext3 3D48  
                                     __ptext4 2FF0                                       __ptext5 3BB2  
                                     __ptext6 2D64                                       __ptext7 3484  
                                     __ptext8 3602                                       __ptext9 3C04  
                           _UART2_Receive_ISR 3350                               __size_of_printf 001C  
                             __CFG_WRTAPP$OFF 000000                               __size_of_strlen 0050  
    __end_of_UART2_DefaultOverrunErrorHandler 3FB0     __size_of_UART2_DefaultOverrunErrorHandler 0002  
          ??_UART2_DefaultOverrunErrorHandler 0001             ?_UART2_DefaultOverrunErrorHandler 0001  
            _UART2_DefaultOverrunErrorHandler 3FAE                         _OSCILLATOR_Initialize 3DCC  
                                __size_of_abs 003E                        __size_of_Digital232_RW 0222  
                                __size_of_pad 00B2                            ?_UART2_Receive_ISR 0001  
                    ??_PIN_MANAGER_Initialize 0006                               __CFG_WRTSAF$OFF 000000  
                                   _T5CONbits 003F9A                      __end_of_UART2_Initialize 3206  
                  __size_of_SYSTEM_Initialize 0032                                       _sprintf 388C  
                          led_lightshow@cylon 00FF                          end_of_initialization 35FC  
                                     _work_sw 350C                           ??_UART2_Receive_ISR 0001  
                          led_lightshow@speed 000E                          ?_eaDogM_WriteCommand 0001  
                                     fputc@fp 000A           __end_of_UART1_SetTxInterruptHandler 3EF6  
                 _UART1_SetTxInterruptHandler 3EE2                                       fputs@fp 0013  
         __end_of_UART2_SetRxInterruptHandler 3EA6                   _UART2_SetRxInterruptHandler 3E92  
              ??_UART1_SetOverrunErrorHandler 0009                             __end_of_vfpfcnvrt 2964  
                                   _SPI1TCNTL 003D12                                       postdec1 003FE5  
                                     postdec2 003FDD                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                                  ??_wdtdelay 000A                              ?_ADCC_Initialize 0001  
                 ??_UART2_DefaultErrorHandler 0001                           __size_of_StartTimer 0032  
                                  ??_vfprintf 0055                     __end_of_UART2_Receive_ISR 33EE  
                              wdtdelay@dcount 013E                           _UART1_RxDataHandler 3C94  
                       __CFG_WDTCPS$WDTCPS_31 000000                                       strlen@a 0008  
                                     strlen@s 0006                      _TMR6_SetInterruptHandler 3F46  
                       _TMR5_InterruptHandler 0142          __size_of_UART2_SetTxInterruptHandler 0014  
                       WaitMs@numMilliseconds 000B                      ?_eaDogM_WriteStringAtPos 0010  
                            __CFG_FEXTOSC$ECH 000000                          ?_UART1_RxDataHandler 0001  
                            ?_TMR5_WriteTimer 0004                         ??_eaDogM_WriteCommand 000B  
                     TMR5_WriteTimer@timerVal 0004                  __size_of_UART2_RxDataHandler 0024  
                             _SPI1_Initialize 3E38                                 _Digital232_RW 2544  
                       __end_of_led_lightshow 2E4E                                led_lightshow@j 016A  
                              __end_of_WaitMs 3BB2                  __end_of_INTERRUPT_Initialize 3806  
                  __size_of_UART1_Receive_ISR 009E                                   vfpfcnvrt@ap 004A  
                                 vfpfcnvrt@cp 0053                                   vfpfcnvrt@fp 0047  
                                 vfpfcnvrt@ll 004B                             __size_of_TMR5_ISR 0036  
                           __size_of_TMR6_ISR 0028                   __size_of_UART2_Transmit_ISR 0032  
                      ?_OSCILLATOR_Initialize 0001             __size_of_ADCC_GetConversionResult 0016  
                   ?_ADCC_GetConversionResult 0006                                __end_of_printf 3E04  
                 __size_of_PWM8_LoadDutyValue 0038                                __end_of_strlen 3772  
              ??_UART2_SetFramingErrorHandler 0009                           start_initialization 3590  
        __end_of_TMR5_DefaultInterruptHandler 3E38         __size_of_TMR5_DefaultInterruptHandler 001A  
                _TMR5_DefaultInterruptHandler 3E1E               __size_of_PIN_MANAGER_Initialize 00AC  
                                 __end_of_abs 3946                                   __end_of_pad 315A  
                        __size_of_Default_ISR 0002                       ??_UART1_SetErrorHandler 0009  
                   _UART2_DefaultErrorHandler 3F9E                          __end_of_send_lcd_cmd 39F4  
                       ??_UART1_RxDataHandler 0001                 __size_of_ADCC_StartConversion 0010  
                                 putch@txData 0007                                    ivt0x8_base 0008  
                               _uart1RxBuffer 012E                                 _uart1TxBuffer 0136  
                               _uart2RxBuffer 0116                                ?_Digital232_RW 0001  
                               _uart2TxBuffer 011E                              __CFG_LPBOREN$OFF 000000  
                                    ??_WaitMs 000D                         __size_of_init_display 0068  
                                 vfprintf@fmt 0062                   __size_of_eaDogM_WriteString 00B8  
                            ??_PMD_Initialize 0006                                     _TimerDone 3C28  
                                 __pdataBANK0 00FE                                   __pdataBANK1 0194  
                  __size_of_UART2_Receive_ISR 009E                             UART2_Write@txData 0006  
                                    ??_printf 0056                                      ??_strlen 0008  
             __end_of_eaDogM_WriteStringAtPos 3D6A                                   __pbssCOMRAM 0056  
                          _UART1_ErrorHandler 0151                     _UART2_FramingErrorHandler 014E  
                               __pcstackBANK0 0060                                 __pcstackBANK1 01C3  
                            ___aodiv@dividend 0006                      __size_of_TMR2_Initialize 001E  
                                ??_StartTimer 0008                       __end_of_SPI1_Initialize 3E50  
                    _UART1_RxInterruptHandler 015D                      _UART2_TxInterruptHandler 0160  
               ?_TMR5_DefaultInterruptHandler 0001                                Digital232_RW@i 006C  
                              Digital232_RW@j 006D                                Digital232_RW@x 00F6  
                                _init_display 3602                        __size_of_TMR5_CallBack 0022  
                 PWM8_LoadDutyValue@dutyValue 0006                       ??_UART2_SetErrorHandler 0009  
                ?_UART1_SetRxInterruptHandler 0006                         _TMR6_InterruptHandler 0145  
                      _PIN_MANAGER_Initialize 3206                                     _dtoa$2597 0035  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 3F32  
       __size_of_UART1_SetFramingErrorHandler 0014                  _UART1_SetFramingErrorHandler 3F1E  
                                  ?_TimerDone 0001                                      ?___aodiv 0006  
                                    ?___aomod 0006                                      ?___awdiv 0006  
                            ___aodiv@quotient 0018                            ??_UART1_Initialize 0009  
                          __end_of_StartTimer 3AC6                              _uart1RxLastError 0171  
                               ??_UART2_Write 0006                             __size_of_wdtdelay 003A  
                           __size_of_vfprintf 005C                        __CFG_BBSIZE$BBSIZE_512 000000  
                                 __smallconst 2000      __end_of_UART1_DefaultOverrunErrorHandler 3FAC  
   __size_of_UART1_DefaultOverrunErrorHandler 0002            ??_UART1_DefaultOverrunErrorHandler 0001  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 3FAA  
                           ?_UART2_Initialize 0001                                      ?_sprintf 0064  
                              __size_of_fputc 0096                                      _T2CLKCON 003FAE  
                              __size_of_fputs 003E                                   _U1ERRIRbits 003DF9  
                                    ?_work_sw 0001                            ??_UART2_Initialize 0009  
                              __size_of_putch 000A                      __size_of_Digital232_init 00E8  
                        _INTERRUPT_Initialize 37BE                                      _T6CLKCON 003F96  
                             ??_Digital232_RW 006A                              _uart2RxLastError 0170  
                                 _U2ERRIRbits 003DE1         UART2_SetErrorHandler@interruptHandler 0006  
       UART1_SetErrorHandler@interruptHandler 0006                                      _LATCbits 003FBC  
                                    _LATEbits 003FBE                                      _IPR3bits 003983  
                                    _PIE3bits 003993                                     _tickCount 0100  
                                    _IPR6bits 003986                                      _IPR8bits 003988  
                                    _PIE6bits 003996                                      _IPR9bits 003989  
                                    _PIE8bits 003998                           __CFG_BORV$VBOR_2P45 000000  
                                    _PIE9bits 003999                 ??_UART1_SetRxInterruptHandler 0009  
                                    i2u300_48 3CEC                                      i2u303_40 3A52  
                                    i2u302_48 3BF0                                      i2u236_40 3E26  
                                    i2u251_48 3334                                      i2u236_46 3E28  
                                    i2u255_48 337A                                      i2u247_48 32DC  
                                    i2u255_49 338E                                      i2u247_49 32F0  
                                    i2u264_48 3D9A                                      i2u257_48 33A8  
                                    i2u249_48 330A                                      i2u257_49 33BC  
                                    i2u249_49 331E                                      _PIR2bits 0039A2  
                                    _SPI1BAUD 003D19                                      i2u259_48 33D2  
                                    i2u294_48 3C5C                                      _PIR4bits 0039A4  
                                    _SPI1CON0 003D14                                      _SPI1CON1 003D15  
                                    _SPI1CON2 003D16                                      i2u296_48 3C80  
                                    i2u298_48 3CC8                                      _PIR8bits 0039A8  
                                    _PIR9bits 0039A9                    ??_TMR6_SetInterruptHandler 0009  
                    __size_of_TMR5_Initialize 004C                    __end_of_UART1_Transmit_ISR 3AF8  
                                    _TMR5_ISR 3A2C                                      _TMR6_ISR 3BDC  
               ?_UART1_SetFramingErrorHandler 0006                                     _vfpfcnvrt 2766  
                               _TMR5_CallBack 3D8C                           _UART2_RxDataHandler 3D00  
                                  _ADCON0bits 003EF8                         __size_of_send_lcd_cmd 0038  
           __size_of_TMR5_SetInterruptHandler 0014                     ?_TMR5_SetInterruptHandler 0006  
                          _UART2_ErrorHandler 0148                           __end_of_UART2_Write 388C  
                    __size_of_PWM8_Initialize 0018                      __size_of_TMR6_Initialize 002C  
                            ?_SPI1_Initialize 0001                                   _INTCON0bits 003FD2  
                                   copy_data0 35A4                         ?_INTERRUPT_Initialize 0001  
                        ?_UART2_RxDataHandler 0001                        _uart1TxBufferRemaining 00FB  
                           ??_TMR2_Initialize 0006                ??_TMR5_DefaultInterruptHandler 0004  
         __end_of_UART2_SetTxInterruptHandler 3E92                   _UART2_SetTxInterruptHandler 3E7E  
                                _uart1RxCount 0172                                  _uart2RxCount 00F7  
                                    __Hrparam 0000              __size_of_eaDogM_WriteStringAtPos 0022  
            __end_of_ADCC_GetConversionResult 3E7E                       __CFG_RSTOSC$EXTOSC_4PLL 000000  
                                  vfprintf@ap 0063                                      __Lrparam 0000  
                                  vfprintf@fp 0060                            __CFG_BOREN$SBORDIS 000000  
                                 ??_TimerDone 0006                       ??_OSCILLATOR_Initialize 0006  
                                _send_lcd_cmd 39BC                              __size_of___aodiv 0158  
                            __size_of___aomod 0134                              __size_of___awdiv 0088  
                              ?_TMR5_CallBack 0001                                    ?_vfpfcnvrt 0047  
                             ___aodiv@divisor 000E                               ___aodiv@counter 0016  
        __size_of_UART1_SetRxInterruptHandler 0014                                    sprintf@fmt 0065  
                    __size_of_ADCC_Initialize 005C                   __end_of_eaDogM_WriteCommand 3F88  
                                    __pivt0x8 0008                                      __ptext10 3F7E  
                                    __ptext11 39BC                                      __ptext20 3ECE  
                                    __ptext12 3982                                      __ptext21 2F36  
                                    __ptext13 3E04                                      __ptext30 3F5A  
                                    __ptext22 3EE2                                      __ptext14 3A62  
                                    __ptext31 3DAE                                      __ptext23 3EF6  
                                    __ptext15 315A                                      __ptext40 3B86  
                                    __ptext32 3E38                                      __ptext24 3F0A  
                                    __ptext16 3E7E                                      __ptext41 3F6E  
                                    __ptext33 3E50                                      __ptext25 3F1E  
                                    __ptext17 3E92                                      __ptext50 38CA  
                                    __ptext42 2544                                      __ptext34 3D6A  
                                    __ptext26 3F32                                      __ptext18 3EA6  
                                    __ptext51 33EE                                      __ptext43 3DE8  
                                    __ptext35 3206                                      __ptext27 3B5A  
                                    __ptext19 3EBA                                      __ptext60 3A94  
                                    __ptext52 3F88                                      __ptext44 36C6  
                                    __ptext36 3DCC                                      __ptext28 3F46  
                                    __ptext61 39F4                                      __ptext53 384A  
                                    __ptext45 2766                                      __ptext37 37BE  
                                    __ptext29 3772                                      __ptext70 3F98  
                                    __ptext62 3E68                                      __ptext54 3908  
                                    __ptext46 2964                                      __ptext38 366A  
                                    __ptext71 3C94                                      __ptext63 3FA8  
                                    __ptext55 2C30                                      __ptext47 204A  
                                    __ptext39 2E4E                                      __ptext80 3BDC  
                                    __ptext72 3CB8                                      __ptext64 3C4C  
                                    __ptext56 2AD8                                      __ptext48 30A8  
                                    __ptext81 3946                                      __ptext73 3AF8  
                                    __ptext65 3AC6                                      __ptext57 3F92  
                                    __ptext49 3722                                      __ptext82 3A2C  
                                    __ptext74 3CDC                                      __ptext66 3C70  
                                    __ptext58 3806                                      __ptext83 3D24  
                                    __ptext75 3350                                      __ptext67 32B2  
                                    __ptext59 3C28                                      __ptext84 3D8C  
                                    __ptext76 3FAE                                      __ptext68 3FAA  
                                    __ptext85 3E1E                                      __ptext77 3FB0  
                                    __ptext69 3FAC                                      __ptext86 0000  
                                    __ptext78 3F9E                                      __ptext79 3D00  
              __size_of_UART1_SetErrorHandler 0014                 TMR6_DefaultInterruptHandler@i 0003  
               __end_of_UART1_SetErrorHandler 3F46                              __size_of_sprintf 003E  
                       ??_UART2_RxDataHandler 0001                              __size_of_work_sw 0084  
                         led_lightshow@LED_UP 00FE                                 __size_of_main 024E  
                               __size_of_dtoa 02AC                                 __size_of_once 002A  
                               __size_of_stoa 0174      __end_of_UART2_DefaultFramingErrorHandler 3FB2  
   __size_of_UART2_DefaultFramingErrorHandler 0002            ??_UART2_DefaultFramingErrorHandler 0001  
           ?_UART2_DefaultFramingErrorHandler 0001              _UART2_DefaultFramingErrorHandler 3FB0  
                        __CFG_WDTCWS$WDTCWS_7 000000                                   _IVTLOCKbits 003FD4  
                           ??_Digital232_init 0056                      __size_of_TMR5_WriteTimer 0024  
                   _UART1_OverrunErrorHandler 0154                                     stoa@F1139 0194  
UART2_SetOverrunErrorHandler@interruptHandler 0006  UART1_SetOverrunErrorHandler@interruptHandler 0006  
          __size_of_UART1_DefaultErrorHandler 0006                  __end_of_ADCC_StartConversion 3F7E  
                  ?_UART1_DefaultErrorHandler 0001                                      _wdtdelay 3982  
                  __end_of_UART2_Transmit_ISR 3B2A                                      _vfprintf 36C6  
                                   printf@fmt 0064                    __end_of_PWM8_LoadDutyValue 3A2C  
                                    _switches 019D                                   _UART2_Write 384A  
                           ??_TMR5_Initialize 0009                              ___aomod@dividend 0006  
                               ??_Default_ISR 0001                ??_UART1_SetFramingErrorHandler 0009  
                 __end_of_UART1_RxDataHandler 3CB8                                   _uart1RxHead 005A  
                                 _uart1TxHead 00FD                                   _uart2RxHead 0059  
                                 _uart1RxTail 0173                                   _uart2TxHead 00FA  
                                 _uart1TxTail 00FC                                   _uart2RxTail 0058  
                      __size_of_led_lightshow 00EA                                   _uart2TxTail 00F9  
                      ??_INTERRUPT_Initialize 0006          __end_of_TMR6_DefaultInterruptHandler 3982  
       __size_of_TMR6_DefaultInterruptHandler 003C                  _TMR6_DefaultInterruptHandler 3946  
        __end_of_UART2_SetOverrunErrorHandler 3EBA         __size_of_UART2_SetOverrunErrorHandler 0014  
                _UART2_SetOverrunErrorHandler 3EA6                                      intlevel2 0000  
                                   sprintf@ap 006C                             _send_lcd_cmd_long 3C04  
                     ?_PIN_MANAGER_Initialize 0001                             ??_TMR6_Initialize 0009  
                           ??_PWM8_Initialize 0006                             __CFG_CLKOUTEN$OFF 000000  
                          ?_send_lcd_cmd_long 0001                    __end_of_eaDogM_WriteString 30A8  
              __size_of_UART2_SetErrorHandler 0014                 __end_of_UART2_SetErrorHandler 3EE2  
                         _uart1RxStatusBuffer 0126                                    _SPI1SCKPPS 003ADE  
                                  _SPI1SDIPPS 003ADF                               ??_TMR5_CallBack 0005  
                         ??_send_lcd_cmd_long 000A                                      printf@ap 0069  
                      eaDogM_WriteCommand@cmd 000B                                    _UART2_Read 3806  
UART2_SetFramingErrorHandler@interruptHandler 0006  UART1_SetFramingErrorHandler@interruptHandler 0006  
                    _ADCC_GetConversionResult 3E68             __end_of_UART1_DefaultErrorHandler 3F9E  
                             ___aomod@divisor 000E                                   ??_vfpfcnvrt 004B  
                                    stoa@nuls 0016                               ___aomod@counter 0016  
                           _UART2_is_rx_ready 3F92                        _uart2TxBufferRemaining 00F8  
                                    sprintf@f 006D                                      sprintf@s 0064  
                          ?_UART2_is_rx_ready 0001                         TMR5_ISR@CountCallBack 016C  
                   __size_of_UART1_Initialize 00BA                      _UART1_TxInterruptHandler 015A  
                         ??_UART2_is_rx_ready 0006                     __end_of_send_lcd_cmd_long 3C28  
                         __end_of_Default_ISR 3FAA                                  ___aodiv@sign 0017  
              __end_of_PIN_MANAGER_Initialize 32B2                             ??_ADCC_Initialize 0006  
               ?_TMR6_DefaultInterruptHandler 0001                 ?_UART2_SetOverrunErrorHandler 0006  
                ?_UART1_SetTxInterruptHandler 0006                       _eaDogM_WriteStringAtPos 3D48  
                ?_UART2_SetRxInterruptHandler 0006                                  ___aomod@sign 0017  
                               once@once_flag 0006                                 _led_lightshow 2D64  
                   __size_of_UART2_Initialize 00AC  
