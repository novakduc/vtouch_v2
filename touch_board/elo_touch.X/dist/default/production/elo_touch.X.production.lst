

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Sep  5 22:41:34 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,inline
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,inline
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=4,class=CODE,delta=1
    83                           	psect	text66,global,reloc=4,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=4,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=4,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=4,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=4,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=4,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1
   105                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   106                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   109  0000                     
   110                           ; Version 2.10
   111                           ; Generated 31/07/2019 GMT
   112                           ; 
   113                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   114                           ; All rights reserved.
   115                           ; 
   116                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   117                           ; 
   118                           ; Redistribution and use in source and binary forms, with or without modification, are
   119                           ; permitted provided that the following conditions are met:
   120                           ; 
   121                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   122                           ;        conditions and the following disclaimer.
   123                           ; 
   124                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   125                           ;        of conditions and the following disclaimer in the documentation and/or other
   126                           ;        materials provided with the distribution.
   127                           ; 
   128                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   129                           ;        software without specific prior written permission.
   130                           ; 
   131                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   132                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   133                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   134                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   135                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   136                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   137                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   138                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   139                           ; 
   140                           ; 
   141                           ; Code-generator required, PIC18F47K42 Definitions
   142                           ; 
   143                           ; SFR Addresses
   144  0000                     
   145                           	psect	idataBANK0
   146  003FFA                     __pidataBANK0:
   147                           	opt callstack 0
   148                           
   149                           ;initializer for led_lightshow@LED_UP
   150  003FFA  01                 	db	1
   151                           
   152                           ;initializer for led_lightshow@cylon
   153  003FFB  FF                 	db	255
   154                           
   155                           	psect	idataBANK1
   156  003B6C                     __pidataBANK1:
   157                           	opt callstack 0
   158                           
   159                           ;initializer for stoa@F1139
   160  003B6C  28                 	db	40
   161  003B6D  6E                 	db	110
   162  003B6E  75                 	db	117
   163  003B6F  6C                 	db	108
   164  003B70  6C                 	db	108
   165  003B71  29                 	db	41
   166  003B72  00                 	db	0
   167                           
   168                           ;initializer for _sounds
   169  003B73  A5                 	db	low (_IO+6)
   170  003B74  01                 	db	high (_IO+6)
   171                           
   172                           ;initializer for _switches
   173  003B75  9F                 	db	low _IO
   174  003B76  01                 	db	high _IO
   175                           
   176                           ;initializer for _IO
   177  003B77  00                 	db	0
   178  003B78  00                 	db	0
   179  003B79  00                 	db	0
   180  003B7A  00                 	db	0
   181  003B7B  00                 	db	0
   182  003B7C  00                 	db	0
   183  003B7D  00                 	db	0
   184  003B7E  00                 	db	0
   185  003B7F  00                 	db	0
   186  003B80  00                 	db	0
   187  003B81  00                 	db	0
   188  003B82  00                 	db	0
   189  003B83  00                 	db	0
   190  003B84  00                 	db	0
   191  003B85  00                 	db	0
   192  003B86  00                 	db	0
   193  003B87  00                 	db	0
   194  003B88  00                 	db	0
   195  003B89  00                 	db	0
   196  003B8A  32                 	db	50
   197  003B8B  00                 	db	0
   198  003B8C  0000               	dw	0
   199  003B8E  000A               	dw	10
   200  003B90  0000               	dw	0
   201  003B92  0000               	dw	0
   202  003B94  01                 	db	1
   203  003B95  00                 	db	0
   204  003B96  00                 	db	0
   205  003B97  01                 	db	1
   206  003B98  01                 	db	1
   207  003B99  01                 	db	1
   208  003B9A  00                 	db	0
   209  0000                     _IVTADL	set	14493
   210  0000                     _IVTADH	set	14494
   211  0000                     _IVTADU	set	14495
   212  0000                     _PIR2bits	set	14754
   213  0000                     _PIE8bits	set	14744
   214  0000                     _PIR8bits	set	14760
   215  0000                     _PIE9bits	set	14745
   216  0000                     _PIR9bits	set	14761
   217  0000                     _PIR4bits	set	14756
   218  0000                     _PIE6bits	set	14742
   219  0000                     _PIE3bits	set	14739
   220  0000                     _IPR8bits	set	14728
   221  0000                     _IPR9bits	set	14729
   222  0000                     _IPR3bits	set	14723
   223  0000                     _IPR6bits	set	14726
   224  0000                     _PMD7	set	14791
   225  0000                     _PMD6	set	14790
   226  0000                     _PMD5	set	14789
   227  0000                     _PMD4	set	14788
   228  0000                     _PMD3	set	14787
   229  0000                     _PMD2	set	14786
   230  0000                     _PMD1	set	14785
   231  0000                     _PMD0	set	14784
   232  0000                     _OSCTUNE	set	14814
   233  0000                     _OSCFRQ	set	14815
   234  0000                     _OSCEN	set	14813
   235  0000                     _OSCCON3	set	14811
   236  0000                     _OSCCON1	set	14809
   237  0000                     _PLLR	set	118496
   238  0000                     _SPI1SDIPPS	set	15071
   239  0000                     _U1RXPPS	set	15077
   240  0000                     _RC6PPS	set	14870
   241  0000                     _RC5PPS	set	14869
   242  0000                     _RD1PPS	set	14873
   243  0000                     _RC3PPS	set	14867
   244  0000                     _RB6PPS	set	14862
   245  0000                     _SPI1SCKPPS	set	15070
   246  0000                     _U2RXPPS	set	15080
   247  0000                     _SLRCONE	set	14979
   248  0000                     _SLRCOND	set	14963
   249  0000                     _SLRCONC	set	14947
   250  0000                     _SLRCONB	set	14931
   251  0000                     _SLRCONA	set	14915
   252  0000                     _ODCOND	set	14962
   253  0000                     _ODCONC	set	14946
   254  0000                     _ODCONB	set	14930
   255  0000                     _ODCONA	set	14914
   256  0000                     _ODCONE	set	14978
   257  0000                     _RD1I2C	set	14971
   258  0000                     _RD0I2C	set	14970
   259  0000                     _RC4I2C	set	14955
   260  0000                     _RC3I2C	set	14954
   261  0000                     _RB2I2C	set	14939
   262  0000                     _RB1I2C	set	14938
   263  0000                     _WPUC	set	14945
   264  0000                     _WPUA	set	14913
   265  0000                     _WPUB	set	14929
   266  0000                     _WPUE	set	14977
   267  0000                     _WPUD	set	14961
   268  0000                     _ANSELA	set	14912
   269  0000                     _ANSELE	set	14976
   270  0000                     _ANSELB	set	14928
   271  0000                     _ANSELC	set	14944
   272  0000                     _ANSELD	set	14960
   273  0000                     _SPI1RXB	set	15632
   274  0000                     _SPI1TXB	set	15633
   275  0000                     _SPI1TCNTL	set	15634
   276  0000                     _SPI1CON0	set	15636
   277  0000                     _SPI1CLK	set	15644
   278  0000                     _SPI1BAUD	set	15641
   279  0000                     _SPI1CON2	set	15638
   280  0000                     _SPI1CON1	set	15637
   281  0000                     _U2RXB	set	15824
   282  0000                     _U2TXB	set	15826
   283  0000                     _U2ERRIRbits	set	15841
   284  0000                     _U2ERRIE	set	15842
   285  0000                     _U2ERRIR	set	15841
   286  0000                     _U2UIR	set	15840
   287  0000                     _U2FIFO	set	15839
   288  0000                     _U2BRGH	set	15838
   289  0000                     _U2BRGL	set	15837
   290  0000                     _U2CON2	set	15836
   291  0000                     _U2CON1	set	15835
   292  0000                     _U2CON0	set	15834
   293  0000                     _U2P3L	set	15832
   294  0000                     _U2P2L	set	15830
   295  0000                     _U2P1L	set	15828
   296  0000                     _U1RXB	set	15848
   297  0000                     _U1TXB	set	15850
   298  0000                     _U1ERRIRbits	set	15865
   299  0000                     _U1ERRIE	set	15866
   300  0000                     _U1ERRIR	set	15865
   301  0000                     _U1UIR	set	15864
   302  0000                     _U1FIFO	set	15863
   303  0000                     _U1BRGH	set	15862
   304  0000                     _U1BRGL	set	15861
   305  0000                     _U1CON2	set	15860
   306  0000                     _U1CON1	set	15859
   307  0000                     _U1CON0	set	15858
   308  0000                     _U1P3H	set	15857
   309  0000                     _U1P3L	set	15856
   310  0000                     _U1P2H	set	15855
   311  0000                     _U1P2L	set	15854
   312  0000                     _U1P1H	set	15853
   313  0000                     _U1P1L	set	15852
   314  0000                     _FVRCON	set	16065
   315  0000                     _ADRESL	set	16111
   316  0000                     _ADRESH	set	16112
   317  0000                     _ADCON0bits	set	16120
   318  0000                     _ADCON0	set	16120
   319  0000                     _ADCLK	set	16127
   320  0000                     _ADACT	set	16126
   321  0000                     _ADREF	set	16125
   322  0000                     _ADSTAT	set	16124
   323  0000                     _ADCON3	set	16123
   324  0000                     _ADCON2	set	16122
   325  0000                     _ADCON1	set	16121
   326  0000                     _ADPREH	set	16119
   327  0000                     _ADPREL	set	16118
   328  0000                     _ADCAP	set	16117
   329  0000                     _ADACQH	set	16116
   330  0000                     _ADACQL	set	16115
   331  0000                     _ADPCH	set	16113
   332  0000                     _ADRPT	set	16108
   333  0000                     _ADACCU	set	16106
   334  0000                     _ADSTPTH	set	16101
   335  0000                     _ADSTPTL	set	16100
   336  0000                     _ADUTHH	set	16097
   337  0000                     _ADUTHL	set	16096
   338  0000                     _ADLTHH	set	16095
   339  0000                     _ADLTHL	set	16094
   340  0000                     _CCPTMRS1bits	set	16223
   341  0000                     _LATCbits	set	16316
   342  0000                     _LATEbits	set	16318
   343  0000                     _T5CONbits	set	16282
   344  0000                     _T5CON	set	16282
   345  0000                     _TMR5L	set	16280
   346  0000                     _TMR5H	set	16281
   347  0000                     _T5CLK	set	16285
   348  0000                     _T5GATE	set	16284
   349  0000                     _T5GCON	set	16283
   350  0000                     _T6CON	set	16276
   351  0000                     _T6TMR	set	16274
   352  0000                     _T6PR	set	16275
   353  0000                     _T6RST	set	16279
   354  0000                     _T6HLT	set	16277
   355  0000                     _T6CLKCON	set	16278
   356  0000                     _PWM8DCL	set	16224
   357  0000                     _PWM8DCH	set	16225
   358  0000                     _PWM8CON	set	16226
   359  0000                     _T2CON	set	16300
   360  0000                     _T2TMR	set	16298
   361  0000                     _T2PR	set	16299
   362  0000                     _T2RST	set	16303
   363  0000                     _T2HLT	set	16301
   364  0000                     _T2CLKCON	set	16302
   365  0000                     _IVTLOCKbits	set	16340
   366  0000                     _IVTLOCK	set	16340
   367  0000                     _INTCON0bits	set	16338
   368  0000                     _TRISD	set	16325
   369  0000                     _TRISC	set	16324
   370  0000                     _TRISB	set	16323
   371  0000                     _TRISA	set	16322
   372  0000                     _TRISE	set	16326
   373  0000                     _LATC	set	16316
   374  0000                     _LATB	set	16315
   375  0000                     _LATA	set	16314
   376  0000                     _LATD	set	16317
   377  0000                     _LATE	set	16318
   378  0000                     _GIE	set	130711
   379                           
   380                           	psect	smallconst
   381  002000                     __psmallconst:
   382                           	opt callstack 0
   383  002000  00                 	db	0
   384  002001                     STR_2:
   385                           
   386                           ; BSR set to: 1
   387  002001  20                 	db	32
   388  002002  53                 	db	83	;'S'
   389  002003  63                 	db	99	;'c'
   390  002004  6F                 	db	111	;'o'
   391  002005  72                 	db	114	;'r'
   392  002006  65                 	db	101	;'e'
   393  002007  20                 	db	32
   394  002008  25                 	db	37
   395  002009  69                 	db	105	;'i'
   396  00200A  20                 	db	32
   397  00200B  25                 	db	37
   398  00200C  69                 	db	105	;'i'
   399  00200D  20                 	db	32
   400  00200E  25                 	db	37
   401  00200F  69                 	db	105	;'i'
   402  002010  20                 	db	32
   403  002011  20                 	db	32
   404  002012  20                 	db	32
   405  002013  20                 	db	32
   406  002014  00                 	db	0
   407  002015                     STR_1:
   408                           
   409                           ; BSR set to: 1
   410  002015  20                 	db	32
   411  002016  48                 	db	72	;'H'
   412  002017  20                 	db	32
   413  002018  25                 	db	37
   414  002019  69                 	db	105	;'i'
   415  00201A  2C                 	db	44
   416  00201B  20                 	db	32
   417  00201C  4D                 	db	77	;'M'
   418  00201D  20                 	db	32
   419  00201E  25                 	db	37
   420  00201F  69                 	db	105	;'i'
   421  002020  20                 	db	32
   422  002021  20                 	db	32
   423  002022  20                 	db	32
   424  002023  20                 	db	32
   425  002024  20                 	db	32
   426  002025  00                 	db	0
   427  002026                     STR_3:
   428                           
   429                           ; BSR set to: 1
   430  002026  53                 	db	83	;'S'
   431  002027  57                 	db	87	;'W'
   432  002028  20                 	db	32
   433  002029  25                 	db	37
   434  00202A  73                 	db	115	;'s'
   435  00202B  20                 	db	32
   436  00202C  50                 	db	80	;'P'
   437  00202D  6C                 	db	108	;'l'
   438  00202E  61                 	db	97	;'a'
   439  00202F  79                 	db	121	;'y'
   440  002030  21                 	db	33
   441  002031  00                 	db	0
   442  002032                     STR_4:
   443                           
   444                           ; BSR set to: 1
   445  002032  30                 	db	48	;'0'
   446  002033  2E                 	db	46
   447  002034  32                 	db	50	;'2'
   448  002035  34                 	db	52	;'4'
   449  002036  00                 	db	0
   450  002037                     STR_16:
   451                           
   452                           ; BSR set to: 1
   453  002037  52                 	db	82	;'R'
   454  002038  30                 	db	48	;'0'
   455  002039  0D                 	db	13
   456  00203A  00                 	db	0
   457  00203B                     STR_8:
   458                           
   459                           ; BSR set to: 1
   460  00203B  54                 	db	84	;'T'
   461  00203C  32                 	db	50	;'2'
   462  00203D  0D                 	db	13
   463  00203E  00                 	db	0
   464  00203F                     STR_10:
   465                           
   466                           ; BSR set to: 1
   467  00203F  43                 	db	67	;'C'
   468  002040  34                 	db	52	;'4'
   469  002041  0D                 	db	13
   470  002042  00                 	db	0
   471  002043                     STR_12:
   472                           
   473                           ; BSR set to: 1
   474  002043  46                 	db	70	;'F'
   475  002044  34                 	db	52	;'4'
   476  002045  0D                 	db	13
   477  002046  00                 	db	0
   478  002047                     STR_14:
   479                           
   480                           ; BSR set to: 1
   481  002047  4D                 	db	77	;'M'
   482  002048  34                 	db	52	;'4'
   483  002049  0D                 	db	13
   484  00204A  00                 	db	0
   485  00204B                     STR_6:
   486                           
   487                           ; BSR set to: 1
   488  00204B  58                 	db	88	;'X'
   489  00204C  51                 	db	81	;'Q'
   490  00204D  0D                 	db	13
   491  00204E  00                 	db	0
   492  00204F                     STR_5:
   493                           
   494                           ; BSR set to: 1
   495  00204F  25                 	db	37
   496  002050  73                 	db	115	;'s'
   497  002051  00                 	db	0
   498  0000                     
   499                           ; #config settings
   500  002052  00                 	db	0	; dummy byte at the end
   501  0000                     
   502                           	psect	cinit
   503  00355E                     __pcinit:
   504                           	opt callstack 0
   505  00355E                     start_initialization:
   506                           	opt callstack 0
   507  00355E                     __initialization:
   508                           	opt callstack 0
   509                           
   510                           ; Initialize objects allocated to BANK1 (47 bytes)
   511                           ; load TBLPTR registers with __pidataBANK1
   512  00355E  0E6C               	movlw	low __pidataBANK1
   513  003560  6EF6               	movwf	tblptrl,c
   514  003562  0E3B               	movlw	high __pidataBANK1
   515  003564  6EF7               	movwf	tblptrh,c
   516  003566  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   517  003568  6EF8               	movwf	tblptru,c
   518  00356A  EE00  F194         	lfsr	0,__pdataBANK1
   519  00356E  EE10 F02F          	lfsr	1,47
   520  003572                     copy_data0:
   521  003572  0009               	tblrd		*+
   522  003574  006F FFD7 FFEE     	movff	tablat,postinc0
   523  00357A  50E5               	movf	postdec1,w,c
   524  00357C  50E1               	movf	fsr1l,w,c
   525  00357E  E1F9               	bnz	copy_data0
   526                           
   527                           ; Initialize objects allocated to BANK0 (2 bytes)
   528                           ; load TBLPTR registers with __pidataBANK0
   529  003580  0EFA               	movlw	low __pidataBANK0
   530  003582  6EF6               	movwf	tblptrl,c
   531  003584  0E3F               	movlw	high __pidataBANK0
   532  003586  6EF7               	movwf	tblptrh,c
   533  003588  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   534  00358A  6EF8               	movwf	tblptru,c
   535  00358C  0009               	tblrd		*+	;fetch initializer
   536  00358E  006F FFD4  F09E    	movff	tablat,__pdataBANK0
   537  003594  0009               	tblrd		*+	;fetch initializer
   538  003596  006F FFD4  F09F    	movff	tablat,__pdataBANK0+1
   539                           
   540                           ; Clear objects allocated to BANK1 (148 bytes)
   541  00359C  EE00  F100         	lfsr	0,__pbssBANK1
   542  0035A0  0E94               	movlw	148
   543  0035A2                     clear_0:
   544  0035A2  6AEE               	clrf	postinc0,c
   545  0035A4  06E8               	decf	wreg,f,c
   546  0035A6  E1FD               	bnz	clear_0
   547                           
   548                           ; Clear objects allocated to BANK0 (12 bytes)
   549  0035A8  EE00  F092         	lfsr	0,__pbssBANK0
   550  0035AC  0E0C               	movlw	12
   551  0035AE                     clear_1:
   552  0035AE  6AEE               	clrf	postinc0,c
   553  0035B0  06E8               	decf	wreg,f,c
   554  0035B2  E1FD               	bnz	clear_1
   555                           
   556                           ; Clear objects allocated to COMRAM (5 bytes)
   557  0035B4  6A5A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   558  0035B6  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   559  0035B8  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   560  0035BA  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   561  0035BC  6A56               	clrf	__pbssCOMRAM& (0+255),c
   562                           
   563                           ;
   564                           ; Setup IVTBASE
   565                           ;
   566  0035BE  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   567  0035C0  6ED5               	movwf	213,c
   568  0035C2  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   569  0035C4  6ED6               	movwf	214,c
   570  0035C6  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   571  0035C8  6ED7               	movwf	215,c
   572  0035CA                     end_of_initialization:
   573                           	opt callstack 0
   574  0035CA                     __end_of__initialization:
   575                           	opt callstack 0
   576  0035CA  0100               	movlb	0
   577  0035CC  EF80  F011         	goto	_main	;jump to C main() function
   578                           
   579                           	psect	bssCOMRAM
   580  000056                     __pbssCOMRAM:
   581                           	opt callstack 0
   582  000056                     _flags:
   583                           	opt callstack 0
   584  000056                     	ds	2
   585  000058                     _uart2RxTail:
   586                           	opt callstack 0
   587  000058                     	ds	1
   588  000059                     _uart2RxHead:
   589                           	opt callstack 0
   590  000059                     	ds	1
   591  00005A                     _uart1RxHead:
   592                           	opt callstack 0
   593  00005A                     	ds	1
   594                           
   595                           	psect	bssBANK0
   596  000092                     __pbssBANK0:
   597                           	opt callstack 0
   598  000092                     _prec:
   599                           	opt callstack 0
   600  000092                     	ds	2
   601  000094                     led_lightshow@alive_led:
   602                           	opt callstack 0
   603  000094                     	ds	2
   604  000096                     Digital232_RW@x:
   605                           	opt callstack 0
   606  000096                     	ds	1
   607  000097                     _uart2RxCount:
   608                           	opt callstack 0
   609  000097                     	ds	1
   610  000098                     _uart2TxBufferRemaining:
   611                           	opt callstack 0
   612  000098                     	ds	1
   613  000099                     _uart2TxTail:
   614                           	opt callstack 0
   615  000099                     	ds	1
   616  00009A                     _uart2TxHead:
   617                           	opt callstack 0
   618  00009A                     	ds	1
   619  00009B                     _uart1TxBufferRemaining:
   620                           	opt callstack 0
   621  00009B                     	ds	1
   622  00009C                     _uart1TxTail:
   623                           	opt callstack 0
   624  00009C                     	ds	1
   625  00009D                     _uart1TxHead:
   626                           	opt callstack 0
   627  00009D                     	ds	1
   628                           
   629                           	psect	dataBANK0
   630  00009E                     __pdataBANK0:
   631                           	opt callstack 0
   632  00009E                     led_lightshow@LED_UP:
   633                           	opt callstack 0
   634  00009E                     	ds	1
   635  00009F                     led_lightshow@cylon:
   636                           	opt callstack 0
   637  00009F                     	ds	1
   638                           
   639                           	psect	bssBANK1
   640  000100                     __pbssBANK1:
   641                           	opt callstack 0
   642  000100                     _tickCount:
   643                           	opt callstack 0
   644  000100                     	ds	14
   645  00010E                     _uart2RxStatusBuffer:
   646                           	opt callstack 0
   647  00010E                     	ds	8
   648  000116                     _uart2RxBuffer:
   649                           	opt callstack 0
   650  000116                     	ds	8
   651  00011E                     _uart2TxBuffer:
   652                           	opt callstack 0
   653  00011E                     	ds	8
   654  000126                     _uart1RxStatusBuffer:
   655                           	opt callstack 0
   656  000126                     	ds	8
   657  00012E                     _uart1RxBuffer:
   658                           	opt callstack 0
   659  00012E                     	ds	8
   660  000136                     _uart1TxBuffer:
   661                           	opt callstack 0
   662  000136                     	ds	8
   663  00013E                     wdtdelay@dcount:
   664                           	opt callstack 0
   665  00013E                     	ds	4
   666  000142                     _TMR5_InterruptHandler:
   667                           	opt callstack 0
   668  000142                     	ds	3
   669  000145                     _TMR6_InterruptHandler:
   670                           	opt callstack 0
   671  000145                     	ds	3
   672  000148                     _UART2_ErrorHandler:
   673                           	opt callstack 0
   674  000148                     	ds	3
   675  00014B                     _UART2_OverrunErrorHandler:
   676                           	opt callstack 0
   677  00014B                     	ds	3
   678  00014E                     _UART2_FramingErrorHandler:
   679                           	opt callstack 0
   680  00014E                     	ds	3
   681  000151                     _UART1_ErrorHandler:
   682                           	opt callstack 0
   683  000151                     	ds	3
   684  000154                     _UART1_OverrunErrorHandler:
   685                           	opt callstack 0
   686  000154                     	ds	3
   687  000157                     _UART1_FramingErrorHandler:
   688                           	opt callstack 0
   689  000157                     	ds	3
   690  00015A                     _UART1_TxInterruptHandler:
   691                           	opt callstack 0
   692  00015A                     	ds	3
   693  00015D                     _UART1_RxInterruptHandler:
   694                           	opt callstack 0
   695  00015D                     	ds	3
   696  000160                     _UART2_TxInterruptHandler:
   697                           	opt callstack 0
   698  000160                     	ds	3
   699  000163                     _UART2_RxInterruptHandler:
   700                           	opt callstack 0
   701  000163                     	ds	3
   702  000166                     _nout:
   703                           	opt callstack 0
   704  000166                     	ds	2
   705  000168                     _width:
   706                           	opt callstack 0
   707  000168                     	ds	2
   708  00016A                     led_lightshow@j:
   709                           	opt callstack 0
   710  00016A                     	ds	2
   711  00016C                     TMR5_ISR@CountCallBack:
   712                           	opt callstack 0
   713  00016C                     	ds	2
   714  00016E                     _timer5ReloadVal:
   715                           	opt callstack 0
   716  00016E                     	ds	2
   717  000170                     _uart2RxLastError:
   718                           	opt callstack 0
   719  000170                     	ds	1
   720  000171                     _uart1RxLastError:
   721                           	opt callstack 0
   722  000171                     	ds	1
   723  000172                     _uart1RxCount:
   724                           	opt callstack 0
   725  000172                     	ds	1
   726  000173                     _uart1RxTail:
   727                           	opt callstack 0
   728  000173                     	ds	1
   729  000174                     _dbuf:
   730                           	opt callstack 0
   731  000174                     	ds	32
   732                           
   733                           	psect	dataBANK1
   734  000194                     __pdataBANK1:
   735                           	opt callstack 0
   736  000194                     stoa@F1139:
   737                           	opt callstack 0
   738  000194                     	ds	7
   739  00019B                     _sounds:
   740                           	opt callstack 0
   741  00019B                     	ds	2
   742  00019D                     _switches:
   743                           	opt callstack 0
   744  00019D                     	ds	2
   745  00019F                     _IO:
   746                           	opt callstack 0
   747  00019F                     	ds	36
   748                           
   749                           	psect	cstackBANK2
   750  000200                     __pcstackBANK2:
   751                           	opt callstack 0
   752  000200                     work_sw@buffer:
   753                           	opt callstack 0
   754                           
   755                           ; 128 bytes @ 0x0
   756  000200                     	ds	128
   757                           
   758                           	psect	cstackBANK0
   759  000060                     __pcstackBANK0:
   760                           	opt callstack 0
   761  000060                     ?_vfprintf:
   762                           	opt callstack 0
   763  000060                     vfprintf@fp:
   764                           	opt callstack 0
   765                           
   766                           ; 2 bytes @ 0x0
   767  000060                     	ds	2
   768  000062                     vfprintf@fmt:
   769                           	opt callstack 0
   770                           
   771                           ; 1 bytes @ 0x2
   772  000062                     	ds	1
   773  000063                     vfprintf@ap:
   774                           	opt callstack 0
   775                           
   776                           ; 1 bytes @ 0x3
   777  000063                     	ds	1
   778  000064                     ?_sprintf:
   779                           	opt callstack 0
   780  000064                     ?_printf:
   781                           	opt callstack 0
   782  000064                     printf@fmt:
   783                           	opt callstack 0
   784  000064                     sprintf@s:
   785                           	opt callstack 0
   786                           
   787                           ; 2 bytes @ 0x4
   788  000064                     	ds	2
   789  000066                     sprintf@fmt:
   790                           	opt callstack 0
   791                           
   792                           ; 1 bytes @ 0x6
   793  000066                     	ds	3
   794  000069                     printf@ap:
   795                           	opt callstack 0
   796                           
   797                           ; 1 bytes @ 0x9
   798  000069                     	ds	1
   799  00006A                     ??_Digital232_RW:
   800                           
   801                           ; 1 bytes @ 0xA
   802  00006A                     	ds	2
   803  00006C                     Digital232_RW@i:
   804                           	opt callstack 0
   805                           
   806                           ; 1 bytes @ 0xC
   807  00006C                     	ds	1
   808  00006D                     Digital232_RW@j:
   809                           	opt callstack 0
   810                           
   811                           ; 1 bytes @ 0xD
   812  00006D                     	ds	2
   813  00006F                     sprintf@ap:
   814                           	opt callstack 0
   815                           
   816                           ; 1 bytes @ 0xF
   817  00006F                     	ds	1
   818  000070                     sprintf@f:
   819                           	opt callstack 0
   820                           
   821                           ; 6 bytes @ 0x10
   822  000070                     	ds	6
   823  000076                     ??_main:
   824                           
   825                           ; 1 bytes @ 0x16
   826  000076                     	ds	2
   827  000078                     main@buffer:
   828                           	opt callstack 0
   829                           
   830                           ; 24 bytes @ 0x18
   831  000078                     	ds	25
   832  000091                     main@y:
   833                           	opt callstack 0
   834                           
   835                           ; 1 bytes @ 0x31
   836  000091                     	ds	1
   837                           
   838                           	psect	cstackCOMRAM
   839  000001                     __pcstackCOMRAM:
   840                           	opt callstack 0
   841  000001                     
   842                           ; 1 bytes @ 0x0
   843  000001                     	ds	2
   844  000003                     TMR6_DefaultInterruptHandler@i:
   845                           	opt callstack 0
   846                           
   847                           ; 1 bytes @ 0x2
   848  000003                     	ds	1
   849  000004                     ??_TMR5_DefaultInterruptHandler:
   850  000004                     TMR5_WriteTimer@timerVal:
   851                           	opt callstack 0
   852                           
   853                           ; 2 bytes @ 0x3
   854  000004                     	ds	1
   855  000005                     
   856                           ; 1 bytes @ 0x4
   857  000005                     	ds	1
   858  000006                     ?_strlen:
   859                           	opt callstack 0
   860  000006                     ?_ADCC_GetConversionResult:
   861                           	opt callstack 0
   862  000006                     ?___awdiv:
   863                           	opt callstack 0
   864  000006                     ?___aodiv:
   865                           	opt callstack 0
   866  000006                     ?___aomod:
   867                           	opt callstack 0
   868  000006                     INTERRUPT_Initialize@state:
   869                           	opt callstack 0
   870  000006                     UART2_Read@readValue:
   871                           	opt callstack 0
   872  000006                     UART2_Write@txData:
   873                           	opt callstack 0
   874  000006                     ADCC_StartConversion@channel:
   875                           	opt callstack 0
   876  000006                     SPI1_Exchange8bit@data:
   877                           	opt callstack 0
   878  000006                     PWM8_LoadDutyValue@dutyValue:
   879                           	opt callstack 0
   880  000006                     once@once_flag:
   881                           	opt callstack 0
   882  000006                     StartTimer@count:
   883                           	opt callstack 0
   884  000006                     ___awdiv@dividend:
   885                           	opt callstack 0
   886  000006                     strlen@s:
   887                           	opt callstack 0
   888  000006                     UART1_SetFramingErrorHandler@interruptHandler:
   889                           	opt callstack 0
   890  000006                     UART1_SetOverrunErrorHandler@interruptHandler:
   891                           	opt callstack 0
   892  000006                     UART1_SetErrorHandler@interruptHandler:
   893                           	opt callstack 0
   894  000006                     UART1_SetRxInterruptHandler@InterruptHandler:
   895                           	opt callstack 0
   896  000006                     UART1_SetTxInterruptHandler@InterruptHandler:
   897                           	opt callstack 0
   898  000006                     UART2_SetFramingErrorHandler@interruptHandler:
   899                           	opt callstack 0
   900  000006                     UART2_SetOverrunErrorHandler@interruptHandler:
   901                           	opt callstack 0
   902  000006                     UART2_SetErrorHandler@interruptHandler:
   903                           	opt callstack 0
   904  000006                     UART2_SetRxInterruptHandler@InterruptHandler:
   905                           	opt callstack 0
   906  000006                     UART2_SetTxInterruptHandler@InterruptHandler:
   907                           	opt callstack 0
   908  000006                     TMR6_SetInterruptHandler@InterruptHandler:
   909                           	opt callstack 0
   910  000006                     TMR5_SetInterruptHandler@InterruptHandler:
   911                           	opt callstack 0
   912  000006                     wdtdelay@delay:
   913                           	opt callstack 0
   914  000006                     ___aodiv@dividend:
   915                           	opt callstack 0
   916  000006                     ___aomod@dividend:
   917                           	opt callstack 0
   918                           
   919                           ; 8 bytes @ 0x5
   920  000006                     	ds	1
   921  000007                     putch@txData:
   922                           	opt callstack 0
   923                           
   924                           ; 1 bytes @ 0x6
   925  000007                     	ds	1
   926  000008                     ??_StartTimer:
   927  000008                     ??_PWM8_LoadDutyValue:
   928  000008                     ??_ADCC_GetConversionResult:
   929  000008                     TimerDone@timer:
   930                           	opt callstack 0
   931  000008                     ___awdiv@divisor:
   932                           	opt callstack 0
   933  000008                     fputc@c:
   934                           	opt callstack 0
   935  000008                     strlen@a:
   936                           	opt callstack 0
   937                           
   938                           ; 2 bytes @ 0x7
   939  000008                     	ds	1
   940  000009                     ??_TMR5_Initialize:
   941  000009                     
   942                           ; 1 bytes @ 0x8
   943  000009                     	ds	1
   944  00000A                     StartTimer@timer:
   945                           	opt callstack 0
   946  00000A                     send_lcd_cmd@cmd:
   947                           	opt callstack 0
   948  00000A                     send_lcd_cmd_long@cmd:
   949                           	opt callstack 0
   950  00000A                     ___awdiv@counter:
   951                           	opt callstack 0
   952  00000A                     eaDogM_WriteString@strPtr:
   953                           	opt callstack 0
   954  00000A                     fputc@fp:
   955                           	opt callstack 0
   956                           
   957                           ; 2 bytes @ 0x9
   958  00000A                     	ds	1
   959  00000B                     eaDogM_WriteCommand@cmd:
   960                           	opt callstack 0
   961  00000B                     ___awdiv@sign:
   962                           	opt callstack 0
   963  00000B                     WaitMs@numMilliseconds:
   964                           	opt callstack 0
   965                           
   966                           ; 2 bytes @ 0xA
   967  00000B                     	ds	1
   968  00000C                     ??_fputc:
   969  00000C                     eaDogM_WriteString@i:
   970                           	opt callstack 0
   971  00000C                     ___awdiv@quotient:
   972                           	opt callstack 0
   973                           
   974                           ; 2 bytes @ 0xB
   975  00000C                     	ds	1
   976  00000D                     eaDogM_WriteString@bytesWritten:
   977                           	opt callstack 0
   978                           
   979                           ; 1 bytes @ 0xC
   980  00000D                     	ds	1
   981  00000E                     eaDogM_WriteStringAtPos@c:
   982                           	opt callstack 0
   983  00000E                     led_lightshow@speed:
   984                           	opt callstack 0
   985  00000E                     ___aodiv@divisor:
   986                           	opt callstack 0
   987  00000E                     ___aomod@divisor:
   988                           	opt callstack 0
   989                           
   990                           ; 8 bytes @ 0xD
   991  00000E                     	ds	1
   992  00000F                     eaDogM_WriteStringAtPos@strPtr:
   993                           	opt callstack 0
   994                           
   995                           ; 2 bytes @ 0xE
   996  00000F                     	ds	1
   997  000010                     ??_led_lightshow:
   998                           
   999                           ; 1 bytes @ 0xF
  1000  000010                     	ds	1
  1001  000011                     ?_stoa:
  1002                           	opt callstack 0
  1003  000011                     eaDogM_WriteStringAtPos@r:
  1004                           	opt callstack 0
  1005  000011                     stoa@fp:
  1006                           	opt callstack 0
  1007  000011                     fputs@s:
  1008                           	opt callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x10
  1011  000011                     	ds	1
  1012  000012                     led_lightshow@seq:
  1013                           	opt callstack 0
  1014                           
  1015                           ; 1 bytes @ 0x11
  1016  000012                     	ds	1
  1017  000013                     stoa@s:
  1018                           	opt callstack 0
  1019  000013                     fputs@fp:
  1020                           	opt callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x12
  1023  000013                     	ds	2
  1024  000015                     ??_stoa:
  1025  000015                     fputs@c:
  1026                           	opt callstack 0
  1027                           
  1028                           ; 1 bytes @ 0x14
  1029  000015                     	ds	1
  1030  000016                     ___aodiv@counter:
  1031                           	opt callstack 0
  1032  000016                     ___aomod@counter:
  1033                           	opt callstack 0
  1034  000016                     fputs@i:
  1035                           	opt callstack 0
  1036  000016                     stoa@nuls:
  1037                           	opt callstack 0
  1038                           
  1039                           ; 7 bytes @ 0x15
  1040  000016                     	ds	1
  1041  000017                     ___aodiv@sign:
  1042                           	opt callstack 0
  1043  000017                     ___aomod@sign:
  1044                           	opt callstack 0
  1045                           
  1046                           ; 1 bytes @ 0x16
  1047  000017                     	ds	1
  1048  000018                     ?_abs:
  1049                           	opt callstack 0
  1050  000018                     ?_pad:
  1051                           	opt callstack 0
  1052  000018                     pad@fp:
  1053                           	opt callstack 0
  1054  000018                     abs@a:
  1055                           	opt callstack 0
  1056  000018                     ___aodiv@quotient:
  1057                           	opt callstack 0
  1058                           
  1059                           ; 8 bytes @ 0x17
  1060  000018                     	ds	2
  1061  00001A                     ??_abs:
  1062  00001A                     pad@buf:
  1063                           	opt callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x19
  1066  00001A                     	ds	2
  1067  00001C                     pad@p:
  1068                           	opt callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x1B
  1071  00001C                     	ds	1
  1072  00001D                     stoa@i:
  1073                           	opt callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x1C
  1076  00001D                     	ds	1
  1077  00001E                     ??_pad:
  1078                           
  1079                           ; 1 bytes @ 0x1D
  1080  00001E                     	ds	1
  1081  00001F                     pad@i:
  1082                           	opt callstack 0
  1083  00001F                     stoa@w:
  1084                           	opt callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x1E
  1087  00001F                     	ds	2
  1088  000021                     pad@w:
  1089                           	opt callstack 0
  1090  000021                     stoa@cp:
  1091                           	opt callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x20
  1094  000021                     	ds	2
  1095  000023                     ?_dtoa:
  1096                           	opt callstack 0
  1097  000023                     dtoa@fp:
  1098                           	opt callstack 0
  1099  000023                     stoa@p:
  1100                           	opt callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x22
  1103  000023                     	ds	2
  1104  000025                     stoa@l:
  1105                           	opt callstack 0
  1106  000025                     dtoa@d:
  1107                           	opt callstack 0
  1108                           
  1109                           ; 8 bytes @ 0x24
  1110  000025                     	ds	8
  1111  00002D                     ??_dtoa:
  1112                           
  1113                           ; 1 bytes @ 0x2C
  1114  00002D                     	ds	8
  1115  000035                     _dtoa$2649:
  1116                           	opt callstack 0
  1117                           
  1118                           ; 2 bytes @ 0x34
  1119  000035                     	ds	2
  1120  000037                     dtoa@p:
  1121                           	opt callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x36
  1124  000037                     	ds	2
  1125  000039                     dtoa@w:
  1126                           	opt callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x38
  1129  000039                     	ds	2
  1130  00003B                     dtoa@s:
  1131                           	opt callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x3A
  1134  00003B                     	ds	2
  1135  00003D                     dtoa@n:
  1136                           	opt callstack 0
  1137                           
  1138                           ; 8 bytes @ 0x3C
  1139  00003D                     	ds	8
  1140  000045                     dtoa@i:
  1141                           	opt callstack 0
  1142                           
  1143                           ; 2 bytes @ 0x44
  1144  000045                     	ds	2
  1145  000047                     ?_vfpfcnvrt:
  1146                           	opt callstack 0
  1147  000047                     vfpfcnvrt@fp:
  1148                           	opt callstack 0
  1149                           
  1150                           ; 2 bytes @ 0x46
  1151  000047                     	ds	2
  1152  000049                     vfpfcnvrt@fmt:
  1153                           	opt callstack 0
  1154                           
  1155                           ; 1 bytes @ 0x48
  1156  000049                     	ds	1
  1157  00004A                     vfpfcnvrt@ap:
  1158                           	opt callstack 0
  1159                           
  1160                           ; 1 bytes @ 0x49
  1161  00004A                     	ds	1
  1162  00004B                     vfpfcnvrt@ll:
  1163                           	opt callstack 0
  1164                           
  1165                           ; 8 bytes @ 0x4A
  1166  00004B                     	ds	8
  1167  000053                     vfpfcnvrt@cp:
  1168                           	opt callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x52
  1171  000053                     	ds	2
  1172  000055                     vfprintf@cfmt:
  1173                           	opt callstack 0
  1174                           
  1175                           ; 1 bytes @ 0x54
  1176  000055                     	ds	1
  1177  000056                     
  1178                           ; 1 bytes @ 0x55
  1179 ;;
  1180 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1181 ;;
  1182 ;; *************** function _main *****************
  1183 ;; Defined at:
  1184 ;;		line 91 in file "main.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;		None
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;  buffer         24   24[BANK0 ] unsigned char [24]
  1189 ;;  y               1   49[BANK0 ] unsigned char 
  1190 ;;  x               1    0        unsigned char 
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  1    wreg      void 
  1193 ;; Registers used:
  1194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 3F/1
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1201 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1202 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1203 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1204 ;;Total ram usage:       28 bytes
  1205 ;; Hardware stack levels required when called:   14
  1206 ;; This function calls:
  1207 ;;		_Digital232_RW
  1208 ;;		_Digital232_init
  1209 ;;		_SYSTEM_Initialize
  1210 ;;		_StartTimer
  1211 ;;		_TimerDone
  1212 ;;		_eaDogM_WriteCommand
  1213 ;;		_eaDogM_WriteStringAtPos
  1214 ;;		_init_display
  1215 ;;		_led_lightshow
  1216 ;;		_once
  1217 ;;		_sprintf
  1218 ;;		_work_sw
  1219 ;; This function is called by:
  1220 ;;		Startup code after reset
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           	psect	text0
  1225  002300                     __ptext0:
  1226                           	opt callstack 0
  1227  002300                     _main:
  1228                           	opt callstack 17
  1229                           
  1230                           ;incstack = 0
  1231  002300  0E00               	movlw	0
  1232  002302  0100               	movlb	0	; () banked
  1233  002304  6F91               	movwf	main@y& (0+255),b
  1234                           
  1235                           ; BSR set to: 0
  1236                           ;main.c: 94:  char buffer[24];;main.c: 96:  SYSTEM_Initialize();
  1237  002306  EC35  F01D         	call	_SYSTEM_Initialize	;wreg free
  1238                           
  1239                           ; BSR set to: 61
  1240                           ;main.c: 103:  (INTCON0bits.GIEH = 1);
  1241  00230A  8ED2               	bsf	210,7,c	;volatile
  1242                           
  1243                           ; BSR set to: 61
  1244                           ;main.c: 106:  (INTCON0bits.GIEL = 1);
  1245  00230C  8CD2               	bsf	210,6,c	;volatile
  1246                           
  1247                           ; BSR set to: 61
  1248                           ;main.c: 114:  IO.input_ok = 0;
  1249  00230E  0E00               	movlw	0
  1250  002310  0101               	movlb	1	; () banked
  1251  002312  6FA9               	movwf	(_IO+10)& (0+255),b
  1252                           
  1253                           ; BSR set to: 1
  1254                           ;main.c: 115:  IO.output_ok = 0;
  1255  002314  0E00               	movlw	0
  1256  002316  6FAA               	movwf	(_IO+11)& (0+255),b
  1257                           
  1258                           ; BSR set to: 1
  1259                           ;main.c: 116:  IO.d232 = D232_IDLE;
  1260  002318  0E00               	movlw	0
  1261  00231A  6FAC               	movwf	(_IO+13)& (0+255),b
  1262                           
  1263                           ; BSR set to: 1
  1264                           ;main.c: 117:  IO.io = IO_IDLE;
  1265  00231C  0E00               	movlw	0
  1266  00231E  6FAB               	movwf	(_IO+12)& (0+255),b
  1267                           
  1268                           ; BSR set to: 1
  1269                           ;main.c: 119:  init_display();
  1270  002320  ECE8  F01A         	call	_init_display	;wreg free
  1271                           
  1272                           ; BSR set to: 1
  1273                           ;main.c: 120:  eaDogM_WriteCommand(0b00001100);
  1274  002324  0E0C               	movlw	12
  1275  002326  ECE6  F01F         	call	_eaDogM_WriteCommand
  1276                           
  1277                           ; BSR set to: 1
  1278                           ;main.c: 122:  StartTimer(TMR_INIT, 1000);
  1279  00232A  0E03               	movlw	3
  1280  00232C  6E07               	movwf	(StartTimer@count+1)^0,c
  1281  00232E  0EE8               	movlw	232
  1282  002330  6E06               	movwf	StartTimer@count^0,c
  1283  002332  0E01               	movlw	1
  1284  002334  EC6B  F01D         	call	_StartTimer
  1285                           
  1286                           ;main.c: 123:  Digital232_init();
  1287  002338  EC50  F017         	call	_Digital232_init	;wreg free
  1288                           
  1289                           ;main.c: 124:  sprintf(buffer, "SW %s Play!", "0.24");
  1290  00233C  0E78               	movlw	low main@buffer
  1291  00233E  0100               	movlb	0	; () banked
  1292  002340  6F64               	movwf	sprintf@s& (0+255),b
  1293  002342  6B65               	clrf	(sprintf@s+1)& (0+255),b
  1294  002344  0E26               	movlw	low STR_3
  1295  002346  6F66               	movwf	sprintf@fmt& (0+255),b
  1296  002348  0E32               	movlw	low STR_4
  1297  00234A  6F67               	movwf	(?_sprintf+3)& (0+255),b
  1298  00234C  5167               	movf	(?_sprintf+3)& (0+255),w,b
  1299  00234E  A4D8               	btfss	status,2,c
  1300  002350  0E20               	movlw	high __smallconst
  1301  002352  6F68               	movwf	(?_sprintf+4)& (0+255),b
  1302  002354  ECF9  F01B         	call	_sprintf	;wreg free
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;main.c: 125:  eaDogM_WriteStringAtPos(0, 0, buffer);
  1306  002358  0E00               	movlw	0
  1307  00235A  6E0E               	movwf	eaDogM_WriteStringAtPos@c^0,c
  1308  00235C  0E78               	movlw	low main@buffer
  1309  00235E  6E0F               	movwf	eaDogM_WriteStringAtPos@strPtr^0,c
  1310  002360  6A10               	clrf	(eaDogM_WriteStringAtPos@strPtr+1)^0,c
  1311  002362  0E00               	movlw	0
  1312  002364  ECC6  F01E         	call	_eaDogM_WriteStringAtPos
  1313  002368                     l5508:
  1314                           
  1315                           ;main.c: 129:   work_sw();
  1316  002368  EC7E  F019         	call	_work_sw	;wreg free
  1317                           
  1318                           ;main.c: 130:   if (Digital232_RW() && switches->detonator)
  1319  00236C  ECC3  F012         	call	_Digital232_RW	;wreg free
  1320  002370  0900               	iorlw	0
  1321  002372  A4D8               	btfss	status,2,c
  1322                           
  1323                           ; BSR set to: 1
  1324  002374  A39F               	btfss	_IO& (0+255),1,b
  1325  002376  D007               	goto	l5516
  1326                           
  1327                           ; BSR set to: 1
  1328                           ;main.c: 131:    led_lightshow(IO.seq_value, 1);
  1329  002378  0E00               	movlw	0
  1330  00237A  6E0F               	movwf	(led_lightshow@speed+1)^0,c
  1331  00237C  0E01               	movlw	1
  1332  00237E  6E0E               	movwf	led_lightshow@speed^0,c
  1333  002380  51AF               	movf	(_IO+16)& (0+255),w,b
  1334  002382  ECDB  F016         	call	_led_lightshow
  1335  002386                     l5516:
  1336                           
  1337                           ;main.c: 133:   if (!switches->detonator) {
  1338  002386  0101               	movlb	1	; () banked
  1339  002388  B39F               	btfsc	_IO& (0+255),1,b
  1340  00238A  D0C4               	goto	l5572
  1341                           
  1342                           ; BSR set to: 1
  1343                           ;main.c: 134:    IO.outbytes[1] = IO.outbytes[1] | 0x02;
  1344  00238C  51A5               	movf	(_IO+6)& (0+255),w,b
  1345  00238E  0902               	iorlw	2
  1346  002390  6FA5               	movwf	(_IO+6)& (0+255),b
  1347                           
  1348                           ; BSR set to: 1
  1349                           ;main.c: 135:    if (IO.outbytes[2]&0b00000001) {
  1350  002392  A1A6               	btfss	(_IO+7)& (0+255),0,b
  1351  002394  D040               	goto	l5538
  1352                           
  1353                           ; BSR set to: 1
  1354                           ;main.c: 136:     if (TimerDone(TMR_EXTRA)) {
  1355  002396  0E04               	movlw	4
  1356  002398  EC36  F01E         	call	_TimerDone
  1357  00239C  0900               	iorlw	0
  1358  00239E  B4D8               	btfsc	status,2,c
  1359  0023A0  D03A               	goto	l5538
  1360                           
  1361                           ;main.c: 137:      IO.outbytes[1] = IO.outbytes[1] | 0x04;
  1362  0023A2  0101               	movlb	1	; () banked
  1363  0023A4  51A5               	movf	(_IO+6)& (0+255),w,b
  1364  0023A6  0904               	iorlw	4
  1365  0023A8  6FA5               	movwf	(_IO+6)& (0+255),b
  1366                           
  1367                           ; BSR set to: 1
  1368                           ;main.c: 138:      if (once(&IO.f1))
  1369  0023AA  0EBF               	movlw	low (_IO+32)
  1370  0023AC  6E06               	movwf	once@once_flag^0,c
  1371  0023AE  0E01               	movlw	high (_IO+32)
  1372  0023B0  6E07               	movwf	(once@once_flag+1)^0,c
  1373  0023B2  ECFB  F01D         	call	_once	;wreg free
  1374  0023B6  0900               	iorlw	0
  1375  0023B8  B4D8               	btfsc	status,2,c
  1376  0023BA  D002               	goto	l5530
  1377                           
  1378                           ;main.c: 139:       IO.hits++;
  1379  0023BC  0101               	movlb	1	; () banked
  1380  0023BE  2BB0               	incf	(_IO+17)& (0+255),f,b
  1381  0023C0                     l5530:
  1382                           
  1383                           ;main.c: 140:      if (IO.speed_update && IO.speed-- < 2) {
  1384  0023C0  0101               	movlb	1	; () banked
  1385  0023C2  51BC               	movf	(_IO+29)& (0+255),w,b
  1386  0023C4  B4D8               	btfsc	status,2,c
  1387  0023C6  D024               	goto	l1062
  1388                           
  1389                           ; BSR set to: 1
  1390  0023C8  51B6               	movf	(_IO+23)& (0+255),w,b
  1391  0023CA  0100               	movlb	0	; () banked
  1392  0023CC  6F76               	movwf	??_main& (0+255),b
  1393  0023CE  0101               	movlb	1	; () banked
  1394  0023D0  51B7               	movf	(_IO+24)& (0+255),w,b
  1395  0023D2  0100               	movlb	0	; () banked
  1396  0023D4  6F77               	movwf	(??_main+1)& (0+255),b
  1397  0023D6  0E01               	movlw	1
  1398  0023D8  0101               	movlb	1	; () banked
  1399  0023DA  5FB6               	subwf	(_IO+23)& (0+255),f,b
  1400  0023DC  0E00               	movlw	0
  1401  0023DE  5BB7               	subwfb	(_IO+24)& (0+255),f,b
  1402  0023E0  0100               	movlb	0	; () banked
  1403  0023E2  5177               	movf	(??_main+1)& (0+255),w,b
  1404  0023E4  E115               	bnz	l1062
  1405  0023E6  0E02               	movlw	2
  1406  0023E8  5D76               	subwf	??_main& (0+255),w,b
  1407  0023EA  B0D8               	btfsc	status,0,c
  1408  0023EC  D011               	goto	l1062
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;main.c: 141:       IO.speed = 10;
  1412  0023EE  0E00               	movlw	0
  1413  0023F0  0101               	movlb	1	; () banked
  1414  0023F2  6FB7               	movwf	(_IO+24)& (0+255),b
  1415  0023F4  0E0A               	movlw	10
  1416  0023F6  6FB6               	movwf	(_IO+23)& (0+255),b
  1417                           
  1418                           ;main.c: 142:       IO.sequence_done = 1;
  1419  0023F8  0E01               	movlw	1
  1420  0023FA  6FBD               	movwf	(_IO+30)& (0+255),b
  1421                           
  1422                           ;main.c: 143:       IO.seq_value = 2;
  1423  0023FC  0E02               	movlw	2
  1424  0023FE  6FAF               	movwf	(_IO+16)& (0+255),b
  1425                           
  1426                           ;main.c: 144:       IO.slower = 0;
  1427  002400  0E00               	movlw	0
  1428  002402  6FB9               	movwf	(_IO+26)& (0+255),b
  1429  002404  0E00               	movlw	0
  1430  002406  6FB8               	movwf	(_IO+25)& (0+255),b
  1431                           
  1432                           ; BSR set to: 1
  1433                           ;main.c: 145:       IO.stats = IO.score;
  1434  002408  C1B2  F1B3         	movff	_IO+19,_IO+20
  1435                           
  1436                           ;main.c: 146:       IO.win = 1;
  1437  00240C  0E01               	movlw	1
  1438  00240E  6FBE               	movwf	(_IO+31)& (0+255),b
  1439  002410                     l1062:
  1440                           
  1441                           ;main.c: 148:      IO.speed_update = 0;
  1442  002410  0E00               	movlw	0
  1443  002412  0101               	movlb	1	; () banked
  1444  002414  6FBC               	movwf	(_IO+29)& (0+255),b
  1445  002416                     l5538:
  1446                           
  1447                           ;main.c: 153:    if (IO.outbytes[2]&0b10000000) {
  1448  002416  0101               	movlb	1	; () banked
  1449  002418  AFA6               	btfss	(_IO+7)& (0+255),7,b
  1450  00241A  D040               	goto	l5556
  1451                           
  1452                           ; BSR set to: 1
  1453                           ;main.c: 154:     if (TimerDone(TMR_EXTRA)) {
  1454  00241C  0E04               	movlw	4
  1455  00241E  EC36  F01E         	call	_TimerDone
  1456  002422  0900               	iorlw	0
  1457  002424  B4D8               	btfsc	status,2,c
  1458  002426  D03A               	goto	l5556
  1459                           
  1460                           ;main.c: 155:      IO.outbytes[1] = IO.outbytes[1] | 0x01;
  1461  002428  0101               	movlb	1	; () banked
  1462  00242A  51A5               	movf	(_IO+6)& (0+255),w,b
  1463  00242C  0901               	iorlw	1
  1464  00242E  6FA5               	movwf	(_IO+6)& (0+255),b
  1465                           
  1466                           ; BSR set to: 1
  1467                           ;main.c: 156:      if (once(&IO.f2))
  1468  002430  0EC0               	movlw	low (_IO+33)
  1469  002432  6E06               	movwf	once@once_flag^0,c
  1470  002434  0E01               	movlw	high (_IO+33)
  1471  002436  6E07               	movwf	(once@once_flag+1)^0,c
  1472  002438  ECFB  F01D         	call	_once	;wreg free
  1473  00243C  0900               	iorlw	0
  1474  00243E  B4D8               	btfsc	status,2,c
  1475  002440  D002               	goto	l5548
  1476                           
  1477                           ;main.c: 157:       IO.hits++;
  1478  002442  0101               	movlb	1	; () banked
  1479  002444  2BB0               	incf	(_IO+17)& (0+255),f,b
  1480  002446                     l5548:
  1481                           
  1482                           ;main.c: 158:      if (IO.speed_update && IO.speed-- < 2) {
  1483  002446  0101               	movlb	1	; () banked
  1484  002448  51BC               	movf	(_IO+29)& (0+255),w,b
  1485  00244A  B4D8               	btfsc	status,2,c
  1486  00244C  D024               	goto	l1066
  1487                           
  1488                           ; BSR set to: 1
  1489  00244E  51B6               	movf	(_IO+23)& (0+255),w,b
  1490  002450  0100               	movlb	0	; () banked
  1491  002452  6F76               	movwf	??_main& (0+255),b
  1492  002454  0101               	movlb	1	; () banked
  1493  002456  51B7               	movf	(_IO+24)& (0+255),w,b
  1494  002458  0100               	movlb	0	; () banked
  1495  00245A  6F77               	movwf	(??_main+1)& (0+255),b
  1496  00245C  0E01               	movlw	1
  1497  00245E  0101               	movlb	1	; () banked
  1498  002460  5FB6               	subwf	(_IO+23)& (0+255),f,b
  1499  002462  0E00               	movlw	0
  1500  002464  5BB7               	subwfb	(_IO+24)& (0+255),f,b
  1501  002466  0100               	movlb	0	; () banked
  1502  002468  5177               	movf	(??_main+1)& (0+255),w,b
  1503  00246A  E115               	bnz	l1066
  1504  00246C  0E02               	movlw	2
  1505  00246E  5D76               	subwf	??_main& (0+255),w,b
  1506  002470  B0D8               	btfsc	status,0,c
  1507  002472  D011               	goto	l1066
  1508                           
  1509                           ; BSR set to: 0
  1510                           ;main.c: 159:       IO.speed = 10;
  1511  002474  0E00               	movlw	0
  1512  002476  0101               	movlb	1	; () banked
  1513  002478  6FB7               	movwf	(_IO+24)& (0+255),b
  1514  00247A  0E0A               	movlw	10
  1515  00247C  6FB6               	movwf	(_IO+23)& (0+255),b
  1516                           
  1517                           ;main.c: 160:       IO.sequence_done = 1;
  1518  00247E  0E01               	movlw	1
  1519  002480  6FBD               	movwf	(_IO+30)& (0+255),b
  1520                           
  1521                           ;main.c: 161:       IO.seq_value = 2;
  1522  002482  0E02               	movlw	2
  1523  002484  6FAF               	movwf	(_IO+16)& (0+255),b
  1524                           
  1525                           ;main.c: 162:       IO.slower = 0;
  1526  002486  0E00               	movlw	0
  1527  002488  6FB9               	movwf	(_IO+26)& (0+255),b
  1528  00248A  0E00               	movlw	0
  1529  00248C  6FB8               	movwf	(_IO+25)& (0+255),b
  1530                           
  1531                           ; BSR set to: 1
  1532                           ;main.c: 163:       IO.stats = IO.score;
  1533  00248E  C1B2  F1B3         	movff	_IO+19,_IO+20
  1534                           
  1535                           ;main.c: 164:       IO.win = 1;
  1536  002492  0E01               	movlw	1
  1537  002494  6FBE               	movwf	(_IO+31)& (0+255),b
  1538  002496                     l1066:
  1539                           
  1540                           ;main.c: 166:      IO.speed_update = 0;
  1541  002496  0E00               	movlw	0
  1542  002498  0101               	movlb	1	; () banked
  1543  00249A  6FBC               	movwf	(_IO+29)& (0+255),b
  1544  00249C                     l5556:
  1545                           
  1546                           ;main.c: 171:    if (IO.outbytes[2]&0b01111110) {
  1547  00249C  0060  F698  F076   	movff	_IO+7,??_main
  1548  0024A2  0E7E               	movlw	126
  1549  0024A4  0100               	movlb	0	; () banked
  1550  0024A6  1776               	andwf	??_main& (0+255),f,b
  1551  0024A8  B4D8               	btfsc	status,2,c
  1552  0024AA  D75E               	goto	l5508
  1553                           
  1554                           ; BSR set to: 0
  1555                           ;main.c: 172:     if (TimerDone(TMR_EXTRA_MISS)) {
  1556  0024AC  0E05               	movlw	5
  1557  0024AE  EC36  F01E         	call	_TimerDone
  1558  0024B2  0900               	iorlw	0
  1559  0024B4  B4D8               	btfsc	status,2,c
  1560  0024B6  D758               	goto	l5508
  1561                           
  1562                           ;main.c: 173:      if (once(&IO.f3)) {
  1563  0024B8  0EC1               	movlw	low (_IO+34)
  1564  0024BA  6E06               	movwf	once@once_flag^0,c
  1565  0024BC  0E01               	movlw	high (_IO+34)
  1566  0024BE  6E07               	movwf	(once@once_flag+1)^0,c
  1567  0024C0  ECFB  F01D         	call	_once	;wreg free
  1568  0024C4  0900               	iorlw	0
  1569  0024C6  B4D8               	btfsc	status,2,c
  1570  0024C8  D74F               	goto	l5508
  1571                           
  1572                           ;main.c: 174:       IO.misses++;
  1573  0024CA  0101               	movlb	1	; () banked
  1574  0024CC  2BB1               	incf	(_IO+18)& (0+255),f,b
  1575                           
  1576                           ; BSR set to: 1
  1577                           ;main.c: 175:       if (IO.speed_update && (IO.misses++ > 26)) {
  1578  0024CE  51BC               	movf	(_IO+29)& (0+255),w,b
  1579  0024D0  B4D8               	btfsc	status,2,c
  1580  0024D2  D74A               	goto	l5508
  1581                           
  1582                           ; BSR set to: 1
  1583  0024D4  EE20  F1B1         	lfsr	2,_IO+18
  1584  0024D8  006F FF7C  F076    	movff	indf2,??_main
  1585  0024DE  0E01               	movlw	1
  1586  0024E0  26DF               	addwf	indf2,f,c
  1587  0024E2  0E1A               	movlw	26
  1588  0024E4  0100               	movlb	0	; () banked
  1589  0024E6  6576               	cpfsgt	??_main& (0+255),b
  1590  0024E8  D73F               	goto	l5508
  1591                           
  1592                           ; BSR set to: 0
  1593                           ;main.c: 176:        if (IO.score-- < 10)
  1594  0024EA  EE20  F1B2         	lfsr	2,_IO+19
  1595  0024EE  006F FF7C  F076    	movff	indf2,??_main
  1596  0024F4  0E01               	movlw	1
  1597  0024F6  5EDF               	subwf	indf2,f,c
  1598  0024F8  0E0A               	movlw	10
  1599  0024FA  6176               	cpfslt	??_main& (0+255),b
  1600  0024FC  D003               	goto	l1071
  1601                           
  1602                           ; BSR set to: 0
  1603                           ;main.c: 177:         IO.score = 10;
  1604  0024FE  0E0A               	movlw	10
  1605  002500  0101               	movlb	1	; () banked
  1606  002502  6FB2               	movwf	(_IO+19)& (0+255),b
  1607  002504                     l1071:
  1608                           
  1609                           ;main.c: 179:        IO.slower = 10;
  1610  002504  0E00               	movlw	0
  1611  002506  0101               	movlb	1	; () banked
  1612  002508  6FB9               	movwf	(_IO+26)& (0+255),b
  1613  00250A  0E0A               	movlw	10
  1614  00250C  6FB8               	movwf	(_IO+25)& (0+255),b
  1615                           
  1616                           ;main.c: 180:        IO.speed_update = 0;
  1617  00250E  0E00               	movlw	0
  1618  002510  6FBC               	movwf	(_IO+29)& (0+255),b
  1619                           
  1620                           ;main.c: 185:   } else {
  1621                           
  1622                           ;main.c: 184:    }
  1623  002512  D72A               	goto	l5508
  1624  002514                     l5572:
  1625                           
  1626                           ; BSR set to: 1
  1627                           ;main.c: 186:    StartTimer(TMR_EXTRA, 500);
  1628  002514  0E01               	movlw	1
  1629  002516  6E07               	movwf	(StartTimer@count+1)^0,c
  1630  002518  0EF4               	movlw	244
  1631  00251A  6E06               	movwf	StartTimer@count^0,c
  1632  00251C  0E04               	movlw	4
  1633  00251E  EC6B  F01D         	call	_StartTimer
  1634                           
  1635                           ;main.c: 187:    StartTimer(TMR_EXTRA_MISS, 25);
  1636  002522  0E00               	movlw	0
  1637  002524  6E07               	movwf	(StartTimer@count+1)^0,c
  1638  002526  0E19               	movlw	25
  1639  002528  6E06               	movwf	StartTimer@count^0,c
  1640  00252A  0E05               	movlw	5
  1641  00252C  EC6B  F01D         	call	_StartTimer
  1642                           
  1643                           ;main.c: 188:    IO.outbytes[1] = IO.outbytes[1] & (~0x02);
  1644  002530  0101               	movlb	1	; () banked
  1645  002532  51A5               	movf	(_IO+6)& (0+255),w,b
  1646  002534  0BFD               	andlw	253
  1647  002536  6FA5               	movwf	(_IO+6)& (0+255),b
  1648                           
  1649                           ; BSR set to: 1
  1650                           ;main.c: 189:    IO.outbytes[1] = IO.outbytes[1] & (~0x04);
  1651  002538  51A5               	movf	(_IO+6)& (0+255),w,b
  1652  00253A  0BFB               	andlw	251
  1653  00253C  6FA5               	movwf	(_IO+6)& (0+255),b
  1654                           
  1655                           ; BSR set to: 1
  1656                           ;main.c: 190:    IO.outbytes[1] = IO.outbytes[1] & (~0x01);
  1657  00253E  51A5               	movf	(_IO+6)& (0+255),w,b
  1658  002540  0BFE               	andlw	254
  1659  002542  6FA5               	movwf	(_IO+6)& (0+255),b
  1660                           
  1661                           ; BSR set to: 1
  1662                           ;main.c: 191:    IO.speed_update = 1;
  1663  002544  0E01               	movlw	1
  1664  002546  6FBC               	movwf	(_IO+29)& (0+255),b
  1665                           
  1666                           ; BSR set to: 1
  1667                           ;main.c: 192:    IO.f1 = 1;
  1668  002548  0E01               	movlw	1
  1669  00254A  6FBF               	movwf	(_IO+32)& (0+255),b
  1670                           
  1671                           ; BSR set to: 1
  1672                           ;main.c: 193:    IO.f2 = 1;
  1673  00254C  0E01               	movlw	1
  1674  00254E  6FC0               	movwf	(_IO+33)& (0+255),b
  1675                           
  1676                           ; BSR set to: 1
  1677                           ;main.c: 194:    IO.f3 = 1;
  1678  002550  0E01               	movlw	1
  1679  002552  6FC1               	movwf	(_IO+34)& (0+255),b
  1680                           
  1681                           ; BSR set to: 1
  1682                           ;main.c: 195:    if (TimerDone(TMR_SEQ)) {
  1683  002554  0E06               	movlw	6
  1684  002556  EC36  F01E         	call	_TimerDone
  1685  00255A  0900               	iorlw	0
  1686  00255C  B4D8               	btfsc	status,2,c
  1687  00255E  D704               	goto	l5508
  1688                           
  1689                           ;main.c: 196:     IO.seq_value = 0;
  1690  002560  0E00               	movlw	0
  1691  002562  0101               	movlb	1	; () banked
  1692  002564  6FAF               	movwf	(_IO+16)& (0+255),b
  1693                           
  1694                           ;main.c: 197:     if (IO.win) {
  1695  002566  51BE               	movf	(_IO+31)& (0+255),w,b
  1696  002568  B4D8               	btfsc	status,2,c
  1697  00256A  D6FE               	goto	l5508
  1698                           
  1699                           ; BSR set to: 1
  1700                           ;main.c: 198:      IO.win = 0;
  1701  00256C  0E00               	movlw	0
  1702  00256E  6FBE               	movwf	(_IO+31)& (0+255),b
  1703                           
  1704                           ;main.c: 199:      IO.hits = 0;
  1705  002570  0E00               	movlw	0
  1706  002572  6FB0               	movwf	(_IO+17)& (0+255),b
  1707                           
  1708                           ;main.c: 200:      IO.misses = 0;
  1709  002574  0E00               	movlw	0
  1710  002576  6FB1               	movwf	(_IO+18)& (0+255),b
  1711                           
  1712                           ;main.c: 201:      IO.clock = 0;
  1713  002578  0E00               	movlw	0
  1714  00257A  6FBB               	movwf	(_IO+28)& (0+255),b
  1715  00257C  0E00               	movlw	0
  1716  00257E  6FBA               	movwf	(_IO+27)& (0+255),b
  1717                           
  1718                           ;main.c: 202:      IO.score = 50;
  1719  002580  0E32               	movlw	50
  1720  002582  6FB2               	movwf	(_IO+19)& (0+255),b
  1721  002584  D6F1               	goto	l5508
  1722  002586                     __end_of_main:
  1723                           	opt callstack 0
  1724                           
  1725 ;; *************** function _work_sw *****************
  1726 ;; Defined at:
  1727 ;;		line 74 in file "main.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;		None
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;  buffer        128    0[BANK2 ] unsigned char [64][2]
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  1    wreg      void 
  1734 ;; Registers used:
  1735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1742 ;;      Locals:         0       0       0     128       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1744 ;;      Totals:         0       0       0     128       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1745 ;;Total ram usage:      128 bytes
  1746 ;; Hardware stack levels used:    1
  1747 ;; Hardware stack levels required when called:   13
  1748 ;; This function calls:
  1749 ;;		_StartTimer
  1750 ;;		_TimerDone
  1751 ;;		_eaDogM_WriteStringAtPos
  1752 ;;		_sprintf
  1753 ;; This function is called by:
  1754 ;;		_main
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           	psect	text1
  1759  0032FC                     __ptext1:
  1760                           	opt callstack 0
  1761  0032FC                     _work_sw:
  1762                           	opt callstack 17
  1763                           
  1764                           ;main.c: 76:  char buffer[2][64];;main.c: 77:  if (TimerDone(TMR_INIT)) {
  1765                           
  1766                           ; BSR set to: 1
  1767                           ;incstack = 0
  1768  0032FC  0E01               	movlw	1
  1769  0032FE  EC36  F01E         	call	_TimerDone
  1770  003302  0900               	iorlw	0
  1771  003304  B4D8               	btfsc	status,2,c
  1772  003306  0012               	return	
  1773                           
  1774                           ;main.c: 78:   IO.clock++;
  1775  003308  0101               	movlb	1	; () banked
  1776  00330A  4BBA               	infsnz	(_IO+27)& (0+255),f,b
  1777  00330C  2BBB               	incf	(_IO+28)& (0+255),f,b
  1778                           
  1779                           ; BSR set to: 1
  1780                           ;main.c: 79:   sprintf(buffer[0], " H %i, M %i     ", IO.hits, IO.misses);
  1781  00330E  0E00               	movlw	low work_sw@buffer
  1782  003310  0100               	movlb	0	; () banked
  1783  003312  6F64               	movwf	sprintf@s& (0+255),b
  1784  003314  0E02               	movlw	high work_sw@buffer
  1785  003316  6F65               	movwf	(sprintf@s+1)& (0+255),b
  1786  003318  0E15               	movlw	low STR_1
  1787  00331A  6F66               	movwf	sprintf@fmt& (0+255),b
  1788  00331C  0060  F6C0  F067   	movff	_IO+17,?_sprintf+3
  1789  003322  6B68               	clrf	(?_sprintf+4)& (0+255),b
  1790  003324  0060  F6C4  F069   	movff	_IO+18,?_sprintf+5
  1791  00332A  6B6A               	clrf	(?_sprintf+6)& (0+255),b
  1792  00332C  ECF9  F01B         	call	_sprintf	;wreg free
  1793                           
  1794                           ; BSR set to: 0
  1795                           ;main.c: 80:   sprintf(buffer[1], " Score %i %i %i    ", IO.score, IO.button_value,IO.cl
      +                          ock);
  1796  003330  0E40               	movlw	low (work_sw@buffer+64)
  1797  003332  6F64               	movwf	sprintf@s& (0+255),b
  1798  003334  0E02               	movlw	high (work_sw@buffer+64)
  1799  003336  6F65               	movwf	(sprintf@s+1)& (0+255),b
  1800  003338  0E01               	movlw	low STR_2
  1801  00333A  6F66               	movwf	sprintf@fmt& (0+255),b
  1802  00333C  0060  F6C8  F067   	movff	_IO+19,?_sprintf+3
  1803  003342  6B68               	clrf	(?_sprintf+4)& (0+255),b
  1804  003344  0060  F6D0  F069   	movff	_IO+21,?_sprintf+5
  1805  00334A  0060  F6D4  F06A   	movff	_IO+22,?_sprintf+6
  1806  003350  0060  F6E8  F06B   	movff	_IO+27,?_sprintf+7
  1807  003356  0060  F6EC  F06C   	movff	_IO+28,?_sprintf+8
  1808  00335C  ECF9  F01B         	call	_sprintf	;wreg free
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;main.c: 81:   buffer[1][16] = 0;
  1812  003360  0E00               	movlw	0
  1813  003362  0102               	movlb	2	; () banked
  1814  003364  6F50               	movwf	(work_sw@buffer+80)& (0+255),b
  1815                           
  1816                           ; BSR set to: 2
  1817                           ;main.c: 82:   eaDogM_WriteStringAtPos(1, 0, buffer[0]);
  1818  003366  0E00               	movlw	0
  1819  003368  6E0E               	movwf	eaDogM_WriteStringAtPos@c^0,c
  1820  00336A  0E00               	movlw	low work_sw@buffer
  1821  00336C  6E0F               	movwf	eaDogM_WriteStringAtPos@strPtr^0,c
  1822  00336E  0E02               	movlw	high work_sw@buffer
  1823  003370  6E10               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)^0,c
  1824  003372  0E01               	movlw	1
  1825  003374  ECC6  F01E         	call	_eaDogM_WriteStringAtPos
  1826                           
  1827                           ;main.c: 83:   eaDogM_WriteStringAtPos(2, 0, buffer[1]);
  1828  003378  0E00               	movlw	0
  1829  00337A  6E0E               	movwf	eaDogM_WriteStringAtPos@c^0,c
  1830  00337C  0E40               	movlw	low (work_sw@buffer+64)
  1831  00337E  6E0F               	movwf	eaDogM_WriteStringAtPos@strPtr^0,c
  1832  003380  0E02               	movlw	high (work_sw@buffer+64)
  1833  003382  6E10               	movwf	(eaDogM_WriteStringAtPos@strPtr+1)^0,c
  1834  003384  0E02               	movlw	2
  1835  003386  ECC6  F01E         	call	_eaDogM_WriteStringAtPos
  1836                           
  1837                           ;main.c: 84:   StartTimer(TMR_INIT, 500);
  1838  00338A  0E01               	movlw	1
  1839  00338C  6E07               	movwf	(StartTimer@count+1)^0,c
  1840  00338E  0EF4               	movlw	244
  1841  003390  6E06               	movwf	StartTimer@count^0,c
  1842  003392  0E01               	movlw	1
  1843  003394  EC6B  F01D         	call	_StartTimer
  1844  003398  0012               	return		;funcret
  1845  00339A                     __end_of_work_sw:
  1846                           	opt callstack 0
  1847                           
  1848 ;; *************** function _sprintf *****************
  1849 ;; Defined at:
  1850 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;  s               2    4[BANK0 ] PTR unsigned char 
  1853 ;;		 -> main@buffer(24), work_sw@buffer(128), 
  1854 ;;  fmt             1    6[BANK0 ] PTR const unsigned char 
  1855 ;;		 -> STR_3(12), STR_2(20), STR_1(17), 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  f               6   16[BANK0 ] struct _IO_FILE
  1858 ;;  ret             2    0        int 
  1859 ;;  ap              1   15[BANK0 ] PTR void [1]
  1860 ;;		 -> ?_printf(2), ?_sprintf(2), 
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  2    4[BANK0 ] int 
  1863 ;; Registers used:
  1864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1865 ;; Tracked objects:
  1866 ;;		On entry : 3F/0
  1867 ;;		On exit  : 3F/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1870 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1871 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1873 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1874 ;;Total ram usage:       18 bytes
  1875 ;; Hardware stack levels used:    1
  1876 ;; Hardware stack levels required when called:   12
  1877 ;; This function calls:
  1878 ;;		_vfprintf
  1879 ;; This function is called by:
  1880 ;;		_work_sw
  1881 ;;		_main
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           	psect	text2
  1886  0037F2                     __ptext2:
  1887                           	opt callstack 0
  1888  0037F2                     _sprintf:
  1889                           	opt callstack 17
  1890                           
  1891                           ; BSR set to: 0
  1892                           
  1893                           ;incstack = 0
  1894  0037F2  0E67               	movlw	low (?_sprintf+3)
  1895  0037F4  6F6F               	movwf	sprintf@ap& (0+255),b
  1896  0037F6  0060  F190  F070   	movff	sprintf@s,sprintf@f
  1897  0037FC  0060  F194  F071   	movff	sprintf@s+1,sprintf@f+1
  1898                           
  1899                           ; BSR set to: 0
  1900  003802  0E00               	movlw	0
  1901  003804  6F73               	movwf	(sprintf@f+3)& (0+255),b
  1902  003806  0E00               	movlw	0
  1903  003808  6F72               	movwf	(sprintf@f+2)& (0+255),b
  1904                           
  1905                           ; BSR set to: 0
  1906  00380A  0E00               	movlw	0
  1907  00380C  6F75               	movwf	(sprintf@f+5)& (0+255),b
  1908  00380E  0E00               	movlw	0
  1909  003810  6F74               	movwf	(sprintf@f+4)& (0+255),b
  1910                           
  1911                           ; BSR set to: 0
  1912  003812  0E70               	movlw	low sprintf@f
  1913  003814  6F60               	movwf	vfprintf@fp& (0+255),b
  1914  003816  6B61               	clrf	(vfprintf@fp+1)& (0+255),b
  1915  003818  0060  F198  F062   	movff	sprintf@fmt,vfprintf@fmt
  1916  00381E  0E6F               	movlw	low sprintf@ap
  1917  003820  6F63               	movwf	vfprintf@ap& (0+255),b
  1918  003822  EC7D  F01B         	call	_vfprintf	;wreg free
  1919                           
  1920                           ; BSR set to: 1
  1921  003826  0100               	movlb	0	; () banked
  1922  003828  5172               	movf	(sprintf@f+2)& (0+255),w,b
  1923  00382A  2564               	addwf	sprintf@s& (0+255),w,b
  1924  00382C  6ED9               	movwf	fsr2l,c
  1925  00382E  5173               	movf	(sprintf@f+3)& (0+255),w,b
  1926  003830  2165               	addwfc	(sprintf@s+1)& (0+255),w,b
  1927  003832  6EDA               	movwf	fsr2h,c
  1928  003834  0E00               	movlw	0
  1929  003836  6EDF               	movwf	indf2,c
  1930                           
  1931                           ; BSR set to: 0
  1932  003838  0012               	return		;funcret
  1933  00383A                     __end_of_sprintf:
  1934                           	opt callstack 0
  1935                           
  1936 ;; *************** function _eaDogM_WriteStringAtPos *****************
  1937 ;; Defined at:
  1938 ;;		line 122 in file "eadog.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  r               1    wreg     const unsigned char 
  1941 ;;  c               1   13[COMRAM] const unsigned char 
  1942 ;;  strPtr          2   14[COMRAM] PTR unsigned char 
  1943 ;;		 -> main@buffer(24), work_sw@buffer(128), 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  r               1   16[COMRAM] const unsigned char 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1955 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1956 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1958 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1959 ;;Total ram usage:        4 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; Hardware stack levels required when called:    6
  1962 ;; This function calls:
  1963 ;;		_eaDogM_WriteString
  1964 ;;		_send_lcd_cmd
  1965 ;; This function is called by:
  1966 ;;		_work_sw
  1967 ;;		_main
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971                           	psect	text3
  1972  003D8C                     __ptext3:
  1973                           	opt callstack 0
  1974  003D8C                     _eaDogM_WriteStringAtPos:
  1975                           	opt callstack 23
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;incstack = 0
  1979                           ;eaDogM_WriteStringAtPos@r stored from wreg
  1980  003D8C  6E11               	movwf	eaDogM_WriteStringAtPos@r^0,c
  1981                           
  1982                           ;eadog.c: 122: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 123: {;eadog.c: 124:  send_lcd_cmd((0b10000000 + (r * 16) + c));
  1983  003D8E  5011               	movf	eaDogM_WriteStringAtPos@r^0,w,c
  1984  003D90  0D10               	mullw	16
  1985  003D92  50F3               	movf	243,w,c
  1986  003D94  240E               	addwf	eaDogM_WriteStringAtPos@c^0,w,c
  1987  003D96  0F80               	addlw	128
  1988  003D98  ECFD  F01C         	call	_send_lcd_cmd
  1989                           
  1990                           ; BSR set to: 1
  1991                           ;eadog.c: 125:  eaDogM_WriteString(strPtr);
  1992  003D9C  0060  F03C  F00A   	movff	eaDogM_WriteStringAtPos@strPtr,eaDogM_WriteString@strPtr
  1993  003DA2  0060  F040  F00B   	movff	eaDogM_WriteStringAtPos@strPtr+1,eaDogM_WriteString@strPtr+1
  1994  003DA8  EC1C  F01B         	call	_eaDogM_WriteString	;wreg free
  1995  003DAC  0012               	return		;funcret
  1996  003DAE                     __end_of_eaDogM_WriteStringAtPos:
  1997                           	opt callstack 0
  1998                           
  1999 ;; *************** function _eaDogM_WriteString *****************
  2000 ;; Defined at:
  2001 ;;		line 106 in file "eadog.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  strPtr          2    9[COMRAM] PTR unsigned char 
  2004 ;;		 -> main@buffer(24), work_sw@buffer(128), 
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;  bytesWritten    1   12[COMRAM] unsigned char 
  2007 ;;  i               1   11[COMRAM] unsigned char 
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  1    wreg      void 
  2010 ;; Registers used:
  2011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2012 ;; Tracked objects:
  2013 ;;		On entry : 3F/1
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2017 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2018 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2020 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2021 ;;Total ram usage:        4 bytes
  2022 ;; Hardware stack levels used:    1
  2023 ;; Hardware stack levels required when called:    5
  2024 ;; This function calls:
  2025 ;;		_SPI1_Exchange8bit
  2026 ;;		_strlen
  2027 ;;		_wdtdelay
  2028 ;; This function is called by:
  2029 ;;		_eaDogM_WriteStringAtPos
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           	psect	text4
  2034  003638                     __ptext4:
  2035                           	opt callstack 0
  2036  003638                     _eaDogM_WriteString:
  2037                           	opt callstack 23
  2038                           
  2039                           ; BSR set to: 1
  2040                           ;eadog.c: 106: void eaDogM_WriteString(char *strPtr);eadog.c: 107: {;eadog.c: 108:  uint
      +                          8_t i = strlen(strPtr);
  2041                           
  2042                           ;incstack = 0
  2043  003638  0060  F028  F006   	movff	eaDogM_WriteString@strPtr,strlen@s
  2044  00363E  0060  F02C  F007   	movff	eaDogM_WriteString@strPtr+1,strlen@s+1
  2045  003644  ECAB  F01B         	call	_strlen	;wreg free
  2046  003648  5006               	movf	?_strlen^0,w,c
  2047  00364A  6E0C               	movwf	eaDogM_WriteString@i^0,c
  2048                           
  2049                           ;eadog.c: 109:  uint8_t bytesWritten = 0;
  2050  00364C  0E00               	movlw	0
  2051  00364E  6E0D               	movwf	eaDogM_WriteString@bytesWritten^0,c
  2052  003650  82BC               	bsf	188,1,c	;volatile
  2053  003652  94BC               	bcf	188,2,c	;volatile
  2054                           
  2055                           ;eadog.c: 113:  if (i > 64) strPtr[64] = 0;
  2056  003654  0E40               	movlw	64
  2057  003656  640C               	cpfsgt	eaDogM_WriteString@i^0,c
  2058  003658  D01D               	goto	l4940
  2059  00365A  EE20 F040          	lfsr	2,64
  2060  00365E  500A               	movf	eaDogM_WriteString@strPtr^0,w,c
  2061  003660  26D9               	addwf	fsr2l,f,c
  2062  003662  500B               	movf	(eaDogM_WriteString@strPtr+1)^0,w,c
  2063  003664  22DA               	addwfc	fsr2h,f,c
  2064  003666  0E00               	movlw	0
  2065  003668  6EDF               	movwf	indf2,c
  2066  00366A  D014               	goto	l4940
  2067  00366C                     l4934:
  2068                           
  2069                           ;eadog.c: 116:   wdtdelay(9);
  2070  00366C  0E09               	movlw	9
  2071  00366E  6E06               	movwf	wdtdelay@delay^0,c
  2072  003670  0E00               	movlw	0
  2073  003672  6E07               	movwf	(wdtdelay@delay+1)^0,c
  2074  003674  0E00               	movlw	0
  2075  003676  6E08               	movwf	(wdtdelay@delay+2)^0,c
  2076  003678  0E00               	movlw	0
  2077  00367A  6E09               	movwf	(wdtdelay@delay+3)^0,c
  2078  00367C  ECE0  F01C         	call	_wdtdelay	;wreg free
  2079                           
  2080                           ; BSR set to: 1
  2081                           ;eadog.c: 117:   SPI1_Exchange8bit(strPtr[bytesWritten]);
  2082  003680  500D               	movf	eaDogM_WriteString@bytesWritten^0,w,c
  2083  003682  240A               	addwf	eaDogM_WriteString@strPtr^0,w,c
  2084  003684  6ED9               	movwf	fsr2l,c
  2085  003686  0E00               	movlw	0
  2086  003688  200B               	addwfc	(eaDogM_WriteString@strPtr+1)^0,w,c
  2087  00368A  6EDA               	movwf	fsr2h,c
  2088  00368C  50DF               	movf	indf2,w,c
  2089  00368E  EC23  F01F         	call	_SPI1_Exchange8bit
  2090                           
  2091                           ; BSR set to: 61
  2092                           ;eadog.c: 118:   bytesWritten++;
  2093  003692  2A0D               	incf	eaDogM_WriteString@bytesWritten^0,f,c
  2094  003694                     l4940:
  2095                           
  2096                           ;eadog.c: 115:  while (bytesWritten < i) {
  2097  003694  500C               	movf	eaDogM_WriteString@i^0,w,c
  2098  003696  5C0D               	subwf	eaDogM_WriteString@bytesWritten^0,w,c
  2099  003698  B0D8               	btfsc	status,0,c
  2100  00369A  0012               	return	
  2101  00369C  D7E7               	goto	l4934
  2102  00369E                     __end_of_eaDogM_WriteString:
  2103                           	opt callstack 0
  2104                           
  2105 ;; *************** function _once *****************
  2106 ;; Defined at:
  2107 ;;		line 191 in file "d232.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;  once_flag       2    5[COMRAM] PTR _Bool 
  2110 ;;		 -> IO(36), 
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;		None
  2113 ;; Return value:  Size  Location     Type
  2114 ;;                  1    wreg      _Bool 
  2115 ;; Registers used:
  2116 ;;		wreg, fsr2l, fsr2h, status,2
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/1
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2122 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2125 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2126 ;;Total ram usage:        2 bytes
  2127 ;; Hardware stack levels used:    1
  2128 ;; Hardware stack levels required when called:    4
  2129 ;; This function calls:
  2130 ;;		Nothing
  2131 ;; This function is called by:
  2132 ;;		_main
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           	psect	text5
  2137  003BF6                     __ptext5:
  2138                           	opt callstack 0
  2139  003BF6                     _once:
  2140                           	opt callstack 26
  2141                           
  2142                           ;d232.c: 191: _Bool once(_Bool *once_flag);d232.c: 192: {;d232.c: 193:  if (*once_flag) 
      +                          {
  2143                           
  2144                           ;incstack = 0
  2145  003BF6  0060  F01B  FFD9   	movff	once@once_flag,fsr2l
  2146  003BFC  0060  F01F  FFDA   	movff	once@once_flag+1,fsr2h
  2147  003C02  50DF               	movf	indf2,w,c
  2148  003C04  B4D8               	btfsc	status,2,c
  2149  003C06  D00A               	goto	l5476
  2150                           
  2151                           ;d232.c: 194:   *once_flag = 0;
  2152  003C08  0060  F01B  FFD9   	movff	once@once_flag,fsr2l
  2153  003C0E  0060  F01F  FFDA   	movff	once@once_flag+1,fsr2h
  2154  003C14  0E00               	movlw	0
  2155  003C16  6EDF               	movwf	indf2,c
  2156                           
  2157                           ;d232.c: 195:   return 1;
  2158  003C18  0E01               	movlw	1
  2159  003C1A  0012               	return	
  2160  003C1C                     l5476:
  2161                           
  2162                           ;d232.c: 198:   return 0;
  2163  003C1C  0E00               	movlw	0
  2164  003C1E  0012               	return		;funcret
  2165  003C20                     __end_of_once:
  2166                           	opt callstack 0
  2167                           
  2168 ;; *************** function _led_lightshow *****************
  2169 ;; Defined at:
  2170 ;;		line 143 in file "d232.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;  seq             1    wreg     unsigned char 
  2173 ;;  speed           2   13[COMRAM] unsigned short 
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;  seq             1   17[COMRAM] unsigned char 
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      void 
  2178 ;; Registers used:
  2179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2180 ;; Tracked objects:
  2181 ;;		On entry : 3F/1
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2185 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2186 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2187 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2188 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2189 ;;Total ram usage:        5 bytes
  2190 ;; Hardware stack levels used:    1
  2191 ;; Hardware stack levels required when called:    5
  2192 ;; This function calls:
  2193 ;;		_StartTimer
  2194 ;;		___awdiv
  2195 ;; This function is called by:
  2196 ;;		_main
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           	psect	text6
  2201  002DB6                     __ptext6:
  2202                           	opt callstack 0
  2203  002DB6                     _led_lightshow:
  2204                           	opt callstack 25
  2205                           
  2206                           ;incstack = 0
  2207                           ;led_lightshow@seq stored from wreg
  2208  002DB6  6E12               	movwf	led_lightshow@seq^0,c
  2209                           
  2210                           ;d232.c: 143: void led_lightshow(uint8_t seq, uint16_t speed);d232.c: 144: {;d232.c: 145
      +                          :  static uint16_t j = 0;;d232.c: 146:  static uint8_t cylon = 0xff;;d232.c: 147:  stati
      +                          c int16_t alive_led = 0;;d232.c: 148:  static _Bool LED_UP = 1;;d232.c: 150:  if (seq ==
      +                           1) {
  2211  002DB8  0412               	decf	led_lightshow@seq^0,w,c
  2212  002DBA  A4D8               	btfss	status,2,c
  2213  002DBC  D003               	goto	l5428
  2214                           
  2215                           ;d232.c: 151:   IO.outbytes[2] = IO.inbytes[0];
  2216  002DBE  C19F  F1A6         	movff	_IO,_IO+7
  2217                           
  2218                           ;d232.c: 152:   return;
  2219  002DC2  0012               	return	
  2220  002DC4                     l5428:
  2221                           
  2222                           ;d232.c: 155:  if (seq == 2) {
  2223  002DC4  0E02               	movlw	2
  2224  002DC6  1812               	xorwf	led_lightshow@seq^0,w,c
  2225  002DC8  A4D8               	btfss	status,2,c
  2226  002DCA  D010               	goto	l5440
  2227                           
  2228                           ;d232.c: 156:   if (IO.sequence_done) {
  2229  002DCC  0101               	movlb	1	; () banked
  2230  002DCE  51BD               	movf	(_IO+30)& (0+255),w,b
  2231  002DD0  B4D8               	btfsc	status,2,c
  2232  002DD2  D009               	goto	l5436
  2233                           
  2234                           ; BSR set to: 1
  2235                           ;d232.c: 157:    IO.sequence_done = 0;
  2236  002DD4  0E00               	movlw	0
  2237  002DD6  6FBD               	movwf	(_IO+30)& (0+255),b
  2238                           
  2239                           ; BSR set to: 1
  2240                           ;d232.c: 158:    StartTimer(TMR_SEQ, 30000);
  2241  002DD8  0E75               	movlw	117
  2242  002DDA  6E07               	movwf	(StartTimer@count+1)^0,c
  2243  002DDC  0E30               	movlw	48
  2244  002DDE  6E06               	movwf	StartTimer@count^0,c
  2245  002DE0  0E06               	movlw	6
  2246  002DE2  EC6B  F01D         	call	_StartTimer
  2247  002DE6                     l5436:
  2248                           
  2249                           ;d232.c: 160:   IO.outbytes[2]++;
  2250  002DE6  0101               	movlb	1	; () banked
  2251  002DE8  2BA6               	incf	(_IO+7)& (0+255),f,b
  2252  002DEA  0012               	return	
  2253  002DEC                     l5440:
  2254                           
  2255                           ;d232.c: 164:  if (j++ >= speed) {
  2256  002DEC  0101               	movlb	1	; () banked
  2257  002DEE  516A               	movf	led_lightshow@j& (0+255),w,b
  2258  002DF0  6E10               	movwf	??_led_lightshow^0,c
  2259  002DF2  516B               	movf	(led_lightshow@j+1)& (0+255),w,b
  2260  002DF4  6E11               	movwf	(??_led_lightshow+1)^0,c
  2261  002DF6  4B6A               	infsnz	led_lightshow@j& (0+255),f,b
  2262  002DF8  2B6B               	incf	(led_lightshow@j+1)& (0+255),f,b
  2263  002DFA  500E               	movf	led_lightshow@speed^0,w,c
  2264  002DFC  5C10               	subwf	??_led_lightshow^0,w,c
  2265  002DFE  500F               	movf	(led_lightshow@speed+1)^0,w,c
  2266  002E00  5811               	subwfb	(??_led_lightshow+1)^0,w,c
  2267  002E02  A0D8               	btfss	status,0,c
  2268  002E04  0012               	return	
  2269                           
  2270                           ; BSR set to: 1
  2271                           ;d232.c: 168:    IO.outbytes[2] = cylon;
  2272  002E06  C09F  F1A6         	movff	led_lightshow@cylon,_IO+7
  2273                           
  2274                           ; BSR set to: 1
  2275                           ;d232.c: 171:   if (LED_UP && (alive_led != 0)) {
  2276  002E0A  0100               	movlb	0	; () banked
  2277  002E0C  519E               	movf	led_lightshow@LED_UP& (0+255),w,b
  2278  002E0E  B4D8               	btfsc	status,2,c
  2279  002E10  D00C               	goto	l5452
  2280                           
  2281                           ; BSR set to: 0
  2282  002E12  5194               	movf	led_lightshow@alive_led& (0+255),w,b
  2283  002E14  1195               	iorwf	(led_lightshow@alive_led+1)& (0+255),w,b
  2284  002E16  B4D8               	btfsc	status,2,c
  2285  002E18  D008               	goto	l5452
  2286                           
  2287                           ; BSR set to: 0
  2288                           ;d232.c: 172:    alive_led = alive_led * 2;
  2289  002E1A  90D8               	bcf	status,0,c
  2290  002E1C  3594               	rlcf	led_lightshow@alive_led& (0+255),w,b
  2291  002E1E  6F94               	movwf	led_lightshow@alive_led& (0+255),b
  2292  002E20  3595               	rlcf	(led_lightshow@alive_led+1)& (0+255),w,b
  2293  002E22  6F95               	movwf	(led_lightshow@alive_led+1)& (0+255),b
  2294                           
  2295                           ;d232.c: 173:    cylon = cylon << 1;
  2296  002E24  519F               	movf	led_lightshow@cylon& (0+255),w,b
  2297  002E26  259F               	addwf	led_lightshow@cylon& (0+255),w,b
  2298  002E28  D018               	goto	L1
  2299  002E2A                     l5452:
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;d232.c: 175:    if (alive_led != 0) alive_led = alive_led / 2;
  2303  002E2A  5194               	movf	led_lightshow@alive_led& (0+255),w,b
  2304  002E2C  1195               	iorwf	(led_lightshow@alive_led+1)& (0+255),w,b
  2305  002E2E  B4D8               	btfsc	status,2,c
  2306  002E30  D012               	goto	l5456
  2307                           
  2308                           ; BSR set to: 0
  2309  002E32  0060  F250  F006   	movff	led_lightshow@alive_led,___awdiv@dividend
  2310  002E38  0060  F254  F007   	movff	led_lightshow@alive_led+1,___awdiv@dividend+1
  2311  002E3E  0E00               	movlw	0
  2312  002E40  6E09               	movwf	(___awdiv@divisor+1)^0,c
  2313  002E42  0E02               	movlw	2
  2314  002E44  6E08               	movwf	___awdiv@divisor^0,c
  2315  002E46  EC6B  F01A         	call	___awdiv	;wreg free
  2316  002E4A  0060  F018  F094   	movff	?___awdiv,led_lightshow@alive_led
  2317  002E50  0060  F01C  F095   	movff	?___awdiv+1,led_lightshow@alive_led+1
  2318  002E56                     l5456:
  2319                           
  2320                           ; BSR set to: 0
  2321                           ;d232.c: 176:    cylon = cylon >> 1;
  2322  002E56  90D8               	bcf	status,0,c
  2323  002E58  319F               	rrcf	led_lightshow@cylon& (0+255),w,b
  2324  002E5A                     L1:
  2325  002E5A  6F9F               	movwf	led_lightshow@cylon& (0+255),b
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;d232.c: 178:   if (alive_led < 2) {
  2329  002E5C  BF95               	btfsc	(led_lightshow@alive_led+1)& (0+255),7,b
  2330  002E5E  D006               	goto	u4310
  2331  002E60  5195               	movf	(led_lightshow@alive_led+1)& (0+255),w,b
  2332  002E62  E10A               	bnz	l5462
  2333  002E64  0E02               	movlw	2
  2334  002E66  5D94               	subwf	led_lightshow@alive_led& (0+255),w,b
  2335  002E68  B0D8               	btfsc	status,0,c
  2336  002E6A  D006               	goto	l5462
  2337  002E6C                     u4310:
  2338                           
  2339                           ; BSR set to: 0
  2340                           ;d232.c: 179:    alive_led = 2;
  2341  002E6C  0E00               	movlw	0
  2342  002E6E  6F95               	movwf	(led_lightshow@alive_led+1)& (0+255),b
  2343  002E70  0E02               	movlw	2
  2344  002E72  6F94               	movwf	led_lightshow@alive_led& (0+255),b
  2345                           
  2346                           ;d232.c: 180:    LED_UP = 1;
  2347  002E74  0E01               	movlw	1
  2348  002E76  D00D               	goto	L2
  2349  002E78                     l5462:
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;d232.c: 182:    if (alive_led > 128) {
  2353  002E78  BF95               	btfsc	(led_lightshow@alive_led+1)& (0+255),7,b
  2354  002E7A  D00C               	goto	l1169
  2355  002E7C  5195               	movf	(led_lightshow@alive_led+1)& (0+255),w,b
  2356  002E7E  E104               	bnz	u4320
  2357  002E80  0E81               	movlw	129
  2358  002E82  5D94               	subwf	led_lightshow@alive_led& (0+255),w,b
  2359  002E84  A0D8               	btfss	status,0,c
  2360  002E86  D006               	goto	l1169
  2361  002E88                     u4320:
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;d232.c: 183:     alive_led = 128;
  2365  002E88  0E00               	movlw	0
  2366  002E8A  6F95               	movwf	(led_lightshow@alive_led+1)& (0+255),b
  2367  002E8C  0E80               	movlw	128
  2368  002E8E  6F94               	movwf	led_lightshow@alive_led& (0+255),b
  2369                           
  2370                           ;d232.c: 184:     LED_UP = 0;
  2371  002E90  0E00               	movlw	0
  2372  002E92                     L2:
  2373  002E92  6F9E               	movwf	led_lightshow@LED_UP& (0+255),b
  2374  002E94                     l1169:
  2375                           
  2376                           ; BSR set to: 0
  2377                           ;d232.c: 187:   j = 0;
  2378  002E94  0E00               	movlw	0
  2379  002E96  0101               	movlb	1	; () banked
  2380  002E98  6F6B               	movwf	(led_lightshow@j+1)& (0+255),b
  2381  002E9A  0E00               	movlw	0
  2382  002E9C  6F6A               	movwf	led_lightshow@j& (0+255),b
  2383  002E9E  0012               	return		;funcret
  2384  002EA0                     __end_of_led_lightshow:
  2385                           	opt callstack 0
  2386                           
  2387 ;; *************** function ___awdiv *****************
  2388 ;; Defined at:
  2389 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;  dividend        2    5[COMRAM] int 
  2392 ;;  divisor         2    7[COMRAM] int 
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;  quotient        2   11[COMRAM] int 
  2395 ;;  sign            1   10[COMRAM] unsigned char 
  2396 ;;  counter         1    9[COMRAM] unsigned char 
  2397 ;; Return value:  Size  Location     Type
  2398 ;;                  2    5[COMRAM] int 
  2399 ;; Registers used:
  2400 ;;		wreg, status,2, status,0
  2401 ;; Tracked objects:
  2402 ;;		On entry : 3F/0
  2403 ;;		On exit  : 3F/0
  2404 ;;		Unchanged: 3F/0
  2405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2406 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2407 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2409 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2410 ;;Total ram usage:        8 bytes
  2411 ;; Hardware stack levels used:    1
  2412 ;; Hardware stack levels required when called:    4
  2413 ;; This function calls:
  2414 ;;		Nothing
  2415 ;; This function is called by:
  2416 ;;		_led_lightshow
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           	psect	text7
  2421  0034D6                     __ptext7:
  2422                           	opt callstack 0
  2423  0034D6                     ___awdiv:
  2424                           	opt callstack 25
  2425                           
  2426                           ; BSR set to: 0
  2427                           
  2428                           ;incstack = 0
  2429  0034D6  0E00               	movlw	0
  2430  0034D8  6E0B               	movwf	___awdiv@sign^0,c
  2431                           
  2432                           ; BSR set to: 0
  2433  0034DA  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  2434  0034DC  D006               	goto	l5198
  2435                           
  2436                           ; BSR set to: 0
  2437  0034DE  6C08               	negf	___awdiv@divisor^0,c
  2438  0034E0  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  2439  0034E2  B0D8               	btfsc	status,0,c
  2440  0034E4  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  2441                           
  2442                           ; BSR set to: 0
  2443  0034E6  0E01               	movlw	1
  2444  0034E8  6E0B               	movwf	___awdiv@sign^0,c
  2445  0034EA                     l5198:
  2446                           
  2447                           ; BSR set to: 0
  2448  0034EA  AE07               	btfss	(___awdiv@dividend+1)^0,7,c
  2449  0034EC  D006               	goto	l5204
  2450                           
  2451                           ; BSR set to: 0
  2452  0034EE  6C06               	negf	___awdiv@dividend^0,c
  2453  0034F0  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  2454  0034F2  B0D8               	btfsc	status,0,c
  2455  0034F4  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  2456                           
  2457                           ; BSR set to: 0
  2458  0034F6  0E01               	movlw	1
  2459  0034F8  1A0B               	xorwf	___awdiv@sign^0,f,c
  2460  0034FA                     l5204:
  2461                           
  2462                           ; BSR set to: 0
  2463  0034FA  0E00               	movlw	0
  2464  0034FC  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  2465  0034FE  0E00               	movlw	0
  2466  003500  6E0C               	movwf	___awdiv@quotient^0,c
  2467                           
  2468                           ; BSR set to: 0
  2469  003502  5008               	movf	___awdiv@divisor^0,w,c
  2470  003504  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  2471  003506  B4D8               	btfsc	status,2,c
  2472  003508  D01C               	goto	l5226
  2473                           
  2474                           ; BSR set to: 0
  2475  00350A  0E01               	movlw	1
  2476  00350C  6E0A               	movwf	___awdiv@counter^0,c
  2477  00350E  D004               	goto	l5212
  2478  003510                     l5210:
  2479                           
  2480                           ; BSR set to: 0
  2481  003510  90D8               	bcf	status,0,c
  2482  003512  3608               	rlcf	___awdiv@divisor^0,f,c
  2483  003514  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  2484  003516  2A0A               	incf	___awdiv@counter^0,f,c
  2485  003518                     l5212:
  2486                           
  2487                           ; BSR set to: 0
  2488  003518  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  2489  00351A  D7FA               	goto	l5210
  2490  00351C                     u4020:
  2491                           
  2492                           ; BSR set to: 0
  2493  00351C  90D8               	bcf	status,0,c
  2494  00351E  360C               	rlcf	___awdiv@quotient^0,f,c
  2495  003520  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  2496                           
  2497                           ; BSR set to: 0
  2498  003522  5008               	movf	___awdiv@divisor^0,w,c
  2499  003524  5C06               	subwf	___awdiv@dividend^0,w,c
  2500  003526  5009               	movf	(___awdiv@divisor+1)^0,w,c
  2501  003528  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  2502  00352A  A0D8               	btfss	status,0,c
  2503  00352C  D005               	goto	l5222
  2504                           
  2505                           ; BSR set to: 0
  2506  00352E  5008               	movf	___awdiv@divisor^0,w,c
  2507  003530  5E06               	subwf	___awdiv@dividend^0,f,c
  2508  003532  5009               	movf	(___awdiv@divisor+1)^0,w,c
  2509  003534  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  2510                           
  2511                           ; BSR set to: 0
  2512  003536  800C               	bsf	___awdiv@quotient^0,0,c
  2513  003538                     l5222:
  2514                           
  2515                           ; BSR set to: 0
  2516  003538  90D8               	bcf	status,0,c
  2517  00353A  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  2518  00353C  3208               	rrcf	___awdiv@divisor^0,f,c
  2519                           
  2520                           ; BSR set to: 0
  2521  00353E  2E0A               	decfsz	___awdiv@counter^0,f,c
  2522  003540  D7ED               	goto	u4020
  2523  003542                     l5226:
  2524                           
  2525                           ; BSR set to: 0
  2526  003542  500B               	movf	___awdiv@sign^0,w,c
  2527  003544  B4D8               	btfsc	status,2,c
  2528  003546  D004               	goto	l5230
  2529                           
  2530                           ; BSR set to: 0
  2531  003548  6C0C               	negf	___awdiv@quotient^0,c
  2532  00354A  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  2533  00354C  B0D8               	btfsc	status,0,c
  2534  00354E  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  2535  003550                     l5230:
  2536                           
  2537                           ; BSR set to: 0
  2538  003550  0060  F030  F006   	movff	___awdiv@quotient,?___awdiv
  2539  003556  0060  F034  F007   	movff	___awdiv@quotient+1,?___awdiv+1
  2540                           
  2541                           ; BSR set to: 0
  2542  00355C  0012               	return		;funcret
  2543  00355E                     __end_of___awdiv:
  2544                           	opt callstack 0
  2545                           
  2546 ;; *************** function _init_display *****************
  2547 ;; Defined at:
  2548 ;;		line 27 in file "eadog.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;		None
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;		None
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  1    wreg      void 
  2555 ;; Registers used:
  2556 ;;		wreg, status,2, status,0, cstack
  2557 ;; Tracked objects:
  2558 ;;		On entry : 3F/1
  2559 ;;		On exit  : 3F/1
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2566 ;;Total ram usage:        0 bytes
  2567 ;; Hardware stack levels used:    1
  2568 ;; Hardware stack levels required when called:    6
  2569 ;; This function calls:
  2570 ;;		_send_lcd_cmd
  2571 ;;		_send_lcd_cmd_long
  2572 ;;		_wdtdelay
  2573 ;; This function is called by:
  2574 ;;		_main
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           	psect	text8
  2579  0035D0                     __ptext8:
  2580                           	opt callstack 0
  2581  0035D0                     _init_display:
  2582                           	opt callstack 24
  2583                           
  2584                           ; BSR set to: 1
  2585                           
  2586                           ; BSR set to: 0
  2587                           ;incstack = 0
  2588                           ;eadog.c: 29:  do { LATCbits.LATC2 = 1; } while(0);
  2589  0035D0  84BC               	bsf	188,2,c	;volatile
  2590                           
  2591                           ; BSR set to: 1
  2592                           ;eadog.c: 30:  wdtdelay(350000);
  2593  0035D2  0E30               	movlw	48
  2594  0035D4  6E06               	movwf	wdtdelay@delay^0,c
  2595  0035D6  0E57               	movlw	87
  2596  0035D8  6E07               	movwf	(wdtdelay@delay+1)^0,c
  2597  0035DA  0E05               	movlw	5
  2598  0035DC  6E08               	movwf	(wdtdelay@delay+2)^0,c
  2599  0035DE  0E00               	movlw	0
  2600  0035E0  6E09               	movwf	(wdtdelay@delay+3)^0,c
  2601  0035E2  ECE0  F01C         	call	_wdtdelay	;wreg free
  2602                           
  2603                           ;eadog.c: 31:  send_lcd_cmd(0x39);
  2604  0035E6  0E39               	movlw	57
  2605  0035E8  ECFD  F01C         	call	_send_lcd_cmd
  2606                           
  2607                           ;eadog.c: 32:  send_lcd_cmd(0x1d);
  2608  0035EC  0E1D               	movlw	29
  2609  0035EE  ECFD  F01C         	call	_send_lcd_cmd
  2610                           
  2611                           ;eadog.c: 33:  send_lcd_cmd(0x50);
  2612  0035F2  0E50               	movlw	80
  2613  0035F4  ECFD  F01C         	call	_send_lcd_cmd
  2614                           
  2615                           ;eadog.c: 34:  send_lcd_cmd(0x6c);
  2616  0035F8  0E6C               	movlw	108
  2617  0035FA  ECFD  F01C         	call	_send_lcd_cmd
  2618                           
  2619                           ;eadog.c: 35:  send_lcd_cmd(0x76);
  2620  0035FE  0E76               	movlw	118
  2621  003600  ECFD  F01C         	call	_send_lcd_cmd
  2622                           
  2623                           ;eadog.c: 36:  send_lcd_cmd_long(0x38);
  2624  003604  0E38               	movlw	56
  2625  003606  EC24  F01E         	call	_send_lcd_cmd_long
  2626                           
  2627                           ;eadog.c: 37:  send_lcd_cmd(0x0f);
  2628  00360A  0E0F               	movlw	15
  2629  00360C  ECFD  F01C         	call	_send_lcd_cmd
  2630                           
  2631                           ;eadog.c: 38:  send_lcd_cmd_long(0x01);
  2632  003610  0E01               	movlw	1
  2633  003612  EC24  F01E         	call	_send_lcd_cmd_long
  2634                           
  2635                           ;eadog.c: 39:  send_lcd_cmd(0x02);
  2636  003616  0E02               	movlw	2
  2637  003618  ECFD  F01C         	call	_send_lcd_cmd
  2638                           
  2639                           ;eadog.c: 40:  send_lcd_cmd(0x06);
  2640  00361C  0E06               	movlw	6
  2641  00361E  ECFD  F01C         	call	_send_lcd_cmd
  2642                           
  2643                           ;eadog.c: 41:  wdtdelay(800);
  2644  003622  0E20               	movlw	32
  2645  003624  6E06               	movwf	wdtdelay@delay^0,c
  2646  003626  0E03               	movlw	3
  2647  003628  6E07               	movwf	(wdtdelay@delay+1)^0,c
  2648  00362A  0E00               	movlw	0
  2649  00362C  6E08               	movwf	(wdtdelay@delay+2)^0,c
  2650  00362E  0E00               	movlw	0
  2651  003630  6E09               	movwf	(wdtdelay@delay+3)^0,c
  2652  003632  ECE0  F01C         	call	_wdtdelay	;wreg free
  2653                           
  2654                           ; BSR set to: 1
  2655  003636  0012               	return		;funcret
  2656  003638                     __end_of_init_display:
  2657                           	opt callstack 0
  2658                           
  2659 ;; *************** function _send_lcd_cmd_long *****************
  2660 ;; Defined at:
  2661 ;;		line 71 in file "eadog.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;  cmd             1    wreg     const unsigned char 
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;  cmd             1    9[COMRAM] const unsigned char 
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1    wreg      void 
  2668 ;; Registers used:
  2669 ;;		wreg, status,2, status,0, cstack
  2670 ;; Tracked objects:
  2671 ;;		On entry : 3F/1
  2672 ;;		On exit  : 3F/1
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2676 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2678 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2679 ;;Total ram usage:        1 bytes
  2680 ;; Hardware stack levels used:    1
  2681 ;; Hardware stack levels required when called:    5
  2682 ;; This function calls:
  2683 ;;		_SPI1_Exchange8bit
  2684 ;;		_wdtdelay
  2685 ;; This function is called by:
  2686 ;;		_init_display
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690                           	psect	text9
  2691  003C48                     __ptext9:
  2692                           	opt callstack 0
  2693  003C48                     _send_lcd_cmd_long:
  2694                           	opt callstack 24
  2695                           
  2696                           ; BSR set to: 1
  2697                           ;incstack = 0
  2698                           ;send_lcd_cmd_long@cmd stored from wreg
  2699  003C48  6E0A               	movwf	send_lcd_cmd_long@cmd^0,c
  2700                           
  2701                           ;eadog.c: 71: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 72: {;eadog.c: 7
      +                          3:  do { LATCbits.LATC1 = 0; } while(0);
  2702  003C4A  92BC               	bcf	188,1,c	;volatile
  2703                           
  2704                           ;eadog.c: 74:  do { LATCbits.LATC2 = 0; } while(0);
  2705  003C4C  94BC               	bcf	188,2,c	;volatile
  2706                           
  2707                           ;eadog.c: 75:  SPI1_Exchange8bit(cmd);
  2708  003C4E  500A               	movf	send_lcd_cmd_long@cmd^0,w,c
  2709  003C50  EC23  F01F         	call	_SPI1_Exchange8bit
  2710                           
  2711                           ; BSR set to: 61
  2712                           ;eadog.c: 76:  wdtdelay(800);
  2713  003C54  0E20               	movlw	32
  2714  003C56  6E06               	movwf	wdtdelay@delay^0,c
  2715  003C58  0E03               	movlw	3
  2716  003C5A  6E07               	movwf	(wdtdelay@delay+1)^0,c
  2717  003C5C  0E00               	movlw	0
  2718  003C5E  6E08               	movwf	(wdtdelay@delay+2)^0,c
  2719  003C60  0E00               	movlw	0
  2720  003C62  6E09               	movwf	(wdtdelay@delay+3)^0,c
  2721  003C64  ECE0  F01C         	call	_wdtdelay	;wreg free
  2722                           
  2723                           ; BSR set to: 1
  2724  003C68  82BC               	bsf	188,1,c	;volatile
  2725                           
  2726                           ; BSR set to: 1
  2727  003C6A  0012               	return		;funcret
  2728  003C6C                     __end_of_send_lcd_cmd_long:
  2729                           	opt callstack 0
  2730                           
  2731 ;; *************** function _eaDogM_WriteCommand *****************
  2732 ;; Defined at:
  2733 ;;		line 85 in file "eadog.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;  cmd             1    wreg     const unsigned char 
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;  cmd             1   10[COMRAM] const unsigned char 
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  1    wreg      void 
  2740 ;; Registers used:
  2741 ;;		wreg, status,2, status,0, cstack
  2742 ;; Tracked objects:
  2743 ;;		On entry : 3F/1
  2744 ;;		On exit  : 3F/1
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2748 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2750 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2751 ;;Total ram usage:        1 bytes
  2752 ;; Hardware stack levels used:    1
  2753 ;; Hardware stack levels required when called:    6
  2754 ;; This function calls:
  2755 ;;		_send_lcd_cmd
  2756 ;; This function is called by:
  2757 ;;		_main
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761                           	psect	text10
  2762  003FCC                     __ptext10:
  2763                           	opt callstack 0
  2764  003FCC                     _eaDogM_WriteCommand:
  2765                           	opt callstack 24
  2766                           
  2767                           ; BSR set to: 1
  2768                           ;incstack = 0
  2769                           ;eaDogM_WriteCommand@cmd stored from wreg
  2770  003FCC  6E0B               	movwf	eaDogM_WriteCommand@cmd^0,c
  2771                           
  2772                           ;eadog.c: 85: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  s
      +                          end_lcd_cmd(cmd);
  2773  003FCE  500B               	movf	eaDogM_WriteCommand@cmd^0,w,c
  2774  003FD0  ECFD  F01C         	call	_send_lcd_cmd
  2775                           
  2776                           ; BSR set to: 1
  2777  003FD4  0012               	return		;funcret
  2778  003FD6                     __end_of_eaDogM_WriteCommand:
  2779                           	opt callstack 0
  2780                           
  2781 ;; *************** function _send_lcd_cmd *****************
  2782 ;; Defined at:
  2783 ;;		line 58 in file "eadog.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;  cmd             1    wreg     const unsigned char 
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;  cmd             1    9[COMRAM] const unsigned char 
  2788 ;; Return value:  Size  Location     Type
  2789 ;;                  1    wreg      void 
  2790 ;; Registers used:
  2791 ;;		wreg, status,2, status,0, cstack
  2792 ;; Tracked objects:
  2793 ;;		On entry : 0/0
  2794 ;;		On exit  : 3F/1
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2798 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2800 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2801 ;;Total ram usage:        1 bytes
  2802 ;; Hardware stack levels used:    1
  2803 ;; Hardware stack levels required when called:    5
  2804 ;; This function calls:
  2805 ;;		_SPI1_Exchange8bit
  2806 ;;		_wdtdelay
  2807 ;; This function is called by:
  2808 ;;		_init_display
  2809 ;;		_eaDogM_WriteCommand
  2810 ;;		_eaDogM_WriteStringAtPos
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           	psect	text11
  2815  0039FA                     __ptext11:
  2816                           	opt callstack 0
  2817  0039FA                     _send_lcd_cmd:
  2818                           	opt callstack 23
  2819                           
  2820                           ; BSR set to: 1
  2821                           ;incstack = 0
  2822                           ;send_lcd_cmd@cmd stored from wreg
  2823  0039FA  6E0A               	movwf	send_lcd_cmd@cmd^0,c
  2824                           
  2825                           ;eadog.c: 58: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 59: {;eadog.c: 60:  d
      +                          o { LATCbits.LATC1 = 0; } while(0);
  2826  0039FC  92BC               	bcf	188,1,c	;volatile
  2827                           
  2828                           ;eadog.c: 61:  do { LATCbits.LATC2 = 0; } while(0);
  2829  0039FE  94BC               	bcf	188,2,c	;volatile
  2830                           
  2831                           ;eadog.c: 62:  wdtdelay(10);
  2832  003A00  0E0A               	movlw	10
  2833  003A02  6E06               	movwf	wdtdelay@delay^0,c
  2834  003A04  0E00               	movlw	0
  2835  003A06  6E07               	movwf	(wdtdelay@delay+1)^0,c
  2836  003A08  0E00               	movlw	0
  2837  003A0A  6E08               	movwf	(wdtdelay@delay+2)^0,c
  2838  003A0C  0E00               	movlw	0
  2839  003A0E  6E09               	movwf	(wdtdelay@delay+3)^0,c
  2840  003A10  ECE0  F01C         	call	_wdtdelay	;wreg free
  2841                           
  2842                           ; BSR set to: 1
  2843                           ;eadog.c: 63:  SPI1_Exchange8bit(cmd);
  2844  003A14  500A               	movf	send_lcd_cmd@cmd^0,w,c
  2845  003A16  EC23  F01F         	call	_SPI1_Exchange8bit
  2846                           
  2847                           ; BSR set to: 61
  2848                           ;eadog.c: 64:  wdtdelay(10);
  2849  003A1A  0E0A               	movlw	10
  2850  003A1C  6E06               	movwf	wdtdelay@delay^0,c
  2851  003A1E  0E00               	movlw	0
  2852  003A20  6E07               	movwf	(wdtdelay@delay+1)^0,c
  2853  003A22  0E00               	movlw	0
  2854  003A24  6E08               	movwf	(wdtdelay@delay+2)^0,c
  2855  003A26  0E00               	movlw	0
  2856  003A28  6E09               	movwf	(wdtdelay@delay+3)^0,c
  2857  003A2A  ECE0  F01C         	call	_wdtdelay	;wreg free
  2858                           
  2859                           ; BSR set to: 1
  2860  003A2E  82BC               	bsf	188,1,c	;volatile
  2861                           
  2862                           ; BSR set to: 1
  2863  003A30  0012               	return		;funcret
  2864  003A32                     __end_of_send_lcd_cmd:
  2865                           	opt callstack 0
  2866                           
  2867 ;; *************** function _wdtdelay *****************
  2868 ;; Defined at:
  2869 ;;		line 14 in file "eadog.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;  delay           4    5[COMRAM] const unsigned long 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;		None
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      void 
  2876 ;; Registers used:
  2877 ;;		wreg, status,2, status,0
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/1
  2880 ;;		On exit  : 3F/1
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2883 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2886 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2887 ;;Total ram usage:        4 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:    4
  2890 ;; This function calls:
  2891 ;;		Nothing
  2892 ;; This function is called by:
  2893 ;;		_init_display
  2894 ;;		_send_lcd_cmd
  2895 ;;		_send_lcd_cmd_long
  2896 ;;		_eaDogM_WriteString
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           	psect	text12
  2901  0039C0                     __ptext12:
  2902                           	opt callstack 0
  2903  0039C0                     _wdtdelay:
  2904                           	opt callstack 23
  2905                           
  2906                           ;eadog.c: 14: void wdtdelay(const uint32_t delay);eadog.c: 15: {;eadog.c: 16:  static ui
      +                          nt32_t dcount;;eadog.c: 18:  for (dcount = 0; dcount <= delay; dcount++) {
  2907                           
  2908                           ; BSR set to: 1
  2909                           ;incstack = 0
  2910  0039C0  0E00               	movlw	0
  2911  0039C2  0101               	movlb	1	; () banked
  2912  0039C4  6F3E               	movwf	wdtdelay@dcount& (0+255),b
  2913  0039C6  0E00               	movlw	0
  2914  0039C8  6F3F               	movwf	(wdtdelay@dcount+1)& (0+255),b
  2915  0039CA  0E00               	movlw	0
  2916  0039CC  6F40               	movwf	(wdtdelay@dcount+2)& (0+255),b
  2917  0039CE  0E00               	movlw	0
  2918  0039D0  6F41               	movwf	(wdtdelay@dcount+3)& (0+255),b
  2919  0039D2                     l1213:
  2920                           
  2921                           ; BSR set to: 1
  2922                           ;eadog.c: 19:   __nop();
  2923  0039D2  F000               	nop	
  2924  0039D4  0004               	clrwdt		;# 
  2925                           
  2926                           ;eadog.c: 21:  };
  2927  0039D6  0E01               	movlw	1
  2928  0039D8  0101               	movlb	1	; () banked
  2929  0039DA  273E               	addwf	wdtdelay@dcount& (0+255),f,b
  2930  0039DC  0E00               	movlw	0
  2931  0039DE  233F               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  2932  0039E0  2340               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  2933  0039E2  2341               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  2934  0039E4  513E               	movf	wdtdelay@dcount& (0+255),w,b
  2935  0039E6  5C06               	subwf	wdtdelay@delay^0,w,c
  2936  0039E8  513F               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  2937  0039EA  5807               	subwfb	(wdtdelay@delay+1)^0,w,c
  2938  0039EC  5140               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  2939  0039EE  5808               	subwfb	(wdtdelay@delay+2)^0,w,c
  2940  0039F0  5141               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  2941  0039F2  5809               	subwfb	(wdtdelay@delay+3)^0,w,c
  2942  0039F4  A0D8               	btfss	status,0,c
  2943  0039F6  0012               	return	
  2944  0039F8  D7EC               	goto	l1213
  2945  0039FA                     __end_of_wdtdelay:
  2946                           	opt callstack 0
  2947                           
  2948 ;; *************** function _SPI1_Exchange8bit *****************
  2949 ;; Defined at:
  2950 ;;		line 79 in file "mcc_generated_files/spi1.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  data            1    wreg     unsigned char 
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;  data            1    5[COMRAM] unsigned char 
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      unsigned char 
  2957 ;; Registers used:
  2958 ;;		wreg, status,2
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/1
  2961 ;;		On exit  : 3F/3D
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2965 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2967 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2968 ;;Total ram usage:        1 bytes
  2969 ;; Hardware stack levels used:    1
  2970 ;; Hardware stack levels required when called:    4
  2971 ;; This function calls:
  2972 ;;		Nothing
  2973 ;; This function is called by:
  2974 ;;		_send_lcd_cmd
  2975 ;;		_send_lcd_cmd_long
  2976 ;;		_eaDogM_WriteString
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           	psect	text13
  2981  003E46                     __ptext13:
  2982                           	opt callstack 0
  2983  003E46                     _SPI1_Exchange8bit:
  2984                           	opt callstack 23
  2985                           
  2986                           ; BSR set to: 1
  2987                           ;incstack = 0
  2988                           ;SPI1_Exchange8bit@data stored from wreg
  2989  003E46  6E06               	movwf	SPI1_Exchange8bit@data^0,c
  2990                           
  2991                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  2992  003E48  0E01               	movlw	1
  2993  003E4A  013D               	movlb	61	; () banked
  2994  003E4C  6F12               	movwf	18,b	;volatile
  2995                           
  2996                           ; BSR set to: 61
  2997                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  2998  003E4E  0060  F01B  FD11   	movff	SPI1_Exchange8bit@data,15633	;volatile
  2999  003E54                     l989:
  3000                           
  3001                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  3002  003E54  0139               	movlb	57	; () banked
  3003  003E56  A9A2               	btfss	162,4,b	;volatile
  3004  003E58  D7FD               	goto	l989
  3005                           
  3006                           ; BSR set to: 57
  3007                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  3008  003E5A  013D               	movlb	61	; () banked
  3009  003E5C  5110               	movf	16,w,b	;volatile
  3010                           
  3011                           ; BSR set to: 61
  3012  003E5E  0012               	return		;funcret
  3013  003E60                     __end_of_SPI1_Exchange8bit:
  3014                           	opt callstack 0
  3015                           
  3016 ;; *************** function _SYSTEM_Initialize *****************
  3017 ;; Defined at:
  3018 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;		None
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;		None
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  1    wreg      void 
  3025 ;; Registers used:
  3026 ;;		wreg, status,2, status,0, cstack
  3027 ;; Tracked objects:
  3028 ;;		On entry : 3F/0
  3029 ;;		On exit  : 3F/3D
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3036 ;;Total ram usage:        0 bytes
  3037 ;; Hardware stack levels used:    1
  3038 ;; Hardware stack levels required when called:    6
  3039 ;; This function calls:
  3040 ;;		_ADCC_Initialize
  3041 ;;		_FVR_Initialize
  3042 ;;		_INTERRUPT_Initialize
  3043 ;;		_OSCILLATOR_Initialize
  3044 ;;		_PIN_MANAGER_Initialize
  3045 ;;		_PMD_Initialize
  3046 ;;		_PWM8_Initialize
  3047 ;;		_SPI1_Initialize
  3048 ;;		_TMR2_Initialize
  3049 ;;		_TMR5_Initialize
  3050 ;;		_TMR6_Initialize
  3051 ;;		_UART1_Initialize
  3052 ;;		_UART2_Initialize
  3053 ;; This function is called by:
  3054 ;;		_main
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           	psect	text14
  3059  003A6A                     __ptext14:
  3060                           	opt callstack 0
  3061  003A6A                     _SYSTEM_Initialize:
  3062                           	opt callstack 24
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  3066                           
  3067                           ; BSR set to: 61
  3068                           ;incstack = 0
  3069  003A6A  EC1D  F01C         	call	_INTERRUPT_Initialize	;wreg free
  3070                           
  3071                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  3072  003A6E  ECD7  F01E         	call	_PMD_Initialize	;wreg free
  3073                           
  3074                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3075  003A72  EC28  F019         	call	_PIN_MANAGER_Initialize	;wreg free
  3076                           
  3077                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3078  003A76  EC07  F01F         	call	_OSCILLATOR_Initialize	;wreg free
  3079                           
  3080                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  3081  003A7A  ECF0  F01F         	call	_FVR_Initialize	;wreg free
  3082                           
  3083                           ; BSR set to: 62
  3084                           ;mcc_generated_files/mcc.c: 57:     TMR6_Initialize();
  3085  003A7E  ECCE  F01D         	call	_TMR6_Initialize	;wreg free
  3086                           
  3087                           ; BSR set to: 57
  3088                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
  3089  003A82  EC4F  F01B         	call	_ADCC_Initialize	;wreg free
  3090                           
  3091                           ;mcc_generated_files/mcc.c: 59:     TMR5_Initialize();
  3092  003A86  ECD3  F01B         	call	_TMR5_Initialize	;wreg free
  3093                           
  3094                           ; BSR set to: 57
  3095                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
  3096  003A8A  ECF9  F01E         	call	_TMR2_Initialize	;wreg free
  3097                           
  3098                           ; BSR set to: 57
  3099                           ;mcc_generated_files/mcc.c: 61:     PWM8_Initialize();
  3100  003A8E  EC49  F01F         	call	_PWM8_Initialize	;wreg free
  3101                           
  3102                           ;mcc_generated_files/mcc.c: 62:     UART2_Initialize();
  3103  003A92  EC7A  F018         	call	_UART2_Initialize	;wreg free
  3104                           
  3105                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
  3106  003A96  ECC4  F017         	call	_UART1_Initialize	;wreg free
  3107                           
  3108                           ; BSR set to: 57
  3109                           ;mcc_generated_files/mcc.c: 64:     SPI1_Initialize();
  3110  003A9A  EC3D  F01F         	call	_SPI1_Initialize	;wreg free
  3111                           
  3112                           ; BSR set to: 61
  3113  003A9E  0012               	return		;funcret
  3114  003AA0                     __end_of_SYSTEM_Initialize:
  3115                           	opt callstack 0
  3116                           
  3117 ;; *************** function _UART2_Initialize *****************
  3118 ;; Defined at:
  3119 ;;		line 87 in file "mcc_generated_files/uart2.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;		None
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;		None
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  1    wreg      void 
  3126 ;; Registers used:
  3127 ;;		wreg, status,2, status,0, cstack
  3128 ;; Tracked objects:
  3129 ;;		On entry : 3F/3F
  3130 ;;		On exit  : 3F/39
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3137 ;;Total ram usage:        0 bytes
  3138 ;; Hardware stack levels used:    1
  3139 ;; Hardware stack levels required when called:    5
  3140 ;; This function calls:
  3141 ;;		_UART2_SetErrorHandler
  3142 ;;		_UART2_SetFramingErrorHandler
  3143 ;;		_UART2_SetOverrunErrorHandler
  3144 ;;		_UART2_SetRxInterruptHandler
  3145 ;;		_UART2_SetTxInterruptHandler
  3146 ;; This function is called by:
  3147 ;;		_SYSTEM_Initialize
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           	psect	text15
  3152  0030F4                     __ptext15:
  3153                           	opt callstack 0
  3154  0030F4                     _UART2_Initialize:
  3155                           	opt callstack 24
  3156                           
  3157                           ; BSR set to: 63
  3158                           ;mcc_generated_files/uart2.c: 90:     PIE6bits.U2RXIE = 0;
  3159                           
  3160                           ; BSR set to: 61
  3161                           ;incstack = 0
  3162  0030F4  0139               	movlb	57	; () banked
  3163  0030F6  9596               	bcf	150,2,b	;volatile
  3164                           
  3165                           ; BSR set to: 57
  3166                           ;mcc_generated_files/uart2.c: 91:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
  3167  0030F8  0E38               	movlw	low _UART2_Receive_ISR
  3168  0030FA  6E06               	movwf	UART2_SetRxInterruptHandler@InterruptHandler^0,c
  3169  0030FC  0E34               	movlw	high _UART2_Receive_ISR
  3170  0030FE  6E07               	movwf	(UART2_SetRxInterruptHandler@InterruptHandler+1)^0,c
  3171  003100  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
  3172  003102  6E08               	movwf	(UART2_SetRxInterruptHandler@InterruptHandler+2)^0,c
  3173  003104  EC5F  F01F         	call	_UART2_SetRxInterruptHandler	;wreg free
  3174                           
  3175                           ; BSR set to: 57
  3176                           ;mcc_generated_files/uart2.c: 92:     PIE6bits.U2TXIE = 0;
  3177  003108  9796               	bcf	150,3,b	;volatile
  3178                           
  3179                           ;mcc_generated_files/uart2.c: 93:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
  3180  00310A  0E3A               	movlw	low _UART2_Transmit_ISR
  3181  00310C  6E06               	movwf	UART2_SetTxInterruptHandler@InterruptHandler^0,c
  3182  00310E  0E3B               	movlw	high _UART2_Transmit_ISR
  3183  003110  6E07               	movwf	(UART2_SetTxInterruptHandler@InterruptHandler+1)^0,c
  3184  003112  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
  3185  003114  6E08               	movwf	(UART2_SetTxInterruptHandler@InterruptHandler+2)^0,c
  3186  003116  EC55  F01F         	call	_UART2_SetTxInterruptHandler	;wreg free
  3187                           
  3188                           ; BSR set to: 57
  3189                           ;mcc_generated_files/uart2.c: 98:     U2P1L = 0x00;
  3190  00311A  0E00               	movlw	0
  3191  00311C  013D               	movlb	61	; () banked
  3192  00311E  6FD4               	movwf	212,b	;volatile
  3193                           
  3194                           ; BSR set to: 61
  3195                           ;mcc_generated_files/uart2.c: 101:     U2P2L = 0x00;
  3196  003120  0E00               	movlw	0
  3197  003122  6FD6               	movwf	214,b	;volatile
  3198                           
  3199                           ; BSR set to: 61
  3200                           ;mcc_generated_files/uart2.c: 104:     U2P3L = 0x00;
  3201  003124  0E00               	movlw	0
  3202  003126  6FD8               	movwf	216,b	;volatile
  3203                           
  3204                           ; BSR set to: 61
  3205                           ;mcc_generated_files/uart2.c: 107:     U2CON0 = 0xB0;
  3206  003128  0EB0               	movlw	176
  3207  00312A  6FDA               	movwf	218,b	;volatile
  3208                           
  3209                           ; BSR set to: 61
  3210                           ;mcc_generated_files/uart2.c: 110:     U2CON1 = 0x80;
  3211  00312C  0E80               	movlw	128
  3212  00312E  6FDB               	movwf	219,b	;volatile
  3213                           
  3214                           ; BSR set to: 61
  3215                           ;mcc_generated_files/uart2.c: 113:     U2CON2 = 0x00;
  3216  003130  0E00               	movlw	0
  3217  003132  6FDC               	movwf	220,b	;volatile
  3218                           
  3219                           ; BSR set to: 61
  3220                           ;mcc_generated_files/uart2.c: 116:     U2BRGL = 0x40;
  3221  003134  0E40               	movlw	64
  3222  003136  6FDD               	movwf	221,b	;volatile
  3223                           
  3224                           ; BSR set to: 61
  3225                           ;mcc_generated_files/uart2.c: 119:     U2BRGH = 0x03;
  3226  003138  0E03               	movlw	3
  3227  00313A  6FDE               	movwf	222,b	;volatile
  3228                           
  3229                           ; BSR set to: 61
  3230                           ;mcc_generated_files/uart2.c: 122:     U2FIFO = 0x00;
  3231  00313C  0E00               	movlw	0
  3232  00313E  6FDF               	movwf	223,b	;volatile
  3233                           
  3234                           ; BSR set to: 61
  3235                           ;mcc_generated_files/uart2.c: 125:     U2UIR = 0x00;
  3236  003140  0E00               	movlw	0
  3237  003142  6FE0               	movwf	224,b	;volatile
  3238                           
  3239                           ; BSR set to: 61
  3240                           ;mcc_generated_files/uart2.c: 128:     U2ERRIR = 0x00;
  3241  003144  0E00               	movlw	0
  3242  003146  6FE1               	movwf	225,b	;volatile
  3243                           
  3244                           ; BSR set to: 61
  3245                           ;mcc_generated_files/uart2.c: 131:     U2ERRIE = 0x00;
  3246  003148  0E00               	movlw	0
  3247  00314A  6FE2               	movwf	226,b	;volatile
  3248                           
  3249                           ;mcc_generated_files/uart2.c: 134:     UART2_SetFramingErrorHandler(UART2_DefaultFraming
      +                          ErrorHandler);
  3250  00314C  0E04               	movlw	low _UART2_DefaultFramingErrorHandler
  3251  00314E  6E06               	movwf	UART2_SetFramingErrorHandler@interruptHandler^0,c
  3252  003150  0E40               	movlw	high _UART2_DefaultFramingErrorHandler
  3253  003152  6E07               	movwf	(UART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  3254  003154  0E00               	movlw	low (_UART2_DefaultFramingErrorHandler shr (0+16))
  3255  003156  6E08               	movwf	(UART2_SetFramingErrorHandler@interruptHandler+2)^0,c
  3256  003158  EC73  F01F         	call	_UART2_SetFramingErrorHandler	;wreg free
  3257                           
  3258                           ;mcc_generated_files/uart2.c: 135:     UART2_SetOverrunErrorHandler(UART2_DefaultOverrun
      +                          ErrorHandler);
  3259  00315C  0E02               	movlw	low _UART2_DefaultOverrunErrorHandler
  3260  00315E  6E06               	movwf	UART2_SetOverrunErrorHandler@interruptHandler^0,c
  3261  003160  0E40               	movlw	high _UART2_DefaultOverrunErrorHandler
  3262  003162  6E07               	movwf	(UART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3263  003164  0E00               	movlw	low (_UART2_DefaultOverrunErrorHandler shr (0+16))
  3264  003166  6E08               	movwf	(UART2_SetOverrunErrorHandler@interruptHandler+2)^0,c
  3265  003168  EC69  F01F         	call	_UART2_SetOverrunErrorHandler	;wreg free
  3266                           
  3267                           ;mcc_generated_files/uart2.c: 136:     UART2_SetErrorHandler(UART2_DefaultErrorHandler);
  3268  00316C  0EF4               	movlw	low _UART2_DefaultErrorHandler
  3269  00316E  6E06               	movwf	UART2_SetErrorHandler@interruptHandler^0,c
  3270  003170  0E3F               	movlw	high _UART2_DefaultErrorHandler
  3271  003172  6E07               	movwf	(UART2_SetErrorHandler@interruptHandler+1)^0,c
  3272  003174  0E00               	movlw	low (_UART2_DefaultErrorHandler shr (0+16))
  3273  003176  6E08               	movwf	(UART2_SetErrorHandler@interruptHandler+2)^0,c
  3274  003178  EC7D  F01F         	call	_UART2_SetErrorHandler	;wreg free
  3275                           
  3276                           ; BSR set to: 61
  3277                           ;mcc_generated_files/uart2.c: 138:     uart2RxLastError.status = 0;
  3278  00317C  0E00               	movlw	0
  3279  00317E  0101               	movlb	1	; () banked
  3280  003180  6F70               	movwf	_uart2RxLastError& (0+255),b	;volatile
  3281                           
  3282                           ; BSR set to: 1
  3283                           ;mcc_generated_files/uart2.c: 141:     uart2TxHead = 0;
  3284  003182  0E00               	movlw	0
  3285  003184  0100               	movlb	0	; () banked
  3286  003186  6F9A               	movwf	_uart2TxHead& (0+255),b	;volatile
  3287                           
  3288                           ; BSR set to: 0
  3289                           ;mcc_generated_files/uart2.c: 142:     uart2TxTail = 0;
  3290  003188  0E00               	movlw	0
  3291  00318A  6F99               	movwf	_uart2TxTail& (0+255),b	;volatile
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;mcc_generated_files/uart2.c: 143:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
  3295  00318C  0E08               	movlw	8
  3296  00318E  6F98               	movwf	_uart2TxBufferRemaining& (0+255),b	;volatile
  3297                           
  3298                           ; BSR set to: 0
  3299                           ;mcc_generated_files/uart2.c: 144:     uart2RxHead = 0;
  3300  003190  0E00               	movlw	0
  3301  003192  6E59               	movwf	_uart2RxHead^0,c	;volatile
  3302                           
  3303                           ; BSR set to: 0
  3304                           ;mcc_generated_files/uart2.c: 145:     uart2RxTail = 0;
  3305  003194  0E00               	movlw	0
  3306  003196  6E58               	movwf	_uart2RxTail^0,c	;volatile
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;mcc_generated_files/uart2.c: 146:     uart2RxCount = 0;
  3310  003198  0E00               	movlw	0
  3311  00319A  6F97               	movwf	_uart2RxCount& (0+255),b	;volatile
  3312                           
  3313                           ; BSR set to: 0
  3314                           ;mcc_generated_files/uart2.c: 149:     PIE6bits.U2RXIE = 1;
  3315  00319C  0139               	movlb	57	; () banked
  3316  00319E  8596               	bsf	150,2,b	;volatile
  3317                           
  3318                           ; BSR set to: 57
  3319  0031A0  0012               	return		;funcret
  3320  0031A2                     __end_of_UART2_Initialize:
  3321                           	opt callstack 0
  3322                           
  3323 ;; *************** function _UART2_SetTxInterruptHandler *****************
  3324 ;; Defined at:
  3325 ;;		line 324 in file "mcc_generated_files/uart2.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  3328 ;;		 -> UART2_Transmit_ISR(1), 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;		None
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  1    wreg      void 
  3333 ;; Registers used:
  3334 ;;		wreg, status,2, status,0
  3335 ;; Tracked objects:
  3336 ;;		On entry : 3F/39
  3337 ;;		On exit  : 3F/39
  3338 ;;		Unchanged: 3E/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3340 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3343 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3344 ;;Total ram usage:        3 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; Hardware stack levels required when called:    4
  3347 ;; This function calls:
  3348 ;;		Nothing
  3349 ;; This function is called by:
  3350 ;;		_UART2_Initialize
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           	psect	text16
  3355  003EAA                     __ptext16:
  3356                           	opt callstack 0
  3357  003EAA                     _UART2_SetTxInterruptHandler:
  3358                           	opt callstack 24
  3359                           
  3360                           ; BSR set to: 57
  3361                           ;mcc_generated_files/uart2.c: 325:     UART2_TxInterruptHandler = InterruptHandler;
  3362                           
  3363                           ; BSR set to: 57
  3364                           ;incstack = 0
  3365  003EAA  0060  F018  F160   	movff	UART2_SetTxInterruptHandler@InterruptHandler,_UART2_TxInterruptHandler
  3366  003EB0  0060  F01C  F161   	movff	UART2_SetTxInterruptHandler@InterruptHandler+1,_UART2_TxInterruptHandler+1
  3367  003EB6  0060  F020  F162   	movff	UART2_SetTxInterruptHandler@InterruptHandler+2,_UART2_TxInterruptHandler+2
  3368                           
  3369                           ; BSR set to: 57
  3370  003EBC  0012               	return		;funcret
  3371  003EBE                     __end_of_UART2_SetTxInterruptHandler:
  3372                           	opt callstack 0
  3373                           
  3374 ;; *************** function _UART2_SetRxInterruptHandler *****************
  3375 ;; Defined at:
  3376 ;;		line 320 in file "mcc_generated_files/uart2.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  3379 ;;		 -> UART2_Receive_ISR(1), 
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;		None
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  1    wreg      void 
  3384 ;; Registers used:
  3385 ;;		wreg, status,2, status,0
  3386 ;; Tracked objects:
  3387 ;;		On entry : 3F/39
  3388 ;;		On exit  : 3F/39
  3389 ;;		Unchanged: 3E/0
  3390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3391 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3394 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3395 ;;Total ram usage:        3 bytes
  3396 ;; Hardware stack levels used:    1
  3397 ;; Hardware stack levels required when called:    4
  3398 ;; This function calls:
  3399 ;;		Nothing
  3400 ;; This function is called by:
  3401 ;;		_UART2_Initialize
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405                           	psect	text17
  3406  003EBE                     __ptext17:
  3407                           	opt callstack 0
  3408  003EBE                     _UART2_SetRxInterruptHandler:
  3409                           	opt callstack 24
  3410                           
  3411                           ; BSR set to: 57
  3412                           ;mcc_generated_files/uart2.c: 321:     UART2_RxInterruptHandler = InterruptHandler;
  3413                           
  3414                           ; BSR set to: 57
  3415                           ;incstack = 0
  3416  003EBE  0060  F018  F163   	movff	UART2_SetRxInterruptHandler@InterruptHandler,_UART2_RxInterruptHandler
  3417  003EC4  0060  F01C  F164   	movff	UART2_SetRxInterruptHandler@InterruptHandler+1,_UART2_RxInterruptHandler+1
  3418  003ECA  0060  F020  F165   	movff	UART2_SetRxInterruptHandler@InterruptHandler+2,_UART2_RxInterruptHandler+2
  3419                           
  3420                           ; BSR set to: 57
  3421  003ED0  0012               	return		;funcret
  3422  003ED2                     __end_of_UART2_SetRxInterruptHandler:
  3423                           	opt callstack 0
  3424                           
  3425 ;; *************** function _UART2_SetOverrunErrorHandler *****************
  3426 ;; Defined at:
  3427 ;;		line 310 in file "mcc_generated_files/uart2.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  3430 ;;		 -> UART2_DefaultOverrunErrorHandler(1), 
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;		None
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  1    wreg      void 
  3435 ;; Registers used:
  3436 ;;		wreg, status,2, status,0
  3437 ;; Tracked objects:
  3438 ;;		On entry : 3F/3D
  3439 ;;		On exit  : 3F/3D
  3440 ;;		Unchanged: 3E/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3442 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3445 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3446 ;;Total ram usage:        3 bytes
  3447 ;; Hardware stack levels used:    1
  3448 ;; Hardware stack levels required when called:    4
  3449 ;; This function calls:
  3450 ;;		Nothing
  3451 ;; This function is called by:
  3452 ;;		_UART2_Initialize
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           	psect	text18
  3457  003ED2                     __ptext18:
  3458                           	opt callstack 0
  3459  003ED2                     _UART2_SetOverrunErrorHandler:
  3460                           	opt callstack 24
  3461                           
  3462                           ; BSR set to: 61
  3463                           ;mcc_generated_files/uart2.c: 311:     UART2_OverrunErrorHandler = interruptHandler;
  3464                           
  3465                           ; BSR set to: 57
  3466                           ;incstack = 0
  3467  003ED2  0060  F018  F14B   	movff	UART2_SetOverrunErrorHandler@interruptHandler,_UART2_OverrunErrorHandler
  3468  003ED8  0060  F01C  F14C   	movff	UART2_SetOverrunErrorHandler@interruptHandler+1,_UART2_OverrunErrorHandler+1
  3469  003EDE  0060  F020  F14D   	movff	UART2_SetOverrunErrorHandler@interruptHandler+2,_UART2_OverrunErrorHandler+2
  3470                           
  3471                           ; BSR set to: 61
  3472  003EE4  0012               	return		;funcret
  3473  003EE6                     __end_of_UART2_SetOverrunErrorHandler:
  3474                           	opt callstack 0
  3475                           
  3476 ;; *************** function _UART2_SetFramingErrorHandler *****************
  3477 ;; Defined at:
  3478 ;;		line 306 in file "mcc_generated_files/uart2.c"
  3479 ;; Parameters:    Size  Location     Type
  3480 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  3481 ;;		 -> UART2_DefaultFramingErrorHandler(1), 
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;		None
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  1    wreg      void 
  3486 ;; Registers used:
  3487 ;;		wreg, status,2, status,0
  3488 ;; Tracked objects:
  3489 ;;		On entry : 3F/3D
  3490 ;;		On exit  : 3F/3D
  3491 ;;		Unchanged: 3E/0
  3492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3493 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3496 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3497 ;;Total ram usage:        3 bytes
  3498 ;; Hardware stack levels used:    1
  3499 ;; Hardware stack levels required when called:    4
  3500 ;; This function calls:
  3501 ;;		Nothing
  3502 ;; This function is called by:
  3503 ;;		_UART2_Initialize
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507                           	psect	text19
  3508  003EE6                     __ptext19:
  3509                           	opt callstack 0
  3510  003EE6                     _UART2_SetFramingErrorHandler:
  3511                           	opt callstack 24
  3512                           
  3513                           ; BSR set to: 61
  3514                           ;mcc_generated_files/uart2.c: 307:     UART2_FramingErrorHandler = interruptHandler;
  3515                           
  3516                           ; BSR set to: 61
  3517                           ;incstack = 0
  3518  003EE6  0060  F018  F14E   	movff	UART2_SetFramingErrorHandler@interruptHandler,_UART2_FramingErrorHandler
  3519  003EEC  0060  F01C  F14F   	movff	UART2_SetFramingErrorHandler@interruptHandler+1,_UART2_FramingErrorHandler+1
  3520  003EF2  0060  F020  F150   	movff	UART2_SetFramingErrorHandler@interruptHandler+2,_UART2_FramingErrorHandler+2
  3521                           
  3522                           ; BSR set to: 61
  3523  003EF8  0012               	return		;funcret
  3524  003EFA                     __end_of_UART2_SetFramingErrorHandler:
  3525                           	opt callstack 0
  3526                           
  3527 ;; *************** function _UART2_SetErrorHandler *****************
  3528 ;; Defined at:
  3529 ;;		line 314 in file "mcc_generated_files/uart2.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  3532 ;;		 -> UART2_DefaultErrorHandler(1), 
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;		None
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  1    wreg      void 
  3537 ;; Registers used:
  3538 ;;		wreg, status,2, status,0
  3539 ;; Tracked objects:
  3540 ;;		On entry : 3F/3D
  3541 ;;		On exit  : 3F/3D
  3542 ;;		Unchanged: 3E/0
  3543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3544 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3547 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3548 ;;Total ram usage:        3 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; Hardware stack levels required when called:    4
  3551 ;; This function calls:
  3552 ;;		Nothing
  3553 ;; This function is called by:
  3554 ;;		_UART2_Initialize
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           	psect	text20
  3559  003EFA                     __ptext20:
  3560                           	opt callstack 0
  3561  003EFA                     _UART2_SetErrorHandler:
  3562                           	opt callstack 24
  3563                           
  3564                           ; BSR set to: 61
  3565                           ;mcc_generated_files/uart2.c: 315:     UART2_ErrorHandler = interruptHandler;
  3566                           
  3567                           ; BSR set to: 61
  3568                           ;incstack = 0
  3569  003EFA  0060  F018  F148   	movff	UART2_SetErrorHandler@interruptHandler,_UART2_ErrorHandler
  3570  003F00  0060  F01C  F149   	movff	UART2_SetErrorHandler@interruptHandler+1,_UART2_ErrorHandler+1
  3571  003F06  0060  F020  F14A   	movff	UART2_SetErrorHandler@interruptHandler+2,_UART2_ErrorHandler+2
  3572                           
  3573                           ; BSR set to: 61
  3574  003F0C  0012               	return		;funcret
  3575  003F0E                     __end_of_UART2_SetErrorHandler:
  3576                           	opt callstack 0
  3577                           
  3578 ;; *************** function _UART1_Initialize *****************
  3579 ;; Defined at:
  3580 ;;		line 87 in file "mcc_generated_files/uart1.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;		None
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;		None
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  1    wreg      void 
  3587 ;; Registers used:
  3588 ;;		wreg, status,2, status,0, cstack
  3589 ;; Tracked objects:
  3590 ;;		On entry : 3F/39
  3591 ;;		On exit  : 3F/39
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3598 ;;Total ram usage:        0 bytes
  3599 ;; Hardware stack levels used:    1
  3600 ;; Hardware stack levels required when called:    5
  3601 ;; This function calls:
  3602 ;;		_UART1_SetErrorHandler
  3603 ;;		_UART1_SetFramingErrorHandler
  3604 ;;		_UART1_SetOverrunErrorHandler
  3605 ;;		_UART1_SetRxInterruptHandler
  3606 ;;		_UART1_SetTxInterruptHandler
  3607 ;; This function is called by:
  3608 ;;		_SYSTEM_Initialize
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           	psect	text21
  3613  002F88                     __ptext21:
  3614                           	opt callstack 0
  3615  002F88                     _UART1_Initialize:
  3616                           	opt callstack 24
  3617                           
  3618                           ; BSR set to: 57
  3619                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
  3620                           
  3621                           ; BSR set to: 61
  3622                           ;incstack = 0
  3623  002F88  9793               	bcf	147,3,b	;volatile
  3624                           
  3625                           ; BSR set to: 57
  3626                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  3627  002F8A  0E9A               	movlw	low _UART1_Receive_ISR
  3628  002F8C  6E06               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
  3629  002F8E  0E33               	movlw	high _UART1_Receive_ISR
  3630  002F90  6E07               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
  3631  002F92  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
  3632  002F94  6E08               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+2)^0,c
  3633  002F96  EC91  F01F         	call	_UART1_SetRxInterruptHandler	;wreg free
  3634                           
  3635                           ; BSR set to: 57
  3636                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
  3637  002F9A  9993               	bcf	147,4,b	;volatile
  3638                           
  3639                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  3640  002F9C  0E08               	movlw	low _UART1_Transmit_ISR
  3641  002F9E  6E06               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
  3642  002FA0  0E3B               	movlw	high _UART1_Transmit_ISR
  3643  002FA2  6E07               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
  3644  002FA4  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
  3645  002FA6  6E08               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+2)^0,c
  3646  002FA8  EC87  F01F         	call	_UART1_SetTxInterruptHandler	;wreg free
  3647                           
  3648                           ; BSR set to: 57
  3649                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
  3650  002FAC  0E00               	movlw	0
  3651  002FAE  013D               	movlb	61	; () banked
  3652  002FB0  6FEC               	movwf	236,b	;volatile
  3653                           
  3654                           ; BSR set to: 61
  3655                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
  3656  002FB2  0E00               	movlw	0
  3657  002FB4  6FED               	movwf	237,b	;volatile
  3658                           
  3659                           ; BSR set to: 61
  3660                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
  3661  002FB6  0E00               	movlw	0
  3662  002FB8  6FEE               	movwf	238,b	;volatile
  3663                           
  3664                           ; BSR set to: 61
  3665                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
  3666  002FBA  0E00               	movlw	0
  3667  002FBC  6FEF               	movwf	239,b	;volatile
  3668                           
  3669                           ; BSR set to: 61
  3670                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
  3671  002FBE  0E00               	movlw	0
  3672  002FC0  6FF0               	movwf	240,b	;volatile
  3673                           
  3674                           ; BSR set to: 61
  3675                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
  3676  002FC2  0E00               	movlw	0
  3677  002FC4  6FF1               	movwf	241,b	;volatile
  3678                           
  3679                           ; BSR set to: 61
  3680                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0x90;
  3681  002FC6  0E90               	movlw	144
  3682  002FC8  6FF2               	movwf	242,b	;volatile
  3683                           
  3684                           ; BSR set to: 61
  3685                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
  3686  002FCA  0E80               	movlw	128
  3687  002FCC  6FF3               	movwf	243,b	;volatile
  3688                           
  3689                           ; BSR set to: 61
  3690                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
  3691  002FCE  0E00               	movlw	0
  3692  002FD0  6FF4               	movwf	244,b	;volatile
  3693                           
  3694                           ; BSR set to: 61
  3695                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x40;
  3696  002FD2  0E40               	movlw	64
  3697  002FD4  6FF5               	movwf	245,b	;volatile
  3698                           
  3699                           ; BSR set to: 61
  3700                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x03;
  3701  002FD6  0E03               	movlw	3
  3702  002FD8  6FF6               	movwf	246,b	;volatile
  3703                           
  3704                           ; BSR set to: 61
  3705                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
  3706  002FDA  0E00               	movlw	0
  3707  002FDC  6FF7               	movwf	247,b	;volatile
  3708                           
  3709                           ; BSR set to: 61
  3710                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
  3711  002FDE  0E00               	movlw	0
  3712  002FE0  6FF8               	movwf	248,b	;volatile
  3713                           
  3714                           ; BSR set to: 61
  3715                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
  3716  002FE2  0E00               	movlw	0
  3717  002FE4  6FF9               	movwf	249,b	;volatile
  3718                           
  3719                           ; BSR set to: 61
  3720                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
  3721  002FE6  0E00               	movlw	0
  3722  002FE8  6FFA               	movwf	250,b	;volatile
  3723                           
  3724                           ; BSR set to: 61
  3725                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  3726  002FEA  0E00               	movlw	low _UART1_DefaultFramingErrorHandler
  3727  002FEC  6E06               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  3728  002FEE  0E40               	movlw	high _UART1_DefaultFramingErrorHandler
  3729  002FF0  6E07               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  3730  002FF2  0E00               	movlw	low (_UART1_DefaultFramingErrorHandler shr (0+16))
  3731  002FF4  6E08               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+2)^0,c
  3732  002FF6  ECA5  F01F         	call	_UART1_SetFramingErrorHandler	;wreg free
  3733                           
  3734                           ; BSR set to: 61
  3735                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  3736  002FFA  0EFE               	movlw	low _UART1_DefaultOverrunErrorHandler
  3737  002FFC  6E06               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  3738  002FFE  0E3F               	movlw	high _UART1_DefaultOverrunErrorHandler
  3739  003000  6E07               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3740  003002  0E00               	movlw	low (_UART1_DefaultOverrunErrorHandler shr (0+16))
  3741  003004  6E08               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+2)^0,c
  3742  003006  EC9B  F01F         	call	_UART1_SetOverrunErrorHandler	;wreg free
  3743                           
  3744                           ; BSR set to: 61
  3745                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  3746  00300A  0EEE               	movlw	low _UART1_DefaultErrorHandler
  3747  00300C  6E06               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  3748  00300E  0E3F               	movlw	high _UART1_DefaultErrorHandler
  3749  003010  6E07               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  3750  003012  0E00               	movlw	low (_UART1_DefaultErrorHandler shr (0+16))
  3751  003014  6E08               	movwf	(UART1_SetErrorHandler@interruptHandler+2)^0,c
  3752  003016  ECAF  F01F         	call	_UART1_SetErrorHandler	;wreg free
  3753                           
  3754                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
  3755  00301A  0E00               	movlw	0
  3756  00301C  0101               	movlb	1	; () banked
  3757  00301E  6F71               	movwf	_uart1RxLastError& (0+255),b	;volatile
  3758                           
  3759                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
  3760  003020  0E00               	movlw	0
  3761  003022  0100               	movlb	0	; () banked
  3762  003024  6F9D               	movwf	_uart1TxHead& (0+255),b	;volatile
  3763                           
  3764                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
  3765  003026  0E00               	movlw	0
  3766  003028  6F9C               	movwf	_uart1TxTail& (0+255),b	;volatile
  3767                           
  3768                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  3769  00302A  0E08               	movlw	8
  3770  00302C  6F9B               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
  3771                           
  3772                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
  3773  00302E  0E00               	movlw	0
  3774  003030  6E5A               	movwf	_uart1RxHead^0,c	;volatile
  3775                           
  3776                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
  3777  003032  0E00               	movlw	0
  3778  003034  0101               	movlb	1	; () banked
  3779  003036  6F73               	movwf	_uart1RxTail& (0+255),b	;volatile
  3780                           
  3781                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
  3782  003038  0E00               	movlw	0
  3783  00303A  6F72               	movwf	_uart1RxCount& (0+255),b	;volatile
  3784                           
  3785                           ; BSR set to: 1
  3786                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
  3787  00303C  0139               	movlb	57	; () banked
  3788  00303E  8793               	bsf	147,3,b	;volatile
  3789                           
  3790                           ; BSR set to: 57
  3791  003040  0012               	return		;funcret
  3792  003042                     __end_of_UART1_Initialize:
  3793                           	opt callstack 0
  3794                           
  3795 ;; *************** function _UART1_SetTxInterruptHandler *****************
  3796 ;; Defined at:
  3797 ;;		line 323 in file "mcc_generated_files/uart1.c"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  3800 ;;		 -> UART1_Transmit_ISR(1), 
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;		None
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  1    wreg      void 
  3805 ;; Registers used:
  3806 ;;		wreg, status,2, status,0
  3807 ;; Tracked objects:
  3808 ;;		On entry : 3F/39
  3809 ;;		On exit  : 3F/39
  3810 ;;		Unchanged: 3E/0
  3811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3812 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3815 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3816 ;;Total ram usage:        3 bytes
  3817 ;; Hardware stack levels used:    1
  3818 ;; Hardware stack levels required when called:    4
  3819 ;; This function calls:
  3820 ;;		Nothing
  3821 ;; This function is called by:
  3822 ;;		_UART1_Initialize
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825                           
  3826                           	psect	text22
  3827  003F0E                     __ptext22:
  3828                           	opt callstack 0
  3829  003F0E                     _UART1_SetTxInterruptHandler:
  3830                           	opt callstack 24
  3831                           
  3832                           ; BSR set to: 57
  3833                           ;mcc_generated_files/uart1.c: 324:     UART1_TxInterruptHandler = InterruptHandler;
  3834                           
  3835                           ; BSR set to: 57
  3836                           ;incstack = 0
  3837  003F0E  0060  F018  F15A   	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  3838  003F14  0060  F01C  F15B   	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  3839  003F1A  0060  F020  F15C   	movff	UART1_SetTxInterruptHandler@InterruptHandler+2,_UART1_TxInterruptHandler+2
  3840                           
  3841                           ; BSR set to: 57
  3842  003F20  0012               	return		;funcret
  3843  003F22                     __end_of_UART1_SetTxInterruptHandler:
  3844                           	opt callstack 0
  3845                           
  3846 ;; *************** function _UART1_SetRxInterruptHandler *****************
  3847 ;; Defined at:
  3848 ;;		line 319 in file "mcc_generated_files/uart1.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  3851 ;;		 -> UART1_Receive_ISR(1), 
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;		None
  3854 ;; Return value:  Size  Location     Type
  3855 ;;                  1    wreg      void 
  3856 ;; Registers used:
  3857 ;;		wreg, status,2, status,0
  3858 ;; Tracked objects:
  3859 ;;		On entry : 3F/39
  3860 ;;		On exit  : 3F/39
  3861 ;;		Unchanged: 3E/0
  3862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3863 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3866 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3867 ;;Total ram usage:        3 bytes
  3868 ;; Hardware stack levels used:    1
  3869 ;; Hardware stack levels required when called:    4
  3870 ;; This function calls:
  3871 ;;		Nothing
  3872 ;; This function is called by:
  3873 ;;		_UART1_Initialize
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           	psect	text23
  3878  003F22                     __ptext23:
  3879                           	opt callstack 0
  3880  003F22                     _UART1_SetRxInterruptHandler:
  3881                           	opt callstack 24
  3882                           
  3883                           ; BSR set to: 57
  3884                           ;mcc_generated_files/uart1.c: 320:     UART1_RxInterruptHandler = InterruptHandler;
  3885                           
  3886                           ; BSR set to: 57
  3887                           ;incstack = 0
  3888  003F22  0060  F018  F15D   	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  3889  003F28  0060  F01C  F15E   	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  3890  003F2E  0060  F020  F15F   	movff	UART1_SetRxInterruptHandler@InterruptHandler+2,_UART1_RxInterruptHandler+2
  3891                           
  3892                           ; BSR set to: 57
  3893  003F34  0012               	return		;funcret
  3894  003F36                     __end_of_UART1_SetRxInterruptHandler:
  3895                           	opt callstack 0
  3896                           
  3897 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  3898 ;; Defined at:
  3899 ;;		line 309 in file "mcc_generated_files/uart1.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  3902 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;		None
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  1    wreg      void 
  3907 ;; Registers used:
  3908 ;;		wreg, status,2, status,0
  3909 ;; Tracked objects:
  3910 ;;		On entry : 3F/3D
  3911 ;;		On exit  : 3F/3D
  3912 ;;		Unchanged: 3E/0
  3913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3914 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3917 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3918 ;;Total ram usage:        3 bytes
  3919 ;; Hardware stack levels used:    1
  3920 ;; Hardware stack levels required when called:    4
  3921 ;; This function calls:
  3922 ;;		Nothing
  3923 ;; This function is called by:
  3924 ;;		_UART1_Initialize
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           	psect	text24
  3929  003F36                     __ptext24:
  3930                           	opt callstack 0
  3931  003F36                     _UART1_SetOverrunErrorHandler:
  3932                           	opt callstack 24
  3933                           
  3934                           ; BSR set to: 61
  3935                           ;mcc_generated_files/uart1.c: 310:     UART1_OverrunErrorHandler = interruptHandler;
  3936                           
  3937                           ; BSR set to: 57
  3938                           ;incstack = 0
  3939  003F36  0060  F018  F154   	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  3940  003F3C  0060  F01C  F155   	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  3941  003F42  0060  F020  F156   	movff	UART1_SetOverrunErrorHandler@interruptHandler+2,_UART1_OverrunErrorHandler+2
  3942                           
  3943                           ; BSR set to: 61
  3944  003F48  0012               	return		;funcret
  3945  003F4A                     __end_of_UART1_SetOverrunErrorHandler:
  3946                           	opt callstack 0
  3947                           
  3948 ;; *************** function _UART1_SetFramingErrorHandler *****************
  3949 ;; Defined at:
  3950 ;;		line 305 in file "mcc_generated_files/uart1.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  3953 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;		None
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  1    wreg      void 
  3958 ;; Registers used:
  3959 ;;		wreg, status,2, status,0
  3960 ;; Tracked objects:
  3961 ;;		On entry : 3F/3D
  3962 ;;		On exit  : 3F/3D
  3963 ;;		Unchanged: 3E/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3965 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3968 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3969 ;;Total ram usage:        3 bytes
  3970 ;; Hardware stack levels used:    1
  3971 ;; Hardware stack levels required when called:    4
  3972 ;; This function calls:
  3973 ;;		Nothing
  3974 ;; This function is called by:
  3975 ;;		_UART1_Initialize
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           	psect	text25
  3980  003F4A                     __ptext25:
  3981                           	opt callstack 0
  3982  003F4A                     _UART1_SetFramingErrorHandler:
  3983                           	opt callstack 24
  3984                           
  3985                           ; BSR set to: 61
  3986                           ;mcc_generated_files/uart1.c: 306:     UART1_FramingErrorHandler = interruptHandler;
  3987                           
  3988                           ; BSR set to: 61
  3989                           ;incstack = 0
  3990  003F4A  0060  F018  F157   	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  3991  003F50  0060  F01C  F158   	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  3992  003F56  0060  F020  F159   	movff	UART1_SetFramingErrorHandler@interruptHandler+2,_UART1_FramingErrorHandler+2
  3993                           
  3994                           ; BSR set to: 61
  3995  003F5C  0012               	return		;funcret
  3996  003F5E                     __end_of_UART1_SetFramingErrorHandler:
  3997                           	opt callstack 0
  3998                           
  3999 ;; *************** function _UART1_SetErrorHandler *****************
  4000 ;; Defined at:
  4001 ;;		line 313 in file "mcc_generated_files/uart1.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  interruptHan    3    5[COMRAM] PTR FTN()void 
  4004 ;;		 -> UART1_DefaultErrorHandler(1), 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;		None
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  1    wreg      void 
  4009 ;; Registers used:
  4010 ;;		wreg, status,2, status,0
  4011 ;; Tracked objects:
  4012 ;;		On entry : 3F/3D
  4013 ;;		On exit  : 3F/3D
  4014 ;;		Unchanged: 3E/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4016 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4019 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4020 ;;Total ram usage:        3 bytes
  4021 ;; Hardware stack levels used:    1
  4022 ;; Hardware stack levels required when called:    4
  4023 ;; This function calls:
  4024 ;;		Nothing
  4025 ;; This function is called by:
  4026 ;;		_UART1_Initialize
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030                           	psect	text26
  4031  003F5E                     __ptext26:
  4032                           	opt callstack 0
  4033  003F5E                     _UART1_SetErrorHandler:
  4034                           	opt callstack 24
  4035                           
  4036                           ; BSR set to: 61
  4037                           ;mcc_generated_files/uart1.c: 314:     UART1_ErrorHandler = interruptHandler;
  4038                           
  4039                           ; BSR set to: 61
  4040                           ;incstack = 0
  4041  003F5E  0060  F018  F151   	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  4042  003F64  0060  F01C  F152   	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  4043  003F6A  0060  F020  F153   	movff	UART1_SetErrorHandler@interruptHandler+2,_UART1_ErrorHandler+2
  4044                           
  4045                           ; BSR set to: 61
  4046  003F70  0012               	return		;funcret
  4047  003F72                     __end_of_UART1_SetErrorHandler:
  4048                           	opt callstack 0
  4049                           
  4050 ;; *************** function _TMR6_Initialize *****************
  4051 ;; Defined at:
  4052 ;;		line 67 in file "mcc_generated_files/tmr6.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;		None
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;		None
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  1    wreg      void 
  4059 ;; Registers used:
  4060 ;;		wreg, status,2, status,0, cstack
  4061 ;; Tracked objects:
  4062 ;;		On entry : 3F/3E
  4063 ;;		On exit  : 3F/39
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4070 ;;Total ram usage:        0 bytes
  4071 ;; Hardware stack levels used:    1
  4072 ;; Hardware stack levels required when called:    5
  4073 ;; This function calls:
  4074 ;;		_TMR6_SetInterruptHandler
  4075 ;; This function is called by:
  4076 ;;		_SYSTEM_Initialize
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           	psect	text27
  4081  003B9C                     __ptext27:
  4082                           	opt callstack 0
  4083  003B9C                     _TMR6_Initialize:
  4084                           	opt callstack 24
  4085                           
  4086                           ; BSR set to: 62
  4087                           ;mcc_generated_files/tmr6.c: 72:  T6CLKCON = 0x01;
  4088                           
  4089                           ; BSR set to: 61
  4090                           ;incstack = 0
  4091  003B9C  0E01               	movlw	1
  4092  003B9E  6E96               	movwf	150,c	;volatile
  4093                           
  4094                           ;mcc_generated_files/tmr6.c: 75:  T6HLT = 0x00;
  4095  003BA0  0E00               	movlw	0
  4096  003BA2  6E95               	movwf	149,c	;volatile
  4097                           
  4098                           ;mcc_generated_files/tmr6.c: 78:  T6RST = 0x00;
  4099  003BA4  0E00               	movlw	0
  4100  003BA6  6E97               	movwf	151,c	;volatile
  4101                           
  4102                           ;mcc_generated_files/tmr6.c: 81:  T6PR = 0x03;
  4103  003BA8  0E03               	movlw	3
  4104  003BAA  6E93               	movwf	147,c	;volatile
  4105                           
  4106                           ;mcc_generated_files/tmr6.c: 84:  T6TMR = 0x00;
  4107  003BAC  0E00               	movlw	0
  4108  003BAE  6E92               	movwf	146,c	;volatile
  4109                           
  4110                           ; BSR set to: 62
  4111                           ;mcc_generated_files/tmr6.c: 87:  PIR9bits.TMR6IF = 0;
  4112  003BB0  0139               	movlb	57	; () banked
  4113  003BB2  91A9               	bcf	169,0,b	;volatile
  4114                           
  4115                           ; BSR set to: 57
  4116                           ;mcc_generated_files/tmr6.c: 90:  PIE9bits.TMR6IE = 1;
  4117  003BB4  8199               	bsf	153,0,b	;volatile
  4118                           
  4119                           ; BSR set to: 57
  4120                           ;mcc_generated_files/tmr6.c: 93:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
  4121  003BB6  0E84               	movlw	low _TMR6_DefaultInterruptHandler
  4122  003BB8  6E06               	movwf	TMR6_SetInterruptHandler@InterruptHandler^0,c
  4123  003BBA  0E39               	movlw	high _TMR6_DefaultInterruptHandler
  4124  003BBC  6E07               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)^0,c
  4125  003BBE  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
  4126  003BC0  6E08               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)^0,c
  4127  003BC2  ECB9  F01F         	call	_TMR6_SetInterruptHandler	;wreg free
  4128                           
  4129                           ; BSR set to: 57
  4130                           ;mcc_generated_files/tmr6.c: 96:  T6CON = 0xFF;
  4131  003BC6  6894               	setf	148,c	;volatile
  4132                           
  4133                           ; BSR set to: 57
  4134  003BC8  0012               	return		;funcret
  4135  003BCA                     __end_of_TMR6_Initialize:
  4136                           	opt callstack 0
  4137                           
  4138 ;; *************** function _TMR6_SetInterruptHandler *****************
  4139 ;; Defined at:
  4140 ;;		line 179 in file "mcc_generated_files/tmr6.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  4143 ;;		 -> TMR6_DefaultInterruptHandler(1), 
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;		None
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  1    wreg      void 
  4148 ;; Registers used:
  4149 ;;		wreg, status,2, status,0
  4150 ;; Tracked objects:
  4151 ;;		On entry : 3F/39
  4152 ;;		On exit  : 3F/39
  4153 ;;		Unchanged: 3E/0
  4154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4155 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4158 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4159 ;;Total ram usage:        3 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; Hardware stack levels required when called:    4
  4162 ;; This function calls:
  4163 ;;		Nothing
  4164 ;; This function is called by:
  4165 ;;		_TMR6_Initialize
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           	psect	text28
  4170  003F72                     __ptext28:
  4171                           	opt callstack 0
  4172  003F72                     _TMR6_SetInterruptHandler:
  4173                           	opt callstack 24
  4174                           
  4175                           ; BSR set to: 57
  4176                           ;mcc_generated_files/tmr6.c: 179: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 180: {;mcc_generated_files/tmr6.c: 181:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
  4177                           
  4178                           ; BSR set to: 57
  4179                           ;incstack = 0
  4180  003F72  0060  F018  F145   	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
  4181  003F78  0060  F01C  F146   	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
  4182  003F7E  0060  F020  F147   	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
  4183                           
  4184                           ; BSR set to: 57
  4185  003F84  0012               	return		;funcret
  4186  003F86                     __end_of_TMR6_SetInterruptHandler:
  4187                           	opt callstack 0
  4188                           
  4189 ;; *************** function _TMR5_Initialize *****************
  4190 ;; Defined at:
  4191 ;;		line 66 in file "mcc_generated_files/tmr5.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;		None
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;		None
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  1    wreg      void 
  4198 ;; Registers used:
  4199 ;;		wreg, status,2, status,0, cstack
  4200 ;; Tracked objects:
  4201 ;;		On entry : 3F/3E
  4202 ;;		On exit  : 3F/39
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4207 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4208 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4209 ;;Total ram usage:        2 bytes
  4210 ;; Hardware stack levels used:    1
  4211 ;; Hardware stack levels required when called:    5
  4212 ;; This function calls:
  4213 ;;		_TMR5_SetInterruptHandler
  4214 ;; This function is called by:
  4215 ;;		_SYSTEM_Initialize
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text29
  4220  0037A6                     __ptext29:
  4221                           	opt callstack 0
  4222  0037A6                     _TMR5_Initialize:
  4223                           	opt callstack 24
  4224                           
  4225                           ; BSR set to: 62
  4226                           ;mcc_generated_files/tmr5.c: 71:     T5GCON = 0x00;
  4227                           
  4228                           ; BSR set to: 57
  4229                           ;incstack = 0
  4230  0037A6  0E00               	movlw	0
  4231  0037A8  6E9B               	movwf	155,c	;volatile
  4232                           
  4233                           ;mcc_generated_files/tmr5.c: 74:     T5GATE = 0x00;
  4234  0037AA  0E00               	movlw	0
  4235  0037AC  6E9C               	movwf	156,c	;volatile
  4236                           
  4237                           ;mcc_generated_files/tmr5.c: 77:     T5CLK = 0x01;
  4238  0037AE  0E01               	movlw	1
  4239  0037B0  6E9D               	movwf	157,c	;volatile
  4240                           
  4241                           ;mcc_generated_files/tmr5.c: 80:     TMR5H = 0x63;
  4242  0037B2  0E63               	movlw	99
  4243  0037B4  6E99               	movwf	153,c	;volatile
  4244                           
  4245                           ;mcc_generated_files/tmr5.c: 83:     TMR5L = 0xC0;
  4246  0037B6  0EC0               	movlw	192
  4247  0037B8  6E98               	movwf	152,c	;volatile
  4248                           
  4249                           ; BSR set to: 62
  4250                           ;mcc_generated_files/tmr5.c: 86:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  4251  0037BA  5098               	movf	152,w,c	;volatile
  4252  0037BC  006F FE64  F009    	movff	16281,??_TMR5_Initialize	;volatile
  4253  0037C2  6A0A               	clrf	(??_TMR5_Initialize+1)^0,c
  4254  0037C4  0060  F024  F00A   	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  4255  0037CA  6A09               	clrf	??_TMR5_Initialize^0,c
  4256  0037CC  1009               	iorwf	??_TMR5_Initialize^0,w,c
  4257  0037CE  0101               	movlb	1	; () banked
  4258  0037D0  6F6E               	movwf	_timer5ReloadVal& (0+255),b	;volatile
  4259  0037D2  500A               	movf	(??_TMR5_Initialize+1)^0,w,c
  4260  0037D4  6F6F               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
  4261                           
  4262                           ; BSR set to: 1
  4263                           ;mcc_generated_files/tmr5.c: 89:     PIR8bits.TMR5IF = 0;
  4264  0037D6  0139               	movlb	57	; () banked
  4265  0037D8  9DA8               	bcf	168,6,b	;volatile
  4266                           
  4267                           ; BSR set to: 57
  4268                           ;mcc_generated_files/tmr5.c: 92:     PIE8bits.TMR5IE = 1;
  4269  0037DA  8D98               	bsf	152,6,b	;volatile
  4270                           
  4271                           ; BSR set to: 57
  4272                           ;mcc_generated_files/tmr5.c: 95:     TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandl
      +                          er);
  4273  0037DC  0E60               	movlw	low _TMR5_DefaultInterruptHandler
  4274  0037DE  6E06               	movwf	TMR5_SetInterruptHandler@InterruptHandler^0,c
  4275  0037E0  0E3E               	movlw	high _TMR5_DefaultInterruptHandler
  4276  0037E2  6E07               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)^0,c
  4277  0037E4  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
  4278  0037E6  6E08               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)^0,c
  4279  0037E8  ECC3  F01F         	call	_TMR5_SetInterruptHandler	;wreg free
  4280                           
  4281                           ; BSR set to: 57
  4282                           ;mcc_generated_files/tmr5.c: 98:     T5CON = 0x31;
  4283  0037EC  0E31               	movlw	49
  4284  0037EE  6E9A               	movwf	154,c	;volatile
  4285                           
  4286                           ; BSR set to: 57
  4287  0037F0  0012               	return		;funcret
  4288  0037F2                     __end_of_TMR5_Initialize:
  4289                           	opt callstack 0
  4290                           
  4291 ;; *************** function _TMR5_SetInterruptHandler *****************
  4292 ;; Defined at:
  4293 ;;		line 194 in file "mcc_generated_files/tmr5.c"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;  InterruptHan    3    5[COMRAM] PTR FTN()void 
  4296 ;;		 -> TMR5_DefaultInterruptHandler(1), 
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;		None
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  1    wreg      void 
  4301 ;; Registers used:
  4302 ;;		wreg, status,2, status,0
  4303 ;; Tracked objects:
  4304 ;;		On entry : 3F/39
  4305 ;;		On exit  : 3F/39
  4306 ;;		Unchanged: 3E/0
  4307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4308 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4311 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4312 ;;Total ram usage:        3 bytes
  4313 ;; Hardware stack levels used:    1
  4314 ;; Hardware stack levels required when called:    4
  4315 ;; This function calls:
  4316 ;;		Nothing
  4317 ;; This function is called by:
  4318 ;;		_TMR5_Initialize
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           	psect	text30
  4323  003F86                     __ptext30:
  4324                           	opt callstack 0
  4325  003F86                     _TMR5_SetInterruptHandler:
  4326                           	opt callstack 24
  4327                           
  4328                           ; BSR set to: 57
  4329                           ;mcc_generated_files/tmr5.c: 195:     TMR5_InterruptHandler = InterruptHandler;
  4330                           
  4331                           ; BSR set to: 57
  4332                           ;incstack = 0
  4333  003F86  0060  F018  F142   	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
  4334  003F8C  0060  F01C  F143   	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
  4335  003F92  0060  F020  F144   	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
  4336                           
  4337                           ; BSR set to: 57
  4338  003F98  0012               	return		;funcret
  4339  003F9A                     __end_of_TMR5_SetInterruptHandler:
  4340                           	opt callstack 0
  4341                           
  4342 ;; *************** function _TMR2_Initialize *****************
  4343 ;; Defined at:
  4344 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4345 ;; Parameters:    Size  Location     Type
  4346 ;;		None
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;		None
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  1    wreg      void 
  4351 ;; Registers used:
  4352 ;;		wreg, status,2
  4353 ;; Tracked objects:
  4354 ;;		On entry : 3F/39
  4355 ;;		On exit  : 3F/39
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4362 ;;Total ram usage:        0 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; Hardware stack levels required when called:    4
  4365 ;; This function calls:
  4366 ;;		Nothing
  4367 ;; This function is called by:
  4368 ;;		_SYSTEM_Initialize
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           	psect	text31
  4373  003DF2                     __ptext31:
  4374                           	opt callstack 0
  4375  003DF2                     _TMR2_Initialize:
  4376                           	opt callstack 25
  4377                           
  4378                           ; BSR set to: 57
  4379                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
  4380                           
  4381                           ; BSR set to: 57
  4382                           ;incstack = 0
  4383  003DF2  0E01               	movlw	1
  4384  003DF4  6EAE               	movwf	174,c	;volatile
  4385                           
  4386                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  4387  003DF6  0E00               	movlw	0
  4388  003DF8  6EAD               	movwf	173,c	;volatile
  4389                           
  4390                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  4391  003DFA  0E00               	movlw	0
  4392  003DFC  6EAF               	movwf	175,c	;volatile
  4393                           
  4394                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
  4395  003DFE  0E63               	movlw	99
  4396  003E00  6EAB               	movwf	171,c	;volatile
  4397                           
  4398                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  4399  003E02  0E00               	movlw	0
  4400  003E04  6EAA               	movwf	170,c	;volatile
  4401                           
  4402                           ; BSR set to: 57
  4403                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  4404  003E06  95A4               	bcf	164,2,b	;volatile
  4405                           
  4406                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
  4407  003E08  0EC0               	movlw	192
  4408  003E0A  6EAC               	movwf	172,c	;volatile
  4409                           
  4410                           ; BSR set to: 57
  4411  003E0C  0012               	return		;funcret
  4412  003E0E                     __end_of_TMR2_Initialize:
  4413                           	opt callstack 0
  4414                           
  4415 ;; *************** function _SPI1_Initialize *****************
  4416 ;; Defined at:
  4417 ;;		line 64 in file "mcc_generated_files/spi1.c"
  4418 ;; Parameters:    Size  Location     Type
  4419 ;;		None
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;		None
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1    wreg      void 
  4424 ;; Registers used:
  4425 ;;		wreg, status,2
  4426 ;; Tracked objects:
  4427 ;;		On entry : 3F/39
  4428 ;;		On exit  : 3F/3D
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4435 ;;Total ram usage:        0 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    4
  4438 ;; This function calls:
  4439 ;;		Nothing
  4440 ;; This function is called by:
  4441 ;;		_SYSTEM_Initialize
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445                           	psect	text32
  4446  003E7A                     __ptext32:
  4447                           	opt callstack 0
  4448  003E7A                     _SPI1_Initialize:
  4449                           	opt callstack 25
  4450                           
  4451                           ; BSR set to: 57
  4452                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
  4453                           
  4454                           ; BSR set to: 57
  4455                           ;incstack = 0
  4456  003E7A  0E40               	movlw	64
  4457  003E7C  013D               	movlb	61	; () banked
  4458  003E7E  6F15               	movwf	21,b	;volatile
  4459                           
  4460                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
  4461  003E80  0E03               	movlw	3
  4462  003E82  6F16               	movwf	22,b	;volatile
  4463                           
  4464                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x0F;
  4465  003E84  0E0F               	movlw	15
  4466  003E86  6F19               	movwf	25,b	;volatile
  4467                           
  4468                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
  4469  003E88  0E00               	movlw	0
  4470  003E8A  6F1C               	movwf	28,b	;volatile
  4471                           
  4472                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x82;
  4473  003E8C  0E82               	movlw	130
  4474  003E8E  6F14               	movwf	20,b	;volatile
  4475                           
  4476                           ; BSR set to: 61
  4477  003E90  0012               	return		;funcret
  4478  003E92                     __end_of_SPI1_Initialize:
  4479                           	opt callstack 0
  4480                           
  4481 ;; *************** function _PWM8_Initialize *****************
  4482 ;; Defined at:
  4483 ;;		line 58 in file "mcc_generated_files/pwm8.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;		None
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;		None
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  1    wreg      void 
  4490 ;; Registers used:
  4491 ;;		wreg, status,2
  4492 ;; Tracked objects:
  4493 ;;		On entry : 3F/39
  4494 ;;		On exit  : 3F/3F
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4501 ;;Total ram usage:        0 bytes
  4502 ;; Hardware stack levels used:    1
  4503 ;; Hardware stack levels required when called:    4
  4504 ;; This function calls:
  4505 ;;		Nothing
  4506 ;; This function is called by:
  4507 ;;		_SYSTEM_Initialize
  4508 ;; This function uses a non-reentrant model
  4509 ;;
  4510                           
  4511                           	psect	text33
  4512  003E92                     __ptext33:
  4513                           	opt callstack 0
  4514  003E92                     _PWM8_Initialize:
  4515                           	opt callstack 25
  4516                           
  4517                           ; BSR set to: 57
  4518                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
  4519                           
  4520                           ; BSR set to: 61
  4521                           ;incstack = 0
  4522  003E92  0E80               	movlw	128
  4523  003E94  6E62               	movwf	98,c	;volatile
  4524                           
  4525                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x31;
  4526  003E96  0E31               	movlw	49
  4527  003E98  6E61               	movwf	97,c	;volatile
  4528                           
  4529                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0xC0;
  4530  003E9A  0EC0               	movlw	192
  4531  003E9C  6E60               	movwf	96,c	;volatile
  4532                           
  4533                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
  4534  003E9E  013F               	movlb	63	; () banked
  4535  003EA0  515F               	movf	95,w,b	;volatile
  4536  003EA2  0B3F               	andlw	-193
  4537  003EA4  0940               	iorlw	64
  4538  003EA6  6F5F               	movwf	95,b	;volatile
  4539                           
  4540                           ; BSR set to: 63
  4541  003EA8  0012               	return		;funcret
  4542  003EAA                     __end_of_PWM8_Initialize:
  4543                           	opt callstack 0
  4544                           
  4545 ;; *************** function _PMD_Initialize *****************
  4546 ;; Defined at:
  4547 ;;		line 85 in file "mcc_generated_files/mcc.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;		None
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;		None
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  1    wreg      void 
  4554 ;; Registers used:
  4555 ;;		wreg, status,2
  4556 ;; Tracked objects:
  4557 ;;		On entry : 3F/39
  4558 ;;		On exit  : 3F/39
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4565 ;;Total ram usage:        0 bytes
  4566 ;; Hardware stack levels used:    1
  4567 ;; Hardware stack levels required when called:    4
  4568 ;; This function calls:
  4569 ;;		Nothing
  4570 ;; This function is called by:
  4571 ;;		_SYSTEM_Initialize
  4572 ;; This function uses a non-reentrant model
  4573 ;;
  4574                           
  4575                           	psect	text34
  4576  003DAE                     __ptext34:
  4577                           	opt callstack 0
  4578  003DAE                     _PMD_Initialize:
  4579                           	opt callstack 25
  4580                           
  4581                           ; BSR set to: 57
  4582                           ;mcc_generated_files/mcc.c: 88:     PMD0 = 0x00;
  4583                           
  4584                           ; BSR set to: 63
  4585                           ;incstack = 0
  4586  003DAE  0E00               	movlw	0
  4587  003DB0  6FC0               	movwf	192,b	;volatile
  4588                           
  4589                           ;mcc_generated_files/mcc.c: 90:     PMD1 = 0x00;
  4590  003DB2  0E00               	movlw	0
  4591  003DB4  6FC1               	movwf	193,b	;volatile
  4592                           
  4593                           ;mcc_generated_files/mcc.c: 92:     PMD2 = 0x00;
  4594  003DB6  0E00               	movlw	0
  4595  003DB8  6FC2               	movwf	194,b	;volatile
  4596                           
  4597                           ;mcc_generated_files/mcc.c: 94:     PMD3 = 0x00;
  4598  003DBA  0E00               	movlw	0
  4599  003DBC  6FC3               	movwf	195,b	;volatile
  4600                           
  4601                           ;mcc_generated_files/mcc.c: 96:     PMD4 = 0x00;
  4602  003DBE  0E00               	movlw	0
  4603  003DC0  6FC4               	movwf	196,b	;volatile
  4604                           
  4605                           ;mcc_generated_files/mcc.c: 98:     PMD5 = 0x00;
  4606  003DC2  0E00               	movlw	0
  4607  003DC4  6FC5               	movwf	197,b	;volatile
  4608                           
  4609                           ;mcc_generated_files/mcc.c: 100:     PMD6 = 0x00;
  4610  003DC6  0E00               	movlw	0
  4611  003DC8  6FC6               	movwf	198,b	;volatile
  4612                           
  4613                           ;mcc_generated_files/mcc.c: 102:     PMD7 = 0x00;
  4614  003DCA  0E00               	movlw	0
  4615  003DCC  6FC7               	movwf	199,b	;volatile
  4616                           
  4617                           ; BSR set to: 57
  4618  003DCE  0012               	return		;funcret
  4619  003DD0                     __end_of_PMD_Initialize:
  4620                           	opt callstack 0
  4621                           
  4622 ;; *************** function _PIN_MANAGER_Initialize *****************
  4623 ;; Defined at:
  4624 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;		None
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;		None
  4629 ;; Return value:  Size  Location     Type
  4630 ;;                  1    wreg      void 
  4631 ;; Registers used:
  4632 ;;		wreg, status,2
  4633 ;; Tracked objects:
  4634 ;;		On entry : 3F/39
  4635 ;;		On exit  : 3F/3A
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4642 ;;Total ram usage:        0 bytes
  4643 ;; Hardware stack levels used:    1
  4644 ;; Hardware stack levels required when called:    4
  4645 ;; This function calls:
  4646 ;;		Nothing
  4647 ;; This function is called by:
  4648 ;;		_SYSTEM_Initialize
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652                           	psect	text35
  4653  003250                     __ptext35:
  4654                           	opt callstack 0
  4655  003250                     _PIN_MANAGER_Initialize:
  4656                           	opt callstack 25
  4657                           
  4658                           ; BSR set to: 57
  4659                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x01;
  4660                           
  4661                           ; BSR set to: 57
  4662                           ;incstack = 0
  4663  003250  0E01               	movlw	1
  4664  003252  6EBE               	movwf	190,c	;volatile
  4665                           
  4666                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x02;
  4667  003254  0E02               	movlw	2
  4668  003256  6EBD               	movwf	189,c	;volatile
  4669                           
  4670                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  4671  003258  0E00               	movlw	0
  4672  00325A  6EBA               	movwf	186,c	;volatile
  4673                           
  4674                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  4675  00325C  0E00               	movlw	0
  4676  00325E  6EBB               	movwf	187,c	;volatile
  4677                           
  4678                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x06;
  4679  003260  0E06               	movlw	6
  4680  003262  6EBC               	movwf	188,c	;volatile
  4681                           
  4682                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x06;
  4683  003264  0E06               	movlw	6
  4684  003266  6EC6               	movwf	198,c	;volatile
  4685                           
  4686                           ; BSR set to: 57
  4687                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  4688  003268  68C2               	setf	194,c	;volatile
  4689                           
  4690                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xBF;
  4691  00326A  0EBF               	movlw	191
  4692  00326C  6EC3               	movwf	195,c	;volatile
  4693                           
  4694                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x91;
  4695  00326E  0E91               	movlw	145
  4696  003270  6EC4               	movwf	196,c	;volatile
  4697                           
  4698                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFD;
  4699  003272  0EFD               	movlw	253
  4700  003274  6EC5               	movwf	197,c	;volatile
  4701                           
  4702                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFD;
  4703  003276  0EFD               	movlw	253
  4704  003278  013A               	movlb	58	; () banked
  4705  00327A  6F70               	movwf	112,b	;volatile
  4706                           
  4707                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
  4708  00327C  0E00               	movlw	0
  4709  00327E  6F60               	movwf	96,b	;volatile
  4710                           
  4711                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3F;
  4712  003280  0E3F               	movlw	63
  4713  003282  6F50               	movwf	80,b	;volatile
  4714                           
  4715                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x06;
  4716  003284  0E06               	movlw	6
  4717  003286  6F80               	movwf	128,b	;volatile
  4718                           
  4719                           ; BSR set to: 58
  4720                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  4721  003288  6940               	setf	64,b	;volatile
  4722                           
  4723                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  4724  00328A  0E00               	movlw	0
  4725  00328C  6F71               	movwf	113,b	;volatile
  4726                           
  4727                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  4728  00328E  0E00               	movlw	0
  4729  003290  6F81               	movwf	129,b	;volatile
  4730                           
  4731                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  4732  003292  0E00               	movlw	0
  4733  003294  6F51               	movwf	81,b	;volatile
  4734                           
  4735                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  4736  003296  0E00               	movlw	0
  4737  003298  6F41               	movwf	65,b	;volatile
  4738                           
  4739                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  4740  00329A  0E00               	movlw	0
  4741  00329C  6F61               	movwf	97,b	;volatile
  4742                           
  4743                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  4744  00329E  0E00               	movlw	0
  4745  0032A0  6F5A               	movwf	90,b	;volatile
  4746                           
  4747                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  4748  0032A2  0E00               	movlw	0
  4749  0032A4  6F5B               	movwf	91,b	;volatile
  4750                           
  4751                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  4752  0032A6  0E00               	movlw	0
  4753  0032A8  6F6A               	movwf	106,b	;volatile
  4754                           
  4755                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  4756  0032AA  0E00               	movlw	0
  4757  0032AC  6F6B               	movwf	107,b	;volatile
  4758                           
  4759                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  4760  0032AE  0E00               	movlw	0
  4761  0032B0  6F7A               	movwf	122,b	;volatile
  4762                           
  4763                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  4764  0032B2  0E00               	movlw	0
  4765  0032B4  6F7B               	movwf	123,b	;volatile
  4766                           
  4767                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  4768  0032B6  0E00               	movlw	0
  4769  0032B8  6F82               	movwf	130,b	;volatile
  4770                           
  4771                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  4772  0032BA  0E00               	movlw	0
  4773  0032BC  6F42               	movwf	66,b	;volatile
  4774                           
  4775                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
  4776  0032BE  0E00               	movlw	0
  4777  0032C0  6F52               	movwf	82,b	;volatile
  4778                           
  4779                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
  4780  0032C2  0E00               	movlw	0
  4781  0032C4  6F62               	movwf	98,b	;volatile
  4782                           
  4783                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  4784  0032C6  0E00               	movlw	0
  4785  0032C8  6F72               	movwf	114,b	;volatile
  4786                           
  4787                           ; BSR set to: 58
  4788                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  4789  0032CA  6943               	setf	67,b	;volatile
  4790                           
  4791                           ; BSR set to: 58
  4792                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  4793  0032CC  6953               	setf	83,b	;volatile
  4794                           
  4795                           ; BSR set to: 58
  4796                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  4797  0032CE  6963               	setf	99,b	;volatile
  4798                           
  4799                           ; BSR set to: 58
  4800                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  4801  0032D0  6973               	setf	115,b	;volatile
  4802                           
  4803                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  4804  0032D2  0E07               	movlw	7
  4805  0032D4  6F83               	movwf	131,b	;volatile
  4806                           
  4807                           ;mcc_generated_files/pin_manager.c: 128:     U2RXPPS = 0x0F;
  4808  0032D6  0E0F               	movlw	15
  4809  0032D8  6FE8               	movwf	232,b	;volatile
  4810                           
  4811                           ;mcc_generated_files/pin_manager.c: 129:     SPI1SCKPPS = 0x13;
  4812  0032DA  0E13               	movlw	19
  4813  0032DC  6FDE               	movwf	222,b	;volatile
  4814                           
  4815                           ;mcc_generated_files/pin_manager.c: 130:     RB6PPS = 0x16;
  4816  0032DE  0E16               	movlw	22
  4817  0032E0  6F0E               	movwf	14,b	;volatile
  4818                           
  4819                           ;mcc_generated_files/pin_manager.c: 131:     RC3PPS = 0x1E;
  4820  0032E2  0E1E               	movlw	30
  4821  0032E4  6F13               	movwf	19,b	;volatile
  4822                           
  4823                           ;mcc_generated_files/pin_manager.c: 132:     RD1PPS = 0x10;
  4824  0032E6  0E10               	movlw	16
  4825  0032E8  6F19               	movwf	25,b	;volatile
  4826                           
  4827                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
  4828  0032EA  0E1F               	movlw	31
  4829  0032EC  6F15               	movwf	21,b	;volatile
  4830                           
  4831                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
  4832  0032EE  0E13               	movlw	19
  4833  0032F0  6F16               	movwf	22,b	;volatile
  4834                           
  4835                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
  4836  0032F2  0E17               	movlw	23
  4837  0032F4  6FE5               	movwf	229,b	;volatile
  4838                           
  4839                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
  4840  0032F6  0E14               	movlw	20
  4841  0032F8  6FDF               	movwf	223,b	;volatile
  4842                           
  4843                           ; BSR set to: 58
  4844  0032FA  0012               	return		;funcret
  4845  0032FC                     __end_of_PIN_MANAGER_Initialize:
  4846                           	opt callstack 0
  4847                           
  4848 ;; *************** function _OSCILLATOR_Initialize *****************
  4849 ;; Defined at:
  4850 ;;		line 67 in file "mcc_generated_files/mcc.c"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;		None
  4853 ;; Auto vars:     Size  Location     Type
  4854 ;;		None
  4855 ;; Return value:  Size  Location     Type
  4856 ;;                  1    wreg      void 
  4857 ;; Registers used:
  4858 ;;		wreg, status,2
  4859 ;; Tracked objects:
  4860 ;;		On entry : 3F/3A
  4861 ;;		On exit  : 3F/39
  4862 ;;		Unchanged: 0/0
  4863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4868 ;;Total ram usage:        0 bytes
  4869 ;; Hardware stack levels used:    1
  4870 ;; Hardware stack levels required when called:    4
  4871 ;; This function calls:
  4872 ;;		Nothing
  4873 ;; This function is called by:
  4874 ;;		_SYSTEM_Initialize
  4875 ;; This function uses a non-reentrant model
  4876 ;;
  4877                           
  4878                           	psect	text36
  4879  003E0E                     __ptext36:
  4880                           	opt callstack 0
  4881  003E0E                     _OSCILLATOR_Initialize:
  4882                           	opt callstack 25
  4883                           
  4884                           ; BSR set to: 58
  4885                           ;mcc_generated_files/mcc.c: 70:     OSCCON1 = 0x20;
  4886                           
  4887                           ; BSR set to: 58
  4888                           ;incstack = 0
  4889  003E0E  0E20               	movlw	32
  4890  003E10  0139               	movlb	57	; () banked
  4891  003E12  6FD9               	movwf	217,b	;volatile
  4892                           
  4893                           ;mcc_generated_files/mcc.c: 72:     OSCCON3 = 0x00;
  4894  003E14  0E00               	movlw	0
  4895  003E16  6FDB               	movwf	219,b	;volatile
  4896                           
  4897                           ;mcc_generated_files/mcc.c: 74:     OSCEN = 0x00;
  4898  003E18  0E00               	movlw	0
  4899  003E1A  6FDD               	movwf	221,b	;volatile
  4900                           
  4901                           ;mcc_generated_files/mcc.c: 76:     OSCFRQ = 0x08;
  4902  003E1C  0E08               	movlw	8
  4903  003E1E  6FDF               	movwf	223,b	;volatile
  4904                           
  4905                           ;mcc_generated_files/mcc.c: 78:     OSCTUNE = 0x00;
  4906  003E20  0E00               	movlw	0
  4907  003E22  6FDE               	movwf	222,b	;volatile
  4908  003E24                     l68:
  4909                           
  4910                           ; BSR set to: 57
  4911                           ;mcc_generated_files/mcc.c: 80:     while(PLLR == 0)
  4912  003E24  B1DC               	btfsc	220,0,b	;volatile
  4913  003E26  0012               	return	
  4914  003E28  D7FD               	goto	l68
  4915  003E2A                     __end_of_OSCILLATOR_Initialize:
  4916                           	opt callstack 0
  4917                           
  4918 ;; *************** function _INTERRUPT_Initialize *****************
  4919 ;; Defined at:
  4920 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;		None
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;  state           1    5[COMRAM] _Bool 
  4925 ;; Return value:  Size  Location     Type
  4926 ;;                  1    wreg      void 
  4927 ;; Registers used:
  4928 ;;		wreg, status,2
  4929 ;; Tracked objects:
  4930 ;;		On entry : 3F/0
  4931 ;;		On exit  : 3F/39
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4935 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4937 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4938 ;;Total ram usage:        1 bytes
  4939 ;; Hardware stack levels used:    1
  4940 ;; Hardware stack levels required when called:    4
  4941 ;; This function calls:
  4942 ;;		Nothing
  4943 ;; This function is called by:
  4944 ;;		_SYSTEM_Initialize
  4945 ;; This function uses a non-reentrant model
  4946 ;;
  4947                           
  4948                           	psect	text37
  4949  00383A                     __ptext37:
  4950                           	opt callstack 0
  4951  00383A                     _INTERRUPT_Initialize:
  4952                           	opt callstack 25
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
  4956                           
  4957                           ; BSR set to: 57
  4958                           ;incstack = 0
  4959  00383A  8AD2               	bsf	210,5,c	;volatile
  4960                           
  4961                           ; BSR set to: 0
  4962                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
  4963  00383C  0E00               	movlw	0
  4964  00383E  BED2               	btfsc	16338,7,c	;volatile
  4965  003840  0E01               	movlw	1
  4966  003842  6E06               	movwf	INTERRUPT_Initialize@state^0,c
  4967                           
  4968                           ; BSR set to: 0
  4969                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
  4970  003844  9ED2               	bcf	16338,7,c	;volatile
  4971                           
  4972                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
  4973  003846  0E55               	movlw	85
  4974  003848  6ED4               	movwf	212,c	;volatile
  4975                           
  4976                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
  4977  00384A  0EAA               	movlw	170
  4978  00384C  6ED4               	movwf	212,c	;volatile
  4979                           
  4980                           ; BSR set to: 0
  4981                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
  4982  00384E  90D4               	bcf	212,0,c	;volatile
  4983                           
  4984                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
  4985  003850  0E00               	movlw	0
  4986  003852  0138               	movlb	56	; () banked
  4987  003854  6F9F               	movwf	159,b	;volatile
  4988                           
  4989                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
  4990  003856  0E00               	movlw	0
  4991  003858  6F9E               	movwf	158,b	;volatile
  4992                           
  4993                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
  4994  00385A  0E08               	movlw	8
  4995  00385C  6F9D               	movwf	157,b	;volatile
  4996                           
  4997                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
  4998  00385E  0E55               	movlw	85
  4999  003860  6ED4               	movwf	212,c	;volatile
  5000                           
  5001                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
  5002  003862  0EAA               	movlw	170
  5003  003864  6ED4               	movwf	212,c	;volatile
  5004                           
  5005                           ; BSR set to: 56
  5006                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
  5007  003866  80D4               	bsf	212,0,c	;volatile
  5008                           
  5009                           ; BSR set to: 56
  5010                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
  5011  003868  B006               	btfsc	INTERRUPT_Initialize@state^0,0,c
  5012  00386A  D002               	bra	u3915
  5013  00386C  9ED2               	bcf	16338,7,c	;volatile
  5014  00386E  D001               	bra	u3916
  5015  003870                     u3915:
  5016  003870  8ED2               	bsf	16338,7,c	;volatile
  5017  003872                     u3916:
  5018                           
  5019                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR6bits.U2TXIP = 1;
  5020  003872  0139               	movlb	57	; () banked
  5021  003874  8786               	bsf	134,3,b	;volatile
  5022                           
  5023                           ; BSR set to: 57
  5024                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR6bits.U2RXIP = 1;
  5025  003876  8586               	bsf	134,2,b	;volatile
  5026                           
  5027                           ; BSR set to: 57
  5028                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR3bits.U1TXIP = 1;
  5029  003878  8983               	bsf	131,4,b	;volatile
  5030                           
  5031                           ; BSR set to: 57
  5032                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR3bits.U1RXIP = 1;
  5033  00387A  8783               	bsf	131,3,b	;volatile
  5034                           
  5035                           ; BSR set to: 57
  5036                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR9bits.TMR6IP = 1;
  5037  00387C  8189               	bsf	137,0,b	;volatile
  5038                           
  5039                           ; BSR set to: 57
  5040                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR8bits.TMR5IP = 1;
  5041  00387E  8D88               	bsf	136,6,b	;volatile
  5042                           
  5043                           ; BSR set to: 57
  5044  003880  0012               	return		;funcret
  5045  003882                     __end_of_INTERRUPT_Initialize:
  5046                           	opt callstack 0
  5047                           
  5048 ;; *************** function _FVR_Initialize *****************
  5049 ;; Defined at:
  5050 ;;		line 58 in file "mcc_generated_files/fvr.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;		None
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;		None
  5055 ;; Return value:  Size  Location     Type
  5056 ;;                  1    wreg      void 
  5057 ;; Registers used:
  5058 ;;		wreg, status,2
  5059 ;; Tracked objects:
  5060 ;;		On entry : 3F/39
  5061 ;;		On exit  : 3F/3E
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5068 ;;Total ram usage:        0 bytes
  5069 ;; Hardware stack levels used:    1
  5070 ;; Hardware stack levels required when called:    4
  5071 ;; This function calls:
  5072 ;;		Nothing
  5073 ;; This function is called by:
  5074 ;;		_SYSTEM_Initialize
  5075 ;; This function uses a non-reentrant model
  5076 ;;
  5077                           
  5078                           	psect	text38
  5079  003FE0                     __ptext38:
  5080                           	opt callstack 0
  5081  003FE0                     _FVR_Initialize:
  5082                           	opt callstack 25
  5083                           
  5084                           ; BSR set to: 57
  5085                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAD;
  5086                           
  5087                           ; BSR set to: 57
  5088                           ;incstack = 0
  5089  003FE0  0EAD               	movlw	173
  5090  003FE2  013E               	movlb	62	; () banked
  5091  003FE4  6FC1               	movwf	193,b	;volatile
  5092                           
  5093                           ; BSR set to: 62
  5094  003FE6  0012               	return		;funcret
  5095  003FE8                     __end_of_FVR_Initialize:
  5096                           	opt callstack 0
  5097                           
  5098 ;; *************** function _ADCC_Initialize *****************
  5099 ;; Defined at:
  5100 ;;		line 62 in file "mcc_generated_files/adcc.c"
  5101 ;; Parameters:    Size  Location     Type
  5102 ;;		None
  5103 ;; Auto vars:     Size  Location     Type
  5104 ;;		None
  5105 ;; Return value:  Size  Location     Type
  5106 ;;                  1    wreg      void 
  5107 ;; Registers used:
  5108 ;;		wreg, status,2
  5109 ;; Tracked objects:
  5110 ;;		On entry : 3F/39
  5111 ;;		On exit  : 3F/3E
  5112 ;;		Unchanged: 0/0
  5113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5118 ;;Total ram usage:        0 bytes
  5119 ;; Hardware stack levels used:    1
  5120 ;; Hardware stack levels required when called:    4
  5121 ;; This function calls:
  5122 ;;		Nothing
  5123 ;; This function is called by:
  5124 ;;		_SYSTEM_Initialize
  5125 ;; This function uses a non-reentrant model
  5126 ;;
  5127                           
  5128                           	psect	text39
  5129  00369E                     __ptext39:
  5130                           	opt callstack 0
  5131  00369E                     _ADCC_Initialize:
  5132                           	opt callstack 25
  5133                           
  5134                           ; BSR set to: 57
  5135                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  5136                           
  5137                           ; BSR set to: 62
  5138                           ;incstack = 0
  5139  00369E  0E00               	movlw	0
  5140  0036A0  013E               	movlb	62	; () banked
  5141  0036A2  6FDE               	movwf	222,b	;volatile
  5142                           
  5143                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  5144  0036A4  0E00               	movlw	0
  5145  0036A6  6FDF               	movwf	223,b	;volatile
  5146                           
  5147                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  5148  0036A8  0E00               	movlw	0
  5149  0036AA  6FE0               	movwf	224,b	;volatile
  5150                           
  5151                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  5152  0036AC  0E00               	movlw	0
  5153  0036AE  6FE1               	movwf	225,b	;volatile
  5154                           
  5155                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  5156  0036B0  0E00               	movlw	0
  5157  0036B2  6FE4               	movwf	228,b	;volatile
  5158                           
  5159                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  5160  0036B4  0E00               	movlw	0
  5161  0036B6  6FE5               	movwf	229,b	;volatile
  5162                           
  5163                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
  5164  0036B8  0E00               	movlw	0
  5165  0036BA  6FEA               	movwf	234,b	;volatile
  5166                           
  5167                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
  5168  0036BC  0E00               	movlw	0
  5169  0036BE  6FEC               	movwf	236,b	;volatile
  5170                           
  5171                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  5172  0036C0  0E00               	movlw	0
  5173  0036C2  6FF1               	movwf	241,b	;volatile
  5174                           
  5175                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x00;
  5176  0036C4  0E00               	movlw	0
  5177  0036C6  6FF3               	movwf	243,b	;volatile
  5178                           
  5179                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x00;
  5180  0036C8  0E00               	movlw	0
  5181  0036CA  6FF4               	movwf	244,b	;volatile
  5182                           
  5183                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
  5184  0036CC  0E00               	movlw	0
  5185  0036CE  6FF5               	movwf	245,b	;volatile
  5186                           
  5187                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
  5188  0036D0  0E00               	movlw	0
  5189  0036D2  6FF6               	movwf	246,b	;volatile
  5190                           
  5191                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
  5192  0036D4  0E00               	movlw	0
  5193  0036D6  6FF7               	movwf	247,b	;volatile
  5194                           
  5195                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
  5196  0036D8  0E00               	movlw	0
  5197  0036DA  6FF9               	movwf	249,b	;volatile
  5198                           
  5199                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0xF4;
  5200  0036DC  0EF4               	movlw	244
  5201  0036DE  6FFA               	movwf	250,b	;volatile
  5202                           
  5203                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x20;
  5204  0036E0  0E20               	movlw	32
  5205  0036E2  6FFB               	movwf	251,b	;volatile
  5206                           
  5207                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
  5208  0036E4  0E00               	movlw	0
  5209  0036E6  6FFC               	movwf	252,b	;volatile
  5210                           
  5211                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
  5212  0036E8  0E00               	movlw	0
  5213  0036EA  6FFD               	movwf	253,b	;volatile
  5214                           
  5215                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
  5216  0036EC  0E00               	movlw	0
  5217  0036EE  6FFE               	movwf	254,b	;volatile
  5218                           
  5219                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x3F;
  5220  0036F0  0E3F               	movlw	63
  5221  0036F2  6FFF               	movwf	255,b	;volatile
  5222                           
  5223                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
  5224  0036F4  0E84               	movlw	132
  5225  0036F6  6FF8               	movwf	248,b	;volatile
  5226                           
  5227                           ; BSR set to: 62
  5228  0036F8  0012               	return		;funcret
  5229  0036FA                     __end_of_ADCC_Initialize:
  5230                           	opt callstack 0
  5231                           
  5232 ;; *************** function _Digital232_init *****************
  5233 ;; Defined at:
  5234 ;;		line 9 in file "d232.c"
  5235 ;; Parameters:    Size  Location     Type
  5236 ;;		None
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;		None
  5239 ;; Return value:  Size  Location     Type
  5240 ;;                  1    wreg      void 
  5241 ;; Registers used:
  5242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5243 ;; Tracked objects:
  5244 ;;		On entry : 0/1
  5245 ;;		On exit  : 0/0
  5246 ;;		Unchanged: 0/0
  5247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5252 ;;Total ram usage:        0 bytes
  5253 ;; Hardware stack levels used:    1
  5254 ;; Hardware stack levels required when called:   13
  5255 ;; This function calls:
  5256 ;;		_ADCC_StartConversion
  5257 ;;		_StartTimer
  5258 ;;		_UART2_Read
  5259 ;;		_UART2_is_rx_ready
  5260 ;;		_WaitMs
  5261 ;;		_printf
  5262 ;; This function is called by:
  5263 ;;		_main
  5264 ;; This function uses a non-reentrant model
  5265 ;;
  5266                           
  5267                           	psect	text40
  5268  002EA0                     __ptext40:
  5269                           	opt callstack 0
  5270  002EA0                     _Digital232_init:
  5271                           	opt callstack 17
  5272                           
  5273                           ;d232.c: 11:  printf("%s", "XQ\r");
  5274                           
  5275                           ; BSR set to: 62
  5276                           ;incstack = 0
  5277  002EA0  0E4F               	movlw	low STR_5
  5278  002EA2  0100               	movlb	0	; () banked
  5279  002EA4  6F64               	movwf	printf@fmt& (0+255),b
  5280  002EA6  0E4B               	movlw	low STR_6
  5281  002EA8  6F65               	movwf	(?_printf+1)& (0+255),b
  5282  002EAA  5165               	movf	(?_printf+1)& (0+255),w,b
  5283  002EAC  A4D8               	btfss	status,2,c
  5284  002EAE  0E20               	movlw	high __smallconst
  5285  002EB0  6F66               	movwf	(?_printf+2)& (0+255),b
  5286  002EB2  EC15  F01F         	call	_printf	;wreg free
  5287                           
  5288                           ; BSR set to: 1
  5289                           ;d232.c: 12:  WaitMs(5);
  5290  002EB6  0E00               	movlw	0
  5291  002EB8  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  5292  002EBA  0E05               	movlw	5
  5293  002EBC  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  5294  002EBE  ECE5  F01D         	call	_WaitMs	;wreg free
  5295                           
  5296                           ;d232.c: 13:  printf("%s", "T2\r");
  5297  002EC2  0E4F               	movlw	low STR_5
  5298  002EC4  0100               	movlb	0	; () banked
  5299  002EC6  6F64               	movwf	printf@fmt& (0+255),b
  5300  002EC8  0E3B               	movlw	low STR_8
  5301  002ECA  6F65               	movwf	(?_printf+1)& (0+255),b
  5302  002ECC  5165               	movf	(?_printf+1)& (0+255),w,b
  5303  002ECE  A4D8               	btfss	status,2,c
  5304  002ED0  0E20               	movlw	high __smallconst
  5305  002ED2  6F66               	movwf	(?_printf+2)& (0+255),b
  5306  002ED4  EC15  F01F         	call	_printf	;wreg free
  5307                           
  5308                           ;d232.c: 14:  WaitMs(800);
  5309  002ED8  0E03               	movlw	3
  5310  002EDA  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  5311  002EDC  0E20               	movlw	32
  5312  002EDE  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  5313  002EE0  ECE5  F01D         	call	_WaitMs	;wreg free
  5314                           
  5315                           ;d232.c: 15:  printf("%s", "C4\r");
  5316  002EE4  0E4F               	movlw	low STR_5
  5317  002EE6  0100               	movlb	0	; () banked
  5318  002EE8  6F64               	movwf	printf@fmt& (0+255),b
  5319  002EEA  0E3F               	movlw	low STR_10
  5320  002EEC  6F65               	movwf	(?_printf+1)& (0+255),b
  5321  002EEE  5165               	movf	(?_printf+1)& (0+255),w,b
  5322  002EF0  A4D8               	btfss	status,2,c
  5323  002EF2  0E20               	movlw	high __smallconst
  5324  002EF4  6F66               	movwf	(?_printf+2)& (0+255),b
  5325  002EF6  EC15  F01F         	call	_printf	;wreg free
  5326                           
  5327                           ; BSR set to: 1
  5328                           ;d232.c: 16:  WaitMs(5);
  5329  002EFA  0E00               	movlw	0
  5330  002EFC  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  5331  002EFE  0E05               	movlw	5
  5332  002F00  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  5333  002F02  ECE5  F01D         	call	_WaitMs	;wreg free
  5334                           
  5335                           ;d232.c: 17:  printf("%s", "F4\r");
  5336  002F06  0E4F               	movlw	low STR_5
  5337  002F08  0100               	movlb	0	; () banked
  5338  002F0A  6F64               	movwf	printf@fmt& (0+255),b
  5339  002F0C  0E43               	movlw	low STR_12
  5340  002F0E  6F65               	movwf	(?_printf+1)& (0+255),b
  5341  002F10  5165               	movf	(?_printf+1)& (0+255),w,b
  5342  002F12  A4D8               	btfss	status,2,c
  5343  002F14  0E20               	movlw	high __smallconst
  5344  002F16  6F66               	movwf	(?_printf+2)& (0+255),b
  5345  002F18  EC15  F01F         	call	_printf	;wreg free
  5346                           
  5347                           ; BSR set to: 1
  5348                           ;d232.c: 18:  WaitMs(5);
  5349  002F1C  0E00               	movlw	0
  5350  002F1E  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  5351  002F20  0E05               	movlw	5
  5352  002F22  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  5353  002F24  ECE5  F01D         	call	_WaitMs	;wreg free
  5354                           
  5355                           ;d232.c: 19:  printf("%s", "M4\r");
  5356  002F28  0E4F               	movlw	low STR_5
  5357  002F2A  0100               	movlb	0	; () banked
  5358  002F2C  6F64               	movwf	printf@fmt& (0+255),b
  5359  002F2E  0E47               	movlw	low STR_14
  5360  002F30  6F65               	movwf	(?_printf+1)& (0+255),b
  5361  002F32  5165               	movf	(?_printf+1)& (0+255),w,b
  5362  002F34  A4D8               	btfss	status,2,c
  5363  002F36  0E20               	movlw	high __smallconst
  5364  002F38  6F66               	movwf	(?_printf+2)& (0+255),b
  5365  002F3A  EC15  F01F         	call	_printf	;wreg free
  5366                           
  5367                           ;d232.c: 20:  WaitMs(5);
  5368  002F3E  0E00               	movlw	0
  5369  002F40  6E0C               	movwf	(WaitMs@numMilliseconds+1)^0,c
  5370  002F42  0E05               	movlw	5
  5371  002F44  6E0B               	movwf	WaitMs@numMilliseconds^0,c
  5372  002F46  ECE5  F01D         	call	_WaitMs	;wreg free
  5373                           
  5374                           ;d232.c: 21:  IO.d232 = D232_INIT;
  5375  002F4A  0E01               	movlw	1
  5376  002F4C  0101               	movlb	1	; () banked
  5377  002F4E  6FAC               	movwf	(_IO+13)& (0+255),b
  5378                           
  5379                           ; BSR set to: 1
  5380                           ;d232.c: 25:  if (UART2_is_rx_ready())
  5381  002F50  ECF4  F01F         	call	_UART2_is_rx_ready	;wreg free
  5382  002F54  0900               	iorlw	0
  5383  002F56  A4D8               	btfss	status,2,c
  5384                           
  5385                           ; BSR set to: 0
  5386                           ;d232.c: 26:   UART2_Read();
  5387  002F58  EC41  F01C         	call	_UART2_Read	;wreg free
  5388                           
  5389                           ;d232.c: 27:  IO.io = IO_INIT;
  5390  002F5C  0E01               	movlw	1
  5391  002F5E  0101               	movlb	1	; () banked
  5392  002F60  6FAB               	movwf	(_IO+12)& (0+255),b
  5393                           
  5394                           ; BSR set to: 1
  5395                           ;d232.c: 28:  IO.srq = S_IDLE;
  5396  002F62  0E00               	movlw	0
  5397  002F64  6FAD               	movwf	(_IO+14)& (0+255),b
  5398                           
  5399                           ; BSR set to: 1
  5400                           ;d232.c: 29:  IO.srq_value = 0;
  5401  002F66  0E00               	movlw	0
  5402  002F68  6FAE               	movwf	(_IO+15)& (0+255),b
  5403                           
  5404                           ; BSR set to: 1
  5405                           ;d232.c: 30:  IO.button_value = 0;
  5406  002F6A  0E00               	movlw	0
  5407  002F6C  6FB5               	movwf	(_IO+22)& (0+255),b
  5408  002F6E  0E00               	movlw	0
  5409  002F70  6FB4               	movwf	(_IO+21)& (0+255),b
  5410                           
  5411                           ; BSR set to: 1
  5412                           ;d232.c: 31:  ADCC_StartConversion(channel_VSS);
  5413  002F72  0E3B               	movlw	59
  5414  002F74  ECD7  F01F         	call	_ADCC_StartConversion
  5415                           
  5416                           ; BSR set to: 62
  5417                           ;d232.c: 32:  StartTimer(TMR_SPS, 10);
  5418  002F78  0E00               	movlw	0
  5419  002F7A  6E07               	movwf	(StartTimer@count+1)^0,c
  5420  002F7C  0E0A               	movlw	10
  5421  002F7E  6E06               	movwf	StartTimer@count^0,c
  5422  002F80  0E03               	movlw	3
  5423  002F82  EC6B  F01D         	call	_StartTimer
  5424  002F86  0012               	return		;funcret
  5425  002F88                     __end_of_Digital232_init:
  5426                           	opt callstack 0
  5427                           
  5428 ;; *************** function _WaitMs *****************
  5429 ;; Defined at:
  5430 ;;		line 31 in file "timers.c"
  5431 ;; Parameters:    Size  Location     Type
  5432 ;;  numMilliseco    2   10[COMRAM] const unsigned short 
  5433 ;; Auto vars:     Size  Location     Type
  5434 ;;		None
  5435 ;; Return value:  Size  Location     Type
  5436 ;;                  1    wreg      void 
  5437 ;; Registers used:
  5438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5439 ;; Tracked objects:
  5440 ;;		On entry : 3F/1
  5441 ;;		On exit  : 0/0
  5442 ;;		Unchanged: 0/0
  5443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5444 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5447 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5448 ;;Total ram usage:        2 bytes
  5449 ;; Hardware stack levels used:    1
  5450 ;; Hardware stack levels required when called:    5
  5451 ;; This function calls:
  5452 ;;		_StartTimer
  5453 ;;		_TimerDone
  5454 ;; This function is called by:
  5455 ;;		_Digital232_init
  5456 ;; This function uses a non-reentrant model
  5457 ;;
  5458                           
  5459                           	psect	text41
  5460  003BCA                     __ptext41:
  5461                           	opt callstack 0
  5462  003BCA                     _WaitMs:
  5463                           	opt callstack 24
  5464                           
  5465                           ; BSR set to: 1
  5466                           ;timers.c: 31: void WaitMs(const uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  5467                           
  5468                           ;incstack = 0
  5469  003BCA  0060  F02C  F006   	movff	WaitMs@numMilliseconds,StartTimer@count
  5470  003BD0  0060  F030  F007   	movff	WaitMs@numMilliseconds+1,StartTimer@count+1
  5471  003BD6  0E00               	movlw	0
  5472  003BD8  EC6B  F01D         	call	_StartTimer
  5473                           
  5474                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  5475  003BDC  D005               	goto	l5182
  5476  003BDE                     l1190:
  5477                           
  5478                           ;timers.c: 35:   __nop();
  5479  003BDE  F000               	nop	
  5480                           
  5481                           ;timers.c: 36:   __nop();
  5482  003BE0  F000               	nop	
  5483                           
  5484                           ;timers.c: 37:   __nop();
  5485  003BE2  F000               	nop	
  5486                           
  5487                           ;timers.c: 38:   __nop();
  5488  003BE4  F000               	nop	
  5489  003BE6  0004               	clrwdt		;# 
  5490  003BE8                     l5182:
  5491                           
  5492                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  5493  003BE8  0E00               	movlw	0
  5494  003BEA  EC36  F01E         	call	_TimerDone
  5495  003BEE  0900               	iorlw	0
  5496  003BF0  A4D8               	btfss	status,2,c
  5497  003BF2  0012               	return	
  5498  003BF4  D7F4               	goto	l1190
  5499  003BF6                     __end_of_WaitMs:
  5500                           	opt callstack 0
  5501                           
  5502 ;; *************** function _Digital232_RW *****************
  5503 ;; Defined at:
  5504 ;;		line 35 in file "d232.c"
  5505 ;; Parameters:    Size  Location     Type
  5506 ;;		None
  5507 ;; Auto vars:     Size  Location     Type
  5508 ;;  j               1   13[BANK0 ] unsigned char 
  5509 ;;  i               1   12[BANK0 ] unsigned char 
  5510 ;; Return value:  Size  Location     Type
  5511 ;;                  1    wreg      _Bool 
  5512 ;; Registers used:
  5513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5514 ;; Tracked objects:
  5515 ;;		On entry : 0/0
  5516 ;;		On exit  : 3F/1
  5517 ;;		Unchanged: 0/0
  5518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5520 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5521 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5522 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5523 ;;Total ram usage:        4 bytes
  5524 ;; Hardware stack levels used:    1
  5525 ;; Hardware stack levels required when called:   13
  5526 ;; This function calls:
  5527 ;;		_ADCC_GetConversionResult
  5528 ;;		_ADCC_IsConversionDone
  5529 ;;		_ADCC_StartConversion
  5530 ;;		_PWM8_LoadDutyValue
  5531 ;;		_StartTimer
  5532 ;;		_TimerDone
  5533 ;;		_UART2_Read
  5534 ;;		_UART2_Write
  5535 ;;		_UART2_is_rx_ready
  5536 ;;		_printf
  5537 ;; This function is called by:
  5538 ;;		_main
  5539 ;; This function uses a non-reentrant model
  5540 ;;
  5541                           
  5542                           	psect	text42
  5543  002586                     __ptext42:
  5544                           	opt callstack 0
  5545  002586                     _Digital232_RW:
  5546                           	opt callstack 17
  5547                           
  5548                           ;incstack = 0
  5549  002586  0E00               	movlw	0
  5550  002588  0100               	movlb	0	; () banked
  5551  00258A  6F6D               	movwf	Digital232_RW@j& (0+255),b
  5552                           
  5553                           ; BSR set to: 0
  5554                           ;d232.c: 38:  static uint8_t x = 0;;d232.c: 41:  if (!TimerDone(TMR_SPS)) {
  5555  00258C  0E03               	movlw	3
  5556  00258E  EC36  F01E         	call	_TimerDone
  5557  002592  0900               	iorlw	0
  5558  002594  A4D8               	btfss	status,2,c
  5559  002596  D005               	goto	l5308
  5560                           
  5561                           ;d232.c: 42:   IO.io = IO_IDLE;
  5562  002598  0E00               	movlw	0
  5563  00259A  0101               	movlb	1	; () banked
  5564  00259C  6FAB               	movwf	(_IO+12)& (0+255),b
  5565                           
  5566                           ; BSR set to: 1
  5567                           ;d232.c: 43:   return 0;
  5568  00259E  0E00               	movlw	0
  5569  0025A0  0012               	return	
  5570  0025A2                     l5308:
  5571                           
  5572                           ;d232.c: 46:  StartTimer(TMR_SPS, 10 + IO.speed + IO.slower);
  5573  0025A2  0101               	movlb	1	; () banked
  5574  0025A4  51B8               	movf	(_IO+25)& (0+255),w,b
  5575  0025A6  25B6               	addwf	(_IO+23)& (0+255),w,b
  5576  0025A8  0100               	movlb	0	; () banked
  5577  0025AA  6F6A               	movwf	??_Digital232_RW& (0+255),b
  5578  0025AC  0101               	movlb	1	; () banked
  5579  0025AE  51B9               	movf	(_IO+26)& (0+255),w,b
  5580  0025B0  21B7               	addwfc	(_IO+24)& (0+255),w,b
  5581  0025B2  0100               	movlb	0	; () banked
  5582  0025B4  6F6B               	movwf	(??_Digital232_RW+1)& (0+255),b
  5583  0025B6  0E0A               	movlw	10
  5584  0025B8  256A               	addwf	??_Digital232_RW& (0+255),w,b
  5585  0025BA  6E06               	movwf	StartTimer@count^0,c
  5586  0025BC  0E00               	movlw	0
  5587  0025BE  216B               	addwfc	(??_Digital232_RW+1)& (0+255),w,b
  5588  0025C0  6E07               	movwf	(StartTimer@count+1)^0,c
  5589  0025C2  0E03               	movlw	3
  5590  0025C4  EC6B  F01D         	call	_StartTimer
  5591                           
  5592                           ;d232.c: 48:  ADCC_StartConversion(channel_ANA0);
  5593  0025C8  0E00               	movlw	0
  5594  0025CA  ECD7  F01F         	call	_ADCC_StartConversion
  5595  0025CE                     l5312:
  5596                           
  5597                           ; BSR set to: 62
  5598  0025CE  ECDF  F01F         	call	_ADCC_IsConversionDone	;wreg free
  5599  0025D2  0900               	iorlw	0
  5600  0025D4  B4D8               	btfsc	status,2,c
  5601  0025D6  D7FB               	goto	l5312
  5602                           
  5603                           ; BSR set to: 62
  5604                           ;d232.c: 50:  IO.button_value = ADCC_GetConversionResult();
  5605  0025D8  ECCD  F01F         	call	_ADCC_GetConversionResult	;wreg free
  5606  0025DC  0060  F018  F1B4   	movff	?_ADCC_GetConversionResult,_IO+21
  5607  0025E2  0060  F01C  F1B5   	movff	?_ADCC_GetConversionResult+1,_IO+22
  5608                           
  5609                           ; BSR set to: 62
  5610                           ;d232.c: 55:  IO.srq = S_IDLE;
  5611  0025E8  0E00               	movlw	0
  5612  0025EA  0101               	movlb	1	; () banked
  5613  0025EC  6FAD               	movwf	(_IO+14)& (0+255),b
  5614                           
  5615                           ; BSR set to: 1
  5616                           ;d232.c: 57:  if (UART2_is_rx_ready()) {
  5617  0025EE  ECF4  F01F         	call	_UART2_is_rx_ready	;wreg free
  5618  0025F2  0900               	iorlw	0
  5619  0025F4  B4D8               	btfsc	status,2,c
  5620  0025F6  D040               	goto	l5344
  5621                           
  5622                           ; BSR set to: 0
  5623                           ;d232.c: 58:   j = UART2_Read();
  5624  0025F8  EC41  F01C         	call	_UART2_Read	;wreg free
  5625  0025FC  0100               	movlb	0	; () banked
  5626  0025FE  6F6D               	movwf	Digital232_RW@j& (0+255),b
  5627                           
  5628                           ;d232.c: 62:   switch (IO.srq) {
  5629  002600  D021               	goto	l5342
  5630  002602                     l5322:
  5631                           
  5632                           ; BSR set to: 0
  5633                           ;d232.c: 64:    if (j == 'S')
  5634  002602  0E53               	movlw	83
  5635  002604  196D               	xorwf	Digital232_RW@j& (0+255),w,b
  5636  002606  A4D8               	btfss	status,2,c
  5637  002608  D037               	goto	l5344
  5638                           
  5639                           ; BSR set to: 0
  5640                           ;d232.c: 65:     IO.srq = S_S;
  5641  00260A  0E01               	movlw	1
  5642  00260C  D018               	goto	L7
  5643  00260E                     l5326:
  5644                           
  5645                           ; BSR set to: 0
  5646                           ;d232.c: 68:    if (j == 'R')
  5647  00260E  0E52               	movlw	82
  5648  002610  196D               	xorwf	Digital232_RW@j& (0+255),w,b
  5649  002612  A4D8               	btfss	status,2,c
  5650  002614  D031               	goto	l5344
  5651                           
  5652                           ; BSR set to: 0
  5653                           ;d232.c: 69:     IO.srq = S_R;
  5654  002616  0E02               	movlw	2
  5655  002618  D012               	goto	L7
  5656  00261A                     l5330:
  5657                           
  5658                           ; BSR set to: 0
  5659                           ;d232.c: 72:    if (j == 'Q')
  5660  00261A  0E51               	movlw	81
  5661  00261C  196D               	xorwf	Digital232_RW@j& (0+255),w,b
  5662  00261E  A4D8               	btfss	status,2,c
  5663  002620  D02B               	goto	l5344
  5664                           
  5665                           ; BSR set to: 0
  5666                           ;d232.c: 73:     IO.srq = S_Q;
  5667  002622  0E03               	movlw	3
  5668  002624  D00C               	goto	L7
  5669  002626                     l5334:
  5670                           
  5671                           ; BSR set to: 0
  5672                           ;d232.c: 76:    if (j == ' ')
  5673  002626  0E20               	movlw	32
  5674  002628  196D               	xorwf	Digital232_RW@j& (0+255),w,b
  5675  00262A  A4D8               	btfss	status,2,c
  5676  00262C  D025               	goto	l5344
  5677                           
  5678                           ; BSR set to: 0
  5679                           ;d232.c: 77:     IO.srq = S_NUM;
  5680  00262E  0E04               	movlw	4
  5681  002630  D006               	goto	L7
  5682  002632                     l1130:
  5683                           
  5684                           ; BSR set to: 0
  5685                           ;d232.c: 80:    IO.srq_value = j;
  5686  002632  0060  F1B4  F1AE   	movff	Digital232_RW@j,_IO+15
  5687                           
  5688                           ; BSR set to: 0
  5689                           ;d232.c: 81:    IO.srq = S_UPDATE;
  5690  002638  0E05               	movlw	5
  5691  00263A  D001               	goto	L7
  5692  00263C                     l5340:
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;d232.c: 84:    IO.srq = S_IDLE;
  5696  00263C  0E00               	movlw	0
  5697  00263E                     L7:
  5698  00263E  0101               	movlb	1	; () banked
  5699  002640  6FAD               	movwf	(_IO+14)& (0+255),b
  5700                           
  5701                           ;d232.c: 85:   }
  5702  002642  D01A               	goto	l5344
  5703  002644                     l5342:
  5704                           
  5705                           ; BSR set to: 0
  5706  002644  0101               	movlb	1	; () banked
  5707  002646  51AD               	movf	(_IO+14)& (0+255),w,b
  5708  002648  0100               	movlb	0	; () banked
  5709  00264A  6F6A               	movwf	??_Digital232_RW& (0+255),b
  5710  00264C  6B6B               	clrf	(??_Digital232_RW+1)& (0+255),b
  5711                           
  5712                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5713                           ; Switch size 1, requested type "simple"
  5714                           ; Number of cases is 1, Range of values is 0 to 0
  5715                           ; switch strategies available:
  5716                           ; Name         Instructions Cycles
  5717                           ; simple_byte            4     3 (average)
  5718                           ;	Chosen strategy is simple_byte
  5719  00264E  516B               	movf	(??_Digital232_RW+1)& (0+255),w,b
  5720  002650  0A00               	xorlw	0	; case 0
  5721  002652  A4D8               	btfss	status,2,c
  5722  002654  D7F3               	goto	l5340
  5723                           
  5724                           ; BSR set to: 0
  5725                           ; Switch size 1, requested type "simple"
  5726                           ; Number of cases is 5, Range of values is 0 to 4
  5727                           ; switch strategies available:
  5728                           ; Name         Instructions Cycles
  5729                           ; simple_byte           16     9 (average)
  5730                           ;	Chosen strategy is simple_byte
  5731  002656  516A               	movf	??_Digital232_RW& (0+255),w,b
  5732  002658  0A00               	xorlw	0	; case 0
  5733  00265A  B4D8               	btfsc	status,2,c
  5734  00265C  D7D2               	goto	l5322
  5735  00265E  0A01               	xorlw	1	; case 1
  5736  002660  B4D8               	btfsc	status,2,c
  5737  002662  D7D5               	goto	l5326
  5738  002664  0A03               	xorlw	3	; case 2
  5739  002666  B4D8               	btfsc	status,2,c
  5740  002668  D7D8               	goto	l5330
  5741  00266A  0A01               	xorlw	1	; case 3
  5742  00266C  B4D8               	btfsc	status,2,c
  5743  00266E  D7DB               	goto	l5334
  5744  002670  0A07               	xorlw	7	; case 4
  5745  002672  B4D8               	btfsc	status,2,c
  5746  002674  D7DE               	goto	l1130
  5747  002676  D7E2               	goto	l5340
  5748  002678                     l5344:
  5749                           
  5750                           ;d232.c: 88:  UART2_Write('D');
  5751  002678  0E44               	movlw	68
  5752  00267A  EC63  F01C         	call	_UART2_Write
  5753                           
  5754                           ;d232.c: 89:  UART2_Write(IO.outbytes[4]);
  5755  00267E  0101               	movlb	1	; () banked
  5756  002680  51A8               	movf	(_IO+9)& (0+255),w,b
  5757  002682  EC63  F01C         	call	_UART2_Write
  5758                           
  5759                           ;d232.c: 90:  UART2_Write(IO.outbytes[3]);
  5760  002686  0101               	movlb	1	; () banked
  5761  002688  51A7               	movf	(_IO+8)& (0+255),w,b
  5762  00268A  EC63  F01C         	call	_UART2_Write
  5763                           
  5764                           ;d232.c: 91:  UART2_Write(IO.outbytes[2]);
  5765  00268E  0101               	movlb	1	; () banked
  5766  002690  51A6               	movf	(_IO+7)& (0+255),w,b
  5767  002692  EC63  F01C         	call	_UART2_Write
  5768                           
  5769                           ;d232.c: 92:  UART2_Write(IO.outbytes[1]);
  5770  002696  0101               	movlb	1	; () banked
  5771  002698  51A5               	movf	(_IO+6)& (0+255),w,b
  5772  00269A  EC63  F01C         	call	_UART2_Write
  5773                           
  5774                           ;d232.c: 93:  UART2_Write(IO.outbytes[0]);
  5775  00269E  0101               	movlb	1	; () banked
  5776  0026A0  51A4               	movf	(_IO+5)& (0+255),w,b
  5777  0026A2  EC63  F01C         	call	_UART2_Write
  5778                           
  5779                           ;d232.c: 94:  UART2_Write('\r');
  5780  0026A6  0E0D               	movlw	13
  5781  0026A8  EC63  F01C         	call	_UART2_Write
  5782                           
  5783                           ; BSR set to: 57
  5784                           ;d232.c: 95:  printf("%s", "R0\r");
  5785  0026AC  0E4F               	movlw	low STR_5
  5786  0026AE  0100               	movlb	0	; () banked
  5787  0026B0  6F64               	movwf	printf@fmt& (0+255),b
  5788  0026B2  0E37               	movlw	low STR_16
  5789  0026B4  6F65               	movwf	(?_printf+1)& (0+255),b
  5790  0026B6  5165               	movf	(?_printf+1)& (0+255),w,b
  5791  0026B8  A4D8               	btfss	status,2,c
  5792  0026BA  0E20               	movlw	high __smallconst
  5793  0026BC  6F66               	movwf	(?_printf+2)& (0+255),b
  5794  0026BE  EC15  F01F         	call	_printf	;wreg free
  5795                           
  5796                           ; BSR set to: 1
  5797                           ;d232.c: 96:  IO.output_ok = 1;
  5798  0026C2  0E01               	movlw	1
  5799  0026C4  6FAA               	movwf	(_IO+11)& (0+255),b
  5800                           
  5801                           ; BSR set to: 1
  5802                           ;d232.c: 97:  IO.io = IO_OUT;
  5803  0026C6  0E02               	movlw	2
  5804  0026C8  6FAB               	movwf	(_IO+12)& (0+255),b
  5805                           
  5806                           ; BSR set to: 1
  5807                           ;d232.c: 101:  StartTimer(TMR_RXTO, 250);
  5808  0026CA  0E00               	movlw	0
  5809  0026CC  6E07               	movwf	(StartTimer@count+1)^0,c
  5810  0026CE  0EFA               	movlw	250
  5811  0026D0  6E06               	movwf	StartTimer@count^0,c
  5812  0026D2  0E02               	movlw	2
  5813  0026D4  EC6B  F01D         	call	_StartTimer
  5814                           
  5815                           ;d232.c: 102:  while (!UART2_is_rx_ready()) {
  5816  0026D8  D015               	goto	l5368
  5817  0026DA                     l5354:
  5818                           
  5819                           ; BSR set to: 0
  5820                           ;d232.c: 103:   if (TimerDone(TMR_RXTO)) {
  5821  0026DA  0E02               	movlw	2
  5822  0026DC  EC36  F01E         	call	_TimerDone
  5823  0026E0  0900               	iorlw	0
  5824  0026E2  B4D8               	btfsc	status,2,c
  5825  0026E4  D00F               	goto	l5368
  5826                           
  5827                           ;d232.c: 104:    PWM8_LoadDutyValue(x++);
  5828  0026E6  0060  F258  F006   	movff	Digital232_RW@x,PWM8_LoadDutyValue@dutyValue
  5829  0026EC  6A07               	clrf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  5830  0026EE  EC19  F01D         	call	_PWM8_LoadDutyValue	;wreg free
  5831  0026F2  0100               	movlb	0	; () banked
  5832  0026F4  2B96               	incf	Digital232_RW@x& (0+255),f,b
  5833                           
  5834                           ; BSR set to: 0
  5835                           ;d232.c: 105:    if (x > 3)
  5836  0026F6  0E03               	movlw	3
  5837  0026F8  6596               	cpfsgt	Digital232_RW@x& (0+255),b
  5838  0026FA  D002               	goto	l1135
  5839                           
  5840                           ; BSR set to: 0
  5841                           ;d232.c: 106:     x = 0;
  5842  0026FC  0E00               	movlw	0
  5843  0026FE  6F96               	movwf	Digital232_RW@x& (0+255),b
  5844  002700                     l1135:
  5845                           
  5846                           ; BSR set to: 0
  5847                           ;d232.c: 107:    IO.io = IO_FAIL;
  5848  002700  0E06               	movlw	6
  5849  002702  D74B               	goto	L8
  5850  002704                     l5368:
  5851                           
  5852                           ;d232.c: 102:  while (!UART2_is_rx_ready()) {
  5853  002704  ECF4  F01F         	call	_UART2_is_rx_ready	;wreg free
  5854  002708  0900               	iorlw	0
  5855  00270A  B4D8               	btfsc	status,2,c
  5856  00270C  D7E6               	goto	l5354
  5857                           
  5858                           ; BSR set to: 0
  5859                           ;d232.c: 115:  i = 0;
  5860  00270E  0E00               	movlw	0
  5861  002710  6F6C               	movwf	Digital232_RW@i& (0+255),b
  5862                           
  5863                           ; BSR set to: 0
  5864                           ;d232.c: 116:  StartTimer(TMR_RXTO, 250);
  5865  002712  0E00               	movlw	0
  5866  002714  6E07               	movwf	(StartTimer@count+1)^0,c
  5867  002716  0EFA               	movlw	250
  5868  002718  6E06               	movwf	StartTimer@count^0,c
  5869  00271A  0E02               	movlw	2
  5870  00271C  EC6B  F01D         	call	_StartTimer
  5871                           
  5872                           ;d232.c: 117:  while (!TimerDone(TMR_RXTO) && (i < 6)) {
  5873  002720  D015               	goto	l5380
  5874  002722                     l5374:
  5875                           
  5876                           ; BSR set to: 0
  5877                           ;d232.c: 118:   if (UART2_is_rx_ready()) {
  5878  002722  ECF4  F01F         	call	_UART2_is_rx_ready	;wreg free
  5879  002726  0900               	iorlw	0
  5880  002728  B4D8               	btfsc	status,2,c
  5881  00272A  D010               	goto	l5380
  5882                           
  5883                           ; BSR set to: 0
  5884                           ;d232.c: 119:    IO.inbytes[4 - i] = UART2_Read();
  5885  00272C  EC41  F01C         	call	_UART2_Read	;wreg free
  5886  002730  0100               	movlb	0	; () banked
  5887  002732  6F6A               	movwf	??_Digital232_RW& (0+255),b
  5888  002734  516C               	movf	Digital232_RW@i& (0+255),w,b
  5889  002736  08A3               	sublw	low (_IO+4)
  5890  002738  6ED9               	movwf	fsr2l,c
  5891  00273A  0E00               	movlw	0
  5892  00273C  A0D8               	btfss	status,0,c
  5893  00273E  2AE8               	incf	wreg,f,c
  5894  002740  0801               	sublw	high (_IO+4)
  5895  002742  6EDA               	movwf	fsr2h,c
  5896  002744  0060  F1AB  FFDF   	movff	??_Digital232_RW,indf2
  5897                           
  5898                           ; BSR set to: 0
  5899                           ;d232.c: 120:    i++;
  5900  00274A  2B6C               	incf	Digital232_RW@i& (0+255),f,b
  5901  00274C                     l5380:
  5902                           
  5903                           ;d232.c: 117:  while (!TimerDone(TMR_RXTO) && (i < 6)) {
  5904  00274C  0E02               	movlw	2
  5905  00274E  EC36  F01E         	call	_TimerDone
  5906  002752  0900               	iorlw	0
  5907  002754  A4D8               	btfss	status,2,c
  5908  002756  D004               	goto	u4190
  5909  002758  0E05               	movlw	5
  5910  00275A  0100               	movlb	0	; () banked
  5911  00275C  656C               	cpfsgt	Digital232_RW@i& (0+255),b
  5912  00275E  D7E1               	goto	l5374
  5913  002760                     u4190:
  5914                           
  5915                           ;d232.c: 123:  if (TimerDone(TMR_RXTO) || i < 6) {
  5916  002760  0E02               	movlw	2
  5917  002762  EC36  F01E         	call	_TimerDone
  5918  002766  0900               	iorlw	0
  5919  002768  A4D8               	btfss	status,2,c
  5920  00276A  D004               	goto	u4210
  5921  00276C  0E06               	movlw	6
  5922  00276E  0100               	movlb	0	; () banked
  5923  002770  616C               	cpfslt	Digital232_RW@i& (0+255),b
  5924  002772  D00A               	goto	l5400
  5925  002774                     u4210:
  5926                           
  5927                           ;d232.c: 124:   PWM8_LoadDutyValue(x++);
  5928  002774  0060  F258  F006   	movff	Digital232_RW@x,PWM8_LoadDutyValue@dutyValue
  5929  00277A  6A07               	clrf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  5930  00277C  EC19  F01D         	call	_PWM8_LoadDutyValue	;wreg free
  5931  002780  0100               	movlb	0	; () banked
  5932  002782  2B96               	incf	Digital232_RW@x& (0+255),f,b
  5933                           
  5934                           ; BSR set to: 0
  5935                           ;d232.c: 125:   if (x > 16)
  5936  002784  0E10               	movlw	16
  5937  002786  D7B8               	goto	L9
  5938  002788                     l5400:
  5939                           
  5940                           ; BSR set to: 0
  5941                           ;d232.c: 131:  if (UART2_is_rx_ready())
  5942  002788  ECF4  F01F         	call	_UART2_is_rx_ready	;wreg free
  5943  00278C  0900               	iorlw	0
  5944  00278E  A4D8               	btfss	status,2,c
  5945                           
  5946                           ; BSR set to: 0
  5947                           ;d232.c: 132:   UART2_Read();
  5948  002790  EC41  F01C         	call	_UART2_Read	;wreg free
  5949                           
  5950                           ;d232.c: 134:  IO.input_ok = 1;
  5951  002794  0E01               	movlw	1
  5952  002796  0101               	movlb	1	; () banked
  5953  002798  6FA9               	movwf	(_IO+10)& (0+255),b
  5954                           
  5955                           ; BSR set to: 1
  5956                           ;d232.c: 135:  IO.io = IO_IN;
  5957  00279A  0E03               	movlw	3
  5958  00279C  6FAB               	movwf	(_IO+12)& (0+255),b
  5959                           
  5960                           ; BSR set to: 1
  5961                           ;d232.c: 136:  IO.d232 = D232_OUT_IN;
  5962  00279E  0E02               	movlw	2
  5963  0027A0  6FAC               	movwf	(_IO+13)& (0+255),b
  5964                           
  5965                           ; BSR set to: 1
  5966                           ;d232.c: 138:  PWM8_LoadDutyValue(199);
  5967  0027A2  0E00               	movlw	0
  5968  0027A4  6E07               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  5969  0027A6  0EC7               	movlw	199
  5970  0027A8  6E06               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  5971  0027AA  EC19  F01D         	call	_PWM8_LoadDutyValue	;wreg free
  5972                           
  5973                           ;d232.c: 139:  IO.io = IO_UPDATE;
  5974  0027AE  0E05               	movlw	5
  5975  0027B0  0101               	movlb	1	; () banked
  5976  0027B2  6FAB               	movwf	(_IO+12)& (0+255),b
  5977                           
  5978                           ; BSR set to: 1
  5979                           ;d232.c: 140:  return 1;
  5980  0027B4  0E01               	movlw	1
  5981                           
  5982                           ; BSR set to: 1
  5983  0027B6  0012               	return		;funcret
  5984  0027B8                     __end_of_Digital232_RW:
  5985                           	opt callstack 0
  5986                           
  5987 ;; *************** function _printf *****************
  5988 ;; Defined at:
  5989 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  5990 ;; Parameters:    Size  Location     Type
  5991 ;;  fmt             1    4[BANK0 ] PTR const unsigned char 
  5992 ;;		 -> STR_15(3), STR_13(3), STR_11(3), STR_9(3), 
  5993 ;;		 -> STR_7(3), STR_5(3), 
  5994 ;; Auto vars:     Size  Location     Type
  5995 ;;  ret             2    0        int 
  5996 ;;  ap              1    9[BANK0 ] PTR void [1]
  5997 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5998 ;; Return value:  Size  Location     Type
  5999 ;;                  2    4[BANK0 ] int 
  6000 ;; Registers used:
  6001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6002 ;; Tracked objects:
  6003 ;;		On entry : 3F/0
  6004 ;;		On exit  : 3F/1
  6005 ;;		Unchanged: 0/0
  6006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6007 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6008 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6010 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6011 ;;Total ram usage:        6 bytes
  6012 ;; Hardware stack levels used:    1
  6013 ;; Hardware stack levels required when called:   12
  6014 ;; This function calls:
  6015 ;;		_vfprintf
  6016 ;; This function is called by:
  6017 ;;		_Digital232_init
  6018 ;;		_Digital232_RW
  6019 ;; This function uses a non-reentrant model
  6020 ;;
  6021                           
  6022                           	psect	text43
  6023  003E2A                     __ptext43:
  6024                           	opt callstack 0
  6025  003E2A                     _printf:
  6026                           	opt callstack 17
  6027                           
  6028                           ; BSR set to: 0
  6029                           
  6030                           ; BSR set to: 1
  6031                           ;incstack = 0
  6032  003E2A  0E65               	movlw	low (?_printf+1)
  6033  003E2C  6F69               	movwf	printf@ap& (0+255),b
  6034                           
  6035                           ; BSR set to: 0
  6036  003E2E  0E00               	movlw	0
  6037  003E30  6F60               	movwf	vfprintf@fp& (0+255),b
  6038  003E32  0E00               	movlw	0
  6039  003E34  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  6040  003E36  0060  F190  F062   	movff	printf@fmt,vfprintf@fmt
  6041  003E3C  0E69               	movlw	low printf@ap
  6042  003E3E  6F63               	movwf	vfprintf@ap& (0+255),b
  6043  003E40  EC7D  F01B         	call	_vfprintf	;wreg free
  6044                           
  6045                           ; BSR set to: 1
  6046  003E44  0012               	return		;funcret
  6047  003E46                     __end_of_printf:
  6048                           	opt callstack 0
  6049                           
  6050 ;; *************** function _vfprintf *****************
  6051 ;; Defined at:
  6052 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6053 ;; Parameters:    Size  Location     Type
  6054 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  6055 ;;		 -> sprintf@f(6), NULL(0), 
  6056 ;;  fmt             1    2[BANK0 ] PTR const unsigned char 
  6057 ;;		 -> STR_15(3), STR_13(3), STR_11(3), STR_9(3), 
  6058 ;;		 -> STR_7(3), STR_5(3), STR_3(12), STR_2(20), 
  6059 ;;		 -> STR_1(17), 
  6060 ;;  ap              1    3[BANK0 ] PTR PTR void 
  6061 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;  cfmt            1   84[COMRAM] PTR unsigned char 
  6064 ;;		 -> STR_15(3), STR_13(3), STR_11(3), STR_9(3), 
  6065 ;;		 -> STR_7(3), STR_5(3), STR_3(12), STR_2(20), 
  6066 ;;		 -> STR_1(17), 
  6067 ;; Return value:  Size  Location     Type
  6068 ;;                  2    0[BANK0 ] int 
  6069 ;; Registers used:
  6070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6071 ;; Tracked objects:
  6072 ;;		On entry : 3F/0
  6073 ;;		On exit  : 3F/1
  6074 ;;		Unchanged: 0/0
  6075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6076 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6077 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6079 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6080 ;;Total ram usage:        5 bytes
  6081 ;; Hardware stack levels used:    1
  6082 ;; Hardware stack levels required when called:   11
  6083 ;; This function calls:
  6084 ;;		_vfpfcnvrt
  6085 ;; This function is called by:
  6086 ;;		_sprintf
  6087 ;;		_printf
  6088 ;; This function uses a non-reentrant model
  6089 ;;
  6090                           
  6091                           	psect	text44
  6092  0036FA                     __ptext44:
  6093                           	opt callstack 0
  6094  0036FA                     _vfprintf:
  6095                           	opt callstack 17
  6096                           
  6097                           ; BSR set to: 0
  6098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6099                           
  6100                           ; BSR set to: 1
  6101                           ;incstack = 0
  6102  0036FA  0060  F188  F055   	movff	vfprintf@fmt,vfprintf@cfmt
  6103                           
  6104                           ; BSR set to: 0
  6105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  6106  003700  0E00               	movlw	0
  6107  003702  0101               	movlb	1	; () banked
  6108  003704  6F67               	movwf	(_nout+1)& (0+255),b
  6109  003706  0E00               	movlw	0
  6110  003708  6F66               	movwf	_nout& (0+255),b
  6111                           
  6112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6113  00370A  D012               	goto	l4948
  6114  00370C                     l4946:
  6115                           
  6116                           ; BSR set to: 1
  6117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6118  00370C  0060  F180  F047   	movff	vfprintf@fp,vfpfcnvrt@fp
  6119  003712  0060  F184  F048   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6120  003718  0E55               	movlw	low vfprintf@cfmt
  6121  00371A  6E49               	movwf	vfpfcnvrt@fmt^0,c
  6122  00371C  0060  F18C  F04A   	movff	vfprintf@ap,vfpfcnvrt@ap
  6123  003722  ECDC  F013         	call	_vfpfcnvrt	;wreg free
  6124  003726  5047               	movf	?_vfpfcnvrt^0,w,c
  6125  003728  0101               	movlb	1	; () banked
  6126  00372A  2766               	addwf	_nout& (0+255),f,b
  6127  00372C  5048               	movf	(?_vfpfcnvrt+1)^0,w,c
  6128  00372E  2367               	addwfc	(_nout+1)& (0+255),f,b
  6129  003730                     l4948:
  6130                           
  6131                           ; BSR set to: 1
  6132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6133  003730  0060  F157  FFF6   	movff	vfprintf@cfmt,tblptrl
  6134  003736                     	if	1	;There is more than 1 active tblptr byte
  6135  003736  0E20               	movlw	high __smallconst
  6136  003738  6EF7               	movwf	tblptrh,c
  6137  00373A                     	endif
  6138  00373A                     	if	0	;tblptru may be non-zero
  6139  00373A                     	endif
  6140  00373A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6141  00373A  0E00               	movlw	low (__smallconst shr (0+16))
  6142  00373C  6EF8               	movwf	tblptru,c
  6143  00373E                     	endif
  6144  00373E  0008               	tblrd		*
  6145  003740  50F5               	movf	tablat,w,c
  6146  003742  0900               	iorlw	0
  6147  003744  A4D8               	btfss	status,2,c
  6148  003746  D7E2               	goto	l4946
  6149                           
  6150                           ; BSR set to: 1
  6151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  6152  003748  0060  F598  F060   	movff	_nout,?_vfprintf
  6153  00374E  0060  F59C  F061   	movff	_nout+1,?_vfprintf+1
  6154                           
  6155                           ; BSR set to: 1
  6156  003754  0012               	return		;funcret
  6157  003756                     __end_of_vfprintf:
  6158                           	opt callstack 0
  6159                           
  6160 ;; *************** function _vfpfcnvrt *****************
  6161 ;; Defined at:
  6162 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6163 ;; Parameters:    Size  Location     Type
  6164 ;;  fp              2   70[COMRAM] PTR struct _IO_FILE
  6165 ;;		 -> sprintf@f(6), NULL(0), 
  6166 ;;  fmt             1   72[COMRAM] PTR PTR unsigned char 
  6167 ;;		 -> vfprintf@cfmt(1), 
  6168 ;;  ap              1   73[COMRAM] PTR PTR void 
  6169 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6170 ;; Auto vars:     Size  Location     Type
  6171 ;;  ll              8   74[COMRAM] long long 
  6172 ;;  llu             8    0        unsigned long long 
  6173 ;;  f               4    0        unsigned long long 
  6174 ;;  vp              3    0        PTR void 
  6175 ;;  ct              3    0        unsigned char [3]
  6176 ;;  cp              2   82[COMRAM] PTR unsigned char 
  6177 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(4), STR_14(4), 
  6178 ;;		 -> STR_12(4), STR_10(4), STR_8(4), STR_6(4), 
  6179 ;;		 -> STR_4(5), 
  6180 ;;  i               2    0        int 
  6181 ;;  done            2    0        int 
  6182 ;;  c               1    0        unsigned char 
  6183 ;; Return value:  Size  Location     Type
  6184 ;;                  2   70[COMRAM] int 
  6185 ;; Registers used:
  6186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6187 ;; Tracked objects:
  6188 ;;		On entry : 3E/1
  6189 ;;		On exit  : 0/0
  6190 ;;		Unchanged: 0/0
  6191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6192 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6193 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6195 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6196 ;;Total ram usage:       14 bytes
  6197 ;; Hardware stack levels used:    1
  6198 ;; Hardware stack levels required when called:   10
  6199 ;; This function calls:
  6200 ;;		_dtoa
  6201 ;;		_fputc
  6202 ;;		_stoa
  6203 ;; This function is called by:
  6204 ;;		_vfprintf
  6205 ;; This function uses a non-reentrant model
  6206 ;;
  6207                           
  6208                           	psect	text45
  6209  0027B8                     __ptext45:
  6210                           	opt callstack 0
  6211  0027B8                     _vfpfcnvrt:
  6212                           	opt callstack 17
  6213                           
  6214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  6215                           
  6216                           ; BSR set to: 1
  6217                           ;incstack = 0
  6218  0027B8  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6219  0027BA  6ED9               	movwf	fsr2l,c
  6220  0027BC  6ADA               	clrf	fsr2h,c
  6221  0027BE  006F FF7F FFF6     	movff	indf2,tblptrl
  6222  0027C4                     	if	1	;There is more than 1 active tblptr byte
  6223  0027C4  0E20               	movlw	high __smallconst
  6224  0027C6  6EF7               	movwf	tblptrh,c
  6225  0027C8                     	endif
  6226  0027C8                     	if	0	;tblptru may be non-zero
  6227  0027C8                     	endif
  6228  0027C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6229  0027C8  0E00               	movlw	low (__smallconst shr (0+16))
  6230  0027CA  6EF8               	movwf	tblptru,c
  6231  0027CC                     	endif
  6232  0027CC  0008               	tblrd		*
  6233  0027CE  50F5               	movf	tablat,w,c
  6234  0027D0  0A25               	xorlw	37
  6235  0027D2  A4D8               	btfss	status,2,c
  6236  0027D4  D0D5               	goto	l4868
  6237                           
  6238                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  6239  0027D6  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6240  0027D8  6ED9               	movwf	fsr2l,c
  6241  0027DA  6ADA               	clrf	fsr2h,c
  6242  0027DC  2ADF               	incf	indf2,f,c
  6243                           
  6244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  6245  0027DE  0E00               	movlw	0
  6246  0027E0  0101               	movlb	1	; () banked
  6247  0027E2  6F69               	movwf	(_width+1)& (0+255),b
  6248  0027E4  0E00               	movlw	0
  6249  0027E6  6F68               	movwf	_width& (0+255),b
  6250  0027E8  0060  F5A0  F056   	movff	_width,_flags
  6251  0027EE  0060  F5A4  F057   	movff	_width+1,_flags+1
  6252                           
  6253                           ; BSR set to: 1
  6254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  6255  0027F4  0100               	movlb	0	; () banked
  6256  0027F6  6992               	setf	_prec& (0+255),b
  6257  0027F8  6993               	setf	(_prec+1)& (0+255),b
  6258                           
  6259                           ; BSR set to: 0
  6260                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  6261  0027FA  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6262  0027FC  6ED9               	movwf	fsr2l,c
  6263  0027FE  6ADA               	clrf	fsr2h,c
  6264  002800  006F FF7F FFF6     	movff	indf2,tblptrl
  6265  002806                     	if	1	;There is more than 1 active tblptr byte
  6266  002806  0E20               	movlw	high __smallconst
  6267  002808  6EF7               	movwf	tblptrh,c
  6268  00280A                     	endif
  6269  00280A                     	if	0	;tblptru may be non-zero
  6270  00280A                     	endif
  6271  00280A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6272  00280A  0E00               	movlw	low (__smallconst shr (0+16))
  6273  00280C  6EF8               	movwf	tblptru,c
  6274  00280E                     	endif
  6275  00280E  0008               	tblrd		*
  6276  002810  50F5               	movf	tablat,w,c
  6277  002812  0A64               	xorlw	100
  6278  002814  B4D8               	btfsc	status,2,c
  6279  002816  D00F               	goto	u3840
  6280                           
  6281                           ; BSR set to: 0
  6282  002818  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6283  00281A  6ED9               	movwf	fsr2l,c
  6284  00281C  6ADA               	clrf	fsr2h,c
  6285  00281E  006F FF7F FFF6     	movff	indf2,tblptrl
  6286  002824                     	if	1	;There is more than 1 active tblptr byte
  6287  002824  0E20               	movlw	high __smallconst
  6288  002826  6EF7               	movwf	tblptrh,c
  6289  002828                     	endif
  6290  002828                     	if	0	;tblptru may be non-zero
  6291  002828                     	endif
  6292  002828                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6293  002828  0E00               	movlw	low (__smallconst shr (0+16))
  6294  00282A  6EF8               	movwf	tblptru,c
  6295  00282C                     	endif
  6296  00282C  0008               	tblrd		*
  6297  00282E  50F5               	movf	tablat,w,c
  6298  002830  0A69               	xorlw	105
  6299  002832  A4D8               	btfss	status,2,c
  6300  002834  D042               	goto	l4842
  6301  002836                     u3840:
  6302                           
  6303                           ; BSR set to: 0
  6304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  6305  002836  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6306  002838  6ED9               	movwf	fsr2l,c
  6307  00283A  6ADA               	clrf	fsr2h,c
  6308  00283C  2ADF               	incf	indf2,f,c
  6309                           
  6310                           ; BSR set to: 0
  6311                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  6312  00283E  504A               	movf	vfpfcnvrt@ap^0,w,c
  6313  002840  6ED9               	movwf	fsr2l,c
  6314  002842  6ADA               	clrf	fsr2h,c
  6315  002844  50DF               	movf	indf2,w,c
  6316  002846  2ADF               	incf	indf2,f,c
  6317  002848  2ADF               	incf	indf2,f,c
  6318  00284A  6ED9               	movwf	fsr2l,c
  6319  00284C  6ADA               	clrf	fsr2h,c
  6320  00284E  006F FF78  F04B    	movff	postinc2,vfpfcnvrt@ll
  6321  002854  006F FF74  F04C    	movff	postdec2,vfpfcnvrt@ll+1
  6322  00285A  0E00               	movlw	0
  6323  00285C  BE4C               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  6324  00285E  0EFF               	movlw	-1
  6325  002860  6E4D               	movwf	(vfpfcnvrt@ll+2)^0,c
  6326  002862  6E4E               	movwf	(vfpfcnvrt@ll+3)^0,c
  6327  002864  6E4F               	movwf	(vfpfcnvrt@ll+4)^0,c
  6328  002866  6E50               	movwf	(vfpfcnvrt@ll+5)^0,c
  6329  002868  6E51               	movwf	(vfpfcnvrt@ll+6)^0,c
  6330  00286A  6E52               	movwf	(vfpfcnvrt@ll+7)^0,c
  6331                           
  6332                           ; BSR set to: 0
  6333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  6334  00286C  0060  F11C  F023   	movff	vfpfcnvrt@fp,dtoa@fp
  6335  002872  0060  F120  F024   	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6336  002878  0060  F12C  F025   	movff	vfpfcnvrt@ll,dtoa@d
  6337  00287E  0060  F130  F026   	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6338  002884  0060  F134  F027   	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6339  00288A  0060  F138  F028   	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6340  002890  0060  F13C  F029   	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6341  002896  0060  F140  F02A   	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6342  00289C  0060  F144  F02B   	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6343  0028A2  0060  F148  F02C   	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6344  0028A8  EC2A  F010         	call	_dtoa	;wreg free
  6345  0028AC  0060  F08C  F047   	movff	?_dtoa,?_vfpfcnvrt
  6346  0028B2  0060  F090  F048   	movff	?_dtoa+1,?_vfpfcnvrt+1
  6347  0028B8  0012               	return	
  6348  0028BA                     l4842:
  6349                           
  6350                           ; BSR set to: 0
  6351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  6352  0028BA  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6353  0028BC  6ED9               	movwf	fsr2l,c
  6354  0028BE  6ADA               	clrf	fsr2h,c
  6355  0028C0  006F FF7F FFF6     	movff	indf2,tblptrl
  6356  0028C6                     	if	1	;There is more than 1 active tblptr byte
  6357  0028C6  0E20               	movlw	high __smallconst
  6358  0028C8  6EF7               	movwf	tblptrh,c
  6359  0028CA                     	endif
  6360  0028CA                     	if	0	;tblptru may be non-zero
  6361  0028CA                     	endif
  6362  0028CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6363  0028CA  0E00               	movlw	low (__smallconst shr (0+16))
  6364  0028CC  6EF8               	movwf	tblptru,c
  6365  0028CE                     	endif
  6366  0028CE  0008               	tblrd		*
  6367  0028D0  50F5               	movf	tablat,w,c
  6368  0028D2  0A73               	xorlw	115
  6369  0028D4  A4D8               	btfss	status,2,c
  6370  0028D6  D027               	goto	l4852
  6371                           
  6372                           ; BSR set to: 0
  6373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  6374  0028D8  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6375  0028DA  6ED9               	movwf	fsr2l,c
  6376  0028DC  6ADA               	clrf	fsr2h,c
  6377  0028DE  2ADF               	incf	indf2,f,c
  6378                           
  6379                           ; BSR set to: 0
  6380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  6381  0028E0  504A               	movf	vfpfcnvrt@ap^0,w,c
  6382  0028E2  6ED9               	movwf	fsr2l,c
  6383  0028E4  6ADA               	clrf	fsr2h,c
  6384  0028E6  0E02               	movlw	2
  6385  0028E8  26DF               	addwf	indf2,f,c
  6386  0028EA  5CDF               	subwf	indf2,w,c
  6387  0028EC  6ED9               	movwf	fsr2l,c
  6388  0028EE  6ADA               	clrf	fsr2h,c
  6389  0028F0  006F FF78  F053    	movff	postinc2,vfpfcnvrt@cp
  6390  0028F6  006F FF78  F054    	movff	postinc2,vfpfcnvrt@cp+1
  6391                           
  6392                           ; BSR set to: 0
  6393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  6394  0028FC  0060  F11C  F011   	movff	vfpfcnvrt@fp,stoa@fp
  6395  002902  0060  F120  F012   	movff	vfpfcnvrt@fp+1,stoa@fp+1
  6396  002908  0060  F14C  F013   	movff	vfpfcnvrt@cp,stoa@s
  6397  00290E  0060  F150  F014   	movff	vfpfcnvrt@cp+1,stoa@s+1
  6398  002914  ECDB  F014         	call	_stoa	;wreg free
  6399  002918  0060  F044  F047   	movff	?_stoa,?_vfpfcnvrt
  6400  00291E  0060  F048  F048   	movff	?_stoa+1,?_vfpfcnvrt+1
  6401  002924  0012               	return	
  6402  002926                     l4852:
  6403                           
  6404                           ; BSR set to: 0
  6405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  6406  002926  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6407  002928  6ED9               	movwf	fsr2l,c
  6408  00292A  6ADA               	clrf	fsr2h,c
  6409  00292C  006F FF7F FFF6     	movff	indf2,tblptrl
  6410  002932                     	if	1	;There is more than 1 active tblptr byte
  6411  002932  0E20               	movlw	high __smallconst
  6412  002934  6EF7               	movwf	tblptrh,c
  6413  002936                     	endif
  6414  002936                     	if	0	;tblptru may be non-zero
  6415  002936                     	endif
  6416  002936                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6417  002936  0E00               	movlw	low (__smallconst shr (0+16))
  6418  002938  6EF8               	movwf	tblptru,c
  6419  00293A                     	endif
  6420  00293A  0008               	tblrd		*
  6421  00293C  50F5               	movf	tablat,w,c
  6422  00293E  0A25               	xorlw	37
  6423  002940  A4D8               	btfss	status,2,c
  6424  002942  D015               	goto	l4862
  6425                           
  6426                           ; BSR set to: 0
  6427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  6428  002944  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6429  002946  6ED9               	movwf	fsr2l,c
  6430  002948  6ADA               	clrf	fsr2h,c
  6431  00294A  2ADF               	incf	indf2,f,c
  6432                           
  6433                           ; BSR set to: 0
  6434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  6435  00294C  0E00               	movlw	0
  6436  00294E  6E09               	movwf	(fputc@c+1)^0,c
  6437  002950  0E25               	movlw	37
  6438  002952  6E08               	movwf	fputc@c^0,c
  6439  002954  0060  F11C  F00A   	movff	vfpfcnvrt@fp,fputc@fp
  6440  00295A  0060  F120  F00B   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6441  002960  ECD1  F018         	call	_fputc	;wreg free
  6442  002964                     l4858:
  6443                           
  6444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  6445  002964  0E00               	movlw	0
  6446  002966  6E48               	movwf	(?_vfpfcnvrt+1)^0,c
  6447  002968  0E01               	movlw	1
  6448  00296A  6E47               	movwf	?_vfpfcnvrt^0,c
  6449  00296C  0012               	return	
  6450  00296E                     l4862:
  6451                           
  6452                           ; BSR set to: 0
  6453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  6454  00296E  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6455  002970  6ED9               	movwf	fsr2l,c
  6456  002972  6ADA               	clrf	fsr2h,c
  6457  002974  2ADF               	incf	indf2,f,c
  6458                           
  6459                           ; BSR set to: 0
  6460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  6461  002976  0E00               	movlw	0
  6462  002978  6E48               	movwf	(?_vfpfcnvrt+1)^0,c
  6463  00297A  0E00               	movlw	0
  6464  00297C  6E47               	movwf	?_vfpfcnvrt^0,c
  6465  00297E  0012               	return	
  6466  002980                     l4868:
  6467                           
  6468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  6469  002980  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6470  002982  6ED9               	movwf	fsr2l,c
  6471  002984  6ADA               	clrf	fsr2h,c
  6472  002986  006F FF7F FFF6     	movff	indf2,tblptrl
  6473  00298C                     	if	1	;There is more than 1 active tblptr byte
  6474  00298C  0E20               	movlw	high __smallconst
  6475  00298E  6EF7               	movwf	tblptrh,c
  6476  002990                     	endif
  6477  002990                     	if	0	;tblptru may be non-zero
  6478  002990                     	endif
  6479  002990                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6480  002990  0E00               	movlw	low (__smallconst shr (0+16))
  6481  002992  6EF8               	movwf	tblptru,c
  6482  002994                     	endif
  6483  002994  0008               	tblrd		*
  6484  002996  50F5               	movf	tablat,w,c
  6485  002998  6E08               	movwf	fputc@c^0,c
  6486  00299A  6A09               	clrf	(fputc@c+1)^0,c
  6487  00299C  0060  F11C  F00A   	movff	vfpfcnvrt@fp,fputc@fp
  6488  0029A2  0060  F120  F00B   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6489  0029A8  ECD1  F018         	call	_fputc	;wreg free
  6490                           
  6491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  6492  0029AC  5049               	movf	vfpfcnvrt@fmt^0,w,c
  6493  0029AE  6ED9               	movwf	fsr2l,c
  6494  0029B0  6ADA               	clrf	fsr2h,c
  6495  0029B2  2ADF               	incf	indf2,f,c
  6496  0029B4  D7D7               	goto	l4858
  6497  0029B6                     __end_of_vfpfcnvrt:
  6498                           	opt callstack 0
  6499                           
  6500 ;; *************** function _stoa *****************
  6501 ;; Defined at:
  6502 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6505 ;;		 -> sprintf@f(6), NULL(0), 
  6506 ;;  s               2   18[COMRAM] PTR unsigned char 
  6507 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(4), STR_14(4), 
  6508 ;;		 -> STR_12(4), STR_10(4), STR_8(4), STR_6(4), 
  6509 ;;		 -> STR_4(5), 
  6510 ;; Auto vars:     Size  Location     Type
  6511 ;;  nuls            7   21[COMRAM] unsigned char [7]
  6512 ;;  l               2   36[COMRAM] int 
  6513 ;;  p               2   34[COMRAM] int 
  6514 ;;  cp              2   32[COMRAM] PTR unsigned char 
  6515 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), STR_16(4), 
  6516 ;;		 -> STR_14(4), STR_12(4), STR_10(4), STR_8(4), 
  6517 ;;		 -> STR_6(4), STR_4(5), 
  6518 ;;  w               2   30[COMRAM] int 
  6519 ;;  i               2   28[COMRAM] int 
  6520 ;; Return value:  Size  Location     Type
  6521 ;;                  2   16[COMRAM] int 
  6522 ;; Registers used:
  6523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6524 ;; Tracked objects:
  6525 ;;		On entry : 3F/0
  6526 ;;		On exit  : 0/0
  6527 ;;		Unchanged: 0/0
  6528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6529 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6530 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6531 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6532 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6533 ;;Total ram usage:       22 bytes
  6534 ;; Hardware stack levels used:    1
  6535 ;; Hardware stack levels required when called:    7
  6536 ;; This function calls:
  6537 ;;		_fputc
  6538 ;;		_strlen
  6539 ;; This function is called by:
  6540 ;;		_vfpfcnvrt
  6541 ;; This function uses a non-reentrant model
  6542 ;;
  6543                           
  6544                           	psect	text46
  6545  0029B6                     __ptext46:
  6546                           	opt callstack 0
  6547  0029B6                     _stoa:
  6548                           	opt callstack 19
  6549                           
  6550                           ; BSR set to: 0
  6551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  6552                           
  6553                           ;incstack = 0
  6554  0029B6  EE20  F194         	lfsr	2,stoa@F1139
  6555  0029BA  EE10  F016         	lfsr	1,stoa@nuls
  6556  0029BE  0E06               	movlw	6
  6557  0029C0                     u3701:
  6558  0029C0  006F FF6F FFE3     	movff	plusw2,plusw1
  6559  0029C6  06E8               	decf	wreg,f,c
  6560  0029C8  E2FB               	bc	u3701
  6561                           
  6562                           ; BSR set to: 0
  6563                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  6564  0029CA  0060  F04C  F021   	movff	stoa@s,stoa@cp
  6565  0029D0  0060  F050  F022   	movff	stoa@s+1,stoa@cp+1
  6566                           
  6567                           ; BSR set to: 0
  6568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  6569  0029D6  5021               	movf	stoa@cp^0,w,c
  6570  0029D8  1022               	iorwf	(stoa@cp+1)^0,w,c
  6571  0029DA  A4D8               	btfss	status,2,c
  6572  0029DC  D003               	goto	l4776
  6573                           
  6574                           ; BSR set to: 0
  6575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  6576  0029DE  0E16               	movlw	low stoa@nuls
  6577  0029E0  6E21               	movwf	stoa@cp^0,c
  6578  0029E2  6A22               	clrf	(stoa@cp+1)^0,c
  6579  0029E4                     l4776:
  6580                           
  6581                           ; BSR set to: 0
  6582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  6583  0029E4  0060  F084  F006   	movff	stoa@cp,strlen@s
  6584  0029EA  0060  F088  F007   	movff	stoa@cp+1,strlen@s+1
  6585  0029F0  ECAB  F01B         	call	_strlen	;wreg free
  6586  0029F4  0060  F018  F025   	movff	?_strlen,stoa@l
  6587  0029FA  0060  F01C  F026   	movff	?_strlen+1,stoa@l+1
  6588                           
  6589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  6590  002A00  0060  F248  F023   	movff	_prec,stoa@p
  6591  002A06  0060  F24C  F024   	movff	_prec+1,stoa@p+1
  6592                           
  6593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  6594  002A0C  BE24               	btfsc	(stoa@p+1)^0,7,c
  6595  002A0E  D010               	goto	l1356
  6596  002A10  5025               	movf	stoa@l^0,w,c
  6597  002A12  5C23               	subwf	stoa@p^0,w,c
  6598  002A14  5024               	movf	(stoa@p+1)^0,w,c
  6599  002A16  0A80               	xorlw	128
  6600  002A18  6E15               	movwf	??_stoa^0,c
  6601  002A1A  5026               	movf	(stoa@l+1)^0,w,c
  6602  002A1C  0A80               	xorlw	128
  6603  002A1E  5815               	subwfb	??_stoa^0,w,c
  6604  002A20  B0D8               	btfsc	status,0,c
  6605  002A22  D006               	goto	l1356
  6606  002A24  0060  F08C  F025   	movff	stoa@p,stoa@l
  6607  002A2A  0060  F090  F026   	movff	stoa@p+1,stoa@l+1
  6608  002A30                     l1356:
  6609                           
  6610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
  6611  002A30  0060  F094  F023   	movff	stoa@l,stoa@p
  6612  002A36  0060  F098  F024   	movff	stoa@l+1,stoa@p+1
  6613                           
  6614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
  6615  002A3C  0060  F5A0  F01F   	movff	_width,stoa@w
  6616  002A42  0060  F5A4  F020   	movff	_width+1,stoa@w+1
  6617                           
  6618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  6619  002A48  A056               	btfss	_flags^0,0,c
  6620  002A4A  D00F               	goto	l4790
  6621  002A4C  D018               	goto	u3750
  6622  002A4E                     l4786:
  6623                           
  6624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  6625  002A4E  0E00               	movlw	0
  6626  002A50  6E09               	movwf	(fputc@c+1)^0,c
  6627  002A52  0E20               	movlw	32
  6628  002A54  6E08               	movwf	fputc@c^0,c
  6629  002A56  0060  F044  F00A   	movff	stoa@fp,fputc@fp
  6630  002A5C  0060  F048  F00B   	movff	stoa@fp+1,fputc@fp+1
  6631  002A62  ECD1  F018         	call	_fputc	;wreg free
  6632                           
  6633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
  6634  002A66  4A25               	infsnz	stoa@l^0,f,c
  6635  002A68  2A26               	incf	(stoa@l+1)^0,f,c
  6636  002A6A                     l4790:
  6637                           
  6638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  6639  002A6A  501F               	movf	stoa@w^0,w,c
  6640  002A6C  5C25               	subwf	stoa@l^0,w,c
  6641  002A6E  5026               	movf	(stoa@l+1)^0,w,c
  6642  002A70  0A80               	xorlw	128
  6643  002A72  6E15               	movwf	??_stoa^0,c
  6644  002A74  5020               	movf	(stoa@w+1)^0,w,c
  6645  002A76  0A80               	xorlw	128
  6646  002A78  5815               	subwfb	??_stoa^0,w,c
  6647  002A7A  A0D8               	btfss	status,0,c
  6648  002A7C  D7E8               	goto	l4786
  6649  002A7E                     u3750:
  6650                           
  6651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  6652  002A7E  0E00               	movlw	0
  6653  002A80  6E1E               	movwf	(stoa@i+1)^0,c
  6654  002A82  0E00               	movlw	0
  6655  002A84  6E1D               	movwf	stoa@i^0,c
  6656                           
  6657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  6658  002A86  D025               	goto	l4800
  6659  002A88                     l4794:
  6660                           
  6661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  6662  002A88  0060  F087  FFF6   	movff	stoa@cp,tblptrl
  6663  002A8E  0060  F08B  FFF7   	movff	stoa@cp+1,tblptrh
  6664  002A94  0E00               	movlw	low (__smallconst shr (0+16))
  6665  002A96  6EF8               	movwf	tblptru,c
  6666  002A98  0E1F               	movlw	(high __ramtop+-1)
  6667  002A9A  64F7               	cpfsgt	tblptrh,c
  6668  002A9C  D003               	bra	u3767
  6669  002A9E  0008               	tblrd		*
  6670  002AA0  50F5               	movf	tablat,w,c
  6671  002AA2  D007               	bra	u3760
  6672  002AA4                     u3767:
  6673  002AA4  006F FFDB FFE1     	movff	tblptrl,fsr1l
  6674  002AAA  006F FFDF FFE2     	movff	tblptrh,fsr1h
  6675  002AB0  50E7               	movf	indf1,w,c
  6676  002AB2                     u3760:
  6677  002AB2  6E15               	movwf	??_stoa^0,c
  6678  002AB4  5015               	movf	??_stoa^0,w,c
  6679  002AB6  6E08               	movwf	fputc@c^0,c
  6680  002AB8  6A09               	clrf	(fputc@c+1)^0,c
  6681  002ABA  0060  F044  F00A   	movff	stoa@fp,fputc@fp
  6682  002AC0  0060  F048  F00B   	movff	stoa@fp+1,fputc@fp+1
  6683  002AC6  ECD1  F018         	call	_fputc	;wreg free
  6684                           
  6685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  6686  002ACA  4A21               	infsnz	stoa@cp^0,f,c
  6687  002ACC  2A22               	incf	(stoa@cp+1)^0,f,c
  6688                           
  6689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
  6690  002ACE  4A1D               	infsnz	stoa@i^0,f,c
  6691  002AD0  2A1E               	incf	(stoa@i+1)^0,f,c
  6692  002AD2                     l4800:
  6693                           
  6694                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  6695  002AD2  5023               	movf	stoa@p^0,w,c
  6696  002AD4  5C1D               	subwf	stoa@i^0,w,c
  6697  002AD6  501E               	movf	(stoa@i+1)^0,w,c
  6698  002AD8  0A80               	xorlw	128
  6699  002ADA  6E15               	movwf	??_stoa^0,c
  6700  002ADC  5024               	movf	(stoa@p+1)^0,w,c
  6701  002ADE  0A80               	xorlw	128
  6702  002AE0  5815               	subwfb	??_stoa^0,w,c
  6703  002AE2  A0D8               	btfss	status,0,c
  6704  002AE4  D7D1               	goto	l4794
  6705                           
  6706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  6707  002AE6  B056               	btfsc	_flags^0,0,c
  6708  002AE8  D00F               	goto	l4808
  6709  002AEA  D018               	goto	u3790
  6710  002AEC                     l4804:
  6711                           
  6712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  6713  002AEC  0E00               	movlw	0
  6714  002AEE  6E09               	movwf	(fputc@c+1)^0,c
  6715  002AF0  0E20               	movlw	32
  6716  002AF2  6E08               	movwf	fputc@c^0,c
  6717  002AF4  0060  F044  F00A   	movff	stoa@fp,fputc@fp
  6718  002AFA  0060  F048  F00B   	movff	stoa@fp+1,fputc@fp+1
  6719  002B00  ECD1  F018         	call	_fputc	;wreg free
  6720                           
  6721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
  6722  002B04  4A25               	infsnz	stoa@l^0,f,c
  6723  002B06  2A26               	incf	(stoa@l+1)^0,f,c
  6724  002B08                     l4808:
  6725                           
  6726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  6727  002B08  501F               	movf	stoa@w^0,w,c
  6728  002B0A  5C25               	subwf	stoa@l^0,w,c
  6729  002B0C  5026               	movf	(stoa@l+1)^0,w,c
  6730  002B0E  0A80               	xorlw	128
  6731  002B10  6E15               	movwf	??_stoa^0,c
  6732  002B12  5020               	movf	(stoa@w+1)^0,w,c
  6733  002B14  0A80               	xorlw	128
  6734  002B16  5815               	subwfb	??_stoa^0,w,c
  6735  002B18  A0D8               	btfss	status,0,c
  6736  002B1A  D7E8               	goto	l4804
  6737  002B1C                     u3790:
  6738                           
  6739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
  6740                           
  6741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 586:     }
  6742  002B1C  0060  F094  F011   	movff	stoa@l,?_stoa
  6743  002B22  0060  F098  F012   	movff	stoa@l+1,?_stoa+1
  6744  002B28  0012               	return		;funcret
  6745  002B2A                     __end_of_stoa:
  6746                           	opt callstack 0
  6747                           
  6748 ;; *************** function _dtoa *****************
  6749 ;; Defined at:
  6750 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6751 ;; Parameters:    Size  Location     Type
  6752 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  6753 ;;		 -> sprintf@f(6), NULL(0), 
  6754 ;;  d               8   36[COMRAM] long long 
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;  n               8   60[COMRAM] long long 
  6757 ;;  i               2   68[COMRAM] int 
  6758 ;;  s               2   58[COMRAM] int 
  6759 ;;  w               2   56[COMRAM] int 
  6760 ;;  p               2   54[COMRAM] int 
  6761 ;; Return value:  Size  Location     Type
  6762 ;;                  2   34[COMRAM] int 
  6763 ;; Registers used:
  6764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6765 ;; Tracked objects:
  6766 ;;		On entry : 3F/0
  6767 ;;		On exit  : 0/0
  6768 ;;		Unchanged: 0/0
  6769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6770 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6771 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6772 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6773 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6774 ;;Total ram usage:       36 bytes
  6775 ;; Hardware stack levels used:    1
  6776 ;; Hardware stack levels required when called:    9
  6777 ;; This function calls:
  6778 ;;		___aodiv
  6779 ;;		___aomod
  6780 ;;		_abs
  6781 ;;		_pad
  6782 ;; This function is called by:
  6783 ;;		_vfpfcnvrt
  6784 ;; This function uses a non-reentrant model
  6785 ;;
  6786                           
  6787                           	psect	text47
  6788  002054                     __ptext47:
  6789                           	opt callstack 0
  6790  002054                     _dtoa:
  6791                           	opt callstack 17
  6792                           
  6793                           ; BSR set to: 0
  6794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
  6795                           
  6796                           ;incstack = 0
  6797  002054  0060  F094  F03D   	movff	dtoa@d,dtoa@n
  6798  00205A  0060  F098  F03E   	movff	dtoa@d+1,dtoa@n+1
  6799  002060  0060  F09C  F03F   	movff	dtoa@d+2,dtoa@n+2
  6800  002066  0060  F0A0  F040   	movff	dtoa@d+3,dtoa@n+3
  6801  00206C  0060  F0A4  F041   	movff	dtoa@d+4,dtoa@n+4
  6802  002072  0060  F0A8  F042   	movff	dtoa@d+5,dtoa@n+5
  6803  002078  0060  F0AC  F043   	movff	dtoa@d+6,dtoa@n+6
  6804  00207E  0060  F0B0  F044   	movff	dtoa@d+7,dtoa@n+7
  6805                           
  6806                           ; BSR set to: 0
  6807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  6808  002084  AE44               	btfss	(dtoa@n+7)^0,7,c
  6809  002086  D002               	goto	u3550
  6810  002088  0E01               	movlw	1
  6811  00208A  D001               	goto	u3560
  6812  00208C                     u3550:
  6813  00208C  0E00               	movlw	0
  6814  00208E                     u3560:
  6815  00208E  6E3B               	movwf	dtoa@s^0,c
  6816  002090  6A3C               	clrf	(dtoa@s+1)^0,c
  6817                           
  6818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  6819  002092  503B               	movf	dtoa@s^0,w,c
  6820  002094  103C               	iorwf	(dtoa@s+1)^0,w,c
  6821  002096  B4D8               	btfsc	status,2,c
  6822  002098  D010               	goto	l4712
  6823                           
  6824                           ; BSR set to: 0
  6825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  6826  00209A  1E44               	comf	(dtoa@n+7)^0,f,c
  6827  00209C  1E43               	comf	(dtoa@n+6)^0,f,c
  6828  00209E  1E42               	comf	(dtoa@n+5)^0,f,c
  6829  0020A0  1E41               	comf	(dtoa@n+4)^0,f,c
  6830  0020A2  1E40               	comf	(dtoa@n+3)^0,f,c
  6831  0020A4  1E3F               	comf	(dtoa@n+2)^0,f,c
  6832  0020A6  1E3E               	comf	(dtoa@n+1)^0,f,c
  6833  0020A8  6C3D               	negf	dtoa@n^0,c
  6834  0020AA  0E00               	movlw	0
  6835  0020AC  223E               	addwfc	(dtoa@n+1)^0,f,c
  6836  0020AE  223F               	addwfc	(dtoa@n+2)^0,f,c
  6837  0020B0  2240               	addwfc	(dtoa@n+3)^0,f,c
  6838  0020B2  2241               	addwfc	(dtoa@n+4)^0,f,c
  6839  0020B4  2242               	addwfc	(dtoa@n+5)^0,f,c
  6840  0020B6  2243               	addwfc	(dtoa@n+6)^0,f,c
  6841  0020B8  2244               	addwfc	(dtoa@n+7)^0,f,c
  6842  0020BA                     l4712:
  6843                           
  6844                           ; BSR set to: 0
  6845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  6846  0020BA  AF93               	btfss	(_prec+1)& (0+255),7,b
  6847                           
  6848                           ; BSR set to: 0
  6849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  6850  0020BC  9256               	bcf	_flags^0,1,c
  6851                           
  6852                           ; BSR set to: 0
  6853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  6854  0020BE  BF93               	btfsc	(_prec+1)& (0+255),7,b
  6855  0020C0  D005               	goto	u3590
  6856  0020C2  5193               	movf	(_prec+1)& (0+255),w,b
  6857  0020C4  E108               	bnz	l1327
  6858  0020C6  0592               	decf	_prec& (0+255),w,b
  6859  0020C8  B0D8               	btfsc	status,0,c
  6860  0020CA  D005               	goto	l1327
  6861  0020CC                     u3590:
  6862                           
  6863                           ; BSR set to: 0
  6864  0020CC  0E00               	movlw	0
  6865  0020CE  6E38               	movwf	(dtoa@p+1)^0,c
  6866  0020D0  0E01               	movlw	1
  6867  0020D2  6E37               	movwf	dtoa@p^0,c
  6868  0020D4  D006               	goto	l1329
  6869  0020D6                     l1327:
  6870                           
  6871                           ; BSR set to: 0
  6872  0020D6  0060  F248  F037   	movff	_prec,dtoa@p
  6873  0020DC  0060  F24C  F038   	movff	_prec+1,dtoa@p+1
  6874  0020E2                     l1329:
  6875                           
  6876                           ; BSR set to: 0
  6877                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
  6878  0020E2  0060  F5A0  F039   	movff	_width,dtoa@w
  6879  0020E8  0060  F5A4  F03A   	movff	_width+1,dtoa@w+1
  6880                           
  6881                           ; BSR set to: 0
  6882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  6883  0020EE  503B               	movf	dtoa@s^0,w,c
  6884  0020F0  103C               	iorwf	(dtoa@s+1)^0,w,c
  6885  0020F2  A4D8               	btfss	status,2,c
  6886  0020F4  D002               	goto	u3610
  6887                           
  6888                           ; BSR set to: 0
  6889  0020F6  A456               	btfss	_flags^0,2,c
  6890  0020F8  D003               	goto	l4726
  6891  0020FA                     u3610:
  6892                           
  6893                           ; BSR set to: 0
  6894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
  6895  0020FA  0639               	decf	dtoa@w^0,f,c
  6896  0020FC  A0D8               	btfss	status,0,c
  6897  0020FE  063A               	decf	(dtoa@w+1)^0,f,c
  6898  002100                     l4726:
  6899                           
  6900                           ; BSR set to: 0
  6901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  6902  002100  0E00               	movlw	0
  6903  002102  6E46               	movwf	(dtoa@i+1)^0,c
  6904  002104  0E1F               	movlw	31
  6905  002106  6E45               	movwf	dtoa@i^0,c
  6906                           
  6907                           ; BSR set to: 0
  6908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  6909  002108  0E00               	movlw	0
  6910  00210A  0101               	movlb	1	; () banked
  6911  00210C  6F93               	movwf	(_dbuf+31)& (0+255),b
  6912                           
  6913                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6914  00210E  D09E               	goto	l4740
  6915  002110                     l4730:
  6916                           
  6917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
  6918  002110  0645               	decf	dtoa@i^0,f,c
  6919  002112  A0D8               	btfss	status,0,c
  6920  002114  0646               	decf	(dtoa@i+1)^0,f,c
  6921                           
  6922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  6923  002116  0E74               	movlw	low _dbuf
  6924  002118  2445               	addwf	dtoa@i^0,w,c
  6925  00211A  6ED9               	movwf	fsr2l,c
  6926  00211C  0E01               	movlw	high _dbuf
  6927  00211E  2046               	addwfc	(dtoa@i+1)^0,w,c
  6928  002120  6EDA               	movwf	fsr2h,c
  6929  002122  0060  F0F4  F006   	movff	dtoa@n,___aomod@dividend
  6930  002128  0060  F0F8  F007   	movff	dtoa@n+1,___aomod@dividend+1
  6931  00212E  0060  F0FC  F008   	movff	dtoa@n+2,___aomod@dividend+2
  6932  002134  0060  F100  F009   	movff	dtoa@n+3,___aomod@dividend+3
  6933  00213A  0060  F104  F00A   	movff	dtoa@n+4,___aomod@dividend+4
  6934  002140  0060  F108  F00B   	movff	dtoa@n+5,___aomod@dividend+5
  6935  002146  0060  F10C  F00C   	movff	dtoa@n+6,___aomod@dividend+6
  6936  00214C  0060  F110  F00D   	movff	dtoa@n+7,___aomod@dividend+7
  6937  002152  0E0A               	movlw	10
  6938  002154  6E0E               	movwf	___aomod@divisor^0,c
  6939  002156  0E00               	movlw	0
  6940  002158  6E0F               	movwf	(___aomod@divisor+1)^0,c
  6941  00215A  0E00               	movlw	0
  6942  00215C  6E10               	movwf	(___aomod@divisor+2)^0,c
  6943  00215E  0E00               	movlw	0
  6944  002160  6E11               	movwf	(___aomod@divisor+3)^0,c
  6945  002162  0E00               	movlw	0
  6946  002164  6E12               	movwf	(___aomod@divisor+4)^0,c
  6947  002166  0E00               	movlw	0
  6948  002168  6E13               	movwf	(___aomod@divisor+5)^0,c
  6949  00216A  0E00               	movlw	0
  6950  00216C  6E14               	movwf	(___aomod@divisor+6)^0,c
  6951  00216E  0E00               	movlw	0
  6952  002170  6E15               	movwf	(___aomod@divisor+7)^0,c
  6953  002172  EC41  F016         	call	___aomod	;wreg free
  6954  002176  0060  F018  F02D   	movff	?___aomod,??_dtoa
  6955  00217C  0060  F01C  F02E   	movff	?___aomod+1,??_dtoa+1
  6956  002182  0060  F020  F02F   	movff	?___aomod+2,??_dtoa+2
  6957  002188  0060  F024  F030   	movff	?___aomod+3,??_dtoa+3
  6958  00218E  0060  F028  F031   	movff	?___aomod+4,??_dtoa+4
  6959  002194  0060  F02C  F032   	movff	?___aomod+5,??_dtoa+5
  6960  00219A  0060  F030  F033   	movff	?___aomod+6,??_dtoa+6
  6961  0021A0  0060  F034  F034   	movff	?___aomod+7,??_dtoa+7
  6962  0021A6  0060  F0B4  F018   	movff	??_dtoa,abs@a
  6963  0021AC  0060  F0BC  F019   	movff	??_dtoa+2,abs@a+1
  6964  0021B2  ECA3  F01C         	call	_abs	;wreg free
  6965  0021B6  5018               	movf	?_abs^0,w,c
  6966  0021B8  0F30               	addlw	48
  6967  0021BA  6EDF               	movwf	indf2,c
  6968                           
  6969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
  6970  0021BC  0637               	decf	dtoa@p^0,f,c
  6971  0021BE  A0D8               	btfss	status,0,c
  6972  0021C0  0638               	decf	(dtoa@p+1)^0,f,c
  6973                           
  6974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
  6975  0021C2  0639               	decf	dtoa@w^0,f,c
  6976  0021C4  A0D8               	btfss	status,0,c
  6977  0021C6  063A               	decf	(dtoa@w+1)^0,f,c
  6978                           
  6979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  6980  0021C8  0060  F0F4  F006   	movff	dtoa@n,___aodiv@dividend
  6981  0021CE  0060  F0F8  F007   	movff	dtoa@n+1,___aodiv@dividend+1
  6982  0021D4  0060  F0FC  F008   	movff	dtoa@n+2,___aodiv@dividend+2
  6983  0021DA  0060  F100  F009   	movff	dtoa@n+3,___aodiv@dividend+3
  6984  0021E0  0060  F104  F00A   	movff	dtoa@n+4,___aodiv@dividend+4
  6985  0021E6  0060  F108  F00B   	movff	dtoa@n+5,___aodiv@dividend+5
  6986  0021EC  0060  F10C  F00C   	movff	dtoa@n+6,___aodiv@dividend+6
  6987  0021F2  0060  F110  F00D   	movff	dtoa@n+7,___aodiv@dividend+7
  6988  0021F8  0E0A               	movlw	10
  6989  0021FA  6E0E               	movwf	___aodiv@divisor^0,c
  6990  0021FC  0E00               	movlw	0
  6991  0021FE  6E0F               	movwf	(___aodiv@divisor+1)^0,c
  6992  002200  0E00               	movlw	0
  6993  002202  6E10               	movwf	(___aodiv@divisor+2)^0,c
  6994  002204  0E00               	movlw	0
  6995  002206  6E11               	movwf	(___aodiv@divisor+3)^0,c
  6996  002208  0E00               	movlw	0
  6997  00220A  6E12               	movwf	(___aodiv@divisor+4)^0,c
  6998  00220C  0E00               	movlw	0
  6999  00220E  6E13               	movwf	(___aodiv@divisor+5)^0,c
  7000  002210  0E00               	movlw	0
  7001  002212  6E14               	movwf	(___aodiv@divisor+6)^0,c
  7002  002214  0E00               	movlw	0
  7003  002216  6E15               	movwf	(___aodiv@divisor+7)^0,c
  7004  002218  EC95  F015         	call	___aodiv	;wreg free
  7005  00221C  0060  F018  F03D   	movff	?___aodiv,dtoa@n
  7006  002222  0060  F01C  F03E   	movff	?___aodiv+1,dtoa@n+1
  7007  002228  0060  F020  F03F   	movff	?___aodiv+2,dtoa@n+2
  7008  00222E  0060  F024  F040   	movff	?___aodiv+3,dtoa@n+3
  7009  002234  0060  F028  F041   	movff	?___aodiv+4,dtoa@n+4
  7010  00223A  0060  F02C  F042   	movff	?___aodiv+5,dtoa@n+5
  7011  002240  0060  F030  F043   	movff	?___aodiv+6,dtoa@n+6
  7012  002246  0060  F034  F044   	movff	?___aodiv+7,dtoa@n+7
  7013  00224C                     l4740:
  7014                           
  7015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7016  00224C  BE46               	btfsc	(dtoa@i+1)^0,7,c
  7017  00224E  D01F               	goto	u3660
  7018  002250  5046               	movf	(dtoa@i+1)^0,w,c
  7019  002252  E103               	bnz	u3620
  7020  002254  0445               	decf	dtoa@i^0,w,c
  7021  002256  A0D8               	btfss	status,0,c
  7022  002258  D01A               	goto	u3660
  7023  00225A                     u3620:
  7024  00225A  503D               	movf	dtoa@n^0,w,c
  7025  00225C  103E               	iorwf	(dtoa@n+1)^0,w,c
  7026  00225E  103F               	iorwf	(dtoa@n+2)^0,w,c
  7027  002260  1040               	iorwf	(dtoa@n+3)^0,w,c
  7028  002262  1041               	iorwf	(dtoa@n+4)^0,w,c
  7029  002264  1042               	iorwf	(dtoa@n+5)^0,w,c
  7030  002266  1043               	iorwf	(dtoa@n+6)^0,w,c
  7031  002268  1044               	iorwf	(dtoa@n+7)^0,w,c
  7032  00226A  A4D8               	btfss	status,2,c
  7033  00226C  D751               	goto	l4730
  7034  00226E  BE38               	btfsc	(dtoa@p+1)^0,7,c
  7035  002270  D005               	goto	u3640
  7036  002272  5038               	movf	(dtoa@p+1)^0,w,c
  7037  002274  E102               	bnz	u3641
  7038  002276  0437               	decf	dtoa@p^0,w,c
  7039  002278  B0D8               	btfsc	status,0,c
  7040  00227A                     u3641:
  7041  00227A  D74A               	goto	l4730
  7042  00227C                     u3640:
  7043  00227C  BE3A               	btfsc	(dtoa@w+1)^0,7,c
  7044  00227E  D007               	goto	u3660
  7045  002280  503A               	movf	(dtoa@w+1)^0,w,c
  7046  002282  E103               	bnz	u3650
  7047  002284  0439               	decf	dtoa@w^0,w,c
  7048  002286  A0D8               	btfss	status,0,c
  7049  002288  D002               	goto	u3660
  7050  00228A                     u3650:
  7051  00228A  B256               	btfsc	_flags^0,1,c
  7052  00228C  D741               	goto	l4730
  7053  00228E                     u3660:
  7054                           
  7055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  7056  00228E  503B               	movf	dtoa@s^0,w,c
  7057  002290  103C               	iorwf	(dtoa@s+1)^0,w,c
  7058  002292  A4D8               	btfss	status,2,c
  7059  002294  D002               	goto	u3680
  7060  002296  A456               	btfss	_flags^0,2,c
  7061  002298  D018               	goto	l4764
  7062  00229A                     u3680:
  7063                           
  7064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
  7065  00229A  0645               	decf	dtoa@i^0,f,c
  7066  00229C  A0D8               	btfss	status,0,c
  7067  00229E  0646               	decf	(dtoa@i+1)^0,f,c
  7068                           
  7069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  7070  0022A0  503B               	movf	dtoa@s^0,w,c
  7071  0022A2  103C               	iorwf	(dtoa@s+1)^0,w,c
  7072  0022A4  A4D8               	btfss	status,2,c
  7073  0022A6  D004               	goto	l4760
  7074  0022A8  0E00               	movlw	0
  7075  0022AA  6E36               	movwf	(_dtoa$2649+1)^0,c
  7076  0022AC  0E2B               	movlw	43
  7077  0022AE  D003               	goto	L10
  7078  0022B0                     l4760:
  7079  0022B0  0E00               	movlw	0
  7080  0022B2  6E36               	movwf	(_dtoa$2649+1)^0,c
  7081  0022B4  0E2D               	movlw	45
  7082  0022B6                     L10:
  7083  0022B6  6E35               	movwf	_dtoa$2649^0,c
  7084  0022B8  0E74               	movlw	low _dbuf
  7085  0022BA  2445               	addwf	dtoa@i^0,w,c
  7086  0022BC  6ED9               	movwf	fsr2l,c
  7087  0022BE  0E01               	movlw	high _dbuf
  7088  0022C0  2046               	addwfc	(dtoa@i+1)^0,w,c
  7089  0022C2  6EDA               	movwf	fsr2h,c
  7090  0022C4  0060  F0D7  FFDF   	movff	_dtoa$2649,indf2
  7091  0022CA                     l4764:
  7092                           
  7093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  7094  0022CA  0060  F08C  F018   	movff	dtoa@fp,pad@fp
  7095  0022D0  0060  F090  F019   	movff	dtoa@fp+1,pad@fp+1
  7096  0022D6  0E74               	movlw	low _dbuf
  7097  0022D8  2445               	addwf	dtoa@i^0,w,c
  7098  0022DA  6E1A               	movwf	pad@buf^0,c
  7099  0022DC  0E01               	movlw	high _dbuf
  7100  0022DE  2046               	addwfc	(dtoa@i+1)^0,w,c
  7101  0022E0  6E1B               	movwf	(pad@buf+1)^0,c
  7102  0022E2  0060  F0E4  F01C   	movff	dtoa@w,pad@p
  7103  0022E8  0060  F0E8  F01D   	movff	dtoa@w+1,pad@p+1
  7104  0022EE  EC21  F018         	call	_pad	;wreg free
  7105  0022F2  0060  F060  F023   	movff	?_pad,?_dtoa
  7106  0022F8  0060  F064  F024   	movff	?_pad+1,?_dtoa+1
  7107  0022FE  0012               	return		;funcret
  7108  002300                     __end_of_dtoa:
  7109                           	opt callstack 0
  7110                           
  7111 ;; *************** function _pad *****************
  7112 ;; Defined at:
  7113 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7114 ;; Parameters:    Size  Location     Type
  7115 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  7116 ;;		 -> sprintf@f(6), NULL(0), 
  7117 ;;  buf             2   25[COMRAM] PTR unsigned char 
  7118 ;;		 -> dbuf(32), 
  7119 ;;  p               2   27[COMRAM] int 
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;  w               2   32[COMRAM] int 
  7122 ;;  i               2   30[COMRAM] int 
  7123 ;; Return value:  Size  Location     Type
  7124 ;;                  2   23[COMRAM] int 
  7125 ;; Registers used:
  7126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7127 ;; Tracked objects:
  7128 ;;		On entry : 0/1
  7129 ;;		On exit  : 0/0
  7130 ;;		Unchanged: 0/0
  7131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7132 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7133 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7134 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7135 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7136 ;;Total ram usage:       11 bytes
  7137 ;; Hardware stack levels used:    1
  7138 ;; Hardware stack levels required when called:    8
  7139 ;; This function calls:
  7140 ;;		_fputc
  7141 ;;		_fputs
  7142 ;;		_strlen
  7143 ;; This function is called by:
  7144 ;;		_dtoa
  7145 ;; This function uses a non-reentrant model
  7146 ;;
  7147                           
  7148                           	psect	text48
  7149  003042                     __ptext48:
  7150                           	opt callstack 0
  7151  003042                     _pad:
  7152                           	opt callstack 17
  7153                           
  7154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  7155                           
  7156                           ;incstack = 0
  7157  003042  A056               	btfss	_flags^0,0,c
  7158  003044  D00E               	goto	l4604
  7159                           
  7160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  7161  003046  0060  F068  F011   	movff	pad@buf,fputs@s
  7162  00304C  0060  F06C  F012   	movff	pad@buf+1,fputs@s+1
  7163  003052  0060  F060  F013   	movff	pad@fp,fputs@fp
  7164  003058  0060  F064  F014   	movff	pad@fp+1,fputs@fp+1
  7165  00305E  EC84  F01C         	call	_fputs	;wreg free
  7166  003062                     l4604:
  7167                           
  7168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  7169  003062  BE1D               	btfsc	(pad@p+1)^0,7,c
  7170  003064  D007               	goto	l4608
  7171  003066  0060  F070  F021   	movff	pad@p,pad@w
  7172  00306C  0060  F074  F022   	movff	pad@p+1,pad@w+1
  7173  003072  D004               	goto	l1316
  7174  003074                     l4608:
  7175  003074  0E00               	movlw	0
  7176  003076  6E22               	movwf	(pad@w+1)^0,c
  7177  003078  0E00               	movlw	0
  7178  00307A  6E21               	movwf	pad@w^0,c
  7179  00307C                     l1316:
  7180                           
  7181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  7182  00307C  0E00               	movlw	0
  7183  00307E  6E20               	movwf	(pad@i+1)^0,c
  7184  003080  0E00               	movlw	0
  7185  003082  6E1F               	movwf	pad@i^0,c
  7186                           
  7187                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  7188  003084  D00E               	goto	l4614
  7189  003086                     l4610:
  7190                           
  7191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  7192  003086  0E00               	movlw	0
  7193  003088  6E09               	movwf	(fputc@c+1)^0,c
  7194  00308A  0E20               	movlw	32
  7195  00308C  6E08               	movwf	fputc@c^0,c
  7196  00308E  0060  F060  F00A   	movff	pad@fp,fputc@fp
  7197  003094  0060  F064  F00B   	movff	pad@fp+1,fputc@fp+1
  7198  00309A  ECD1  F018         	call	_fputc	;wreg free
  7199                           
  7200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
  7201  00309E  4A1F               	infsnz	pad@i^0,f,c
  7202  0030A0  2A20               	incf	(pad@i+1)^0,f,c
  7203  0030A2                     l4614:
  7204                           
  7205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  7206  0030A2  5021               	movf	pad@w^0,w,c
  7207  0030A4  5C1F               	subwf	pad@i^0,w,c
  7208  0030A6  5020               	movf	(pad@i+1)^0,w,c
  7209  0030A8  0A80               	xorlw	128
  7210  0030AA  6E1E               	movwf	??_pad^0,c
  7211  0030AC  5022               	movf	(pad@w+1)^0,w,c
  7212  0030AE  0A80               	xorlw	128
  7213  0030B0  581E               	subwfb	??_pad^0,w,c
  7214  0030B2  A0D8               	btfss	status,0,c
  7215  0030B4  D7E8               	goto	l4610
  7216                           
  7217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  7218  0030B6  B056               	btfsc	_flags^0,0,c
  7219  0030B8  D00E               	goto	l4618
  7220                           
  7221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  7222  0030BA  0060  F068  F011   	movff	pad@buf,fputs@s
  7223  0030C0  0060  F06C  F012   	movff	pad@buf+1,fputs@s+1
  7224  0030C6  0060  F060  F013   	movff	pad@fp,fputs@fp
  7225  0030CC  0060  F064  F014   	movff	pad@fp+1,fputs@fp+1
  7226  0030D2  EC84  F01C         	call	_fputs	;wreg free
  7227  0030D6                     l4618:
  7228                           
  7229                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  7230  0030D6  0060  F068  F006   	movff	pad@buf,strlen@s
  7231  0030DC  0060  F06C  F007   	movff	pad@buf+1,strlen@s+1
  7232  0030E2  ECAB  F01B         	call	_strlen	;wreg free
  7233  0030E6  5021               	movf	pad@w^0,w,c
  7234  0030E8  2406               	addwf	?_strlen^0,w,c
  7235  0030EA  6E18               	movwf	?_pad^0,c
  7236  0030EC  5022               	movf	(pad@w+1)^0,w,c
  7237  0030EE  2007               	addwfc	(?_strlen+1)^0,w,c
  7238  0030F0  6E19               	movwf	(?_pad+1)^0,c
  7239  0030F2  0012               	return		;funcret
  7240  0030F4                     __end_of_pad:
  7241                           	opt callstack 0
  7242                           
  7243 ;; *************** function _strlen *****************
  7244 ;; Defined at:
  7245 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
  7246 ;; Parameters:    Size  Location     Type
  7247 ;;  s               2    5[COMRAM] PTR const unsigned char 
  7248 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  7249 ;;		 -> STR_16(4), STR_14(4), STR_12(4), STR_10(4), 
  7250 ;;		 -> STR_8(4), STR_6(4), STR_4(5), main@buffer(24), 
  7251 ;;		 -> work_sw@buffer(128), 
  7252 ;; Auto vars:     Size  Location     Type
  7253 ;;  a               2    7[COMRAM] PTR const unsigned char 
  7254 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  7255 ;;		 -> STR_16(4), STR_14(4), STR_12(4), STR_10(4), 
  7256 ;;		 -> STR_8(4), STR_6(4), STR_4(5), main@buffer(24), 
  7257 ;;		 -> work_sw@buffer(128), 
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  2    5[COMRAM] unsigned int 
  7260 ;; Registers used:
  7261 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/1
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7267 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7268 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7270 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7271 ;;Total ram usage:        4 bytes
  7272 ;; Hardware stack levels used:    1
  7273 ;; Hardware stack levels required when called:    4
  7274 ;; This function calls:
  7275 ;;		Nothing
  7276 ;; This function is called by:
  7277 ;;		_eaDogM_WriteString
  7278 ;;		_pad
  7279 ;;		_stoa
  7280 ;; This function uses a non-reentrant model
  7281 ;;
  7282                           
  7283                           	psect	text49
  7284  003756                     __ptext49:
  7285                           	opt callstack 0
  7286  003756                     _strlen:
  7287                           	opt callstack 21
  7288                           
  7289                           ;incstack = 0
  7290  003756  0060  F018  F008   	movff	strlen@s,strlen@a
  7291  00375C  0060  F01C  F009   	movff	strlen@s+1,strlen@a+1
  7292  003762  D002               	goto	l4586
  7293  003764                     l4584:
  7294  003764  4A06               	infsnz	strlen@s^0,f,c
  7295  003766  2A07               	incf	(strlen@s+1)^0,f,c
  7296  003768                     l4586:
  7297  003768  0060  F01B  FFF6   	movff	strlen@s,tblptrl
  7298  00376E  0060  F01F  FFF7   	movff	strlen@s+1,tblptrh
  7299  003774  0E00               	movlw	low (__smallconst shr (0+16))
  7300  003776  6EF8               	movwf	tblptru,c
  7301  003778  0E1F               	movlw	(high __ramtop+-1)
  7302  00377A  64F7               	cpfsgt	tblptrh,c
  7303  00377C  D003               	bra	u3347
  7304  00377E  0008               	tblrd		*
  7305  003780  50F5               	movf	tablat,w,c
  7306  003782  D007               	bra	u3340
  7307  003784                     u3347:
  7308  003784  006F FFDB FFE1     	movff	tblptrl,fsr1l
  7309  00378A  006F FFDF FFE2     	movff	tblptrh,fsr1h
  7310  003790  50E7               	movf	indf1,w,c
  7311  003792                     u3340:
  7312  003792  0900               	iorlw	0
  7313  003794  A4D8               	btfss	status,2,c
  7314  003796  D7E6               	goto	l4584
  7315  003798  5008               	movf	strlen@a^0,w,c
  7316  00379A  5C06               	subwf	strlen@s^0,w,c
  7317  00379C  6E06               	movwf	?_strlen^0,c
  7318  00379E  5009               	movf	(strlen@a+1)^0,w,c
  7319  0037A0  5807               	subwfb	(strlen@s+1)^0,w,c
  7320  0037A2  6E07               	movwf	(?_strlen+1)^0,c
  7321  0037A4  0012               	return		;funcret
  7322  0037A6                     __end_of_strlen:
  7323                           	opt callstack 0
  7324                           
  7325 ;; *************** function _fputs *****************
  7326 ;; Defined at:
  7327 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
  7328 ;; Parameters:    Size  Location     Type
  7329 ;;  s               2   16[COMRAM] PTR const unsigned char 
  7330 ;;		 -> dbuf(32), 
  7331 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  7332 ;;		 -> sprintf@f(6), NULL(0), 
  7333 ;; Auto vars:     Size  Location     Type
  7334 ;;  i               2   21[COMRAM] int 
  7335 ;;  c               1   20[COMRAM] unsigned char 
  7336 ;; Return value:  Size  Location     Type
  7337 ;;                  2   16[COMRAM] int 
  7338 ;; Registers used:
  7339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7340 ;; Tracked objects:
  7341 ;;		On entry : 0/1
  7342 ;;		On exit  : 0/0
  7343 ;;		Unchanged: 0/0
  7344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7345 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7346 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7348 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7349 ;;Total ram usage:        7 bytes
  7350 ;; Hardware stack levels used:    1
  7351 ;; Hardware stack levels required when called:    7
  7352 ;; This function calls:
  7353 ;;		_fputc
  7354 ;; This function is called by:
  7355 ;;		_pad
  7356 ;; This function uses a non-reentrant model
  7357 ;;
  7358                           
  7359                           	psect	text50
  7360  003908                     __ptext50:
  7361                           	opt callstack 0
  7362  003908                     _fputs:
  7363                           	opt callstack 17
  7364                           
  7365                           ;incstack = 0
  7366  003908  0E00               	movlw	0
  7367  00390A  6E17               	movwf	(fputs@i+1)^0,c
  7368  00390C  0E00               	movlw	0
  7369  00390E  6E16               	movwf	fputs@i^0,c
  7370  003910  D00E               	goto	l4598
  7371  003912                     l4594:
  7372  003912  0060  F054  F008   	movff	fputs@c,fputc@c
  7373  003918  6A09               	clrf	(fputc@c+1)^0,c
  7374  00391A  0060  F04C  F00A   	movff	fputs@fp,fputc@fp
  7375  003920  0060  F050  F00B   	movff	fputs@fp+1,fputc@fp+1
  7376  003926  ECD1  F018         	call	_fputc	;wreg free
  7377  00392A  4A16               	infsnz	fputs@i^0,f,c
  7378  00392C  2A17               	incf	(fputs@i+1)^0,f,c
  7379  00392E                     l4598:
  7380  00392E  5016               	movf	fputs@i^0,w,c
  7381  003930  2411               	addwf	fputs@s^0,w,c
  7382  003932  6ED9               	movwf	fsr2l,c
  7383  003934  5017               	movf	(fputs@i+1)^0,w,c
  7384  003936  2012               	addwfc	(fputs@s+1)^0,w,c
  7385  003938  6EDA               	movwf	fsr2h,c
  7386  00393A  50DF               	movf	indf2,w,c
  7387  00393C  6E15               	movwf	fputs@c^0,c
  7388  00393E  5015               	movf	fputs@c^0,w,c
  7389  003940  B4D8               	btfsc	status,2,c
  7390  003942  0012               	return	
  7391  003944  D7E6               	goto	l4594
  7392  003946                     __end_of_fputs:
  7393                           	opt callstack 0
  7394                           
  7395 ;; *************** function _fputc *****************
  7396 ;; Defined at:
  7397 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
  7398 ;; Parameters:    Size  Location     Type
  7399 ;;  c               2    7[COMRAM] int 
  7400 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  7401 ;;		 -> sprintf@f(6), NULL(0), 
  7402 ;; Auto vars:     Size  Location     Type
  7403 ;;		None
  7404 ;; Return value:  Size  Location     Type
  7405 ;;                  2    7[COMRAM] int 
  7406 ;; Registers used:
  7407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7408 ;; Tracked objects:
  7409 ;;		On entry : 0/0
  7410 ;;		On exit  : 0/0
  7411 ;;		Unchanged: 0/0
  7412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7413 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7415 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7416 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7417 ;;Total ram usage:        9 bytes
  7418 ;; Hardware stack levels used:    1
  7419 ;; Hardware stack levels required when called:    6
  7420 ;; This function calls:
  7421 ;;		_putch
  7422 ;; This function is called by:
  7423 ;;		_pad
  7424 ;;		_stoa
  7425 ;;		_vfpfcnvrt
  7426 ;;		_fputs
  7427 ;; This function uses a non-reentrant model
  7428 ;;
  7429                           
  7430                           	psect	text51
  7431  0031A2                     __ptext51:
  7432                           	opt callstack 0
  7433  0031A2                     _fputc:
  7434                           	opt callstack 19
  7435                           
  7436                           ;incstack = 0
  7437  0031A2  500A               	movf	fputc@fp^0,w,c
  7438  0031A4  100B               	iorwf	(fputc@fp+1)^0,w,c
  7439  0031A6  B4D8               	btfsc	status,2,c
  7440  0031A8  D004               	goto	u3310
  7441  0031AA  500A               	movf	fputc@fp^0,w,c
  7442  0031AC  100B               	iorwf	(fputc@fp+1)^0,w,c
  7443  0031AE  A4D8               	btfss	status,2,c
  7444  0031B0  D004               	goto	l4574
  7445  0031B2                     u3310:
  7446  0031B2  5008               	movf	fputc@c^0,w,c
  7447  0031B4  ECEB  F01F         	call	_putch
  7448  0031B8  0012               	return	
  7449  0031BA                     l4574:
  7450  0031BA  EE20 F004          	lfsr	2,4
  7451  0031BE  500A               	movf	fputc@fp^0,w,c
  7452  0031C0  26D9               	addwf	fsr2l,f,c
  7453  0031C2  500B               	movf	(fputc@fp+1)^0,w,c
  7454  0031C4  22DA               	addwfc	fsr2h,f,c
  7455  0031C6  50DE               	movf	postinc2,w,c
  7456  0031C8  10DE               	iorwf	postinc2,w,c
  7457  0031CA  B4D8               	btfsc	status,2,c
  7458  0031CC  D016               	goto	u3330
  7459  0031CE  EE20 F004          	lfsr	2,4
  7460  0031D2  500A               	movf	fputc@fp^0,w,c
  7461  0031D4  26D9               	addwf	fsr2l,f,c
  7462  0031D6  500B               	movf	(fputc@fp+1)^0,w,c
  7463  0031D8  22DA               	addwfc	fsr2h,f,c
  7464  0031DA  EE10 F002          	lfsr	1,2
  7465  0031DE  500A               	movf	fputc@fp^0,w,c
  7466  0031E0  26E1               	addwf	fsr1l,f,c
  7467  0031E2  500B               	movf	(fputc@fp+1)^0,w,c
  7468  0031E4  22E2               	addwfc	fsr1h,f,c
  7469  0031E6  50DE               	movf	postinc2,w,c
  7470  0031E8  5CE6               	subwf	postinc1,w,c
  7471  0031EA  50E6               	movf	postinc1,w,c
  7472  0031EC  0A80               	xorlw	128
  7473  0031EE  6E10               	movwf	(??_fputc+4)^0,c
  7474  0031F0  50DE               	movf	postinc2,w,c
  7475  0031F2  0A80               	xorlw	128
  7476  0031F4  5810               	subwfb	(??_fputc+4)^0,w,c
  7477  0031F6  B0D8               	btfsc	status,0,c
  7478  0031F8  0012               	return	
  7479  0031FA                     u3330:
  7480  0031FA  EE20 F002          	lfsr	2,2
  7481  0031FE  500A               	movf	fputc@fp^0,w,c
  7482  003200  26D9               	addwf	fsr2l,f,c
  7483  003202  500B               	movf	(fputc@fp+1)^0,w,c
  7484  003204  22DA               	addwfc	fsr2h,f,c
  7485  003206  006F FF78  F00C    	movff	postinc2,??_fputc
  7486  00320C  006F FF74  F00D    	movff	postdec2,??_fputc+1
  7487  003212  0060  F02B  FFD9   	movff	fputc@fp,fsr2l
  7488  003218  0060  F02F  FFDA   	movff	fputc@fp+1,fsr2h
  7489  00321E  006F FF78  F00E    	movff	postinc2,??_fputc+2
  7490  003224  006F FF74  F00F    	movff	postdec2,??_fputc+3
  7491  00322A  500C               	movf	??_fputc^0,w,c
  7492  00322C  240E               	addwf	(??_fputc+2)^0,w,c
  7493  00322E  6ED9               	movwf	fsr2l,c
  7494  003230  500D               	movf	(??_fputc+1)^0,w,c
  7495  003232  200F               	addwfc	(??_fputc+3)^0,w,c
  7496  003234  6EDA               	movwf	fsr2h,c
  7497  003236  0060  F023  FFDF   	movff	fputc@c,indf2
  7498  00323C  EE20 F002          	lfsr	2,2
  7499  003240  500A               	movf	fputc@fp^0,w,c
  7500  003242  26D9               	addwf	fsr2l,f,c
  7501  003244  500B               	movf	(fputc@fp+1)^0,w,c
  7502  003246  22DA               	addwfc	fsr2h,f,c
  7503  003248  2ADE               	incf	postinc2,f,c
  7504  00324A  0E00               	movlw	0
  7505  00324C  22DD               	addwfc	postdec2,f,c
  7506  00324E  0012               	return		;funcret
  7507  003250                     __end_of_fputc:
  7508                           	opt callstack 0
  7509                           
  7510 ;; *************** function _putch *****************
  7511 ;; Defined at:
  7512 ;;		line 221 in file "mcc_generated_files/uart2.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;  txData          1    wreg     unsigned char 
  7515 ;; Auto vars:     Size  Location     Type
  7516 ;;  txData          1    6[COMRAM] unsigned char 
  7517 ;; Return value:  Size  Location     Type
  7518 ;;                  1    wreg      void 
  7519 ;; Registers used:
  7520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7521 ;; Tracked objects:
  7522 ;;		On entry : 0/0
  7523 ;;		On exit  : 3F/39
  7524 ;;		Unchanged: 0/0
  7525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7527 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7529 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7530 ;;Total ram usage:        1 bytes
  7531 ;; Hardware stack levels used:    1
  7532 ;; Hardware stack levels required when called:    5
  7533 ;; This function calls:
  7534 ;;		_UART2_Write
  7535 ;; This function is called by:
  7536 ;;		_fputc
  7537 ;; This function uses a non-reentrant model
  7538 ;;
  7539                           
  7540                           	psect	text52
  7541  003FD6                     __ptext52:
  7542                           	opt callstack 0
  7543  003FD6                     _putch:
  7544                           	opt callstack 19
  7545                           
  7546                           ;incstack = 0
  7547                           ;putch@txData stored from wreg
  7548  003FD6  6E07               	movwf	putch@txData^0,c
  7549                           
  7550                           ;mcc_generated_files/uart2.c: 221: void putch(char txData);mcc_generated_files/uart2.c: 
      +                          222: {;mcc_generated_files/uart2.c: 223:     UART2_Write(txData);
  7551  003FD8  5007               	movf	putch@txData^0,w,c
  7552  003FDA  EC63  F01C         	call	_UART2_Write
  7553                           
  7554                           ; BSR set to: 57
  7555  003FDE  0012               	return		;funcret
  7556  003FE0                     __end_of_putch:
  7557                           	opt callstack 0
  7558                           
  7559 ;; *************** function _UART2_Write *****************
  7560 ;; Defined at:
  7561 ;;		line 193 in file "mcc_generated_files/uart2.c"
  7562 ;; Parameters:    Size  Location     Type
  7563 ;;  txData          1    wreg     unsigned char 
  7564 ;; Auto vars:     Size  Location     Type
  7565 ;;  txData          1    5[COMRAM] unsigned char 
  7566 ;; Return value:  Size  Location     Type
  7567 ;;                  1    wreg      void 
  7568 ;; Registers used:
  7569 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7570 ;; Tracked objects:
  7571 ;;		On entry : 0/0
  7572 ;;		On exit  : 3F/39
  7573 ;;		Unchanged: 0/0
  7574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7576 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7578 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7579 ;;Total ram usage:        1 bytes
  7580 ;; Hardware stack levels used:    1
  7581 ;; Hardware stack levels required when called:    4
  7582 ;; This function calls:
  7583 ;;		Nothing
  7584 ;; This function is called by:
  7585 ;;		_putch
  7586 ;;		_Digital232_RW
  7587 ;; This function uses a non-reentrant model
  7588 ;;
  7589                           
  7590                           	psect	text53
  7591  0038C6                     __ptext53:
  7592                           	opt callstack 0
  7593  0038C6                     _UART2_Write:
  7594                           	opt callstack 19
  7595                           
  7596                           ; BSR set to: 57
  7597                           ;incstack = 0
  7598                           ;UART2_Write@txData stored from wreg
  7599  0038C6  6E06               	movwf	UART2_Write@txData^0,c
  7600  0038C8                     
  7601                           ;mcc_generated_files/uart2.c: 195:     while(0 == uart2TxBufferRemaining)
  7602                           
  7603                           ;mcc_generated_files/uart2.c: 193: void UART2_Write(uint8_t txData);mcc_generated_files/
      +                          uart2.c: 194: {;mcc_generated_files/uart2.c: 195:     while(0 == uart2TxBufferRemaining)
  7604  0038C8  0100               	movlb	0	; () banked
  7605  0038CA  5198               	movf	_uart2TxBufferRemaining& (0+255),w,b	;volatile
  7606  0038CC  B4D8               	btfsc	status,2,c
  7607  0038CE  D7FC               	goto	l4548
  7608                           
  7609                           ; BSR set to: 0
  7610                           ;mcc_generated_files/uart2.c: 199:     if(0 == PIE6bits.U2TXIE)
  7611  0038D0  0139               	movlb	57	; () banked
  7612  0038D2  B796               	btfsc	150,3,b	;volatile
  7613  0038D4  D004               	goto	l494
  7614                           
  7615                           ; BSR set to: 57
  7616                           ;mcc_generated_files/uart2.c: 200:     {;mcc_generated_files/uart2.c: 201:         U2TXB
      +                           = txData;
  7617  0038D6  0060  F01B  FDD2   	movff	UART2_Write@txData,15826	;volatile
  7618                           
  7619                           ;mcc_generated_files/uart2.c: 202:     }
  7620  0038DC  D012               	goto	l4564
  7621  0038DE                     l494:
  7622                           
  7623                           ; BSR set to: 57
  7624                           ;mcc_generated_files/uart2.c: 204:     {;mcc_generated_files/uart2.c: 205:         PIE6b
      +                          its.U2TXIE = 0;
  7625  0038DE  9796               	bcf	150,3,b	;volatile
  7626                           
  7627                           ; BSR set to: 57
  7628                           ;mcc_generated_files/uart2.c: 206:         uart2TxBuffer[uart2TxHead++] = txData;
  7629  0038E0  0E1E               	movlw	low _uart2TxBuffer
  7630  0038E2  0100               	movlb	0	; () banked
  7631  0038E4  259A               	addwf	_uart2TxHead& (0+255),w,b	;volatile
  7632  0038E6  6ED9               	movwf	fsr2l,c
  7633  0038E8  6ADA               	clrf	fsr2h,c
  7634  0038EA  0E01               	movlw	high _uart2TxBuffer
  7635  0038EC  22DA               	addwfc	fsr2h,f,c
  7636  0038EE  0060  F01B  FFDF   	movff	UART2_Write@txData,indf2
  7637                           
  7638                           ; BSR set to: 0
  7639  0038F4  2B9A               	incf	_uart2TxHead& (0+255),f,b	;volatile
  7640                           
  7641                           ; BSR set to: 0
  7642                           ;mcc_generated_files/uart2.c: 207:         if(sizeof(uart2TxBuffer) <= uart2TxHead)
  7643  0038F6  0E07               	movlw	7
  7644  0038F8  659A               	cpfsgt	_uart2TxHead& (0+255),b
  7645  0038FA  D002               	goto	l4562
  7646                           
  7647                           ; BSR set to: 0
  7648                           ;mcc_generated_files/uart2.c: 208:         {;mcc_generated_files/uart2.c: 209:          
      +                             uart2TxHead = 0;
  7649  0038FC  0E00               	movlw	0
  7650  0038FE  6F9A               	movwf	_uart2TxHead& (0+255),b	;volatile
  7651  003900                     l4562:
  7652                           
  7653                           ; BSR set to: 0
  7654                           ;mcc_generated_files/uart2.c: 211:         uart2TxBufferRemaining--;
  7655  003900  0798               	decf	_uart2TxBufferRemaining& (0+255),f,b	;volatile
  7656  003902                     l4564:
  7657                           
  7658                           ;mcc_generated_files/uart2.c: 213:     PIE6bits.U2TXIE = 1;
  7659  003902  0139               	movlb	57	; () banked
  7660  003904  8796               	bsf	150,3,b	;volatile
  7661                           
  7662                           ; BSR set to: 57
  7663  003906  0012               	return		;funcret
  7664  003908                     __end_of_UART2_Write:
  7665                           	opt callstack 0
  7666                           
  7667 ;; *************** function _abs *****************
  7668 ;; Defined at:
  7669 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
  7670 ;; Parameters:    Size  Location     Type
  7671 ;;  a               2   23[COMRAM] int 
  7672 ;; Auto vars:     Size  Location     Type
  7673 ;;		None
  7674 ;; Return value:  Size  Location     Type
  7675 ;;                  2   23[COMRAM] int 
  7676 ;; Registers used:
  7677 ;;		wreg, status,2, status,0
  7678 ;; Tracked objects:
  7679 ;;		On entry : 0/1
  7680 ;;		On exit  : 0/0
  7681 ;;		Unchanged: 0/0
  7682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7683 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7685 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7686 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7687 ;;Total ram usage:        4 bytes
  7688 ;; Hardware stack levels used:    1
  7689 ;; Hardware stack levels required when called:    4
  7690 ;; This function calls:
  7691 ;;		Nothing
  7692 ;; This function is called by:
  7693 ;;		_dtoa
  7694 ;; This function uses a non-reentrant model
  7695 ;;
  7696                           
  7697                           	psect	text54
  7698  003946                     __ptext54:
  7699                           	opt callstack 0
  7700  003946                     _abs:
  7701                           	opt callstack 21
  7702                           
  7703                           ; BSR set to: 57
  7704                           ;incstack = 0
  7705  003946  BE19               	btfsc	(abs@a+1)^0,7,c
  7706  003948  D005               	goto	u3410
  7707  00394A  5019               	movf	(abs@a+1)^0,w,c
  7708  00394C  E114               	bnz	l2063
  7709  00394E  0418               	decf	abs@a^0,w,c
  7710  003950  B0D8               	btfsc	status,0,c
  7711  003952  D011               	goto	l2063
  7712  003954                     u3410:
  7713  003954  0060  F060  F01A   	movff	abs@a,??_abs
  7714  00395A  0060  F064  F01B   	movff	abs@a+1,??_abs+1
  7715  003960  1E1A               	comf	??_abs^0,f,c
  7716  003962  1E1B               	comf	(??_abs+1)^0,f,c
  7717  003964  4A1A               	infsnz	??_abs^0,f,c
  7718  003966  2A1B               	incf	(??_abs+1)^0,f,c
  7719  003968  0060  F068  F018   	movff	??_abs,?_abs
  7720  00396E  0060  F06C  F019   	movff	??_abs+1,?_abs+1
  7721  003974  0012               	return	
  7722  003976                     l2063:
  7723  003976  0060  F060  F018   	movff	abs@a,?_abs
  7724  00397C  0060  F064  F019   	movff	abs@a+1,?_abs+1
  7725  003982  0012               	return		;funcret
  7726  003984                     __end_of_abs:
  7727                           	opt callstack 0
  7728                           
  7729 ;; *************** function ___aomod *****************
  7730 ;; Defined at:
  7731 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
  7732 ;; Parameters:    Size  Location     Type
  7733 ;;  dividend        8    5[COMRAM] long long 
  7734 ;;  divisor         8   13[COMRAM] long long 
  7735 ;; Auto vars:     Size  Location     Type
  7736 ;;  sign            1   22[COMRAM] unsigned char 
  7737 ;;  counter         1   21[COMRAM] unsigned char 
  7738 ;; Return value:  Size  Location     Type
  7739 ;;                  8    5[COMRAM] long long 
  7740 ;; Registers used:
  7741 ;;		wreg, status,2, status,0
  7742 ;; Tracked objects:
  7743 ;;		On entry : 0/1
  7744 ;;		On exit  : 0/0
  7745 ;;		Unchanged: 0/0
  7746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7747 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7748 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7750 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7751 ;;Total ram usage:       18 bytes
  7752 ;; Hardware stack levels used:    1
  7753 ;; Hardware stack levels required when called:    4
  7754 ;; This function calls:
  7755 ;;		Nothing
  7756 ;; This function is called by:
  7757 ;;		_dtoa
  7758 ;; This function uses a non-reentrant model
  7759 ;;
  7760                           
  7761                           	psect	text55
  7762  002C82                     __ptext55:
  7763                           	opt callstack 0
  7764  002C82                     ___aomod:
  7765                           	opt callstack 21
  7766                           
  7767                           ;incstack = 0
  7768  002C82  0E00               	movlw	0
  7769  002C84  6E17               	movwf	___aomod@sign^0,c
  7770  002C86  AE0D               	btfss	(___aomod@dividend+7)^0,7,c
  7771  002C88  D012               	goto	l4678
  7772  002C8A  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  7773  002C8C  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  7774  002C8E  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  7775  002C90  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  7776  002C92  1E09               	comf	(___aomod@dividend+3)^0,f,c
  7777  002C94  1E08               	comf	(___aomod@dividend+2)^0,f,c
  7778  002C96  1E07               	comf	(___aomod@dividend+1)^0,f,c
  7779  002C98  6C06               	negf	___aomod@dividend^0,c
  7780  002C9A  0E00               	movlw	0
  7781  002C9C  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  7782  002C9E  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  7783  002CA0  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  7784  002CA2  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  7785  002CA4  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  7786  002CA6  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  7787  002CA8  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  7788  002CAA  0E01               	movlw	1
  7789  002CAC  6E17               	movwf	___aomod@sign^0,c
  7790  002CAE                     l4678:
  7791  002CAE  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  7792  002CB0  D010               	goto	l4682
  7793  002CB2  1E15               	comf	(___aomod@divisor+7)^0,f,c
  7794  002CB4  1E14               	comf	(___aomod@divisor+6)^0,f,c
  7795  002CB6  1E13               	comf	(___aomod@divisor+5)^0,f,c
  7796  002CB8  1E12               	comf	(___aomod@divisor+4)^0,f,c
  7797  002CBA  1E11               	comf	(___aomod@divisor+3)^0,f,c
  7798  002CBC  1E10               	comf	(___aomod@divisor+2)^0,f,c
  7799  002CBE  1E0F               	comf	(___aomod@divisor+1)^0,f,c
  7800  002CC0  6C0E               	negf	___aomod@divisor^0,c
  7801  002CC2  0E00               	movlw	0
  7802  002CC4  220F               	addwfc	(___aomod@divisor+1)^0,f,c
  7803  002CC6  2210               	addwfc	(___aomod@divisor+2)^0,f,c
  7804  002CC8  2211               	addwfc	(___aomod@divisor+3)^0,f,c
  7805  002CCA  2212               	addwfc	(___aomod@divisor+4)^0,f,c
  7806  002CCC  2213               	addwfc	(___aomod@divisor+5)^0,f,c
  7807  002CCE  2214               	addwfc	(___aomod@divisor+6)^0,f,c
  7808  002CD0  2215               	addwfc	(___aomod@divisor+7)^0,f,c
  7809  002CD2                     l4682:
  7810  002CD2  500E               	movf	___aomod@divisor^0,w,c
  7811  002CD4  100F               	iorwf	(___aomod@divisor+1)^0,w,c
  7812  002CD6  1010               	iorwf	(___aomod@divisor+2)^0,w,c
  7813  002CD8  1011               	iorwf	(___aomod@divisor+3)^0,w,c
  7814  002CDA  1012               	iorwf	(___aomod@divisor+4)^0,w,c
  7815  002CDC  1013               	iorwf	(___aomod@divisor+5)^0,w,c
  7816  002CDE  1014               	iorwf	(___aomod@divisor+6)^0,w,c
  7817  002CE0  1015               	iorwf	(___aomod@divisor+7)^0,w,c
  7818  002CE2  B4D8               	btfsc	status,2,c
  7819  002CE4  D03C               	goto	l4698
  7820  002CE6  0E01               	movlw	1
  7821  002CE8  6E16               	movwf	___aomod@counter^0,c
  7822  002CEA  D00A               	goto	l4688
  7823  002CEC                     l4686:
  7824  002CEC  90D8               	bcf	status,0,c
  7825  002CEE  360E               	rlcf	___aomod@divisor^0,f,c
  7826  002CF0  360F               	rlcf	(___aomod@divisor+1)^0,f,c
  7827  002CF2  3610               	rlcf	(___aomod@divisor+2)^0,f,c
  7828  002CF4  3611               	rlcf	(___aomod@divisor+3)^0,f,c
  7829  002CF6  3612               	rlcf	(___aomod@divisor+4)^0,f,c
  7830  002CF8  3613               	rlcf	(___aomod@divisor+5)^0,f,c
  7831  002CFA  3614               	rlcf	(___aomod@divisor+6)^0,f,c
  7832  002CFC  3615               	rlcf	(___aomod@divisor+7)^0,f,c
  7833  002CFE  2A16               	incf	___aomod@counter^0,f,c
  7834  002D00                     l4688:
  7835  002D00  AE15               	btfss	(___aomod@divisor+7)^0,7,c
  7836  002D02  D7F4               	goto	l4686
  7837  002D04                     u3520:
  7838  002D04  500E               	movf	___aomod@divisor^0,w,c
  7839  002D06  5C06               	subwf	___aomod@dividend^0,w,c
  7840  002D08  500F               	movf	(___aomod@divisor+1)^0,w,c
  7841  002D0A  5807               	subwfb	(___aomod@dividend+1)^0,w,c
  7842  002D0C  5010               	movf	(___aomod@divisor+2)^0,w,c
  7843  002D0E  5808               	subwfb	(___aomod@dividend+2)^0,w,c
  7844  002D10  5011               	movf	(___aomod@divisor+3)^0,w,c
  7845  002D12  5809               	subwfb	(___aomod@dividend+3)^0,w,c
  7846  002D14  5012               	movf	(___aomod@divisor+4)^0,w,c
  7847  002D16  580A               	subwfb	(___aomod@dividend+4)^0,w,c
  7848  002D18  5013               	movf	(___aomod@divisor+5)^0,w,c
  7849  002D1A  580B               	subwfb	(___aomod@dividend+5)^0,w,c
  7850  002D1C  5014               	movf	(___aomod@divisor+6)^0,w,c
  7851  002D1E  580C               	subwfb	(___aomod@dividend+6)^0,w,c
  7852  002D20  5015               	movf	(___aomod@divisor+7)^0,w,c
  7853  002D22  580D               	subwfb	(___aomod@dividend+7)^0,w,c
  7854  002D24  A0D8               	btfss	status,0,c
  7855  002D26  D010               	goto	l4694
  7856  002D28  500E               	movf	___aomod@divisor^0,w,c
  7857  002D2A  5E06               	subwf	___aomod@dividend^0,f,c
  7858  002D2C  500F               	movf	(___aomod@divisor+1)^0,w,c
  7859  002D2E  5A07               	subwfb	(___aomod@dividend+1)^0,f,c
  7860  002D30  5010               	movf	(___aomod@divisor+2)^0,w,c
  7861  002D32  5A08               	subwfb	(___aomod@dividend+2)^0,f,c
  7862  002D34  5011               	movf	(___aomod@divisor+3)^0,w,c
  7863  002D36  5A09               	subwfb	(___aomod@dividend+3)^0,f,c
  7864  002D38  5012               	movf	(___aomod@divisor+4)^0,w,c
  7865  002D3A  5A0A               	subwfb	(___aomod@dividend+4)^0,f,c
  7866  002D3C  5013               	movf	(___aomod@divisor+5)^0,w,c
  7867  002D3E  5A0B               	subwfb	(___aomod@dividend+5)^0,f,c
  7868  002D40  5014               	movf	(___aomod@divisor+6)^0,w,c
  7869  002D42  5A0C               	subwfb	(___aomod@dividend+6)^0,f,c
  7870  002D44  5015               	movf	(___aomod@divisor+7)^0,w,c
  7871  002D46  5A0D               	subwfb	(___aomod@dividend+7)^0,f,c
  7872  002D48                     l4694:
  7873  002D48  90D8               	bcf	status,0,c
  7874  002D4A  3215               	rrcf	(___aomod@divisor+7)^0,f,c
  7875  002D4C  3214               	rrcf	(___aomod@divisor+6)^0,f,c
  7876  002D4E  3213               	rrcf	(___aomod@divisor+5)^0,f,c
  7877  002D50  3212               	rrcf	(___aomod@divisor+4)^0,f,c
  7878  002D52  3211               	rrcf	(___aomod@divisor+3)^0,f,c
  7879  002D54  3210               	rrcf	(___aomod@divisor+2)^0,f,c
  7880  002D56  320F               	rrcf	(___aomod@divisor+1)^0,f,c
  7881  002D58  320E               	rrcf	___aomod@divisor^0,f,c
  7882  002D5A  2E16               	decfsz	___aomod@counter^0,f,c
  7883  002D5C  D7D3               	goto	u3520
  7884  002D5E                     l4698:
  7885  002D5E  5017               	movf	___aomod@sign^0,w,c
  7886  002D60  B4D8               	btfsc	status,2,c
  7887  002D62  D010               	goto	l4702
  7888  002D64  1E0D               	comf	(___aomod@dividend+7)^0,f,c
  7889  002D66  1E0C               	comf	(___aomod@dividend+6)^0,f,c
  7890  002D68  1E0B               	comf	(___aomod@dividend+5)^0,f,c
  7891  002D6A  1E0A               	comf	(___aomod@dividend+4)^0,f,c
  7892  002D6C  1E09               	comf	(___aomod@dividend+3)^0,f,c
  7893  002D6E  1E08               	comf	(___aomod@dividend+2)^0,f,c
  7894  002D70  1E07               	comf	(___aomod@dividend+1)^0,f,c
  7895  002D72  6C06               	negf	___aomod@dividend^0,c
  7896  002D74  0E00               	movlw	0
  7897  002D76  2207               	addwfc	(___aomod@dividend+1)^0,f,c
  7898  002D78  2208               	addwfc	(___aomod@dividend+2)^0,f,c
  7899  002D7A  2209               	addwfc	(___aomod@dividend+3)^0,f,c
  7900  002D7C  220A               	addwfc	(___aomod@dividend+4)^0,f,c
  7901  002D7E  220B               	addwfc	(___aomod@dividend+5)^0,f,c
  7902  002D80  220C               	addwfc	(___aomod@dividend+6)^0,f,c
  7903  002D82  220D               	addwfc	(___aomod@dividend+7)^0,f,c
  7904  002D84                     l4702:
  7905  002D84  0060  F018  F006   	movff	___aomod@dividend,?___aomod
  7906  002D8A  0060  F01C  F007   	movff	___aomod@dividend+1,?___aomod+1
  7907  002D90  0060  F020  F008   	movff	___aomod@dividend+2,?___aomod+2
  7908  002D96  0060  F024  F009   	movff	___aomod@dividend+3,?___aomod+3
  7909  002D9C  0060  F028  F00A   	movff	___aomod@dividend+4,?___aomod+4
  7910  002DA2  0060  F02C  F00B   	movff	___aomod@dividend+5,?___aomod+5
  7911  002DA8  0060  F030  F00C   	movff	___aomod@dividend+6,?___aomod+6
  7912  002DAE  0060  F034  F00D   	movff	___aomod@dividend+7,?___aomod+7
  7913  002DB4  0012               	return		;funcret
  7914  002DB6                     __end_of___aomod:
  7915                           	opt callstack 0
  7916                           
  7917 ;; *************** function ___aodiv *****************
  7918 ;; Defined at:
  7919 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
  7920 ;; Parameters:    Size  Location     Type
  7921 ;;  dividend        8    5[COMRAM] long long 
  7922 ;;  divisor         8   13[COMRAM] long long 
  7923 ;; Auto vars:     Size  Location     Type
  7924 ;;  quotient        8   23[COMRAM] long long 
  7925 ;;  sign            1   22[COMRAM] unsigned char 
  7926 ;;  counter         1   21[COMRAM] unsigned char 
  7927 ;; Return value:  Size  Location     Type
  7928 ;;                  8    5[COMRAM] long long 
  7929 ;; Registers used:
  7930 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7931 ;; Tracked objects:
  7932 ;;		On entry : 0/1
  7933 ;;		On exit  : 0/0
  7934 ;;		Unchanged: 0/0
  7935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7936 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7937 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7939 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7940 ;;Total ram usage:       26 bytes
  7941 ;; Hardware stack levels used:    1
  7942 ;; Hardware stack levels required when called:    4
  7943 ;; This function calls:
  7944 ;;		Nothing
  7945 ;; This function is called by:
  7946 ;;		_dtoa
  7947 ;; This function uses a non-reentrant model
  7948 ;;
  7949                           
  7950                           	psect	text56
  7951  002B2A                     __ptext56:
  7952                           	opt callstack 0
  7953  002B2A                     ___aodiv:
  7954                           	opt callstack 21
  7955                           
  7956                           ;incstack = 0
  7957  002B2A  0E00               	movlw	0
  7958  002B2C  6E17               	movwf	___aodiv@sign^0,c
  7959  002B2E  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  7960  002B30  D012               	goto	l4634
  7961  002B32  1E15               	comf	(___aodiv@divisor+7)^0,f,c
  7962  002B34  1E14               	comf	(___aodiv@divisor+6)^0,f,c
  7963  002B36  1E13               	comf	(___aodiv@divisor+5)^0,f,c
  7964  002B38  1E12               	comf	(___aodiv@divisor+4)^0,f,c
  7965  002B3A  1E11               	comf	(___aodiv@divisor+3)^0,f,c
  7966  002B3C  1E10               	comf	(___aodiv@divisor+2)^0,f,c
  7967  002B3E  1E0F               	comf	(___aodiv@divisor+1)^0,f,c
  7968  002B40  6C0E               	negf	___aodiv@divisor^0,c
  7969  002B42  0E00               	movlw	0
  7970  002B44  220F               	addwfc	(___aodiv@divisor+1)^0,f,c
  7971  002B46  2210               	addwfc	(___aodiv@divisor+2)^0,f,c
  7972  002B48  2211               	addwfc	(___aodiv@divisor+3)^0,f,c
  7973  002B4A  2212               	addwfc	(___aodiv@divisor+4)^0,f,c
  7974  002B4C  2213               	addwfc	(___aodiv@divisor+5)^0,f,c
  7975  002B4E  2214               	addwfc	(___aodiv@divisor+6)^0,f,c
  7976  002B50  2215               	addwfc	(___aodiv@divisor+7)^0,f,c
  7977  002B52  0E01               	movlw	1
  7978  002B54  6E17               	movwf	___aodiv@sign^0,c
  7979  002B56                     l4634:
  7980  002B56  AE0D               	btfss	(___aodiv@dividend+7)^0,7,c
  7981  002B58  D012               	goto	l4640
  7982  002B5A  1E0D               	comf	(___aodiv@dividend+7)^0,f,c
  7983  002B5C  1E0C               	comf	(___aodiv@dividend+6)^0,f,c
  7984  002B5E  1E0B               	comf	(___aodiv@dividend+5)^0,f,c
  7985  002B60  1E0A               	comf	(___aodiv@dividend+4)^0,f,c
  7986  002B62  1E09               	comf	(___aodiv@dividend+3)^0,f,c
  7987  002B64  1E08               	comf	(___aodiv@dividend+2)^0,f,c
  7988  002B66  1E07               	comf	(___aodiv@dividend+1)^0,f,c
  7989  002B68  6C06               	negf	___aodiv@dividend^0,c
  7990  002B6A  0E00               	movlw	0
  7991  002B6C  2207               	addwfc	(___aodiv@dividend+1)^0,f,c
  7992  002B6E  2208               	addwfc	(___aodiv@dividend+2)^0,f,c
  7993  002B70  2209               	addwfc	(___aodiv@dividend+3)^0,f,c
  7994  002B72  220A               	addwfc	(___aodiv@dividend+4)^0,f,c
  7995  002B74  220B               	addwfc	(___aodiv@dividend+5)^0,f,c
  7996  002B76  220C               	addwfc	(___aodiv@dividend+6)^0,f,c
  7997  002B78  220D               	addwfc	(___aodiv@dividend+7)^0,f,c
  7998  002B7A  0E01               	movlw	1
  7999  002B7C  1A17               	xorwf	___aodiv@sign^0,f,c
  8000  002B7E                     l4640:
  8001  002B7E  EE20  F018         	lfsr	2,___aodiv@quotient
  8002  002B82  0E07               	movlw	7
  8003  002B84                     u3441:
  8004  002B84  6ADE               	clrf	postinc2,c
  8005  002B86  06E8               	decf	wreg,f,c
  8006  002B88  E2FD               	bc	u3441
  8007  002B8A  500E               	movf	___aodiv@divisor^0,w,c
  8008  002B8C  100F               	iorwf	(___aodiv@divisor+1)^0,w,c
  8009  002B8E  1010               	iorwf	(___aodiv@divisor+2)^0,w,c
  8010  002B90  1011               	iorwf	(___aodiv@divisor+3)^0,w,c
  8011  002B92  1012               	iorwf	(___aodiv@divisor+4)^0,w,c
  8012  002B94  1013               	iorwf	(___aodiv@divisor+5)^0,w,c
  8013  002B96  1014               	iorwf	(___aodiv@divisor+6)^0,w,c
  8014  002B98  1015               	iorwf	(___aodiv@divisor+7)^0,w,c
  8015  002B9A  B4D8               	btfsc	status,2,c
  8016  002B9C  D046               	goto	l4662
  8017  002B9E  0E01               	movlw	1
  8018  002BA0  6E16               	movwf	___aodiv@counter^0,c
  8019  002BA2  D00A               	goto	l4648
  8020  002BA4                     l4646:
  8021  002BA4  90D8               	bcf	status,0,c
  8022  002BA6  360E               	rlcf	___aodiv@divisor^0,f,c
  8023  002BA8  360F               	rlcf	(___aodiv@divisor+1)^0,f,c
  8024  002BAA  3610               	rlcf	(___aodiv@divisor+2)^0,f,c
  8025  002BAC  3611               	rlcf	(___aodiv@divisor+3)^0,f,c
  8026  002BAE  3612               	rlcf	(___aodiv@divisor+4)^0,f,c
  8027  002BB0  3613               	rlcf	(___aodiv@divisor+5)^0,f,c
  8028  002BB2  3614               	rlcf	(___aodiv@divisor+6)^0,f,c
  8029  002BB4  3615               	rlcf	(___aodiv@divisor+7)^0,f,c
  8030  002BB6  2A16               	incf	___aodiv@counter^0,f,c
  8031  002BB8                     l4648:
  8032  002BB8  AE15               	btfss	(___aodiv@divisor+7)^0,7,c
  8033  002BBA  D7F4               	goto	l4646
  8034  002BBC                     u3460:
  8035  002BBC  90D8               	bcf	status,0,c
  8036  002BBE  3618               	rlcf	___aodiv@quotient^0,f,c
  8037  002BC0  3619               	rlcf	(___aodiv@quotient+1)^0,f,c
  8038  002BC2  361A               	rlcf	(___aodiv@quotient+2)^0,f,c
  8039  002BC4  361B               	rlcf	(___aodiv@quotient+3)^0,f,c
  8040  002BC6  361C               	rlcf	(___aodiv@quotient+4)^0,f,c
  8041  002BC8  361D               	rlcf	(___aodiv@quotient+5)^0,f,c
  8042  002BCA  361E               	rlcf	(___aodiv@quotient+6)^0,f,c
  8043  002BCC  361F               	rlcf	(___aodiv@quotient+7)^0,f,c
  8044  002BCE  500E               	movf	___aodiv@divisor^0,w,c
  8045  002BD0  5C06               	subwf	___aodiv@dividend^0,w,c
  8046  002BD2  500F               	movf	(___aodiv@divisor+1)^0,w,c
  8047  002BD4  5807               	subwfb	(___aodiv@dividend+1)^0,w,c
  8048  002BD6  5010               	movf	(___aodiv@divisor+2)^0,w,c
  8049  002BD8  5808               	subwfb	(___aodiv@dividend+2)^0,w,c
  8050  002BDA  5011               	movf	(___aodiv@divisor+3)^0,w,c
  8051  002BDC  5809               	subwfb	(___aodiv@dividend+3)^0,w,c
  8052  002BDE  5012               	movf	(___aodiv@divisor+4)^0,w,c
  8053  002BE0  580A               	subwfb	(___aodiv@dividend+4)^0,w,c
  8054  002BE2  5013               	movf	(___aodiv@divisor+5)^0,w,c
  8055  002BE4  580B               	subwfb	(___aodiv@dividend+5)^0,w,c
  8056  002BE6  5014               	movf	(___aodiv@divisor+6)^0,w,c
  8057  002BE8  580C               	subwfb	(___aodiv@dividend+6)^0,w,c
  8058  002BEA  5015               	movf	(___aodiv@divisor+7)^0,w,c
  8059  002BEC  580D               	subwfb	(___aodiv@dividend+7)^0,w,c
  8060  002BEE  A0D8               	btfss	status,0,c
  8061  002BF0  D011               	goto	l4658
  8062  002BF2  500E               	movf	___aodiv@divisor^0,w,c
  8063  002BF4  5E06               	subwf	___aodiv@dividend^0,f,c
  8064  002BF6  500F               	movf	(___aodiv@divisor+1)^0,w,c
  8065  002BF8  5A07               	subwfb	(___aodiv@dividend+1)^0,f,c
  8066  002BFA  5010               	movf	(___aodiv@divisor+2)^0,w,c
  8067  002BFC  5A08               	subwfb	(___aodiv@dividend+2)^0,f,c
  8068  002BFE  5011               	movf	(___aodiv@divisor+3)^0,w,c
  8069  002C00  5A09               	subwfb	(___aodiv@dividend+3)^0,f,c
  8070  002C02  5012               	movf	(___aodiv@divisor+4)^0,w,c
  8071  002C04  5A0A               	subwfb	(___aodiv@dividend+4)^0,f,c
  8072  002C06  5013               	movf	(___aodiv@divisor+5)^0,w,c
  8073  002C08  5A0B               	subwfb	(___aodiv@dividend+5)^0,f,c
  8074  002C0A  5014               	movf	(___aodiv@divisor+6)^0,w,c
  8075  002C0C  5A0C               	subwfb	(___aodiv@dividend+6)^0,f,c
  8076  002C0E  5015               	movf	(___aodiv@divisor+7)^0,w,c
  8077  002C10  5A0D               	subwfb	(___aodiv@dividend+7)^0,f,c
  8078  002C12  8018               	bsf	___aodiv@quotient^0,0,c
  8079  002C14                     l4658:
  8080  002C14  90D8               	bcf	status,0,c
  8081  002C16  3215               	rrcf	(___aodiv@divisor+7)^0,f,c
  8082  002C18  3214               	rrcf	(___aodiv@divisor+6)^0,f,c
  8083  002C1A  3213               	rrcf	(___aodiv@divisor+5)^0,f,c
  8084  002C1C  3212               	rrcf	(___aodiv@divisor+4)^0,f,c
  8085  002C1E  3211               	rrcf	(___aodiv@divisor+3)^0,f,c
  8086  002C20  3210               	rrcf	(___aodiv@divisor+2)^0,f,c
  8087  002C22  320F               	rrcf	(___aodiv@divisor+1)^0,f,c
  8088  002C24  320E               	rrcf	___aodiv@divisor^0,f,c
  8089  002C26  2E16               	decfsz	___aodiv@counter^0,f,c
  8090  002C28  D7C9               	goto	u3460
  8091  002C2A                     l4662:
  8092  002C2A  5017               	movf	___aodiv@sign^0,w,c
  8093  002C2C  B4D8               	btfsc	status,2,c
  8094  002C2E  D010               	goto	l4666
  8095  002C30  1E1F               	comf	(___aodiv@quotient+7)^0,f,c
  8096  002C32  1E1E               	comf	(___aodiv@quotient+6)^0,f,c
  8097  002C34  1E1D               	comf	(___aodiv@quotient+5)^0,f,c
  8098  002C36  1E1C               	comf	(___aodiv@quotient+4)^0,f,c
  8099  002C38  1E1B               	comf	(___aodiv@quotient+3)^0,f,c
  8100  002C3A  1E1A               	comf	(___aodiv@quotient+2)^0,f,c
  8101  002C3C  1E19               	comf	(___aodiv@quotient+1)^0,f,c
  8102  002C3E  6C18               	negf	___aodiv@quotient^0,c
  8103  002C40  0E00               	movlw	0
  8104  002C42  2219               	addwfc	(___aodiv@quotient+1)^0,f,c
  8105  002C44  221A               	addwfc	(___aodiv@quotient+2)^0,f,c
  8106  002C46  221B               	addwfc	(___aodiv@quotient+3)^0,f,c
  8107  002C48  221C               	addwfc	(___aodiv@quotient+4)^0,f,c
  8108  002C4A  221D               	addwfc	(___aodiv@quotient+5)^0,f,c
  8109  002C4C  221E               	addwfc	(___aodiv@quotient+6)^0,f,c
  8110  002C4E  221F               	addwfc	(___aodiv@quotient+7)^0,f,c
  8111  002C50                     l4666:
  8112  002C50  0060  F060  F006   	movff	___aodiv@quotient,?___aodiv
  8113  002C56  0060  F064  F007   	movff	___aodiv@quotient+1,?___aodiv+1
  8114  002C5C  0060  F068  F008   	movff	___aodiv@quotient+2,?___aodiv+2
  8115  002C62  0060  F06C  F009   	movff	___aodiv@quotient+3,?___aodiv+3
  8116  002C68  0060  F070  F00A   	movff	___aodiv@quotient+4,?___aodiv+4
  8117  002C6E  0060  F074  F00B   	movff	___aodiv@quotient+5,?___aodiv+5
  8118  002C74  0060  F078  F00C   	movff	___aodiv@quotient+6,?___aodiv+6
  8119  002C7A  0060  F07C  F00D   	movff	___aodiv@quotient+7,?___aodiv+7
  8120  002C80  0012               	return		;funcret
  8121  002C82                     __end_of___aodiv:
  8122                           	opt callstack 0
  8123                           
  8124 ;; *************** function _UART2_is_rx_ready *****************
  8125 ;; Defined at:
  8126 ;;		line 152 in file "mcc_generated_files/uart2.c"
  8127 ;; Parameters:    Size  Location     Type
  8128 ;;		None
  8129 ;; Auto vars:     Size  Location     Type
  8130 ;;		None
  8131 ;; Return value:  Size  Location     Type
  8132 ;;                  1    wreg      unsigned char 
  8133 ;; Registers used:
  8134 ;;		wreg, status,2
  8135 ;; Tracked objects:
  8136 ;;		On entry : 0/1
  8137 ;;		On exit  : 3F/0
  8138 ;;		Unchanged: 0/0
  8139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8144 ;;Total ram usage:        0 bytes
  8145 ;; Hardware stack levels used:    1
  8146 ;; Hardware stack levels required when called:    4
  8147 ;; This function calls:
  8148 ;;		Nothing
  8149 ;; This function is called by:
  8150 ;;		_Digital232_init
  8151 ;;		_Digital232_RW
  8152 ;; This function uses a non-reentrant model
  8153 ;;
  8154                           
  8155                           	psect	text57
  8156  003FE8                     __ptext57:
  8157                           	opt callstack 0
  8158  003FE8                     _UART2_is_rx_ready:
  8159                           	opt callstack 25
  8160                           
  8161                           ;mcc_generated_files/uart2.c: 154:     return uart2RxCount;
  8162                           
  8163                           ;incstack = 0
  8164  003FE8  0100               	movlb	0	; () banked
  8165  003FEA  5197               	movf	_uart2RxCount& (0+255),w,b	;volatile
  8166                           
  8167                           ; BSR set to: 0
  8168  003FEC  0012               	return		;funcret
  8169  003FEE                     __end_of_UART2_is_rx_ready:
  8170                           	opt callstack 0
  8171                           
  8172 ;; *************** function _UART2_Read *****************
  8173 ;; Defined at:
  8174 ;;		line 171 in file "mcc_generated_files/uart2.c"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;		None
  8177 ;; Auto vars:     Size  Location     Type
  8178 ;;  readValue       1    5[COMRAM] unsigned char 
  8179 ;; Return value:  Size  Location     Type
  8180 ;;                  1    wreg      unsigned char 
  8181 ;; Registers used:
  8182 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8183 ;; Tracked objects:
  8184 ;;		On entry : 3F/0
  8185 ;;		On exit  : 3F/39
  8186 ;;		Unchanged: 0/0
  8187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8189 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8191 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8192 ;;Total ram usage:        1 bytes
  8193 ;; Hardware stack levels used:    1
  8194 ;; Hardware stack levels required when called:    4
  8195 ;; This function calls:
  8196 ;;		Nothing
  8197 ;; This function is called by:
  8198 ;;		_Digital232_init
  8199 ;;		_Digital232_RW
  8200 ;; This function uses a non-reentrant model
  8201 ;;
  8202                           
  8203                           	psect	text58
  8204  003882                     __ptext58:
  8205                           	opt callstack 0
  8206  003882                     _UART2_Read:
  8207                           	opt callstack 25
  8208                           
  8209                           ; BSR set to: 0
  8210                           ;mcc_generated_files/uart2.c: 175:     while(0 == uart2RxCount)
  8211                           
  8212                           ; BSR set to: 0
  8213                           ;mcc_generated_files/uart2.c: 175:     while(0 == uart2RxCount)
  8214                           
  8215                           ; BSR set to: 0
  8216                           ;incstack = 0
  8217  003882  5197               	movf	_uart2RxCount& (0+255),w,b	;volatile
  8218  003884  B4D8               	btfsc	status,2,c
  8219  003886  D7FD               	goto	_UART2_Read
  8220                           
  8221                           ; BSR set to: 0
  8222                           ;mcc_generated_files/uart2.c: 179:     uart2RxLastError = uart2RxStatusBuffer[uart2RxTai
      +                          l];
  8223  003888  0E0E               	movlw	low _uart2RxStatusBuffer
  8224  00388A  2458               	addwf	_uart2RxTail^0,w,c	;volatile
  8225  00388C  6ED9               	movwf	fsr2l,c
  8226  00388E  6ADA               	clrf	fsr2h,c
  8227  003890  0E01               	movlw	high _uart2RxStatusBuffer
  8228  003892  22DA               	addwfc	fsr2h,f,c
  8229  003894  50DF               	movf	indf2,w,c
  8230  003896  0101               	movlb	1	; () banked
  8231  003898  6F70               	movwf	_uart2RxLastError& (0+255),b	;volatile
  8232                           
  8233                           ;mcc_generated_files/uart2.c: 181:     readValue = uart2RxBuffer[uart2RxTail++];
  8234  00389A  0E16               	movlw	low _uart2RxBuffer
  8235  00389C  2458               	addwf	_uart2RxTail^0,w,c	;volatile
  8236  00389E  6ED9               	movwf	fsr2l,c
  8237  0038A0  6ADA               	clrf	fsr2h,c
  8238  0038A2  0E01               	movlw	high _uart2RxBuffer
  8239  0038A4  22DA               	addwfc	fsr2h,f,c
  8240  0038A6  50DF               	movf	indf2,w,c
  8241  0038A8  6E06               	movwf	UART2_Read@readValue^0,c
  8242                           
  8243                           ; BSR set to: 1
  8244  0038AA  2A58               	incf	_uart2RxTail^0,f,c	;volatile
  8245                           
  8246                           ; BSR set to: 1
  8247                           ;mcc_generated_files/uart2.c: 182:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
  8248  0038AC  0E07               	movlw	7
  8249  0038AE  6458               	cpfsgt	_uart2RxTail^0,c
  8250  0038B0  D002               	goto	l5132
  8251                           
  8252                           ; BSR set to: 1
  8253                           ;mcc_generated_files/uart2.c: 183:     {;mcc_generated_files/uart2.c: 184:         uart2
      +                          RxTail = 0;
  8254  0038B2  0E00               	movlw	0
  8255  0038B4  6E58               	movwf	_uart2RxTail^0,c	;volatile
  8256  0038B6                     l5132:
  8257                           
  8258                           ; BSR set to: 1
  8259                           ;mcc_generated_files/uart2.c: 186:     PIE6bits.U2RXIE = 0;
  8260  0038B6  0139               	movlb	57	; () banked
  8261  0038B8  9596               	bcf	150,2,b	;volatile
  8262                           
  8263                           ; BSR set to: 57
  8264                           ;mcc_generated_files/uart2.c: 187:     uart2RxCount--;
  8265  0038BA  0100               	movlb	0	; () banked
  8266  0038BC  0797               	decf	_uart2RxCount& (0+255),f,b	;volatile
  8267                           
  8268                           ; BSR set to: 0
  8269                           ;mcc_generated_files/uart2.c: 188:     PIE6bits.U2RXIE = 1;
  8270  0038BE  0139               	movlb	57	; () banked
  8271  0038C0  8596               	bsf	150,2,b	;volatile
  8272                           
  8273                           ; BSR set to: 57
  8274                           ;mcc_generated_files/uart2.c: 190:     return readValue;
  8275  0038C2  5006               	movf	UART2_Read@readValue^0,w,c
  8276                           
  8277                           ; BSR set to: 57
  8278  0038C4  0012               	return		;funcret
  8279  0038C6                     __end_of_UART2_Read:
  8280                           	opt callstack 0
  8281                           
  8282 ;; *************** function _TimerDone *****************
  8283 ;; Defined at:
  8284 ;;		line 19 in file "timers.c"
  8285 ;; Parameters:    Size  Location     Type
  8286 ;;  timer           1    wreg     const unsigned char 
  8287 ;; Auto vars:     Size  Location     Type
  8288 ;;  timer           1    7[COMRAM] const unsigned char 
  8289 ;; Return value:  Size  Location     Type
  8290 ;;                  1    wreg      _Bool 
  8291 ;; Registers used:
  8292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8293 ;; Tracked objects:
  8294 ;;		On entry : 0/1
  8295 ;;		On exit  : 0/0
  8296 ;;		Unchanged: 0/0
  8297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8299 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8300 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8301 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8302 ;;Total ram usage:        3 bytes
  8303 ;; Hardware stack levels used:    1
  8304 ;; Hardware stack levels required when called:    4
  8305 ;; This function calls:
  8306 ;;		Nothing
  8307 ;; This function is called by:
  8308 ;;		_work_sw
  8309 ;;		_main
  8310 ;;		_Digital232_RW
  8311 ;;		_WaitMs
  8312 ;; This function uses a non-reentrant model
  8313 ;;
  8314                           
  8315                           	psect	text59
  8316  003C6C                     __ptext59:
  8317                           	opt callstack 0
  8318  003C6C                     _TimerDone:
  8319                           	opt callstack 25
  8320                           
  8321                           ; BSR set to: 57
  8322                           ;incstack = 0
  8323                           ;TimerDone@timer stored from wreg
  8324  003C6C  6E08               	movwf	TimerDone@timer^0,c
  8325  003C6E  0004               	clrwdt		;# 
  8326                           
  8327                           ;timers.c: 22:  if (tickCount[timer] == 0) {
  8328  003C70  5008               	movf	TimerDone@timer^0,w,c
  8329  003C72  0D02               	mullw	2
  8330  003C74  0E00               	movlw	low _tickCount
  8331  003C76  24F3               	addwf	243,w,c
  8332  003C78  6ED9               	movwf	fsr2l,c
  8333  003C7A  0E01               	movlw	high _tickCount
  8334  003C7C  20F4               	addwfc	prodh,w,c
  8335  003C7E  6EDA               	movwf	fsr2h,c
  8336  003C80  50DE               	movf	postinc2,w,c
  8337  003C82  10DE               	iorwf	postinc2,w,c
  8338  003C84  A4D8               	btfss	status,2,c
  8339  003C86  D002               	goto	l4908
  8340                           
  8341                           ;timers.c: 23:   return 1;
  8342  003C88  0E01               	movlw	1
  8343  003C8A  0012               	return	
  8344  003C8C                     l4908:
  8345                           
  8346                           ;timers.c: 25:  return 0;
  8347  003C8C  0E00               	movlw	0
  8348  003C8E  0012               	return		;funcret
  8349  003C90                     __end_of_TimerDone:
  8350                           	opt callstack 0
  8351                           
  8352 ;; *************** function _StartTimer *****************
  8353 ;; Defined at:
  8354 ;;		line 11 in file "timers.c"
  8355 ;; Parameters:    Size  Location     Type
  8356 ;;  timer           1    wreg     const unsigned char 
  8357 ;;  count           2    5[COMRAM] const unsigned short 
  8358 ;; Auto vars:     Size  Location     Type
  8359 ;;  timer           1    9[COMRAM] const unsigned char 
  8360 ;; Return value:  Size  Location     Type
  8361 ;;                  1    wreg      void 
  8362 ;; Registers used:
  8363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8364 ;; Tracked objects:
  8365 ;;		On entry : 0/1
  8366 ;;		On exit  : 0/0
  8367 ;;		Unchanged: 0/0
  8368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8369 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8370 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8371 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8372 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8373 ;;Total ram usage:        5 bytes
  8374 ;; Hardware stack levels used:    1
  8375 ;; Hardware stack levels required when called:    4
  8376 ;; This function calls:
  8377 ;;		Nothing
  8378 ;; This function is called by:
  8379 ;;		_work_sw
  8380 ;;		_main
  8381 ;;		_Digital232_init
  8382 ;;		_Digital232_RW
  8383 ;;		_led_lightshow
  8384 ;;		_WaitMs
  8385 ;; This function uses a non-reentrant model
  8386 ;;
  8387                           
  8388                           	psect	text60
  8389  003AD6                     __ptext60:
  8390                           	opt callstack 0
  8391  003AD6                     _StartTimer:
  8392                           	opt callstack 25
  8393                           
  8394                           ;incstack = 0
  8395                           ;StartTimer@timer stored from wreg
  8396  003AD6  6E0A               	movwf	StartTimer@timer^0,c
  8397                           
  8398                           ;timers.c: 11: __attribute__((inline)) void StartTimer(const uint8_t timer, const uint16
      +                          _t count);timers.c: 12: {;timers.c: 13:  tickCount[timer] = count << 1;
  8399  003AD8  0060  F018  F008   	movff	StartTimer@count,??_StartTimer
  8400  003ADE  0060  F01C  F009   	movff	StartTimer@count+1,??_StartTimer+1
  8401  003AE4  90D8               	bcf	status,0,c
  8402  003AE6  3608               	rlcf	??_StartTimer^0,f,c
  8403  003AE8  3609               	rlcf	(??_StartTimer+1)^0,f,c
  8404  003AEA  500A               	movf	StartTimer@timer^0,w,c
  8405  003AEC  0D02               	mullw	2
  8406  003AEE  0E00               	movlw	low _tickCount
  8407  003AF0  24F3               	addwf	243,w,c
  8408  003AF2  6ED9               	movwf	fsr2l,c
  8409  003AF4  0E01               	movlw	high _tickCount
  8410  003AF6  20F4               	addwfc	prodh,w,c
  8411  003AF8  6EDA               	movwf	fsr2h,c
  8412  003AFA  0060  F023  FFDE   	movff	??_StartTimer,postinc2
  8413  003B00  0060  F027  FFDD   	movff	??_StartTimer+1,postdec2
  8414  003B06  0012               	return		;funcret
  8415  003B08                     __end_of_StartTimer:
  8416                           	opt callstack 0
  8417                           
  8418 ;; *************** function _PWM8_LoadDutyValue *****************
  8419 ;; Defined at:
  8420 ;;		line 74 in file "mcc_generated_files/pwm8.c"
  8421 ;; Parameters:    Size  Location     Type
  8422 ;;  dutyValue       2    5[COMRAM] unsigned short 
  8423 ;; Auto vars:     Size  Location     Type
  8424 ;;		None
  8425 ;; Return value:  Size  Location     Type
  8426 ;;                  1    wreg      void 
  8427 ;; Registers used:
  8428 ;;		wreg, status,2, status,0
  8429 ;; Tracked objects:
  8430 ;;		On entry : 0/0
  8431 ;;		On exit  : 0/0
  8432 ;;		Unchanged: 0/0
  8433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8434 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8436 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8437 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8438 ;;Total ram usage:        4 bytes
  8439 ;; Hardware stack levels used:    1
  8440 ;; Hardware stack levels required when called:    4
  8441 ;; This function calls:
  8442 ;;		Nothing
  8443 ;; This function is called by:
  8444 ;;		_Digital232_RW
  8445 ;; This function uses a non-reentrant model
  8446 ;;
  8447                           
  8448                           	psect	text61
  8449  003A32                     __ptext61:
  8450                           	opt callstack 0
  8451  003A32                     _PWM8_LoadDutyValue:
  8452                           	opt callstack 25
  8453                           
  8454                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  8455                           
  8456                           ;incstack = 0
  8457  003A32  0060  F018  F008   	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  8458  003A38  0060  F01C  F009   	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
  8459  003A3E  90D8               	bcf	status,0,c
  8460  003A40  3209               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
  8461  003A42  3208               	rrcf	??_PWM8_LoadDutyValue^0,f,c
  8462  003A44  90D8               	bcf	status,0,c
  8463  003A46  3209               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
  8464  003A48  3208               	rrcf	??_PWM8_LoadDutyValue^0,f,c
  8465  003A4A  5008               	movf	??_PWM8_LoadDutyValue^0,w,c
  8466  003A4C  6E61               	movwf	97,c	;volatile
  8467                           
  8468                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
  8469  003A4E  0060  F018  F008   	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  8470  003A54  0E03               	movlw	3
  8471  003A56  1608               	andwf	??_PWM8_LoadDutyValue^0,f,c
  8472  003A58  0E06               	movlw	6
  8473  003A5A  6E09               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
  8474  003A5C                     u3955:
  8475  003A5C  90D8               	bcf	status,0,c
  8476  003A5E  3608               	rlcf	??_PWM8_LoadDutyValue^0,f,c
  8477  003A60  2E09               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
  8478  003A62  D7FC               	goto	u3955
  8479  003A64  5008               	movf	??_PWM8_LoadDutyValue^0,w,c
  8480  003A66  6E60               	movwf	96,c	;volatile
  8481  003A68  0012               	return		;funcret
  8482  003A6A                     __end_of_PWM8_LoadDutyValue:
  8483                           	opt callstack 0
  8484                           
  8485 ;; *************** function _ADCC_StartConversion *****************
  8486 ;; Defined at:
  8487 ;;		line 113 in file "mcc_generated_files/adcc.c"
  8488 ;; Parameters:    Size  Location     Type
  8489 ;;  channel         1    wreg     enum E15799
  8490 ;; Auto vars:     Size  Location     Type
  8491 ;;  channel         1    5[COMRAM] enum E15799
  8492 ;; Return value:  Size  Location     Type
  8493 ;;                  1    wreg      void 
  8494 ;; Registers used:
  8495 ;;		wreg
  8496 ;; Tracked objects:
  8497 ;;		On entry : 0/1
  8498 ;;		On exit  : 3F/3E
  8499 ;;		Unchanged: 0/0
  8500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8502 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8504 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8505 ;;Total ram usage:        1 bytes
  8506 ;; Hardware stack levels used:    1
  8507 ;; Hardware stack levels required when called:    4
  8508 ;; This function calls:
  8509 ;;		Nothing
  8510 ;; This function is called by:
  8511 ;;		_Digital232_init
  8512 ;;		_Digital232_RW
  8513 ;; This function uses a non-reentrant model
  8514 ;;
  8515                           
  8516                           	psect	text62
  8517  003FAE                     __ptext62:
  8518                           	opt callstack 0
  8519  003FAE                     _ADCC_StartConversion:
  8520                           	opt callstack 25
  8521                           
  8522                           ;incstack = 0
  8523                           ;ADCC_StartConversion@channel stored from wreg
  8524  003FAE  6E06               	movwf	ADCC_StartConversion@channel^0,c
  8525                           
  8526                           ;mcc_generated_files/adcc.c: 113: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 114: {;mcc_generated_files/adcc.c: 116:     ADPCH = channel;
  8527  003FB0  0060  F01B  FEF1   	movff	ADCC_StartConversion@channel,16113	;volatile
  8528                           
  8529                           ;mcc_generated_files/adcc.c: 119:     ADCON0bits.ADON = 1;
  8530  003FB6  013E               	movlb	62	; () banked
  8531  003FB8  8FF8               	bsf	248,7,b	;volatile
  8532                           
  8533                           ; BSR set to: 62
  8534                           ;mcc_generated_files/adcc.c: 122:     ADCON0bits.ADGO = 1;
  8535  003FBA  81F8               	bsf	248,0,b	;volatile
  8536                           
  8537                           ; BSR set to: 62
  8538  003FBC  0012               	return		;funcret
  8539  003FBE                     __end_of_ADCC_StartConversion:
  8540                           	opt callstack 0
  8541                           
  8542 ;; *************** function _ADCC_IsConversionDone *****************
  8543 ;; Defined at:
  8544 ;;		line 125 in file "mcc_generated_files/adcc.c"
  8545 ;; Parameters:    Size  Location     Type
  8546 ;;		None
  8547 ;; Auto vars:     Size  Location     Type
  8548 ;;		None
  8549 ;; Return value:  Size  Location     Type
  8550 ;;                  1    wreg      _Bool 
  8551 ;; Registers used:
  8552 ;;		wreg
  8553 ;; Tracked objects:
  8554 ;;		On entry : 0/3E
  8555 ;;		On exit  : 3F/3E
  8556 ;;		Unchanged: 0/0
  8557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8562 ;;Total ram usage:        0 bytes
  8563 ;; Hardware stack levels used:    1
  8564 ;; Hardware stack levels required when called:    4
  8565 ;; This function calls:
  8566 ;;		Nothing
  8567 ;; This function is called by:
  8568 ;;		_Digital232_RW
  8569 ;; This function uses a non-reentrant model
  8570 ;;
  8571                           
  8572                           	psect	text63
  8573  003FBE                     __ptext63:
  8574                           	opt callstack 0
  8575  003FBE                     _ADCC_IsConversionDone:
  8576                           	opt callstack 25
  8577                           
  8578                           ;mcc_generated_files/adcc.c: 128:     return ((unsigned char)(!ADCON0bits.ADGO));
  8579                           
  8580                           ; BSR set to: 62
  8581                           ;incstack = 0
  8582  003FBE  013E               	movlb	62	; () banked
  8583  003FC0  B1F8               	btfsc	248,0,b	;volatile
  8584  003FC2  D002               	goto	u3960
  8585  003FC4  0E01               	movlw	1
  8586  003FC6  0012               	return	
  8587  003FC8                     u3960:
  8588  003FC8  0E00               	movlw	0
  8589                           
  8590                           ; BSR set to: 62
  8591  003FCA  0012               	return		;funcret
  8592  003FCC                     __end_of_ADCC_IsConversionDone:
  8593                           	opt callstack 0
  8594                           
  8595 ;; *************** function _ADCC_GetConversionResult *****************
  8596 ;; Defined at:
  8597 ;;		line 131 in file "mcc_generated_files/adcc.c"
  8598 ;; Parameters:    Size  Location     Type
  8599 ;;		None
  8600 ;; Auto vars:     Size  Location     Type
  8601 ;;		None
  8602 ;; Return value:  Size  Location     Type
  8603 ;;                  2    5[COMRAM] unsigned short 
  8604 ;; Registers used:
  8605 ;;		wreg, status,2, status,0
  8606 ;; Tracked objects:
  8607 ;;		On entry : 3F/3E
  8608 ;;		On exit  : 3F/3E
  8609 ;;		Unchanged: 0/0
  8610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8611 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8613 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8614 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8615 ;;Total ram usage:        4 bytes
  8616 ;; Hardware stack levels used:    1
  8617 ;; Hardware stack levels required when called:    4
  8618 ;; This function calls:
  8619 ;;		Nothing
  8620 ;; This function is called by:
  8621 ;;		_Digital232_RW
  8622 ;; This function uses a non-reentrant model
  8623 ;;
  8624                           
  8625                           	psect	text64
  8626  003F9A                     __ptext64:
  8627                           	opt callstack 0
  8628  003F9A                     _ADCC_GetConversionResult:
  8629                           	opt callstack 25
  8630                           
  8631                           ; BSR set to: 62
  8632                           ;mcc_generated_files/adcc.c: 134:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8633                           
  8634                           ; BSR set to: 62
  8635                           ;incstack = 0
  8636  003F9A  51F0               	movf	240,w,b	;volatile
  8637  003F9C  6E09               	movwf	(??_ADCC_GetConversionResult+1)^0,c
  8638  003F9E  6A08               	clrf	??_ADCC_GetConversionResult^0,c
  8639  003FA0  51EF               	movf	239,w,b	;volatile
  8640  003FA2  2408               	addwf	??_ADCC_GetConversionResult^0,w,c
  8641  003FA4  6E06               	movwf	?_ADCC_GetConversionResult^0,c
  8642  003FA6  0E00               	movlw	0
  8643  003FA8  2009               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
  8644  003FAA  6E07               	movwf	(?_ADCC_GetConversionResult+1)^0,c
  8645                           
  8646                           ; BSR set to: 62
  8647  003FAC  0012               	return		;funcret
  8648  003FAE                     __end_of_ADCC_GetConversionResult:
  8649                           	opt callstack 0
  8650                           
  8651 ;; *************** function _Default_ISR *****************
  8652 ;; Defined at:
  8653 ;;		line 80 in file "mcc_generated_files/interrupt_manager.c"
  8654 ;; Parameters:    Size  Location     Type
  8655 ;;		None
  8656 ;; Auto vars:     Size  Location     Type
  8657 ;;		None
  8658 ;; Return value:  Size  Location     Type
  8659 ;;                  1    wreg      void 
  8660 ;; Registers used:
  8661 ;;		None
  8662 ;; Tracked objects:
  8663 ;;		On entry : 0/0
  8664 ;;		On exit  : 0/0
  8665 ;;		Unchanged: 0/0
  8666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8671 ;;Total ram usage:        0 bytes
  8672 ;; Hardware stack levels used:    1
  8673 ;; This function calls:
  8674 ;;		Nothing
  8675 ;; This function is called by:
  8676 ;;		Interrupt level 2
  8677 ;; This function uses a non-reentrant model
  8678 ;;
  8679                           
  8680                           	psect	text65
  8681  003FFC                     __ptext65:
  8682                           	opt callstack 0
  8683  003FFC                     _Default_ISR:
  8684                           	opt callstack 20
  8685                           
  8686                           ; BSR set to: 62
  8687                           ;incstack = 0
  8688  003FFC  0011               	retfie		f
  8689  003FFE                     __end_of_Default_ISR:
  8690                           	opt callstack 0
  8691                           
  8692 ;; *************** function _UART1_tx_vect_isr *****************
  8693 ;; Defined at:
  8694 ;;		line 225 in file "mcc_generated_files/uart1.c"
  8695 ;; Parameters:    Size  Location     Type
  8696 ;;		None
  8697 ;; Auto vars:     Size  Location     Type
  8698 ;;		None
  8699 ;; Return value:  Size  Location     Type
  8700 ;;                  1    wreg      void 
  8701 ;; Registers used:
  8702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8703 ;; Tracked objects:
  8704 ;;		On entry : 0/0
  8705 ;;		On exit  : 0/0
  8706 ;;		Unchanged: 0/0
  8707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8712 ;;Total ram usage:        0 bytes
  8713 ;; Hardware stack levels used:    1
  8714 ;; Hardware stack levels required when called:    1
  8715 ;; This function calls:
  8716 ;;		Absolute function
  8717 ;;		_UART1_Transmit_ISR
  8718 ;; This function is called by:
  8719 ;;		Interrupt level 2
  8720 ;; This function uses a non-reentrant model
  8721 ;;
  8722                           
  8723                           	psect	text66
  8724  003C90                     __ptext66:
  8725                           	opt callstack 0
  8726  003C90                     _UART1_tx_vect_isr:
  8727                           	opt callstack 19
  8728                           
  8729                           ;mcc_generated_files/uart1.c: 227:     if(UART1_TxInterruptHandler)
  8730                           
  8731                           ;incstack = 0
  8732  003C90  0101               	movlb	1	; () banked
  8733  003C92  515A               	movf	_UART1_TxInterruptHandler& (0+255),w,b
  8734  003C94  115B               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
  8735  003C96  115C               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
  8736  003C98  B4D8               	btfsc	status,2,c
  8737  003C9A  0011               	retfie		f
  8738                           
  8739                           ; BSR set to: 1
  8740                           ;mcc_generated_files/uart1.c: 228:     {;mcc_generated_files/uart1.c: 229:         UART1
      +                          _TxInterruptHandler();
  8741  003C9C  D801               	call	i2u296_48
  8742  003C9E  0011               	retfie		f
  8743  003CA0                     i2u296_48:
  8744  003CA0  0005               	push	
  8745  003CA2  6EFA               	movwf	pclath,c
  8746  003CA4  515A               	movf	_UART1_TxInterruptHandler& (0+255),w,b
  8747  003CA6  6EFD               	movwf	tosl,c
  8748  003CA8  515B               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
  8749  003CAA  6EFE               	movwf	tosh,c
  8750  003CAC  515C               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
  8751  003CAE  6EFF               	movwf	tosu,c
  8752  003CB0  50FA               	movf	pclath,w,c
  8753  003CB2  0012               	return		;indir
  8754  003CB4                     __end_of_UART1_tx_vect_isr:
  8755                           	opt callstack 0
  8756                           
  8757 ;; *************** function _UART1_Transmit_ISR *****************
  8758 ;; Defined at:
  8759 ;;		line 243 in file "mcc_generated_files/uart1.c"
  8760 ;; Parameters:    Size  Location     Type
  8761 ;;		None
  8762 ;; Auto vars:     Size  Location     Type
  8763 ;;		None
  8764 ;; Return value:  Size  Location     Type
  8765 ;;                  1    wreg      void 
  8766 ;; Registers used:
  8767 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8768 ;; Tracked objects:
  8769 ;;		On entry : 3F/1
  8770 ;;		On exit  : 6/0
  8771 ;;		Unchanged: 0/0
  8772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8777 ;;Total ram usage:        0 bytes
  8778 ;; Hardware stack levels used:    1
  8779 ;; This function calls:
  8780 ;;		Nothing
  8781 ;; This function is called by:
  8782 ;;		_UART1_Initialize
  8783 ;;		_UART1_tx_vect_isr
  8784 ;; This function uses a non-reentrant model
  8785 ;;
  8786                           
  8787                           	psect	text67
  8788  003B08                     __ptext67:
  8789                           	opt callstack 0
  8790  003B08                     _UART1_Transmit_ISR:
  8791                           	opt callstack 19
  8792                           
  8793                           ; BSR set to: 1
  8794                           ;mcc_generated_files/uart1.c: 246:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
  8795                           
  8796                           ;incstack = 0
  8797  003B08  0E08               	movlw	8
  8798  003B0A  0100               	movlb	0	; () banked
  8799  003B0C  619B               	cpfslt	_uart1TxBufferRemaining& (0+255),b
  8800  003B0E  D012               	goto	i2l344
  8801                           
  8802                           ; BSR set to: 0
  8803                           ;mcc_generated_files/uart1.c: 247:     {;mcc_generated_files/uart1.c: 248:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
  8804  003B10  0E36               	movlw	low _uart1TxBuffer
  8805  003B12  259C               	addwf	_uart1TxTail& (0+255),w,b	;volatile
  8806  003B14  6ED9               	movwf	fsr2l,c
  8807  003B16  6ADA               	clrf	fsr2h,c
  8808  003B18  0E01               	movlw	high _uart1TxBuffer
  8809  003B1A  22DA               	addwfc	fsr2h,f,c
  8810  003B1C  50DF               	movf	indf2,w,c
  8811  003B1E  013D               	movlb	61	; () banked
  8812  003B20  6FEA               	movwf	234,b	;volatile
  8813                           
  8814                           ; BSR set to: 61
  8815  003B22  0100               	movlb	0	; () banked
  8816  003B24  2B9C               	incf	_uart1TxTail& (0+255),f,b	;volatile
  8817                           
  8818                           ; BSR set to: 0
  8819                           ;mcc_generated_files/uart1.c: 249:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
  8820  003B26  0E07               	movlw	7
  8821  003B28  659C               	cpfsgt	_uart1TxTail& (0+255),b
  8822  003B2A  D002               	goto	i2l4062
  8823                           
  8824                           ; BSR set to: 0
  8825                           ;mcc_generated_files/uart1.c: 250:         {;mcc_generated_files/uart1.c: 251:          
      +                             uart1TxTail = 0;
  8826  003B2C  0E00               	movlw	0
  8827  003B2E  6F9C               	movwf	_uart1TxTail& (0+255),b	;volatile
  8828  003B30                     i2l4062:
  8829                           
  8830                           ; BSR set to: 0
  8831                           ;mcc_generated_files/uart1.c: 253:         uart1TxBufferRemaining++;
  8832  003B30  2B9B               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
  8833                           
  8834                           ;mcc_generated_files/uart1.c: 254:     }
  8835  003B32  0012               	return	
  8836  003B34                     i2l344:
  8837                           
  8838                           ; BSR set to: 0
  8839                           ;mcc_generated_files/uart1.c: 256:     {;mcc_generated_files/uart1.c: 257:         PIE3b
      +                          its.U1TXIE = 0;
  8840  003B34  0139               	movlb	57	; () banked
  8841  003B36  9993               	bcf	147,4,b	;volatile
  8842  003B38  0012               	return		;funcret
  8843  003B3A                     __end_of_UART1_Transmit_ISR:
  8844                           	opt callstack 0
  8845                           
  8846 ;; *************** function _UART1_rx_vect_isr *****************
  8847 ;; Defined at:
  8848 ;;		line 233 in file "mcc_generated_files/uart1.c"
  8849 ;; Parameters:    Size  Location     Type
  8850 ;;		None
  8851 ;; Auto vars:     Size  Location     Type
  8852 ;;		None
  8853 ;; Return value:  Size  Location     Type
  8854 ;;                  1    wreg      void 
  8855 ;; Registers used:
  8856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8857 ;; Tracked objects:
  8858 ;;		On entry : 0/0
  8859 ;;		On exit  : 0/0
  8860 ;;		Unchanged: 0/0
  8861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8866 ;;Total ram usage:        0 bytes
  8867 ;; Hardware stack levels used:    1
  8868 ;; Hardware stack levels required when called:    3
  8869 ;; This function calls:
  8870 ;;		Absolute function
  8871 ;;		_UART1_Receive_ISR
  8872 ;; This function is called by:
  8873 ;;		Interrupt level 2
  8874 ;; This function uses a non-reentrant model
  8875 ;;
  8876                           
  8877                           	psect	text68
  8878  003CB4                     __ptext68:
  8879                           	opt callstack 0
  8880  003CB4                     _UART1_rx_vect_isr:
  8881                           	opt callstack 17
  8882                           
  8883                           ;mcc_generated_files/uart1.c: 235:     if(UART1_RxInterruptHandler)
  8884                           
  8885                           ;incstack = 0
  8886  003CB4  0101               	movlb	1	; () banked
  8887  003CB6  515D               	movf	_UART1_RxInterruptHandler& (0+255),w,b
  8888  003CB8  115E               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
  8889  003CBA  115F               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
  8890  003CBC  B4D8               	btfsc	status,2,c
  8891  003CBE  0011               	retfie		f
  8892                           
  8893                           ; BSR set to: 1
  8894                           ;mcc_generated_files/uart1.c: 236:     {;mcc_generated_files/uart1.c: 237:         UART1
      +                          _RxInterruptHandler();
  8895  003CC0  D801               	call	i2u298_48
  8896  003CC2  0011               	retfie		f
  8897  003CC4                     i2u298_48:
  8898  003CC4  0005               	push	
  8899  003CC6  6EFA               	movwf	pclath,c
  8900  003CC8  515D               	movf	_UART1_RxInterruptHandler& (0+255),w,b
  8901  003CCA  6EFD               	movwf	tosl,c
  8902  003CCC  515E               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
  8903  003CCE  6EFE               	movwf	tosh,c
  8904  003CD0  515F               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
  8905  003CD2  6EFF               	movwf	tosu,c
  8906  003CD4  50FA               	movf	pclath,w,c
  8907  003CD6  0012               	return		;indir
  8908  003CD8                     __end_of_UART1_rx_vect_isr:
  8909                           	opt callstack 0
  8910                           
  8911 ;; *************** function _UART1_Receive_ISR *****************
  8912 ;; Defined at:
  8913 ;;		line 263 in file "mcc_generated_files/uart1.c"
  8914 ;; Parameters:    Size  Location     Type
  8915 ;;		None
  8916 ;; Auto vars:     Size  Location     Type
  8917 ;;		None
  8918 ;; Return value:  Size  Location     Type
  8919 ;;                  1    wreg      void 
  8920 ;; Registers used:
  8921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8922 ;; Tracked objects:
  8923 ;;		On entry : 3F/1
  8924 ;;		On exit  : 0/0
  8925 ;;		Unchanged: 0/0
  8926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8931 ;;Total ram usage:        0 bytes
  8932 ;; Hardware stack levels used:    1
  8933 ;; Hardware stack levels required when called:    2
  8934 ;; This function calls:
  8935 ;;		Absolute function
  8936 ;;		_UART1_DefaultErrorHandler
  8937 ;;		_UART1_DefaultFramingErrorHandler
  8938 ;;		_UART1_DefaultOverrunErrorHandler
  8939 ;;		_UART1_RxDataHandler
  8940 ;; This function is called by:
  8941 ;;		_UART1_Initialize
  8942 ;;		_UART1_rx_vect_isr
  8943 ;; This function uses a non-reentrant model
  8944 ;;
  8945                           
  8946                           	psect	text69
  8947  00339A                     __ptext69:
  8948                           	opt callstack 0
  8949  00339A                     _UART1_Receive_ISR:
  8950                           	opt callstack 17
  8951                           
  8952                           ; BSR set to: 1
  8953                           ;mcc_generated_files/uart1.c: 266:     uart1RxStatusBuffer[uart1RxHead].status = 0;
  8954                           
  8955                           ;incstack = 0
  8956  00339A  0E26               	movlw	low _uart1RxStatusBuffer
  8957  00339C  245A               	addwf	_uart1RxHead^0,w,c	;volatile
  8958  00339E  6ED9               	movwf	fsr2l,c
  8959  0033A0  6ADA               	clrf	fsr2h,c
  8960  0033A2  0E01               	movlw	high _uart1RxStatusBuffer
  8961  0033A4  22DA               	addwfc	fsr2h,f,c
  8962  0033A6  0E00               	movlw	0
  8963  0033A8  6EDF               	movwf	indf2,c
  8964                           
  8965                           ; BSR set to: 1
  8966                           ;mcc_generated_files/uart1.c: 268:     if(U1ERRIRbits.FERIF){
  8967  0033AA  013D               	movlb	61	; () banked
  8968  0033AC  A7F9               	btfss	249,3,b	;volatile
  8969  0033AE  D014               	goto	i2u248_49
  8970                           
  8971                           ; BSR set to: 61
  8972                           ;mcc_generated_files/uart1.c: 269:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
  8973  0033B0  0E26               	movlw	low _uart1RxStatusBuffer
  8974  0033B2  245A               	addwf	_uart1RxHead^0,w,c	;volatile
  8975  0033B4  6ED9               	movwf	fsr2l,c
  8976  0033B6  6ADA               	clrf	fsr2h,c
  8977  0033B8  0E01               	movlw	high _uart1RxStatusBuffer
  8978  0033BA  22DA               	addwfc	fsr2h,f,c
  8979  0033BC  0101               	movlb	1	; () banked
  8980  0033BE  82DF               	bsf	indf2,1,c
  8981                           
  8982                           ; BSR set to: 1
  8983                           ;mcc_generated_files/uart1.c: 270:         UART1_FramingErrorHandler();
  8984  0033C0  D801               	call	i2u248_48
  8985  0033C2  D00A               	goto	i2u248_49
  8986  0033C4                     i2u248_48:
  8987  0033C4  0005               	push	
  8988  0033C6  6EFA               	movwf	pclath,c
  8989  0033C8  5157               	movf	_UART1_FramingErrorHandler& (0+255),w,b
  8990  0033CA  6EFD               	movwf	tosl,c
  8991  0033CC  5158               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
  8992  0033CE  6EFE               	movwf	tosh,c
  8993  0033D0  5159               	movf	(_UART1_FramingErrorHandler+2)& (0+255),w,b
  8994  0033D2  6EFF               	movwf	tosu,c
  8995  0033D4  50FA               	movf	pclath,w,c
  8996  0033D6  0012               	return		;indir
  8997  0033D8                     i2u248_49:
  8998                           
  8999                           ;mcc_generated_files/uart1.c: 273:     if(U1ERRIRbits.RXFOIF){
  9000  0033D8  013D               	movlb	61	; () banked
  9001  0033DA  A3F9               	btfss	249,1,b	;volatile
  9002  0033DC  D014               	goto	i2u250_49
  9003                           
  9004                           ; BSR set to: 61
  9005                           ;mcc_generated_files/uart1.c: 274:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
  9006  0033DE  0E26               	movlw	low _uart1RxStatusBuffer
  9007  0033E0  245A               	addwf	_uart1RxHead^0,w,c	;volatile
  9008  0033E2  6ED9               	movwf	fsr2l,c
  9009  0033E4  6ADA               	clrf	fsr2h,c
  9010  0033E6  0E01               	movlw	high _uart1RxStatusBuffer
  9011  0033E8  22DA               	addwfc	fsr2h,f,c
  9012  0033EA  0101               	movlb	1	; () banked
  9013  0033EC  84DF               	bsf	indf2,2,c
  9014                           
  9015                           ; BSR set to: 1
  9016                           ;mcc_generated_files/uart1.c: 275:         UART1_OverrunErrorHandler();
  9017  0033EE  D801               	call	i2u250_48
  9018  0033F0  D00A               	goto	i2u250_49
  9019  0033F2                     i2u250_48:
  9020  0033F2  0005               	push	
  9021  0033F4  6EFA               	movwf	pclath,c
  9022  0033F6  5154               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
  9023  0033F8  6EFD               	movwf	tosl,c
  9024  0033FA  5155               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
  9025  0033FC  6EFE               	movwf	tosh,c
  9026  0033FE  5156               	movf	(_UART1_OverrunErrorHandler+2)& (0+255),w,b
  9027  003400  6EFF               	movwf	tosu,c
  9028  003402  50FA               	movf	pclath,w,c
  9029  003404  0012               	return		;indir
  9030  003406                     i2u250_49:
  9031                           
  9032                           ;mcc_generated_files/uart1.c: 278:     if(uart1RxStatusBuffer[uart1RxHead].status){
  9033  003406  0E26               	movlw	low _uart1RxStatusBuffer
  9034  003408  245A               	addwf	_uart1RxHead^0,w,c	;volatile
  9035  00340A  6ED9               	movwf	fsr2l,c
  9036  00340C  6ADA               	clrf	fsr2h,c
  9037  00340E  0E01               	movlw	high _uart1RxStatusBuffer
  9038  003410  22DA               	addwfc	fsr2h,f,c
  9039  003412  50DF               	movf	indf2,w,c
  9040  003414  B4D8               	btfsc	status,2,c
  9041  003416  D00D               	goto	i2l4082
  9042                           
  9043                           ;mcc_generated_files/uart1.c: 279:         UART1_ErrorHandler();
  9044  003418  D801               	call	i2u252_48
  9045  00341A  0012               	return	
  9046  00341C                     i2u252_48:
  9047  00341C  0005               	push	
  9048  00341E  6EFA               	movwf	pclath,c
  9049  003420  0101               	movlb	1	; () banked
  9050  003422  5151               	movf	_UART1_ErrorHandler& (0+255),w,b
  9051  003424  6EFD               	movwf	tosl,c
  9052  003426  5152               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
  9053  003428  6EFE               	movwf	tosh,c
  9054  00342A  5153               	movf	(_UART1_ErrorHandler+2)& (0+255),w,b
  9055  00342C  6EFF               	movwf	tosu,c
  9056  00342E  50FA               	movf	pclath,w,c
  9057  003430  0012               	return		;indir
  9058  003432                     i2l4082:
  9059                           
  9060                           ;mcc_generated_files/uart1.c: 281:         UART1_RxDataHandler();
  9061  003432  EC6C  F01E         	call	_UART1_RxDataHandler	;wreg free
  9062  003436  0012               	return		;funcret
  9063  003438                     __end_of_UART1_Receive_ISR:
  9064                           	opt callstack 0
  9065                           
  9066 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
  9067 ;; Defined at:
  9068 ;;		line 299 in file "mcc_generated_files/uart1.c"
  9069 ;; Parameters:    Size  Location     Type
  9070 ;;		None
  9071 ;; Auto vars:     Size  Location     Type
  9072 ;;		None
  9073 ;; Return value:  Size  Location     Type
  9074 ;;                  1    wreg      void 
  9075 ;; Registers used:
  9076 ;;		None
  9077 ;; Tracked objects:
  9078 ;;		On entry : 3F/1
  9079 ;;		On exit  : 3F/1
  9080 ;;		Unchanged: 3F/0
  9081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9086 ;;Total ram usage:        0 bytes
  9087 ;; Hardware stack levels used:    1
  9088 ;; This function calls:
  9089 ;;		Nothing
  9090 ;; This function is called by:
  9091 ;;		_UART1_Initialize
  9092 ;;		_UART1_Receive_ISR
  9093 ;; This function uses a non-reentrant model
  9094 ;;
  9095                           
  9096                           	psect	text70
  9097  003FFE                     __ptext70:
  9098                           	opt callstack 0
  9099  003FFE                     _UART1_DefaultOverrunErrorHandler:
  9100                           	opt callstack 18
  9101                           
  9102                           ; BSR set to: 1
  9103                           
  9104                           ;incstack = 0
  9105  003FFE  0012               	return		;funcret
  9106  004000                     __end_of_UART1_DefaultOverrunErrorHandler:
  9107                           	opt callstack 0
  9108                           
  9109 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
  9110 ;; Defined at:
  9111 ;;		line 297 in file "mcc_generated_files/uart1.c"
  9112 ;; Parameters:    Size  Location     Type
  9113 ;;		None
  9114 ;; Auto vars:     Size  Location     Type
  9115 ;;		None
  9116 ;; Return value:  Size  Location     Type
  9117 ;;                  1    wreg      void 
  9118 ;; Registers used:
  9119 ;;		None
  9120 ;; Tracked objects:
  9121 ;;		On entry : 3F/1
  9122 ;;		On exit  : 3F/1
  9123 ;;		Unchanged: 3F/0
  9124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9129 ;;Total ram usage:        0 bytes
  9130 ;; Hardware stack levels used:    1
  9131 ;; This function calls:
  9132 ;;		Nothing
  9133 ;; This function is called by:
  9134 ;;		_UART1_Initialize
  9135 ;;		_UART1_Receive_ISR
  9136 ;; This function uses a non-reentrant model
  9137 ;;
  9138                           
  9139                           	psect	text71
  9140  004000                     __ptext71:
  9141                           	opt callstack 0
  9142  004000                     _UART1_DefaultFramingErrorHandler:
  9143                           	opt callstack 18
  9144                           
  9145                           ; BSR set to: 1
  9146                           
  9147                           ; BSR set to: 1
  9148                           ;incstack = 0
  9149  004000  0012               	return		;funcret
  9150  004002                     __end_of_UART1_DefaultFramingErrorHandler:
  9151                           	opt callstack 0
  9152                           
  9153 ;; *************** function _UART1_DefaultErrorHandler *****************
  9154 ;; Defined at:
  9155 ;;		line 301 in file "mcc_generated_files/uart1.c"
  9156 ;; Parameters:    Size  Location     Type
  9157 ;;		None
  9158 ;; Auto vars:     Size  Location     Type
  9159 ;;		None
  9160 ;; Return value:  Size  Location     Type
  9161 ;;                  1    wreg      void 
  9162 ;; Registers used:
  9163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9164 ;; Tracked objects:
  9165 ;;		On entry : 3F/1
  9166 ;;		On exit  : 3F/1
  9167 ;;		Unchanged: 0/0
  9168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9173 ;;Total ram usage:        0 bytes
  9174 ;; Hardware stack levels used:    1
  9175 ;; Hardware stack levels required when called:    1
  9176 ;; This function calls:
  9177 ;;		_UART1_RxDataHandler
  9178 ;; This function is called by:
  9179 ;;		_UART1_Initialize
  9180 ;;		_UART1_Receive_ISR
  9181 ;; This function uses a non-reentrant model
  9182 ;;
  9183                           
  9184                           	psect	text72
  9185  003FEE                     __ptext72:
  9186                           	opt callstack 0
  9187  003FEE                     _UART1_DefaultErrorHandler:
  9188                           	opt callstack 17
  9189                           
  9190                           ; BSR set to: 1
  9191                           ;mcc_generated_files/uart1.c: 302:     UART1_RxDataHandler();
  9192                           
  9193                           ; BSR set to: 1
  9194                           ;incstack = 0
  9195  003FEE  EC6C  F01E         	call	_UART1_RxDataHandler	;wreg free
  9196                           
  9197                           ; BSR set to: 1
  9198  003FF2  0012               	return		;funcret
  9199  003FF4                     __end_of_UART1_DefaultErrorHandler:
  9200                           	opt callstack 0
  9201                           
  9202 ;; *************** function _UART1_RxDataHandler *****************
  9203 ;; Defined at:
  9204 ;;		line 287 in file "mcc_generated_files/uart1.c"
  9205 ;; Parameters:    Size  Location     Type
  9206 ;;		None
  9207 ;; Auto vars:     Size  Location     Type
  9208 ;;		None
  9209 ;; Return value:  Size  Location     Type
  9210 ;;                  1    wreg      void 
  9211 ;; Registers used:
  9212 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9213 ;; Tracked objects:
  9214 ;;		On entry : 0/3D
  9215 ;;		On exit  : 3F/1
  9216 ;;		Unchanged: 0/0
  9217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9222 ;;Total ram usage:        0 bytes
  9223 ;; Hardware stack levels used:    1
  9224 ;; This function calls:
  9225 ;;		Nothing
  9226 ;; This function is called by:
  9227 ;;		_UART1_Receive_ISR
  9228 ;;		_UART1_DefaultErrorHandler
  9229 ;; This function uses a non-reentrant model
  9230 ;;
  9231                           
  9232                           	psect	text73
  9233  003CD8                     __ptext73:
  9234                           	opt callstack 0
  9235  003CD8                     _UART1_RxDataHandler:
  9236                           	opt callstack 18
  9237                           
  9238                           ;mcc_generated_files/uart1.c: 289:     uart1RxBuffer[uart1RxHead++] = U1RXB;
  9239                           
  9240                           ; BSR set to: 1
  9241                           ;incstack = 0
  9242  003CD8  0E2E               	movlw	low _uart1RxBuffer
  9243  003CDA  245A               	addwf	_uart1RxHead^0,w,c	;volatile
  9244  003CDC  6ED9               	movwf	fsr2l,c
  9245  003CDE  6ADA               	clrf	fsr2h,c
  9246  003CE0  0E01               	movlw	high _uart1RxBuffer
  9247  003CE2  22DA               	addwfc	fsr2h,f,c
  9248  003CE4  006F F7A3 FFDF     	movff	15848,indf2	;volatile
  9249  003CEA  2A5A               	incf	_uart1RxHead^0,f,c	;volatile
  9250                           
  9251                           ;mcc_generated_files/uart1.c: 290:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
  9252  003CEC  0E07               	movlw	7
  9253  003CEE  645A               	cpfsgt	_uart1RxHead^0,c
  9254  003CF0  D002               	goto	i2l3674
  9255                           
  9256                           ;mcc_generated_files/uart1.c: 291:     {;mcc_generated_files/uart1.c: 292:         uart1
      +                          RxHead = 0;
  9257  003CF2  0E00               	movlw	0
  9258  003CF4  6E5A               	movwf	_uart1RxHead^0,c	;volatile
  9259  003CF6                     i2l3674:
  9260                           
  9261                           ;mcc_generated_files/uart1.c: 294:     uart1RxCount++;
  9262  003CF6  0101               	movlb	1	; () banked
  9263  003CF8  2B72               	incf	_uart1RxCount& (0+255),f,b	;volatile
  9264                           
  9265                           ; BSR set to: 1
  9266  003CFA  0012               	return		;funcret
  9267  003CFC                     __end_of_UART1_RxDataHandler:
  9268                           	opt callstack 0
  9269                           
  9270 ;; *************** function _UART2_tx_vect_isr *****************
  9271 ;; Defined at:
  9272 ;;		line 226 in file "mcc_generated_files/uart2.c"
  9273 ;; Parameters:    Size  Location     Type
  9274 ;;		None
  9275 ;; Auto vars:     Size  Location     Type
  9276 ;;		None
  9277 ;; Return value:  Size  Location     Type
  9278 ;;                  1    wreg      void 
  9279 ;; Registers used:
  9280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  9281 ;; Tracked objects:
  9282 ;;		On entry : 0/0
  9283 ;;		On exit  : 0/0
  9284 ;;		Unchanged: 0/0
  9285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9290 ;;Total ram usage:        0 bytes
  9291 ;; Hardware stack levels used:    1
  9292 ;; Hardware stack levels required when called:    1
  9293 ;; This function calls:
  9294 ;;		Absolute function
  9295 ;;		_UART2_Transmit_ISR
  9296 ;; This function is called by:
  9297 ;;		Interrupt level 2
  9298 ;; This function uses a non-reentrant model
  9299 ;;
  9300                           
  9301                           	psect	text74
  9302  003CFC                     __ptext74:
  9303                           	opt callstack 0
  9304  003CFC                     _UART2_tx_vect_isr:
  9305                           	opt callstack 19
  9306                           
  9307                           ;mcc_generated_files/uart2.c: 228:     if(UART2_TxInterruptHandler)
  9308                           
  9309                           ; BSR set to: 1
  9310                           ;incstack = 0
  9311  003CFC  0101               	movlb	1	; () banked
  9312  003CFE  5160               	movf	_UART2_TxInterruptHandler& (0+255),w,b
  9313  003D00  1161               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
  9314  003D02  1162               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
  9315  003D04  B4D8               	btfsc	status,2,c
  9316  003D06  0011               	retfie		f
  9317                           
  9318                           ; BSR set to: 1
  9319                           ;mcc_generated_files/uart2.c: 229:     {;mcc_generated_files/uart2.c: 230:         UART2
      +                          _TxInterruptHandler();
  9320  003D08  D801               	call	i2u300_48
  9321  003D0A  0011               	retfie		f
  9322  003D0C                     i2u300_48:
  9323  003D0C  0005               	push	
  9324  003D0E  6EFA               	movwf	pclath,c
  9325  003D10  5160               	movf	_UART2_TxInterruptHandler& (0+255),w,b
  9326  003D12  6EFD               	movwf	tosl,c
  9327  003D14  5161               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
  9328  003D16  6EFE               	movwf	tosh,c
  9329  003D18  5162               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
  9330  003D1A  6EFF               	movwf	tosu,c
  9331  003D1C  50FA               	movf	pclath,w,c
  9332  003D1E  0012               	return		;indir
  9333  003D20                     __end_of_UART2_tx_vect_isr:
  9334                           	opt callstack 0
  9335                           
  9336 ;; *************** function _UART2_Transmit_ISR *****************
  9337 ;; Defined at:
  9338 ;;		line 244 in file "mcc_generated_files/uart2.c"
  9339 ;; Parameters:    Size  Location     Type
  9340 ;;		None
  9341 ;; Auto vars:     Size  Location     Type
  9342 ;;		None
  9343 ;; Return value:  Size  Location     Type
  9344 ;;                  1    wreg      void 
  9345 ;; Registers used:
  9346 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9347 ;; Tracked objects:
  9348 ;;		On entry : 3F/1
  9349 ;;		On exit  : 6/0
  9350 ;;		Unchanged: 0/0
  9351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9356 ;;Total ram usage:        0 bytes
  9357 ;; Hardware stack levels used:    1
  9358 ;; This function calls:
  9359 ;;		Nothing
  9360 ;; This function is called by:
  9361 ;;		_UART2_Initialize
  9362 ;;		_UART2_tx_vect_isr
  9363 ;; This function uses a non-reentrant model
  9364 ;;
  9365                           
  9366                           	psect	text75
  9367  003B3A                     __ptext75:
  9368                           	opt callstack 0
  9369  003B3A                     _UART2_Transmit_ISR:
  9370                           	opt callstack 19
  9371                           
  9372                           ; BSR set to: 1
  9373                           ;mcc_generated_files/uart2.c: 247:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
  9374                           
  9375                           ;incstack = 0
  9376  003B3A  0E08               	movlw	8
  9377  003B3C  0100               	movlb	0	; () banked
  9378  003B3E  6198               	cpfslt	_uart2TxBufferRemaining& (0+255),b
  9379  003B40  D012               	goto	i2l518
  9380                           
  9381                           ; BSR set to: 0
  9382                           ;mcc_generated_files/uart2.c: 248:     {;mcc_generated_files/uart2.c: 249:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
  9383  003B42  0E1E               	movlw	low _uart2TxBuffer
  9384  003B44  2599               	addwf	_uart2TxTail& (0+255),w,b	;volatile
  9385  003B46  6ED9               	movwf	fsr2l,c
  9386  003B48  6ADA               	clrf	fsr2h,c
  9387  003B4A  0E01               	movlw	high _uart2TxBuffer
  9388  003B4C  22DA               	addwfc	fsr2h,f,c
  9389  003B4E  50DF               	movf	indf2,w,c
  9390  003B50  013D               	movlb	61	; () banked
  9391  003B52  6FD2               	movwf	210,b	;volatile
  9392                           
  9393                           ; BSR set to: 61
  9394  003B54  0100               	movlb	0	; () banked
  9395  003B56  2B99               	incf	_uart2TxTail& (0+255),f,b	;volatile
  9396                           
  9397                           ; BSR set to: 0
  9398                           ;mcc_generated_files/uart2.c: 250:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
  9399  003B58  0E07               	movlw	7
  9400  003B5A  6599               	cpfsgt	_uart2TxTail& (0+255),b
  9401  003B5C  D002               	goto	i2l4094
  9402                           
  9403                           ; BSR set to: 0
  9404                           ;mcc_generated_files/uart2.c: 251:         {;mcc_generated_files/uart2.c: 252:          
      +                             uart2TxTail = 0;
  9405  003B5E  0E00               	movlw	0
  9406  003B60  6F99               	movwf	_uart2TxTail& (0+255),b	;volatile
  9407  003B62                     i2l4094:
  9408                           
  9409                           ; BSR set to: 0
  9410                           ;mcc_generated_files/uart2.c: 254:         uart2TxBufferRemaining++;
  9411  003B62  2B98               	incf	_uart2TxBufferRemaining& (0+255),f,b	;volatile
  9412                           
  9413                           ;mcc_generated_files/uart2.c: 255:     }
  9414  003B64  0012               	return	
  9415  003B66                     i2l518:
  9416                           
  9417                           ; BSR set to: 0
  9418                           ;mcc_generated_files/uart2.c: 257:     {;mcc_generated_files/uart2.c: 258:         PIE6b
      +                          its.U2TXIE = 0;
  9419  003B66  0139               	movlb	57	; () banked
  9420  003B68  9796               	bcf	150,3,b	;volatile
  9421  003B6A  0012               	return		;funcret
  9422  003B6C                     __end_of_UART2_Transmit_ISR:
  9423                           	opt callstack 0
  9424                           
  9425 ;; *************** function _UART2_rx_vect_isr *****************
  9426 ;; Defined at:
  9427 ;;		line 234 in file "mcc_generated_files/uart2.c"
  9428 ;; Parameters:    Size  Location     Type
  9429 ;;		None
  9430 ;; Auto vars:     Size  Location     Type
  9431 ;;		None
  9432 ;; Return value:  Size  Location     Type
  9433 ;;                  1    wreg      void 
  9434 ;; Registers used:
  9435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  9436 ;; Tracked objects:
  9437 ;;		On entry : 0/0
  9438 ;;		On exit  : 0/0
  9439 ;;		Unchanged: 0/0
  9440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9445 ;;Total ram usage:        0 bytes
  9446 ;; Hardware stack levels used:    1
  9447 ;; Hardware stack levels required when called:    3
  9448 ;; This function calls:
  9449 ;;		Absolute function
  9450 ;;		_UART2_Receive_ISR
  9451 ;; This function is called by:
  9452 ;;		Interrupt level 2
  9453 ;; This function uses a non-reentrant model
  9454 ;;
  9455                           
  9456                           	psect	text76
  9457  003D20                     __ptext76:
  9458                           	opt callstack 0
  9459  003D20                     _UART2_rx_vect_isr:
  9460                           	opt callstack 17
  9461                           
  9462                           ;mcc_generated_files/uart2.c: 236:     if(UART2_RxInterruptHandler)
  9463                           
  9464                           ;incstack = 0
  9465  003D20  0101               	movlb	1	; () banked
  9466  003D22  5163               	movf	_UART2_RxInterruptHandler& (0+255),w,b
  9467  003D24  1164               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
  9468  003D26  1165               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
  9469  003D28  B4D8               	btfsc	status,2,c
  9470  003D2A  0011               	retfie		f
  9471                           
  9472                           ; BSR set to: 1
  9473                           ;mcc_generated_files/uart2.c: 237:     {;mcc_generated_files/uart2.c: 238:         UART2
      +                          _RxInterruptHandler();
  9474  003D2C  D801               	call	i2u302_48
  9475  003D2E  0011               	retfie		f
  9476  003D30                     i2u302_48:
  9477  003D30  0005               	push	
  9478  003D32  6EFA               	movwf	pclath,c
  9479  003D34  5163               	movf	_UART2_RxInterruptHandler& (0+255),w,b
  9480  003D36  6EFD               	movwf	tosl,c
  9481  003D38  5164               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
  9482  003D3A  6EFE               	movwf	tosh,c
  9483  003D3C  5165               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
  9484  003D3E  6EFF               	movwf	tosu,c
  9485  003D40  50FA               	movf	pclath,w,c
  9486  003D42  0012               	return		;indir
  9487  003D44                     __end_of_UART2_rx_vect_isr:
  9488                           	opt callstack 0
  9489                           
  9490 ;; *************** function _UART2_Receive_ISR *****************
  9491 ;; Defined at:
  9492 ;;		line 264 in file "mcc_generated_files/uart2.c"
  9493 ;; Parameters:    Size  Location     Type
  9494 ;;		None
  9495 ;; Auto vars:     Size  Location     Type
  9496 ;;		None
  9497 ;; Return value:  Size  Location     Type
  9498 ;;                  1    wreg      void 
  9499 ;; Registers used:
  9500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  9501 ;; Tracked objects:
  9502 ;;		On entry : 3F/1
  9503 ;;		On exit  : 0/0
  9504 ;;		Unchanged: 0/0
  9505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9510 ;;Total ram usage:        0 bytes
  9511 ;; Hardware stack levels used:    1
  9512 ;; Hardware stack levels required when called:    2
  9513 ;; This function calls:
  9514 ;;		Absolute function
  9515 ;;		_UART2_DefaultErrorHandler
  9516 ;;		_UART2_DefaultFramingErrorHandler
  9517 ;;		_UART2_DefaultOverrunErrorHandler
  9518 ;;		_UART2_RxDataHandler
  9519 ;; This function is called by:
  9520 ;;		_UART2_Initialize
  9521 ;;		_UART2_rx_vect_isr
  9522 ;; This function uses a non-reentrant model
  9523 ;;
  9524                           
  9525                           	psect	text77
  9526  003438                     __ptext77:
  9527                           	opt callstack 0
  9528  003438                     _UART2_Receive_ISR:
  9529                           	opt callstack 17
  9530                           
  9531                           ; BSR set to: 1
  9532                           ;mcc_generated_files/uart2.c: 267:     uart2RxStatusBuffer[uart2RxHead].status = 0;
  9533                           
  9534                           ;incstack = 0
  9535  003438  0E0E               	movlw	low _uart2RxStatusBuffer
  9536  00343A  2459               	addwf	_uart2RxHead^0,w,c	;volatile
  9537  00343C  6ED9               	movwf	fsr2l,c
  9538  00343E  6ADA               	clrf	fsr2h,c
  9539  003440  0E01               	movlw	high _uart2RxStatusBuffer
  9540  003442  22DA               	addwfc	fsr2h,f,c
  9541  003444  0E00               	movlw	0
  9542  003446  6EDF               	movwf	indf2,c
  9543                           
  9544                           ; BSR set to: 1
  9545                           ;mcc_generated_files/uart2.c: 269:     if(U2ERRIRbits.FERIF){
  9546  003448  013D               	movlb	61	; () banked
  9547  00344A  A7E1               	btfss	225,3,b	;volatile
  9548  00344C  D014               	goto	i2u256_49
  9549                           
  9550                           ; BSR set to: 61
  9551                           ;mcc_generated_files/uart2.c: 270:         uart2RxStatusBuffer[uart2RxHead].ferr = 1;
  9552  00344E  0E0E               	movlw	low _uart2RxStatusBuffer
  9553  003450  2459               	addwf	_uart2RxHead^0,w,c	;volatile
  9554  003452  6ED9               	movwf	fsr2l,c
  9555  003454  6ADA               	clrf	fsr2h,c
  9556  003456  0E01               	movlw	high _uart2RxStatusBuffer
  9557  003458  22DA               	addwfc	fsr2h,f,c
  9558  00345A  0101               	movlb	1	; () banked
  9559  00345C  82DF               	bsf	indf2,1,c
  9560                           
  9561                           ; BSR set to: 1
  9562                           ;mcc_generated_files/uart2.c: 271:         UART2_FramingErrorHandler();
  9563  00345E  D801               	call	i2u256_48
  9564  003460  D00A               	goto	i2u256_49
  9565  003462                     i2u256_48:
  9566  003462  0005               	push	
  9567  003464  6EFA               	movwf	pclath,c
  9568  003466  514E               	movf	_UART2_FramingErrorHandler& (0+255),w,b
  9569  003468  6EFD               	movwf	tosl,c
  9570  00346A  514F               	movf	(_UART2_FramingErrorHandler+1)& (0+255),w,b
  9571  00346C  6EFE               	movwf	tosh,c
  9572  00346E  5150               	movf	(_UART2_FramingErrorHandler+2)& (0+255),w,b
  9573  003470  6EFF               	movwf	tosu,c
  9574  003472  50FA               	movf	pclath,w,c
  9575  003474  0012               	return		;indir
  9576  003476                     i2u256_49:
  9577                           
  9578                           ;mcc_generated_files/uart2.c: 274:     if(U2ERRIRbits.RXFOIF){
  9579  003476  013D               	movlb	61	; () banked
  9580  003478  A3E1               	btfss	225,1,b	;volatile
  9581  00347A  D014               	goto	i2u258_49
  9582                           
  9583                           ; BSR set to: 61
  9584                           ;mcc_generated_files/uart2.c: 275:         uart2RxStatusBuffer[uart2RxHead].oerr = 1;
  9585  00347C  0E0E               	movlw	low _uart2RxStatusBuffer
  9586  00347E  2459               	addwf	_uart2RxHead^0,w,c	;volatile
  9587  003480  6ED9               	movwf	fsr2l,c
  9588  003482  6ADA               	clrf	fsr2h,c
  9589  003484  0E01               	movlw	high _uart2RxStatusBuffer
  9590  003486  22DA               	addwfc	fsr2h,f,c
  9591  003488  0101               	movlb	1	; () banked
  9592  00348A  84DF               	bsf	indf2,2,c
  9593                           
  9594                           ; BSR set to: 1
  9595                           ;mcc_generated_files/uart2.c: 276:         UART2_OverrunErrorHandler();
  9596  00348C  D801               	call	i2u258_48
  9597  00348E  D00A               	goto	i2u258_49
  9598  003490                     i2u258_48:
  9599  003490  0005               	push	
  9600  003492  6EFA               	movwf	pclath,c
  9601  003494  514B               	movf	_UART2_OverrunErrorHandler& (0+255),w,b
  9602  003496  6EFD               	movwf	tosl,c
  9603  003498  514C               	movf	(_UART2_OverrunErrorHandler+1)& (0+255),w,b
  9604  00349A  6EFE               	movwf	tosh,c
  9605  00349C  514D               	movf	(_UART2_OverrunErrorHandler+2)& (0+255),w,b
  9606  00349E  6EFF               	movwf	tosu,c
  9607  0034A0  50FA               	movf	pclath,w,c
  9608  0034A2  0012               	return		;indir
  9609  0034A4                     i2u258_49:
  9610                           
  9611                           ;mcc_generated_files/uart2.c: 279:     if(uart2RxStatusBuffer[uart2RxHead].status){
  9612  0034A4  0E0E               	movlw	low _uart2RxStatusBuffer
  9613  0034A6  2459               	addwf	_uart2RxHead^0,w,c	;volatile
  9614  0034A8  6ED9               	movwf	fsr2l,c
  9615  0034AA  6ADA               	clrf	fsr2h,c
  9616  0034AC  0E01               	movlw	high _uart2RxStatusBuffer
  9617  0034AE  22DA               	addwfc	fsr2h,f,c
  9618  0034B0  50DF               	movf	indf2,w,c
  9619  0034B2  B4D8               	btfsc	status,2,c
  9620  0034B4  D00D               	goto	i2l4114
  9621                           
  9622                           ;mcc_generated_files/uart2.c: 280:         UART2_ErrorHandler();
  9623  0034B6  D801               	call	i2u260_48
  9624  0034B8  0012               	return	
  9625  0034BA                     i2u260_48:
  9626  0034BA  0005               	push	
  9627  0034BC  6EFA               	movwf	pclath,c
  9628  0034BE  0101               	movlb	1	; () banked
  9629  0034C0  5148               	movf	_UART2_ErrorHandler& (0+255),w,b
  9630  0034C2  6EFD               	movwf	tosl,c
  9631  0034C4  5149               	movf	(_UART2_ErrorHandler+1)& (0+255),w,b
  9632  0034C6  6EFE               	movwf	tosh,c
  9633  0034C8  514A               	movf	(_UART2_ErrorHandler+2)& (0+255),w,b
  9634  0034CA  6EFF               	movwf	tosu,c
  9635  0034CC  50FA               	movf	pclath,w,c
  9636  0034CE  0012               	return		;indir
  9637  0034D0                     i2l4114:
  9638                           
  9639                           ;mcc_generated_files/uart2.c: 282:         UART2_RxDataHandler();
  9640  0034D0  ECA2  F01E         	call	_UART2_RxDataHandler	;wreg free
  9641  0034D4  0012               	return		;funcret
  9642  0034D6                     __end_of_UART2_Receive_ISR:
  9643                           	opt callstack 0
  9644                           
  9645 ;; *************** function _UART2_DefaultOverrunErrorHandler *****************
  9646 ;; Defined at:
  9647 ;;		line 300 in file "mcc_generated_files/uart2.c"
  9648 ;; Parameters:    Size  Location     Type
  9649 ;;		None
  9650 ;; Auto vars:     Size  Location     Type
  9651 ;;		None
  9652 ;; Return value:  Size  Location     Type
  9653 ;;                  1    wreg      void 
  9654 ;; Registers used:
  9655 ;;		None
  9656 ;; Tracked objects:
  9657 ;;		On entry : 3F/1
  9658 ;;		On exit  : 3F/1
  9659 ;;		Unchanged: 3F/0
  9660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9665 ;;Total ram usage:        0 bytes
  9666 ;; Hardware stack levels used:    1
  9667 ;; This function calls:
  9668 ;;		Nothing
  9669 ;; This function is called by:
  9670 ;;		_UART2_Initialize
  9671 ;;		_UART2_Receive_ISR
  9672 ;; This function uses a non-reentrant model
  9673 ;;
  9674                           
  9675                           	psect	text78
  9676  004002                     __ptext78:
  9677                           	opt callstack 0
  9678  004002                     _UART2_DefaultOverrunErrorHandler:
  9679                           	opt callstack 18
  9680                           
  9681                           ; BSR set to: 1
  9682                           
  9683                           ;incstack = 0
  9684  004002  0012               	return		;funcret
  9685  004004                     __end_of_UART2_DefaultOverrunErrorHandler:
  9686                           	opt callstack 0
  9687                           
  9688 ;; *************** function _UART2_DefaultFramingErrorHandler *****************
  9689 ;; Defined at:
  9690 ;;		line 298 in file "mcc_generated_files/uart2.c"
  9691 ;; Parameters:    Size  Location     Type
  9692 ;;		None
  9693 ;; Auto vars:     Size  Location     Type
  9694 ;;		None
  9695 ;; Return value:  Size  Location     Type
  9696 ;;                  1    wreg      void 
  9697 ;; Registers used:
  9698 ;;		None
  9699 ;; Tracked objects:
  9700 ;;		On entry : 3F/1
  9701 ;;		On exit  : 3F/1
  9702 ;;		Unchanged: 3F/0
  9703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9708 ;;Total ram usage:        0 bytes
  9709 ;; Hardware stack levels used:    1
  9710 ;; This function calls:
  9711 ;;		Nothing
  9712 ;; This function is called by:
  9713 ;;		_UART2_Initialize
  9714 ;;		_UART2_Receive_ISR
  9715 ;; This function uses a non-reentrant model
  9716 ;;
  9717                           
  9718                           	psect	text79
  9719  004004                     __ptext79:
  9720                           	opt callstack 0
  9721  004004                     _UART2_DefaultFramingErrorHandler:
  9722                           	opt callstack 18
  9723                           
  9724                           ; BSR set to: 1
  9725                           
  9726                           ; BSR set to: 1
  9727                           ;incstack = 0
  9728  004004  0012               	return		;funcret
  9729  004006                     __end_of_UART2_DefaultFramingErrorHandler:
  9730                           	opt callstack 0
  9731                           
  9732 ;; *************** function _UART2_DefaultErrorHandler *****************
  9733 ;; Defined at:
  9734 ;;		line 302 in file "mcc_generated_files/uart2.c"
  9735 ;; Parameters:    Size  Location     Type
  9736 ;;		None
  9737 ;; Auto vars:     Size  Location     Type
  9738 ;;		None
  9739 ;; Return value:  Size  Location     Type
  9740 ;;                  1    wreg      void 
  9741 ;; Registers used:
  9742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9743 ;; Tracked objects:
  9744 ;;		On entry : 3F/1
  9745 ;;		On exit  : 3F/0
  9746 ;;		Unchanged: 0/0
  9747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9752 ;;Total ram usage:        0 bytes
  9753 ;; Hardware stack levels used:    1
  9754 ;; Hardware stack levels required when called:    1
  9755 ;; This function calls:
  9756 ;;		_UART2_RxDataHandler
  9757 ;; This function is called by:
  9758 ;;		_UART2_Initialize
  9759 ;;		_UART2_Receive_ISR
  9760 ;; This function uses a non-reentrant model
  9761 ;;
  9762                           
  9763                           	psect	text80
  9764  003FF4                     __ptext80:
  9765                           	opt callstack 0
  9766  003FF4                     _UART2_DefaultErrorHandler:
  9767                           	opt callstack 17
  9768                           
  9769                           ; BSR set to: 1
  9770                           ;mcc_generated_files/uart2.c: 303:     UART2_RxDataHandler();
  9771                           
  9772                           ; BSR set to: 1
  9773                           ;incstack = 0
  9774  003FF4  ECA2  F01E         	call	_UART2_RxDataHandler	;wreg free
  9775                           
  9776                           ; BSR set to: 0
  9777  003FF8  0012               	return		;funcret
  9778  003FFA                     __end_of_UART2_DefaultErrorHandler:
  9779                           	opt callstack 0
  9780                           
  9781 ;; *************** function _UART2_RxDataHandler *****************
  9782 ;; Defined at:
  9783 ;;		line 288 in file "mcc_generated_files/uart2.c"
  9784 ;; Parameters:    Size  Location     Type
  9785 ;;		None
  9786 ;; Auto vars:     Size  Location     Type
  9787 ;;		None
  9788 ;; Return value:  Size  Location     Type
  9789 ;;                  1    wreg      void 
  9790 ;; Registers used:
  9791 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9792 ;; Tracked objects:
  9793 ;;		On entry : 0/3D
  9794 ;;		On exit  : 3F/0
  9795 ;;		Unchanged: 0/0
  9796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9801 ;;Total ram usage:        0 bytes
  9802 ;; Hardware stack levels used:    1
  9803 ;; This function calls:
  9804 ;;		Nothing
  9805 ;; This function is called by:
  9806 ;;		_UART2_Receive_ISR
  9807 ;;		_UART2_DefaultErrorHandler
  9808 ;; This function uses a non-reentrant model
  9809 ;;
  9810                           
  9811                           	psect	text81
  9812  003D44                     __ptext81:
  9813                           	opt callstack 0
  9814  003D44                     _UART2_RxDataHandler:
  9815                           	opt callstack 18
  9816                           
  9817                           ;mcc_generated_files/uart2.c: 290:     uart2RxBuffer[uart2RxHead++] = U2RXB;
  9818                           
  9819                           ; BSR set to: 0
  9820                           ;incstack = 0
  9821  003D44  0E16               	movlw	low _uart2RxBuffer
  9822  003D46  2459               	addwf	_uart2RxHead^0,w,c	;volatile
  9823  003D48  6ED9               	movwf	fsr2l,c
  9824  003D4A  6ADA               	clrf	fsr2h,c
  9825  003D4C  0E01               	movlw	high _uart2RxBuffer
  9826  003D4E  22DA               	addwfc	fsr2h,f,c
  9827  003D50  006F F743 FFDF     	movff	15824,indf2	;volatile
  9828  003D56  2A59               	incf	_uart2RxHead^0,f,c	;volatile
  9829                           
  9830                           ;mcc_generated_files/uart2.c: 291:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
  9831  003D58  0E07               	movlw	7
  9832  003D5A  6459               	cpfsgt	_uart2RxHead^0,c
  9833  003D5C  D002               	goto	i2l3694
  9834                           
  9835                           ;mcc_generated_files/uart2.c: 292:     {;mcc_generated_files/uart2.c: 293:         uart2
      +                          RxHead = 0;
  9836  003D5E  0E00               	movlw	0
  9837  003D60  6E59               	movwf	_uart2RxHead^0,c	;volatile
  9838  003D62                     i2l3694:
  9839                           
  9840                           ;mcc_generated_files/uart2.c: 295:     uart2RxCount++;
  9841  003D62  0100               	movlb	0	; () banked
  9842  003D64  2B97               	incf	_uart2RxCount& (0+255),f,b	;volatile
  9843                           
  9844                           ; BSR set to: 0
  9845  003D66  0012               	return		;funcret
  9846  003D68                     __end_of_UART2_RxDataHandler:
  9847                           	opt callstack 0
  9848                           
  9849 ;; *************** function _TMR6_ISR *****************
  9850 ;; Defined at:
  9851 ;;		line 168 in file "mcc_generated_files/tmr6.c"
  9852 ;; Parameters:    Size  Location     Type
  9853 ;;		None
  9854 ;; Auto vars:     Size  Location     Type
  9855 ;;		None
  9856 ;; Return value:  Size  Location     Type
  9857 ;;                  1    wreg      void 
  9858 ;; Registers used:
  9859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  9860 ;; Tracked objects:
  9861 ;;		On entry : 0/0
  9862 ;;		On exit  : 0/0
  9863 ;;		Unchanged: 0/0
  9864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9869 ;;Total ram usage:        0 bytes
  9870 ;; Hardware stack levels used:    1
  9871 ;; Hardware stack levels required when called:    1
  9872 ;; This function calls:
  9873 ;;		Absolute function
  9874 ;;		_TMR6_DefaultInterruptHandler
  9875 ;; This function is called by:
  9876 ;;		Interrupt level 2
  9877 ;; This function uses a non-reentrant model
  9878 ;;
  9879                           
  9880                           	psect	text82
  9881  003C20                     __ptext82:
  9882                           	opt callstack 0
  9883  003C20                     _TMR6_ISR:
  9884                           	opt callstack 19
  9885                           
  9886                           ;mcc_generated_files/tmr6.c: 172:  PIR9bits.TMR6IF = 0;
  9887                           
  9888                           ; BSR set to: 0
  9889                           ;incstack = 0
  9890  003C20  0139               	movlb	57	; () banked
  9891  003C22  91A9               	bcf	169,0,b	;volatile
  9892                           
  9893                           ; BSR set to: 57
  9894                           ;mcc_generated_files/tmr6.c: 174:  if (TMR6_InterruptHandler) {
  9895  003C24  0101               	movlb	1	; () banked
  9896  003C26  5145               	movf	_TMR6_InterruptHandler& (0+255),w,b
  9897  003C28  1146               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
  9898  003C2A  1147               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
  9899  003C2C  B4D8               	btfsc	status,2,c
  9900  003C2E  0011               	retfie		f
  9901                           
  9902                           ; BSR set to: 1
  9903                           ;mcc_generated_files/tmr6.c: 175:   TMR6_InterruptHandler();
  9904  003C30  D801               	call	i2u304_48
  9905  003C32  0011               	retfie		f
  9906  003C34                     i2u304_48:
  9907  003C34  0005               	push	
  9908  003C36  6EFA               	movwf	pclath,c
  9909  003C38  5145               	movf	_TMR6_InterruptHandler& (0+255),w,b
  9910  003C3A  6EFD               	movwf	tosl,c
  9911  003C3C  5146               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
  9912  003C3E  6EFE               	movwf	tosh,c
  9913  003C40  5147               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
  9914  003C42  6EFF               	movwf	tosu,c
  9915  003C44  50FA               	movf	pclath,w,c
  9916  003C46  0012               	return		;indir
  9917  003C48                     __end_of_TMR6_ISR:
  9918                           	opt callstack 0
  9919                           
  9920 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  9921 ;; Defined at:
  9922 ;;		line 184 in file "mcc_generated_files/tmr6.c"
  9923 ;; Parameters:    Size  Location     Type
  9924 ;;		None
  9925 ;; Auto vars:     Size  Location     Type
  9926 ;;  i               1    2[COMRAM] unsigned char 
  9927 ;; Return value:  Size  Location     Type
  9928 ;;                  1    wreg      void 
  9929 ;; Registers used:
  9930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9931 ;; Tracked objects:
  9932 ;;		On entry : 3F/1
  9933 ;;		On exit  : 3F/1
  9934 ;;		Unchanged: 3F/0
  9935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9937 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9938 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9939 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9940 ;;Total ram usage:        3 bytes
  9941 ;; Hardware stack levels used:    1
  9942 ;; This function calls:
  9943 ;;		Nothing
  9944 ;; This function is called by:
  9945 ;;		_TMR6_Initialize
  9946 ;;		_TMR6_ISR
  9947 ;; This function uses a non-reentrant model
  9948 ;;
  9949                           
  9950                           	psect	text83
  9951  003984                     __ptext83:
  9952                           	opt callstack 0
  9953  003984                     _TMR6_DefaultInterruptHandler:
  9954                           	opt callstack 19
  9955                           
  9956                           ; BSR set to: 1
  9957                           ;mcc_generated_files/tmr6.c: 186:  uint8_t i;;mcc_generated_files/tmr6.c: 190:  for (i =
      +                           0; i < TMR_COUNT; i++) {
  9958                           
  9959                           ;incstack = 0
  9960  003984  0E00               	movlw	0
  9961  003986  6E03               	movwf	TMR6_DefaultInterruptHandler@i^0,c
  9962  003988                     i2l4122:
  9963                           
  9964                           ; BSR set to: 1
  9965                           ;mcc_generated_files/tmr6.c: 191:   if (tickCount[i] != 0) {
  9966  003988  5003               	movf	TMR6_DefaultInterruptHandler@i^0,w,c
  9967  00398A  0D02               	mullw	2
  9968  00398C  0E00               	movlw	low _tickCount
  9969  00398E  24F3               	addwf	243,w,c
  9970  003990  6ED9               	movwf	fsr2l,c
  9971  003992  0E01               	movlw	high _tickCount
  9972  003994  20F4               	addwfc	prodh,w,c
  9973  003996  6EDA               	movwf	fsr2h,c
  9974  003998  50DE               	movf	postinc2,w,c
  9975  00399A  10DE               	iorwf	postinc2,w,c
  9976  00399C  B4D8               	btfsc	status,2,c
  9977  00399E  D00B               	goto	i2l4126
  9978                           
  9979                           ; BSR set to: 1
  9980                           ;mcc_generated_files/tmr6.c: 192:    tickCount[i]--;
  9981  0039A0  5003               	movf	TMR6_DefaultInterruptHandler@i^0,w,c
  9982  0039A2  0D02               	mullw	2
  9983  0039A4  0E00               	movlw	low _tickCount
  9984  0039A6  24F3               	addwf	243,w,c
  9985  0039A8  6ED9               	movwf	fsr2l,c
  9986  0039AA  0E01               	movlw	high _tickCount
  9987  0039AC  20F4               	addwfc	prodh,w,c
  9988  0039AE  6EDA               	movwf	fsr2h,c
  9989  0039B0  06DE               	decf	postinc2,f,c
  9990  0039B2  0E00               	movlw	0
  9991  0039B4  5ADD               	subwfb	postdec2,f,c
  9992  0039B6                     i2l4126:
  9993                           
  9994                           ; BSR set to: 1
  9995                           ;mcc_generated_files/tmr6.c: 194:  }
  9996  0039B6  2A03               	incf	TMR6_DefaultInterruptHandler@i^0,f,c
  9997                           
  9998                           ; BSR set to: 1
  9999  0039B8  0E06               	movlw	6
 10000  0039BA  6403               	cpfsgt	TMR6_DefaultInterruptHandler@i^0,c
 10001  0039BC  D7E5               	goto	i2l4122
 10002  0039BE  0012               	return	
 10003  0039C0                     __end_of_TMR6_DefaultInterruptHandler:
 10004                           	opt callstack 0
 10005                           
 10006 ;; *************** function _TMR5_ISR *****************
 10007 ;; Defined at:
 10008 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 10009 ;; Parameters:    Size  Location     Type
 10010 ;;		None
 10011 ;; Auto vars:     Size  Location     Type
 10012 ;;		None
 10013 ;; Return value:  Size  Location     Type
 10014 ;;                  1    wreg      void 
 10015 ;; Registers used:
 10016 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10017 ;; Tracked objects:
 10018 ;;		On entry : 0/0
 10019 ;;		On exit  : 3F/1
 10020 ;;		Unchanged: 0/0
 10021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10026 ;;Total ram usage:        0 bytes
 10027 ;; Hardware stack levels used:    1
 10028 ;; Hardware stack levels required when called:    2
 10029 ;; This function calls:
 10030 ;;		_TMR5_CallBack
 10031 ;;		_TMR5_WriteTimer
 10032 ;; This function is called by:
 10033 ;;		Interrupt level 2
 10034 ;; This function uses a non-reentrant model
 10035 ;;
 10036                           
 10037                           	psect	text84
 10038  003AA0                     __ptext84:
 10039                           	opt callstack 0
 10040  003AA0                     _TMR5_ISR:
 10041                           	opt callstack 18
 10042                           
 10043                           ;mcc_generated_files/tmr5.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr5.c: 171:     PIR8bits.TMR5IF = 0;
 10044                           
 10045                           ; BSR set to: 1
 10046                           ;incstack = 0
 10047  003AA0  0139               	movlb	57	; () banked
 10048  003AA2  9DA8               	bcf	168,6,b	;volatile
 10049                           
 10050                           ; BSR set to: 57
 10051                           ;mcc_generated_files/tmr5.c: 172:     TMR5_WriteTimer(timer5ReloadVal);
 10052  003AA4  0060  F5B8  F004   	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 10053  003AAA  0060  F5BC  F005   	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 10054  003AB0  ECB4  F01E         	call	_TMR5_WriteTimer	;wreg free
 10055                           
 10056                           ; BSR set to: 57
 10057                           ;mcc_generated_files/tmr5.c: 175:     if (++CountCallBack >= 50)
 10058  003AB4  0101               	movlb	1	; () banked
 10059  003AB6  4B6C               	infsnz	TMR5_ISR@CountCallBack& (0+255),f,b	;volatile
 10060  003AB8  2B6D               	incf	(TMR5_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 10061  003ABA  516D               	movf	(TMR5_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 10062  003ABC  E104               	bnz	i2u305_40
 10063  003ABE  0E32               	movlw	50
 10064  003AC0  5D6C               	subwf	TMR5_ISR@CountCallBack& (0+255),w,b	;volatile
 10065  003AC2  A0D8               	btfss	status,0,c
 10066  003AC4  0011               	retfie		f
 10067  003AC6                     i2u305_40:
 10068                           
 10069                           ; BSR set to: 1
 10070                           ;mcc_generated_files/tmr5.c: 176:     {;mcc_generated_files/tmr5.c: 178:         TMR5_Ca
      +                          llBack();
 10071  003AC6  ECE8  F01E         	call	_TMR5_CallBack	;wreg free
 10072                           
 10073                           ;mcc_generated_files/tmr5.c: 181:         CountCallBack = 0;
 10074  003ACA  0E00               	movlw	0
 10075  003ACC  0101               	movlb	1	; () banked
 10076  003ACE  6F6D               	movwf	(TMR5_ISR@CountCallBack+1)& (0+255),b	;volatile
 10077  003AD0  0E00               	movlw	0
 10078  003AD2  6F6C               	movwf	TMR5_ISR@CountCallBack& (0+255),b	;volatile
 10079                           
 10080                           ; BSR set to: 1
 10081  003AD4  0011               	retfie		f
 10082  003AD6                     __end_of_TMR5_ISR:
 10083                           	opt callstack 0
 10084                           
 10085 ;; *************** function _TMR5_WriteTimer *****************
 10086 ;; Defined at:
 10087 ;;		line 129 in file "mcc_generated_files/tmr5.c"
 10088 ;; Parameters:    Size  Location     Type
 10089 ;;  timerVal        2    3[COMRAM] unsigned short 
 10090 ;; Auto vars:     Size  Location     Type
 10091 ;;		None
 10092 ;; Return value:  Size  Location     Type
 10093 ;;                  1    wreg      void 
 10094 ;; Registers used:
 10095 ;;		None
 10096 ;; Tracked objects:
 10097 ;;		On entry : 3F/39
 10098 ;;		On exit  : 3F/39
 10099 ;;		Unchanged: 3E/0
 10100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10101 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10104 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10105 ;;Total ram usage:        2 bytes
 10106 ;; Hardware stack levels used:    1
 10107 ;; This function calls:
 10108 ;;		Nothing
 10109 ;; This function is called by:
 10110 ;;		_TMR5_ISR
 10111 ;; This function uses a non-reentrant model
 10112 ;;
 10113                           
 10114                           	psect	text85
 10115  003D68                     __ptext85:
 10116                           	opt callstack 0
 10117  003D68                     _TMR5_WriteTimer:
 10118                           	opt callstack 19
 10119                           
 10120                           ; BSR set to: 57
 10121                           ;mcc_generated_files/tmr5.c: 129: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 130: {;mcc_generated_files/tmr5.c: 131:     if (T5CONbits.NOT_SYNC == 1)
 10122                           
 10123                           ; BSR set to: 1
 10124                           ;incstack = 0
 10125  003D68  A49A               	btfss	154,2,c	;volatile
 10126  003D6A  D009               	goto	i2l776
 10127                           
 10128                           ; BSR set to: 57
 10129                           ;mcc_generated_files/tmr5.c: 132:     {;mcc_generated_files/tmr5.c: 134:         T5CONbi
      +                          ts.TMR5ON = 0;
 10130  003D6C  909A               	bcf	154,0,c	;volatile
 10131                           
 10132                           ;mcc_generated_files/tmr5.c: 137:         TMR5H = (timerVal >> 8);
 10133  003D6E  0060  F017  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 10134                           
 10135                           ;mcc_generated_files/tmr5.c: 138:         TMR5L = timerVal;
 10136  003D74  0060  F013  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 10137                           
 10138                           ;mcc_generated_files/tmr5.c: 141:         T5CONbits.TMR5ON =1;
 10139  003D7A  809A               	bsf	154,0,c	;volatile
 10140                           
 10141                           ;mcc_generated_files/tmr5.c: 142:     }
 10142  003D7C  0012               	return	
 10143  003D7E                     i2l776:
 10144                           
 10145                           ; BSR set to: 57
 10146                           ;mcc_generated_files/tmr5.c: 144:     {;mcc_generated_files/tmr5.c: 146:         TMR5H =
      +                           (timerVal >> 8);
 10147  003D7E  0060  F017  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
 10148                           
 10149                           ;mcc_generated_files/tmr5.c: 147:         TMR5L = timerVal;
 10150  003D84  0060  F013  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 10151                           
 10152                           ; BSR set to: 57
 10153  003D8A  0012               	return		;funcret
 10154  003D8C                     __end_of_TMR5_WriteTimer:
 10155                           	opt callstack 0
 10156                           
 10157 ;; *************** function _TMR5_CallBack *****************
 10158 ;; Defined at:
 10159 ;;		line 185 in file "mcc_generated_files/tmr5.c"
 10160 ;; Parameters:    Size  Location     Type
 10161 ;;		None
 10162 ;; Auto vars:     Size  Location     Type
 10163 ;;		None
 10164 ;; Return value:  Size  Location     Type
 10165 ;;                  1    wreg      void 
 10166 ;; Registers used:
 10167 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10168 ;; Tracked objects:
 10169 ;;		On entry : 3F/1
 10170 ;;		On exit  : 0/0
 10171 ;;		Unchanged: 0/0
 10172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10177 ;;Total ram usage:        0 bytes
 10178 ;; Hardware stack levels used:    1
 10179 ;; Hardware stack levels required when called:    1
 10180 ;; This function calls:
 10181 ;;		Absolute function
 10182 ;;		_TMR5_DefaultInterruptHandler
 10183 ;; This function is called by:
 10184 ;;		_TMR5_ISR
 10185 ;; This function uses a non-reentrant model
 10186 ;;
 10187                           
 10188                           	psect	text86
 10189  003DD0                     __ptext86:
 10190                           	opt callstack 0
 10191  003DD0                     _TMR5_CallBack:
 10192                           	opt callstack 18
 10193                           
 10194                           ; BSR set to: 1
 10195                           ;mcc_generated_files/tmr5.c: 188:     if(TMR5_InterruptHandler)
 10196                           
 10197                           ; BSR set to: 57
 10198                           ;incstack = 0
 10199  003DD0  5142               	movf	_TMR5_InterruptHandler& (0+255),w,b
 10200  003DD2  1143               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 10201  003DD4  1144               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 10202  003DD6  B4D8               	btfsc	status,2,c
 10203  003DD8  0012               	return	
 10204                           
 10205                           ; BSR set to: 1
 10206                           ;mcc_generated_files/tmr5.c: 189:     {;mcc_generated_files/tmr5.c: 190:         TMR5_In
      +                          terruptHandler();
 10207  003DDA  D801               	call	i2u265_48
 10208  003DDC  0012               	return	
 10209  003DDE                     i2u265_48:
 10210  003DDE  0005               	push	
 10211  003DE0  6EFA               	movwf	pclath,c
 10212  003DE2  5142               	movf	_TMR5_InterruptHandler& (0+255),w,b
 10213  003DE4  6EFD               	movwf	tosl,c
 10214  003DE6  5143               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 10215  003DE8  6EFE               	movwf	tosh,c
 10216  003DEA  5144               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 10217  003DEC  6EFF               	movwf	tosu,c
 10218  003DEE  50FA               	movf	pclath,w,c
 10219  003DF0  0012               	return		;indir
 10220  003DF2                     __end_of_TMR5_CallBack:
 10221                           	opt callstack 0
 10222                           
 10223 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 10224 ;; Defined at:
 10225 ;;		line 198 in file "mcc_generated_files/tmr5.c"
 10226 ;; Parameters:    Size  Location     Type
 10227 ;;		None
 10228 ;; Auto vars:     Size  Location     Type
 10229 ;;		None
 10230 ;; Return value:  Size  Location     Type
 10231 ;;                  1    wreg      void 
 10232 ;; Registers used:
 10233 ;;		wreg, status,2, status,0
 10234 ;; Tracked objects:
 10235 ;;		On entry : 3F/1
 10236 ;;		On exit  : 3F/1
 10237 ;;		Unchanged: 3F/0
 10238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10241 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10242 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10243 ;;Total ram usage:        1 bytes
 10244 ;; Hardware stack levels used:    1
 10245 ;; This function calls:
 10246 ;;		Nothing
 10247 ;; This function is called by:
 10248 ;;		_TMR5_Initialize
 10249 ;;		_TMR5_CallBack
 10250 ;; This function uses a non-reentrant model
 10251 ;;
 10252                           
 10253                           	psect	text87
 10254  003E60                     __ptext87:
 10255                           	opt callstack 0
 10256  003E60                     _TMR5_DefaultInterruptHandler:
 10257                           	opt callstack 18
 10258                           
 10259                           ; BSR set to: 1
 10260                           ;mcc_generated_files/tmr5.c: 201:   LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 10261                           
 10262                           ;incstack = 0
 10263  003E60  A0BE               	btfss	190,0,c	;volatile
 10264  003E62  D002               	goto	i2u235_40
 10265  003E64  0E01               	movlw	1
 10266  003E66  D001               	goto	i2u235_46
 10267  003E68                     i2u235_40:
 10268  003E68  0E00               	movlw	0
 10269  003E6A                     i2u235_46:
 10270  003E6A  0AFF               	xorlw	255
 10271  003E6C  6E04               	movwf	??_TMR5_DefaultInterruptHandler^0,c
 10272  003E6E  50BE               	movf	190,w,c	;volatile
 10273  003E70  1804               	xorwf	??_TMR5_DefaultInterruptHandler^0,w,c
 10274  003E72  0BFE               	andlw	-2
 10275  003E74  1804               	xorwf	??_TMR5_DefaultInterruptHandler^0,w,c
 10276  003E76  6EBE               	movwf	190,c	;volatile
 10277                           
 10278                           ; BSR set to: 1
 10279  003E78  0012               	return		;funcret
 10280  003E7A                     __end_of_TMR5_DefaultInterruptHandler:
 10281                           	opt callstack 0
 10282                           
 10283                           ;
 10284                           ; Interrupt Vector Table @ 0x8
 10285                           ;
 10286                           
 10287                           	psect	ivt0x8
 10288  000008                     __pivt0x8:
 10289                           	opt callstack 0
 10290  000008                     ivt0x8_base:
 10291                           	opt callstack 0
 10292                           
 10293                           ; Vector 0 : SWINT
 10294  000008  0FFF               	dw	_Default_ISR shr (0+2)
 10295                           
 10296                           ; Vector 1 : HLVD
 10297  00000A  0FFF               	dw	_Default_ISR shr (0+2)
 10298                           
 10299                           ; Vector 2 : OSF
 10300  00000C  0FFF               	dw	_Default_ISR shr (0+2)
 10301                           
 10302                           ; Vector 3 : CSW
 10303  00000E  0FFF               	dw	_Default_ISR shr (0+2)
 10304                           
 10305                           ; Vector 4 : NVM
 10306  000010  0FFF               	dw	_Default_ISR shr (0+2)
 10307                           
 10308                           ; Vector 5 : SCAN
 10309  000012  0FFF               	dw	_Default_ISR shr (0+2)
 10310                           
 10311                           ; Vector 6 : CRC
 10312  000014  0FFF               	dw	_Default_ISR shr (0+2)
 10313                           
 10314                           ; Vector 7 : IOC
 10315  000016  0FFF               	dw	_Default_ISR shr (0+2)
 10316                           
 10317                           ; Vector 8 : INT0
 10318  000018  0FFF               	dw	_Default_ISR shr (0+2)
 10319                           
 10320                           ; Vector 9 : ZCD
 10321  00001A  0FFF               	dw	_Default_ISR shr (0+2)
 10322                           
 10323                           ; Vector 10 : AD
 10324  00001C  0FFF               	dw	_Default_ISR shr (0+2)
 10325                           
 10326                           ; Vector 11 : ADT
 10327  00001E  0FFF               	dw	_Default_ISR shr (0+2)
 10328                           
 10329                           ; Vector 12 : CMP1
 10330  000020  0FFF               	dw	_Default_ISR shr (0+2)
 10331                           
 10332                           ; Vector 13 : SMT1
 10333  000022  0FFF               	dw	_Default_ISR shr (0+2)
 10334                           
 10335                           ; Vector 14 : SMT1PRA
 10336  000024  0FFF               	dw	_Default_ISR shr (0+2)
 10337                           
 10338                           ; Vector 15 : SMT1PRW
 10339  000026  0FFF               	dw	_Default_ISR shr (0+2)
 10340                           
 10341                           ; Vector 16 : DMA1SCNT
 10342  000028  0FFF               	dw	_Default_ISR shr (0+2)
 10343                           
 10344                           ; Vector 17 : DMA1DCNT
 10345  00002A  0FFF               	dw	_Default_ISR shr (0+2)
 10346                           
 10347                           ; Vector 18 : DMA1OR
 10348  00002C  0FFF               	dw	_Default_ISR shr (0+2)
 10349                           
 10350                           ; Vector 19 : DMA1A
 10351  00002E  0FFF               	dw	_Default_ISR shr (0+2)
 10352                           
 10353                           ; Vector 20 : SPI1RX
 10354  000030  0FFF               	dw	_Default_ISR shr (0+2)
 10355                           
 10356                           ; Vector 21 : SPI1TX
 10357  000032  0FFF               	dw	_Default_ISR shr (0+2)
 10358                           
 10359                           ; Vector 22 : SPI1
 10360  000034  0FFF               	dw	_Default_ISR shr (0+2)
 10361                           
 10362                           ; Vector 23 : I2C1RX
 10363  000036  0FFF               	dw	_Default_ISR shr (0+2)
 10364                           
 10365                           ; Vector 24 : I2C1TX
 10366  000038  0FFF               	dw	_Default_ISR shr (0+2)
 10367                           
 10368                           ; Vector 25 : I2C1
 10369  00003A  0FFF               	dw	_Default_ISR shr (0+2)
 10370                           
 10371                           ; Vector 26 : I2C1E
 10372  00003C  0FFF               	dw	_Default_ISR shr (0+2)
 10373                           
 10374                           ; Vector 27 : U1RX
 10375  00003E  0F2D               	dw	_UART1_rx_vect_isr shr (0+2)
 10376                           
 10377                           ; Vector 28 : U1TX
 10378  000040  0F24               	dw	_UART1_tx_vect_isr shr (0+2)
 10379                           
 10380                           ; Vector 29 : U1E
 10381  000042  0FFF               	dw	_Default_ISR shr (0+2)
 10382                           
 10383                           ; Vector 30 : U1
 10384  000044  0FFF               	dw	_Default_ISR shr (0+2)
 10385                           
 10386                           ; Vector 31 : TMR0
 10387  000046  0FFF               	dw	_Default_ISR shr (0+2)
 10388                           
 10389                           ; Vector 32 : TMR1
 10390  000048  0FFF               	dw	_Default_ISR shr (0+2)
 10391                           
 10392                           ; Vector 33 : TMR1G
 10393  00004A  0FFF               	dw	_Default_ISR shr (0+2)
 10394                           
 10395                           ; Vector 34 : TMR2
 10396  00004C  0FFF               	dw	_Default_ISR shr (0+2)
 10397                           
 10398                           ; Vector 35 : CCP1
 10399  00004E  0FFF               	dw	_Default_ISR shr (0+2)
 10400                           
 10401                           ; Vector 36 : Undefined
 10402  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 10403                           
 10404                           ; Vector 37 : NCO1
 10405  000052  0FFF               	dw	_Default_ISR shr (0+2)
 10406                           
 10407                           ; Vector 38 : CWG1
 10408  000054  0FFF               	dw	_Default_ISR shr (0+2)
 10409                           
 10410                           ; Vector 39 : CLC1
 10411  000056  0FFF               	dw	_Default_ISR shr (0+2)
 10412                           
 10413                           ; Vector 40 : INT1
 10414  000058  0FFF               	dw	_Default_ISR shr (0+2)
 10415                           
 10416                           ; Vector 41 : CMP2
 10417  00005A  0FFF               	dw	_Default_ISR shr (0+2)
 10418                           
 10419                           ; Vector 42 : DMA2SCNT
 10420  00005C  0FFF               	dw	_Default_ISR shr (0+2)
 10421                           
 10422                           ; Vector 43 : DMA2DCNT
 10423  00005E  0FFF               	dw	_Default_ISR shr (0+2)
 10424                           
 10425                           ; Vector 44 : DMA2OR
 10426  000060  0FFF               	dw	_Default_ISR shr (0+2)
 10427                           
 10428                           ; Vector 45 : DMA2A
 10429  000062  0FFF               	dw	_Default_ISR shr (0+2)
 10430                           
 10431                           ; Vector 46 : I2C2RX
 10432  000064  0FFF               	dw	_Default_ISR shr (0+2)
 10433                           
 10434                           ; Vector 47 : I2C2TX
 10435  000066  0FFF               	dw	_Default_ISR shr (0+2)
 10436                           
 10437                           ; Vector 48 : I2C2
 10438  000068  0FFF               	dw	_Default_ISR shr (0+2)
 10439                           
 10440                           ; Vector 49 : I2C2E
 10441  00006A  0FFF               	dw	_Default_ISR shr (0+2)
 10442                           
 10443                           ; Vector 50 : U2RX
 10444  00006C  0F48               	dw	_UART2_rx_vect_isr shr (0+2)
 10445                           
 10446                           ; Vector 51 : U2TX
 10447  00006E  0F3F               	dw	_UART2_tx_vect_isr shr (0+2)
 10448                           
 10449                           ; Vector 52 : U2E
 10450  000070  0FFF               	dw	_Default_ISR shr (0+2)
 10451                           
 10452                           ; Vector 53 : U2
 10453  000072  0FFF               	dw	_Default_ISR shr (0+2)
 10454                           
 10455                           ; Vector 54 : TMR3
 10456  000074  0FFF               	dw	_Default_ISR shr (0+2)
 10457                           
 10458                           ; Vector 55 : TMR3G
 10459  000076  0FFF               	dw	_Default_ISR shr (0+2)
 10460                           
 10461                           ; Vector 56 : TMR4
 10462  000078  0FFF               	dw	_Default_ISR shr (0+2)
 10463                           
 10464                           ; Vector 57 : CCP2
 10465  00007A  0FFF               	dw	_Default_ISR shr (0+2)
 10466                           
 10467                           ; Vector 58 : Undefined
 10468  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 10469                           
 10470                           ; Vector 59 : CWG2
 10471  00007E  0FFF               	dw	_Default_ISR shr (0+2)
 10472                           
 10473                           ; Vector 60 : CLC2
 10474  000080  0FFF               	dw	_Default_ISR shr (0+2)
 10475                           
 10476                           ; Vector 61 : INT2
 10477  000082  0FFF               	dw	_Default_ISR shr (0+2)
 10478                           
 10479                           ; Vector 62 : Undefined
 10480  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 10481                           
 10482                           ; Vector 63 : Undefined
 10483  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 10484                           
 10485                           ; Vector 64 : Undefined
 10486  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 10487                           
 10488                           ; Vector 65 : Undefined
 10489  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 10490                           
 10491                           ; Vector 66 : Undefined
 10492  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 10493                           
 10494                           ; Vector 67 : Undefined
 10495  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 10496                           
 10497                           ; Vector 68 : Undefined
 10498  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 10499                           
 10500                           ; Vector 69 : Undefined
 10501  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 10502                           
 10503                           ; Vector 70 : TMR5
 10504  000094  0EA8               	dw	_TMR5_ISR shr (0+2)
 10505                           
 10506                           ; Vector 71 : TMR5G
 10507  000096  0FFF               	dw	_Default_ISR shr (0+2)
 10508                           
 10509                           ; Vector 72 : TMR6
 10510  000098  0F08               	dw	_TMR6_ISR shr (0+2)
 10511                           
 10512                           ; Vector 73 : CCP3
 10513  00009A  0FFF               	dw	_Default_ISR shr (0+2)
 10514                           
 10515                           ; Vector 74 : CWG3
 10516  00009C  0FFF               	dw	_Default_ISR shr (0+2)
 10517                           
 10518                           ; Vector 75 : CLC3
 10519  00009E  0FFF               	dw	_Default_ISR shr (0+2)
 10520                           
 10521                           ; Vector 76 : Undefined
 10522  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 10523                           
 10524                           ; Vector 77 : Undefined
 10525  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 10526                           
 10527                           ; Vector 78 : Undefined
 10528  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 10529                           
 10530                           ; Vector 79 : Undefined
 10531  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 10532                           
 10533                           ; Vector 80 : CCP4
 10534  0000A8  0FFF               	dw	_Default_ISR shr (0+2)
 10535                           
 10536                           ; Vector 81 : CLC4
 10537  0000AA  0FFF               	dw	_Default_ISR shr (0+2)
 10538  0000AC                     ivt0x8_undefint:
 10539                           	opt callstack 0
 10540  0000AC  00FF               	reset	
 10541                           
 10542                           	psect	text88
 10543  000000                     __ptext88:
 10544                           	opt callstack 0
 10545                           
 10546                           	psect	rparam
 10547  0000                     tosu	equ	0x3FFF
 10548                           tosh	equ	0x3FFE
 10549                           tosl	equ	0x3FFD
 10550                           stkptr	equ	0x3FFC
 10551                           pclatu	equ	0x3FFB
 10552                           pclath	equ	0x3FFA
 10553                           pcl	equ	0x3FF9
 10554                           tblptru	equ	0x3FF8
 10555                           tblptrh	equ	0x3FF7
 10556                           tblptrl	equ	0x3FF6
 10557                           tablat	equ	0x3FF5
 10558                           prodh	equ	0x3FF4
 10559                           prodl	equ	0x3FF3
 10560                           indf0	equ	0x3FEF
 10561                           postinc0	equ	0x3FEE
 10562                           postdec0	equ	0x3FED
 10563                           preinc0	equ	0x3FEC
 10564                           plusw0	equ	0x3FEB
 10565                           fsr0h	equ	0x3FEA
 10566                           fsr0l	equ	0x3FE9
 10567                           wreg	equ	0x3FE8
 10568                           indf1	equ	0x3FE7
 10569                           postinc1	equ	0x3FE6
 10570                           postdec1	equ	0x3FE5
 10571                           preinc1	equ	0x3FE4
 10572                           plusw1	equ	0x3FE3
 10573                           fsr1h	equ	0x3FE2
 10574                           fsr1l	equ	0x3FE1
 10575                           bsr	equ	0x3FE0
 10576                           indf2	equ	0x3FDF
 10577                           postinc2	equ	0x3FDE
 10578                           postdec2	equ	0x3FDD
 10579                           preinc2	equ	0x3FDC
 10580                           plusw2	equ	0x3FDB
 10581                           fsr2h	equ	0x3FDA
 10582                           fsr2l	equ	0x3FD9
 10583                           status	equ	0x3FD8


Data Sizes:
    Strings     81
    Constant    0
    Data        49
    BSS         165
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     85      90
    BANK0           160     50      64
    BANK1           256      0     195
    BANK2           256    128     128
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 128
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), 
		 -> STR_16(CODE[4]), STR_14(CODE[4]), STR_12(CODE[4]), STR_10(CODE[4]), 
		 -> STR_8(CODE[4]), STR_6(CODE[4]), STR_4(CODE[5]), main@buffer(BANK0[24]), 
		 -> work_sw@buffer(BANK2[128]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 128
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), 
		 -> STR_16(CODE[4]), STR_14(CODE[4]), STR_12(CODE[4]), STR_10(CODE[4]), 
		 -> STR_8(CODE[4]), STR_6(CODE[4]), STR_4(CODE[5]), main@buffer(BANK0[24]), 
		 -> work_sw@buffer(BANK2[128]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_15(CODE[3]), STR_13(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), 
		 -> STR_7(CODE[3]), STR_5(CODE[3]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_3(CODE[12]), STR_2(CODE[20]), STR_1(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    S3121_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_15(CODE[3]), STR_13(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), 
		 -> STR_7(CODE[3]), STR_5(CODE[3]), STR_3(CODE[12]), STR_2(CODE[20]), 
		 -> STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 20
		 -> STR_15(CODE[3]), STR_13(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), 
		 -> STR_7(CODE[3]), STR_5(CODE[3]), STR_3(CODE[12]), STR_2(CODE[20]), 
		 -> STR_1(CODE[17]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), STR_16(CODE[4]), STR_14(CODE[4]), 
		 -> STR_12(CODE[4]), STR_10(CODE[4]), STR_8(CODE[4]), STR_6(CODE[4]), 
		 -> STR_4(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), STR_16(CODE[4]), STR_14(CODE[4]), 
		 -> STR_12(CODE[4]), STR_10(CODE[4]), STR_8(CODE[4]), STR_6(CODE[4]), 
		 -> STR_4(CODE[5]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), STR_16(CODE[4]), 
		 -> STR_14(CODE[4]), STR_12(CODE[4]), STR_10(CODE[4]), STR_8(CODE[4]), 
		 -> STR_6(CODE[4]), STR_4(CODE[5]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    eaDogM_WriteStringAtPos@strPtr	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    eaDogM_WriteString@strPtr	PTR unsigned char  size(2) Largest target is 128
		 -> main@buffer(BANK0[24]), work_sw@buffer(BANK2[128]), 

    once@once_flag	PTR _Bool  size(2) Largest target is 36
		 -> IO(BANK1[36]), 

    sounds	PTR struct OUT_data1 size(2) Largest target is 36
		 -> IO(BANK1[36]), 

    switches	PTR struct IN_data size(2) Largest target is 36
		 -> IO(BANK1[36]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    UART2_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    UART2_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultErrorHandler(), 

    UART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultOverrunErrorHandler(), 

    UART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultFramingErrorHandler(), 

    UART2_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultErrorHandler(), Absolute function(), 

    UART2_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultOverrunErrorHandler(), Absolute function(), 

    UART2_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_DefaultFramingErrorHandler(), Absolute function(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _eaDogM_WriteStringAtPos->_eaDogM_WriteString
    _eaDogM_WriteString->_strlen
    _eaDogM_WriteString->_wdtdelay
    _led_lightshow->___awdiv
    _init_display->_send_lcd_cmd
    _init_display->_send_lcd_cmd_long
    _send_lcd_cmd_long->_wdtdelay
    _eaDogM_WriteCommand->_send_lcd_cmd
    _send_lcd_cmd->_wdtdelay
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART2_Initialize->_UART2_SetErrorHandler
    _UART2_Initialize->_UART2_SetFramingErrorHandler
    _UART2_Initialize->_UART2_SetOverrunErrorHandler
    _UART2_Initialize->_UART2_SetRxInterruptHandler
    _UART2_Initialize->_UART2_SetTxInterruptHandler
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _WaitMs->_StartTimer
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART2_Write
    _abs->___aomod

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    _TMR6_ISR->_TMR6_DefaultInterruptHandler

Critical Paths under _TMR5_ISR in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    _TMR5_CallBack->_TMR5_DefaultInterruptHandler

Critical Paths under _main in BANK0

    _main->_sprintf
    _work_sw->_sprintf
    _sprintf->_vfprintf
    _Digital232_init->_printf
    _Digital232_RW->_printf
    _printf->_vfprintf

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_work_sw

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0   74984
                                             22 BANK0     28    28      0
                      _Digital232_RW
                    _Digital232_init
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                      _led_lightshow
                               _once
                            _sprintf
                            _work_sw
 ---------------------------------------------------------------------------------
 (1) _work_sw                                            128   128      0   18185
                                              0 BANK2    128   128      0
                         _StartTimer
                          _TimerDone
            _eaDogM_WriteStringAtPos
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18     9      9   14221
                                              4 BANK0     18     9      9
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     1      3    2786
                                             13 COMRAM     4     1      3
                 _eaDogM_WriteString
                       _send_lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   4     2      2    1419
                                              9 COMRAM     4     2      2
                  _SPI1_Exchange8bit
                             _strlen
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (1) _once                                                 2     0      2     332
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _led_lightshow                                        5     3      2    1770
                                             13 COMRAM     5     3      2
                         _StartTimer
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     625
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    2140
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     1      0     734
                                              9 COMRAM     1     1      0
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     1      0     765
                                             10 COMRAM     1     1      0
                       _send_lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd                                         1     1      0     734
                                              9 COMRAM     1     1      0
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (4) _wdtdelay                                             4     0      4     672
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _SPI1_Exchange8bit                                    1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1486
                    _ADCC_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0     605
              _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetOverrunErrorHandler                         3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetFramingErrorHandler                         3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART2_SetErrorHandler                                3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     605
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     121
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     121
                                              8 COMRAM     2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3     121
                                              5 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      34
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Digital232_init                                      0     0      0   16500
               _ADCC_StartConversion
                         _StartTimer
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                             _printf
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2    1474
                                             10 COMRAM     2     0      2
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _Digital232_RW                                        4     4      0   15714
                                             10 BANK0      4     4      0
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
                 _PWM8_LoadDutyValue
                         _StartTimer
                          _TimerDone
                         _UART2_Read
                        _UART2_Write
                  _UART2_is_rx_ready
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     3      3   13996
                                              4 BANK0      6     3      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             5     1      4   13369
                                             84 COMRAM     1     1      0
                                              0 BANK0      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           37    33      4   12617
                                             70 COMRAM    14    10      4
                               _dtoa
                              _fputc
                               _stoa
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2922
                                             16 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    7129
                                             34 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4863
                                             23 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     400
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2170
                                             16 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1670
                                              7 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      93
                                              6 COMRAM     1     1      0
                        _UART2_Write
 ---------------------------------------------------------------------------------
 (8) _UART2_Write                                          1     1      0      62
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             23 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              5 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              5 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      37
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            3     3      0      31
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _StartTimer                                           5     3      2     962
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   4     2      2     332
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             4     2      2       0
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART2_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART2_DefaultErrorHandler *
   _UART2_DefaultFramingErrorHandler *
   _UART2_DefaultOverrunErrorHandler *
                _UART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART2_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART2_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _UART2_DefaultErrorHandler                           0     0      0       0
                _UART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _UART2_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TMR6_ISR                                            0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _TMR6_DefaultInterruptHandler                        3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TMR5_ISR                                            0     0      0     229
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR5_WriteTimer                                     2     0      2     229
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR5_DefaultInterruptHandler                        1     1      0       0
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Digital232_RW
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
     _PWM8_LoadDutyValue
     _StartTimer
     _TimerDone
     _UART2_Read
     _UART2_Write
     _UART2_is_rx_ready
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART2_Write
               _fputs
                 _fputc
                   _putch
                     _UART2_Write
               _strlen
           _fputc
             _putch
               _UART2_Write
           _stoa
             _fputc
               _putch
                 _UART2_Write
             _strlen
   _Digital232_init
     _ADCC_StartConversion
     _StartTimer
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART2_Write
               _fputs
                 _fputc
                   _putch
                     _UART2_Write
               _strlen
           _fputc
             _putch
               _UART2_Write
           _stoa
             _fputc
               _putch
                 _UART2_Write
             _strlen
   _SYSTEM_Initialize
     _ADCC_Initialize
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetErrorHandler
       _UART2_SetFramingErrorHandler
       _UART2_SetOverrunErrorHandler
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _eaDogM_WriteCommand
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _SPI1_Exchange8bit
       _strlen
       _wdtdelay
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
   _init_display
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _led_lightshow
     _StartTimer
     ___awdiv
   _once
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _UART2_Write
             _fputs
               _fputc
                 _putch
                   _UART2_Write
             _strlen
         _fputc
           _putch
             _UART2_Write
         _stoa
           _fputc
             _putch
               _UART2_Write
           _strlen
   _work_sw
     _StartTimer
     _TimerDone
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _SPI1_Exchange8bit
         _strlen
         _wdtdelay
       _send_lcd_cmd
         _SPI1_Exchange8bit
         _wdtdelay
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART2_Write
               _fputs
                 _fputc
                   _putch
                     _UART2_Write
               _strlen
           _fputc
             _putch
               _UART2_Write
           _stoa
             _fputc
               _putch
                 _UART2_Write
             _strlen

 _Default_ISR (ROOT)

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *
     Absolute function(Fake) *
     _UART2_DefaultErrorHandler *
       _UART2_RxDataHandler
     _UART2_DefaultFramingErrorHandler *
     _UART2_DefaultOverrunErrorHandler *
     _UART2_RxDataHandler *

 _TMR6_ISR (ROOT)
   Absolute function(Fake) *
   _TMR6_DefaultInterruptHandler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     80      80       9       50.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C3       7       76.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     32      40       5       40.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     55      5A       1       94.7%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1DD      58        0.0%
DATA                 0      0     1DD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Sep  5 22:41:34 2019

                           _SPI1_Exchange8bit 3E46              __end_of_TMR5_SetInterruptHandler 3F9A  
                   __end_of_UART2_is_rx_ready 3FEE                            ?_SPI1_Exchange8bit 0001  
                                 __CFG_CP$OFF 000000                                            l68 3E24  
                                          _IO 019F                                  ___awdiv@sign 000B  
                      __end_of_FVR_Initialize 3FE8                             ??_TMR5_WriteTimer 0006  
                                 __CFG_LVP$ON 000000                                 work_sw@buffer 0200  
                                         l494 38DE                                           _GIE 01FE97  
                                         l989 3E54                                           _abs 3946  
                         ??_SPI1_Exchange8bit 0006                                           _pad 3042  
                     __size_of_PMD_Initialize 0022                 eaDogM_WriteStringAtPos@strPtr 000F  
                             _TMR2_Initialize 3DF2                                           prod 003FF3  
                                         tosl 003FFD                                           wreg 003FE8  
                             send_lcd_cmd@cmd 000A                            _UART1_Transmit_ISR 3B08  
                               __CFG_BBEN$OFF 000000                                  __CFG_ZCD$OFF 000000  
                                        l1130 2632                                          ?_abs 0018  
                                        l1213 39D2                                          l1062 2410  
                                        l1135 2700                                          l1071 2504  
                                        l1066 2496                                          l1316 307C  
                                        l1190 3BDE                                          l2063 3976  
                                        l1327 20D6                                          l1329 20E2  
                                        l1169 2E94                                          l1356 2A30  
                                        l5210 3510                                          l5132 38B6  
                                        l5212 3518                                          l5204 34FA  
                                        l5230 3550                                          l5222 3538  
                        _ADCC_StartConversion 3FAE                                          l5400 2788  
                                        l5312 25CE                                          l4610 3086  
                                        l5330 261A                                          l5322 2602  
                                        l5226 3542                                          l4604 3062  
                                        l5340 263C                                          l5308 25A2  
                                        l4702 2D84                                          l4614 30A2  
                                        l5334 2626                                          l5326 260E  
                                        l5342 2644                                          l5182 3BE8  
                                        ?_pad 0018                                          l4640 2B7E  
                                        l4608 3074                                          l4712 20BA  
                                        l4800 2AD2                                          l5344 2678  
                                        l5440 2DEC                                          l4634 2B56  
                                        l4562 3900                                          l4618 30D6  
                                        l4730 2110                                          l5354 26DA  
                                        l5530 23C0                                          l4564 3902  
                                        l4548 38C8                                          l4740 224C  
                                        l4804 2AEC                                          l5380 274C  
                                        l5452 2E2A                                          l5436 2DE6  
                                        l5428 2DC4                                          l5516 2386  
                                        l5508 2368                                          l4646 2BA4  
                                        l4662 2C2A                                          l4574 31BA  
                                        l4726 2100                                          l5374 2722  
                                        l5198 34EA                                          l5462 2E78  
                                        l4648 2BB8                                          l4584 3764  
                                        l4760 22B0                                          l4808 2B08  
                                        l5368 2704                                          l5456 2E56  
                                        l4666 2C50                                          l4658 2C14  
                                        l4682 2CD2                                          l4594 3912  
                                        l4586 3768                                          l4842 28BA  
                                        l5538 2416                                          l4908 3C8C  
                                        l4764 22CA                                          l4852 2926  
                                        l5476 3C1C                                          l4940 3694  
                                        l5548 2446                                          l5556 249C  
                                        l5572 2514                                          l4694 2D48  
                                        l4686 2CEC                                          l4678 2CAE  
                                        l4598 392E                                          l4790 2A6A  
                                        l4862 296E                                          l4934 366C  
                                        l4688 2D00                                          l4776 29E4  
                                        l4698 2D5E                                          l4794 2A88  
                                        l4786 2A4E                                          l4858 2964  
                                        l4946 370C                                          l4868 2980  
                                        l4948 3730                                          STR_1 2015  
                                        STR_2 2001                                          STR_3 2026  
                                        STR_4 2032                                          STR_5 204F  
                                        STR_6 204B                                          STR_7 204F  
                                        STR_8 203B                                          STR_9 204F  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                                          _LATD 003FBD  
                                        _LATE 003FBE                                          u4020 351C  
                                        u3310 31B2                                          u3410 3954  
                                        u3330 31FA                                          u4210 2774  
                                        _T2PR 003FAB                                          u3340 3792  
                                        u4310 2E6C                                          u3520 2D04  
                                        u4320 2E88                                          u3441 2B84  
                                        u3610 20FA                                          u3347 3784  
                                        u3460 2BBC                                          u3620 225A  
                                        u3701 29C0                                          u3550 208C  
                                        u4190 2760                                          u3640 227C  
                                        u3560 208E                                          u3641 227A  
                                        u3650 228A                                          _T6PR 003F93  
                                        u3660 228E                                          _PMD0 0039C0  
                                        _PMD1 0039C1                                          u3590 20CC  
                                        u3750 2A7E                                          _PMD2 0039C2  
                                        _PMD3 0039C3                                          u3680 229A  
                                        u3760 2AB2                                          u3840 2836  
                                        _PMD4 0039C4                                          _PMD5 0039C5  
                                        _PMD6 0039C6                                          u3915 3870  
                                        _PMD7 0039C7                                          u3916 3872  
                                        u3790 2B1C                                          u3767 2AA4  
                                        u3960 3FC8                                          u3955 3A5C  
                                        _PLLR 01CEE0                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                               __CFG_FCMEN$ON 000000                           ?_UART1_Transmit_ISR 0001  
                      led_lightshow@alive_led 0094                                          abs@a 0018  
                                        _dbuf 0174                                          _main 2300  
                                        _dtoa 2054                                          _once 3BF6  
                                        _prec 0092                                          _nout 0166  
                                        pad@i 001F                         __end_of_Digital232_RW 27B8  
                                        pad@p 001C                                          fsr1h 003FE2  
                                        fsr2h 003FDA                                          indf1 003FE7  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        pad@w 0021                                          fsr2l 003FD9  
                                        _stoa 29B6                                          prodl 003FF3  
                                        start 00AE                               _timer5ReloadVal 016E  
                              ?_led_lightshow 000E                     __end_of_SPI1_Exchange8bit 3E60  
               ??_UART1_SetTxInterruptHandler 0009                 ??_UART2_SetRxInterruptHandler 0009  
                               __CFG_CSWEN$ON 000000                             _UART1_rx_vect_isr 3CB4  
                                ___param_bank 000000                                   ?_UART2_Read 0001  
                          ?_UART1_rx_vect_isr 0001                                         ??_abs 001A  
                                       ??_pad 001E                               ?_FVR_Initialize 0001  
              __size_of_OSCILLATOR_Initialize 001C                          ??_UART1_Transmit_ISR 0001  
               __end_of_OSCILLATOR_Initialize 3E2A                               __end_of___aodiv 2C82  
                                       _ADCAP 003EF5                                         _ADACT 003EFE  
                                       ?_main 0001                                         ?_dtoa 0023  
                                       _ADCLK 003EFF                               __end_of___aomod 2DB6  
                                       _ADPCH 003EF1                                         _ADREF 003EFD  
                             __end_of___awdiv 355E                                         ?_once 0006  
                                       STR_10 203F                                         STR_11 204F  
                                       STR_12 2043                                         STR_13 204F  
                                       STR_14 2047                                         STR_15 204F  
                                       STR_16 2037                                 __CFG_WDTE$OFF 000000  
                                       _ADRPT 003EEC                                         ?_stoa 0011  
                             ___awdiv@divisor 0008                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                      eaDogM_WriteStringAtPos@c 000E  
                                       _U1P1L 003DEC                                         _U1P3H 003DF1  
                                       _T2CON 003FAC                                         _U1P2L 003DEE  
                                       _U1P3L 003DF0                                         _U2P1L 003DD4  
                                       _U2P2L 003DD6                                         _U2P3L 003DD8  
                    eaDogM_WriteStringAtPos@r 0011                                         _T5CLK 003F9D  
                                       _T2HLT 003FAD                                         _T5CON 003F9A  
                                       _T6CON 003F94                                __CFG_DEBUG$OFF 000000  
                                       _T6HLT 003F95                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         _T2RST 003FAF  
                                       _U1RXB 003DE8                                         _U2UIR 003DE0  
                                       _U1TXB 003DEA                                         _U2RXB 003DD0  
                                       _U2TXB 003DD2                                         i2l344 3B34  
                                       _T6TMR 003F92                                         i2l518 3B66  
                                       _T6RST 003F97                           ??_UART1_rx_vect_isr 0001  
                                       i2l776 3D7E                               ___awdiv@counter 000A  
                                       _OSCEN 0039DD                                  vfpfcnvrt@fmt 0049  
                                       _TMR5H 003F99                                         _TMR5L 003F98  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                   _Default_ISR 3FFC  
                    eaDogM_WriteString@strPtr 000A                       ??_ADCC_IsConversionDone 0006  
           __size_of_TMR6_SetInterruptHandler 0014                     ?_TMR6_SetInterruptHandler 0006  
                           _UART1_tx_vect_isr 3C90                                 __CFG_WRTB$OFF 000000  
                               __CFG_WRTC$OFF 000000                                 __CFG_WRTD$OFF 000000  
                            __end_of_TMR5_ISR 3AD6                              __end_of_TMR6_ISR 3C48  
                                       _flags 0056                               _Digital232_init 2EA0  
                       ?_ADCC_StartConversion 0001                                         _fputc 31A2  
                  __size_of_send_lcd_cmd_long 0024                                         _fputs 3908  
                          __CFG_MCLRE$EXTMCLR 000000                            ?_UART1_tx_vect_isr 0001  
                                       pad@fp 0018                                         _width 0168  
                                       _putch 3FD6                                         dtoa@d 0025  
                                       dtoa@i 0045                                         main@y 0091  
                                       dtoa@n 003D                                         dtoa@p 0037  
                                       dtoa@s 003B                                         dtoa@w 0039  
                            led_lightshow@seq 0012                                         pclath 003FFA  
                                       tablat 003FF5                     ??_eaDogM_WriteStringAtPos 0011  
                                       plusw1 003FE3                                         plusw2 003FDB  
                                       stoa@i 001D                                         stoa@l 0025  
                                       stoa@p 0023                                         stoa@s 0013  
                                       stoa@w 001F                                         status 003FD8  
         __end_of_UART1_SetRxInterruptHandler 3F36                   _UART1_SetRxInterruptHandler 3F22  
                             __end_of_sprintf 383A                               __end_of_work_sw 339A  
    __end_of_UART1_DefaultFramingErrorHandler 4002     __size_of_UART1_DefaultFramingErrorHandler 0002  
          ??_UART1_DefaultFramingErrorHandler 0001             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler 4000                           ??_UART1_tx_vect_isr 0001  
                   __end_of_UART1_rx_vect_isr 3CD8                      __size_of_SPI1_Initialize 0018  
              ??_TMR6_DefaultInterruptHandler 0001                               _TMR5_Initialize 37A6  
              ??_UART2_SetOverrunErrorHandler 0009                               __initialization 355E  
                           _UART2_rx_vect_isr 3D20                eaDogM_WriteString@bytesWritten 000D  
                                __end_of_main 2586                                  __end_of_dtoa 2300  
                                __end_of_once 3C20                                  __end_of_stoa 2B2A  
                  __size_of_UART2_is_rx_ready 0006                                __CFG_SAFEN$OFF 000000  
                 ??_UART1_DefaultErrorHandler 0001                            ?_UART2_rx_vect_isr 0001  
                     __end_of_TMR2_Initialize 3E0E                                  ?_UART2_Write 0001  
                                      ??_main 0076                                        ??_dtoa 002D  
                                      ??_once 0008                                __CFG_PR1WAY$ON 000000  
                    _TMR5_SetInterruptHandler 3F86                                        ??_stoa 0015  
                               __activetblptr 000003          __size_of_UART1_SetTxInterruptHandler 0014  
                         ??_UART2_rx_vect_isr 0001                           eaDogM_WriteString@i 000C  
                   __end_of_UART1_tx_vect_isr 3CB4          __size_of_UART2_SetRxInterruptHandler 0014  
                              __CFG_MVECEN$ON 000000                               _TMR6_Initialize 3B9C  
                             _PWM8_Initialize 3E92                   __end_of_UART2_RxDataHandler 3D68  
                            _UART1_Initialize 2F88                             _UART2_tx_vect_isr 3CFC  
                          _UART2_Transmit_ISR 3B3A                                        _ADACCU 003EEA  
                                      _ADACQH 003EF4                                        _ADACQL 003EF3  
                                      _ADCON0 003EF8                                        _ADCON1 003EF9  
                                      _ADCON2 003EFA                                        _ADCON3 003EFB  
                                      ?_fputc 0008                                        _ADLTHH 003EDF  
                                      _ADLTHL 003EDE                                        ?_fputs 0011  
                                      _ADRESH 003EF0                                        _ADRESL 003EEF  
                                      _ADPREH 003EF7                                        _ADPREL 003EF6  
                                      _ADSTAT 003EFC                                        _ADUTHH 003EE1  
                            ___awdiv@dividend 0006                                        _ADUTHL 003EE0  
                          _PWM8_LoadDutyValue 3A32                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _ANSELD 003A70  
                                      _ANSELE 003A80                            ?_UART2_tx_vect_isr 0001  
                              TimerDone@timer 0008                                        _RB1I2C 003A5A  
                                      _RB2I2C 003A5B                                        _RD0I2C 003A7A  
                                      _U1CON0 003DF2                                        _U1CON1 003DF3  
                                      _U1CON2 003DF4                                        _RC3I2C 003A6A  
                                      _RD1I2C 003A7B                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _U2CON0 003DDA                                        _U2CON1 003DDB  
                                      _U1BRGL 003DF5                                        _U2CON2 003DDC  
                                      _U2BRGH 003DDE                                        _U2FIFO 003DDF  
                                      _U2BRGL 003DDD                                        _T5GATE 003F9C  
                         __size_of_UART2_Read 0044                                        _T5GCON 003F9B  
                                      _RC3PPS 003A13                                        _RD1PPS 003A19  
                                      _RB6PPS 003A0E                                        _RC5PPS 003A15  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                        _RC6PPS 003A16  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                              __CFG_WDTCCS$SC 000000                                        i2l4122 3988  
                                      i2l4114 34D0                                        i2l4126 39B6  
                                      i2l4062 3B30                                        i2l4082 3432  
                                      i2l4094 3B62                                        i2l3674 3CF6  
                                      i2l3694 3D62                                        _FVRCON 003EC1  
                               ?_init_display 0001                                        _IVTADH 00389E  
                                      _IVTADL 00389D                                        _IVTADU 00389F  
                __size_of_eaDogM_WriteCommand 000A                                        _OSCFRQ 0039DF  
                         ?_UART2_Transmit_ISR 0001                               ??_led_lightshow 0010  
                       _UART1_SetErrorHandler 3F5E                    ??_ADCC_GetConversionResult 0008  
                       SPI1_Exchange8bit@data 0006                           ?_PWM8_LoadDutyValue 0006  
                         ??_UART2_tx_vect_isr 0001                     __end_of_UART2_rx_vect_isr 3D44  
                  __size_of_SPI1_Exchange8bit 001A                                __CFG_XINST$OFF 000000  
                            _UART2_Initialize 30F4                                        _WaitMs 3BCA  
                                _CCPTMRS1bits 003F5F                     _UART2_OverrunErrorHandler 014B  
                                vfprintf@cfmt 0055                           _uart2RxStatusBuffer 010E  
          __size_of_UART2_DefaultErrorHandler 0006                                     ??___aodiv 0016  
                                   ??___aomod 0016                                     ??___awdiv 000A  
                              __CFG_STVREN$ON 000000                    ?_UART2_DefaultErrorHandler 0001  
                        send_lcd_cmd_long@cmd 000A                                        clear_0 35A2  
                                      clear_1 35AE                           UART2_Read@readValue 0006  
                            ___awdiv@quotient 000C                          ??_UART2_Transmit_ISR 0001  
                                      _printf 3E2A                                        pad@buf 001A  
                          _eaDogM_WriteString 3638                                        _sounds 019B  
                                      dtoa@fp 0023                                        _strlen 3756  
                          __size_of_TimerDone 0024                       __end_of_Digital232_init 2F88  
                        ??_PWM8_LoadDutyValue 0008                               _ADCC_Initialize 369E  
                                      fputc@c 0008                                _PMD_Initialize 3DAE  
                                      fputs@c 0015                                        fputs@i 0016  
                                      fputs@s 0011                     __end_of_UART2_tx_vect_isr 3D20  
                                __mediumconst 0000                                        tblptrh 003FF7  
                                      tblptrl 003FF6                                        tblptru 003FF8  
                      ??_ADCC_StartConversion 0006                           ?_eaDogM_WriteString 000A  
                            __end_of_wdtdelay 39FA                                        stoa@cp 0021  
                                      stoa@fp 0011                              __end_of_vfprintf 3756  
                               wdtdelay@delay 0006                                    _StartTimer 3AD6  
    TMR5_SetInterruptHandler@InterruptHandler 0006      TMR6_SetInterruptHandler@InterruptHandler 0006  
 UART2_SetTxInterruptHandler@InterruptHandler 0006   UART2_SetRxInterruptHandler@InterruptHandler 0006  
 UART1_SetTxInterruptHandler@InterruptHandler 0006   UART1_SetRxInterruptHandler@InterruptHandler 0006  
        __end_of_UART1_SetOverrunErrorHandler 3F4A         __size_of_UART1_SetOverrunErrorHandler 0014  
                _UART1_SetOverrunErrorHandler 3F36                     _UART1_DefaultErrorHandler 3FEE  
                                   ??_sprintf 0056                                     ??_work_sw 0056  
               __size_of_INTERRUPT_Initialize 0048                                ??_init_display 000B  
                __size_of_UART1_RxDataHandler 0024                       __end_of_TMR5_Initialize 37F2  
                           _SYSTEM_Initialize 3A6A                                    __accesstop 0060  
                     __end_of__initialization 35CA                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                    __size_of_UART1_rx_vect_isr 0024  
                             _TMR5_WriteTimer 3D68                          ??_eaDogM_WriteString 000C  
                              __pcstackCOMRAM 0001                         _UART2_SetErrorHandler 3EFA  
                                __pidataBANK0 3FFA                                  __pidataBANK1 3B6C  
                         ??_SYSTEM_Initialize 000B                                     ?_TMR5_ISR 0001  
                                   ?_TMR6_ISR 0001                                ivt0x8_undefint 00AC  
                               __end_of_fputc 3250                                 __end_of_fputs 3946  
                           ??_SPI1_Initialize 0006             __end_of_UART2_DefaultErrorHandler 3FFA  
                       __end_of_TMR5_CallBack 3DF2                                 __end_of_putch 3FE0  
                            ?_TMR2_Initialize 0001                       __end_of_PWM8_Initialize 3EAA  
                     __end_of_TMR6_Initialize 3BCA                        __end_of_PMD_Initialize 3DD0  
                  __size_of_UART1_tx_vect_isr 0024                     _UART1_FramingErrorHandler 0157  
                 ADCC_StartConversion@channel 0006                      _UART2_RxInterruptHandler 0163  
                                     ??_fputc 000C                     __end_of_SYSTEM_Initialize 3AA0  
                                     ??_fputs 0015                               __CFG_IVT1WAY$ON 000000  
                                     ??_putch 0007                                    __pbssBANK0 0092  
                                  __pbssBANK1 0100                 ?_UART1_SetOverrunErrorHandler 0006  
                      ?_UART1_SetErrorHandler 0006                             __end_of_TimerDone 3C90  
                ?_UART2_SetTxInterruptHandler 0006                    __size_of_UART2_rx_vect_isr 0024  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                              ??_FVR_Initialize 0006  
                                     ?_WaitMs 000B                                  ??_UART2_Read 0006  
                             __CFG_PPS1WAY$ON 000000              __end_of_TMR6_SetInterruptHandler 3F86  
        __end_of_UART2_SetFramingErrorHandler 3EFA         __size_of_UART2_SetFramingErrorHandler 0014  
                _UART2_SetFramingErrorHandler 3EE6                       __end_of_ADCC_Initialize 36FA  
                               ?_send_lcd_cmd 0001                                    ??_TMR5_ISR 0006  
                                  ??_TMR6_ISR 0004                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                                       ?_printf 0064  
                             ?_PMD_Initialize 0001                             _UART1_Receive_ISR 339A  
                                     ?_strlen 0006                               StartTimer@count 0006  
                                     _U1ERRIE 003DFA                                       _U1ERRIR 003DF9  
                                     _U2ERRIE 003DE2                                       _U2ERRIR 003DE1  
                             StartTimer@timer 000A                              ?_Digital232_init 0001  
                         __CFG_PWRTS$PWRT_OFF 000000                                  ?_Default_ISR 0001  
                          ?_UART1_Receive_ISR 0001                    __size_of_UART2_tx_vect_isr 0024  
                        __size_of_UART2_Write 0042                                       _U1RXPPS 003AE5  
                                     _U2RXPPS 003AE8                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                                       _IVTLOCK 003FD4  
                          __size_of_vfpfcnvrt 01FE                                       _SPI1CLK 003D1C  
                                     _SPI1RXB 003D10                                       _SPI1TXB 003D11  
                                     _OSCTUNE 0039DE                                       _PWM8DCH 003F61  
                                     _PWM8DCL 003F60                                       _PWM8CON 003F62  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                __size_of_ADCC_IsConversionDone 000E  
                                 ?_StartTimer 0006                 __end_of_ADCC_IsConversionDone 3FCC  
                         ??_UART1_Receive_ISR 0001                       __end_of_TMR5_WriteTimer 3D8C  
                          __end_of_UART2_Read 38C6                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0006                                       __Hparam 0000  
                      ?_UART2_SetErrorHandler 0006                                       __Lparam 0000  
                    __end_of_UART1_Initialize 3042                 ??_UART2_SetTxInterruptHandler 0009  
                  ??_TMR5_SetInterruptHandler 0009                               __size_of_WaitMs 002C  
                              ??_send_lcd_cmd 000A                                       ___aodiv 2B2A  
                                     ___aomod 2C82                                       ___awdiv 34D6  
                                   ?_wdtdelay 0006                     __end_of_UART1_Receive_ISR 3438  
                                   ?_vfprintf 0060                                  __psmallconst 2000  
               ?_UART2_SetFramingErrorHandler 0006                          __end_of_init_display 3638  
                                     __pcinit 355E                           _eaDogM_WriteCommand 3FCC  
                            ?_PWM8_Initialize 0001                              ?_TMR6_Initialize 0001  
                                     __ramtop 2000                   __size_of_UART1_Transmit_ISR 0032  
                                     __ptext0 2300                                       __ptext1 32FC  
                                     __ptext2 37F2                                       __ptext3 3D8C  
                                     __ptext4 3638                                       __ptext5 3BF6  
                                     __ptext6 2DB6                                       __ptext7 34D6  
                                     __ptext8 35D0                                       __ptext9 3C48  
                           _UART2_Receive_ISR 3438                               __size_of_printf 001C  
                             __CFG_WRTAPP$OFF 000000                               __size_of_strlen 0050  
    __end_of_UART2_DefaultOverrunErrorHandler 4004     __size_of_UART2_DefaultOverrunErrorHandler 0002  
          ??_UART2_DefaultOverrunErrorHandler 0001             ?_UART2_DefaultOverrunErrorHandler 0001  
            _UART2_DefaultOverrunErrorHandler 4002                         _OSCILLATOR_Initialize 3E0E  
                                __size_of_abs 003E                        __size_of_Digital232_RW 0232  
                                __size_of_pad 00B2                            ?_UART2_Receive_ISR 0001  
                    ??_PIN_MANAGER_Initialize 0006                               __CFG_WRTSAF$OFF 000000  
                                   _T5CONbits 003F9A                      __end_of_UART2_Initialize 31A2  
                  __size_of_SYSTEM_Initialize 0036                                       _sprintf 37F2  
                          led_lightshow@cylon 009F                          end_of_initialization 35CA  
                                     _work_sw 32FC                           ??_UART2_Receive_ISR 0001  
                          led_lightshow@speed 000E                          ?_eaDogM_WriteCommand 0001  
                                     fputc@fp 000A           __end_of_UART1_SetTxInterruptHandler 3F22  
                 _UART1_SetTxInterruptHandler 3F0E                                       fputs@fp 0013  
         __end_of_UART2_SetRxInterruptHandler 3ED2                   _UART2_SetRxInterruptHandler 3EBE  
              ??_UART1_SetOverrunErrorHandler 0009                             __end_of_vfpfcnvrt 29B6  
                                   _SPI1TCNTL 003D12                                       postdec1 003FE5  
                                     postdec2 003FDD                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                                  ??_wdtdelay 000A                              ?_ADCC_Initialize 0001  
                 ??_UART2_DefaultErrorHandler 0001                           __size_of_StartTimer 0032  
                                  ??_vfprintf 0055                     __end_of_UART2_Receive_ISR 34D6  
                              wdtdelay@dcount 013E                           _UART1_RxDataHandler 3CD8  
                       __CFG_WDTCPS$WDTCPS_31 000000                                       strlen@a 0008  
                                     strlen@s 0006                      _TMR6_SetInterruptHandler 3F72  
                       _TMR5_InterruptHandler 0142          __size_of_UART2_SetTxInterruptHandler 0014  
                       WaitMs@numMilliseconds 000B                      ?_eaDogM_WriteStringAtPos 000E  
                            __CFG_FEXTOSC$ECH 000000                          ?_UART1_RxDataHandler 0001  
                            ?_TMR5_WriteTimer 0004                         ??_eaDogM_WriteCommand 000B  
                     TMR5_WriteTimer@timerVal 0004                  __size_of_UART2_RxDataHandler 0024  
                                  main@buffer 0078                               _SPI1_Initialize 3E7A  
                               _Digital232_RW 2586                         __end_of_led_lightshow 2EA0  
                              led_lightshow@j 016A                                __end_of_WaitMs 3BF6  
                __end_of_INTERRUPT_Initialize 3882                    __size_of_UART1_Receive_ISR 009E  
                                 vfpfcnvrt@ap 004A                                   vfpfcnvrt@cp 0053  
                                 vfpfcnvrt@fp 0047                                   vfpfcnvrt@ll 004B  
                           __size_of_TMR5_ISR 0036                             __size_of_TMR6_ISR 0028  
                 __size_of_UART2_Transmit_ISR 0032                        ?_OSCILLATOR_Initialize 0001  
           __size_of_ADCC_GetConversionResult 0014                     ?_ADCC_GetConversionResult 0006  
                              __end_of_printf 3E46                   __size_of_PWM8_LoadDutyValue 0038  
                              __end_of_strlen 37A6                ??_UART2_SetFramingErrorHandler 0009  
                         start_initialization 355E          __end_of_TMR5_DefaultInterruptHandler 3E7A  
       __size_of_TMR5_DefaultInterruptHandler 001A                  _TMR5_DefaultInterruptHandler 3E60  
             __size_of_PIN_MANAGER_Initialize 00AC                                   __end_of_abs 3984  
                                 __end_of_pad 30F4                          __size_of_Default_ISR 0002  
                     ??_UART1_SetErrorHandler 0009                     _UART2_DefaultErrorHandler 3FF4  
                        __end_of_send_lcd_cmd 3A32                         ??_UART1_RxDataHandler 0001  
               __size_of_ADCC_StartConversion 0010                                   putch@txData 0007  
                                  ivt0x8_base 0008                                 _uart1RxBuffer 012E  
                               _uart1TxBuffer 0136                                 _uart2RxBuffer 0116  
                              ?_Digital232_RW 0001                                 _uart2TxBuffer 011E  
                            __CFG_LPBOREN$OFF 000000                                      ??_WaitMs 000D  
                       __size_of_init_display 0068                                   vfprintf@fmt 0062  
                 __size_of_eaDogM_WriteString 0066                              ??_PMD_Initialize 0006  
                                   _TimerDone 3C6C                                   __pdataBANK0 009E  
                                 __pdataBANK1 0194                    __size_of_UART2_Receive_ISR 009E  
                           UART2_Write@txData 0006                                      ??_printf 0056  
                                    ??_strlen 0008               __end_of_eaDogM_WriteStringAtPos 3DAE  
                                 __pbssCOMRAM 0056                            _UART1_ErrorHandler 0151  
                   _UART2_FramingErrorHandler 014E                                 __pcstackBANK0 0060  
                               __pcstackBANK2 0200                              ___aodiv@dividend 0006  
                    __size_of_TMR2_Initialize 001C                                  ??_StartTimer 0008  
                     __end_of_SPI1_Initialize 3E92                      _UART1_RxInterruptHandler 015D  
                    _UART2_TxInterruptHandler 0160                 ?_TMR5_DefaultInterruptHandler 0001  
                              Digital232_RW@i 006C                                Digital232_RW@j 006D  
                              Digital232_RW@x 0096                                  _init_display 35D0  
                      __size_of_TMR5_CallBack 0022                   PWM8_LoadDutyValue@dutyValue 0006  
                     ??_UART2_SetErrorHandler 0009                  ?_UART1_SetRxInterruptHandler 0006  
                       _TMR6_InterruptHandler 0145                        _PIN_MANAGER_Initialize 3250  
                                   _dtoa$2649 0035                             ?_UART1_Initialize 0001  
        __end_of_UART1_SetFramingErrorHandler 3F5E         __size_of_UART1_SetFramingErrorHandler 0014  
                _UART1_SetFramingErrorHandler 3F4A                                    ?_TimerDone 0001  
                                    ?___aodiv 0006                                      ?___aomod 0006  
                                    ?___awdiv 0006                              ___aodiv@quotient 0018  
                          ??_UART1_Initialize 0009                            __end_of_StartTimer 3B08  
                            _uart1RxLastError 0171                                 ??_UART2_Write 0006  
                           __size_of_wdtdelay 003A                             __size_of_vfprintf 005C  
                      __CFG_BBSIZE$BBSIZE_512 000000                                   __smallconst 2000  
    __end_of_UART1_DefaultOverrunErrorHandler 4000     __size_of_UART1_DefaultOverrunErrorHandler 0002  
          ??_UART1_DefaultOverrunErrorHandler 0001             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler 3FFE                             ?_UART2_Initialize 0001  
                                    ?_sprintf 0064                                __size_of_fputc 00AE  
                                    _T2CLKCON 003FAE                                __size_of_fputs 003E  
                                 _U1ERRIRbits 003DF9                                      ?_work_sw 0001  
                          ??_UART2_Initialize 0009                                __size_of_putch 000A  
                    __size_of_Digital232_init 00E8                          _INTERRUPT_Initialize 383A  
                                    _T6CLKCON 003F96                               ??_Digital232_RW 006A  
                            _uart2RxLastError 0170                         _ADCC_IsConversionDone 3FBE  
                                 _U2ERRIRbits 003DE1         UART2_SetErrorHandler@interruptHandler 0006  
       UART1_SetErrorHandler@interruptHandler 0006                                      _LATCbits 003FBC  
                                    _LATEbits 003FBE                                      _IPR3bits 003983  
                                    _PIE3bits 003993                                     _tickCount 0100  
                                    _IPR6bits 003986                                      _IPR8bits 003988  
                                    _PIE6bits 003996                                      _IPR9bits 003989  
                                    _PIE8bits 003998                           __CFG_BORV$VBOR_2P45 000000  
                                    _PIE9bits 003999                 ??_UART1_SetRxInterruptHandler 0009  
                                    i2u300_48 3D0C                                      i2u302_48 3D30  
                                    i2u305_40 3AC6                                      i2u304_48 3C34  
                                    i2u235_40 3E68                                      i2u250_48 33F2  
                                    i2u250_49 3406                                      i2u235_46 3E6A  
                                    i2u260_48 34BA                                      i2u252_48 341C  
                                    i2u256_48 3462                                      i2u248_48 33C4  
                                    i2u256_49 3476                                      i2u248_49 33D8  
                                    i2u265_48 3DDE                                      i2u258_48 3490  
                                    i2u258_49 34A4                                      _PIR2bits 0039A2  
                                    _SPI1BAUD 003D19                                      _PIR4bits 0039A4  
                                    _SPI1CON0 003D14                                      _SPI1CON1 003D15  
                                    _SPI1CON2 003D16                                      i2u296_48 3CA0  
                                    i2u298_48 3CC4                                      _PIR8bits 0039A8  
                                    _PIR9bits 0039A9                    ??_TMR6_SetInterruptHandler 0009  
                    __size_of_TMR5_Initialize 004C                    __end_of_UART1_Transmit_ISR 3B3A  
                                    _TMR5_ISR 3AA0                                      _TMR6_ISR 3C20  
               ?_UART1_SetFramingErrorHandler 0006                                     _vfpfcnvrt 27B8  
                               _TMR5_CallBack 3DD0                           _UART2_RxDataHandler 3D44  
                                  _ADCON0bits 003EF8                       __size_of_FVR_Initialize 0008  
                       __size_of_send_lcd_cmd 0038             __size_of_TMR5_SetInterruptHandler 0014  
                   ?_TMR5_SetInterruptHandler 0006                            _UART2_ErrorHandler 0148  
                         __end_of_UART2_Write 3908                      __size_of_PWM8_Initialize 0018  
                    __size_of_TMR6_Initialize 002E                              ?_SPI1_Initialize 0001  
                                 _INTCON0bits 003FD2                                     copy_data0 3572  
                       ?_INTERRUPT_Initialize 0001                          ?_UART2_RxDataHandler 0001  
                      _uart1TxBufferRemaining 009B                             ??_TMR2_Initialize 0006  
              ??_TMR5_DefaultInterruptHandler 0004           __end_of_UART2_SetTxInterruptHandler 3EBE  
                 _UART2_SetTxInterruptHandler 3EAA                                  _uart1RxCount 0172  
                                _uart2RxCount 0097                                      __Hrparam 0000  
            __size_of_eaDogM_WriteStringAtPos 0022              __end_of_ADCC_GetConversionResult 3FAE  
                     __CFG_RSTOSC$EXTOSC_4PLL 000000                                    vfprintf@ap 0063  
                                    __Lrparam 0000                                    vfprintf@fp 0060  
                          __CFG_BOREN$SBORDIS 000000                                   ??_TimerDone 0006  
                     ??_OSCILLATOR_Initialize 0006                                  _send_lcd_cmd 39FA  
                            __size_of___aodiv 0158                              __size_of___aomod 0134  
                            __size_of___awdiv 0088                                ?_TMR5_CallBack 0001  
                                  ?_vfpfcnvrt 0047                               ___aodiv@divisor 000E  
                             ___aodiv@counter 0016          __size_of_UART1_SetRxInterruptHandler 0014  
                                  sprintf@fmt 0066                      __size_of_ADCC_Initialize 005C  
                 __end_of_eaDogM_WriteCommand 3FD6                                      __pivt0x8 0008  
                                    __ptext10 3FCC                                      __ptext11 39FA  
                                    __ptext20 3EFA                                      __ptext12 39C0  
                                    __ptext21 2F88                                      __ptext13 3E46  
                                    __ptext30 3F86                                      __ptext22 3F0E  
                                    __ptext14 3A6A                                      __ptext31 3DF2  
                                    __ptext23 3F22                                      __ptext15 30F4  
                                    __ptext40 2EA0                                      __ptext32 3E7A  
                                    __ptext24 3F36                                      __ptext16 3EAA  
                                    __ptext41 3BCA                                      __ptext33 3E92  
                                    __ptext25 3F4A                                      __ptext17 3EBE  
                                    __ptext50 3908                                      __ptext42 2586  
                                    __ptext34 3DAE                                      __ptext26 3F5E  
                                    __ptext18 3ED2                                      __ptext51 31A2  
                                    __ptext43 3E2A                                      __ptext35 3250  
                                    __ptext27 3B9C                                      __ptext19 3EE6  
                                    __ptext60 3AD6                                      __ptext52 3FD6  
                                    __ptext44 36FA                                      __ptext36 3E0E  
                                    __ptext28 3F72                                      __ptext61 3A32  
                                    __ptext53 38C6                                      __ptext45 27B8  
                                    __ptext37 383A                                      __ptext29 37A6  
                                    __ptext70 3FFE                                      __ptext62 3FAE  
                                    __ptext54 3946                                      __ptext46 29B6  
                                    __ptext38 3FE0                                      __ptext71 4000  
                                    __ptext63 3FBE                                      __ptext55 2C82  
                                    __ptext47 2054                                      __ptext39 369E  
                                    __ptext80 3FF4                                      __ptext72 3FEE  
                                    __ptext64 3F9A                                      __ptext56 2B2A  
                                    __ptext48 3042                                      __ptext81 3D44  
                                    __ptext73 3CD8                                      __ptext65 3FFC  
                                    __ptext57 3FE8                                      __ptext49 3756  
                                    __ptext82 3C20                                      __ptext74 3CFC  
                                    __ptext66 3C90                                      __ptext58 3882  
                                    __ptext83 3984                                      __ptext75 3B3A  
                                    __ptext67 3B08                                      __ptext59 3C6C  
                                    __ptext84 3AA0                                      __ptext76 3D20  
                                    __ptext68 3CB4                                      __ptext85 3D68  
                                    __ptext77 3438                                      __ptext69 339A  
                                    __ptext86 3DD0                                      __ptext78 4002  
                                    __ptext87 3E60                                      __ptext79 4004  
                                    __ptext88 0000                        ?_ADCC_IsConversionDone 0001  
              __size_of_UART1_SetErrorHandler 0014                 TMR6_DefaultInterruptHandler@i 0003  
               __end_of_UART1_SetErrorHandler 3F72                              __size_of_sprintf 0048  
                       ??_UART2_RxDataHandler 0001                              __size_of_work_sw 009E  
                         led_lightshow@LED_UP 009E                                 __size_of_main 0286  
                               __size_of_dtoa 02AC                                 __size_of_once 002A  
                               __size_of_stoa 0174      __end_of_UART2_DefaultFramingErrorHandler 4006  
   __size_of_UART2_DefaultFramingErrorHandler 0002            ??_UART2_DefaultFramingErrorHandler 0001  
           ?_UART2_DefaultFramingErrorHandler 0001              _UART2_DefaultFramingErrorHandler 4004  
                        __CFG_WDTCWS$WDTCWS_7 000000                                   _IVTLOCKbits 003FD4  
                           ??_Digital232_init 0056                      __size_of_TMR5_WriteTimer 0024  
                   _UART1_OverrunErrorHandler 0154                                     stoa@F1139 0194  
UART2_SetOverrunErrorHandler@interruptHandler 0006  UART1_SetOverrunErrorHandler@interruptHandler 0006  
          __size_of_UART1_DefaultErrorHandler 0006                  __end_of_ADCC_StartConversion 3FBE  
                  ?_UART1_DefaultErrorHandler 0001                                      _wdtdelay 39C0  
                  __end_of_UART2_Transmit_ISR 3B6C                                      _vfprintf 36FA  
                                   printf@fmt 0064                    __end_of_PWM8_LoadDutyValue 3A6A  
                                    _switches 019D                                   _UART2_Write 38C6  
                           ??_TMR5_Initialize 0009                              ___aomod@dividend 0006  
                               ??_Default_ISR 0001                ??_UART1_SetFramingErrorHandler 0009  
                 __end_of_UART1_RxDataHandler 3CFC                                   _uart1RxHead 005A  
                                 _uart1TxHead 009D                                   _uart2RxHead 0059  
                                 _uart1RxTail 0173                                   _uart2TxHead 009A  
                                 _uart1TxTail 009C                                   _uart2RxTail 0058  
                      __size_of_led_lightshow 00EA                                   _uart2TxTail 0099  
                      ??_INTERRUPT_Initialize 0006          __end_of_TMR6_DefaultInterruptHandler 39C0  
       __size_of_TMR6_DefaultInterruptHandler 003C                  _TMR6_DefaultInterruptHandler 3984  
        __end_of_UART2_SetOverrunErrorHandler 3EE6         __size_of_UART2_SetOverrunErrorHandler 0014  
                _UART2_SetOverrunErrorHandler 3ED2                                      intlevel2 0000  
                                   sprintf@ap 006F                             _send_lcd_cmd_long 3C48  
                     ?_PIN_MANAGER_Initialize 0001                             ??_TMR6_Initialize 0009  
                           ??_PWM8_Initialize 0006                             __CFG_CLKOUTEN$OFF 000000  
                          ?_send_lcd_cmd_long 0001                    __end_of_eaDogM_WriteString 369E  
              __size_of_UART2_SetErrorHandler 0014                 __end_of_UART2_SetErrorHandler 3F0E  
                         _uart1RxStatusBuffer 0126                                    _SPI1SCKPPS 003ADE  
                                  _SPI1SDIPPS 003ADF                               ??_TMR5_CallBack 0005  
                         ??_send_lcd_cmd_long 000A                                      printf@ap 0069  
                      eaDogM_WriteCommand@cmd 000B                                    _UART2_Read 3882  
UART2_SetFramingErrorHandler@interruptHandler 0006  UART1_SetFramingErrorHandler@interruptHandler 0006  
                    _ADCC_GetConversionResult 3F9A             __end_of_UART1_DefaultErrorHandler 3FF4  
                             ___aomod@divisor 000E                                   ??_vfpfcnvrt 004B  
                                    stoa@nuls 0016                               ___aomod@counter 0016  
                           _UART2_is_rx_ready 3FE8                        _uart2TxBufferRemaining 0098  
                              _FVR_Initialize 3FE0                                      sprintf@f 0070  
                                    sprintf@s 0064                            ?_UART2_is_rx_ready 0001  
                       TMR5_ISR@CountCallBack 016C                     __size_of_UART1_Initialize 00BA  
                    _UART1_TxInterruptHandler 015A                           ??_UART2_is_rx_ready 0006  
                   __end_of_send_lcd_cmd_long 3C6C                           __end_of_Default_ISR 3FFE  
                                ___aodiv@sign 0017                __end_of_PIN_MANAGER_Initialize 32FC  
                           ??_ADCC_Initialize 0006                 ?_TMR6_DefaultInterruptHandler 0001  
               ?_UART2_SetOverrunErrorHandler 0006                  ?_UART1_SetTxInterruptHandler 0006  
                     _eaDogM_WriteStringAtPos 3D8C                  ?_UART2_SetRxInterruptHandler 0006  
                                ___aomod@sign 0017                                 once@once_flag 0006  
                               _led_lightshow 2DB6                     __size_of_UART2_Initialize 00AE  
