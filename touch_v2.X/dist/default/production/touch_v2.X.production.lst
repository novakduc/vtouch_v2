

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Dec  5 16:20:19 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=4,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=4,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=4,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=4,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=4,class=CODE,delta=1
   166                           	psect	text142,global,reloc=4,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=4,class=CODE,delta=1
   171                           	psect	text147,global,reloc=4,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=4,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=4,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=4,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=4,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=4,class=CODE,delta=1
   183                           	psect	text159,global,reloc=4,class=CODE,delta=1
   184                           	psect	text160,global,reloc=4,class=CODE,delta=1
   185                           	psect	text161,global,reloc=4,class=CODE,delta=1
   186                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   187                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   188                           	psect	text162,global,reloc=4,class=CODE,delta=1
   189                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   190                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   191  0000                     
   192                           ; Version 2.10
   193                           ; Generated 31/07/2019 GMT
   194                           ; 
   195                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   196                           ; All rights reserved.
   197                           ; 
   198                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   199                           ; 
   200                           ; Redistribution and use in source and binary forms, with or without modification, are
   201                           ; permitted provided that the following conditions are met:
   202                           ; 
   203                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   204                           ;        conditions and the following disclaimer.
   205                           ; 
   206                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   207                           ;        of conditions and the following disclaimer in the documentation and/or other
   208                           ;        materials provided with the distribution.
   209                           ; 
   210                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   211                           ;        software without specific prior written permission.
   212                           ; 
   213                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   214                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   215                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   216                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   217                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   218                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   219                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   220                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   221                           ; 
   222                           ; 
   223                           ; Code-generator required, PIC18F57K42 Definitions
   224                           ; 
   225                           ; SFR Addresses
   226  0000                     
   227 ;;_k	offset	0
   228 ;;_j	offset	1
   229 ;;_i	offset	2
   230 ;;_inp_index	offset	3
   231 ;;_mode	offset	4
   232 ;;_channel	offset=-1 (param)
   233 ;;_s	offset=-2 (param)
   234 ;;_cmd	offset=-1 (param)
   235 ;;_cmd	offset=-1 (param)
   236 ;;_data	offset=-1 (param)
   237 ;;__this	offset=-2 (param)
   238 ;;_h	offset=-1 (param)
   239 ;;_h	offset=-1 (param)
   240 ;;_i	offset=-1 (param)
   241 ;;_cmd	offset=-1 (param)
   242 ;;_i	offset	0
   243 ;;_chan	offset=-1 (param)
   244 ;;_to_what	offset=-2 (param)
   245 ;;_u	offset	0
   246 ;;_s	offset=-2 (param)
   247 ;;_index	offset=-1 (param)
   248 ;;_arg	offset	0
   249 ;;_exp	offset	4
   250 ;;_sign	offset=-1 (param)
   251 ;;_val	offset=-5 (param)
   252 ;;_h	offset=-1 (param)
   253 ;;_flipper	offset=-1 (param)
   254 ;;_f	offset	0
   255 ;;_ap	offset	6
   256 ;;_s	offset=-3 (param)
   257 ;;_fmt	offset=-5 (param)
   258 ;;_line	offset=-1 (param)
   259 ;;_vterm	offset=-2 (param)
   260 ;;_numMilliseconds	offset=-2 (param)
   261 ;;_vterm	offset=-1 (param)
   262 ;;_r	offset=-1 (param)
   263 ;;_c	offset=-2 (param)
   264 ;;_strPtr	offset=-4 (param)
   265 ;;_strPtr	offset=-1 (param)
   266 ;;_delay	offset=-4 (param)
   267 ;;_strPtr	offset=-2 (param)
   268 ;;__this	offset=-2 (param)
   269 ;;_clearBuffer	offset=-3 (param)
   270 ;;_s	offset	0
   271 ;;_k	offset	2
   272 ;;_dest	offset=-2 (param)
   273 ;;_c	offset=-4 (param)
   274 ;;_n	offset=-6 (param)
   275 ;;_ap	offset	0
   276 ;;_fmt	offset=-3 (param)
   277 ;;_cfmt	offset	0
   278 ;;_fp	offset=-2 (param)
   279 ;;_fmt	offset=-4 (param)
   280 ;;_ap	offset=-6 (param)
   281 ;;_vfpfcnvrt$5036	offset	0
   282 ;;_vfpfcnvrt$5042	offset	2
   283 ;;_vfpfcnvrt$5035	offset	4
   284 ;;_llu	offset	6
   285 ;;_ll	offset	14
   286 ;;_f	offset	22
   287 ;;_ct	offset	26
   288 ;;_cp	offset	29
   289 ;;_c	offset	31
   290 ;;_fp	offset=-2 (param)
   291 ;;_fmt	offset=-4 (param)
   292 ;;_ap	offset=-6 (param)
   293 ;;_xtoa$5021	offset	0
   294 ;;_xtoa$5020	offset	2
   295 ;;_n	offset	4
   296 ;;_c	offset	12
   297 ;;_i	offset	14
   298 ;;_w	offset	16
   299 ;;_p	offset	18
   300 ;;_fp	offset=-2 (param)
   301 ;;_d	offset=-10 (param)
   302 ;;_x	offset=-11 (param)
   303 ;;_toupper$5681	offset	0
   304 ;;_c	offset=-2 (param)
   305 ;;_c	offset=-2 (param)
   306 ;;_c	offset=-2 (param)
   307 ;;_r	offset	0
   308 ;;_l	offset	2
   309 ;;__l	offset=-2 (param)
   310 ;;__r	offset=-4 (param)
   311 ;;_n	offset=-6 (param)
   312 ;;_nuls	offset	0
   313 ;;_l	offset	7
   314 ;;_p	offset	9
   315 ;;_cp	offset	11
   316 ;;_w	offset	13
   317 ;;_i	offset	15
   318 ;;_fp	offset=-2 (param)
   319 ;;_s	offset=-4 (param)
   320 ;;_efgtoa$5000	offset	0
   321 ;;_efgtoa$4999	offset	2
   322 ;;_efgtoa$4998	offset	4
   323 ;;_efgtoa$4994	offset	6
   324 ;;_efgtoa$4990	offset	8
   325 ;;_efgtoa$4989	offset	10
   326 ;;_u	offset	12
   327 ;;_g	offset	16
   328 ;;_l	offset	20
   329 ;;_h	offset	24
   330 ;;_ou	offset	28
   331 ;;_n	offset	32
   332 ;;_e	offset	34
   333 ;;_i	offset	36
   334 ;;_w	offset	38
   335 ;;_p	offset	40
   336 ;;_sign	offset	42
   337 ;;_d	offset	44
   338 ;;_ne	offset	46
   339 ;;_m	offset	48
   340 ;;_pp	offset	50
   341 ;;_t	offset	52
   342 ;;_mode	offset	54
   343 ;;_nmode	offset	55
   344 ;;_fp	offset=-2 (param)
   345 ;;_f	offset=-6 (param)
   346 ;;_c	offset=-7 (param)
   347 ;;_tolower$5666	offset	0
   348 ;;_c	offset=-2 (param)
   349 ;;_c	offset=-2 (param)
   350 ;;_d	offset	0
   351 ;;_s	offset	2
   352 ;;_dest	offset=-2 (param)
   353 ;;_src	offset=-4 (param)
   354 ;;_u	offset	0
   355 ;;_m	offset	4
   356 ;;_e	offset	8
   357 ;;_x	offset=-4 (param)
   358 ;;_u	offset	0
   359 ;;_e	offset	4
   360 ;;_x	offset=-4 (param)
   361 ;;_exp1	offset	0
   362 ;;_sign1	offset	1
   363 ;;_f1	offset=-4 (param)
   364 ;;_f1	offset=-4 (param)
   365 ;;_ff1	offset=-4 (param)
   366 ;;_ff2	offset=-8 (param)
   367 ;;_ff1	offset=-4 (param)
   368 ;;_ff2	offset=-8 (param)
   369 ;;_grs	offset	0
   370 ;;_rem	offset	4
   371 ;;_new_exp	offset	8
   372 ;;_aexp	offset	10
   373 ;;_bexp	offset	11
   374 ;;_sign	offset	12
   375 ;;_b	offset=-4 (param)
   376 ;;_a	offset=-8 (param)
   377 ;;_sign	offset	0
   378 ;;_counter	offset	1
   379 ;;_dividend	offset=-2 (param)
   380 ;;_divisor	offset=-4 (param)
   381 ;;_quotient	offset	0
   382 ;;_sign	offset	2
   383 ;;_counter	offset	3
   384 ;;_dividend	offset=-2 (param)
   385 ;;_divisor	offset=-4 (param)
   386 ;;_dtoa$4966	offset	0
   387 ;;_n	offset	2
   388 ;;_i	offset	10
   389 ;;_s	offset	12
   390 ;;_w	offset	14
   391 ;;_p	offset	16
   392 ;;_fp	offset=-2 (param)
   393 ;;_d	offset=-10 (param)
   394 ;;_a	offset=-2 (param)
   395 ;;_sign	offset	0
   396 ;;_counter	offset	1
   397 ;;_dividend	offset=-8 (param)
   398 ;;_divisor	offset=-16 (param)
   399 ;;_quotient	offset	0
   400 ;;_sign	offset	8
   401 ;;_counter	offset	9
   402 ;;_dividend	offset=-8 (param)
   403 ;;_divisor	offset=-16 (param)
   404 ;;_w	offset	0
   405 ;;_fp	offset=-2 (param)
   406 ;;_c	offset=-3 (param)
   407 ;;_w	offset	0
   408 ;;_i	offset	2
   409 ;;_fp	offset=-2 (param)
   410 ;;_buf	offset=-4 (param)
   411 ;;_p	offset=-6 (param)
   412 ;;_a	offset	0
   413 ;;_s	offset=-2 (param)
   414 ;;_i	offset	0
   415 ;;_c	offset	2
   416 ;;_s	offset=-2 (param)
   417 ;;_fp	offset=-4 (param)
   418 ;;_c	offset=-2 (param)
   419 ;;_fp	offset=-4 (param)
   420 ;;_c	offset=-1 (param)
   421 ;;__this	offset=-2 (param)
   422 ;;_c	offset=-3 (param)
   423 ;;_atoi$5519	offset	0
   424 ;;_atoi$5517	offset	2
   425 ;;_atoi$5518	offset	4
   426 ;;_n	offset	5
   427 ;;_neg	offset	7
   428 ;;_s	offset=-2 (param)
   429 ;;_isspace$5557	offset	0
   430 ;;_c	offset=-2 (param)
   431 ;;_c	offset=-2 (param)
   432 ;;_vterm	offset=-1 (param)
   433 ;;_new_response_info	offset=-1 (param)
   434 ;;_new_response_info	offset=-1 (param)
   435 ;;_level	offset=-2 (param)
   436 ;;_dutyValue	offset=-2 (param)
   437 ;;_timer	offset=-1 (param)
   438 ;;_timer	offset=-1 (param)
   439 ;;_count	offset=-3 (param)
   440 ;;_h	offset=-1 (param)
   441 ;;_lp_speed	offset	0
   442 ;;_new	offset=-4 (param)
   443 ;;_bn	offset=-5 (param)
   444 ;;_slow	offset=-6 (param)
   445 ;;_b	offset=-4 (param)
   446 ;;_a	offset=-8 (param)
   447 ;;_grs	offset	0
   448 ;;_bexp	offset	1
   449 ;;_aexp	offset	2
   450 ;;_signs	offset	3
   451 ;;_b	offset=-4 (param)
   452 ;;_a	offset=-8 (param)
   453 ;;_prod	offset	0
   454 ;;_grs	offset	4
   455 ;;_temp	offset	8
   456 ;;_bexp	offset	10
   457 ;;_aexp	offset	11
   458 ;;_sign	offset	12
   459 ;;_b	offset=-4 (param)
   460 ;;_a	offset=-8 (param)
   461 ;;_InterruptHandler	offset=-3 (param)
   462 ;;_InterruptHandler	offset=-3 (param)
   463 ;;_InterruptHandler	offset=-3 (param)
   464 ;;_InterruptHandler	offset=-3 (param)
   465 ;;_InterruptHandler	offset=-3 (param)
   466 ;;_InterruptHandler	offset=-3 (param)
   467 ;;_InterruptHandler	offset=-3 (param)
   468 ;;_state	offset	0
   469 ;;_InterruptHandler	offset=-3 (param)
   470 ;;_InterruptHandler	offset=-3 (param)
   471 ;;_InterruptHandler	offset=-3 (param)
   472 ;;_InterruptHandler	offset=-3 (param)
   473 ;;_i	offset	0
   474 ;;_sw_value	offset	1
   475 ;;_timerVal	offset=-2 (param)
   476 ;;_timerVal	offset=-2 (param)
   477 ;;_ff1	offset=-4 (param)
   478 ;;_ff2	offset=-8 (param)
   479 ;;_grs	offset	0
   480 ;;_rem	offset	4
   481 ;;_new_exp	offset	8
   482 ;;_aexp	offset	10
   483 ;;_bexp	offset	11
   484 ;;_sign	offset	12
   485 ;;_b	offset=-4 (param)
   486 ;;_a	offset=-8 (param)
   487 ;;_grs	offset	0
   488 ;;_bexp	offset	1
   489 ;;_aexp	offset	2
   490 ;;_signs	offset	3
   491 ;;_b	offset=-4 (param)
   492 ;;_a	offset=-8 (param)
   493 ;;_channel	offset=-1 (param)
   494 ;;_i	offset	0
   495                           
   496                           	psect	idataBANK0
   497  018BB6                     __pidataBANK0:
   498                           	opt callstack 0
   499                           
   500                           ;initializer for _R
   501  018BB6  0000               	dw	0
   502  018BB8  0000               	dw	0
   503  018BBA  0000               	dw	0
   504  018BBC  0000               	dw	0
   505  018BBE  0000               	dw	0
   506  018BC0  0000               	dw	0
   507  018BC2  0000               	dw	0
   508  018BC4  0000               	dw	0
   509  018BC6  0000               	dw	0
   510  018BC8  0000               	dw	0
   511  018BCA  0000               	dw	0
   512  018BCC  0000               	dw	0
   513  018BCE  0000               	dw	0
   514  018BD0  0000               	dw	0
   515  018BD2  0000               	dw	0
   516  018BD4  0000               	dw	0
   517  018BD6  0F67               	dw	3943
   518  018BD8  0F8F               	dw	3983
   519  018BDA  00                 	db	0
   520  018BDB  0000               	dw	0
   521  018BDD  00                 	db	0
   522                           
   523                           ;initializer for stoa@F1166
   524  018BDE  28                 	db	40
   525  018BDF  6E                 	db	110
   526  018BE0  75                 	db	117
   527  018BE1  6C                 	db	108
   528  018BE2  6C                 	db	108
   529  018BE3  29                 	db	41
   530  018BE4  00                 	db	0
   531                           
   532                           ;initializer for _H
   533  018BE5  00                 	db	0
   534  018BE6  00                 	db	0
   535  018BE7  01                 	db	1
   536  018BE8  00                 	db	0
   537  018BE9  01                 	db	1
   538  018BEA  00                 	db	0
   539  018BEB  00                 	db	0
   540                           
   541                           	psect	idataBANK1
   542  017AD2                     __pidataBANK1:
   543                           	opt callstack 0
   544                           
   545                           ;initializer for _C
   546  017AD2  0000               	dw	0
   547  017AD4  0000               	dw	0
   548  017AD6  0000               	dw	0
   549  017AD8  0000               	dw	0
   550  017ADA  0000               	dw	0
   551  017ADC  0000               	dw	0
   552  017ADE  0000               	dw	0
   553  017AE0  0000               	dw	0
   554  017AE2  0000               	dw	0
   555  017AE4  0000               	dw	0
   556  017AE6  0000               	dw	0
   557  017AE8  0000               	dw	0
   558  017AEA  0000               	dw	0
   559  017AEC  0000               	dw	0
   560  017AEE  0000               	dw	0
   561  017AF0  0000               	dw	0
   562  017AF2  0000               	dw	0
   563  017AF4  0000               	dw	0
   564  017AF6  0000               	dw	0
   565  017AF8  0000               	dw	0
   566  017AFA  0000               	dw	0
   567  017AFC  0000               	dw	0
   568  017AFE  0000               	dw	0
   569  017B00  0000               	dw	0
   570  017B02  0000               	dw	0
   571  017B04  0000               	dw	0
   572  017B06  0000               	dw	0
   573  017B08  0000               	dw	0
   574  017B0A  0000               	dw	0
   575  017B0C  0000               	dw	0
   576  017B0E  0000               	dw	0
   577  017B10  0000               	dw	0
   578  017B12  0000               	dw	0
   579  017B14  0000               	dw	0
   580  017B16  0000               	dw	0
   581  017B18  0000               	dw	0
   582  017B1A  0000               	dw	0
   583  017B1C  0000               	dw	0
   584  017B1E  0000               	dw	0
   585  017B20  0000               	dw	0
   586  017B22  0000               	dw	0
   587  017B24  0000               	dw	0
   588  017B26  0000               	dw	0
   589  017B28  0000               	dw	0
   590  017B2A  0000               	dw	0
   591  017B2C  0000               	dw	0
   592  017B2E  0000               	dw	0
   593  017B30  0000               	dw	0
   594  017B32  0000               	dw	0
   595  017B34  0000               	dw	0
   596  017B36  0000               	dw	0
   597  017B38  0000               	dw	0
   598  017B3A  0000               	dw	0
   599  017B3C  0000               	dw	0
   600  017B3E  0000               	dw	0
   601  017B40  0000               	dw	0
   602  017B42  0000               	dw	0
   603  017B44  0000               	dw	0
   604  017B46  0000               	dw	0
   605  017B48  0000               	dw	0
   606  017B4A  0000               	dw	0
   607  017B4C  0000               	dw	0
   608  017B4E  0000               	dw	0
   609  017B50  42FA               	dw	17146
   610  017B52  00                 	db	0
   611  017B53  00                 	db	0
   612  017B54  00                 	db	0
   613  017B55  00                 	db	0
   614  017B56  00                 	db	0
   615  017B57  00                 	db	0
   616  017B58  00                 	db	0
   617  017B59  00                 	db	0
   618  017B5A  00                 	db	0
   619  017B5B  00                 	db	0
   620  017B5C  00                 	db	0
   621  017B5D  00                 	db	0
   622  017B5E  00                 	db	0
   623  017B5F  00                 	db	0
   624  017B60  00                 	db	0
   625  017B61  00                 	db	0
   626  017B62  00                 	db	0
   627  017B63  00                 	db	0
   628  017B64  00                 	db	0
   629  017B65  00                 	db	0
   630  017B66  00                 	db	0
   631  017B67  00                 	db	0
   632  017B68  00                 	db	0
   633  017B69  00                 	db	0
   634  017B6A  00                 	db	0
   635  017B6B  00                 	db	0
   636  017B6C  00                 	db	0
   637  017B6D  00                 	db	0
   638  017B6E  00                 	db	0
   639  017B6F  00                 	db	0
   640  017B70  00                 	db	0
   641  017B71  00                 	db	0
   642  017B72  00                 	db	0
   643  017B73  00                 	db	0
   644  017B74  00                 	db	0
   645  017B75  00                 	db	0
   646  017B76  00                 	db	0
   647                           
   648                           ;initializer for _port_data
   649  017B77  FF                 	db	255
   650  017B78  00                 	db	0
   651  017B79  FF                 	db	255
   652  017B7A  00                 	db	0
   653  017B7B  FF                 	db	255
   654  017B7C  00                 	db	0
   655  017B7D  FF                 	db	255
   656  017B7E  00                 	db	0
   657  017B7F  FF                 	db	255
   658  017B80  00                 	db	0
   659  017B81  FF                 	db	255
   660  017B82  00                 	db	0
   661  017B83  FF                 	db	255
   662  017B84  00                 	db	0
   663  017B85  FF                 	db	255
   664  017B86  00                 	db	0
   665                           
   666                           	psect	idataBANK2
   667  01795E                     __pidataBANK2:
   668                           	opt callstack 0
   669                           
   670                           ;initializer for _V
   671  01795E  00                 	db	0
   672  01795F  00                 	db	0
   673  017960  00                 	db	0
   674  017961  00                 	db	0
   675  017962  00                 	db	0
   676  017963  00                 	db	0
   677  017964  00                 	db	0
   678  017965  00                 	db	0
   679  017966  00                 	db	0
   680  017967  00                 	db	0
   681  017968  00                 	db	0
   682  017969  00                 	db	0
   683  01796A  00                 	db	0
   684  01796B  00                 	db	0
   685  01796C  00                 	db	0
   686  01796D  00                 	db	0
   687  01796E  00                 	db	0
   688  01796F  00                 	db	0
   689  017970  00                 	db	0
   690  017971  00                 	db	0
   691  017972  00                 	db	0
   692  017973  00                 	db	0
   693  017974  00                 	db	0
   694  017975  00                 	db	0
   695  017976  00                 	db	0
   696  017977  00                 	db	0
   697  017978  00                 	db	0
   698  017979  00                 	db	0
   699  01797A  00                 	db	0
   700  01797B  00                 	db	0
   701  01797C  00                 	db	0
   702  01797D  00                 	db	0
   703  01797E  00                 	db	0
   704  01797F  00                 	db	0
   705  017980  00                 	db	0
   706  017981  00                 	db	0
   707  017982  00                 	db	0
   708  017983  00                 	db	0
   709  017984  00                 	db	0
   710  017985  00                 	db	0
   711  017986  00                 	db	0
   712  017987  00                 	db	0
   713  017988  00                 	db	0
   714  017989  00                 	db	0
   715  01798A  00                 	db	0
   716  01798B  00                 	db	0
   717  01798C  00                 	db	0
   718  01798D  00                 	db	0
   719  01798E  00                 	db	0
   720  01798F  00                 	db	0
   721  017990  00                 	db	0
   722  017991  00                 	db	0
   723  017992  00                 	db	0
   724  017993  00                 	db	0
   725  017994  00                 	db	0
   726  017995  00                 	db	0
   727  017996  00                 	db	0
   728  017997  00                 	db	0
   729  017998  00                 	db	0
   730  017999  00                 	db	0
   731  01799A  00                 	db	0
   732  01799B  00                 	db	0
   733  01799C  00                 	db	0
   734  01799D  00                 	db	0
   735  01799E  00                 	db	0
   736  01799F  00                 	db	0
   737  0179A0  00                 	db	0
   738  0179A1  00                 	db	0
   739  0179A2  00                 	db	0
   740  0179A3  00                 	db	0
   741  0179A4  00                 	db	0
   742  0179A5  00                 	db	0
   743  0179A6  00                 	db	0
   744  0179A7  00                 	db	0
   745  0179A8  00                 	db	0
   746  0179A9  00                 	db	0
   747  0179AA  00                 	db	0
   748  0179AB  00                 	db	0
   749  0179AC  00                 	db	0
   750  0179AD  00                 	db	0
   751  0179AE  00                 	db	0
   752  0179AF  00                 	db	0
   753  0179B0  00                 	db	0
   754  0179B1  00                 	db	0
   755  0179B2  00                 	db	0
   756  0179B3  00                 	db	0
   757  0179B4  00                 	db	0
   758  0179B5  00                 	db	0
   759  0179B6  00                 	db	0
   760  0179B7  00                 	db	0
   761  0179B8  00                 	db	0
   762  0179B9  00                 	db	0
   763  0179BA  00                 	db	0
   764  0179BB  00                 	db	0
   765  0179BC  00                 	db	0
   766  0179BD  00                 	db	0
   767  0179BE  00                 	db	0
   768  0179BF  00                 	db	0
   769  0179C0  00                 	db	0
   770  0179C1  00                 	db	0
   771  0179C2  00                 	db	0
   772  0179C3  00                 	db	0
   773  0179C4  00                 	db	0
   774  0179C5  00                 	db	0
   775  0179C6  00                 	db	0
   776  0179C7  00                 	db	0
   777  0179C8  00                 	db	0
   778  0179C9  00                 	db	0
   779  0179CA  00                 	db	0
   780  0179CB  00                 	db	0
   781  0179CC  00                 	db	0
   782  0179CD  00                 	db	0
   783  0179CE  00                 	db	0
   784  0179CF  00                 	db	0
   785  0179D0  00                 	db	0
   786  0179D1  00                 	db	0
   787  0179D2  00                 	db	0
   788  0179D3  00                 	db	0
   789  0179D4  00                 	db	0
   790  0179D5  00                 	db	0
   791  0179D6  00                 	db	0
   792  0179D7  00                 	db	0
   793  0179D8  00                 	db	0
   794  0179D9  00                 	db	0
   795  0179DA  00                 	db	0
   796  0179DB  00                 	db	0
   797  0179DC  00                 	db	0
   798  0179DD  00                 	db	0
   799  0179DE  00                 	db	0
   800  0179DF  0000               	dw	0
   801  0179E1  0000               	dw	0
   802  0179E3  0000               	dw	0
   803  0179E5  0000               	dw	0
   804  0179E7  00                 	db	0
   805  0179E8  00                 	db	0
   806  0179E9  00                 	db	0
   807  0179EA  00                 	db	0
   808  0179EB  00                 	db	0
   809  0179EC  00                 	db	0
   810  0179ED  0000               	dw	0
   811  0179EF  0000               	dw	0
   812  0179F1  0000               	dw	0
   813  0179F3  0000               	dw	0
   814  0179F5  0000               	dw	0
   815  0179F7  0000               	dw	0
   816  0179F9  00                 	db	0
   817  0179FA  00                 	db	0
   818  0179FB  00                 	db	0
   819  0179FC  00                 	db	0
   820  0179FD  00                 	db	0
   821  0179FE  00                 	db	0
   822  0179FF  00                 	db	0
   823  017A00  00                 	db	0
   824  017A01  00                 	db	0
   825  017A02  00                 	db	0
   826  017A03  0000               	dw	0
   827  017A05  0000               	dw	0
   828  017A07  2D                 	db	45
   829  017A08  00                 	db	0
   830  017A09  00                 	db	0
   831  017A0A  0000               	dw	0
   832  017A0C  0000               	dw	0
   833  017A0E  0000               	dw	0
   834  017A10  0000               	dw	0
   835  017A12  0000               	dw	0
   836  017A14  0000               	dw	0
   837  017A16  0000               	dw	0
   838  017A18  0000               	dw	0
   839                           
   840                           	psect	mediumconst
   841  00FDB0                     __pmediumconst:
   842                           	opt callstack 0
   843  00FDB0  00                 	db	0
   844  00FDB1                     _T:
   845                           	opt callstack 0
   846  00FDB1  63                 	db	99
   847  00FDB2  6F                 	db	111
   848  00FDB3  6D                 	db	109
   849  00FDB4  6D                 	db	109
   850  00FDB5  61                 	db	97
   851  00FDB6  6E                 	db	110
   852  00FDB7  64                 	db	100
   853  00FDB8  73                 	db	115
   854  00FDB9  20                 	db	32
   855  00FDBA  31                 	db	49
   856  00FDBB  00                 	db	0
   857  00FDBC  00                 	db	0
   858  00FDBD  00                 	db	0
   859  00FDBE  00                 	db	0
   860  00FDBF  00                 	db	0
   861  00FDC0  00                 	db	0
   862  00FDC1  00                 	db	0
   863  00FDC2  00                 	db	0
   864  00FDC3  64                 	db	100
   865  00FDC4  69                 	db	105
   866  00FDC5  73                 	db	115
   867  00FDC6  70                 	db	112
   868  00FDC7  6C                 	db	108
   869  00FDC8  61                 	db	97
   870  00FDC9  79                 	db	121
   871  00FDCA  73                 	db	115
   872  00FDCB  20                 	db	32
   873  00FDCC  31                 	db	49
   874  00FDCD  00                 	db	0
   875  00FDCE  00                 	db	0
   876  00FDCF  00                 	db	0
   877  00FDD0  00                 	db	0
   878  00FDD1  00                 	db	0
   879  00FDD2  00                 	db	0
   880  00FDD3  00                 	db	0
   881  00FDD4  00                 	db	0
   882  00FDD5  63                 	db	99
   883  00FDD6  6F                 	db	111
   884  00FDD7  6D                 	db	109
   885  00FDD8  6D                 	db	109
   886  00FDD9  61                 	db	97
   887  00FDDA  6E                 	db	110
   888  00FDDB  64                 	db	100
   889  00FDDC  73                 	db	115
   890  00FDDD  20                 	db	32
   891  00FDDE  32                 	db	50
   892  00FDDF  00                 	db	0
   893  00FDE0  00                 	db	0
   894  00FDE1  00                 	db	0
   895  00FDE2  00                 	db	0
   896  00FDE3  00                 	db	0
   897  00FDE4  00                 	db	0
   898  00FDE5  00                 	db	0
   899  00FDE6  00                 	db	0
   900  00FDE7  64                 	db	100
   901  00FDE8  69                 	db	105
   902  00FDE9  73                 	db	115
   903  00FDEA  70                 	db	112
   904  00FDEB  6C                 	db	108
   905  00FDEC  61                 	db	97
   906  00FDED  79                 	db	121
   907  00FDEE  73                 	db	115
   908  00FDEF  20                 	db	32
   909  00FDF0  32                 	db	50
   910  00FDF1  00                 	db	0
   911  00FDF2  00                 	db	0
   912  00FDF3  00                 	db	0
   913  00FDF4  00                 	db	0
   914  00FDF5  00                 	db	0
   915  00FDF6  00                 	db	0
   916  00FDF7  00                 	db	0
   917  00FDF8  00                 	db	0
   918  00FDF9  63                 	db	99
   919  00FDFA  6F                 	db	111
   920  00FDFB  6D                 	db	109
   921  00FDFC  6D                 	db	109
   922  00FDFD  61                 	db	97
   923  00FDFE  6E                 	db	110
   924  00FDFF  64                 	db	100
   925  00FE00  73                 	db	115
   926  00FE01  20                 	db	32
   927  00FE02  33                 	db	51
   928  00FE03  00                 	db	0
   929  00FE04  00                 	db	0
   930  00FE05  00                 	db	0
   931  00FE06  00                 	db	0
   932  00FE07  00                 	db	0
   933  00FE08  00                 	db	0
   934  00FE09  00                 	db	0
   935  00FE0A  00                 	db	0
   936  00FE0B  64                 	db	100
   937  00FE0C  69                 	db	105
   938  00FE0D  73                 	db	115
   939  00FE0E  70                 	db	112
   940  00FE0F  6C                 	db	108
   941  00FE10  61                 	db	97
   942  00FE11  79                 	db	121
   943  00FE12  73                 	db	115
   944  00FE13  20                 	db	32
   945  00FE14  33                 	db	51
   946  00FE15  00                 	db	0
   947  00FE16  00                 	db	0
   948  00FE17  00                 	db	0
   949  00FE18  00                 	db	0
   950  00FE19  00                 	db	0
   951  00FE1A  00                 	db	0
   952  00FE1B  00                 	db	0
   953  00FE1C  00                 	db	0
   954  00FE1D  63                 	db	99
   955  00FE1E  6F                 	db	111
   956  00FE1F  6D                 	db	109
   957  00FE20  6D                 	db	109
   958  00FE21  61                 	db	97
   959  00FE22  6E                 	db	110
   960  00FE23  64                 	db	100
   961  00FE24  73                 	db	115
   962  00FE25  20                 	db	32
   963  00FE26  34                 	db	52
   964  00FE27  00                 	db	0
   965  00FE28  00                 	db	0
   966  00FE29  00                 	db	0
   967  00FE2A  00                 	db	0
   968  00FE2B  00                 	db	0
   969  00FE2C  00                 	db	0
   970  00FE2D  00                 	db	0
   971  00FE2E  00                 	db	0
   972  00FE2F  64                 	db	100
   973  00FE30  69                 	db	105
   974  00FE31  73                 	db	115
   975  00FE32  70                 	db	112
   976  00FE33  6C                 	db	108
   977  00FE34  61                 	db	97
   978  00FE35  79                 	db	121
   979  00FE36  73                 	db	115
   980  00FE37  20                 	db	32
   981  00FE38  34                 	db	52
   982  00FE39  00                 	db	0
   983  00FE3A  00                 	db	0
   984  00FE3B  00                 	db	0
   985  00FE3C  00                 	db	0
   986  00FE3D  00                 	db	0
   987  00FE3E  00                 	db	0
   988  00FE3F  00                 	db	0
   989  00FE40  00                 	db	0
   990  00FE41                     __end_of_T:
   991                           	opt callstack 0
   992  0000                     _IVTADL	set	14493
   993  0000                     _IVTADH	set	14494
   994  0000                     _IVTADU	set	14495
   995  0000                     _PIR6bits	set	14758
   996  0000                     _PIR4bits	set	14756
   997  0000                     _PIE8bits	set	14744
   998  0000                     _PIR8bits	set	14760
   999  0000                     _SCANPR	set	14839
  1000  0000                     _DMA2PR	set	14836
  1001  0000                     _DMA1PR	set	14835
  1002  0000                     _MAINPR	set	14834
  1003  0000                     _ISRPR	set	14833
  1004  0000                     _PIE2bits	set	14738
  1005  0000                     _PIR2bits	set	14754
  1006  0000                     _PIE9bits	set	14745
  1007  0000                     _PIR9bits	set	14761
  1008  0000                     _PIE6bits	set	14742
  1009  0000                     _PIE3bits	set	14739
  1010  0000                     _PMD7	set	14791
  1011  0000                     _PMD6	set	14790
  1012  0000                     _PMD5	set	14789
  1013  0000                     _PMD4	set	14788
  1014  0000                     _PMD3	set	14787
  1015  0000                     _PMD2	set	14786
  1016  0000                     _PMD1	set	14785
  1017  0000                     _PMD0	set	14784
  1018  0000                     _OSCTUNE	set	14814
  1019  0000                     _OSCFRQ	set	14815
  1020  0000                     _OSCEN	set	14813
  1021  0000                     _OSCCON3	set	14811
  1022  0000                     _OSCCON1	set	14809
  1023  0000                     _IPR8bits	set	14728
  1024  0000                     _IPR9bits	set	14729
  1025  0000                     _IPR5bits	set	14725
  1026  0000                     _IPR1bits	set	14721
  1027  0000                     _IPR3bits	set	14723
  1028  0000                     _IPR6bits	set	14726
  1029  0000                     _IPR2bits	set	14722
  1030  0000                     _PIE5bits	set	14741
  1031  0000                     _PIE1bits	set	14737
  1032  0000                     _PIR5bits	set	14757
  1033  0000                     _PIR1bits	set	14753
  1034  0000                     _PLLR	set	118496
  1035  0000                     _SPI1SDIPPS	set	15071
  1036  0000                     _U1RXPPS	set	15077
  1037  0000                     _RC6PPS	set	14870
  1038  0000                     _RC5PPS	set	14869
  1039  0000                     _INT1PPS	set	15041
  1040  0000                     _RD1PPS	set	14873
  1041  0000                     _INT0PPS	set	15040
  1042  0000                     _RC3PPS	set	14867
  1043  0000                     _RB6PPS	set	14862
  1044  0000                     _SPI1SCKPPS	set	15070
  1045  0000                     _U2RXPPS	set	15080
  1046  0000                     _SLRCONF	set	14995
  1047  0000                     _SLRCONE	set	14979
  1048  0000                     _SLRCOND	set	14963
  1049  0000                     _SLRCONC	set	14947
  1050  0000                     _SLRCONB	set	14931
  1051  0000                     _SLRCONA	set	14915
  1052  0000                     _ODCOND	set	14962
  1053  0000                     _ODCONC	set	14946
  1054  0000                     _ODCONB	set	14930
  1055  0000                     _ODCONA	set	14914
  1056  0000                     _ODCONF	set	14994
  1057  0000                     _ODCONE	set	14978
  1058  0000                     _WPUC	set	14945
  1059  0000                     _WPUA	set	14913
  1060  0000                     _WPUB	set	14929
  1061  0000                     _WPUE	set	14977
  1062  0000                     _WPUF	set	14993
  1063  0000                     _WPUD	set	14961
  1064  0000                     _ANSELA	set	14912
  1065  0000                     _ANSELF	set	14992
  1066  0000                     _ANSELE	set	14976
  1067  0000                     _ANSELB	set	14928
  1068  0000                     _ANSELC	set	14944
  1069  0000                     _ANSELD	set	14960
  1070  0000                     _DMA2SSA	set	15321
  1071  0000                     _DMA1SSA	set	15353
  1072  0000                     _DMA2DSZ	set	15310
  1073  0000                     _DMA2SSZ	set	15319
  1074  0000                     _DMA2DSA	set	15312
  1075  0000                     _DMA1DSZ	set	15342
  1076  0000                     _DMA1SSZ	set	15351
  1077  0000                     _DMA1DSA	set	15344
  1078  0000                     _DMA1CON0bits	set	15356
  1079  0000                     _DMA1CON1bits	set	15357
  1080  0000                     _DMA2CON0	set	15324
  1081  0000                     _DMA2AIRQ	set	15326
  1082  0000                     _DMA2SIRQ	set	15327
  1083  0000                     _DMA2CON1	set	15325
  1084  0000                     _DMA1CON0	set	15356
  1085  0000                     _DMA1AIRQ	set	15358
  1086  0000                     _DMA1SIRQ	set	15359
  1087  0000                     _DMA1CON1	set	15357
  1088  0000                     _CLKRCON	set	15589
  1089  0000                     _CLKRCLK	set	15590
  1090  0000                     _SPI1INTFbits	set	15642
  1091  0000                     _SPI1RXB	set	15632
  1092  0000                     _SPI1TXB	set	15633
  1093  0000                     _SPI1TCNTL	set	15634
  1094  0000                     _SPI1CON0	set	15636
  1095  0000                     _SPI1CLK	set	15644
  1096  0000                     _SPI1BAUD	set	15641
  1097  0000                     _SPI1CON2	set	15638
  1098  0000                     _SPI1CON1	set	15637
  1099  0000                     _U2RXB	set	15824
  1100  0000                     _U2TXB	set	15826
  1101  0000                     _U2ERRIE	set	15842
  1102  0000                     _U2ERRIR	set	15841
  1103  0000                     _U2UIR	set	15840
  1104  0000                     _U2FIFO	set	15839
  1105  0000                     _U2BRGH	set	15838
  1106  0000                     _U2BRGL	set	15837
  1107  0000                     _U2CON2	set	15836
  1108  0000                     _U2CON1	set	15835
  1109  0000                     _U2CON0	set	15834
  1110  0000                     _U2P3L	set	15832
  1111  0000                     _U2P2L	set	15830
  1112  0000                     _U2P1L	set	15828
  1113  0000                     _U1RXB	set	15848
  1114  0000                     _U1TXB	set	15850
  1115  0000                     _U1ERRIE	set	15866
  1116  0000                     _U1ERRIR	set	15865
  1117  0000                     _U1UIR	set	15864
  1118  0000                     _U1FIFO	set	15863
  1119  0000                     _U1BRGH	set	15862
  1120  0000                     _U1BRGL	set	15861
  1121  0000                     _U1CON2	set	15860
  1122  0000                     _U1CON1	set	15859
  1123  0000                     _U1CON0	set	15858
  1124  0000                     _U1P3H	set	15857
  1125  0000                     _U1P3L	set	15856
  1126  0000                     _U1P2H	set	15855
  1127  0000                     _U1P2L	set	15854
  1128  0000                     _U1P1H	set	15853
  1129  0000                     _U1P1L	set	15852
  1130  0000                     _FVRCON	set	16065
  1131  0000                     _ADFLTRL	set	16102
  1132  0000                     _ADFLTRH	set	16103
  1133  0000                     _ADCON0bits	set	16120
  1134  0000                     _ADCON0	set	16120
  1135  0000                     _ADCLK	set	16127
  1136  0000                     _ADACT	set	16126
  1137  0000                     _ADREF	set	16125
  1138  0000                     _ADSTAT	set	16124
  1139  0000                     _ADCON3	set	16123
  1140  0000                     _ADCON2	set	16122
  1141  0000                     _ADCON1	set	16121
  1142  0000                     _ADPREH	set	16119
  1143  0000                     _ADPREL	set	16118
  1144  0000                     _ADCAP	set	16117
  1145  0000                     _ADACQH	set	16116
  1146  0000                     _ADACQL	set	16115
  1147  0000                     _ADPCH	set	16113
  1148  0000                     _ADRPT	set	16108
  1149  0000                     _ADACCU	set	16106
  1150  0000                     _ADSTPTH	set	16101
  1151  0000                     _ADSTPTL	set	16100
  1152  0000                     _ADUTHH	set	16097
  1153  0000                     _ADUTHL	set	16096
  1154  0000                     _ADLTHH	set	16095
  1155  0000                     _ADLTHL	set	16094
  1156  0000                     _CCPTMRS1bits	set	16223
  1157  0000                     _PORTFbits	set	16335
  1158  0000                     _LATCbits	set	16316
  1159  0000                     _LATDbits	set	16317
  1160  0000                     _PORTBbits	set	16331
  1161  0000                     _T3CONbits	set	16294
  1162  0000                     _T3CON	set	16294
  1163  0000                     _TMR3L	set	16292
  1164  0000                     _TMR3H	set	16293
  1165  0000                     _T3CLK	set	16297
  1166  0000                     _T3GATE	set	16296
  1167  0000                     _T3GCON	set	16295
  1168  0000                     _T2CON	set	16300
  1169  0000                     _T2TMR	set	16298
  1170  0000                     _T2PR	set	16299
  1171  0000                     _T2RST	set	16303
  1172  0000                     _T2HLT	set	16301
  1173  0000                     _T2CLKCON	set	16302
  1174  0000                     _PWM8DCL	set	16224
  1175  0000                     _PWM8DCH	set	16225
  1176  0000                     _PWM8CON	set	16226
  1177  0000                     _LATEbits	set	16318
  1178  0000                     _T5CONbits	set	16282
  1179  0000                     _T5CON	set	16282
  1180  0000                     _TMR5L	set	16280
  1181  0000                     _TMR5H	set	16281
  1182  0000                     _T5CLK	set	16285
  1183  0000                     _T5GATE	set	16284
  1184  0000                     _T5GCON	set	16283
  1185  0000                     _T6CON	set	16276
  1186  0000                     _T6TMR	set	16274
  1187  0000                     _T6PR	set	16275
  1188  0000                     _T6RST	set	16279
  1189  0000                     _T6HLT	set	16277
  1190  0000                     _T6CLKCON	set	16278
  1191  0000                     _TRISD	set	16325
  1192  0000                     _TRISC	set	16324
  1193  0000                     _TRISB	set	16323
  1194  0000                     _TRISA	set	16322
  1195  0000                     _TRISF	set	16327
  1196  0000                     _TRISE	set	16326
  1197  0000                     _LATC	set	16316
  1198  0000                     _LATB	set	16315
  1199  0000                     _LATF	set	16319
  1200  0000                     _LATA	set	16314
  1201  0000                     _LATD	set	16317
  1202  0000                     _LATE	set	16318
  1203  0000                     _IVTLOCKbits	set	16340
  1204  0000                     _IVTLOCK	set	16340
  1205  0000                     _INTCON0bits	set	16338
  1206  0000                     _GIE	set	130711
  1207  00FE41                     
  1208                           ; BSR set to: 57
  1209  00FE41  20                 	db	32
  1210  00FE42  4D                 	db	77	;'M'
  1211  00FE43  65                 	db	101	;'e'
  1212  00FE44  73                 	db	115	;'s'
  1213  00FE45  67                 	db	103	;'g'
  1214  00FE46  20                 	db	32
  1215  00FE47  25                 	db	37
  1216  00FE48  64                 	db	100	;'d'
  1217  00FE49  20                 	db	32
  1218  00FE4A  53                 	db	83	;'S'
  1219  00FE4B  74                 	db	116	;'t'
  1220  00FE4C  61                 	db	97	;'a'
  1221  00FE4D  63                 	db	99	;'c'
  1222  00FE4E  6B                 	db	107	;'k'
  1223  00FE4F  20                 	db	32
  1224  00FE50  25                 	db	37
  1225  00FE51  64                 	db	100	;'d'
  1226  00FE52  20                 	db	32
  1227  00FE53  20                 	db	32
  1228  00FE54  20                 	db	32
  1229  00FE55  20                 	db	32
  1230  00FE56  20                 	db	32
  1231  00FE57  20                 	db	32
  1232  00FE58  00                 	db	0
  1233  00FE59                     STR_19:
  1234                           
  1235                           ; BSR set to: 57
  1236  00FE59  42                 	db	66	;'B'
  1237  00FE5A  41                 	db	65	;'A'
  1238  00FE5B  48                 	db	72	;'H'
  1239  00FE5C  20                 	db	32
  1240  00FE5D  25                 	db	37
  1241  00FE5E  33                 	db	51	;'3'
  1242  00FE5F  2E                 	db	46
  1243  00FE60  32                 	db	50	;'2'
  1244  00FE61  66                 	db	102	;'f'
  1245  00FE62  20                 	db	32
  1246  00FE63  50                 	db	80	;'P'
  1247  00FE64  25                 	db	37
  1248  00FE65  33                 	db	51	;'3'
  1249  00FE66  2E                 	db	46
  1250  00FE67  32                 	db	50	;'2'
  1251  00FE68  66                 	db	102	;'f'
  1252  00FE69  20                 	db	32
  1253  00FE6A  20                 	db	32
  1254  00FE6B  20                 	db	32
  1255  00FE6C  00                 	db	0
  1256  00FE6D                     STR_39:
  1257                           
  1258                           ; BSR set to: 57
  1259  00FE6D  20                 	db	32
  1260  00FE6E  20                 	db	32
  1261  00FE6F  20                 	db	32
  1262  00FE70  20                 	db	32
  1263  00FE71  20                 	db	32
  1264  00FE72  20                 	db	32
  1265  00FE73  20                 	db	32
  1266  00FE74  20                 	db	32
  1267  00FE75  20                 	db	32
  1268  00FE76  20                 	db	32
  1269  00FE77  20                 	db	32
  1270  00FE78  20                 	db	32
  1271  00FE79  20                 	db	32
  1272  00FE7A  20                 	db	32
  1273  00FE7B  20                 	db	32
  1274  00FE7C  20                 	db	32
  1275  00FE7D  20                 	db	32
  1276  00FE7E  20                 	db	32
  1277  00FE7F  00                 	db	0
  1278  00FE80                     STR_29:
  1279                           
  1280                           ; BSR set to: 57
  1281  00FE80  48                 	db	72	;'H'
  1282  00FE81  45                 	db	69	;'E'
  1283  00FE82  4C                 	db	76	;'L'
  1284  00FE83  50                 	db	80	;'P'
  1285  00FE84  20                 	db	32
  1286  00FE85  25                 	db	37
  1287  00FE86  73                 	db	115	;'s'
  1288  00FE87  20                 	db	32
  1289  00FE88  20                 	db	32
  1290  00FE89  20                 	db	32
  1291  00FE8A  20                 	db	32
  1292  00FE8B  20                 	db	32
  1293  00FE8C  20                 	db	32
  1294  00FE8D  20                 	db	32
  1295  00FE8E  20                 	db	32
  1296  00FE8F  20                 	db	32
  1297  00FE90  20                 	db	32
  1298  00FE91  20                 	db	32
  1299  00FE92  00                 	db	0
  1300  00FE93                     
  1301                           ; BSR set to: 57
  1302  00FE93  44                 	db	68	;'D'
  1303  00FE94  49                 	db	73	;'I'
  1304  00FE95  53                 	db	83	;'S'
  1305  00FE96  50                 	db	80	;'P'
  1306  00FE97  4C                 	db	76	;'L'
  1307  00FE98  41                 	db	65	;'A'
  1308  00FE99  59                 	db	89	;'Y'
  1309  00FE9A  20                 	db	32
  1310  00FE9B  25                 	db	37
  1311  00FE9C  73                 	db	115	;'s'
  1312  00FE9D  20                 	db	32
  1313  00FE9E  20                 	db	32
  1314  00FE9F  20                 	db	32
  1315  00FEA0  20                 	db	32
  1316  00FEA1  20                 	db	32
  1317  00FEA2  20                 	db	32
  1318  00FEA3  20                 	db	32
  1319  00FEA4  20                 	db	32
  1320  00FEA5  00                 	db	0
  1321  00FEA6                     STR_20:
  1322                           
  1323                           ; BSR set to: 57
  1324  00FEA6  53                 	db	83	;'S'
  1325  00FEA7  4F                 	db	79	;'O'
  1326  00FEA8  43                 	db	67	;'C'
  1327  00FEA9  20                 	db	32
  1328  00FEAA  25                 	db	37
  1329  00FEAB  64                 	db	100	;'d'
  1330  00FEAC  20                 	db	32
  1331  00FEAD  52                 	db	82	;'R'
  1332  00FEAE  55                 	db	85	;'U'
  1333  00FEAF  4E                 	db	78	;'N'
  1334  00FEB0  20                 	db	32
  1335  00FEB1  25                 	db	37
  1336  00FEB2  64                 	db	100	;'d'
  1337  00FEB3  20                 	db	32
  1338  00FEB4  20                 	db	32
  1339  00FEB5  20                 	db	32
  1340  00FEB6  20                 	db	32
  1341  00FEB7  20                 	db	32
  1342  00FEB8  00                 	db	0
  1343  00FEB9                     STR_12:
  1344                           
  1345                           ; BSR set to: 57
  1346  00FEB9  50                 	db	80	;'P'
  1347  00FEBA  56                 	db	86	;'V'
  1348  00FEBB  20                 	db	32
  1349  00FEBC  20                 	db	32
  1350  00FEBD  20                 	db	32
  1351  00FEBE  50                 	db	80	;'P'
  1352  00FEBF  57                 	db	87	;'W'
  1353  00FEC0  52                 	db	82	;'R'
  1354  00FEC1  20                 	db	32
  1355  00FEC2  25                 	db	37
  1356  00FEC3  33                 	db	51	;'3'
  1357  00FEC4  2E                 	db	46
  1358  00FEC5  32                 	db	50	;'2'
  1359  00FEC6  66                 	db	102	;'f'
  1360  00FEC7  20                 	db	32
  1361  00FEC8  20                 	db	32
  1362  00FEC9  20                 	db	32
  1363  00FECA  20                 	db	32
  1364  00FECB  00                 	db	0
  1365  00FECC                     STR_14:
  1366                           
  1367                           ; BSR set to: 57
  1368  00FECC  49                 	db	73	;'I'
  1369  00FECD  4E                 	db	78	;'N'
  1370  00FECE  56                 	db	86	;'V'
  1371  00FECF  20                 	db	32
  1372  00FED0  20                 	db	32
  1373  00FED1  50                 	db	80	;'P'
  1374  00FED2  57                 	db	87	;'W'
  1375  00FED3  52                 	db	82	;'R'
  1376  00FED4  20                 	db	32
  1377  00FED5  25                 	db	37
  1378  00FED6  33                 	db	51	;'3'
  1379  00FED7  2E                 	db	46
  1380  00FED8  32                 	db	50	;'2'
  1381  00FED9  66                 	db	102	;'f'
  1382  00FEDA  20                 	db	32
  1383  00FEDB  20                 	db	32
  1384  00FEDC  20                 	db	32
  1385  00FEDD  20                 	db	32
  1386  00FEDE  00                 	db	0
  1387  00FEDF                     STR_13:
  1388                           
  1389                           ; BSR set to: 57
  1390  00FEDF  4C                 	db	76	;'L'
  1391  00FEE0  4F                 	db	79	;'O'
  1392  00FEE1  41                 	db	65	;'A'
  1393  00FEE2  44                 	db	68	;'D'
  1394  00FEE3  20                 	db	32
  1395  00FEE4  50                 	db	80	;'P'
  1396  00FEE5  57                 	db	87	;'W'
  1397  00FEE6  52                 	db	82	;'R'
  1398  00FEE7  20                 	db	32
  1399  00FEE8  25                 	db	37
  1400  00FEE9  33                 	db	51	;'3'
  1401  00FEEA  2E                 	db	46
  1402  00FEEB  32                 	db	50	;'2'
  1403  00FEEC  66                 	db	102	;'f'
  1404  00FEED  20                 	db	32
  1405  00FEEE  20                 	db	32
  1406  00FEEF  20                 	db	32
  1407  00FEF0  20                 	db	32
  1408  00FEF1  00                 	db	0
  1409  00FEF2                     STR_18:
  1410                           
  1411                           ; BSR set to: 57
  1412  00FEF2  42                 	db	66	;'B'
  1413  00FEF3  41                 	db	65	;'A'
  1414  00FEF4  54                 	db	84	;'T'
  1415  00FEF5  54                 	db	84	;'T'
  1416  00FEF6  20                 	db	32
  1417  00FEF7  50                 	db	80	;'P'
  1418  00FEF8  57                 	db	87	;'W'
  1419  00FEF9  52                 	db	82	;'R'
  1420  00FEFA  20                 	db	32
  1421  00FEFB  25                 	db	37
  1422  00FEFC  33                 	db	51	;'3'
  1423  00FEFD  2E                 	db	46
  1424  00FEFE  32                 	db	50	;'2'
  1425  00FEFF  66                 	db	102	;'f'
  1426  00FF00  20                 	db	32
  1427  00FF01  20                 	db	32
  1428  00FF02  20                 	db	32
  1429  00FF03  20                 	db	32
  1430  00FF04  00                 	db	0
  1431  00FF05                     STR_16:
  1432                           
  1433                           ; BSR set to: 57
  1434  00FF05  42                 	db	66	;'B'
  1435  00FF06  56                 	db	86	;'V'
  1436  00FF07  20                 	db	32
  1437  00FF08  25                 	db	37
  1438  00FF09  32                 	db	50	;'2'
  1439  00FF0A  2E                 	db	46
  1440  00FF0B  32                 	db	50	;'2'
  1441  00FF0C  66                 	db	102	;'f'
  1442  00FF0D  20                 	db	32
  1443  00FF0E  42                 	db	66	;'B'
  1444  00FF0F  41                 	db	65	;'A'
  1445  00FF10  20                 	db	32
  1446  00FF11  25                 	db	37
  1447  00FF12  32                 	db	50	;'2'
  1448  00FF13  2E                 	db	46
  1449  00FF14  32                 	db	50	;'2'
  1450  00FF15  66                 	db	102	;'f'
  1451  00FF16  20                 	db	32
  1452  00FF17  00                 	db	0
  1453  00FF18                     STR_17:
  1454                           
  1455                           ; BSR set to: 57
  1456  00FF18  43                 	db	67	;'C'
  1457  00FF19  56                 	db	86	;'V'
  1458  00FF1A  20                 	db	32
  1459  00FF1B  25                 	db	37
  1460  00FF1C  32                 	db	50	;'2'
  1461  00FF1D  2E                 	db	46
  1462  00FF1E  32                 	db	50	;'2'
  1463  00FF1F  66                 	db	102	;'f'
  1464  00FF20  20                 	db	32
  1465  00FF21  4C                 	db	76	;'L'
  1466  00FF22  41                 	db	65	;'A'
  1467  00FF23  20                 	db	32
  1468  00FF24  25                 	db	37
  1469  00FF25  32                 	db	50	;'2'
  1470  00FF26  2E                 	db	46
  1471  00FF27  32                 	db	50	;'2'
  1472  00FF28  66                 	db	102	;'f'
  1473  00FF29  20                 	db	32
  1474  00FF2A  00                 	db	0
  1475  00FF2B                     STR_15:
  1476                           
  1477                           ; BSR set to: 57
  1478  00FF2B  50                 	db	80	;'P'
  1479  00FF2C  56                 	db	86	;'V'
  1480  00FF2D  20                 	db	32
  1481  00FF2E  25                 	db	37
  1482  00FF2F  32                 	db	50	;'2'
  1483  00FF30  2E                 	db	46
  1484  00FF31  32                 	db	50	;'2'
  1485  00FF32  66                 	db	102	;'f'
  1486  00FF33  20                 	db	32
  1487  00FF34  50                 	db	80	;'P'
  1488  00FF35  41                 	db	65	;'A'
  1489  00FF36  20                 	db	32
  1490  00FF37  25                 	db	37
  1491  00FF38  32                 	db	50	;'2'
  1492  00FF39  2E                 	db	46
  1493  00FF3A  32                 	db	50	;'2'
  1494  00FF3B  66                 	db	102	;'f'
  1495  00FF3C  20                 	db	32
  1496  00FF3D  00                 	db	0
  1497  00FF3E                     STR_8:
  1498                           
  1499                           ; BSR set to: 57
  1500  00FF3E  20                 	db	32
  1501  00FF3F  56                 	db	86	;'V'
  1502  00FF40  54                 	db	84	;'T'
  1503  00FF41  45                 	db	69	;'E'
  1504  00FF42  52                 	db	82	;'R'
  1505  00FF43  4D                 	db	77	;'M'
  1506  00FF44  20                 	db	32
  1507  00FF45  23                 	db	35
  1508  00FF46  32                 	db	50	;'2'
  1509  00FF47  20                 	db	32
  1510  00FF48  20                 	db	32
  1511  00FF49  20                 	db	32
  1512  00FF4A  20                 	db	32
  1513  00FF4B  20                 	db	32
  1514  00FF4C  20                 	db	32
  1515  00FF4D  20                 	db	32
  1516  00FF4E  00                 	db	0
  1517  00FF4F                     STR_4:
  1518                           
  1519                           ; BSR set to: 57
  1520  00FF4F  20                 	db	32
  1521  00FF50  4E                 	db	78	;'N'
  1522  00FF51  53                 	db	83	;'S'
  1523  00FF52  41                 	db	65	;'A'
  1524  00FF53  53                 	db	83	;'S'
  1525  00FF54  50                 	db	80	;'P'
  1526  00FF55  4F                 	db	79	;'O'
  1527  00FF56  4F                 	db	79	;'O'
  1528  00FF57  4B                 	db	75	;'K'
  1529  00FF58  20                 	db	32
  1530  00FF59  20                 	db	32
  1531  00FF5A  20                 	db	32
  1532  00FF5B  20                 	db	32
  1533  00FF5C  20                 	db	32
  1534  00FF5D  20                 	db	32
  1535  00FF5E  20                 	db	32
  1536  00FF5F  00                 	db	0
  1537  00FF60                     STR_1:
  1538                           
  1539                           ; BSR set to: 57
  1540  00FF60  20                 	db	32
  1541  00FF61  4D                 	db	77	;'M'
  1542  00FF62  42                 	db	66	;'B'
  1543  00FF63  4D                 	db	77	;'M'
  1544  00FF64  43                 	db	67	;'C'
  1545  00FF65  20                 	db	32
  1546  00FF66  53                 	db	83	;'S'
  1547  00FF67  4F                 	db	79	;'O'
  1548  00FF68  4C                 	db	76	;'L'
  1549  00FF69  41                 	db	65	;'A'
  1550  00FF6A  52                 	db	82	;'R'
  1551  00FF6B  4D                 	db	77	;'M'
  1552  00FF6C  4F                 	db	79	;'O'
  1553  00FF6D  4E                 	db	78	;'N'
  1554  00FF6E  20                 	db	32
  1555  00FF6F  20                 	db	32
  1556  00FF70  00                 	db	0
  1557  00FF71                     STR_5:
  1558                           
  1559                           ; BSR set to: 57
  1560  00FF71  20                 	db	32
  1561  00FF72  53                 	db	83	;'S'
  1562  00FF73  45                 	db	69	;'E'
  1563  00FF74  51                 	db	81	;'Q'
  1564  00FF75  55                 	db	85	;'U'
  1565  00FF76  45                 	db	69	;'E'
  1566  00FF77  4E                 	db	78	;'N'
  1567  00FF78  43                 	db	67	;'C'
  1568  00FF79  45                 	db	69	;'E'
  1569  00FF7A  20                 	db	32
  1570  00FF7B  54                 	db	84	;'T'
  1571  00FF7C  45                 	db	69	;'E'
  1572  00FF7D  53                 	db	83	;'S'
  1573  00FF7E  54                 	db	84	;'T'
  1574  00FF7F  20                 	db	32
  1575  00FF80  20                 	db	32
  1576  00FF81  00                 	db	0
  1577  00FF82                     STR_11:
  1578                           
  1579                           ; BSR set to: 57
  1580  00FF82  25                 	db	37
  1581  00FF83  64                 	db	100	;'d'
  1582  00FF84  20                 	db	32
  1583  00FF85  25                 	db	37
  1584  00FF86  32                 	db	50	;'2'
  1585  00FF87  2E                 	db	46
  1586  00FF88  34                 	db	52	;'4'
  1587  00FF89  66                 	db	102	;'f'
  1588  00FF8A  2C                 	db	44
  1589  00FF8B  20                 	db	32
  1590  00FF8C  25                 	db	37
  1591  00FF8D  64                 	db	100	;'d'
  1592  00FF8E  20                 	db	32
  1593  00FF8F  20                 	db	32
  1594  00FF90  20                 	db	32
  1595  00FF91  23                 	db	35
  1596  00FF92  00                 	db	0
  1597  00FF93                     STR_9:
  1598                           
  1599                           ; BSR set to: 57
  1600  00FF93  25                 	db	37
  1601  00FF94  64                 	db	100	;'d'
  1602  00FF95  20                 	db	32
  1603  00FF96  25                 	db	37
  1604  00FF97  32                 	db	50	;'2'
  1605  00FF98  2E                 	db	46
  1606  00FF99  34                 	db	52	;'4'
  1607  00FF9A  66                 	db	102	;'f'
  1608  00FF9B  20                 	db	32
  1609  00FF9C  20                 	db	32
  1610  00FF9D  20                 	db	32
  1611  00FF9E  25                 	db	37
  1612  00FF9F  64                 	db	100	;'d'
  1613  00FFA0  20                 	db	32
  1614  00FFA1  20                 	db	32
  1615  00FFA2  00                 	db	0
  1616  00FFA3                     STR_33:
  1617                           
  1618                           ; BSR set to: 57
  1619  00FFA3  76                 	db	118	;'v'
  1620  00FFA4  74                 	db	116	;'t'
  1621  00FFA5  65                 	db	101	;'e'
  1622  00FFA6  72                 	db	114	;'r'
  1623  00FFA7  6D                 	db	109	;'m'
  1624  00FFA8  20                 	db	32
  1625  00FFA9  25                 	db	37
  1626  00FFAA  78                 	db	120	;'x'
  1627  00FFAB  3A                 	db	58	;':'
  1628  00FFAC  25                 	db	37
  1629  00FFAD  78                 	db	120	;'x'
  1630  00FFAE  20                 	db	32
  1631  00FFAF  20                 	db	32
  1632  00FFB0  20                 	db	32
  1633  00FFB1  00                 	db	0
  1634  00FFB2                     STR_2:
  1635                           
  1636                           ; BSR set to: 57
  1637  00FFB2  20                 	db	32
  1638  00FFB3  56                 	db	86	;'V'
  1639  00FFB4  65                 	db	101	;'e'
  1640  00FFB5  72                 	db	114	;'r'
  1641  00FFB6  73                 	db	115	;'s'
  1642  00FFB7  69                 	db	105	;'i'
  1643  00FFB8  6F                 	db	111	;'o'
  1644  00FFB9  6E                 	db	110	;'n'
  1645  00FFBA  20                 	db	32
  1646  00FFBB  25                 	db	37
  1647  00FFBC  73                 	db	115	;'s'
  1648  00FFBD  20                 	db	32
  1649  00FFBE  20                 	db	32
  1650  00FFBF  20                 	db	32
  1651  00FFC0  00                 	db	0
  1652  00FFC1                     STR_27:
  1653                           
  1654                           ; BSR set to: 57
  1655  00FFC1  44                 	db	68	;'D'
  1656  00FFC2  65                 	db	101	;'e'
  1657  00FFC3  63                 	db	99	;'c'
  1658  00FFC4  20                 	db	32
  1659  00FFC5  20                 	db	32
  1660  00FFC6  34                 	db	52	;'4'
  1661  00FFC7  20                 	db	32
  1662  00FFC8  32                 	db	50	;'2'
  1663  00FFC9  30                 	db	48	;'0'
  1664  00FFCA  31                 	db	49	;'1'
  1665  00FFCB  39                 	db	57	;'9'
  1666  00FFCC  00                 	db	0
  1667  00FFCD                     STR_31:
  1668                           
  1669                           ; BSR set to: 57
  1670  00FFCD  25                 	db	37
  1671  00FFCE  73                 	db	115	;'s'
  1672  00FFCF  20                 	db	32
  1673  00FFD0  20                 	db	32
  1674  00FFD1  20                 	db	32
  1675  00FFD2  20                 	db	32
  1676  00FFD3  20                 	db	32
  1677  00FFD4  20                 	db	32
  1678  00FFD5  20                 	db	32
  1679  00FFD6  00                 	db	0
  1680  00FFD7                     STR_28:
  1681                           
  1682                           ; BSR set to: 57
  1683  00FFD7  32                 	db	50	;'2'
  1684  00FFD8  33                 	db	51	;'3'
  1685  00FFD9  3A                 	db	58	;':'
  1686  00FFDA  30                 	db	48	;'0'
  1687  00FFDB  30                 	db	48	;'0'
  1688  00FFDC  3A                 	db	58	;':'
  1689  00FFDD  35                 	db	53	;'5'
  1690  00FFDE  39                 	db	57	;'9'
  1691  00FFDF  00                 	db	0
  1692  00FFE0                     STR_3:
  1693                           
  1694                           ; BSR set to: 57
  1695  00FFE0  30                 	db	48	;'0'
  1696  00FFE1  2E                 	db	46
  1697  00FFE2  39                 	db	57	;'9'
  1698  00FFE3  39                 	db	57	;'9'
  1699  00FFE4  38                 	db	56	;'8'
  1700  00FFE5  00                 	db	0
  1701  00FFE6                     STR_46:
  1702                           
  1703                           ; BSR set to: 57
  1704  00FFE6  49                 	db	73	;'I'
  1705  00FFE7  4E                 	db	78	;'N'
  1706  00FFE8  46                 	db	70	;'F'
  1707  00FFE9  00                 	db	0
  1708  00FFEA                     STR_50:
  1709                           
  1710                           ; BSR set to: 57
  1711  00FFEA  4E                 	db	78	;'N'
  1712  00FFEB  41                 	db	65	;'A'
  1713  00FFEC  4E                 	db	78	;'N'
  1714  00FFED  00                 	db	0
  1715  00FFEE                     STR_47:
  1716                           
  1717                           ; BSR set to: 57
  1718  00FFEE  69                 	db	105	;'i'
  1719  00FFEF  6E                 	db	110	;'n'
  1720  00FFF0  66                 	db	102	;'f'
  1721  00FFF1  00                 	db	0
  1722  00FFF2                     STR_51:
  1723                           
  1724                           ; BSR set to: 57
  1725  00FFF2  6E                 	db	110	;'n'
  1726  00FFF3  61                 	db	97	;'a'
  1727  00FFF4  6E                 	db	110	;'n'
  1728  00FFF5  00                 	db	0
  1729  00FFF6                     STR_54:
  1730                           
  1731                           ; BSR set to: 57
  1732  00FFF6  6C                 	db	108	;'l'
  1733  00FFF7  66                 	db	102	;'f'
  1734  00FFF8  00                 	db	0
  1735  00FFF9                     STR_25:
  1736                           
  1737                           ; BSR set to: 57
  1738  00FFF9  25                 	db	37
  1739  00FFFA  63                 	db	99	;'c'
  1740  00FFFB  00                 	db	0
  1741  00FFFC                     STR_24:
  1742                           
  1743                           ; BSR set to: 57
  1744  00FFFC  25                 	db	37
  1745  00FFFD  73                 	db	115	;'s'
  1746  00FFFE  00                 	db	0
  1747  0000                     
  1748                           ; #config settings
  1749  00FFFF  00                 	db	0	; dummy byte at the end
  1750  0000                     
  1751                           	psect	cinit
  1752  017510                     __pcinit:
  1753                           	opt callstack 0
  1754  017510                     start_initialization:
  1755                           	opt callstack 0
  1756  017510                     __initialization:
  1757                           	opt callstack 0
  1758                           
  1759                           ; Initialize objects allocated to BANK2 (188 bytes)
  1760                           ; load TBLPTR registers with __pidataBANK2
  1761  017510  0E5E               	movlw	low __pidataBANK2
  1762  017512  6EF6               	movwf	tblptrl,c
  1763  017514  0E79               	movlw	high __pidataBANK2
  1764  017516  6EF7               	movwf	tblptrh,c
  1765  017518  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1766  01751A  6EF8               	movwf	tblptru,c
  1767  01751C  EE00  F200         	lfsr	0,__pdataBANK2
  1768  017520  EE20 F0BC          	lfsr	2,188
  1769  017524                     copy_data0:
  1770  017524  0009               	tblrd		*+
  1771  017526  006F FFD7 FFEE     	movff	tablat,postinc0
  1772  01752C  50DD               	movf	postdec2,w,c
  1773  01752E  50D9               	movf	fsr2l,w,c
  1774  017530  E1F9               	bnz	copy_data0
  1775                           
  1776                           ; Initialize objects allocated to BANK1 (181 bytes)
  1777                           ; load TBLPTR registers with __pidataBANK1
  1778  017532  0ED2               	movlw	low __pidataBANK1
  1779  017534  6EF6               	movwf	tblptrl,c
  1780  017536  0E7A               	movlw	high __pidataBANK1
  1781  017538  6EF7               	movwf	tblptrh,c
  1782  01753A  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1783  01753C  6EF8               	movwf	tblptru,c
  1784  01753E  EE00  F100         	lfsr	0,__pdataBANK1
  1785  017542  EE20 F0B5          	lfsr	2,181
  1786  017546                     copy_data1:
  1787  017546  0009               	tblrd		*+
  1788  017548  006F FFD7 FFEE     	movff	tablat,postinc0
  1789  01754E  50DD               	movf	postdec2,w,c
  1790  017550  50D9               	movf	fsr2l,w,c
  1791  017552  E1F9               	bnz	copy_data1
  1792                           
  1793                           ; Initialize objects allocated to BANK0 (54 bytes)
  1794                           ; load TBLPTR registers with __pidataBANK0
  1795  017554  0EB6               	movlw	low __pidataBANK0
  1796  017556  6EF6               	movwf	tblptrl,c
  1797  017558  0E8B               	movlw	high __pidataBANK0
  1798  01755A  6EF7               	movwf	tblptrh,c
  1799  01755C  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1800  01755E  6EF8               	movwf	tblptru,c
  1801  017560  EE00  F0C3         	lfsr	0,__pdataBANK0
  1802  017564  EE20 F036          	lfsr	2,54
  1803  017568                     copy_data2:
  1804  017568  0009               	tblrd		*+
  1805  01756A  006F FFD7 FFEE     	movff	tablat,postinc0
  1806  017570  50DD               	movf	postdec2,w,c
  1807  017572  50D9               	movf	fsr2l,w,c
  1808  017574  E1F9               	bnz	copy_data2
  1809                           
  1810                           ; Clear objects allocated to BIGRAM (290 bytes)
  1811  017576  EE01  F2FF         	lfsr	0,__pbssBIGRAM
  1812  01757A  EE20 F122          	lfsr	2,290
  1813  01757E                     clear_0:
  1814  01757E  6AEE               	clrf	postinc0,c
  1815  017580  50DD               	movf	postdec2,w,c
  1816  017582  50D9               	movf	fsr2l,w,c
  1817  017584  E1FC               	bnz	clear_0
  1818  017586  50DA               	movf	fsr2h,w,c
  1819  017588  E1FA               	bnz	clear_0
  1820                           
  1821                           ; Clear objects allocated to BANK6 (255 bytes)
  1822  01758A  EE01  F200         	lfsr	0,__pbssBANK6
  1823  01758E  EE20 F0FF          	lfsr	2,255
  1824  017592                     clear_1:
  1825  017592  6AEE               	clrf	postinc0,c
  1826  017594  50DD               	movf	postdec2,w,c
  1827  017596  50D9               	movf	fsr2l,w,c
  1828  017598  E1FC               	bnz	clear_1
  1829  01759A  50DA               	movf	fsr2h,w,c
  1830  01759C  E1FA               	bnz	clear_1
  1831                           
  1832                           ; Clear objects allocated to BANK5 (255 bytes)
  1833  01759E  EE01  F100         	lfsr	0,__pbssBANK5
  1834  0175A2  EE20 F0FF          	lfsr	2,255
  1835  0175A6                     clear_2:
  1836  0175A6  6AEE               	clrf	postinc0,c
  1837  0175A8  50DD               	movf	postdec2,w,c
  1838  0175AA  50D9               	movf	fsr2l,w,c
  1839  0175AC  E1FC               	bnz	clear_2
  1840  0175AE  50DA               	movf	fsr2h,w,c
  1841  0175B0  E1FA               	bnz	clear_2
  1842                           
  1843                           ; Clear objects allocated to BANK4 (134 bytes)
  1844  0175B2  EE01  F000         	lfsr	0,__pbssBANK4
  1845  0175B6  0E86               	movlw	134
  1846  0175B8                     clear_3:
  1847  0175B8  6AEE               	clrf	postinc0,c
  1848  0175BA  06E8               	decf	wreg,f,c
  1849  0175BC  E1FD               	bnz	clear_3
  1850                           
  1851                           ; Clear objects allocated to BANK3 (228 bytes)
  1852  0175BE  EE00  F300         	lfsr	0,__pbssBANK3
  1853  0175C2  0EE4               	movlw	228
  1854  0175C4                     clear_4:
  1855  0175C4  6AEE               	clrf	postinc0,c
  1856  0175C6  06E8               	decf	wreg,f,c
  1857  0175C8  E1FD               	bnz	clear_4
  1858                           
  1859                           ; Clear objects allocated to BANK2 (64 bytes)
  1860  0175CA  EE00  F2BC         	lfsr	0,__pbssBANK2
  1861  0175CE  0E40               	movlw	64
  1862  0175D0                     clear_5:
  1863  0175D0  6AEE               	clrf	postinc0,c
  1864  0175D2  06E8               	decf	wreg,f,c
  1865  0175D4  E1FD               	bnz	clear_5
  1866                           
  1867                           ; Clear objects allocated to BANK1 (32 bytes)
  1868  0175D6  EE00  F1B5         	lfsr	0,__pbssBANK1
  1869  0175DA  0E20               	movlw	32
  1870  0175DC                     clear_6:
  1871  0175DC  6AEE               	clrf	postinc0,c
  1872  0175DE  06E8               	decf	wreg,f,c
  1873  0175E0  E1FD               	bnz	clear_6
  1874                           
  1875                           ; Clear objects allocated to BANK0 (99 bytes)
  1876  0175E2  EE00  F060         	lfsr	0,__pbssBANK0
  1877  0175E6  0E63               	movlw	99
  1878  0175E8                     clear_7:
  1879  0175E8  6AEE               	clrf	postinc0,c
  1880  0175EA  06E8               	decf	wreg,f,c
  1881  0175EC  E1FD               	bnz	clear_7
  1882                           
  1883                           ; Clear objects allocated to COMRAM (36 bytes)
  1884  0175EE  EE00  F001         	lfsr	0,__pbssCOMRAM
  1885  0175F2  0E24               	movlw	36
  1886  0175F4                     clear_8:
  1887  0175F4  6AEE               	clrf	postinc0,c
  1888  0175F6  06E8               	decf	wreg,f,c
  1889  0175F8  E1FD               	bnz	clear_8
  1890                           
  1891                           ;
  1892                           ; Setup IVTBASE
  1893                           ;
  1894  0175FA  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1895  0175FC  6ED5               	movwf	213,c
  1896  0175FE  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1897  017600  6ED6               	movwf	214,c
  1898  017602  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1899  017604  6ED7               	movwf	215,c
  1900  017606                     end_of_initialization:
  1901                           	opt callstack 0
  1902  017606                     __end_of__initialization:
  1903                           	opt callstack 0
  1904  017606  0100               	movlb	0
  1905  017608  EFC1  F08E         	goto	_main	;jump to C main() function
  1906                           
  1907                           	psect	bssCOMRAM
  1908  000001                     __pbssCOMRAM:
  1909                           	opt callstack 0
  1910  000001                     _UART2_RxInterruptHandler:
  1911                           	opt callstack 0
  1912  000001                     	ds	3
  1913  000004                     _INT1_InterruptHandler:
  1914                           	opt callstack 0
  1915  000004                     	ds	3
  1916  000007                     _INT0_InterruptHandler:
  1917                           	opt callstack 0
  1918  000007                     	ds	3
  1919  00000A                     _width:
  1920                           	opt callstack 0
  1921  00000A                     	ds	2
  1922  00000C                     _prec:
  1923                           	opt callstack 0
  1924  00000C                     	ds	2
  1925  00000E                     _flags:
  1926                           	opt callstack 0
  1927  00000E                     	ds	2
  1928  000010                     TMR3_ISR@CountCallBack:
  1929                           	opt callstack 0
  1930  000010                     	ds	2
  1931  000012                     _timer3ReloadVal:
  1932                           	opt callstack 0
  1933  000012                     	ds	2
  1934  000014                     TMR5_ISR@CountCallBack:
  1935                           	opt callstack 0
  1936  000014                     	ds	2
  1937  000016                     _timer5ReloadVal:
  1938                           	opt callstack 0
  1939  000016                     	ds	2
  1940  000018                     _mode_sw:
  1941                           	opt callstack 0
  1942  000018                     	ds	1
  1943  000019                     _uart2RxCount:
  1944                           	opt callstack 0
  1945  000019                     	ds	1
  1946  00001A                     _uart2RxTail:
  1947                           	opt callstack 0
  1948  00001A                     	ds	1
  1949  00001B                     _uart2RxHead:
  1950                           	opt callstack 0
  1951  00001B                     	ds	1
  1952  00001C                     _uart2TxBufferRemaining:
  1953                           	opt callstack 0
  1954  00001C                     	ds	1
  1955  00001D                     _uart2TxTail:
  1956                           	opt callstack 0
  1957  00001D                     	ds	1
  1958  00001E                     _uart2TxHead:
  1959                           	opt callstack 0
  1960  00001E                     	ds	1
  1961  00001F                     _uart1RxCount:
  1962                           	opt callstack 0
  1963  00001F                     	ds	1
  1964  000020                     _uart1RxTail:
  1965                           	opt callstack 0
  1966  000020                     	ds	1
  1967  000021                     _uart1RxHead:
  1968                           	opt callstack 0
  1969  000021                     	ds	1
  1970  000022                     _uart1TxBufferRemaining:
  1971                           	opt callstack 0
  1972  000022                     	ds	1
  1973  000023                     _uart1TxTail:
  1974                           	opt callstack 0
  1975  000023                     	ds	1
  1976  000024                     _uart1TxHead:
  1977                           	opt callstack 0
  1978  000024                     	ds	1
  1979                           
  1980                           	psect	bssBANK0
  1981  000060                     __pbssBANK0:
  1982                           	opt callstack 0
  1983  000060                     _S:
  1984                           	opt callstack 0
  1985  000060                     	ds	41
  1986  000089                     _spi_link:
  1987                           	opt callstack 0
  1988  000089                     	ds	12
  1989  000095                     floorf@F524:
  1990                           	opt callstack 0
  1991  000095                     	ds	4
  1992  000099                     ___fpclassifyf@F463:
  1993                           	opt callstack 0
  1994  000099                     	ds	4
  1995  00009D                     _utctime:
  1996                           	opt callstack 0
  1997  00009D                     	ds	4
  1998  0000A1                     wdtdelay@dcount:
  1999                           	opt callstack 0
  2000  0000A1                     	ds	4
  2001  0000A5                     _P:
  2002                           	opt callstack 0
  2003  0000A5                     	ds	4
  2004  0000A9                     _TMR3_InterruptHandler:
  2005                           	opt callstack 0
  2006  0000A9                     	ds	3
  2007  0000AC                     _TMR5_InterruptHandler:
  2008                           	opt callstack 0
  2009  0000AC                     	ds	3
  2010  0000AF                     _TMR6_InterruptHandler:
  2011                           	opt callstack 0
  2012  0000AF                     	ds	3
  2013  0000B2                     _ADCC_ADTI_InterruptHandler:
  2014                           	opt callstack 0
  2015  0000B2                     	ds	3
  2016  0000B5                     _ADCC_ADI_InterruptHandler:
  2017                           	opt callstack 0
  2018  0000B5                     	ds	3
  2019  0000B8                     _UART1_TxInterruptHandler:
  2020                           	opt callstack 0
  2021  0000B8                     	ds	3
  2022  0000BB                     _UART1_RxInterruptHandler:
  2023                           	opt callstack 0
  2024  0000BB                     	ds	3
  2025  0000BE                     _UART2_TxInterruptHandler:
  2026                           	opt callstack 0
  2027  0000BE                     	ds	3
  2028  0000C1                     _nout:
  2029                           	opt callstack 0
  2030  0000C1                     	ds	2
  2031                           
  2032                           	psect	dataBANK0
  2033  0000C3                     __pdataBANK0:
  2034                           	opt callstack 0
  2035  0000C3                     _R:
  2036                           	opt callstack 0
  2037  0000C3                     	ds	40
  2038  0000EB                     stoa@F1166:
  2039                           	opt callstack 0
  2040  0000EB                     	ds	7
  2041  0000F2                     _H:
  2042                           	opt callstack 0
  2043  0000F2                     	ds	7
  2044                           
  2045                           	psect	bssBANK1
  2046  0001B5                     __pbssBANK1:
  2047                           	opt callstack 0
  2048  0001B5                     _tickCount:
  2049                           	opt callstack 0
  2050  0001B5                     	ds	24
  2051  0001CD                     _seed:
  2052                           	opt callstack 0
  2053  0001CD                     	ds	8
  2054                           
  2055                           	psect	dataBANK1
  2056  000100                     __pdataBANK1:
  2057                           	opt callstack 0
  2058  000100                     _C:
  2059                           	opt callstack 0
  2060  000100                     	ds	165
  2061  0001A5                     _port_data:
  2062                           	opt callstack 0
  2063  0001A5                     	ds	16
  2064                           
  2065                           	psect	bssBANK2
  2066  0002BC                     __pbssBANK2:
  2067                           	opt callstack 0
  2068  0002BC                     _uart1TxBuffer:
  2069                           	opt callstack 0
  2070  0002BC                     	ds	64
  2071                           
  2072                           	psect	dataBANK2
  2073  000200                     __pdataBANK2:
  2074                           	opt callstack 0
  2075  000200                     _V:
  2076                           	opt callstack 0
  2077  000200                     	ds	188
  2078                           
  2079                           	psect	bssBANK3
  2080  000300                     __pbssBANK3:
  2081                           	opt callstack 0
  2082  000300                     lp_filter@smooth:
  2083                           	opt callstack 0
  2084  000300                     	ds	84
  2085  000354                     _uart2TxBuffer:
  2086                           	opt callstack 0
  2087  000354                     	ds	64
  2088  000394                     _dbuf:
  2089                           	opt callstack 0
  2090  000394                     	ds	80
  2091                           
  2092                           	psect	bssBANK4
  2093  000400                     __pbssBANK4:
  2094                           	opt callstack 0
  2095  000400                     _ring_buf2:
  2096                           	opt callstack 0
  2097  000400                     	ds	67
  2098  000443                     _ring_buf1:
  2099                           	opt callstack 0
  2100  000443                     	ds	67
  2101                           
  2102                           	psect	bssBANK5
  2103  000500                     __pbssBANK5:
  2104                           	opt callstack 0
  2105  000500                     _uart1RxBuffer:
  2106                           	opt callstack 0
  2107  000500                     	ds	255
  2108                           
  2109                           	psect	bssBANK6
  2110  000600                     __pbssBANK6:
  2111                           	opt callstack 0
  2112  000600                     _uart2RxBuffer:
  2113                           	opt callstack 0
  2114  000600                     	ds	255
  2115                           
  2116                           	psect	bssBIGRAM
  2117  0006FF                     __pbssBIGRAM:
  2118                           	opt callstack 0
  2119  0006FF                     _D:
  2120                           	opt callstack 0
  2121  0006FF                     	ds	290
  2122                           
  2123                           	psect	cstackBANK1
  2124  0001D5                     __pcstackBANK1:
  2125                           	opt callstack 0
  2126  0001D5                     ??_TMR3_ISR:
  2127                           
  2128                           ; 1 bytes @ 0x0
  2129  0001D5                     	ds	13
  2130                           
  2131                           	psect	cstackCOMRAM
  2132  000045                     __pcstackCOMRAM:
  2133                           	opt callstack 0
  2134  000045                     ??_ADCC_ThresholdISR:
  2135  000045                     
  2136                           ; 1 bytes @ 0x0
  2137  000045                     	ds	5
  2138  00004A                     ??_TMR6_ISR:
  2139                           
  2140                           ; 1 bytes @ 0x5
  2141  00004A                     	ds	1
  2142  00004B                     ??_INT1_ISR:
  2143  00004B                     
  2144                           ; 1 bytes @ 0x6
  2145  00004B                     	ds	4
  2146  00004F                     ??_TMR5_ISR:
  2147                           
  2148                           ; 1 bytes @ 0xA
  2149  00004F                     	ds	4
  2150                           
  2151 ;;
  2152 ;;Main: autosize = 5, tempsize = 0, incstack = 0, save=0
  2153 ;;
  2154 ;; *************** function _main *****************
  2155 ;; Defined at:
  2156 ;;		line 171 in file "main.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;		None
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;  k               1  [STACK] unsigned char 
  2161 ;;  j               1  [STACK] unsigned char 
  2162 ;;  i               1  [STACK] unsigned char 
  2163 ;;  inp_index       1  [STACK] unsigned char 
  2164 ;;  mode            1  [STACK] enum E17022
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  1  [STACK] void 
  2167 ;; Registers used:
  2168 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2178 ;;Total ram usage:        0 bytes
  2179 ;; Hardware stack levels required when called:   20
  2180 ;; This function calls:
  2181 ;;		_SYSTEM_Initialize
  2182 ;;		_StartTimer
  2183 ;;		_TimerDone
  2184 ;;		_WaitMs
  2185 ;;		_calc_model_data
  2186 ;;		_check_adc_scan
  2187 ;;		_check_enter_button
  2188 ;;		_check_help
  2189 ;;		_clear_adc_scan
  2190 ;;		_clear_hid_pflags
  2191 ;;		_convert_adc_data
  2192 ;;		_eaDogM_WriteCommand
  2193 ;;		_get_raw_result
  2194 ;;		_get_switch
  2195 ;;		_get_vterm_ptr
  2196 ;;		_hid_display
  2197 ;;		_init_bsoc
  2198 ;;		_init_display
  2199 ;;		_lp_filter
  2200 ;;		_mode_lamp_dim
  2201 ;;		_set_display_info
  2202 ;;		_set_vterm
  2203 ;;		_sprintf
  2204 ;;		_srand
  2205 ;;		_start_adc_scan
  2206 ;;		_start_switch_handler
  2207 ;;		_static_soc
  2208 ;;		_update_lcd
  2209 ;; This function is called by:
  2210 ;;		Startup code after reset
  2211 ;; This function uses a reentrant model
  2212 ;;
  2213                           
  2214                           	psect	text0
  2215  011D82                     __ptext0:
  2216                           	opt callstack 0
  2217  011D82                     _main:
  2218                           	opt callstack 0
  2219                           
  2220                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2221  011D82  0E05               	movlw	5
  2222  011D84  26E1               	addwf	fsr1l,f,c
  2223  011D86  0E00               	movlw	0
  2224  011D88  22E2               	addwfc	fsr1h,f,c
  2225                           
  2226                           ;main.c: 173:  UI_STATES mode;;main.c: 174:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC;
  2227                           ;stkvar	_inp_index @ sp[(-5)+3]
  2228                           
  2229                           ;incstack = 0
  2230  011D8A  0EFE               	movlw	-2
  2231  011D8C  6AE3               	clrf	plusw1,c
  2232                           
  2233                           ;stkvar	_i @ sp[(-5)+2]
  2234  011D8E  0EFD               	movlw	-3
  2235  011D90  6AE3               	clrf	plusw1,c
  2236                           
  2237                           ;stkvar	_j @ sp[(-5)+1]
  2238  011D92  0EFC               	movlw	-4
  2239  011D94  6AE3               	clrf	plusw1,c
  2240  011D96  2AE3               	incf	plusw1,f,c
  2241                           
  2242                           ;stkvar	_k @ sp[(-5)+0]
  2243  011D98  0EFB               	movlw	-5
  2244  011D9A  6AE3               	clrf	plusw1,c
  2245  011D9C  82E3               	bsf	plusw1,1,c
  2246                           
  2247                           ;main.c: 177:  SYSTEM_Initialize();
  2248  011D9E  EC08  F0C4         	call	_SYSTEM_Initialize	;wreg free
  2249                           
  2250                           ; BSR set to: 60
  2251                           ;main.c: 180:  (INTCON0bits.GIEH = 1);
  2252  011DA2  8ED2               	bsf	210,7,c	;volatile
  2253                           
  2254                           ; BSR set to: 60
  2255                           ;main.c: 183:  (INTCON0bits.GIEL = 1);
  2256  011DA4  8CD2               	bsf	210,6,c	;volatile
  2257                           
  2258                           ; BSR set to: 60
  2259                           ;main.c: 185:  V.ui_state = UI_STATE_INIT;
  2260  011DA6  0102               	movlb	2	; () banked
  2261  011DA8  6B00               	clrf	_V& (0+255),b	;volatile
  2262                           
  2263                           ; BSR set to: 2
  2264                           ;main.c: 190:  WaitMs(300);
  2265  011DAA  0E2C               	movlw	44
  2266  011DAC  6EE6               	movwf	postinc1,c
  2267  011DAE  0E01               	movlw	1
  2268  011DB0  6EE6               	movwf	postinc1,c
  2269  011DB2  ECF6  F0C5         	call	_WaitMs	;wreg free
  2270                           
  2271                           ;main.c: 191:  if (PORTBbits.RB0) {
  2272  011DB6  A0CB               	btfss	203,0,c	;volatile
  2273  011DB8  D004               	goto	l11055
  2274                           
  2275                           ;main.c: 192:   mode = UI_STATE_HOST;
  2276                           ;stkvar	_mode @ sp[(-5)+4]
  2277  011DBA  0EFF               	movlw	-1
  2278  011DBC  6AE3               	clrf	plusw1,c
  2279  011DBE  2AE3               	incf	plusw1,f,c
  2280                           
  2281                           ;main.c: 193:  } else {
  2282  011DC0  D004               	goto	l11057
  2283  011DC2                     l11055:
  2284                           
  2285                           ;main.c: 194:   mode = UI_STATE_LOG;
  2286                           ;stkvar	_mode @ sp[(-5)+4]
  2287  011DC2  0EFF               	movlw	-1
  2288  011DC4  6AE3               	clrf	plusw1,c
  2289  011DC6  80E3               	bsf	plusw1,0,c
  2290  011DC8  82E3               	bsf	plusw1,1,c	;indir
  2291  011DCA                     l11057:
  2292                           
  2293                           ;main.c: 197:  if (mode == UI_STATE_HOST) {
  2294                           ;stkvar	_mode @ sp[(-5)+4]
  2295  011DCA  0EFF               	movlw	-1
  2296  011DCC  04E3               	decf	plusw1,w,c
  2297  011DCE  A4D8               	btfss	status,2,c
  2298  011DD0  D007               	goto	l1338
  2299                           
  2300                           ;main.c: 198:   do { LATDbits.LATD0 = 1; } while(0);
  2301  011DD2  80BD               	bsf	189,0,c	;volatile
  2302                           
  2303                           ;main.c: 199:   V.mode_pwm = 70;
  2304  011DD4  0E00               	movlw	0
  2305  011DD6  0102               	movlb	2	; () banked
  2306  011DD8  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  2307  011DDA  0E46               	movlw	70
  2308  011DDC  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  2309                           
  2310                           ;main.c: 200:  } else {
  2311  011DDE  D004               	goto	l11061
  2312  011DE0                     l1338:
  2313  011DE0  90BD               	bcf	189,0,c	;volatile
  2314                           
  2315                           ;main.c: 202:   V.mode_pwm = 0;
  2316  011DE2  0102               	movlb	2	; () banked
  2317  011DE4  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  2318  011DE6  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  2319  011DE8                     l11061:
  2320                           
  2321                           ; BSR set to: 2
  2322                           ;main.c: 204:  mode_lamp_dim(V.mode_pwm);
  2323  011DE8  0060  FA57  FFE6   	movff	_V+149,postinc1
  2324  011DEE  0060  FA5B  FFE6   	movff	_V+150,postinc1
  2325  011DF4  ECE3  F0C9         	call	_mode_lamp_dim	;wreg free
  2326  011DF8  D0D4               	goto	l11109
  2327  011DFA                     l11063:
  2328                           
  2329                           ; BSR set to: 2
  2330                           ;main.c: 215:    init_display();
  2331  011DFA  EC06  F0BB         	call	_init_display	;wreg free
  2332                           
  2333                           ; BSR set to: 61
  2334                           ;main.c: 216:    eaDogM_WriteCommand(0b00001100);
  2335  011DFE  0E0C               	movlw	12
  2336  011E00  6EE6               	movwf	postinc1,c
  2337  011E02  EC40  F0CA         	call	_eaDogM_WriteCommand	;wreg free
  2338                           
  2339                           ; BSR set to: 0
  2340                           ;main.c: 218:    V.ui_state = mode;
  2341                           ;stkvar	_mode @ sp[(-5)+4]
  2342  011E06  0EFF               	movlw	-1
  2343  011E08  006F FF8C  F200    	movff	plusw1,_V	;volatile
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;main.c: 219:    srand(1957);
  2347  011E0E  0EA5               	movlw	165
  2348  011E10  6EE6               	movwf	postinc1,c
  2349  011E12  0E07               	movlw	7
  2350  011E14  6EE6               	movwf	postinc1,c
  2351  011E16  EC46  F0C6         	call	_srand	;wreg free
  2352                           
  2353                           ; BSR set to: 1
  2354                           ;main.c: 220:    set_vterm(0);
  2355  011E1A  0E00               	movlw	0
  2356  011E1C  6EE6               	movwf	postinc1,c
  2357  011E1E  EC7E  F0C9         	call	_set_vterm	;wreg free
  2358                           
  2359                           ;main.c: 221:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  2360  011E22  0E60               	movlw	low STR_1
  2361  011E24  6EE6               	movwf	postinc1,c
  2362  011E26  0EFF               	movlw	high STR_1
  2363  011E28  6EE6               	movwf	postinc1,c
  2364  011E2A  0E00               	movlw	0
  2365  011E2C  6EE6               	movwf	postinc1,c
  2366  011E2E  0E00               	movlw	0
  2367  011E30  6EE6               	movwf	postinc1,c
  2368  011E32  ECC2  F0C6         	call	_get_vterm_ptr	;wreg free
  2369  011E36  0060  F097  FFE6   	movff	btemp,postinc1
  2370  011E3C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2371  011E42  0E04               	movlw	4
  2372  011E44  6EE6               	movwf	postinc1,c
  2373  011E46  EC82  F0B9         	call	_sprintf	;wreg free
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;main.c: 222:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.998");
  2377  011E4A  0EE0               	movlw	low STR_3
  2378  011E4C  6EE6               	movwf	postinc1,c
  2379  011E4E  0EFF               	movlw	high STR_3
  2380  011E50  6EE6               	movwf	postinc1,c
  2381  011E52  0EB2               	movlw	low STR_2
  2382  011E54  6EE6               	movwf	postinc1,c
  2383  011E56  0EFF               	movlw	high STR_2
  2384  011E58  6EE6               	movwf	postinc1,c
  2385  011E5A  0E00               	movlw	0
  2386  011E5C  6EE6               	movwf	postinc1,c
  2387  011E5E  0E01               	movlw	1
  2388  011E60  6EE6               	movwf	postinc1,c
  2389  011E62  ECC2  F0C6         	call	_get_vterm_ptr	;wreg free
  2390  011E66  0060  F097  FFE6   	movff	btemp,postinc1
  2391  011E6C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2392  011E72  0E06               	movlw	6
  2393  011E74  6EE6               	movwf	postinc1,c
  2394  011E76  EC82  F0B9         	call	_sprintf	;wreg free
  2395                           
  2396                           ; BSR set to: 0
  2397                           ;main.c: 223:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  2398  011E7A  0E4F               	movlw	low STR_4
  2399  011E7C  6EE6               	movwf	postinc1,c
  2400  011E7E  0EFF               	movlw	high STR_4
  2401  011E80  6EE6               	movwf	postinc1,c
  2402  011E82  0E00               	movlw	0
  2403  011E84  6EE6               	movwf	postinc1,c
  2404  011E86  0E02               	movlw	2
  2405  011E88  6EE6               	movwf	postinc1,c
  2406  011E8A  ECC2  F0C6         	call	_get_vterm_ptr	;wreg free
  2407  011E8E  0060  F097  FFE6   	movff	btemp,postinc1
  2408  011E94  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2409  011E9A  0E04               	movlw	4
  2410  011E9C  6EE6               	movwf	postinc1,c
  2411  011E9E  EC82  F0B9         	call	_sprintf	;wreg free
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;main.c: 224:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  2415  011EA2  0E71               	movlw	low STR_5
  2416  011EA4  6EE6               	movwf	postinc1,c
  2417  011EA6  0EFF               	movlw	high STR_5
  2418  011EA8  6EE6               	movwf	postinc1,c
  2419  011EAA  0E02               	movlw	2
  2420  011EAC  6EE6               	movwf	postinc1,c
  2421  011EAE  0E00               	movlw	0
  2422  011EB0  6EE6               	movwf	postinc1,c
  2423  011EB2  ECC2  F0C6         	call	_get_vterm_ptr	;wreg free
  2424  011EB6  0060  F097  FFE6   	movff	btemp,postinc1
  2425  011EBC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2426  011EC2  0E04               	movlw	4
  2427  011EC4  6EE6               	movwf	postinc1,c
  2428  011EC6  EC82  F0B9         	call	_sprintf	;wreg free
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;main.c: 225:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.998");
  2432  011ECA  0EE0               	movlw	low STR_3
  2433  011ECC  6EE6               	movwf	postinc1,c
  2434  011ECE  0EFF               	movlw	high STR_3
  2435  011ED0  6EE6               	movwf	postinc1,c
  2436  011ED2  0EB2               	movlw	low STR_2
  2437  011ED4  6EE6               	movwf	postinc1,c
  2438  011ED6  0EFF               	movlw	high STR_2
  2439  011ED8  6EE6               	movwf	postinc1,c
  2440  011EDA  0E02               	movlw	2
  2441  011EDC  6EE6               	movwf	postinc1,c
  2442  011EDE  0E01               	movlw	1
  2443  011EE0  6EE6               	movwf	postinc1,c
  2444  011EE2  ECC2  F0C6         	call	_get_vterm_ptr	;wreg free
  2445  011EE6  0060  F097  FFE6   	movff	btemp,postinc1
  2446  011EEC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2447  011EF2  0E06               	movlw	6
  2448  011EF4  6EE6               	movwf	postinc1,c
  2449  011EF6  EC82  F0B9         	call	_sprintf	;wreg free
  2450                           
  2451                           ; BSR set to: 0
  2452                           ;main.c: 226:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2453  011EFA  0E3E               	movlw	low STR_8
  2454  011EFC  6EE6               	movwf	postinc1,c
  2455  011EFE  0EFF               	movlw	high STR_8
  2456  011F00  6EE6               	movwf	postinc1,c
  2457  011F02  0E02               	movlw	2
  2458  011F04  6EE6               	movwf	postinc1,c
  2459  011F06  0E02               	movlw	2
  2460  011F08  6EE6               	movwf	postinc1,c
  2461  011F0A  ECC2  F0C6         	call	_get_vterm_ptr	;wreg free
  2462  011F0E  0060  F097  FFE6   	movff	btemp,postinc1
  2463  011F14  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2464  011F1A  0E04               	movlw	4
  2465  011F1C  6EE6               	movwf	postinc1,c
  2466  011F1E  EC82  F0B9         	call	_sprintf	;wreg free
  2467                           
  2468                           ; BSR set to: 0
  2469                           ;main.c: 227:    update_lcd(0);
  2470  011F22  0E00               	movlw	0
  2471  011F24  6EE6               	movwf	postinc1,c
  2472  011F26  ECFA  F0B8         	call	_update_lcd	;wreg free
  2473                           
  2474                           ;main.c: 228:    WaitMs(3000);
  2475  011F2A  0EB8               	movlw	184
  2476  011F2C  6EE6               	movwf	postinc1,c
  2477  011F2E  0E0B               	movlw	11
  2478  011F30  6EE6               	movwf	postinc1,c
  2479  011F32  ECF6  F0C5         	call	_WaitMs	;wreg free
  2480                           
  2481                           ;main.c: 229:    StartTimer(TMR_DISPLAY, 250);
  2482  011F36  0EFA               	movlw	250
  2483  011F38  6EE6               	movwf	postinc1,c
  2484  011F3A  0E00               	movlw	0
  2485  011F3C  6EE6               	movwf	postinc1,c
  2486  011F3E  0E0A               	movlw	10
  2487  011F40  6EE6               	movwf	postinc1,c
  2488  011F42  EC20  F0C5         	call	_StartTimer	;wreg free
  2489                           
  2490                           ;main.c: 230:    StartTimer(TMR_ADC, 200);
  2491  011F46  0EC8               	movlw	200
  2492  011F48  6EE6               	movwf	postinc1,c
  2493  011F4A  0E00               	movlw	0
  2494  011F4C  6EE6               	movwf	postinc1,c
  2495  011F4E  0E01               	movlw	1
  2496  011F50  6EE6               	movwf	postinc1,c
  2497  011F52  EC20  F0C5         	call	_StartTimer	;wreg free
  2498                           
  2499                           ;main.c: 231:    StartTimer(TMR_INFO, 3000);
  2500  011F56  0EB8               	movlw	184
  2501  011F58  6EE6               	movwf	postinc1,c
  2502  011F5A  0E0B               	movlw	11
  2503  011F5C  6EE6               	movwf	postinc1,c
  2504  011F5E  0E07               	movlw	7
  2505  011F60  6EE6               	movwf	postinc1,c
  2506  011F62  EC20  F0C5         	call	_StartTimer	;wreg free
  2507                           
  2508                           ;main.c: 232:    StartTimer(TMR_FLIPPER, 1500);
  2509  011F66  0EDC               	movlw	220
  2510  011F68  6EE6               	movwf	postinc1,c
  2511  011F6A  0E05               	movlw	5
  2512  011F6C  6EE6               	movwf	postinc1,c
  2513  011F6E  0E0B               	movlw	11
  2514  011F70  6EE6               	movwf	postinc1,c
  2515  011F72  EC20  F0C5         	call	_StartTimer	;wreg free
  2516                           
  2517                           ;main.c: 233:    StartTimer(TMR_HELPDIS, 3000);
  2518  011F76  0EB8               	movlw	184
  2519  011F78  6EE6               	movwf	postinc1,c
  2520  011F7A  0E0B               	movlw	11
  2521  011F7C  6EE6               	movwf	postinc1,c
  2522  011F7E  0E09               	movlw	9
  2523  011F80  6EE6               	movwf	postinc1,c
  2524  011F82  EC20  F0C5         	call	_StartTimer	;wreg free
  2525                           
  2526                           ;main.c: 235:    start_adc_scan();
  2527  011F86  EC13  F0C2         	call	_start_adc_scan	;wreg free
  2528                           
  2529                           ;main.c: 236:    start_switch_handler();
  2530  011F8A  EC50  F0C9         	call	_start_switch_handler	;wreg free
  2531                           
  2532                           ; BSR set to: 57
  2533                           ;main.c: 237:    static_soc();
  2534  011F8E  EC2C  F0C6         	call	_static_soc	;wreg free
  2535                           
  2536                           ; BSR set to: 1
  2537                           ;main.c: 238:    init_bsoc();
  2538  011F92  EC2F  F0CA         	call	_init_bsoc	;wreg free
  2539                           
  2540                           ;main.c: 240:    break;
  2541  011F96  D01C               	goto	l11111
  2542  011F98                     l1346:
  2543                           
  2544                           ; BSR set to: 2
  2545                           ;main.c: 246:    P.SYSTEM_STABLE = 1;
  2546  011F98  0100               	movlb	0	; () banked
  2547  011F9A  81A6               	bsf	(_P+1)& (0+255),0,b	;volatile
  2548                           
  2549                           ;main.c: 247:    break;
  2550  011F9C  D019               	goto	l11111
  2551  011F9E                     l1348:
  2552                           
  2553                           ; BSR set to: 2
  2554                           ;main.c: 250:    V.ui_state = UI_STATE_INIT;
  2555  011F9E  6B00               	clrf	_V& (0+255),b	;volatile
  2556                           
  2557                           ;main.c: 251:    break;
  2558  011FA0  D017               	goto	l11111
  2559  011FA2                     l11109:
  2560  011FA2  0102               	movlb	2	; () banked
  2561  011FA4  5100               	movf	_V& (0+255),w,b	;volatile
  2562  011FA6  6E2F               	movwf	(btemp+10)^0,c
  2563  011FA8  6A30               	clrf	(btemp+11)^0,c
  2564                           
  2565                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2566                           ; Switch size 1, requested type "simple"
  2567                           ; Number of cases is 1, Range of values is 0 to 0
  2568                           ; switch strategies available:
  2569                           ; Name         Instructions Cycles
  2570                           ; simple_byte            4     3 (average)
  2571                           ;	Chosen strategy is simple_byte
  2572  011FAA  5030               	movf	(btemp+11)^0,w,c
  2573  011FAC  0A00               	xorlw	0	; case 0
  2574  011FAE  A4D8               	btfss	status,2,c
  2575  011FB0  D7F6               	goto	l1348
  2576                           
  2577                           ; BSR set to: 2
  2578                           ; Switch size 1, requested type "simple"
  2579                           ; Number of cases is 5, Range of values is 0 to 5
  2580                           ; switch strategies available:
  2581                           ; Name         Instructions Cycles
  2582                           ; simple_byte           16     9 (average)
  2583                           ;	Chosen strategy is simple_byte
  2584  011FB2  502F               	movf	(btemp+10)^0,w,c
  2585  011FB4  0A00               	xorlw	0	; case 0
  2586  011FB6  B4D8               	btfsc	status,2,c
  2587  011FB8  D720               	goto	l11063
  2588  011FBA  0A01               	xorlw	1	; case 1
  2589  011FBC  B4D8               	btfsc	status,2,c
  2590  011FBE  D008               	goto	l11111
  2591  011FC0  0A02               	xorlw	2	; case 3
  2592  011FC2  B4D8               	btfsc	status,2,c
  2593  011FC4  D005               	goto	l11111
  2594  011FC6  0A07               	xorlw	7	; case 4
  2595  011FC8  B4D8               	btfsc	status,2,c
  2596  011FCA  D7E6               	goto	l1346
  2597  011FCC  0A01               	xorlw	1	; case 5
  2598  011FCE  D7E7               	goto	l1348
  2599  011FD0                     l11111:
  2600                           
  2601                           ;main.c: 254:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2602  011FD0  0E01               	movlw	1
  2603  011FD2  6EE6               	movwf	postinc1,c
  2604  011FD4  EC81  F0C7         	call	_TimerDone	;wreg free
  2605  011FD8  5025               	movf	btemp^0,w,c
  2606  011FDA  B4D8               	btfsc	status,2,c
  2607  011FDC  D013               	goto	l11123
  2608  011FDE  EC7F  F0CA         	call	_check_adc_scan	;wreg free
  2609  011FE2  5025               	movf	btemp^0,w,c
  2610  011FE4  B4D8               	btfsc	status,2,c
  2611  011FE6  D00E               	goto	l11123
  2612                           
  2613                           ;main.c: 258:    convert_adc_data();
  2614  011FE8  EC0D  F0BD         	call	_convert_adc_data	;wreg free
  2615                           
  2616                           ;main.c: 262:    clear_adc_scan();
  2617  011FEC  EC87  F0CA         	call	_clear_adc_scan	;wreg free
  2618                           
  2619                           ; BSR set to: 0
  2620                           ;main.c: 263:    start_adc_scan();
  2621  011FF0  EC13  F0C2         	call	_start_adc_scan	;wreg free
  2622                           
  2623                           ;main.c: 264:    StartTimer(TMR_ADC, 200);
  2624  011FF4  0EC8               	movlw	200
  2625  011FF6  6EE6               	movwf	postinc1,c
  2626  011FF8  0E00               	movlw	0
  2627  011FFA  6EE6               	movwf	postinc1,c
  2628  011FFC  0E01               	movlw	1
  2629  011FFE  6EE6               	movwf	postinc1,c
  2630  012000  EC20  F0C5         	call	_StartTimer	;wreg free
  2631  012004                     l11123:
  2632                           
  2633                           ;main.c: 271:   if (TimerDone(TMR_DISPLAY)) {
  2634                           
  2635                           ;main.c: 267:   if (V.ticks) {
  2636  012004  0E0A               	movlw	10
  2637  012006  6EE6               	movwf	postinc1,c
  2638  012008  EC81  F0C7         	call	_TimerDone	;wreg free
  2639  01200C  5025               	movf	btemp^0,w,c
  2640  01200E  B4D8               	btfsc	status,2,c
  2641  012010  D27F               	goto	l11165
  2642                           
  2643                           ;main.c: 272:    if (TimerDone(TMR_HELPDIS)) {
  2644  012012  0E09               	movlw	9
  2645  012014  6EE6               	movwf	postinc1,c
  2646  012016  EC81  F0C7         	call	_TimerDone	;wreg free
  2647  01201A  5025               	movf	btemp^0,w,c
  2648  01201C  B4D8               	btfsc	status,2,c
  2649  01201E  D004               	goto	l11131
  2650                           
  2651                           ;main.c: 273:     set_display_info(DIS_STR);
  2652  012020  0E00               	movlw	0
  2653  012022  6EE6               	movwf	postinc1,c
  2654  012024  EC8D  F0C9         	call	_set_display_info	;wreg free
  2655  012028                     l11131:
  2656                           
  2657                           ;main.c: 275:    calc_model_data();
  2658  012028  EC16  F0A9         	call	_calc_model_data	;wreg free
  2659                           
  2660                           ; BSR set to: 1
  2661                           ;main.c: 282:     hid_display(&H);
  2662                           
  2663                           ;main.c: 277:    if (0) {
  2664  01202C  0EF2               	movlw	_H& (0+255)
  2665  01202E  6EE6               	movwf	postinc1,c
  2666  012030  EC07  F0BA         	call	_hid_display	;wreg free
  2667                           
  2668                           ;main.c: 283:     switch (H.hid_display) {
  2669  012034  D248               	goto	l11157
  2670  012036                     l1356:
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;main.c: 285:      V.calib = 0;
  2674  012036  0102               	movlb	2	; () banked
  2675  012038  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2676                           
  2677                           ; BSR set to: 2
  2678                           ;main.c: 286:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  2679  01203A  0060  F5C3  FFE6   	movff	_C+112,postinc1
  2680  012040  0060  F5C7  FFE6   	movff	_C+113,postinc1
  2681  012046  0060  F5CB  FFE6   	movff	_C+114,postinc1
  2682  01204C  0060  F5CF  FFE6   	movff	_C+115,postinc1
  2683  012052  0EB9               	movlw	low STR_12
  2684  012054  6EE6               	movwf	postinc1,c
  2685  012056  0EFE               	movlw	high STR_12
  2686  012058  6EE6               	movwf	postinc1,c
  2687  01205A  0E00               	movlw	0
  2688  01205C  6EE6               	movwf	postinc1,c
  2689  01205E  0E00               	movlw	0
  2690  012060  6EE6               	movwf	postinc1,c
  2691  012062  ECC2  F0C6         	call	_get_vterm_ptr	;wreg free
  2692  012066  0060  F097  FFE6   	movff	btemp,postinc1
  2693  01206C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2694  012072  0E08               	movlw	8
  2695  012074  6EE6               	movwf	postinc1,c
  2696  012076  EC82  F0B9         	call	_sprintf	;wreg free
  2697                           
  2698                           ;main.c: 287:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  2699  01207A  0060  F5A3  FFE6   	movff	_C+104,postinc1
  2700  012080  0060  F5A7  FFE6   	movff	_C+105,postinc1
  2701  012086  0060  F5AB  FFE6   	movff	_C+106,postinc1
  2702  01208C  0060  F5AF  FFE6   	movff	_C+107,postinc1
  2703  012092  0EDF               	movlw	low STR_13
  2704  012094  6EE6               	movwf	postinc1,c
  2705  012096  0EFE               	movlw	high STR_13
  2706  012098  6EE6               	movwf	postinc1,c
  2707  01209A  0E00               	movlw	0
  2708  01209C  6EE6               	movwf	postinc1,c
  2709  01209E  0E01               	movlw	1
  2710  0120A0  6EE6               	movwf	postinc1,c
  2711  0120A2  ECC2  F0C6         	call	_get_vterm_ptr	;wreg free
  2712  0120A6  0060  F097  FFE6   	movff	btemp,postinc1
  2713  0120AC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2714  0120B2  0E08               	movlw	8
  2715  0120B4  6EE6               	movwf	postinc1,c
  2716  0120B6  EC82  F0B9         	call	_sprintf	;wreg free
  2717                           
  2718                           ;main.c: 288:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  2719  0120BA  0060  F5B3  FFE6   	movff	_C+108,postinc1
  2720  0120C0  0060  F5B7  FFE6   	movff	_C+109,postinc1
  2721  0120C6  0060  F5BB  FFE6   	movff	_C+110,postinc1
  2722  0120CC  0060  F5BF  FFE6   	movff	_C+111,postinc1
  2723  0120D2  0ECC               	movlw	low STR_14
  2724  0120D4  6EE6               	movwf	postinc1,c
  2725  0120D6  0EFE               	movlw	high STR_14
  2726  0120D8  6EE6               	movwf	postinc1,c
  2727  0120DA  0E00               	movlw	0
  2728  0120DC  6EE6               	movwf	postinc1,c
  2729  0120DE  0E02               	movlw	2
  2730  0120E0  6EE6               	movwf	postinc1,c
  2731  0120E2  ECC2  F0C6         	call	_get_vterm_ptr	;wreg free
  2732  0120E6  0060  F097  FFE6   	movff	btemp,postinc1
  2733  0120EC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2734  0120F2  0E08               	movlw	8
  2735  0120F4  6EE6               	movwf	postinc1,c
  2736  0120F6  EC82  F0B9         	call	_sprintf	;wreg free
  2737                           
  2738                           ;main.c: 289:      break;
  2739  0120FA  D1FA               	goto	l11159
  2740  0120FC                     l1358:
  2741                           
  2742                           ; BSR set to: 0
  2743                           ;main.c: 291:      V.calib = 0;
  2744  0120FC  0102               	movlb	2	; () banked
  2745  0120FE  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2746                           
  2747                           ; BSR set to: 2
  2748                           ;main.c: 292:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  2749  012100  0060  F413  FFE6   	movff	_C+4,postinc1
  2750  012106  0060  F417  FFE6   	movff	_C+5,postinc1
  2751  01210C  0060  F41B  FFE6   	movff	_C+6,postinc1
  2752  012112  0060  F41F  FFE6   	movff	_C+7,postinc1
  2753  012118  0060  F453  FFE6   	movff	_C+20,postinc1
  2754  01211E  0060  F457  FFE6   	movff	_C+21,postinc1
  2755  012124  0060  F45B  FFE6   	movff	_C+22,postinc1
  2756  01212A  0060  F45F  FFE6   	movff	_C+23,postinc1
  2757  012130  0E2B               	movlw	low STR_15
  2758  012132  6EE6               	movwf	postinc1,c
  2759  012134  0EFF               	movlw	high STR_15
  2760  012136  6EE6               	movwf	postinc1,c
  2761  012138  0E00               	movlw	0
  2762  01213A  6EE6               	movwf	postinc1,c
  2763  01213C  0E00               	movlw	0
  2764  01213E  6EE6               	movwf	postinc1,c
  2765  012140  ECC2  F0C6         	call	_get_vterm_ptr	;wreg free
  2766  012144  0060  F097  FFE6   	movff	btemp,postinc1
  2767  01214A  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2768  012150  0E0C               	movlw	12
  2769  012152  6EE6               	movwf	postinc1,c
  2770  012154  EC82  F0B9         	call	_sprintf	;wreg free
  2771                           
  2772                           ;main.c: 293:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  2773  012158  0060  F403  FFE6   	movff	_C,postinc1
  2774  01215E  0060  F407  FFE6   	movff	_C+1,postinc1
  2775  012164  0060  F40B  FFE6   	movff	_C+2,postinc1
  2776  01216A  0060  F40F  FFE6   	movff	_C+3,postinc1
  2777  012170  0060  F443  FFE6   	movff	_C+16,postinc1
  2778  012176  0060  F447  FFE6   	movff	_C+17,postinc1
  2779  01217C  0060  F44B  FFE6   	movff	_C+18,postinc1
  2780  012182  0060  F44F  FFE6   	movff	_C+19,postinc1
  2781  012188  0E05               	movlw	low STR_16
  2782  01218A  6EE6               	movwf	postinc1,c
  2783  01218C  0EFF               	movlw	high STR_16
  2784  01218E  6EE6               	movwf	postinc1,c
  2785  012190  0E00               	movlw	0
  2786  012192  6EE6               	movwf	postinc1,c
  2787  012194  0E01               	movlw	1
  2788  012196  6EE6               	movwf	postinc1,c
  2789  012198  ECC2  F0C6         	call	_get_vterm_ptr	;wreg free
  2790  01219C  0060  F097  FFE6   	movff	btemp,postinc1
  2791  0121A2  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2792  0121A8  0E0C               	movlw	12
  2793  0121AA  6EE6               	movwf	postinc1,c
  2794  0121AC  EC82  F0B9         	call	_sprintf	;wreg free
  2795                           
  2796                           ;main.c: 294:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  2797  0121B0  0060  F503  FFE6   	movff	_C+64,postinc1
  2798  0121B6  0060  F507  FFE6   	movff	_C+65,postinc1
  2799  0121BC  0060  F50B  FFE6   	movff	_C+66,postinc1
  2800  0121C2  0060  F50F  FFE6   	movff	_C+67,postinc1
  2801  0121C8  0060  F423  FFE6   	movff	_C+8,postinc1
  2802  0121CE  0060  F427  FFE6   	movff	_C+9,postinc1
  2803  0121D4  0060  F42B  FFE6   	movff	_C+10,postinc1
  2804  0121DA  0060  F42F  FFE6   	movff	_C+11,postinc1
  2805  0121E0  0E18               	movlw	low STR_17
  2806  0121E2  6EE6               	movwf	postinc1,c
  2807  0121E4  0EFF               	movlw	high STR_17
  2808  0121E6  6EE6               	movwf	postinc1,c
  2809  0121E8  0E00               	movlw	0
  2810  0121EA  6EE6               	movwf	postinc1,c
  2811  0121EC  0E02               	movlw	2
  2812  0121EE  6EE6               	movwf	postinc1,c
  2813  0121F0  ECC2  F0C6         	call	_get_vterm_ptr	;wreg free
  2814  0121F4  0060  F097  FFE6   	movff	btemp,postinc1
  2815  0121FA  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2816  012200  0E0C               	movlw	12
  2817  012202  6EE6               	movwf	postinc1,c
  2818  012204  EC82  F0B9         	call	_sprintf	;wreg free
  2819                           
  2820                           ;main.c: 295:      break;
  2821  012208  D173               	goto	l11159
  2822  01220A                     l1359:
  2823                           
  2824                           ; BSR set to: 0
  2825                           ;main.c: 297:      V.calib = 0;
  2826  01220A  0102               	movlb	2	; () banked
  2827  01220C  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2828                           
  2829                           ; BSR set to: 2
  2830                           ;main.c: 298:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f    ", C.p_bat);
  2831  01220E  0060  F5D3  FFE6   	movff	_C+116,postinc1
  2832  012214  0060  F5D7  FFE6   	movff	_C+117,postinc1
  2833  01221A  0060  F5DB  FFE6   	movff	_C+118,postinc1
  2834  012220  0060  F5DF  FFE6   	movff	_C+119,postinc1
  2835  012226  0EF2               	movlw	low STR_18
  2836  012228  6EE6               	movwf	postinc1,c
  2837  01222A  0EFE               	movlw	high STR_18
  2838  01222C  6EE6               	movwf	postinc1,c
  2839  01222E  0E00               	movlw	0
  2840  012230  6EE6               	movwf	postinc1,c
  2841  012232  0E00               	movlw	0
  2842  012234  6EE6               	movwf	postinc1,c
  2843  012236  ECC2  F0C6         	call	_get_vterm_ptr	;wreg free
  2844  01223A  0060  F097  FFE6   	movff	btemp,postinc1
  2845  012240  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2846  012246  0E08               	movlw	8
  2847  012248  6EE6               	movwf	postinc1,c
  2848  01224A  EC82  F0B9         	call	_sprintf	;wreg free
  2849                           
  2850                           ;main.c: 299:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  2851  01224E  0060  F623  FFE6   	movff	_C+136,postinc1
  2852  012254  0060  F627  FFE6   	movff	_C+137,postinc1
  2853  01225A  0060  F62B  FFE6   	movff	_C+138,postinc1
  2854  012260  0060  F62F  FFE6   	movff	_C+139,postinc1
  2855  012266  0060  F613  FFE6   	movff	_C+132,postinc1
  2856  01226C  0060  F617  FFE6   	movff	_C+133,postinc1
  2857  012272  0060  F61B  FFE6   	movff	_C+134,postinc1
  2858  012278  0060  F61F  FFE6   	movff	_C+135,postinc1
  2859  01227E  0E59               	movlw	low STR_19
  2860  012280  6EE6               	movwf	postinc1,c
  2861  012282  0EFE               	movlw	high STR_19
  2862  012284  6EE6               	movwf	postinc1,c
  2863  012286  0E00               	movlw	0
  2864  012288  6EE6               	movwf	postinc1,c
  2865  01228A  0E01               	movlw	1
  2866  01228C  6EE6               	movwf	postinc1,c
  2867  01228E  ECC2  F0C6         	call	_get_vterm_ptr	;wreg free
  2868  012292  0060  F097  FFE6   	movff	btemp,postinc1
  2869  012298  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2870  01229E  0E0C               	movlw	12
  2871  0122A0  6EE6               	movwf	postinc1,c
  2872  0122A2  EC82  F0B9         	call	_sprintf	;wreg free
  2873                           
  2874                           ;main.c: 300:      sprintf(get_vterm_ptr(2, 0), "SOC %d RUN %d     ", C.soc, C.runtime);
  2875  0122A6  0060  F683  FFE6   	movff	_C+160,postinc1
  2876  0122AC  0060  F687  FFE6   	movff	_C+161,postinc1
  2877  0122B2  0060  F68B  FFE6   	movff	_C+162,postinc1
  2878  0122B8  0060  F68F  FFE6   	movff	_C+163,postinc1
  2879  0122BE  0EA6               	movlw	low STR_20
  2880  0122C0  6EE6               	movwf	postinc1,c
  2881  0122C2  0EFE               	movlw	high STR_20
  2882  0122C4  6EE6               	movwf	postinc1,c
  2883  0122C6  0E00               	movlw	0
  2884  0122C8  6EE6               	movwf	postinc1,c
  2885  0122CA  0E02               	movlw	2
  2886  0122CC  6EE6               	movwf	postinc1,c
  2887  0122CE  ECC2  F0C6         	call	_get_vterm_ptr	;wreg free
  2888  0122D2  0060  F097  FFE6   	movff	btemp,postinc1
  2889  0122D8  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2890  0122DE  0E08               	movlw	8
  2891  0122E0  6EE6               	movwf	postinc1,c
  2892  0122E2  EC82  F0B9         	call	_sprintf	;wreg free
  2893                           
  2894                           ;main.c: 301:      break;
  2895  0122E6  D104               	goto	l11159
  2896  0122E8                     l11143:
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;main.c: 303:      if (!V.calib) {
  2900  0122E8  0102               	movlb	2	; () banked
  2901  0122EA  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  2902  0122EC  A4D8               	btfss	status,2,c
  2903  0122EE  D02D               	goto	l11147
  2904                           
  2905                           ; BSR set to: 2
  2906                           ;main.c: 304:       lp_filter(0.0, i, -1);
  2907  0122F0  0EFF               	movlw	255
  2908  0122F2  6EE6               	movwf	postinc1,c
  2909                           
  2910                           ;stkvar	_i @ sp[(-6)+2]
  2911  0122F4  0EFC               	movlw	-4
  2912  0122F6  50E3               	movf	plusw1,w,c
  2913  0122F8  6EE6               	movwf	postinc1,c
  2914  0122FA  0E00               	movlw	0
  2915  0122FC  6EE6               	movwf	postinc1,c
  2916  0122FE  0E00               	movlw	0
  2917  012300  6EE6               	movwf	postinc1,c
  2918  012302  0E00               	movlw	0
  2919  012304  6EE6               	movwf	postinc1,c
  2920  012306  0E00               	movlw	0
  2921  012308  6EE6               	movwf	postinc1,c
  2922  01230A  EC6B  F0B2         	call	_lp_filter	;wreg free
  2923                           
  2924                           ;main.c: 305:       lp_filter(0.0, j, -1);
  2925  01230E  0EFF               	movlw	255
  2926  012310  6EE6               	movwf	postinc1,c
  2927                           
  2928                           ;stkvar	_j @ sp[(-6)+1]
  2929  012312  0EFB               	movlw	-5
  2930  012314  50E3               	movf	plusw1,w,c
  2931  012316  6EE6               	movwf	postinc1,c
  2932  012318  0E00               	movlw	0
  2933  01231A  6EE6               	movwf	postinc1,c
  2934  01231C  0E00               	movlw	0
  2935  01231E  6EE6               	movwf	postinc1,c
  2936  012320  0E00               	movlw	0
  2937  012322  6EE6               	movwf	postinc1,c
  2938  012324  0E00               	movlw	0
  2939  012326  6EE6               	movwf	postinc1,c
  2940  012328  EC6B  F0B2         	call	_lp_filter	;wreg free
  2941                           
  2942                           ;main.c: 306:       lp_filter(0.0, k, -1);
  2943  01232C  0EFF               	movlw	255
  2944  01232E  6EE6               	movwf	postinc1,c
  2945                           
  2946                           ;stkvar	_k @ sp[(-6)+0]
  2947  012330  0EFA               	movlw	-6
  2948  012332  50E3               	movf	plusw1,w,c
  2949  012334  6EE6               	movwf	postinc1,c
  2950  012336  0E00               	movlw	0
  2951  012338  6EE6               	movwf	postinc1,c
  2952  01233A  0E00               	movlw	0
  2953  01233C  6EE6               	movwf	postinc1,c
  2954  01233E  0E00               	movlw	0
  2955  012340  6EE6               	movwf	postinc1,c
  2956  012342  0E00               	movlw	0
  2957  012344  6EE6               	movwf	postinc1,c
  2958  012346  EC6B  F0B2         	call	_lp_filter	;wreg free
  2959  01234A                     l11147:
  2960                           
  2961                           ;main.c: 308:      V.calib = 1;
  2962  01234A  0E01               	movlw	1
  2963  01234C  0102               	movlb	2	; () banked
  2964  01234E  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  2965                           
  2966                           ; BSR set to: 2
  2967                           ;main.c: 309:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  2968  012350  0E02               	movlw	2
  2969  012352  6EE6               	movwf	postinc1,c
  2970  012354  EC6D  F0C7         	call	_get_switch	;wreg free
  2971  012358  5025               	movf	btemp^0,w,c
  2972  01235A  6EE6               	movwf	postinc1,c
  2973  01235C  0E00               	movlw	0
  2974  01235E  6EE6               	movwf	postinc1,c
  2975                           
  2976                           ;stkvar	_i @ sp[(-7)+2]
  2977  012360  0EFB               	movlw	-5
  2978  012362  50E3               	movf	plusw1,w,c
  2979  012364  0D04               	mullw	4
  2980  012366  0E00               	movlw	low _C
  2981  012368  24F3               	addwf	243,w,c
  2982  01236A  6ED9               	movwf	fsr2l,c
  2983  01236C  0E01               	movlw	high _C
  2984  01236E  20F4               	addwfc	prodh,w,c
  2985  012370  6EDA               	movwf	fsr2h,c
  2986  012372  006F FF7B FFE6     	movff	postinc2,postinc1
  2987  012378  006F FF7B FFE6     	movff	postinc2,postinc1
  2988  01237E  006F FF7B FFE6     	movff	postinc2,postinc1
  2989  012384  006F FF7B FFE6     	movff	postinc2,postinc1
  2990                           
  2991                           ;stkvar	_i @ sp[(-11)+2]
  2992  01238A  0EF7               	movlw	-9
  2993  01238C  50E3               	movf	plusw1,w,c
  2994  01238E  6EE6               	movwf	postinc1,c
  2995  012390  EC6F  F0C9         	call	_get_raw_result	;wreg free
  2996  012394  0060  F097  FFE6   	movff	btemp,postinc1
  2997  01239A  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2998  0123A0  0E93               	movlw	low STR_9
  2999  0123A2  6EE6               	movwf	postinc1,c
  3000  0123A4  0EFF               	movlw	high STR_9
  3001  0123A6  6EE6               	movwf	postinc1,c
  3002  0123A8  0E00               	movlw	0
  3003  0123AA  6EE6               	movwf	postinc1,c
  3004  0123AC  0E00               	movlw	0
  3005  0123AE  6EE6               	movwf	postinc1,c
  3006  0123B0  ECC2  F0C6         	call	_get_vterm_ptr	;wreg free
  3007  0123B4  0060  F097  FFE6   	movff	btemp,postinc1
  3008  0123BA  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3009  0123C0  0E0C               	movlw	12
  3010  0123C2  6EE6               	movwf	postinc1,c
  3011  0123C4  EC82  F0B9         	call	_sprintf	;wreg free
  3012                           
  3013                           ; BSR set to: 0
  3014                           ;main.c: 310:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  3015  0123C8  0E03               	movlw	3
  3016  0123CA  6EE6               	movwf	postinc1,c
  3017  0123CC  EC6D  F0C7         	call	_get_switch	;wreg free
  3018  0123D0  5025               	movf	btemp^0,w,c
  3019  0123D2  6EE6               	movwf	postinc1,c
  3020  0123D4  0E00               	movlw	0
  3021  0123D6  6EE6               	movwf	postinc1,c
  3022                           
  3023                           ;stkvar	_j @ sp[(-7)+1]
  3024  0123D8  0EFA               	movlw	-6
  3025  0123DA  50E3               	movf	plusw1,w,c
  3026  0123DC  0D04               	mullw	4
  3027  0123DE  0E00               	movlw	low _C
  3028  0123E0  24F3               	addwf	243,w,c
  3029  0123E2  6ED9               	movwf	fsr2l,c
  3030  0123E4  0E01               	movlw	high _C
  3031  0123E6  20F4               	addwfc	prodh,w,c
  3032  0123E8  6EDA               	movwf	fsr2h,c
  3033  0123EA  006F FF7B FFE6     	movff	postinc2,postinc1
  3034  0123F0  006F FF7B FFE6     	movff	postinc2,postinc1
  3035  0123F6  006F FF7B FFE6     	movff	postinc2,postinc1
  3036  0123FC  006F FF7B FFE6     	movff	postinc2,postinc1
  3037                           
  3038                           ;stkvar	_j @ sp[(-11)+1]
  3039  012402  0EF6               	movlw	-10
  3040  012404  50E3               	movf	plusw1,w,c
  3041  012406  6EE6               	movwf	postinc1,c
  3042  012408  EC6F  F0C9         	call	_get_raw_result	;wreg free
  3043  01240C  0060  F097  FFE6   	movff	btemp,postinc1
  3044  012412  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3045  012418  0E93               	movlw	low STR_9
  3046  01241A  6EE6               	movwf	postinc1,c
  3047  01241C  0EFF               	movlw	high STR_9
  3048  01241E  6EE6               	movwf	postinc1,c
  3049  012420  0E00               	movlw	0
  3050  012422  6EE6               	movwf	postinc1,c
  3051  012424  0E01               	movlw	1
  3052  012426  6EE6               	movwf	postinc1,c
  3053  012428  ECC2  F0C6         	call	_get_vterm_ptr	;wreg free
  3054  01242C  0060  F097  FFE6   	movff	btemp,postinc1
  3055  012432  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3056  012438  0E0C               	movlw	12
  3057  01243A  6EE6               	movwf	postinc1,c
  3058  01243C  EC82  F0B9         	call	_sprintf	;wreg free
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;main.c: 311:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  3062                           ;stkvar	_inp_index @ sp[(-5)+3]
  3063  012440  0EFE               	movlw	-2
  3064  012442  50E3               	movf	plusw1,w,c
  3065  012444  6E2F               	movwf	(btemp+10)^0,c
  3066  012446  6A30               	clrf	(btemp+11)^0,c
  3067  012448  0E01               	movlw	1
  3068  01244A  262F               	addwf	(btemp+10)^0,f,c
  3069  01244C  0E00               	movlw	0
  3070  01244E  2230               	addwfc	(btemp+11)^0,f,c
  3071  012450  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  3072  012456  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  3073                           
  3074                           ;stkvar	_k @ sp[(-7)+0]
  3075  01245C  0EF9               	movlw	-7
  3076  01245E  50E3               	movf	plusw1,w,c
  3077  012460  0D04               	mullw	4
  3078  012462  0E00               	movlw	low _C
  3079  012464  24F3               	addwf	243,w,c
  3080  012466  6ED9               	movwf	fsr2l,c
  3081  012468  0E01               	movlw	high _C
  3082  01246A  20F4               	addwfc	prodh,w,c
  3083  01246C  6EDA               	movwf	fsr2h,c
  3084  01246E  006F FF7B FFE6     	movff	postinc2,postinc1
  3085  012474  006F FF7B FFE6     	movff	postinc2,postinc1
  3086  01247A  006F FF7B FFE6     	movff	postinc2,postinc1
  3087  012480  006F FF7B FFE6     	movff	postinc2,postinc1
  3088                           
  3089                           ;stkvar	_k @ sp[(-11)+0]
  3090  012486  0EF5               	movlw	-11
  3091  012488  50E3               	movf	plusw1,w,c
  3092  01248A  6EE6               	movwf	postinc1,c
  3093  01248C  EC6F  F0C9         	call	_get_raw_result	;wreg free
  3094  012490  0060  F097  FFE6   	movff	btemp,postinc1
  3095  012496  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3096  01249C  0E82               	movlw	low STR_11
  3097  01249E  6EE6               	movwf	postinc1,c
  3098  0124A0  0EFF               	movlw	high STR_11
  3099  0124A2  6EE6               	movwf	postinc1,c
  3100  0124A4  0E00               	movlw	0
  3101  0124A6  6EE6               	movwf	postinc1,c
  3102  0124A8  0E02               	movlw	2
  3103  0124AA  6EE6               	movwf	postinc1,c
  3104  0124AC  ECC2  F0C6         	call	_get_vterm_ptr	;wreg free
  3105  0124B0  0060  F097  FFE6   	movff	btemp,postinc1
  3106  0124B6  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3107  0124BC  0E0C               	movlw	12
  3108  0124BE  6EE6               	movwf	postinc1,c
  3109  0124C0  EC82  F0B9         	call	_sprintf	;wreg free
  3110                           
  3111                           ;main.c: 312:      break;
  3112  0124C4  D015               	goto	l11159
  3113  0124C6                     l11157:
  3114  0124C6  0100               	movlb	0	; () banked
  3115  0124C8  51F2               	movf	_H& (0+255),w,b
  3116  0124CA  6E2F               	movwf	(btemp+10)^0,c
  3117  0124CC  6A30               	clrf	(btemp+11)^0,c
  3118                           
  3119                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3120                           ; Switch size 1, requested type "simple"
  3121                           ; Number of cases is 1, Range of values is 0 to 0
  3122                           ; switch strategies available:
  3123                           ; Name         Instructions Cycles
  3124                           ; simple_byte            4     3 (average)
  3125                           ;	Chosen strategy is simple_byte
  3126  0124CE  5030               	movf	(btemp+11)^0,w,c
  3127  0124D0  0A00               	xorlw	0	; case 0
  3128  0124D2  A4D8               	btfss	status,2,c
  3129  0124D4  D00D               	goto	l11159
  3130                           
  3131                           ; BSR set to: 0
  3132                           ; Switch size 1, requested type "simple"
  3133                           ; Number of cases is 4, Range of values is 0 to 3
  3134                           ; switch strategies available:
  3135                           ; Name         Instructions Cycles
  3136                           ; simple_byte           13     7 (average)
  3137                           ;	Chosen strategy is simple_byte
  3138  0124D6  502F               	movf	(btemp+10)^0,w,c
  3139  0124D8  0A00               	xorlw	0	; case 0
  3140  0124DA  B4D8               	btfsc	status,2,c
  3141  0124DC  D60F               	goto	l1358
  3142  0124DE  0A01               	xorlw	1	; case 1
  3143  0124E0  B4D8               	btfsc	status,2,c
  3144  0124E2  D5A9               	goto	l1356
  3145  0124E4  0A03               	xorlw	3	; case 2
  3146  0124E6  B4D8               	btfsc	status,2,c
  3147  0124E8  D690               	goto	l1359
  3148  0124EA  0A01               	xorlw	1	; case 3
  3149  0124EC  B4D8               	btfsc	status,2,c
  3150  0124EE  D6FC               	goto	l11143
  3151  0124F0                     l11159:
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;main.c: 316:     clear_hid_pflags(&H);
  3155  0124F0  0EF2               	movlw	_H& (0+255)
  3156  0124F2  6EE6               	movwf	postinc1,c
  3157  0124F4  ECD5  F0C8         	call	_clear_hid_pflags	;wreg free
  3158                           
  3159                           ;main.c: 318:    StartTimer(TMR_DISPLAY, 250);
  3160  0124F8  0EFA               	movlw	250
  3161  0124FA  6EE6               	movwf	postinc1,c
  3162  0124FC  0E00               	movlw	0
  3163  0124FE  6EE6               	movwf	postinc1,c
  3164  012500  0E0A               	movlw	10
  3165  012502  6EE6               	movwf	postinc1,c
  3166  012504  EC20  F0C5         	call	_StartTimer	;wreg free
  3167                           
  3168                           ;main.c: 319:    update_lcd(0);
  3169  012508  0E00               	movlw	0
  3170  01250A  6EE6               	movwf	postinc1,c
  3171  01250C  ECFA  F0B8         	call	_update_lcd	;wreg free
  3172  012510                     l11165:
  3173                           
  3174                           ;main.c: 325:   check_help(V.flipper);
  3175  012510  0102               	movlb	2	; () banked
  3176  012512  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  3177  012514  6EE6               	movwf	postinc1,c
  3178  012516  EC7C  F0AF         	call	_check_help	;wreg free
  3179                           
  3180                           ;main.c: 327:   if (check_enter_button(&H)) {
  3181  01251A  0EF2               	movlw	_H& (0+255)
  3182  01251C  6EE6               	movwf	postinc1,c
  3183  01251E  EC40  F0C5         	call	_check_enter_button	;wreg free
  3184  012522  5025               	movf	btemp^0,w,c
  3185  012524  B4D8               	btfsc	status,2,c
  3186  012526  D062               	goto	l1363
  3187                           
  3188                           ;main.c: 328:    V.calib = 0;
  3189  012528  0102               	movlb	2	; () banked
  3190  01252A  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3191                           
  3192                           ; BSR set to: 2
  3193                           ;main.c: 329:    inp_index += 3;
  3194                           ;stkvar	_inp_index @ sp[(-5)+3]
  3195  01252C  0EFE               	movlw	-2
  3196  01252E  006F FF8C  F025    	movff	plusw1,btemp
  3197  012534  0E03               	movlw	3
  3198  012536  2625               	addwf	btemp^0,f,c
  3199  012538  0EFE               	movlw	-2
  3200  01253A  0060  F097  FFE3   	movff	btemp,plusw1
  3201                           
  3202                           ;main.c: 330:    if (inp_index > 9)
  3203                           ;stkvar	_inp_index @ sp[(-5)+3]
  3204  012540  0EFE               	movlw	-2
  3205  012542  006F FF8C  F025    	movff	plusw1,btemp
  3206  012548  0E09               	movlw	9
  3207  01254A  6425               	cpfsgt	btemp^0,c
  3208  01254C  D03A               	goto	l11193
  3209                           
  3210                           ; BSR set to: 2
  3211                           ;main.c: 331:     inp_index = 0;
  3212                           ;stkvar	_inp_index @ sp[(-5)+3]
  3213  01254E  0EFE               	movlw	-2
  3214  012550  6AE3               	clrf	plusw1,c
  3215  012552  D037               	goto	l11193
  3216  012554                     l11175:
  3217                           
  3218                           ; BSR set to: 2
  3219                           ;main.c: 334:     i = C_BATT;
  3220                           ;stkvar	_i @ sp[(-5)+2]
  3221  012554  0EFD               	movlw	-3
  3222  012556  6AE3               	clrf	plusw1,c
  3223                           
  3224                           ; BSR set to: 2
  3225                           ;main.c: 335:     j = C_PV;
  3226                           ;stkvar	_j @ sp[(-5)+1]
  3227  012558  0EFC               	movlw	-4
  3228  01255A  6AE3               	clrf	plusw1,c
  3229  01255C  2AE3               	incf	plusw1,f,c
  3230                           
  3231                           ; BSR set to: 2
  3232                           ;main.c: 336:     k = V_CC;
  3233                           ;stkvar	_k @ sp[(-5)+0]
  3234  01255E  0EFB               	movlw	-5
  3235  012560  6AE3               	clrf	plusw1,c
  3236  012562  82E3               	bsf	plusw1,1,c
  3237                           
  3238                           ;main.c: 337:     break;
  3239  012564  D043               	goto	l1363
  3240  012566                     l11181:
  3241                           
  3242                           ; BSR set to: 2
  3243                           ;main.c: 339:     i = V_BAT;
  3244                           ;stkvar	_i @ sp[(-5)+2]
  3245  012566  0EFD               	movlw	-3
  3246  012568  6AE3               	clrf	plusw1,c
  3247  01256A  84E3               	bsf	plusw1,2,c
  3248                           
  3249                           ;main.c: 340:     j = V_PV;
  3250                           ;stkvar	_j @ sp[(-5)+1]
  3251  01256C  0EFC               	movlw	-4
  3252  01256E  6AE3               	clrf	plusw1,c
  3253  012570  80E3               	bsf	plusw1,0,c
  3254  012572  84E3               	bsf	plusw1,2,c	;indir
  3255                           
  3256                           ;main.c: 341:     k = V_CBUS;
  3257                           ;stkvar	_k @ sp[(-5)+0]
  3258  012574  0EFB               	movlw	-5
  3259  012576  6AE3               	clrf	plusw1,c
  3260  012578  82E3               	bsf	plusw1,1,c
  3261  01257A  84E3               	bsf	plusw1,2,c	;indir
  3262                           
  3263                           ;main.c: 342:     break;
  3264  01257C  D037               	goto	l1363
  3265  01257E                     l11183:
  3266                           
  3267                           ; BSR set to: 2
  3268                           ;main.c: 344:     i = V_BBAT;
  3269                           ;stkvar	_i @ sp[(-5)+2]
  3270  01257E  0EFD               	movlw	-3
  3271  012580  6AE3               	clrf	plusw1,c
  3272  012582  82E3               	bsf	plusw1,1,c
  3273  012584  86E3               	bsf	plusw1,3,c	;indir
  3274                           
  3275                           ; BSR set to: 2
  3276                           ;main.c: 345:     j = V_TEMP;
  3277  012586  0E0B               	movlw	11
  3278  012588  6E30               	movwf	(btemp+11)^0,c
  3279                           
  3280                           ;stkvar	_j @ sp[(-5)+1]
  3281  01258A  0EFC               	movlw	-4
  3282  01258C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  3283                           
  3284                           ; BSR set to: 2
  3285                           ;main.c: 346:     k = V_INVERTER;
  3286                           ;stkvar	_k @ sp[(-5)+0]
  3287  012592  0EFB               	movlw	-5
  3288  012594  6AE3               	clrf	plusw1,c
  3289  012596  84E3               	bsf	plusw1,2,c
  3290  012598  86E3               	bsf	plusw1,3,c	;indir
  3291                           
  3292                           ;main.c: 347:     break;
  3293  01259A  D028               	goto	l1363
  3294  01259C                     l11189:
  3295                           
  3296                           ; BSR set to: 2
  3297                           ;main.c: 349:     i = channel_ANB5;
  3298  01259C  0E0D               	movlw	13
  3299  01259E  6E30               	movwf	(btemp+11)^0,c
  3300                           
  3301                           ;stkvar	_i @ sp[(-5)+2]
  3302  0125A0  0EFD               	movlw	-3
  3303  0125A2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  3304                           
  3305                           ;main.c: 350:     j = channel_ANB5;
  3306  0125A8  0E0D               	movlw	13
  3307  0125AA  6E30               	movwf	(btemp+11)^0,c
  3308                           
  3309                           ;stkvar	_j @ sp[(-5)+1]
  3310  0125AC  0EFC               	movlw	-4
  3311  0125AE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  3312                           
  3313                           ;main.c: 351:     k = channel_ANB5;
  3314  0125B4  0E0D               	movlw	13
  3315  0125B6  6E30               	movwf	(btemp+11)^0,c
  3316                           
  3317                           ;stkvar	_k @ sp[(-5)+0]
  3318  0125B8  0EFB               	movlw	-5
  3319  0125BA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  3320                           
  3321                           ;main.c: 352:     break;
  3322  0125C0  D015               	goto	l1363
  3323  0125C2                     l11193:
  3324                           
  3325                           ; BSR set to: 2
  3326                           ;stkvar	_inp_index @ sp[(-5)+3]
  3327  0125C2  0EFE               	movlw	-2
  3328  0125C4  50E3               	movf	plusw1,w,c
  3329  0125C6  6E2F               	movwf	(btemp+10)^0,c
  3330  0125C8  6A30               	clrf	(btemp+11)^0,c
  3331                           
  3332                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3333                           ; Switch size 1, requested type "simple"
  3334                           ; Number of cases is 1, Range of values is 0 to 0
  3335                           ; switch strategies available:
  3336                           ; Name         Instructions Cycles
  3337                           ; simple_byte            4     3 (average)
  3338                           ;	Chosen strategy is simple_byte
  3339  0125CA  5030               	movf	(btemp+11)^0,w,c
  3340  0125CC  0A00               	xorlw	0	; case 0
  3341  0125CE  A4D8               	btfss	status,2,c
  3342  0125D0  D00D               	goto	l1363
  3343                           
  3344                           ; BSR set to: 2
  3345                           ; Switch size 1, requested type "simple"
  3346                           ; Number of cases is 4, Range of values is 0 to 9
  3347                           ; switch strategies available:
  3348                           ; Name         Instructions Cycles
  3349                           ; simple_byte           13     7 (average)
  3350                           ;	Chosen strategy is simple_byte
  3351  0125D2  502F               	movf	(btemp+10)^0,w,c
  3352  0125D4  0A00               	xorlw	0	; case 0
  3353  0125D6  B4D8               	btfsc	status,2,c
  3354  0125D8  D7BD               	goto	l11175
  3355  0125DA  0A03               	xorlw	3	; case 3
  3356  0125DC  B4D8               	btfsc	status,2,c
  3357  0125DE  D7C3               	goto	l11181
  3358  0125E0  0A05               	xorlw	5	; case 6
  3359  0125E2  B4D8               	btfsc	status,2,c
  3360  0125E4  D7CC               	goto	l11183
  3361  0125E6  0A0F               	xorlw	15	; case 9
  3362  0125E8  B4D8               	btfsc	status,2,c
  3363  0125EA  D7D8               	goto	l11189
  3364  0125EC                     l1363:
  3365                           
  3366                           ;main.c: 361:   if (V.set_sequ) {
  3367  0125EC  0102               	movlb	2	; () banked
  3368  0125EE  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  3369  0125F0  D4D8               	goto	l11109
  3370                           
  3371                           ; BSR set to: 2
  3372                           ;main.c: 362:    if (TimerDone(TMR_INFO)) {
  3373  0125F2  0E07               	movlw	7
  3374  0125F4  6EE6               	movwf	postinc1,c
  3375  0125F6  EC81  F0C7         	call	_TimerDone	;wreg free
  3376  0125FA  5025               	movf	btemp^0,w,c
  3377  0125FC  B4D8               	btfsc	status,2,c
  3378  0125FE  D00B               	goto	l11203
  3379                           
  3380                           ;main.c: 363:     V.set_sequ = 0;
  3381  012600  0102               	movlb	2	; () banked
  3382  012602  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  3383                           
  3384                           ; BSR set to: 2
  3385                           ;main.c: 364:     set_vterm(0);
  3386  012604  0E00               	movlw	0
  3387  012606  6EE6               	movwf	postinc1,c
  3388  012608  EC7E  F0C9         	call	_set_vterm	;wreg free
  3389                           
  3390                           ;main.c: 365:     update_lcd(0);
  3391  01260C  0E00               	movlw	0
  3392  01260E  6EE6               	movwf	postinc1,c
  3393  012610  ECFA  F0B8         	call	_update_lcd	;wreg free
  3394                           
  3395                           ;main.c: 366:    } else {
  3396  012614  D4C6               	goto	l11109
  3397  012616                     l11203:
  3398                           
  3399                           ;main.c: 367:     set_vterm(2);
  3400  012616  0E02               	movlw	2
  3401  012618  6EE6               	movwf	postinc1,c
  3402  01261A  EC7E  F0C9         	call	_set_vterm	;wreg free
  3403                           
  3404                           ;main.c: 368:     update_lcd(2);
  3405  01261E  0E02               	movlw	2
  3406  012620  6EE6               	movwf	postinc1,c
  3407  012622  ECFA  F0B8         	call	_update_lcd	;wreg free
  3408  012626  D4BD               	goto	l11109
  3409  012628                     __end_of_main:
  3410                           	opt callstack 0
  3411                           
  3412 ;; *************** function _static_soc *****************
  3413 ;; Defined at:
  3414 ;;		line 84 in file "mbmc.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;		None
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;		None
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  1  [STACK] void 
  3421 ;; Registers used:
  3422 ;;		wreg, status,2
  3423 ;; Tracked objects:
  3424 ;;		On entry : 3F/39
  3425 ;;		On exit  : 3F/1
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3432 ;;Total ram usage:        0 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; Hardware stack levels required when called:    7
  3435 ;; This function calls:
  3436 ;;		Nothing
  3437 ;; This function is called by:
  3438 ;;		_main
  3439 ;; This function uses a reentrant model
  3440 ;;
  3441                           
  3442                           	psect	text1
  3443  018C58                     __ptext1:
  3444                           	opt callstack 0
  3445  018C58                     _static_soc:
  3446                           	opt callstack 23
  3447                           
  3448                           ;mbmc.c: 86:  C.static_ah = C.bank_ah;
  3449                           
  3450                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3451                           ;incstack = 0
  3452  018C58  C17C  F180         	movff	_C+124,_C+128	;volatile
  3453  018C5C  C17D  F181         	movff	_C+125,_C+129	;volatile
  3454  018C60  C17E  F182         	movff	_C+126,_C+130	;volatile
  3455  018C64  C17F  F183         	movff	_C+127,_C+131	;volatile
  3456                           
  3457                           ;mbmc.c: 87:  C.runtime = 120;
  3458  018C68  0E00               	movlw	0
  3459  018C6A  0101               	movlb	1	; () banked
  3460  018C6C  6FA1               	movwf	(_C+161)& (0+255),b	;volatile
  3461  018C6E  0E78               	movlw	120
  3462  018C70  6FA0               	movwf	(_C+160)& (0+255),b	;volatile
  3463                           
  3464                           ;mbmc.c: 88:  C.soc = 100;
  3465  018C72  0E00               	movlw	0
  3466  018C74  6FA3               	movwf	(_C+163)& (0+255),b	;volatile
  3467  018C76  0E64               	movlw	100
  3468  018C78  6FA2               	movwf	(_C+162)& (0+255),b	;volatile
  3469                           
  3470                           ; BSR set to: 1
  3471                           ;mbmc.c: 89:  C.dynamic_ah = C.static_ah;
  3472  018C7A  C180  F184         	movff	_C+128,_C+132	;volatile
  3473  018C7E  C181  F185         	movff	_C+129,_C+133	;volatile
  3474  018C82  C182  F186         	movff	_C+130,_C+134	;volatile
  3475  018C86  C183  F187         	movff	_C+131,_C+135	;volatile
  3476                           
  3477                           ; BSR set to: 1
  3478                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  3479  018C8A  0012               	return		;funcret
  3480  018C8C                     __end_of_static_soc:
  3481                           	opt callstack 0
  3482                           
  3483 ;; *************** function _start_switch_handler *****************
  3484 ;; Defined at:
  3485 ;;		line 119 in file "dio.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;		None
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;		None
  3490 ;; Return value:  Size  Location     Type
  3491 ;;                  1  [STACK] void 
  3492 ;; Registers used:
  3493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  3494 ;; Tracked objects:
  3495 ;;		On entry : 1/0
  3496 ;;		On exit  : 3F/39
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3503 ;;Total ram usage:        0 bytes
  3504 ;; Hardware stack levels used:    1
  3505 ;; Hardware stack levels required when called:    8
  3506 ;; This function calls:
  3507 ;;		_INT1_SetInterruptHandler
  3508 ;; This function is called by:
  3509 ;;		_main
  3510 ;; This function uses a reentrant model
  3511 ;;
  3512                           
  3513                           	psect	text2
  3514  0192A0                     __ptext2:
  3515                           	opt callstack 0
  3516  0192A0                     _start_switch_handler:
  3517                           	opt callstack 22
  3518                           
  3519                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  3520                           
  3521                           ; BSR set to: 1
  3522                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3523                           ;incstack = 0
  3524  0192A0  0139               	movlb	57	; () banked
  3525  0192A2  9195               	bcf	149,0,b	;volatile
  3526                           
  3527                           ; BSR set to: 57
  3528                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  3529  0192A4  0E7C               	movlw	low _switch_handler
  3530  0192A6  6EE6               	movwf	postinc1,c
  3531  0192A8  0E6D               	movlw	high _switch_handler
  3532  0192AA  6EE6               	movwf	postinc1,c
  3533  0192AC  0E01               	movlw	low (_switch_handler shr (0+16))
  3534  0192AE  6EE6               	movwf	postinc1,c
  3535  0192B0  EC21  F0C8         	call	_INT1_SetInterruptHandler	;wreg free
  3536                           
  3537                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  3538  0192B4  0E02               	movlw	2
  3539  0192B6  0100               	movlb	0	; () banked
  3540  0192B8  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  3544  0192BA  0139               	movlb	57	; () banked
  3545  0192BC  8195               	bsf	149,0,b	;volatile
  3546                           
  3547                           ; BSR set to: 57
  3548                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  3549  0192BE  0012               	return		;funcret
  3550  0192C0                     __end_of_start_switch_handler:
  3551                           	opt callstack 0
  3552                           
  3553 ;; *************** function _start_adc_scan *****************
  3554 ;; Defined at:
  3555 ;;		line 33 in file "daq.c"
  3556 ;; Parameters:    Size  Location     Type
  3557 ;;		None
  3558 ;; Auto vars:     Size  Location     Type
  3559 ;;		None
  3560 ;; Return value:  Size  Location     Type
  3561 ;;                  1  [STACK] _Bool 
  3562 ;; Registers used:
  3563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 1/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3573 ;;Total ram usage:        0 bytes
  3574 ;; Hardware stack levels used:    1
  3575 ;; Hardware stack levels required when called:    8
  3576 ;; This function calls:
  3577 ;;		_ADCC_DischargeSampleCapacitor
  3578 ;;		_ADCC_SetADIInterruptHandler
  3579 ;;		_ADCC_SetADTIInterruptHandler
  3580 ;;		_ADCC_StartConversion
  3581 ;; This function is called by:
  3582 ;;		_main
  3583 ;; This function uses a reentrant model
  3584 ;;
  3585                           
  3586                           	psect	text3
  3587  018426                     __ptext3:
  3588                           	opt callstack 0
  3589  018426                     _start_adc_scan:
  3590                           	opt callstack 22
  3591                           
  3592                           ;daq.c: 35:  if (R.done)
  3593                           
  3594                           ; BSR set to: 57
  3595                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3596                           ;incstack = 0
  3597  018426  0100               	movlb	0	; () banked
  3598  018428  51EA               	movf	(_R+39)& (0+255),w,b	;volatile
  3599  01842A  A4D8               	btfss	status,2,c
  3600  01842C  0012               	return	
  3601                           
  3602                           ; BSR set to: 0
  3603                           ;daq.c: 38:  R.scan_index = 0;
  3604  01842E  6BE7               	clrf	(_R+36)& (0+255),b	;volatile
  3605                           
  3606                           ; BSR set to: 0
  3607                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  3608  018430  013A               	movlb	58	; () banked
  3609  018432  5140               	movf	64,w,b	;volatile
  3610  018434  006E F940  F025    	movff	14928,btemp	;volatile
  3611  01843A  6A26               	clrf	(btemp+1)^0,c
  3612  01843C  0060  F094  F026   	movff	btemp,btemp+1
  3613  018442  6A25               	clrf	btemp^0,c
  3614  018444  2625               	addwf	btemp^0,f,c
  3615  018446  0E00               	movlw	0
  3616  018448  2226               	addwfc	(btemp+1)^0,f,c
  3617  01844A  0E77               	movlw	119
  3618  01844C  1425               	andwf	btemp^0,w,c
  3619  01844E  0100               	movlb	0	; () banked
  3620  018450  6FE8               	movwf	(_R+37)& (0+255),b	;volatile
  3621  018452  0E3C               	movlw	60
  3622  018454  1426               	andwf	(btemp+1)^0,w,c
  3623  018456  6FE9               	movwf	(_R+38)& (0+255),b	;volatile
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  3627  018458  0E36               	movlw	low _adc_int_handler
  3628  01845A  6EE6               	movwf	postinc1,c
  3629  01845C  0E95               	movlw	high _adc_int_handler
  3630  01845E  6EE6               	movwf	postinc1,c
  3631  018460  0E01               	movlw	low (_adc_int_handler shr (0+16))
  3632  018462  6EE6               	movwf	postinc1,c
  3633  018464  EC5D  F0C8         	call	_ADCC_SetADIInterruptHandler	;wreg free
  3634                           
  3635                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  3636  018468  0E02               	movlw	low _adc_int_t_handler
  3637  01846A  6EE6               	movwf	postinc1,c
  3638  01846C  0E82               	movlw	high _adc_int_t_handler
  3639  01846E  6EE6               	movwf	postinc1,c
  3640  018470  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  3641  018472  6EE6               	movwf	postinc1,c
  3642  018474  EC49  F0C8         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  3643                           
  3644                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  3645  018478  EC73  F0CA         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  3646                           
  3647                           ; BSR set to: 62
  3648                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  3649  01847C  0100               	movlb	0	; () banked
  3650  01847E  51E7               	movf	(_R+36)& (0+255),w,b	;volatile
  3651  018480  0B0F               	andlw	15
  3652  018482  6EE6               	movwf	postinc1,c
  3653  018484  EC26  F0CA         	call	_ADCC_StartConversion	;wreg free
  3654                           
  3655                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  3656  018488  0012               	return		;funcret
  3657  01848A                     __end_of_start_adc_scan:
  3658                           	opt callstack 0
  3659                           
  3660 ;; *************** function _ADCC_StartConversion *****************
  3661 ;; Defined at:
  3662 ;;		line 128 in file "mcc_generated_files/adcc.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  channel         1  [STACK] enum E16136
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;		None
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  1  [STACK] void 
  3669 ;; Registers used:
  3670 ;;		fsr1l, fsr1h
  3671 ;; Tracked objects:
  3672 ;;		On entry : 3F/0
  3673 ;;		On exit  : 3F/3E
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3680 ;;Total ram usage:        0 bytes
  3681 ;; Hardware stack levels used:    1
  3682 ;; Hardware stack levels required when called:    7
  3683 ;; This function calls:
  3684 ;;		Nothing
  3685 ;; This function is called by:
  3686 ;;		_start_adc_scan
  3687 ;;		_adc_int_t_handler
  3688 ;; This function uses a reentrant model
  3689 ;;
  3690                           
  3691                           	psect	text4
  3692  01944C                     __ptext4:
  3693                           	opt callstack 0
  3694  01944C                     _ADCC_StartConversion:
  3695                           	opt callstack 4
  3696                           
  3697                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  3698                           ;stkvar	_channel @ sp[(0)+-1]
  3699                           
  3700                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3701                           ;incstack = 0
  3702  01944C  0EFF               	movlw	-1
  3703  01944E  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  3704                           
  3705                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  3706  019454  013E               	movlb	62	; () banked
  3707  019456  8FF8               	bsf	248,7,b	;volatile
  3708                           
  3709                           ; BSR set to: 62
  3710                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  3711  019458  81F8               	bsf	248,0,b	;volatile
  3712                           
  3713                           ; BSR set to: 62
  3714                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  3715  01945A  52E5               	movf	postdec1,f,c
  3716  01945C  0012               	return		;funcret
  3717  01945E                     __end_of_ADCC_StartConversion:
  3718                           	opt callstack 0
  3719                           
  3720 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  3721 ;; Defined at:
  3722 ;;		line 189 in file "mcc_generated_files/adcc.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;		None
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;		None
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  1  [STACK] void 
  3729 ;; Registers used:
  3730 ;;		wreg, status,2
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 3F/3E
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3740 ;;Total ram usage:        0 bytes
  3741 ;; Hardware stack levels used:    1
  3742 ;; Hardware stack levels required when called:    7
  3743 ;; This function calls:
  3744 ;;		Nothing
  3745 ;; This function is called by:
  3746 ;;		_start_adc_scan
  3747 ;;		_adc_int_t_handler
  3748 ;; This function uses a reentrant model
  3749 ;;
  3750                           
  3751                           	psect	text5
  3752  0194E6                     __ptext5:
  3753                           	opt callstack 0
  3754  0194E6                     _ADCC_DischargeSampleCapacitor:
  3755                           	opt callstack 4
  3756                           
  3757                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  3758                           
  3759                           ; BSR set to: 62
  3760                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3761                           ;incstack = 0
  3762  0194E6  0E3B               	movlw	59
  3763  0194E8  013E               	movlb	62	; () banked
  3764  0194EA  6FF1               	movwf	241,b	;volatile
  3765                           
  3766                           ; BSR set to: 62
  3767                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  3768  0194EC  0012               	return		;funcret
  3769  0194EE                     __end_of_ADCC_DischargeSampleCapacitor:
  3770                           	opt callstack 0
  3771                           
  3772 ;; *************** function _srand *****************
  3773 ;; Defined at:
  3774 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  3775 ;; Parameters:    Size  Location     Type
  3776 ;;  s               2  [STACK] unsigned int 
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;		None
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  1  [STACK] void 
  3781 ;; Registers used:
  3782 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  3783 ;; Tracked objects:
  3784 ;;		On entry : 3F/0
  3785 ;;		On exit  : 3F/1
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3792 ;;Total ram usage:        0 bytes
  3793 ;; Hardware stack levels used:    1
  3794 ;; Hardware stack levels required when called:    7
  3795 ;; This function calls:
  3796 ;;		Nothing
  3797 ;; This function is called by:
  3798 ;;		_main
  3799 ;; This function uses a reentrant model
  3800 ;;
  3801                           
  3802                           	psect	text6
  3803  018C8C                     __ptext6:
  3804                           	opt callstack 0
  3805  018C8C                     _srand:
  3806                           	opt callstack 23
  3807                           
  3808                           ;stkvar	_s @ sp[(0)+-2]
  3809                           
  3810                           ; BSR set to: 62
  3811                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3812                           ;incstack = 0
  3813  018C8C  0EFE               	movlw	-2
  3814  018C8E  50E3               	movf	plusw1,w,c
  3815  018C90  0FFF               	addlw	255
  3816  018C92  6E2F               	movwf	(btemp+10)^0,c
  3817  018C94  0EFF               	movlw	-1
  3818  018C96  006F FF8C  F030    	movff	plusw1,btemp+11
  3819  018C9C  0EFF               	movlw	255
  3820  018C9E  2230               	addwfc	(btemp+11)^0,f,c
  3821  018CA0  0060  F0BC  F1CD   	movff	btemp+10,_seed
  3822  018CA6  0060  F0C0  F1CE   	movff	btemp+11,_seed+1
  3823  018CAC  0101               	movlb	1	; () banked
  3824  018CAE  6BCF               	clrf	(_seed+2)& (0+255),b
  3825  018CB0  6BD0               	clrf	(_seed+3)& (0+255),b
  3826  018CB2  6BD1               	clrf	(_seed+4)& (0+255),b
  3827  018CB4  6BD2               	clrf	(_seed+5)& (0+255),b
  3828  018CB6  6BD3               	clrf	(_seed+6)& (0+255),b
  3829  018CB8  6BD4               	clrf	(_seed+7)& (0+255),b
  3830                           
  3831                           ; BSR set to: 1
  3832                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  3833  018CBA  52E5               	movf	postdec1,f,c
  3834  018CBC  52E5               	movf	postdec1,f,c
  3835  018CBE  0012               	return		;funcret
  3836  018CC0                     __end_of_srand:
  3837                           	opt callstack 0
  3838                           
  3839 ;; *************** function _init_display *****************
  3840 ;; Defined at:
  3841 ;;		line 37 in file "eadog.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;		None
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;		None
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  1  [STACK] void 
  3848 ;; Registers used:
  3849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/2
  3852 ;;		On exit  : 3F/3D
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3859 ;;Total ram usage:        0 bytes
  3860 ;; Hardware stack levels used:    1
  3861 ;; Hardware stack levels required when called:    9
  3862 ;; This function calls:
  3863 ;;		_ringBufS_init
  3864 ;;		_send_lcd_cmd
  3865 ;;		_send_lcd_cmd_long
  3866 ;;		_wdtdelay
  3867 ;; This function is called by:
  3868 ;;		_main
  3869 ;; This function uses a reentrant model
  3870 ;;
  3871                           
  3872                           	psect	text7
  3873  01760C                     __ptext7:
  3874                           	opt callstack 0
  3875  01760C                     _init_display:
  3876                           	opt callstack 21
  3877                           
  3878                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  3879                           
  3880                           ; BSR set to: 1
  3881                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3882                           ;incstack = 0
  3883  01760C  0E43               	movlw	low _ring_buf1
  3884  01760E  0100               	movlb	0	; () banked
  3885  017610  6F8F               	movwf	(_spi_link+6)& (0+255),b	;volatile
  3886  017612  0E04               	movlw	high _ring_buf1
  3887  017614  6F90               	movwf	(_spi_link+7)& (0+255),b	;volatile
  3888                           
  3889                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  3890  017616  0E00               	movlw	low _ring_buf2
  3891  017618  6F8D               	movwf	(_spi_link+4)& (0+255),b	;volatile
  3892  01761A  0E04               	movlw	high _ring_buf2
  3893  01761C  6F8E               	movwf	(_spi_link+5)& (0+255),b	;volatile
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  3897  01761E  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  3898  017624  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  3899  01762A  EC59  F0C7         	call	_ringBufS_init	;wreg free
  3900                           
  3901                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  3902  01762E  0060  F237  FFE6   	movff	_spi_link+4,postinc1
  3903  017634  0060  F23B  FFE6   	movff	_spi_link+5,postinc1
  3904  01763A  EC59  F0C7         	call	_ringBufS_init	;wreg free
  3905                           
  3906                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  3907  01763E  84BE               	bsf	190,2,c	;volatile
  3908  017640  84BC               	bsf	188,2,c	;volatile
  3909                           
  3910                           ;eadog.c: 58:  wdtdelay(350000);
  3911  017642  0E30               	movlw	48
  3912  017644  6EE6               	movwf	postinc1,c
  3913  017646  0E57               	movlw	87
  3914  017648  6EE6               	movwf	postinc1,c
  3915  01764A  0E05               	movlw	5
  3916  01764C  6EE6               	movwf	postinc1,c
  3917  01764E  0E00               	movlw	0
  3918  017650  6EE6               	movwf	postinc1,c
  3919  017652  EC08  F0C3         	call	_wdtdelay	;wreg free
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;eadog.c: 59:  send_lcd_cmd(0x39);
  3923  017656  0E39               	movlw	57
  3924  017658  6EE6               	movwf	postinc1,c
  3925  01765A  EC45  F0C7         	call	_send_lcd_cmd	;wreg free
  3926                           
  3927                           ; BSR set to: 0
  3928                           ;eadog.c: 60:  send_lcd_cmd(0x1d);
  3929  01765E  0E1D               	movlw	29
  3930  017660  6EE6               	movwf	postinc1,c
  3931  017662  EC45  F0C7         	call	_send_lcd_cmd	;wreg free
  3932                           
  3933                           ; BSR set to: 0
  3934                           ;eadog.c: 61:  send_lcd_cmd(0x50);
  3935  017666  0E50               	movlw	80
  3936  017668  6EE6               	movwf	postinc1,c
  3937  01766A  EC45  F0C7         	call	_send_lcd_cmd	;wreg free
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;eadog.c: 62:  send_lcd_cmd(0x6c);
  3941  01766E  0E6C               	movlw	108
  3942  017670  6EE6               	movwf	postinc1,c
  3943  017672  EC45  F0C7         	call	_send_lcd_cmd	;wreg free
  3944                           
  3945                           ; BSR set to: 0
  3946                           ;eadog.c: 63:  send_lcd_cmd(0x76);
  3947  017676  0E76               	movlw	118
  3948  017678  6EE6               	movwf	postinc1,c
  3949  01767A  EC45  F0C7         	call	_send_lcd_cmd	;wreg free
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;eadog.c: 64:  send_lcd_cmd_long(0x38);
  3953  01767E  0E38               	movlw	56
  3954  017680  6EE6               	movwf	postinc1,c
  3955  017682  EC31  F0C7         	call	_send_lcd_cmd_long	;wreg free
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;eadog.c: 65:  send_lcd_cmd(0x0f);
  3959  017686  0E0F               	movlw	15
  3960  017688  6EE6               	movwf	postinc1,c
  3961  01768A  EC45  F0C7         	call	_send_lcd_cmd	;wreg free
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;eadog.c: 66:  send_lcd_cmd_long(0x01);
  3965  01768E  0E01               	movlw	1
  3966  017690  6EE6               	movwf	postinc1,c
  3967  017692  EC31  F0C7         	call	_send_lcd_cmd_long	;wreg free
  3968                           
  3969                           ; BSR set to: 0
  3970                           ;eadog.c: 67:  send_lcd_cmd(0x02);
  3971  017696  0E02               	movlw	2
  3972  017698  6EE6               	movwf	postinc1,c
  3973  01769A  EC45  F0C7         	call	_send_lcd_cmd	;wreg free
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;eadog.c: 68:  send_lcd_cmd(0x06);
  3977  01769E  0E06               	movlw	6
  3978  0176A0  6EE6               	movwf	postinc1,c
  3979  0176A2  EC45  F0C7         	call	_send_lcd_cmd	;wreg free
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;eadog.c: 69:  wdtdelay(30);
  3983  0176A6  0E1E               	movlw	30
  3984  0176A8  6EE6               	movwf	postinc1,c
  3985  0176AA  0E00               	movlw	0
  3986  0176AC  6EE6               	movwf	postinc1,c
  3987  0176AE  0E00               	movlw	0
  3988  0176B0  6EE6               	movwf	postinc1,c
  3989  0176B2  0E00               	movlw	0
  3990  0176B4  6EE6               	movwf	postinc1,c
  3991  0176B6  EC08  F0C3         	call	_wdtdelay	;wreg free
  3992                           
  3993                           ; BSR set to: 0
  3994                           ;eadog.c: 70:  SPI1CON2 = 0x02;
  3995  0176BA  0E02               	movlw	2
  3996  0176BC  013D               	movlb	61	; () banked
  3997  0176BE  6F16               	movwf	22,b	;volatile
  3998                           
  3999                           ; BSR set to: 61
  4000                           ;eadog.c: 71:  SPI1CON1 = 0x40;
  4001  0176C0  0E40               	movlw	64
  4002  0176C2  6F15               	movwf	21,b	;volatile
  4003                           
  4004                           ; BSR set to: 61
  4005                           ;eadog.c: 72:  SPI1CON0 = 0x83;
  4006  0176C4  0E83               	movlw	131
  4007  0176C6  6F14               	movwf	20,b	;volatile
  4008                           
  4009                           ; BSR set to: 61
  4010                           ;eadog.c: 74:  SPI1INTFbits.SPI1TXUIF = 0;
  4011  0176C8  931A               	bcf	26,1,b	;volatile
  4012                           
  4013                           ; BSR set to: 61
  4014                           ;eadog.c: 75:  DMA1CON1bits.DMODE = 0;
  4015  0176CA  0E3F               	movlw	-193
  4016  0176CC  013B               	movlb	59	; () banked
  4017  0176CE  17FD               	andwf	253,f,b	;volatile
  4018                           
  4019                           ; BSR set to: 59
  4020                           ;eadog.c: 76:  DMA1CON1bits.DSTP = 0;
  4021  0176D0  9BFD               	bcf	253,5,b	;volatile
  4022                           
  4023                           ; BSR set to: 59
  4024                           ;eadog.c: 77:  DMA1CON1bits.SMODE = 1;
  4025  0176D2  51FD               	movf	253,w,b	;volatile
  4026  0176D4  0BF9               	andlw	-7
  4027  0176D6  0902               	iorlw	2
  4028  0176D8  6FFD               	movwf	253,b	;volatile
  4029                           
  4030                           ; BSR set to: 59
  4031                           ;eadog.c: 78:  DMA1CON1bits.SMR = 0;
  4032  0176DA  0EE7               	movlw	-25
  4033  0176DC  17FD               	andwf	253,f,b	;volatile
  4034                           
  4035                           ; BSR set to: 59
  4036                           ;eadog.c: 79:  DMA1CON1bits.SSTP = 1;
  4037  0176DE  81FD               	bsf	253,0,b	;volatile
  4038                           
  4039                           ; BSR set to: 59
  4040                           ;eadog.c: 80:  DMA1SSA = (uint32_t) & ring_buf1;
  4041  0176E0  0E43               	movlw	low _ring_buf1
  4042  0176E2  6FF9               	movwf	249,b	;volatile
  4043  0176E4  0E04               	movlw	high _ring_buf1
  4044  0176E6  6FFA               	movwf	250,b	;volatile
  4045  0176E8  0E00               	movlw	low (_ring_buf1 shr (0+16))
  4046  0176EA  6FFB               	movwf	251,b	;volatile
  4047                           
  4048                           ; BSR set to: 59
  4049                           ;eadog.c: 81:  DMA1CON0bits.DGO = 0;
  4050  0176EC  9BFC               	bcf	252,5,b	;volatile
  4051                           
  4052                           ; BSR set to: 59
  4053                           ;eadog.c: 82:  SPI1INTFbits.SPI1TXUIF = 1;
  4054  0176EE  013D               	movlb	61	; () banked
  4055  0176F0  831A               	bsf	26,1,b	;volatile
  4056                           
  4057                           ; BSR set to: 61
  4058                           ;eadog.c: 83:  LATEbits.LATE2 = 0;
  4059  0176F2  94BE               	bcf	190,2,c	;volatile
  4060                           
  4061                           ; BSR set to: 61
  4062                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  4063  0176F4  0012               	return		;funcret
  4064  0176F6                     __end_of_init_display:
  4065                           	opt callstack 0
  4066                           
  4067 ;; *************** function _send_lcd_cmd_long *****************
  4068 ;; Defined at:
  4069 ;;		line 127 in file "eadog.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;  cmd             1  [STACK] const unsigned char 
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;		None
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  1  [STACK] void 
  4076 ;; Registers used:
  4077 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4078 ;; Tracked objects:
  4079 ;;		On entry : 3F/0
  4080 ;;		On exit  : 3F/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4087 ;;Total ram usage:        0 bytes
  4088 ;; Hardware stack levels used:    1
  4089 ;; Hardware stack levels required when called:    8
  4090 ;; This function calls:
  4091 ;;		_SPI1_Exchange8bit
  4092 ;;		_wdtdelay
  4093 ;; This function is called by:
  4094 ;;		_init_display
  4095 ;; This function uses a reentrant model
  4096 ;;
  4097                           
  4098                           	psect	text8
  4099  018E62                     __ptext8:
  4100                           	opt callstack 0
  4101  018E62                     _send_lcd_cmd_long:
  4102                           	opt callstack 21
  4103                           
  4104                           ; BSR set to: 61
  4105                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4106                           ;incstack = 0
  4107                           ;eadog.c: 127: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 128: {;eadog.c:
      +                           129:  do { LATCbits.LATC1 = 0; } while(0);
  4108  018E62  92BC               	bcf	188,1,c	;volatile
  4109                           
  4110                           ;eadog.c: 130:  do { LATCbits.LATC2 = 0; } while(0);
  4111  018E64  94BC               	bcf	188,2,c	;volatile
  4112                           
  4113                           ;eadog.c: 131:  SPI1_Exchange8bit(cmd);
  4114                           ;stkvar	_cmd @ sp[(0)+-1]
  4115  018E66  0EFF               	movlw	-1
  4116  018E68  50E3               	movf	plusw1,w,c
  4117  018E6A  6EE6               	movwf	postinc1,c
  4118  018E6C  EC60  F0C9         	call	_SPI1_Exchange8bit	;wreg free
  4119                           
  4120                           ; BSR set to: 57
  4121                           ;eadog.c: 132:  wdtdelay(800);
  4122  018E70  0E20               	movlw	32
  4123  018E72  6EE6               	movwf	postinc1,c
  4124  018E74  0E03               	movlw	3
  4125  018E76  6EE6               	movwf	postinc1,c
  4126  018E78  0E00               	movlw	0
  4127  018E7A  6EE6               	movwf	postinc1,c
  4128  018E7C  0E00               	movlw	0
  4129  018E7E  6EE6               	movwf	postinc1,c
  4130  018E80  EC08  F0C3         	call	_wdtdelay	;wreg free
  4131                           
  4132                           ; BSR set to: 0
  4133  018E84  82BC               	bsf	188,1,c	;volatile
  4134                           
  4135                           ; BSR set to: 0
  4136                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4137  018E86  52E5               	movf	postdec1,f,c
  4138  018E88  0012               	return		;funcret
  4139  018E8A                     __end_of_send_lcd_cmd_long:
  4140                           	opt callstack 0
  4141                           
  4142 ;; *************** function _send_lcd_cmd *****************
  4143 ;; Defined at:
  4144 ;;		line 115 in file "eadog.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;  cmd             1  [STACK] const unsigned char 
  4147 ;; Auto vars:     Size  Location     Type
  4148 ;;		None
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  1  [STACK] void 
  4151 ;; Registers used:
  4152 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4153 ;; Tracked objects:
  4154 ;;		On entry : 3F/0
  4155 ;;		On exit  : 3F/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4162 ;;Total ram usage:        0 bytes
  4163 ;; Hardware stack levels used:    1
  4164 ;; Hardware stack levels required when called:    8
  4165 ;; This function calls:
  4166 ;;		_SPI1_Exchange8bit
  4167 ;;		_wdtdelay
  4168 ;; This function is called by:
  4169 ;;		_init_display
  4170 ;; This function uses a reentrant model
  4171 ;;
  4172                           
  4173                           	psect	text9
  4174  018E8A                     __ptext9:
  4175                           	opt callstack 0
  4176  018E8A                     _send_lcd_cmd:
  4177                           	opt callstack 21
  4178                           
  4179                           ; BSR set to: 0
  4180                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4181                           ;incstack = 0
  4182                           ;eadog.c: 115: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 116: {;eadog.c: 117:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  4183  018E8A  92BC               	bcf	188,1,c	;volatile
  4184                           
  4185                           ;eadog.c: 118:  do { LATCbits.LATC2 = 0; } while(0);
  4186  018E8C  94BC               	bcf	188,2,c	;volatile
  4187                           
  4188                           ;eadog.c: 119:  SPI1_Exchange8bit(cmd);
  4189                           ;stkvar	_cmd @ sp[(0)+-1]
  4190  018E8E  0EFF               	movlw	-1
  4191  018E90  50E3               	movf	plusw1,w,c
  4192  018E92  6EE6               	movwf	postinc1,c
  4193  018E94  EC60  F0C9         	call	_SPI1_Exchange8bit	;wreg free
  4194                           
  4195                           ; BSR set to: 57
  4196                           ;eadog.c: 120:  wdtdelay(30);
  4197  018E98  0E1E               	movlw	30
  4198  018E9A  6EE6               	movwf	postinc1,c
  4199  018E9C  0E00               	movlw	0
  4200  018E9E  6EE6               	movwf	postinc1,c
  4201  018EA0  0E00               	movlw	0
  4202  018EA2  6EE6               	movwf	postinc1,c
  4203  018EA4  0E00               	movlw	0
  4204  018EA6  6EE6               	movwf	postinc1,c
  4205  018EA8  EC08  F0C3         	call	_wdtdelay	;wreg free
  4206                           
  4207                           ; BSR set to: 0
  4208  018EAC  82BC               	bsf	188,1,c	;volatile
  4209                           
  4210                           ; BSR set to: 0
  4211                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  4212  018EAE  52E5               	movf	postdec1,f,c
  4213  018EB0  0012               	return		;funcret
  4214  018EB2                     __end_of_send_lcd_cmd:
  4215                           	opt callstack 0
  4216                           
  4217 ;; *************** function _SPI1_Exchange8bit *****************
  4218 ;; Defined at:
  4219 ;;		line 79 in file "mcc_generated_files/spi1.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;  data            1  [STACK] unsigned char 
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;		None
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  1  [STACK] unsigned char 
  4226 ;; Registers used:
  4227 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 3F/39
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4237 ;;Total ram usage:        0 bytes
  4238 ;; Hardware stack levels used:    1
  4239 ;; Hardware stack levels required when called:    7
  4240 ;; This function calls:
  4241 ;;		Nothing
  4242 ;; This function is called by:
  4243 ;;		_send_lcd_cmd
  4244 ;;		_send_lcd_cmd_long
  4245 ;; This function uses a reentrant model
  4246 ;;
  4247                           
  4248                           	psect	text10
  4249  0192C0                     __ptext10:
  4250                           	opt callstack 0
  4251  0192C0                     _SPI1_Exchange8bit:
  4252                           	opt callstack 21
  4253                           
  4254                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  4255                           
  4256                           ; BSR set to: 0
  4257                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4258                           ;incstack = 0
  4259  0192C0  0E01               	movlw	1
  4260  0192C2  013D               	movlb	61	; () banked
  4261  0192C4  6F12               	movwf	18,b	;volatile
  4262                           
  4263                           ; BSR set to: 61
  4264                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  4265                           ;stkvar	_data @ sp[(0)+-1]
  4266  0192C6  0EFF               	movlw	-1
  4267  0192C8  006F FF8F FD11     	movff	plusw1,15633	;volatile
  4268  0192CE                     l837:
  4269                           
  4270                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  4271  0192CE  0139               	movlb	57	; () banked
  4272  0192D0  A9A2               	btfss	162,4,b	;volatile
  4273  0192D2  D7FD               	goto	l837
  4274                           
  4275                           ; BSR set to: 57
  4276                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  4277  0192D4  006F F440  F025    	movff	15632,btemp	;volatile
  4278                           
  4279                           ; BSR set to: 57
  4280                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4281  0192DA  52E5               	movf	postdec1,f,c
  4282  0192DC  0012               	return		;funcret
  4283  0192DE                     __end_of_SPI1_Exchange8bit:
  4284                           	opt callstack 0
  4285                           
  4286 ;; *************** function _ringBufS_init *****************
  4287 ;; Defined at:
  4288 ;;		line 22 in file "ringbufs.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;  _this           2  [STACK] PTR volatile struct ring
  4291 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;		None
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1  [STACK] void 
  4296 ;; Registers used:
  4297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4307 ;;Total ram usage:        0 bytes
  4308 ;; Hardware stack levels used:    1
  4309 ;; Hardware stack levels required when called:    8
  4310 ;; This function calls:
  4311 ;;		_memset
  4312 ;; This function is called by:
  4313 ;;		_init_display
  4314 ;; This function uses a reentrant model
  4315 ;;
  4316                           
  4317                           	psect	text11
  4318  018EB2                     __ptext11:
  4319                           	opt callstack 0
  4320  018EB2                     _ringBufS_init:
  4321                           	opt callstack 21
  4322                           
  4323                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  4324                           
  4325                           ; BSR set to: 57
  4326                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4327                           ;incstack = 0
  4328  018EB2  0E43               	movlw	67
  4329  018EB4  6EE6               	movwf	postinc1,c
  4330  018EB6  0E00               	movlw	0
  4331  018EB8  6EE6               	movwf	postinc1,c
  4332  018EBA  0E00               	movlw	0
  4333  018EBC  6EE6               	movwf	postinc1,c
  4334  018EBE  0E00               	movlw	0
  4335  018EC0  6EE6               	movwf	postinc1,c
  4336                           
  4337                           ;stkvar	__this @ sp[(-4)+-2]
  4338  018EC2  0EFA               	movlw	-6
  4339  018EC4  006F FF8F FFE6     	movff	plusw1,postinc1
  4340  018ECA  006F FF8F FFE6     	movff	plusw1,postinc1
  4341  018ED0  ECA0  F0A7         	call	_memset	;wreg free
  4342                           
  4343                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  4344  018ED4  52E5               	movf	postdec1,f,c
  4345  018ED6  52E5               	movf	postdec1,f,c
  4346  018ED8  0012               	return		;funcret
  4347  018EDA                     __end_of_ringBufS_init:
  4348                           	opt callstack 0
  4349                           
  4350 ;; *************** function _init_bsoc *****************
  4351 ;; Defined at:
  4352 ;;		line 31 in file "bsoc.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;		None
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;		None
  4357 ;; Return value:  Size  Location     Type
  4358 ;;                  1  [STACK] void 
  4359 ;; Registers used:
  4360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  4361 ;; Tracked objects:
  4362 ;;		On entry : 3F/1
  4363 ;;		On exit  : 0/0
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4370 ;;Total ram usage:        0 bytes
  4371 ;; Hardware stack levels used:    1
  4372 ;; Hardware stack levels required when called:    8
  4373 ;; This function calls:
  4374 ;;		_TMR3_SetInterruptHandler
  4375 ;; This function is called by:
  4376 ;;		_main
  4377 ;; This function uses a reentrant model
  4378 ;;
  4379                           
  4380                           	psect	text12
  4381  01945E                     __ptext12:
  4382                           	opt callstack 0
  4383  01945E                     _init_bsoc:
  4384                           	opt callstack 22
  4385                           
  4386                           ;bsoc.c: 33:  TMR3_SetInterruptHandler(calc_bsoc);
  4387                           
  4388                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4389                           ;incstack = 0
  4390  01945E  0EDA               	movlw	low _calc_bsoc
  4391  019460  6EE6               	movwf	postinc1,c
  4392  019462  0E4B               	movlw	high _calc_bsoc
  4393  019464  6EE6               	movwf	postinc1,c
  4394  019466  0E01               	movlw	low (_calc_bsoc shr (0+16))
  4395  019468  6EE6               	movwf	postinc1,c
  4396  01946A  EC0D  F0C8         	call	_TMR3_SetInterruptHandler	;wreg free
  4397                           
  4398                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  4399  01946E  0012               	return		;funcret
  4400  019470                     __end_of_init_bsoc:
  4401                           	opt callstack 0
  4402                           
  4403 ;; *************** function _hid_display *****************
  4404 ;; Defined at:
  4405 ;;		line 17 in file "hid.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;  h               1  [STACK] PTR struct H_data
  4408 ;;		 -> H(7), 
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;		None
  4411 ;; Return value:  Size  Location     Type
  4412 ;;                  1  [STACK] PTR struct H_data
  4413 ;; Registers used:
  4414 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  4415 ;; Tracked objects:
  4416 ;;		On entry : 3F/1
  4417 ;;		On exit  : 0/0
  4418 ;;		Unchanged: 0/0
  4419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4424 ;;Total ram usage:        0 bytes
  4425 ;; Hardware stack levels used:    1
  4426 ;; Hardware stack levels required when called:    9
  4427 ;; This function calls:
  4428 ;;		_hid_input
  4429 ;; This function is called by:
  4430 ;;		_main
  4431 ;; This function uses a reentrant model
  4432 ;;
  4433                           
  4434                           	psect	text13
  4435  01740E                     __ptext13:
  4436                           	opt callstack 0
  4437  01740E                     _hid_display:
  4438                           	opt callstack 21
  4439                           
  4440                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  4441                           ;stkvar	_h @ sp[(0)+-1]
  4442                           
  4443                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4444                           ;incstack = 0
  4445  01740E  0EFF               	movlw	-1
  4446  017410  50E3               	movf	plusw1,w,c
  4447  017412  6EE6               	movwf	postinc1,c
  4448  017414  ECF1  F0BF         	call	_hid_input	;wreg free
  4449                           
  4450                           ;hid.c: 21:  switch (h->h_state) {
  4451  017418  D066               	goto	l9483
  4452  01741A                     l9461:
  4453                           
  4454                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  4455                           ;stkvar	_h @ sp[(0)+-1]
  4456  01741A  0EFF               	movlw	-1
  4457  01741C  50E3               	movf	plusw1,w,c
  4458  01741E  6ED9               	movwf	fsr2l,c
  4459  017420  6ADA               	clrf	fsr2h,c
  4460  017422  0E01               	movlw	1
  4461  017424  26D9               	addwf	fsr2l,f,c
  4462  017426  0E01               	movlw	1
  4463  017428  6EDF               	movwf	indf2,c
  4464                           
  4465                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  4466                           ;stkvar	_h @ sp[(0)+-1]
  4467  01742A  0EFF               	movlw	-1
  4468  01742C  50E3               	movf	plusw1,w,c
  4469  01742E  6ED9               	movwf	fsr2l,c
  4470  017430  6ADA               	clrf	fsr2h,c
  4471  017432  0E00               	movlw	0
  4472  017434  6EDF               	movwf	indf2,c
  4473                           
  4474                           ;hid.c: 25:   h->wait_enter = 1;
  4475                           ;stkvar	_h @ sp[(0)+-1]
  4476  017436  0EFF               	movlw	-1
  4477  017438  50E3               	movf	plusw1,w,c
  4478  01743A  6ED9               	movwf	fsr2l,c
  4479  01743C  6ADA               	clrf	fsr2h,c
  4480  01743E  0E04               	movlw	4
  4481  017440  26D9               	addwf	fsr2l,f,c
  4482  017442  0E01               	movlw	1
  4483  017444  6EDF               	movwf	indf2,c
  4484                           
  4485                           ;hid.c: 26:   h->wait_select = 1;
  4486                           ;stkvar	_h @ sp[(0)+-1]
  4487  017446  0EFF               	movlw	-1
  4488  017448  50E3               	movf	plusw1,w,c
  4489  01744A  6ED9               	movwf	fsr2l,c
  4490  01744C  6ADA               	clrf	fsr2h,c
  4491  01744E  0E02               	movlw	2
  4492  017450  26D9               	addwf	fsr2l,f,c
  4493  017452  0E01               	movlw	1
  4494  017454  6EDF               	movwf	indf2,c
  4495                           
  4496                           ;hid.c: 27:   h->select_p = SW_OFF;
  4497                           ;stkvar	_h @ sp[(0)+-1]
  4498  017456  0EFF               	movlw	-1
  4499  017458  50E3               	movf	plusw1,w,c
  4500  01745A  6ED9               	movwf	fsr2l,c
  4501  01745C  6ADA               	clrf	fsr2h,c
  4502  01745E  0E03               	movlw	3
  4503  017460  26D9               	addwf	fsr2l,f,c
  4504  017462  0E00               	movlw	0
  4505  017464  6EDF               	movwf	indf2,c
  4506                           
  4507                           ;hid.c: 28:   h->enter_p = SW_OFF;
  4508                           ;stkvar	_h @ sp[(0)+-1]
  4509  017466  0EFF               	movlw	-1
  4510  017468  50E3               	movf	plusw1,w,c
  4511  01746A  6ED9               	movwf	fsr2l,c
  4512  01746C  6ADA               	clrf	fsr2h,c
  4513  01746E  0E05               	movlw	5
  4514  017470  26D9               	addwf	fsr2l,f,c
  4515  017472  0E00               	movlw	0
  4516  017474  D036               	goto	L1
  4517  017476                     l9473:
  4518                           
  4519                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  4520                           ;stkvar	_h @ sp[(0)+-1]
  4521  017476  0EFF               	movlw	-1
  4522  017478  50E3               	movf	plusw1,w,c
  4523  01747A  6ED9               	movwf	fsr2l,c
  4524  01747C  6ADA               	clrf	fsr2h,c
  4525  01747E  0E02               	movlw	2
  4526  017480  26D9               	addwf	fsr2l,f,c
  4527  017482  50DF               	movf	indf2,w,c
  4528  017484  A4D8               	btfss	status,2,c
  4529  017486  D042               	goto	l1894
  4530                           
  4531                           ;stkvar	_h @ sp[(0)+-1]
  4532  017488  0EFF               	movlw	-1
  4533  01748A  50E3               	movf	plusw1,w,c
  4534  01748C  6ED9               	movwf	fsr2l,c
  4535  01748E  6ADA               	clrf	fsr2h,c
  4536  017490  0E03               	movlw	3
  4537  017492  26D9               	addwf	fsr2l,f,c
  4538  017494  50DF               	movf	indf2,w,c
  4539  017496  A4D8               	btfss	status,2,c
  4540  017498  D039               	goto	l1894
  4541                           
  4542                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  4543                           ;stkvar	_h @ sp[(0)+-1]
  4544  01749A  0EFF               	movlw	-1
  4545  01749C  50E3               	movf	plusw1,w,c
  4546  01749E  6ED9               	movwf	fsr2l,c
  4547  0174A0  6ADA               	clrf	fsr2h,c
  4548  0174A2  0E06               	movlw	6
  4549  0174A4  26D9               	addwf	fsr2l,f,c
  4550                           
  4551                           ;stkvar	_h @ sp[(0)+-1]
  4552  0174A6  0EFF               	movlw	-1
  4553  0174A8  50E3               	movf	plusw1,w,c
  4554  0174AA  6EE9               	movwf	fsr0l,c
  4555  0174AC  6AEA               	clrf	fsr0h,c
  4556  0174AE  0E06               	movlw	6
  4557  0174B0  26E9               	addwf	fsr0l,f,c
  4558  0174B2  2AEF               	incf	indf0,f,c
  4559  0174B4  50EF               	movf	indf0,w,c
  4560  0174B6  0B03               	andlw	3
  4561  0174B8  6EDF               	movwf	indf2,c
  4562                           
  4563                           ;hid.c: 34:    h->hid_display = h->sequence;
  4564                           ;stkvar	_h @ sp[(0)+-1]
  4565  0174BA  0EFF               	movlw	-1
  4566  0174BC  50E3               	movf	plusw1,w,c
  4567  0174BE  6ED9               	movwf	fsr2l,c
  4568  0174C0  6ADA               	clrf	fsr2h,c
  4569  0174C2  0E06               	movlw	6
  4570  0174C4  26D9               	addwf	fsr2l,f,c
  4571                           
  4572                           ;stkvar	_h @ sp[(0)+-1]
  4573  0174C6  0EFF               	movlw	-1
  4574  0174C8  50E3               	movf	plusw1,w,c
  4575  0174CA  6EE9               	movwf	fsr0l,c
  4576  0174CC  6AEA               	clrf	fsr0h,c
  4577  0174CE  006F FF7F FFEF     	movff	indf2,indf0
  4578                           
  4579                           ;hid.c: 35:    h->wait_select = 1;
  4580                           ;stkvar	_h @ sp[(0)+-1]
  4581  0174D4  0EFF               	movlw	-1
  4582  0174D6  50E3               	movf	plusw1,w,c
  4583  0174D8  6ED9               	movwf	fsr2l,c
  4584  0174DA  6ADA               	clrf	fsr2h,c
  4585  0174DC  0E02               	movlw	2
  4586  0174DE  26D9               	addwf	fsr2l,f,c
  4587  0174E0  0E01               	movlw	1
  4588  0174E2                     L1:
  4589  0174E2  6EDF               	movwf	indf2,c
  4590  0174E4  D013               	goto	l1894
  4591  0174E6                     l9483:
  4592                           
  4593                           ;stkvar	_h @ sp[(0)+-1]
  4594  0174E6  0EFF               	movlw	-1
  4595  0174E8  50E3               	movf	plusw1,w,c
  4596  0174EA  6ED9               	movwf	fsr2l,c
  4597  0174EC  6ADA               	clrf	fsr2h,c
  4598  0174EE  0E01               	movlw	1
  4599  0174F0  26D9               	addwf	fsr2l,f,c
  4600  0174F2  50DF               	movf	indf2,w,c
  4601  0174F4  6E2F               	movwf	(btemp+10)^0,c
  4602  0174F6  6A30               	clrf	(btemp+11)^0,c
  4603                           
  4604                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4605                           ; Switch size 1, requested type "simple"
  4606                           ; Number of cases is 1, Range of values is 0 to 0
  4607                           ; switch strategies available:
  4608                           ; Name         Instructions Cycles
  4609                           ; simple_byte            4     3 (average)
  4610                           ;	Chosen strategy is simple_byte
  4611  0174F8  5030               	movf	(btemp+11)^0,w,c
  4612  0174FA  0A00               	xorlw	0	; case 0
  4613  0174FC  A4D8               	btfss	status,2,c
  4614  0174FE  D7BB               	goto	l9473
  4615                           
  4616                           ; Switch size 1, requested type "simple"
  4617                           ; Number of cases is 2, Range of values is 0 to 1
  4618                           ; switch strategies available:
  4619                           ; Name         Instructions Cycles
  4620                           ; simple_byte            7     4 (average)
  4621                           ;	Chosen strategy is simple_byte
  4622  017500  502F               	movf	(btemp+10)^0,w,c
  4623  017502  0A00               	xorlw	0	; case 0
  4624  017504  B4D8               	btfsc	status,2,c
  4625  017506  D789               	goto	l9461
  4626  017508  0A01               	xorlw	1	; case 1
  4627  01750A  D7B5               	goto	l9473
  4628  01750C                     l1894:
  4629                           
  4630                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  4631  01750C  52E5               	movf	postdec1,f,c
  4632  01750E  0012               	return		;funcret
  4633  017510                     __end_of_hid_display:
  4634                           	opt callstack 0
  4635                           
  4636 ;; *************** function _hid_input *****************
  4637 ;; Defined at:
  4638 ;;		line 3 in file "hid.c"
  4639 ;; Parameters:    Size  Location     Type
  4640 ;;  h               1  [STACK] PTR struct H_data
  4641 ;;		 -> H(7), 
  4642 ;; Auto vars:     Size  Location     Type
  4643 ;;		None
  4644 ;; Return value:  Size  Location     Type
  4645 ;;                  1  [STACK] PTR struct H_data
  4646 ;; Registers used:
  4647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  4648 ;; Tracked objects:
  4649 ;;		On entry : 0/1
  4650 ;;		On exit  : 0/0
  4651 ;;		Unchanged: 0/0
  4652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4657 ;;Total ram usage:        0 bytes
  4658 ;; Hardware stack levels used:    1
  4659 ;; Hardware stack levels required when called:    8
  4660 ;; This function calls:
  4661 ;;		_get_switch
  4662 ;; This function is called by:
  4663 ;;		_hid_display
  4664 ;; This function uses a reentrant model
  4665 ;;
  4666                           
  4667                           	psect	text14
  4668  017FE2                     __ptext14:
  4669                           	opt callstack 0
  4670  017FE2                     _hid_input:
  4671                           	opt callstack 21
  4672                           
  4673                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  4674                           
  4675                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4676                           ;incstack = 0
  4677  017FE2  0E02               	movlw	2
  4678  017FE4  6EE6               	movwf	postinc1,c
  4679  017FE6  EC6D  F0C7         	call	_get_switch	;wreg free
  4680  017FEA  5025               	movf	btemp^0,w,c
  4681  017FEC  B4D8               	btfsc	status,2,c
  4682  017FEE  D01C               	goto	l9193
  4683                           
  4684                           ;hid.c: 6:   h->wait_select = 0;
  4685                           ;stkvar	_h @ sp[(0)+-1]
  4686  017FF0  0EFF               	movlw	-1
  4687  017FF2  50E3               	movf	plusw1,w,c
  4688  017FF4  6ED9               	movwf	fsr2l,c
  4689  017FF6  6ADA               	clrf	fsr2h,c
  4690  017FF8  0E02               	movlw	2
  4691  017FFA  26D9               	addwf	fsr2l,f,c
  4692  017FFC  0E00               	movlw	0
  4693  017FFE  6EDF               	movwf	indf2,c
  4694                           
  4695                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  4696  018000  0E02               	movlw	2
  4697  018002  6EE6               	movwf	postinc1,c
  4698  018004  EC6D  F0C7         	call	_get_switch	;wreg free
  4699  018008  5025               	movf	btemp^0,w,c
  4700  01800A  B4D8               	btfsc	status,2,c
  4701  01800C  D003               	goto	u8540
  4702  01800E  6A30               	clrf	(btemp+11)^0,c
  4703  018010  2A30               	incf	(btemp+11)^0,f,c
  4704  018012  D001               	goto	u8558
  4705  018014                     u8540:
  4706  018014  6A30               	clrf	(btemp+11)^0,c
  4707  018016                     u8558:
  4708                           
  4709                           ;stkvar	_h @ sp[(0)+-1]
  4710  018016  0EFF               	movlw	-1
  4711  018018  50E3               	movf	plusw1,w,c
  4712  01801A  6ED9               	movwf	fsr2l,c
  4713  01801C  6ADA               	clrf	fsr2h,c
  4714  01801E  0E03               	movlw	3
  4715  018020  26D9               	addwf	fsr2l,f,c
  4716  018022  0060  F0C3  FFDF   	movff	btemp+11,indf2
  4717  018028                     l9193:
  4718                           
  4719                           ;hid.c: 10:  if (get_switch(SENTER)) {
  4720  018028  0E03               	movlw	3
  4721  01802A  6EE6               	movwf	postinc1,c
  4722  01802C  EC6D  F0C7         	call	_get_switch	;wreg free
  4723  018030  5025               	movf	btemp^0,w,c
  4724  018032  B4D8               	btfsc	status,2,c
  4725  018034  D01C               	goto	l1885
  4726                           
  4727                           ;hid.c: 11:   h->wait_enter = 0;
  4728                           ;stkvar	_h @ sp[(0)+-1]
  4729  018036  0EFF               	movlw	-1
  4730  018038  50E3               	movf	plusw1,w,c
  4731  01803A  6ED9               	movwf	fsr2l,c
  4732  01803C  6ADA               	clrf	fsr2h,c
  4733  01803E  0E04               	movlw	4
  4734  018040  26D9               	addwf	fsr2l,f,c
  4735  018042  0E00               	movlw	0
  4736  018044  6EDF               	movwf	indf2,c
  4737                           
  4738                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  4739  018046  0E03               	movlw	3
  4740  018048  6EE6               	movwf	postinc1,c
  4741  01804A  EC6D  F0C7         	call	_get_switch	;wreg free
  4742  01804E  5025               	movf	btemp^0,w,c
  4743  018050  B4D8               	btfsc	status,2,c
  4744  018052  D003               	goto	u8570
  4745  018054  6A30               	clrf	(btemp+11)^0,c
  4746  018056  2A30               	incf	(btemp+11)^0,f,c
  4747  018058  D001               	goto	u8588
  4748  01805A                     u8570:
  4749  01805A  6A30               	clrf	(btemp+11)^0,c
  4750  01805C                     u8588:
  4751                           
  4752                           ;stkvar	_h @ sp[(0)+-1]
  4753  01805C  0EFF               	movlw	-1
  4754  01805E  50E3               	movf	plusw1,w,c
  4755  018060  6ED9               	movwf	fsr2l,c
  4756  018062  6ADA               	clrf	fsr2h,c
  4757  018064  0E05               	movlw	5
  4758  018066  26D9               	addwf	fsr2l,f,c
  4759  018068  0060  F0C3  FFDF   	movff	btemp+11,indf2
  4760  01806E                     l1885:
  4761                           
  4762                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  4763  01806E  52E5               	movf	postdec1,f,c
  4764  018070  0012               	return		;funcret
  4765  018072                     __end_of_hid_input:
  4766                           	opt callstack 0
  4767                           
  4768 ;; *************** function _get_switch *****************
  4769 ;; Defined at:
  4770 ;;		line 18 in file "dio.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;  i               1  [STACK] unsigned char 
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;		None
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  1  [STACK] enum E17030
  4777 ;; Registers used:
  4778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/2
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4788 ;;Total ram usage:        0 bytes
  4789 ;; Hardware stack levels used:    1
  4790 ;; Hardware stack levels required when called:    7
  4791 ;; This function calls:
  4792 ;;		Nothing
  4793 ;; This function is called by:
  4794 ;;		_main
  4795 ;;		_hid_input
  4796 ;; This function uses a reentrant model
  4797 ;;
  4798                           
  4799                           	psect	text15
  4800  018EDA                     __ptext15:
  4801                           	opt callstack 0
  4802  018EDA                     _get_switch:
  4803                           	opt callstack 21
  4804                           
  4805                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  4806                           ;stkvar	_i @ sp[(0)+-1]
  4807                           
  4808                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4809                           ;incstack = 0
  4810  018EDA  0EFF               	movlw	-1
  4811  018EDC  006F FF8C  F025    	movff	plusw1,btemp
  4812  018EE2  0E03               	movlw	3
  4813  018EE4  6425               	cpfsgt	btemp^0,c
  4814  018EE6  D002               	goto	l8091
  4815                           
  4816                           ;dio.c: 21:   return SW_OFF;
  4817  018EE8  0E00               	movlw	0
  4818  018EEA  D008               	goto	L2
  4819  018EEC                     l8091:
  4820                           
  4821                           ;dio.c: 23:  return S.button[i].sw;
  4822                           ;stkvar	_i @ sp[(0)+-1]
  4823  018EEC  0EFF               	movlw	-1
  4824  018EEE  50E3               	movf	plusw1,w,c
  4825  018EF0  0D05               	mullw	5
  4826  018EF2  50F3               	movf	243,w,c
  4827  018EF4  0F60               	addlw	low _S
  4828  018EF6  6ED9               	movwf	fsr2l,c
  4829  018EF8  6ADA               	clrf	fsr2h,c
  4830  018EFA  50DF               	movf	indf2,w,c
  4831  018EFC                     L2:
  4832  018EFC  6E25               	movwf	btemp^0,c
  4833                           
  4834                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4835  018EFE  52E5               	movf	postdec1,f,c
  4836  018F00  0012               	return		;funcret
  4837  018F02                     __end_of_get_switch:
  4838                           	opt callstack 0
  4839                           
  4840 ;; *************** function _eaDogM_WriteCommand *****************
  4841 ;; Defined at:
  4842 ;;		line 173 in file "eadog.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;  cmd             1  [STACK] const unsigned char 
  4845 ;; Auto vars:     Size  Location     Type
  4846 ;;		None
  4847 ;; Return value:  Size  Location     Type
  4848 ;;                  1  [STACK] void 
  4849 ;; Registers used:
  4850 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4851 ;; Tracked objects:
  4852 ;;		On entry : 3F/3D
  4853 ;;		On exit  : 3F/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4860 ;;Total ram usage:        0 bytes
  4861 ;; Hardware stack levels used:    1
  4862 ;; Hardware stack levels required when called:   17
  4863 ;; This function calls:
  4864 ;;		_send_lcd_cmd_dma
  4865 ;; This function is called by:
  4866 ;;		_main
  4867 ;; This function uses a reentrant model
  4868 ;;
  4869                           
  4870                           	psect	text16
  4871  019480                     __ptext16:
  4872                           	opt callstack 0
  4873  019480                     _eaDogM_WriteCommand:
  4874                           	opt callstack 13
  4875                           
  4876                           ;eadog.c: 173: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 174: {;eadog.c: 175:
      +                            send_lcd_cmd_dma(cmd);
  4877                           ;stkvar	_cmd @ sp[(0)+-1]
  4878                           
  4879                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4880                           ;incstack = 0
  4881  019480  0EFF               	movlw	-1
  4882  019482  50E3               	movf	plusw1,w,c
  4883  019484  6EE6               	movwf	postinc1,c
  4884  019486  EC8F  F0C3         	call	_send_lcd_cmd_dma	;wreg free
  4885                           
  4886                           ; BSR set to: 0
  4887                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  4888  01948A  52E5               	movf	postdec1,f,c
  4889  01948C  0012               	return		;funcret
  4890  01948E                     __end_of_eaDogM_WriteCommand:
  4891                           	opt callstack 0
  4892                           
  4893 ;; *************** function _convert_adc_data *****************
  4894 ;; Defined at:
  4895 ;;		line 40 in file "mbmc.c"
  4896 ;; Parameters:    Size  Location     Type
  4897 ;;		None
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;  i               1  [STACK] unsigned char 
  4900 ;; Return value:  Size  Location     Type
  4901 ;;                  1  [STACK] void 
  4902 ;; Registers used:
  4903 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4904 ;; Tracked objects:
  4905 ;;		On entry : 0/1
  4906 ;;		On exit  : 0/0
  4907 ;;		Unchanged: 0/0
  4908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4913 ;;Total ram usage:        0 bytes
  4914 ;; Hardware stack levels used:    1
  4915 ;; Hardware stack levels required when called:   10
  4916 ;; This function calls:
  4917 ;;		_conv_raw_result
  4918 ;;		_lp_filter
  4919 ;; This function is called by:
  4920 ;;		_main
  4921 ;; This function uses a reentrant model
  4922 ;;
  4923                           
  4924                           	psect	text17
  4925  017A1A                     __ptext17:
  4926                           	opt callstack 0
  4927  017A1A                     _convert_adc_data:
  4928                           	opt callstack 0
  4929                           
  4930                           ; BSR set to: 0
  4931                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4932  017A1A  52E6               	movf	postinc1,f,c
  4933                           
  4934                           ;mbmc.c: 42:  uint8_t i = 0;
  4935                           ;stkvar	_i @ sp[(-1)+0]
  4936                           
  4937                           ;incstack = 0
  4938  017A1C  0EFF               	movlw	-1
  4939  017A1E  6AE3               	clrf	plusw1,c
  4940  017A20                     l9433:
  4941                           
  4942                           ;mbmc.c: 45:   if (V.calib) {
  4943  017A20  0102               	movlb	2	; () banked
  4944  017A22  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  4945  017A24  B4D8               	btfsc	status,2,c
  4946  017A26  D01B               	goto	l9437
  4947                           
  4948                           ; BSR set to: 2
  4949                           ;mbmc.c: 46:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  4950  017A28  0E01               	movlw	1
  4951  017A2A  6EE6               	movwf	postinc1,c
  4952                           
  4953                           ;stkvar	_i @ sp[(-2)+0]
  4954  017A2C  0EFE               	movlw	-2
  4955  017A2E  50E3               	movf	plusw1,w,c
  4956  017A30  6EE6               	movwf	postinc1,c
  4957  017A32  0E01               	movlw	1
  4958  017A34  6EE6               	movwf	postinc1,c
  4959                           
  4960                           ;stkvar	_i @ sp[(-4)+0]
  4961  017A36  0EFC               	movlw	-4
  4962  017A38  50E3               	movf	plusw1,w,c
  4963  017A3A  6EE6               	movwf	postinc1,c
  4964  017A3C  ECC4  F09D         	call	_conv_raw_result	;wreg free
  4965  017A40  0060  F097  FFE6   	movff	btemp,postinc1
  4966  017A46  0060  F09B  FFE6   	movff	btemp+1,postinc1
  4967  017A4C  0060  F09F  FFE6   	movff	btemp+2,postinc1
  4968  017A52  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  4969  017A58  EC6B  F0B2         	call	_lp_filter	;wreg free
  4970  017A5C  D01A               	goto	L3
  4971  017A5E                     l9437:
  4972                           
  4973                           ; BSR set to: 2
  4974                           ;mbmc.c: 48:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  4975  017A5E  0E00               	movlw	0
  4976  017A60  6EE6               	movwf	postinc1,c
  4977                           
  4978                           ;stkvar	_i @ sp[(-2)+0]
  4979  017A62  0EFE               	movlw	-2
  4980  017A64  50E3               	movf	plusw1,w,c
  4981  017A66  6EE6               	movwf	postinc1,c
  4982  017A68  0E00               	movlw	0
  4983  017A6A  6EE6               	movwf	postinc1,c
  4984                           
  4985                           ;stkvar	_i @ sp[(-4)+0]
  4986  017A6C  0EFC               	movlw	-4
  4987  017A6E  50E3               	movf	plusw1,w,c
  4988  017A70  6EE6               	movwf	postinc1,c
  4989  017A72  ECC4  F09D         	call	_conv_raw_result	;wreg free
  4990  017A76  0060  F097  FFE6   	movff	btemp,postinc1
  4991  017A7C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  4992  017A82  0060  F09F  FFE6   	movff	btemp+2,postinc1
  4993  017A88  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  4994  017A8E  EC6B  F0B2         	call	_lp_filter	;wreg free
  4995  017A92                     L3:
  4996                           
  4997                           ;stkvar	_i @ sp[(-1)+0]
  4998  017A92  0EFF               	movlw	-1
  4999  017A94  50E3               	movf	plusw1,w,c
  5000  017A96  0D04               	mullw	4
  5001  017A98  0E00               	movlw	low _C
  5002  017A9A  24F3               	addwf	243,w,c
  5003  017A9C  6ED9               	movwf	fsr2l,c
  5004  017A9E  0E01               	movlw	high _C
  5005  017AA0  20F4               	addwfc	prodh,w,c
  5006  017AA2  6EDA               	movwf	fsr2h,c
  5007  017AA4  0060  F097  FFDE   	movff	btemp,postinc2
  5008  017AAA  0060  F09B  FFDE   	movff	btemp+1,postinc2
  5009  017AB0  0060  F09F  FFDE   	movff	btemp+2,postinc2
  5010  017AB6  0060  F0A3  FFDE   	movff	btemp+3,postinc2
  5011                           
  5012                           ;mbmc.c: 50:  } while (++i < 16);
  5013                           ;stkvar	_i @ sp[(-1)+0]
  5014  017ABC  0EFF               	movlw	-1
  5015  017ABE  2AE3               	incf	plusw1,f,c
  5016  017AC0  0EFF               	movlw	-1
  5017  017AC2  006F FF8C  F025    	movff	plusw1,btemp
  5018  017AC8  0E0F               	movlw	15
  5019  017ACA  6425               	cpfsgt	btemp^0,c
  5020  017ACC  D7A9               	goto	l9433
  5021                           
  5022                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  5023  017ACE  52E5               	movf	postdec1,f,c
  5024  017AD0  0012               	return		;funcret
  5025  017AD2                     __end_of_convert_adc_data:
  5026                           	opt callstack 0
  5027                           
  5028 ;; *************** function _conv_raw_result *****************
  5029 ;; Defined at:
  5030 ;;		line 80 in file "daq.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  chan            1  [STACK] const enum E16136
  5033 ;;  to_what         1  [STACK] const enum E16198
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;		None
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  4  [STACK] float 
  5038 ;; Registers used:
  5039 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5040 ;; Tracked objects:
  5041 ;;		On entry : 3F/2
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5049 ;;Total ram usage:        0 bytes
  5050 ;; Hardware stack levels used:    1
  5051 ;; Hardware stack levels required when called:    9
  5052 ;; This function calls:
  5053 ;;		___fldiv
  5054 ;;		___flmul
  5055 ;;		___flsub
  5056 ;;		___xxtofl
  5057 ;;		_get_raw_result
  5058 ;;		_nanf
  5059 ;; This function is called by:
  5060 ;;		_convert_adc_data
  5061 ;; This function uses a reentrant model
  5062 ;;
  5063                           
  5064                           	psect	text18
  5065  013B88                     __ptext18:
  5066                           	opt callstack 0
  5067  013B88                     _conv_raw_result:
  5068                           	opt callstack 20
  5069                           
  5070                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  5071                           
  5072                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5073                           ;incstack = 0
  5074  013B88  D242               	goto	l9127
  5075  013B8A                     l9073:
  5076                           
  5077                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  5078                           ;stkvar	_chan @ sp[(0)+-1]
  5079  013B8A  0EFF               	movlw	-1
  5080  013B8C  006F FF8C  F030    	movff	plusw1,btemp+11
  5081  013B92  0E77               	movlw	119
  5082  013B94  6E2D               	movwf	(btemp+8)^0,c
  5083  013B96  0E3C               	movlw	60
  5084  013B98  6E2E               	movwf	(btemp+9)^0,c
  5085  013B9A  2A30               	incf	(btemp+11)^0,f,c
  5086  013B9C  D003               	goto	u8314
  5087  013B9E                     u8315:
  5088  013B9E  342E               	rlcf	(btemp+9)^0,w,c
  5089  013BA0  322E               	rrcf	(btemp+9)^0,f,c
  5090  013BA2  322D               	rrcf	(btemp+8)^0,f,c
  5091  013BA4                     u8314:
  5092  013BA4  2E30               	decfsz	(btemp+11)^0,f,c
  5093  013BA6  D7FB               	goto	u8315
  5094  013BA8  B02D               	btfsc	(btemp+8)^0,0,c
  5095  013BAA  D007               	goto	l9079
  5096                           
  5097                           ;daq.c: 86:    return nanf("");
  5098  013BAC  0E7F               	movlw	low (STR_39+18)
  5099  013BAE  6EE6               	movwf	postinc1,c
  5100  013BB0  0EFE               	movlw	high (STR_39+18)
  5101  013BB2  6EE6               	movwf	postinc1,c
  5102  013BB4  EC77  F0C2         	call	_nanf	;wreg free
  5103  013BB8  D23A               	goto	l1765
  5104  013BBA                     l9079:
  5105                           
  5106                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  5107                           ;stkvar	_chan @ sp[(0)+-1]
  5108  013BBA  0EFF               	movlw	-1
  5109  013BBC  006F FF8C  F030    	movff	plusw1,btemp+11
  5110  013BC2  0E03               	movlw	3
  5111  013BC4  6E2D               	movwf	(btemp+8)^0,c
  5112  013BC6  0E00               	movlw	0
  5113  013BC8  6E2E               	movwf	(btemp+9)^0,c
  5114  013BCA  2A30               	incf	(btemp+11)^0,f,c
  5115  013BCC  D003               	goto	u8334
  5116  013BCE                     u8335:
  5117  013BCE  342E               	rlcf	(btemp+9)^0,w,c
  5118  013BD0  322E               	rrcf	(btemp+9)^0,f,c
  5119  013BD2  322D               	rrcf	(btemp+8)^0,f,c
  5120  013BD4                     u8334:
  5121  013BD4  2E30               	decfsz	(btemp+11)^0,f,c
  5122  013BD6  D7FB               	goto	u8335
  5123  013BD8  A02D               	btfss	(btemp+8)^0,0,c
  5124  013BDA  D0EB               	goto	l9093
  5125                           
  5126                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  5127                           ;stkvar	_chan @ sp[(0)+-1]
  5128  013BDC  0EFF               	movlw	-1
  5129  013BDE  006F FF8C  F030    	movff	plusw1,btemp+11
  5130  013BE4  0E01               	movlw	1
  5131  013BE6  6E2D               	movwf	(btemp+8)^0,c
  5132  013BE8  0E00               	movlw	0
  5133  013BEA  6E2E               	movwf	(btemp+9)^0,c
  5134  013BEC  2A30               	incf	(btemp+11)^0,f,c
  5135  013BEE  D003               	goto	u8354
  5136  013BF0                     u8355:
  5137  013BF0  342E               	rlcf	(btemp+9)^0,w,c
  5138  013BF2  322E               	rrcf	(btemp+9)^0,f,c
  5139  013BF4  322D               	rrcf	(btemp+8)^0,f,c
  5140  013BF6                     u8354:
  5141  013BF6  2E30               	decfsz	(btemp+11)^0,f,c
  5142  013BF8  D7FB               	goto	u8355
  5143  013BFA  A02D               	btfss	(btemp+8)^0,0,c
  5144  013BFC  D06D               	goto	l9089
  5145                           
  5146                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.08500
      +                          00;
  5147  013BFE  0E7B               	movlw	123
  5148  013C00  6EE6               	movwf	postinc1,c
  5149  013C02  0E14               	movlw	20
  5150  013C04  6EE6               	movwf	postinc1,c
  5151  013C06  0EAE               	movlw	174
  5152  013C08  6EE6               	movwf	postinc1,c
  5153  013C0A  0E3D               	movlw	61
  5154  013C0C  6EE6               	movwf	postinc1,c
  5155  013C0E  0060  F38C  F02D   	movff	_R+32,btemp+8	;volatile
  5156  013C14  0060  F390  F02E   	movff	_R+33,btemp+9	;volatile
  5157  013C1A  0E00               	movlw	0
  5158  013C1C  BE2E               	btfsc	(btemp+9)^0,7,c
  5159  013C1E  0EFF               	movlw	255
  5160  013C20  6E2F               	movwf	(btemp+10)^0,c
  5161  013C22  6E30               	movwf	(btemp+11)^0,c
  5162  013C24  0060  F0B7  FFE6   	movff	btemp+8,postinc1
  5163  013C2A  0060  F0BB  FFE6   	movff	btemp+9,postinc1
  5164  013C30  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  5165  013C36  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  5166  013C3C  0E01               	movlw	1
  5167  013C3E  6EE6               	movwf	postinc1,c
  5168  013C40  EC85  F0B0         	call	___xxtofl	;wreg free
  5169  013C44  0060  F097  FFE6   	movff	btemp,postinc1
  5170  013C4A  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5171  013C50  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5172  013C56  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5173                           
  5174                           ;stkvar	_chan @ sp[(-8)+-1]
  5175  013C5C  0EF7               	movlw	-9
  5176  013C5E  50E3               	movf	plusw1,w,c
  5177  013C60  6EE6               	movwf	postinc1,c
  5178  013C62  EC6F  F0C9         	call	_get_raw_result	;wreg free
  5179  013C66  0060  F094  F02F   	movff	btemp,btemp+10
  5180  013C6C  0060  F098  F030   	movff	btemp+1,btemp+11
  5181  013C72  502F               	movf	(btemp+10)^0,w,c
  5182  013C74  6E29               	movwf	(btemp+4)^0,c
  5183  013C76  5030               	movf	(btemp+11)^0,w,c
  5184  013C78  6E2A               	movwf	(btemp+5)^0,c
  5185  013C7A  6A2B               	clrf	(btemp+6)^0,c
  5186  013C7C  6A2C               	clrf	(btemp+7)^0,c
  5187  013C7E  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5188  013C84  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5189  013C8A  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5190  013C90  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5191  013C96  0E00               	movlw	0
  5192  013C98  6EE6               	movwf	postinc1,c
  5193  013C9A  EC85  F0B0         	call	___xxtofl	;wreg free
  5194  013C9E  0060  F097  FFE6   	movff	btemp,postinc1
  5195  013CA4  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5196  013CAA  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5197  013CB0  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5198  013CB6  EC74  F0C4         	call	___flsub	;wreg free
  5199  013CBA  0060  F097  FFE6   	movff	btemp,postinc1
  5200  013CC0  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5201  013CC6  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5202  013CCC  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5203  013CD2  EC14  F093         	call	___flmul	;wreg free
  5204  013CD6  D1AB               	goto	l1765
  5205  013CD8                     l9089:
  5206                           
  5207                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.03500
      +                          00;
  5208  013CD8  0E29               	movlw	41
  5209  013CDA  6EE6               	movwf	postinc1,c
  5210  013CDC  0E5C               	movlw	92
  5211  013CDE  6EE6               	movwf	postinc1,c
  5212  013CE0  0E0F               	movlw	15
  5213  013CE2  6EE6               	movwf	postinc1,c
  5214  013CE4  0E3D               	movlw	61
  5215  013CE6  6EE6               	movwf	postinc1,c
  5216  013CE8  0060  F394  F02D   	movff	_R+34,btemp+8	;volatile
  5217  013CEE  0060  F398  F02E   	movff	_R+35,btemp+9	;volatile
  5218  013CF4  0E00               	movlw	0
  5219  013CF6  BE2E               	btfsc	(btemp+9)^0,7,c
  5220  013CF8  0EFF               	movlw	255
  5221  013CFA  6E2F               	movwf	(btemp+10)^0,c
  5222  013CFC  6E30               	movwf	(btemp+11)^0,c
  5223  013CFE  0060  F0B7  FFE6   	movff	btemp+8,postinc1
  5224  013D04  0060  F0BB  FFE6   	movff	btemp+9,postinc1
  5225  013D0A  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  5226  013D10  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  5227  013D16  0E01               	movlw	1
  5228  013D18  6EE6               	movwf	postinc1,c
  5229  013D1A  EC85  F0B0         	call	___xxtofl	;wreg free
  5230  013D1E  0060  F097  FFE6   	movff	btemp,postinc1
  5231  013D24  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5232  013D2A  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5233  013D30  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5234                           
  5235                           ;stkvar	_chan @ sp[(-8)+-1]
  5236  013D36  0EF7               	movlw	-9
  5237  013D38  50E3               	movf	plusw1,w,c
  5238  013D3A  6EE6               	movwf	postinc1,c
  5239  013D3C  EC6F  F0C9         	call	_get_raw_result	;wreg free
  5240  013D40  0060  F094  F02F   	movff	btemp,btemp+10
  5241  013D46  0060  F098  F030   	movff	btemp+1,btemp+11
  5242  013D4C  502F               	movf	(btemp+10)^0,w,c
  5243  013D4E  6E29               	movwf	(btemp+4)^0,c
  5244  013D50  5030               	movf	(btemp+11)^0,w,c
  5245  013D52  6E2A               	movwf	(btemp+5)^0,c
  5246  013D54  6A2B               	clrf	(btemp+6)^0,c
  5247  013D56  6A2C               	clrf	(btemp+7)^0,c
  5248  013D58  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5249  013D5E  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5250  013D64  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5251  013D6A  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5252  013D70  0E00               	movlw	0
  5253  013D72  6EE6               	movwf	postinc1,c
  5254  013D74  EC85  F0B0         	call	___xxtofl	;wreg free
  5255  013D78  0060  F097  FFE6   	movff	btemp,postinc1
  5256  013D7E  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5257  013D84  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5258  013D8A  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5259  013D90  EC74  F0C4         	call	___flsub	;wreg free
  5260  013D94  0060  F097  FFE6   	movff	btemp,postinc1
  5261  013D9A  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5262  013DA0  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5263  013DA6  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5264  013DAC  EC14  F093         	call	___flmul	;wreg free
  5265  013DB0  D13E               	goto	l1765
  5266  013DB2                     l9093:
  5267                           
  5268                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  5269                           ;stkvar	_chan @ sp[(0)+-1]
  5270  013DB2  0EFF               	movlw	-1
  5271  013DB4  006F FF8C  F030    	movff	plusw1,btemp+11
  5272  013DBA  0E00               	movlw	0
  5273  013DBC  6E2D               	movwf	(btemp+8)^0,c
  5274  013DBE  0E08               	movlw	8
  5275  013DC0  6E2E               	movwf	(btemp+9)^0,c
  5276  013DC2  2A30               	incf	(btemp+11)^0,f,c
  5277  013DC4  D003               	goto	u8374
  5278  013DC6                     u8375:
  5279  013DC6  342E               	rlcf	(btemp+9)^0,w,c
  5280  013DC8  322E               	rrcf	(btemp+9)^0,f,c
  5281  013DCA  322D               	rrcf	(btemp+8)^0,f,c
  5282  013DCC                     u8374:
  5283  013DCC  2E30               	decfsz	(btemp+11)^0,f,c
  5284  013DCE  D7FB               	goto	u8375
  5285  013DD0  A02D               	btfss	(btemp+8)^0,0,c
  5286  013DD2  D008               	goto	l9101
  5287                           
  5288                           ;daq.c: 96:     return 25.0;
  5289  013DD4  0E00               	movlw	0
  5290  013DD6  6E25               	movwf	btemp^0,c
  5291  013DD8  0E00               	movlw	0
  5292  013DDA  6E26               	movwf	(btemp+1)^0,c
  5293  013DDC  0EC8               	movlw	200
  5294  013DDE  6E27               	movwf	(btemp+2)^0,c
  5295  013DE0  0E41               	movlw	65
  5296  013DE2  D113               	goto	L4
  5297  013DE4                     l9101:
  5298                           
  5299                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  5300  013DE4  0E00               	movlw	0
  5301  013DE6  6EE6               	movwf	postinc1,c
  5302  013DE8  0E00               	movlw	0
  5303  013DEA  6EE6               	movwf	postinc1,c
  5304  013DEC  0E7A               	movlw	122
  5305  013DEE  6EE6               	movwf	postinc1,c
  5306  013DF0  0E44               	movlw	68
  5307  013DF2  6EE6               	movwf	postinc1,c
  5308  013DF4  0E61               	movlw	97
  5309  013DF6  6EE6               	movwf	postinc1,c
  5310  013DF8  0E03               	movlw	3
  5311  013DFA  6EE6               	movwf	postinc1,c
  5312  013DFC  0E84               	movlw	132
  5313  013DFE  6EE6               	movwf	postinc1,c
  5314  013E00  0E40               	movlw	64
  5315  013E02  6EE6               	movwf	postinc1,c
  5316                           
  5317                           ;stkvar	_chan @ sp[(-8)+-1]
  5318  013E04  0EF7               	movlw	-9
  5319  013E06  50E3               	movf	plusw1,w,c
  5320  013E08  6EE6               	movwf	postinc1,c
  5321  013E0A  EC6F  F0C9         	call	_get_raw_result	;wreg free
  5322  013E0E  0060  F094  F02F   	movff	btemp,btemp+10
  5323  013E14  0060  F098  F030   	movff	btemp+1,btemp+11
  5324  013E1A  502F               	movf	(btemp+10)^0,w,c
  5325  013E1C  6E29               	movwf	(btemp+4)^0,c
  5326  013E1E  5030               	movf	(btemp+11)^0,w,c
  5327  013E20  6E2A               	movwf	(btemp+5)^0,c
  5328  013E22  6A2B               	clrf	(btemp+6)^0,c
  5329  013E24  6A2C               	clrf	(btemp+7)^0,c
  5330  013E26  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5331  013E2C  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5332  013E32  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5333  013E38  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5334  013E3E  0E00               	movlw	0
  5335  013E40  6EE6               	movwf	postinc1,c
  5336  013E42  EC85  F0B0         	call	___xxtofl	;wreg free
  5337  013E46  0060  F097  FFE6   	movff	btemp,postinc1
  5338  013E4C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5339  013E52  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5340  013E58  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5341  013E5E  EC14  F093         	call	___flmul	;wreg free
  5342  013E62  0060  F097  FFE6   	movff	btemp,postinc1
  5343  013E68  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5344  013E6E  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5345  013E74  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5346  013E7A  EC07  F09B         	call	___fldiv	;wreg free
  5347  013E7E  D0D7               	goto	l1765
  5348  013E80                     l9105:
  5349                           
  5350                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  5351                           ;stkvar	_chan @ sp[(0)+-1]
  5352  013E80  0EFF               	movlw	-1
  5353  013E82  006F FF8C  F030    	movff	plusw1,btemp+11
  5354  013E88  0E03               	movlw	3
  5355  013E8A  6E2D               	movwf	(btemp+8)^0,c
  5356  013E8C  0E00               	movlw	0
  5357  013E8E  6E2E               	movwf	(btemp+9)^0,c
  5358  013E90  2A30               	incf	(btemp+11)^0,f,c
  5359  013E92  D003               	goto	u8394
  5360  013E94                     u8395:
  5361  013E94  342E               	rlcf	(btemp+9)^0,w,c
  5362  013E96  322E               	rrcf	(btemp+9)^0,f,c
  5363  013E98  322D               	rrcf	(btemp+8)^0,f,c
  5364  013E9A                     u8394:
  5365  013E9A  2E30               	decfsz	(btemp+11)^0,f,c
  5366  013E9C  D7FB               	goto	u8395
  5367  013E9E  B02D               	btfsc	(btemp+8)^0,0,c
  5368  013EA0  D011               	goto	u8420
  5369                           
  5370                           ;stkvar	_chan @ sp[(0)+-1]
  5371  013EA2  0EFF               	movlw	-1
  5372  013EA4  006F FF8C  F030    	movff	plusw1,btemp+11
  5373  013EAA  0E00               	movlw	0
  5374  013EAC  6E2D               	movwf	(btemp+8)^0,c
  5375  013EAE  0E08               	movlw	8
  5376  013EB0  6E2E               	movwf	(btemp+9)^0,c
  5377  013EB2  2A30               	incf	(btemp+11)^0,f,c
  5378  013EB4  D003               	goto	u8414
  5379  013EB6                     u8415:
  5380  013EB6  342E               	rlcf	(btemp+9)^0,w,c
  5381  013EB8  322E               	rrcf	(btemp+9)^0,f,c
  5382  013EBA  322D               	rrcf	(btemp+8)^0,f,c
  5383  013EBC                     u8414:
  5384  013EBC  2E30               	decfsz	(btemp+11)^0,f,c
  5385  013EBE  D7FB               	goto	u8415
  5386  013EC0  A02D               	btfss	(btemp+8)^0,0,c
  5387  013EC2  D04E               	goto	l9113
  5388  013EC4                     u8420:
  5389                           
  5390                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  5391  013EC4  0E00               	movlw	0
  5392  013EC6  6EE6               	movwf	postinc1,c
  5393  013EC8  0E00               	movlw	0
  5394  013ECA  6EE6               	movwf	postinc1,c
  5395  013ECC  0E7A               	movlw	122
  5396  013ECE  6EE6               	movwf	postinc1,c
  5397  013ED0  0E44               	movlw	68
  5398  013ED2  6EE6               	movwf	postinc1,c
  5399  013ED4  0E00               	movlw	0
  5400  013ED6  6EE6               	movwf	postinc1,c
  5401  013ED8  0E00               	movlw	0
  5402  013EDA  6EE6               	movwf	postinc1,c
  5403  013EDC  0E20               	movlw	32
  5404  013EDE  6EE6               	movwf	postinc1,c
  5405  013EE0  0E3F               	movlw	63
  5406  013EE2  6EE6               	movwf	postinc1,c
  5407                           
  5408                           ;stkvar	_chan @ sp[(-8)+-1]
  5409  013EE4  0EF7               	movlw	-9
  5410  013EE6  50E3               	movf	plusw1,w,c
  5411  013EE8  6EE6               	movwf	postinc1,c
  5412  013EEA  EC6F  F0C9         	call	_get_raw_result	;wreg free
  5413  013EEE  0060  F094  F02F   	movff	btemp,btemp+10
  5414  013EF4  0060  F098  F030   	movff	btemp+1,btemp+11
  5415  013EFA  502F               	movf	(btemp+10)^0,w,c
  5416  013EFC  6E29               	movwf	(btemp+4)^0,c
  5417  013EFE  5030               	movf	(btemp+11)^0,w,c
  5418  013F00  6E2A               	movwf	(btemp+5)^0,c
  5419  013F02  6A2B               	clrf	(btemp+6)^0,c
  5420  013F04  6A2C               	clrf	(btemp+7)^0,c
  5421  013F06  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5422  013F0C  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5423  013F12  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5424  013F18  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5425  013F1E  0E00               	movlw	0
  5426  013F20  6EE6               	movwf	postinc1,c
  5427  013F22  EC85  F0B0         	call	___xxtofl	;wreg free
  5428  013F26  0060  F097  FFE6   	movff	btemp,postinc1
  5429  013F2C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5430  013F32  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5431  013F38  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5432  013F3E  EC14  F093         	call	___flmul	;wreg free
  5433  013F42  0060  F097  FFE6   	movff	btemp,postinc1
  5434  013F48  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5435  013F4E  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5436  013F54  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5437  013F5A  EC07  F09B         	call	___fldiv	;wreg free
  5438  013F5E  D067               	goto	l1765
  5439  013F60                     l9113:
  5440                           
  5441                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  5442  013F60  0E00               	movlw	0
  5443  013F62  6EE6               	movwf	postinc1,c
  5444  013F64  0E00               	movlw	0
  5445  013F66  6EE6               	movwf	postinc1,c
  5446  013F68  0E7A               	movlw	122
  5447  013F6A  6EE6               	movwf	postinc1,c
  5448  013F6C  0E44               	movlw	68
  5449  013F6E  6EE6               	movwf	postinc1,c
  5450  013F70  0E61               	movlw	97
  5451  013F72  6EE6               	movwf	postinc1,c
  5452  013F74  0E03               	movlw	3
  5453  013F76  6EE6               	movwf	postinc1,c
  5454  013F78  0E84               	movlw	132
  5455  013F7A  6EE6               	movwf	postinc1,c
  5456  013F7C  0E40               	movlw	64
  5457  013F7E  6EE6               	movwf	postinc1,c
  5458                           
  5459                           ;stkvar	_chan @ sp[(-8)+-1]
  5460  013F80  0EF7               	movlw	-9
  5461  013F82  50E3               	movf	plusw1,w,c
  5462  013F84  6EE6               	movwf	postinc1,c
  5463  013F86  EC6F  F0C9         	call	_get_raw_result	;wreg free
  5464  013F8A  0060  F094  F02F   	movff	btemp,btemp+10
  5465  013F90  0060  F098  F030   	movff	btemp+1,btemp+11
  5466  013F96  502F               	movf	(btemp+10)^0,w,c
  5467  013F98  6E29               	movwf	(btemp+4)^0,c
  5468  013F9A  5030               	movf	(btemp+11)^0,w,c
  5469  013F9C  6E2A               	movwf	(btemp+5)^0,c
  5470  013F9E  6A2B               	clrf	(btemp+6)^0,c
  5471  013FA0  6A2C               	clrf	(btemp+7)^0,c
  5472  013FA2  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5473  013FA8  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5474  013FAE  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5475  013FB4  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5476  013FBA  0E00               	movlw	0
  5477  013FBC  6EE6               	movwf	postinc1,c
  5478  013FBE  EC85  F0B0         	call	___xxtofl	;wreg free
  5479  013FC2  0060  F097  FFE6   	movff	btemp,postinc1
  5480  013FC8  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5481  013FCE  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5482  013FD4  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5483  013FDA  EC14  F093         	call	___flmul	;wreg free
  5484  013FDE  0060  F097  FFE6   	movff	btemp,postinc1
  5485  013FE4  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5486  013FEA  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5487  013FF0  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5488  013FF6  EC07  F09B         	call	___fldiv	;wreg free
  5489  013FFA  D019               	goto	l1765
  5490  013FFC                     l9119:
  5491                           
  5492                           ;daq.c: 109:   return 0.0;
  5493  013FFC  0E00               	movlw	0
  5494  013FFE  6E25               	movwf	btemp^0,c
  5495  014000  0E00               	movlw	0
  5496  014002  6E26               	movwf	(btemp+1)^0,c
  5497  014004  0E00               	movlw	0
  5498  014006  6E27               	movwf	(btemp+2)^0,c
  5499  014008  0E00               	movlw	0
  5500  01400A                     L4:
  5501  01400A  6E28               	movwf	(btemp+3)^0,c
  5502  01400C  D010               	goto	l1765
  5503  01400E                     l9127:
  5504                           
  5505                           ;stkvar	_to_what @ sp[(0)+-2]
  5506  01400E  0EFE               	movlw	-2
  5507  014010  50E3               	movf	plusw1,w,c
  5508  014012  6E2F               	movwf	(btemp+10)^0,c
  5509  014014  6A30               	clrf	(btemp+11)^0,c
  5510                           
  5511                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5512                           ; Switch size 1, requested type "simple"
  5513                           ; Number of cases is 1, Range of values is 0 to 0
  5514                           ; switch strategies available:
  5515                           ; Name         Instructions Cycles
  5516                           ; simple_byte            4     3 (average)
  5517                           ;	Chosen strategy is simple_byte
  5518  014016  5030               	movf	(btemp+11)^0,w,c
  5519  014018  0A00               	xorlw	0	; case 0
  5520  01401A  A4D8               	btfss	status,2,c
  5521  01401C  D7EF               	goto	l9119
  5522                           
  5523                           ; Switch size 1, requested type "simple"
  5524                           ; Number of cases is 2, Range of values is 0 to 1
  5525                           ; switch strategies available:
  5526                           ; Name         Instructions Cycles
  5527                           ; simple_byte            7     4 (average)
  5528                           ;	Chosen strategy is simple_byte
  5529  01401E  502F               	movf	(btemp+10)^0,w,c
  5530  014020  0A00               	xorlw	0	; case 0
  5531  014022  B4D8               	btfsc	status,2,c
  5532  014024  D5B2               	goto	l9073
  5533  014026  0A01               	xorlw	1	; case 1
  5534  014028  B4D8               	btfsc	status,2,c
  5535  01402A  D72A               	goto	l9105
  5536  01402C  D7E7               	goto	l9119
  5537  01402E                     l1765:
  5538                           
  5539                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  5540  01402E  52E5               	movf	postdec1,f,c
  5541  014030  52E5               	movf	postdec1,f,c
  5542  014032  0012               	return		;funcret
  5543  014034                     __end_of_conv_raw_result:
  5544                           	opt callstack 0
  5545                           
  5546 ;; *************** function _nanf *****************
  5547 ;; Defined at:
  5548 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;  s               2  [STACK] PTR const unsigned char 
  5551 ;;		 -> STR_45(1), 
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;  u               4  [STACK] struct .
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  4  [STACK] float 
  5556 ;; Registers used:
  5557 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/2
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5567 ;;Total ram usage:        0 bytes
  5568 ;; Hardware stack levels used:    1
  5569 ;; Hardware stack levels required when called:    7
  5570 ;; This function calls:
  5571 ;;		Nothing
  5572 ;; This function is called by:
  5573 ;;		_conv_raw_result
  5574 ;; This function uses a reentrant model
  5575 ;;
  5576                           
  5577                           	psect	text19
  5578  0184EE                     __ptext19:
  5579                           	opt callstack 0
  5580  0184EE                     _nanf:
  5581                           	opt callstack 0
  5582                           
  5583                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5584  0184EE  52E6               	movf	postinc1,f,c
  5585  0184F0  52E6               	movf	postinc1,f,c
  5586  0184F2  52E6               	movf	postinc1,f,c
  5587  0184F4  52E6               	movf	postinc1,f,c
  5588                           
  5589                           ;incstack = 0
  5590  0184F6  0EFF               	movlw	255
  5591  0184F8  6E2D               	movwf	(btemp+8)^0,c
  5592  0184FA  0EFF               	movlw	255
  5593  0184FC  6E2E               	movwf	(btemp+9)^0,c
  5594  0184FE  0EFF               	movlw	255
  5595  018500  6E2F               	movwf	(btemp+10)^0,c
  5596  018502  0E7F               	movlw	127
  5597  018504  6E30               	movwf	(btemp+11)^0,c
  5598                           
  5599                           ;stkvar	_u @ sp[(-4)+0]
  5600  018506  0EFC               	movlw	-4
  5601  018508  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  5602  01850E  0EFD               	movlw	-3
  5603  018510  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  5604  018516  0EFE               	movlw	-2
  5605  018518  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  5606  01851E  0EFF               	movlw	-1
  5607  018520  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  5608                           
  5609                           ;stkvar	_u @ sp[(-4)+0]
  5610  018526  0EFC               	movlw	-4
  5611  018528  006F FF8C  F025    	movff	plusw1,btemp
  5612  01852E  0EFD               	movlw	-3
  5613  018530  006F FF8C  F026    	movff	plusw1,btemp+1
  5614  018536  0EFE               	movlw	-2
  5615  018538  006F FF8C  F027    	movff	plusw1,btemp+2
  5616  01853E  0EFF               	movlw	-1
  5617  018540  006F FF8C  F028    	movff	plusw1,btemp+3
  5618                           
  5619                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  5620  018546  0EFA               	movlw	250
  5621  018548  26E1               	addwf	fsr1l,f,c
  5622  01854A  0EFF               	movlw	255
  5623  01854C  22E2               	addwfc	fsr1h,f,c
  5624  01854E  0012               	return		;funcret
  5625  018550                     __end_of_nanf:
  5626                           	opt callstack 0
  5627                           
  5628 ;; *************** function _get_raw_result *****************
  5629 ;; Defined at:
  5630 ;;		line 72 in file "daq.c"
  5631 ;; Parameters:    Size  Location     Type
  5632 ;;  index           1  [STACK] const enum E16136
  5633 ;; Auto vars:     Size  Location     Type
  5634 ;;		None
  5635 ;; Return value:  Size  Location     Type
  5636 ;;                  2  [STACK] unsigned short 
  5637 ;; Registers used:
  5638 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5639 ;; Tracked objects:
  5640 ;;		On entry : 0/2
  5641 ;;		On exit  : 0/0
  5642 ;;		Unchanged: 0/0
  5643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5648 ;;Total ram usage:        0 bytes
  5649 ;; Hardware stack levels used:    1
  5650 ;; Hardware stack levels required when called:    7
  5651 ;; This function calls:
  5652 ;;		Nothing
  5653 ;; This function is called by:
  5654 ;;		_main
  5655 ;;		_conv_raw_result
  5656 ;; This function uses a reentrant model
  5657 ;;
  5658                           
  5659                           	psect	text20
  5660  0192DE                     __ptext20:
  5661                           	opt callstack 0
  5662  0192DE                     _get_raw_result:
  5663                           	opt callstack 23
  5664                           
  5665                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  5666                           ;stkvar	_index @ sp[(0)+-1]
  5667                           
  5668                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5669                           ;incstack = 0
  5670  0192DE  0EFF               	movlw	-1
  5671  0192E0  50E3               	movf	plusw1,w,c
  5672  0192E2  0D02               	mullw	2
  5673  0192E4  50F3               	movf	243,w,c
  5674  0192E6  0FC3               	addlw	low _R
  5675  0192E8  6ED9               	movwf	fsr2l,c
  5676  0192EA  6ADA               	clrf	fsr2h,c
  5677  0192EC  006F FF78  F025    	movff	postinc2,btemp
  5678  0192F2  006F FF74  F026    	movff	postdec2,btemp+1
  5679                           
  5680                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  5681  0192F8  52E5               	movf	postdec1,f,c
  5682  0192FA  0012               	return		;funcret
  5683  0192FC                     __end_of_get_raw_result:
  5684                           	opt callstack 0
  5685                           
  5686 ;; *************** function ___xxtofl *****************
  5687 ;; Defined at:
  5688 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  5689 ;; Parameters:    Size  Location     Type
  5690 ;;  sign            1  [STACK] unsigned char 
  5691 ;;  val             4  [STACK] long 
  5692 ;; Auto vars:     Size  Location     Type
  5693 ;;  arg             4  [STACK] unsigned long 
  5694 ;;  exp             1  [STACK] unsigned char 
  5695 ;; Return value:  Size  Location     Type
  5696 ;;                  4  [STACK] unsigned char 
  5697 ;; Registers used:
  5698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  5699 ;; Tracked objects:
  5700 ;;		On entry : 0/2
  5701 ;;		On exit  : 0/0
  5702 ;;		Unchanged: 0/0
  5703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5708 ;;Total ram usage:        0 bytes
  5709 ;; Hardware stack levels used:    1
  5710 ;; Hardware stack levels required when called:    7
  5711 ;; This function calls:
  5712 ;;		Nothing
  5713 ;; This function is called by:
  5714 ;;		_conv_raw_result
  5715 ;; This function uses a reentrant model
  5716 ;;
  5717                           
  5718                           	psect	text21
  5719  01610A                     __ptext21:
  5720                           	opt callstack 0
  5721  01610A                     ___xxtofl:
  5722                           	opt callstack 0
  5723                           
  5724                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5725  01610A  0E05               	movlw	5
  5726  01610C  26E1               	addwf	fsr1l,f,c
  5727  01610E  0E00               	movlw	0
  5728  016110  22E2               	addwfc	fsr1h,f,c
  5729                           
  5730                           ;stkvar	_sign @ sp[(-5)+-1]
  5731                           
  5732                           ;incstack = 0
  5733  016112  0EFA               	movlw	-6
  5734  016114  50E3               	movf	plusw1,w,c
  5735  016116  B4D8               	btfsc	status,2,c
  5736  016118  D01D               	goto	l8511
  5737                           
  5738                           ;stkvar	_val @ sp[(-5)+-5]
  5739  01611A  0EF9               	movlw	-7
  5740  01611C  AEE3               	btfss	plusw1,7,c
  5741  01611E  D01A               	goto	l8511
  5742                           
  5743                           ;stkvar	_val @ sp[(-5)+-5]
  5744  016120  0EF6               	movlw	-10
  5745  016122  006F FF8C  F02D    	movff	plusw1,btemp+8
  5746  016128  0EF7               	movlw	-9
  5747  01612A  006F FF8C  F02E    	movff	plusw1,btemp+9
  5748  016130  0EF8               	movlw	-8
  5749  016132  006F FF8C  F02F    	movff	plusw1,btemp+10
  5750  016138  0EF9               	movlw	-7
  5751  01613A  006F FF8C  F030    	movff	plusw1,btemp+11
  5752  016140  1E2D               	comf	(btemp+8)^0,f,c
  5753  016142  1E2E               	comf	(btemp+9)^0,f,c
  5754  016144  1E2F               	comf	(btemp+10)^0,f,c
  5755  016146  1E30               	comf	(btemp+11)^0,f,c
  5756  016148  2A2D               	incf	(btemp+8)^0,f,c
  5757  01614A  0E00               	movlw	0
  5758  01614C  222E               	addwfc	(btemp+9)^0,f,c
  5759  01614E  222F               	addwfc	(btemp+10)^0,f,c
  5760  016150  2230               	addwfc	(btemp+11)^0,f,c
  5761  016152  D010               	goto	L5
  5762  016154                     l8511:
  5763                           
  5764                           ;stkvar	_val @ sp[(-5)+-5]
  5765  016154  0EF6               	movlw	-10
  5766  016156  006F FF8C  F02D    	movff	plusw1,btemp+8
  5767  01615C  0EF7               	movlw	-9
  5768  01615E  006F FF8C  F02E    	movff	plusw1,btemp+9
  5769  016164  0EF8               	movlw	-8
  5770  016166  006F FF8C  F02F    	movff	plusw1,btemp+10
  5771  01616C  0EF9               	movlw	-7
  5772  01616E  006F FF8C  F030    	movff	plusw1,btemp+11
  5773  016174                     L5:
  5774                           
  5775                           ;stkvar	_arg @ sp[(-5)+0]
  5776  016174  0EFB               	movlw	-5
  5777  016176  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  5778  01617C  0EFC               	movlw	-4
  5779  01617E  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  5780  016184  0EFD               	movlw	-3
  5781  016186  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  5782  01618C  0EFE               	movlw	-2
  5783  01618E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  5784                           
  5785                           ;stkvar	_val @ sp[(-5)+-5]
  5786  016194  0EF6               	movlw	-10
  5787  016196  50E3               	movf	plusw1,w,c
  5788  016198  E113               	bnz	l8519
  5789  01619A  0EF7               	movlw	-9
  5790  01619C  50E3               	movf	plusw1,w,c
  5791  01619E  E110               	bnz	l8519
  5792  0161A0  0EF8               	movlw	-8
  5793  0161A2  50E3               	movf	plusw1,w,c
  5794  0161A4  E10D               	bnz	l8519
  5795  0161A6  0EF9               	movlw	-7
  5796  0161A8  50E3               	movf	plusw1,w,c
  5797  0161AA  A4D8               	btfss	status,2,c
  5798  0161AC  D009               	goto	l8519
  5799  0161AE  0E00               	movlw	0
  5800  0161B0  6E25               	movwf	btemp^0,c
  5801  0161B2  0E00               	movlw	0
  5802  0161B4  6E26               	movwf	(btemp+1)^0,c
  5803  0161B6  0E00               	movlw	0
  5804  0161B8  6E27               	movwf	(btemp+2)^0,c
  5805  0161BA  0E00               	movlw	0
  5806  0161BC  6E28               	movwf	(btemp+3)^0,c
  5807  0161BE  D0A2               	goto	l2880
  5808  0161C0                     l8519:
  5809  0161C0  0E96               	movlw	150
  5810  0161C2  6E30               	movwf	(btemp+11)^0,c
  5811                           
  5812                           ;stkvar	_exp @ sp[(-5)+4]
  5813  0161C4  0EFF               	movlw	-1
  5814  0161C6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  5815  0161CC  D00B               	goto	l8523
  5816  0161CE                     l8521:
  5817                           
  5818                           ;stkvar	_exp @ sp[(-5)+4]
  5819  0161CE  0EFF               	movlw	-1
  5820  0161D0  2AE3               	incf	plusw1,f,c
  5821                           
  5822                           ;stkvar	_arg @ sp[(-5)+0]
  5823  0161D2  90D8               	bcf	status,0,c
  5824  0161D4  0EFE               	movlw	-2
  5825  0161D6  32E3               	rrcf	plusw1,f,c
  5826  0161D8  0EFD               	movlw	-3
  5827  0161DA  32E3               	rrcf	plusw1,f,c
  5828  0161DC  0EFC               	movlw	-4
  5829  0161DE  32E3               	rrcf	plusw1,f,c
  5830  0161E0  0EFB               	movlw	-5
  5831  0161E2  32E3               	rrcf	plusw1,f,c
  5832  0161E4                     l8523:
  5833                           
  5834                           ;stkvar	_arg @ sp[(-5)+0]
  5835  0161E4  50E1               	movf	fsr1l,w,c
  5836  0161E6  0FFB               	addlw	-5
  5837  0161E8  6ED9               	movwf	fsr2l,c
  5838  0161EA  50E2               	movf	fsr1h,w,c
  5839  0161EC  6EDA               	movwf	fsr2h,c
  5840  0161EE  0EFF               	movlw	255
  5841  0161F0  22DA               	addwfc	fsr2h,f,c
  5842  0161F2  52DE               	movf	postinc2,f,c
  5843  0161F4  52DE               	movf	postinc2,f,c
  5844  0161F6  52DE               	movf	postinc2,f,c
  5845  0161F8  0EFE               	movlw	254
  5846  0161FA  14DD               	andwf	postdec2,w,c
  5847  0161FC  B4D8               	btfsc	status,2,c
  5848  0161FE  D018               	goto	l8531
  5849  016200  D7E6               	goto	l8521
  5850  016202                     l8525:
  5851                           
  5852                           ;stkvar	_exp @ sp[(-5)+4]
  5853  016202  0EFF               	movlw	-1
  5854  016204  2AE3               	incf	plusw1,f,c
  5855                           
  5856                           ;stkvar	_arg @ sp[(-5)+0]
  5857  016206  50E1               	movf	fsr1l,w,c
  5858  016208  0FFB               	addlw	-5
  5859  01620A  6ED9               	movwf	fsr2l,c
  5860  01620C  50E2               	movf	fsr1h,w,c
  5861  01620E  6EDA               	movwf	fsr2h,c
  5862  016210  0EFF               	movlw	255
  5863  016212  22DA               	addwfc	fsr2h,f,c
  5864  016214  2ADE               	incf	postinc2,f,c
  5865  016216  0E00               	movlw	0
  5866  016218  22DE               	addwfc	postinc2,f,c
  5867  01621A  22DE               	addwfc	postinc2,f,c
  5868  01621C  22DE               	addwfc	postinc2,f,c
  5869                           
  5870                           ;stkvar	_arg @ sp[(-5)+0]
  5871  01621E  90D8               	bcf	status,0,c
  5872  016220  0EFE               	movlw	-2
  5873  016222  32E3               	rrcf	plusw1,f,c
  5874  016224  0EFD               	movlw	-3
  5875  016226  32E3               	rrcf	plusw1,f,c
  5876  016228  0EFC               	movlw	-4
  5877  01622A  32E3               	rrcf	plusw1,f,c
  5878  01622C  0EFB               	movlw	-5
  5879  01622E  32E3               	rrcf	plusw1,f,c
  5880  016230                     l8531:
  5881                           
  5882                           ;stkvar	_arg @ sp[(-5)+0]
  5883  016230  50E1               	movf	fsr1l,w,c
  5884  016232  0FFB               	addlw	-5
  5885  016234  6ED9               	movwf	fsr2l,c
  5886  016236  50E2               	movf	fsr1h,w,c
  5887  016238  6EDA               	movwf	fsr2h,c
  5888  01623A  0EFF               	movlw	255
  5889  01623C  22DA               	addwfc	fsr2h,f,c
  5890  01623E  52DE               	movf	postinc2,f,c
  5891  016240  52DE               	movf	postinc2,f,c
  5892  016242  52DE               	movf	postinc2,f,c
  5893  016244  0EFF               	movlw	255
  5894  016246  14DD               	andwf	postdec2,w,c
  5895  016248  B4D8               	btfsc	status,2,c
  5896  01624A  D00C               	goto	l8535
  5897  01624C  D7DA               	goto	l8525
  5898  01624E                     l8533:
  5899                           
  5900                           ;stkvar	_exp @ sp[(-5)+4]
  5901  01624E  0EFF               	movlw	-1
  5902  016250  06E3               	decf	plusw1,f,c
  5903                           
  5904                           ;stkvar	_arg @ sp[(-5)+0]
  5905  016252  90D8               	bcf	status,0,c
  5906  016254  0EFB               	movlw	-5
  5907  016256  36E3               	rlcf	plusw1,f,c
  5908  016258  0EFC               	movlw	-4
  5909  01625A  36E3               	rlcf	plusw1,f,c
  5910  01625C  0EFD               	movlw	-3
  5911  01625E  36E3               	rlcf	plusw1,f,c
  5912  016260  0EFE               	movlw	-2
  5913  016262  36E3               	rlcf	plusw1,f,c
  5914  016264                     l8535:
  5915                           
  5916                           ;stkvar	_arg @ sp[(-5)+0]
  5917  016264  0EFD               	movlw	-3
  5918  016266  BEE3               	btfsc	plusw1,7,c
  5919  016268  D007               	goto	u8110
  5920                           
  5921                           ;stkvar	_exp @ sp[(-5)+4]
  5922  01626A  0EFF               	movlw	-1
  5923  01626C  006F FF8C  F025    	movff	plusw1,btemp
  5924  016272  0E02               	movlw	2
  5925  016274  6025               	cpfslt	btemp^0,c
  5926  016276  D7EB               	goto	l8533
  5927  016278                     u8110:
  5928                           
  5929                           ;stkvar	_exp @ sp[(-5)+4]
  5930  016278  0EFF               	movlw	-1
  5931  01627A  B0E3               	btfsc	plusw1,0,c
  5932  01627C  D002               	goto	l8543
  5933                           
  5934                           ;stkvar	_arg @ sp[(-5)+0]
  5935  01627E  0EFD               	movlw	-3
  5936  016280  9EE3               	bcf	plusw1,7,c
  5937  016282                     l8543:
  5938                           
  5939                           ;stkvar	_exp @ sp[(-5)+4]
  5940  016282  50E1               	movf	fsr1l,w,c
  5941  016284  0FFF               	addlw	-1
  5942  016286  6ED9               	movwf	fsr2l,c
  5943  016288  50E2               	movf	fsr1h,w,c
  5944  01628A  6EDA               	movwf	fsr2h,c
  5945  01628C  0EFF               	movlw	255
  5946  01628E  22DA               	addwfc	fsr2h,f,c
  5947  016290  90D8               	bcf	status,0,c
  5948  016292  32DF               	rrcf	indf2,f,c
  5949                           
  5950                           ;stkvar	_exp @ sp[(-5)+4]
  5951  016294  0EFF               	movlw	-1
  5952  016296  006F FF8C  F030    	movff	plusw1,btemp+11
  5953  01629C  0060  F0C0  F029   	movff	btemp+11,btemp+4
  5954  0162A2  6A2A               	clrf	(btemp+5)^0,c
  5955  0162A4  6A2B               	clrf	(btemp+6)^0,c
  5956  0162A6  6A2C               	clrf	(btemp+7)^0,c
  5957  0162A8  0060  F0A4  F02C   	movff	btemp+4,btemp+7
  5958  0162AE  6A2B               	clrf	(btemp+6)^0,c
  5959  0162B0  6A2A               	clrf	(btemp+5)^0,c
  5960  0162B2  6A29               	clrf	(btemp+4)^0,c
  5961                           
  5962                           ;stkvar	_arg @ sp[(-5)+0]
  5963  0162B4  50E1               	movf	fsr1l,w,c
  5964  0162B6  0FFB               	addlw	-5
  5965  0162B8  6ED9               	movwf	fsr2l,c
  5966  0162BA  50E2               	movf	fsr1h,w,c
  5967  0162BC  6EDA               	movwf	fsr2h,c
  5968  0162BE  0EFF               	movlw	255
  5969  0162C0  22DA               	addwfc	fsr2h,f,c
  5970  0162C2  5029               	movf	(btemp+4)^0,w,c
  5971  0162C4  12DE               	iorwf	postinc2,f,c
  5972  0162C6  502A               	movf	(btemp+5)^0,w,c
  5973  0162C8  12DE               	iorwf	postinc2,f,c
  5974  0162CA  502B               	movf	(btemp+6)^0,w,c
  5975  0162CC  12DE               	iorwf	postinc2,f,c
  5976  0162CE  502C               	movf	(btemp+7)^0,w,c
  5977  0162D0  12DE               	iorwf	postinc2,f,c
  5978                           
  5979                           ;stkvar	_sign @ sp[(-5)+-1]
  5980  0162D2  0EFA               	movlw	-6
  5981  0162D4  50E3               	movf	plusw1,w,c
  5982  0162D6  B4D8               	btfsc	status,2,c
  5983  0162D8  D005               	goto	l8553
  5984                           
  5985                           ;stkvar	_val @ sp[(-5)+-5]
  5986  0162DA  0EF9               	movlw	-7
  5987  0162DC  AEE3               	btfss	plusw1,7,c
  5988  0162DE  D002               	goto	l8553
  5989                           
  5990                           ;stkvar	_arg @ sp[(-5)+0]
  5991  0162E0  0EFE               	movlw	-2
  5992  0162E2  8EE3               	bsf	plusw1,7,c
  5993  0162E4                     l8553:
  5994                           
  5995                           ;stkvar	_arg @ sp[(-5)+0]
  5996  0162E4  0EFB               	movlw	-5
  5997  0162E6  006F FF8C  F025    	movff	plusw1,btemp
  5998  0162EC  0EFC               	movlw	-4
  5999  0162EE  006F FF8C  F026    	movff	plusw1,btemp+1
  6000  0162F4  0EFD               	movlw	-3
  6001  0162F6  006F FF8C  F027    	movff	plusw1,btemp+2
  6002  0162FC  0EFE               	movlw	-2
  6003  0162FE  006F FF8C  F028    	movff	plusw1,btemp+3
  6004  016304                     l2880:
  6005                           
  6006                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  6007  016304  0EF6               	movlw	246
  6008  016306  26E1               	addwf	fsr1l,f,c
  6009  016308  0EFF               	movlw	255
  6010  01630A  22E2               	addwfc	fsr1h,f,c
  6011  01630C  0012               	return		;funcret
  6012  01630E                     __end_of___xxtofl:
  6013                           	opt callstack 0
  6014                           
  6015 ;; *************** function _clear_hid_pflags *****************
  6016 ;; Defined at:
  6017 ;;		line 51 in file "hid.c"
  6018 ;; Parameters:    Size  Location     Type
  6019 ;;  h               1  [STACK] PTR struct H_data
  6020 ;;		 -> H(7), 
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;		None
  6023 ;; Return value:  Size  Location     Type
  6024 ;;                  1  [STACK] void 
  6025 ;; Registers used:
  6026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6027 ;; Tracked objects:
  6028 ;;		On entry : 3F/0
  6029 ;;		On exit  : 0/0
  6030 ;;		Unchanged: 0/0
  6031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6036 ;;Total ram usage:        0 bytes
  6037 ;; Hardware stack levels used:    1
  6038 ;; Hardware stack levels required when called:    7
  6039 ;; This function calls:
  6040 ;;		Nothing
  6041 ;; This function is called by:
  6042 ;;		_main
  6043 ;; This function uses a reentrant model
  6044 ;;
  6045                           
  6046                           	psect	text22
  6047  0191AA                     __ptext22:
  6048                           	opt callstack 0
  6049  0191AA                     _clear_hid_pflags:
  6050                           	opt callstack 23
  6051                           
  6052                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  6053                           ;stkvar	_h @ sp[(0)+-1]
  6054                           
  6055                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6056                           ;incstack = 0
  6057  0191AA  0EFF               	movlw	-1
  6058  0191AC  50E3               	movf	plusw1,w,c
  6059  0191AE  6ED9               	movwf	fsr2l,c
  6060  0191B0  6ADA               	clrf	fsr2h,c
  6061  0191B2  0E03               	movlw	3
  6062  0191B4  26D9               	addwf	fsr2l,f,c
  6063  0191B6  0E00               	movlw	0
  6064  0191B8  6EDF               	movwf	indf2,c
  6065                           
  6066                           ;hid.c: 54:  h->enter_p = SW_OFF;
  6067                           ;stkvar	_h @ sp[(0)+-1]
  6068  0191BA  0EFF               	movlw	-1
  6069  0191BC  50E3               	movf	plusw1,w,c
  6070  0191BE  6ED9               	movwf	fsr2l,c
  6071  0191C0  6ADA               	clrf	fsr2h,c
  6072  0191C2  0E05               	movlw	5
  6073  0191C4  26D9               	addwf	fsr2l,f,c
  6074  0191C6  0E00               	movlw	0
  6075  0191C8  6EDF               	movwf	indf2,c
  6076                           
  6077                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6078  0191CA  52E5               	movf	postdec1,f,c
  6079  0191CC  0012               	return		;funcret
  6080  0191CE                     __end_of_clear_hid_pflags:
  6081                           	opt callstack 0
  6082                           
  6083 ;; *************** function _clear_adc_scan *****************
  6084 ;; Defined at:
  6085 ;;		line 64 in file "daq.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;		None
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;		None
  6090 ;; Return value:  Size  Location     Type
  6091 ;;                  1  [STACK] void 
  6092 ;; Registers used:
  6093 ;;		None
  6094 ;; Tracked objects:
  6095 ;;		On entry : 0/1
  6096 ;;		On exit  : 3F/0
  6097 ;;		Unchanged: 0/0
  6098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6103 ;;Total ram usage:        0 bytes
  6104 ;; Hardware stack levels used:    1
  6105 ;; Hardware stack levels required when called:    7
  6106 ;; This function calls:
  6107 ;;		Nothing
  6108 ;; This function is called by:
  6109 ;;		_main
  6110 ;; This function uses a reentrant model
  6111 ;;
  6112                           
  6113                           	psect	text23
  6114  01950E                     __ptext23:
  6115                           	opt callstack 0
  6116  01950E                     _clear_adc_scan:
  6117                           	opt callstack 23
  6118                           
  6119                           ;daq.c: 66:  R.done = 0;
  6120                           
  6121                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6122                           ;incstack = 0
  6123  01950E  0100               	movlb	0	; () banked
  6124  019510  6BEA               	clrf	(_R+39)& (0+255),b	;volatile
  6125                           
  6126                           ; BSR set to: 0
  6127                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  6128  019512  0012               	return		;funcret
  6129  019514                     __end_of_clear_adc_scan:
  6130                           	opt callstack 0
  6131                           
  6132 ;; *************** function _check_help *****************
  6133 ;; Defined at:
  6134 ;;		line 40 in file "mconfig.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;  flipper         1  [STACK] const _Bool 
  6137 ;; Auto vars:     Size  Location     Type
  6138 ;;  estatus         1    0        _Bool 
  6139 ;; Return value:  Size  Location     Type
  6140 ;;                  1  [STACK] _Bool 
  6141 ;; Registers used:
  6142 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6143 ;; Tracked objects:
  6144 ;;		On entry : 3F/2
  6145 ;;		On exit  : 0/0
  6146 ;;		Unchanged: 0/0
  6147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6152 ;;Total ram usage:        0 bytes
  6153 ;; Hardware stack levels used:    1
  6154 ;; Hardware stack levels required when called:   19
  6155 ;; This function calls:
  6156 ;;		_StartTimer
  6157 ;;		_TimerDone
  6158 ;;		_display_help
  6159 ;;		_display_info
  6160 ;;		_get_vterm_ptr
  6161 ;;		_help_button
  6162 ;;		_mode_lamp_bright
  6163 ;;		_mode_lamp_dim
  6164 ;;		_set_display_info
  6165 ;;		_set_temp_display_help
  6166 ;;		_set_vterm
  6167 ;;		_sprintf
  6168 ;;		_update_lcd
  6169 ;;		_vterm_dump
  6170 ;; This function is called by:
  6171 ;;		_main
  6172 ;; This function uses a reentrant model
  6173 ;;
  6174                           
  6175                           	psect	text24
  6176  015EF8                     __ptext24:
  6177                           	opt callstack 0
  6178  015EF8                     _check_help:
  6179                           	opt callstack 11
  6180                           
  6181                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  6182                           
  6183                           ; BSR set to: 0
  6184                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6185                           ;incstack = 0
  6186  015EF8  ECBF  F0C5         	call	_help_button	;wreg free
  6187  015EFC  5025               	movf	btemp^0,w,c
  6188  015EFE  B4D8               	btfsc	status,2,c
  6189  015F00  D0D0               	goto	l11007
  6190  015F02  EC77  F0CA         	call	_display_info	;wreg free
  6191  015F06  0425               	decf	btemp^0,w,c
  6192  015F08  B4D8               	btfsc	status,2,c
  6193  015F0A  D0CB               	goto	l11007
  6194                           
  6195                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  6196  015F0C  0EDC               	movlw	220
  6197  015F0E  6EE6               	movwf	postinc1,c
  6198  015F10  0E05               	movlw	5
  6199  015F12  6EE6               	movwf	postinc1,c
  6200  015F14  0E0B               	movlw	11
  6201  015F16  6EE6               	movwf	postinc1,c
  6202  015F18  EC20  F0C5         	call	_StartTimer	;wreg free
  6203                           
  6204                           ;mconfig.c: 48:   if (V.debug)
  6205  015F1C  0102               	movlb	2	; () banked
  6206  015F1E  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  6207                           
  6208                           ; BSR set to: 2
  6209                           ;mconfig.c: 49:    vterm_dump();
  6210  015F20  EC27  F0B6         	call	_vterm_dump	;wreg free
  6211                           
  6212                           ;mconfig.c: 51:   set_vterm(1);
  6213  015F24  0E01               	movlw	1
  6214  015F26  6EE6               	movwf	postinc1,c
  6215  015F28  EC7E  F0C9         	call	_set_vterm	;wreg free
  6216                           
  6217                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  6218  015F2C  EC77  F0CA         	call	_display_info	;wreg free
  6219  015F30  5025               	movf	btemp^0,w,c
  6220  015F32  6EE6               	movwf	postinc1,c
  6221  015F34  EC38  F0CA         	call	_set_temp_display_help	;wreg free
  6222                           
  6223                           ; BSR set to: 2
  6224                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  6225  015F38  0E01               	movlw	1
  6226  015F3A  6EE6               	movwf	postinc1,c
  6227  015F3C  EC8D  F0C9         	call	_set_display_info	;wreg free
  6228                           
  6229                           ;mconfig.c: 54:   if (flipper) {
  6230                           ;stkvar	_flipper @ sp[(0)+-1]
  6231  015F40  0EFF               	movlw	-1
  6232  015F42  50E3               	movf	plusw1,w,c
  6233  015F44  B4D8               	btfsc	status,2,c
  6234  015F46  D019               	goto	l10993
  6235                           
  6236                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  6237  015F48  0EC1               	movlw	low STR_27
  6238  015F4A  6EE6               	movwf	postinc1,c
  6239  015F4C  0EFF               	movlw	high STR_27
  6240  015F4E  6EE6               	movwf	postinc1,c
  6241  015F50  0E80               	movlw	low STR_29
  6242  015F52  6EE6               	movwf	postinc1,c
  6243  015F54  0EFE               	movlw	high STR_29
  6244  015F56  6EE6               	movwf	postinc1,c
  6245  015F58  0E01               	movlw	1
  6246  015F5A  6EE6               	movwf	postinc1,c
  6247  015F5C  0E00               	movlw	0
  6248  015F5E  6EE6               	movwf	postinc1,c
  6249  015F60  ECC2  F0C6         	call	_get_vterm_ptr	;wreg free
  6250  015F64  0060  F097  FFE6   	movff	btemp,postinc1
  6251  015F6A  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6252  015F70  0E06               	movlw	6
  6253  015F72  6EE6               	movwf	postinc1,c
  6254  015F74  EC82  F0B9         	call	_sprintf	;wreg free
  6255                           
  6256                           ;mconfig.c: 56:   } else {
  6257  015F78  D018               	goto	l1669
  6258  015F7A                     l10993:
  6259                           
  6260                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  6261  015F7A  0ED7               	movlw	low STR_28
  6262  015F7C  6EE6               	movwf	postinc1,c
  6263  015F7E  0EFF               	movlw	high STR_28
  6264  015F80  6EE6               	movwf	postinc1,c
  6265  015F82  0E80               	movlw	low STR_29
  6266  015F84  6EE6               	movwf	postinc1,c
  6267  015F86  0EFE               	movlw	high STR_29
  6268  015F88  6EE6               	movwf	postinc1,c
  6269  015F8A  0E01               	movlw	1
  6270  015F8C  6EE6               	movwf	postinc1,c
  6271  015F8E  0E00               	movlw	0
  6272  015F90  6EE6               	movwf	postinc1,c
  6273  015F92  ECC2  F0C6         	call	_get_vterm_ptr	;wreg free
  6274  015F96  0060  F097  FFE6   	movff	btemp,postinc1
  6275  015F9C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6276  015FA2  0E06               	movlw	6
  6277  015FA4  6EE6               	movwf	postinc1,c
  6278  015FA6  EC82  F0B9         	call	_sprintf	;wreg free
  6279  015FAA                     l1669:
  6280                           
  6281                           ; BSR set to: 0
  6282                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  6283  015FAA  0102               	movlb	2	; () banked
  6284  015FAC  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  6285  015FAE  32E8               	rrcf	wreg,f,c
  6286  015FB0  32E8               	rrcf	wreg,f,c
  6287  015FB2  0B03               	andlw	3
  6288  015FB4  0D24               	mullw	36
  6289  015FB6  0E12               	movlw	18
  6290  015FB8  26F3               	addwf	243,f,c
  6291  015FBA  0E00               	movlw	0
  6292  015FBC  22F4               	addwfc	244,f,c
  6293  015FBE  0EB1               	movlw	low _T
  6294  015FC0  6E2F               	movwf	(btemp+10)^0,c
  6295  015FC2  0EFD               	movlw	high _T
  6296  015FC4  6E30               	movwf	(btemp+11)^0,c
  6297  015FC6  50F3               	movf	243,w,c
  6298  015FC8  262F               	addwf	(btemp+10)^0,f,c
  6299  015FCA  50F4               	movf	244,w,c
  6300  015FCC  2230               	addwfc	(btemp+11)^0,f,c
  6301  015FCE  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  6302  015FD4  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  6303  015FDA  0ECD               	movlw	low STR_31
  6304  015FDC  6EE6               	movwf	postinc1,c
  6305  015FDE  0EFF               	movlw	high STR_31
  6306  015FE0  6EE6               	movwf	postinc1,c
  6307  015FE2  0E01               	movlw	1
  6308  015FE4  6EE6               	movwf	postinc1,c
  6309  015FE6  0E01               	movlw	1
  6310  015FE8  6EE6               	movwf	postinc1,c
  6311  015FEA  ECC2  F0C6         	call	_get_vterm_ptr	;wreg free
  6312  015FEE  0060  F097  FFE6   	movff	btemp,postinc1
  6313  015FF4  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6314  015FFA  0E06               	movlw	6
  6315  015FFC  6EE6               	movwf	postinc1,c
  6316  015FFE  EC82  F0B9         	call	_sprintf	;wreg free
  6317                           
  6318                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  6319  016002  0102               	movlb	2	; () banked
  6320  016004  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  6321  016006  32E8               	rrcf	wreg,f,c
  6322  016008  32E8               	rrcf	wreg,f,c
  6323  01600A  0B03               	andlw	3
  6324  01600C  0D24               	mullw	36
  6325  01600E  0EB1               	movlw	low _T
  6326  016010  6E2F               	movwf	(btemp+10)^0,c
  6327  016012  0EFD               	movlw	high _T
  6328  016014  6E30               	movwf	(btemp+11)^0,c
  6329  016016  50F3               	movf	243,w,c
  6330  016018  262F               	addwf	(btemp+10)^0,f,c
  6331  01601A  50F4               	movf	244,w,c
  6332  01601C  2230               	addwfc	(btemp+11)^0,f,c
  6333  01601E  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  6334  016024  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  6335  01602A  0ECD               	movlw	low STR_31
  6336  01602C  6EE6               	movwf	postinc1,c
  6337  01602E  0EFF               	movlw	high STR_31
  6338  016030  6EE6               	movwf	postinc1,c
  6339  016032  0E01               	movlw	1
  6340  016034  6EE6               	movwf	postinc1,c
  6341  016036  0E02               	movlw	2
  6342  016038  6EE6               	movwf	postinc1,c
  6343  01603A  ECC2  F0C6         	call	_get_vterm_ptr	;wreg free
  6344  01603E  0060  F097  FFE6   	movff	btemp,postinc1
  6345  016044  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6346  01604A  0E06               	movlw	6
  6347  01604C  6EE6               	movwf	postinc1,c
  6348  01604E  EC82  F0B9         	call	_sprintf	;wreg free
  6349                           
  6350                           ; BSR set to: 0
  6351                           ;mconfig.c: 61:   V.help_id++;
  6352  016052  EE20  F29B         	lfsr	2,_V+155	;volatile
  6353  016056  38DF               	swapf	223,w,c
  6354  016058  6E30               	movwf	(btemp+11)^0,c
  6355  01605A  3230               	rrcf	(btemp+11)^0,f,c
  6356  01605C  3030               	rrcf	(btemp+11)^0,w,c
  6357  01605E  0B03               	andlw	3
  6358  016060  6E30               	movwf	(btemp+11)^0,c
  6359  016062  2A30               	incf	(btemp+11)^0,f,c
  6360  016064  3A30               	swapf	(btemp+11)^0,f,c
  6361  016066  3630               	rlcf	(btemp+11)^0,f,c
  6362  016068  3630               	rlcf	(btemp+11)^0,f,c
  6363  01606A  50DF               	movf	223,w,c
  6364  01606C  1830               	xorwf	(btemp+11)^0,w,c
  6365  01606E  0B3F               	andlw	-193
  6366  016070  1830               	xorwf	(btemp+11)^0,w,c
  6367  016072  6EDF               	movwf	223,c
  6368                           
  6369                           ; BSR set to: 0
  6370                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  6371  016074  0EB8               	movlw	184
  6372  016076  6EE6               	movwf	postinc1,c
  6373  016078  0E0B               	movlw	11
  6374  01607A  6EE6               	movwf	postinc1,c
  6375  01607C  0E09               	movlw	9
  6376  01607E  6EE6               	movwf	postinc1,c
  6377  016080  EC20  F0C5         	call	_StartTimer	;wreg free
  6378                           
  6379                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  6380  016084  0EB8               	movlw	184
  6381  016086  6EE6               	movwf	postinc1,c
  6382  016088  0E0B               	movlw	11
  6383  01608A  6EE6               	movwf	postinc1,c
  6384  01608C  0E07               	movlw	7
  6385  01608E  6EE6               	movwf	postinc1,c
  6386  016090  EC20  F0C5         	call	_StartTimer	;wreg free
  6387                           
  6388                           ;mconfig.c: 64:   mode_lamp_bright();
  6389  016094  EC47  F0CA         	call	_mode_lamp_bright	;wreg free
  6390                           
  6391                           ;mconfig.c: 65:   update_lcd(1);
  6392  016098  0E01               	movlw	1
  6393  01609A  6EE6               	movwf	postinc1,c
  6394  01609C  ECFA  F0B8         	call	_update_lcd	;wreg free
  6395                           
  6396                           ;mconfig.c: 67:  } else {
  6397  0160A0  D032               	goto	l1670
  6398  0160A2                     l11007:
  6399                           
  6400                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  6401  0160A2  0E09               	movlw	9
  6402  0160A4  6EE6               	movwf	postinc1,c
  6403  0160A6  EC81  F0C7         	call	_TimerDone	;wreg free
  6404  0160AA  5025               	movf	btemp^0,w,c
  6405  0160AC  B4D8               	btfsc	status,2,c
  6406  0160AE  D02B               	goto	l1670
  6407                           
  6408                           ;mconfig.c: 69:    set_vterm(0);
  6409  0160B0  0E00               	movlw	0
  6410  0160B2  6EE6               	movwf	postinc1,c
  6411  0160B4  EC7E  F0C9         	call	_set_vterm	;wreg free
  6412                           
  6413                           ;mconfig.c: 70:    V.help = 0;
  6414  0160B8  0102               	movlb	2	; () banked
  6415  0160BA  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  6416                           
  6417                           ; BSR set to: 2
  6418                           ;mconfig.c: 71:    set_display_info(display_help());
  6419  0160BC  EC7B  F0CA         	call	_display_help	;wreg free
  6420  0160C0  5025               	movf	btemp^0,w,c
  6421  0160C2  6EE6               	movwf	postinc1,c
  6422  0160C4  EC8D  F0C9         	call	_set_display_info	;wreg free
  6423                           
  6424                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  6425  0160C8  0060  FA57  FFE6   	movff	_V+149,postinc1
  6426  0160CE  0060  FA5B  FFE6   	movff	_V+150,postinc1
  6427  0160D4  ECE3  F0C9         	call	_mode_lamp_dim	;wreg free
  6428                           
  6429                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  6430  0160D8  0E0B               	movlw	11
  6431  0160DA  6EE6               	movwf	postinc1,c
  6432  0160DC  EC81  F0C7         	call	_TimerDone	;wreg free
  6433  0160E0  5025               	movf	btemp^0,w,c
  6434  0160E2  B4D8               	btfsc	status,2,c
  6435  0160E4  D010               	goto	l1670
  6436                           
  6437                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  6438  0160E6  0102               	movlb	2	; () banked
  6439  0160E8  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  6440  0160EA  A4D8               	btfss	status,2,c
  6441  0160EC  D002               	goto	u10730
  6442  0160EE  0E01               	movlw	1
  6443  0160F0  D001               	goto	u10740
  6444  0160F2                     u10730:
  6445  0160F2  0E00               	movlw	0
  6446  0160F4                     u10740:
  6447  0160F4  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  6448                           
  6449                           ; BSR set to: 2
  6450                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  6451  0160F6  0EDC               	movlw	220
  6452  0160F8  6EE6               	movwf	postinc1,c
  6453  0160FA  0E05               	movlw	5
  6454  0160FC  6EE6               	movwf	postinc1,c
  6455  0160FE  0E0B               	movlw	11
  6456  016100  6EE6               	movwf	postinc1,c
  6457  016102  EC20  F0C5         	call	_StartTimer	;wreg free
  6458  016106                     l1670:
  6459                           
  6460                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6461  016106  52E5               	movf	postdec1,f,c
  6462  016108  0012               	return		;funcret
  6463  01610A                     __end_of_check_help:
  6464                           	opt callstack 0
  6465                           
  6466 ;; *************** function _vterm_dump *****************
  6467 ;; Defined at:
  6468 ;;		line 121 in file "mconfig.c"
  6469 ;; Parameters:    Size  Location     Type
  6470 ;;		None
  6471 ;; Auto vars:     Size  Location     Type
  6472 ;;		None
  6473 ;; Return value:  Size  Location     Type
  6474 ;;                  1  [STACK] void 
  6475 ;; Registers used:
  6476 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6477 ;; Tracked objects:
  6478 ;;		On entry : 3F/2
  6479 ;;		On exit  : 0/0
  6480 ;;		Unchanged: 0/0
  6481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6486 ;;Total ram usage:        0 bytes
  6487 ;; Hardware stack levels used:    1
  6488 ;; Hardware stack levels required when called:   18
  6489 ;; This function calls:
  6490 ;;		_WaitMs
  6491 ;;		_eaDogM_WriteStringAtPos
  6492 ;;		_get_vterm_ptr
  6493 ;;		_sprintf
  6494 ;;		_wait_lcd_done
  6495 ;; This function is called by:
  6496 ;;		_check_help
  6497 ;; This function uses a reentrant model
  6498 ;;
  6499                           
  6500                           	psect	text25
  6501  016C4E                     __ptext25:
  6502                           	opt callstack 0
  6503  016C4E                     _vterm_dump:
  6504                           	opt callstack 11
  6505                           
  6506                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  6507                           
  6508                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6509                           ;incstack = 0
  6510  016C4E  0E01               	movlw	1
  6511  016C50  6EE6               	movwf	postinc1,c
  6512  016C52  0E00               	movlw	0
  6513  016C54  6EE6               	movwf	postinc1,c
  6514  016C56  ECC2  F0C6         	call	_get_vterm_ptr	;wreg free
  6515  016C5A  0060  F097  FFE6   	movff	btemp,postinc1
  6516  016C60  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6517  016C66  0E00               	movlw	0
  6518  016C68  6EE6               	movwf	postinc1,c
  6519  016C6A  0E00               	movlw	0
  6520  016C6C  6EE6               	movwf	postinc1,c
  6521  016C6E  ECC2  F0C6         	call	_get_vterm_ptr	;wreg free
  6522  016C72  0060  F097  FFE6   	movff	btemp,postinc1
  6523  016C78  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6524  016C7E  0EA3               	movlw	low STR_33
  6525  016C80  6EE6               	movwf	postinc1,c
  6526  016C82  0EFF               	movlw	high STR_33
  6527  016C84  6EE6               	movwf	postinc1,c
  6528  016C86  0E01               	movlw	low (_V+1)
  6529  016C88  6EE6               	movwf	postinc1,c
  6530  016C8A  0E02               	movlw	high (_V+1)
  6531  016C8C  6EE6               	movwf	postinc1,c
  6532  016C8E  0E08               	movlw	8
  6533  016C90  6EE6               	movwf	postinc1,c
  6534  016C92  EC82  F0B9         	call	_sprintf	;wreg free
  6535                           
  6536                           ; BSR set to: 0
  6537                           ;mconfig.c: 124:  wait_lcd_done();
  6538  016C96  ECBA  F0C9         	call	_wait_lcd_done	;wreg free
  6539                           
  6540                           ; BSR set to: 0
  6541                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  6542  016C9A  0E01               	movlw	low (_V+1)
  6543  016C9C  6EE6               	movwf	postinc1,c
  6544  016C9E  0E02               	movlw	high (_V+1)
  6545  016CA0  6EE6               	movwf	postinc1,c
  6546  016CA2  0E00               	movlw	0
  6547  016CA4  6EE6               	movwf	postinc1,c
  6548  016CA6  0E00               	movlw	0
  6549  016CA8  6EE6               	movwf	postinc1,c
  6550  016CAA  EC11  F0C6         	call	_eaDogM_WriteStringAtPos	;wreg free
  6551                           
  6552                           ; BSR set to: 59
  6553                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  6554  016CAE  0E01               	movlw	1
  6555  016CB0  6EE6               	movwf	postinc1,c
  6556  016CB2  0E01               	movlw	1
  6557  016CB4  6EE6               	movwf	postinc1,c
  6558  016CB6  ECC2  F0C6         	call	_get_vterm_ptr	;wreg free
  6559  016CBA  0060  F097  FFE6   	movff	btemp,postinc1
  6560  016CC0  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6561  016CC6  0E00               	movlw	0
  6562  016CC8  6EE6               	movwf	postinc1,c
  6563  016CCA  0E01               	movlw	1
  6564  016CCC  6EE6               	movwf	postinc1,c
  6565  016CCE  ECC2  F0C6         	call	_get_vterm_ptr	;wreg free
  6566  016CD2  0060  F097  FFE6   	movff	btemp,postinc1
  6567  016CD8  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6568  016CDE  0EA3               	movlw	low STR_33
  6569  016CE0  6EE6               	movwf	postinc1,c
  6570  016CE2  0EFF               	movlw	high STR_33
  6571  016CE4  6EE6               	movwf	postinc1,c
  6572  016CE6  0E01               	movlw	low (_V+1)
  6573  016CE8  6EE6               	movwf	postinc1,c
  6574  016CEA  0E02               	movlw	high (_V+1)
  6575  016CEC  6EE6               	movwf	postinc1,c
  6576  016CEE  0E08               	movlw	8
  6577  016CF0  6EE6               	movwf	postinc1,c
  6578  016CF2  EC82  F0B9         	call	_sprintf	;wreg free
  6579                           
  6580                           ; BSR set to: 0
  6581                           ;mconfig.c: 127:  wait_lcd_done();
  6582  016CF6  ECBA  F0C9         	call	_wait_lcd_done	;wreg free
  6583                           
  6584                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  6585  016CFA  0E01               	movlw	low (_V+1)
  6586  016CFC  6EE6               	movwf	postinc1,c
  6587  016CFE  0E02               	movlw	high (_V+1)
  6588  016D00  6EE6               	movwf	postinc1,c
  6589  016D02  0E00               	movlw	0
  6590  016D04  6EE6               	movwf	postinc1,c
  6591  016D06  0E01               	movlw	1
  6592  016D08  6EE6               	movwf	postinc1,c
  6593  016D0A  EC11  F0C6         	call	_eaDogM_WriteStringAtPos	;wreg free
  6594                           
  6595                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  6596  016D0E  0E01               	movlw	1
  6597  016D10  6EE6               	movwf	postinc1,c
  6598  016D12  0E02               	movlw	2
  6599  016D14  6EE6               	movwf	postinc1,c
  6600  016D16  ECC2  F0C6         	call	_get_vterm_ptr	;wreg free
  6601  016D1A  0060  F097  FFE6   	movff	btemp,postinc1
  6602  016D20  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6603  016D26  0E00               	movlw	0
  6604  016D28  6EE6               	movwf	postinc1,c
  6605  016D2A  0E02               	movlw	2
  6606  016D2C  6EE6               	movwf	postinc1,c
  6607  016D2E  ECC2  F0C6         	call	_get_vterm_ptr	;wreg free
  6608  016D32  0060  F097  FFE6   	movff	btemp,postinc1
  6609  016D38  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6610  016D3E  0EA3               	movlw	low STR_33
  6611  016D40  6EE6               	movwf	postinc1,c
  6612  016D42  0EFF               	movlw	high STR_33
  6613  016D44  6EE6               	movwf	postinc1,c
  6614  016D46  0E01               	movlw	low (_V+1)
  6615  016D48  6EE6               	movwf	postinc1,c
  6616  016D4A  0E02               	movlw	high (_V+1)
  6617  016D4C  6EE6               	movwf	postinc1,c
  6618  016D4E  0E08               	movlw	8
  6619  016D50  6EE6               	movwf	postinc1,c
  6620  016D52  EC82  F0B9         	call	_sprintf	;wreg free
  6621                           
  6622                           ; BSR set to: 0
  6623                           ;mconfig.c: 130:  wait_lcd_done();
  6624  016D56  ECBA  F0C9         	call	_wait_lcd_done	;wreg free
  6625                           
  6626                           ; BSR set to: 0
  6627                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  6628  016D5A  0E01               	movlw	low (_V+1)
  6629  016D5C  6EE6               	movwf	postinc1,c
  6630  016D5E  0E02               	movlw	high (_V+1)
  6631  016D60  6EE6               	movwf	postinc1,c
  6632  016D62  0E00               	movlw	0
  6633  016D64  6EE6               	movwf	postinc1,c
  6634  016D66  0E02               	movlw	2
  6635  016D68  6EE6               	movwf	postinc1,c
  6636  016D6A  EC11  F0C6         	call	_eaDogM_WriteStringAtPos	;wreg free
  6637                           
  6638                           ; BSR set to: 59
  6639                           ;mconfig.c: 132:  WaitMs(3000);
  6640  016D6E  0EB8               	movlw	184
  6641  016D70  6EE6               	movwf	postinc1,c
  6642  016D72  0E0B               	movlw	11
  6643  016D74  6EE6               	movwf	postinc1,c
  6644  016D76  ECF6  F0C5         	call	_WaitMs	;wreg free
  6645                           
  6646                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6647  016D7A  0012               	return		;funcret
  6648  016D7C                     __end_of_vterm_dump:
  6649                           	opt callstack 0
  6650                           
  6651 ;; *************** function _sprintf *****************
  6652 ;; Defined at:
  6653 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  6654 ;; Parameters:    Size  Location     Type
  6655 ;;  s               2  [STACK] PTR unsigned char 
  6656 ;;		 -> D.lcd(288), D(290), V(188), 
  6657 ;;  fmt             2  [STACK] PTR const unsigned char 
  6658 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  6659 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  6660 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  6661 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  6662 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
  6663 ;;		 -> STR_19(20), STR_18(19), STR_17(19), STR_16(19), 
  6664 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
  6665 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
  6666 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  6667 ;;		 -> STR_1(17), 
  6668 ;; Auto vars:     Size  Location     Type
  6669 ;;  f               6  [STACK] struct _IO_FILE
  6670 ;;  ap              2  [STACK] PTR void [1]
  6671 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6672 ;;  ret             2    0        int 
  6673 ;; Return value:  Size  Location     Type
  6674 ;;                  2  [STACK] int 
  6675 ;; Registers used:
  6676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6677 ;; Tracked objects:
  6678 ;;		On entry : 0/1
  6679 ;;		On exit  : 3F/0
  6680 ;;		Unchanged: 0/0
  6681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6686 ;;Total ram usage:        0 bytes
  6687 ;; Hardware stack levels used:    1
  6688 ;; Hardware stack levels required when called:   15
  6689 ;; This function calls:
  6690 ;;		_vfprintf
  6691 ;; This function is called by:
  6692 ;;		_main
  6693 ;;		_check_help
  6694 ;;		_vterm_dump
  6695 ;; This function uses a reentrant model
  6696 ;;
  6697                           
  6698                           	psect	text26
  6699  017304                     __ptext26:
  6700                           	opt callstack 0
  6701  017304                     _sprintf:
  6702                           	opt callstack 0
  6703                           
  6704                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6705  017304  0E08               	movlw	8
  6706  017306  26E1               	addwf	fsr1l,f,c
  6707  017308  0E00               	movlw	0
  6708  01730A  22E2               	addwfc	fsr1h,f,c
  6709                           
  6710                           ;incstack = 0
  6711  01730C  0EFE               	movlw	254
  6712  01730E  6E2F               	movwf	(btemp+10)^0,c
  6713  017310  0EFF               	movlw	255
  6714  017312  6E30               	movwf	(btemp+11)^0,c
  6715                           
  6716                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  6717  017314  0EF5               	movlw	245
  6718  017316  24E1               	addwf	fsr1l,w,c
  6719  017318  6E2D               	movwf	(btemp+8)^0,c
  6720  01731A  0EFF               	movlw	255
  6721  01731C  20E2               	addwfc	fsr1h,w,c
  6722  01731E  6E2E               	movwf	(btemp+9)^0,c
  6723  017320  502F               	movf	(btemp+10)^0,w,c
  6724  017322  262D               	addwf	(btemp+8)^0,f,c
  6725  017324  5030               	movf	(btemp+11)^0,w,c
  6726  017326  222E               	addwfc	(btemp+9)^0,f,c
  6727                           
  6728                           ;stkvar	_ap @ sp[(-8)+6]
  6729  017328  0EFF               	movlw	-1
  6730  01732A  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  6731  017330  0EFE               	movlw	-2
  6732  017332  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  6733                           
  6734                           ;stkvar	_s @ sp[(-8)+-3]
  6735  017338  0EF5               	movlw	-11
  6736  01733A  006F FF8C  F02F    	movff	plusw1,btemp+10
  6737  017340  0EF6               	movlw	-10
  6738  017342  006F FF8C  F030    	movff	plusw1,btemp+11
  6739                           
  6740                           ;stkvar	_f @ sp[(-8)+0]
  6741  017348  0EF9               	movlw	-7
  6742  01734A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  6743  017350  0EF8               	movlw	-8
  6744  017352  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  6745                           
  6746                           ;stkvar	_f @ sp[(-8)+0]
  6747  017358  0EFA               	movlw	250
  6748  01735A  24E1               	addwf	fsr1l,w,c
  6749  01735C  6ED9               	movwf	fsr2l,c
  6750  01735E  0EFF               	movlw	255
  6751  017360  20E2               	addwfc	fsr1h,w,c
  6752  017362  6EDA               	movwf	fsr2h,c
  6753  017364  0E00               	movlw	0
  6754  017366  6EDE               	movwf	postinc2,c
  6755  017368  0E00               	movlw	0
  6756  01736A  6EDD               	movwf	postdec2,c
  6757                           
  6758                           ;stkvar	_f @ sp[(-8)+0]
  6759  01736C  0EFC               	movlw	252
  6760  01736E  24E1               	addwf	fsr1l,w,c
  6761  017370  6ED9               	movwf	fsr2l,c
  6762  017372  0EFF               	movlw	255
  6763  017374  20E2               	addwfc	fsr1h,w,c
  6764  017376  6EDA               	movwf	fsr2h,c
  6765  017378  0E00               	movlw	0
  6766  01737A  6EDE               	movwf	postinc2,c
  6767  01737C  0E00               	movlw	0
  6768  01737E  6EDD               	movwf	postdec2,c
  6769                           
  6770                           ;stkvar	_ap @ sp[(-8)+6]
  6771  017380  0EFE               	movlw	254
  6772  017382  24E1               	addwf	fsr1l,w,c
  6773  017384  6E25               	movwf	btemp^0,c
  6774  017386  0EFF               	movlw	255
  6775  017388  20E2               	addwfc	fsr1h,w,c
  6776  01738A  6E26               	movwf	(btemp+1)^0,c
  6777  01738C  0060  F097  FFE6   	movff	btemp,postinc1
  6778  017392  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6779                           
  6780                           ;stkvar	_fmt @ sp[(-10)+-5]
  6781  017398  0EF1               	movlw	-15
  6782  01739A  006F FF8F FFE6     	movff	plusw1,postinc1
  6783  0173A0  006F FF8F FFE6     	movff	plusw1,postinc1
  6784                           
  6785                           ;stkvar	_f @ sp[(-12)+0]
  6786  0173A6  0EF4               	movlw	244
  6787  0173A8  24E1               	addwf	fsr1l,w,c
  6788  0173AA  6E25               	movwf	btemp^0,c
  6789  0173AC  0EFF               	movlw	255
  6790  0173AE  20E2               	addwfc	fsr1h,w,c
  6791  0173B0  6E26               	movwf	(btemp+1)^0,c
  6792  0173B2  0060  F097  FFE6   	movff	btemp,postinc1
  6793  0173B8  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6794  0173BE  ECC4  F0BD         	call	_vfprintf	;wreg free
  6795                           
  6796                           ; BSR set to: 0
  6797                           ;stkvar	_f @ sp[(-8)+0]
  6798  0173C2  0EFA               	movlw	250
  6799  0173C4  24E1               	addwf	fsr1l,w,c
  6800  0173C6  6ED9               	movwf	fsr2l,c
  6801  0173C8  0EFF               	movlw	255
  6802  0173CA  20E2               	addwfc	fsr1h,w,c
  6803  0173CC  6EDA               	movwf	fsr2h,c
  6804  0173CE  006F FF78  F02F    	movff	postinc2,btemp+10
  6805  0173D4  006F FF74  F030    	movff	postdec2,btemp+11
  6806                           
  6807                           ;stkvar	_s @ sp[(-8)+-3]
  6808  0173DA  0EF5               	movlw	-11
  6809  0173DC  006F FF8C  F02D    	movff	plusw1,btemp+8
  6810  0173E2  0EF6               	movlw	-10
  6811  0173E4  006F FF8C  F02E    	movff	plusw1,btemp+9
  6812  0173EA  502F               	movf	(btemp+10)^0,w,c
  6813  0173EC  242D               	addwf	(btemp+8)^0,w,c
  6814  0173EE  6ED9               	movwf	fsr2l,c
  6815  0173F0  5030               	movf	(btemp+11)^0,w,c
  6816  0173F2  202E               	addwfc	(btemp+9)^0,w,c
  6817  0173F4  6EDA               	movwf	fsr2h,c
  6818  0173F6  0E00               	movlw	0
  6819  0173F8  6EDF               	movwf	indf2,c
  6820                           
  6821                           ; BSR set to: 0
  6822                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  6823  0173FA  0EF8               	movlw	248
  6824  0173FC  26E1               	addwf	fsr1l,f,c
  6825  0173FE  0EFF               	movlw	255
  6826  017400  22E2               	addwfc	fsr1h,f,c
  6827  017402  52E5               	movf	postdec1,f,c
  6828  017404  50E7               	movf	indf1,w,c
  6829  017406  5EE1               	subwf	fsr1l,f,c
  6830  017408  0E00               	movlw	0
  6831  01740A  5AE2               	subwfb	fsr1h,f,c
  6832  01740C  0012               	return		;funcret
  6833  01740E                     __end_of_sprintf:
  6834                           	opt callstack 0
  6835                           
  6836 ;; *************** function _get_vterm_ptr *****************
  6837 ;; Defined at:
  6838 ;;		line 116 in file "mconfig.c"
  6839 ;; Parameters:    Size  Location     Type
  6840 ;;  line            1  [STACK] const unsigned char 
  6841 ;;  vterm           1  [STACK] const unsigned char 
  6842 ;; Auto vars:     Size  Location     Type
  6843 ;;		None
  6844 ;; Return value:  Size  Location     Type
  6845 ;;                  2  [STACK] PTR unsigned char 
  6846 ;; Registers used:
  6847 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  6848 ;; Tracked objects:
  6849 ;;		On entry : 0/1
  6850 ;;		On exit  : 0/0
  6851 ;;		Unchanged: 0/0
  6852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6857 ;;Total ram usage:        0 bytes
  6858 ;; Hardware stack levels used:    1
  6859 ;; Hardware stack levels required when called:    7
  6860 ;; This function calls:
  6861 ;;		Nothing
  6862 ;; This function is called by:
  6863 ;;		_main
  6864 ;;		_check_help
  6865 ;;		_vterm_dump
  6866 ;; This function uses a reentrant model
  6867 ;;
  6868                           
  6869                           	psect	text27
  6870  018D84                     __ptext27:
  6871                           	opt callstack 0
  6872  018D84                     _get_vterm_ptr:
  6873                           	opt callstack 23
  6874                           
  6875                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  6876                           ;stkvar	_vterm @ sp[(0)+-2]
  6877                           
  6878                           ; BSR set to: 0
  6879                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6880                           ;incstack = 0
  6881  018D84  0EFE               	movlw	-2
  6882  018D86  50E3               	movf	plusw1,w,c
  6883  018D88  0B03               	andlw	3
  6884  018D8A  0D48               	mullw	72
  6885  018D8C  0EFF               	movlw	low _D
  6886  018D8E  6E25               	movwf	btemp^0,c
  6887  018D90  0E06               	movlw	high _D
  6888  018D92  6E26               	movwf	(btemp+1)^0,c
  6889  018D94  50F3               	movf	243,w,c
  6890  018D96  2625               	addwf	btemp^0,f,c
  6891  018D98  50F4               	movf	244,w,c
  6892  018D9A  2226               	addwfc	(btemp+1)^0,f,c
  6893                           
  6894                           ;stkvar	_line @ sp[(0)+-1]
  6895  018D9C  0EFF               	movlw	-1
  6896  018D9E  50E3               	movf	plusw1,w,c
  6897  018DA0  0B03               	andlw	3
  6898  018DA2  0D18               	mullw	24
  6899  018DA4  50F3               	movf	243,w,c
  6900  018DA6  2625               	addwf	btemp^0,f,c
  6901  018DA8  50F4               	movf	244,w,c
  6902  018DAA  2226               	addwfc	(btemp+1)^0,f,c
  6903                           
  6904                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6905  018DAC  52E5               	movf	postdec1,f,c
  6906  018DAE  52E5               	movf	postdec1,f,c
  6907  018DB0  0012               	return		;funcret
  6908  018DB2                     __end_of_get_vterm_ptr:
  6909                           	opt callstack 0
  6910                           
  6911 ;; *************** function _WaitMs *****************
  6912 ;; Defined at:
  6913 ;;		line 32 in file "timers.c"
  6914 ;; Parameters:    Size  Location     Type
  6915 ;;  numMilliseco    2  [STACK] const unsigned short 
  6916 ;; Auto vars:     Size  Location     Type
  6917 ;;		None
  6918 ;; Return value:  Size  Location     Type
  6919 ;;                  1  [STACK] void 
  6920 ;; Registers used:
  6921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6922 ;; Tracked objects:
  6923 ;;		On entry : 0/2
  6924 ;;		On exit  : 0/0
  6925 ;;		Unchanged: 0/0
  6926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6931 ;;Total ram usage:        0 bytes
  6932 ;; Hardware stack levels used:    1
  6933 ;; Hardware stack levels required when called:    8
  6934 ;; This function calls:
  6935 ;;		_StartTimer
  6936 ;;		_TimerDone
  6937 ;; This function is called by:
  6938 ;;		_main
  6939 ;;		_vterm_dump
  6940 ;; This function uses a reentrant model
  6941 ;;
  6942                           
  6943                           	psect	text28
  6944  018BEC                     __ptext28:
  6945                           	opt callstack 0
  6946  018BEC                     _WaitMs:
  6947                           	opt callstack 20
  6948                           
  6949                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  6950                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  6951                           
  6952                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6953                           ;incstack = 0
  6954  018BEC  0EFE               	movlw	-2
  6955  018BEE  006F FF8F FFE6     	movff	plusw1,postinc1
  6956  018BF4  006F FF8F FFE6     	movff	plusw1,postinc1
  6957  018BFA  0E00               	movlw	0
  6958  018BFC  6EE6               	movwf	postinc1,c
  6959  018BFE  EC20  F0C5         	call	_StartTimer	;wreg free
  6960                           
  6961                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6962  018C02  D005               	goto	l8061
  6963  018C04                     l1599:
  6964                           
  6965                           ;timers.c: 36:   __nop();
  6966  018C04  F000               	nop	
  6967                           
  6968                           ;timers.c: 37:   __nop();
  6969  018C06  F000               	nop	
  6970                           
  6971                           ;timers.c: 38:   __nop();
  6972  018C08  F000               	nop	
  6973                           
  6974                           ;timers.c: 39:   __nop();
  6975  018C0A  F000               	nop	
  6976  018C0C  0004               	clrwdt		;# 
  6977  018C0E                     l8061:
  6978                           
  6979                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6980  018C0E  0E00               	movlw	0
  6981  018C10  6EE6               	movwf	postinc1,c
  6982  018C12  EC81  F0C7         	call	_TimerDone	;wreg free
  6983  018C16  5025               	movf	btemp^0,w,c
  6984  018C18  B4D8               	btfsc	status,2,c
  6985  018C1A  D7F4               	goto	l1599
  6986                           
  6987                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  6988  018C1C  52E5               	movf	postdec1,f,c
  6989  018C1E  52E5               	movf	postdec1,f,c
  6990  018C20  0012               	return		;funcret
  6991  018C22                     __end_of_WaitMs:
  6992                           	opt callstack 0
  6993                           
  6994 ;; *************** function _update_lcd *****************
  6995 ;; Defined at:
  6996 ;;		line 85 in file "mconfig.c"
  6997 ;; Parameters:    Size  Location     Type
  6998 ;;  vterm           1  [STACK] unsigned char 
  6999 ;; Auto vars:     Size  Location     Type
  7000 ;;		None
  7001 ;; Return value:  Size  Location     Type
  7002 ;;                  1  [STACK] unsigned char 
  7003 ;; Registers used:
  7004 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7005 ;; Tracked objects:
  7006 ;;		On entry : 0/0
  7007 ;;		On exit  : 0/0
  7008 ;;		Unchanged: 0/0
  7009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7014 ;;Total ram usage:        0 bytes
  7015 ;; Hardware stack levels used:    1
  7016 ;; Hardware stack levels required when called:   18
  7017 ;; This function calls:
  7018 ;;		_eaDogM_WriteStringAtPos
  7019 ;;		_wait_lcd_done
  7020 ;; This function is called by:
  7021 ;;		_main
  7022 ;;		_check_help
  7023 ;; This function uses a reentrant model
  7024 ;;
  7025                           
  7026                           	psect	text29
  7027  0171F4                     __ptext29:
  7028                           	opt callstack 0
  7029  0171F4                     _update_lcd:
  7030                           	opt callstack 12
  7031                           
  7032                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  7033                           ;stkvar	_vterm @ sp[(0)+-1]
  7034                           
  7035                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7036                           ;incstack = 0
  7037  0171F4  0EFF               	movlw	-1
  7038  0171F6  006F FF8C  F025    	movff	plusw1,btemp
  7039  0171FC  0E03               	movlw	3
  7040  0171FE  1625               	andwf	btemp^0,f,c
  7041  017200  0EFF               	movlw	-1
  7042  017202  0060  F097  FFE3   	movff	btemp,plusw1
  7043                           
  7044                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  7045  017208  EE22  F01F         	lfsr	2,_D+288
  7046  01720C  A0DF               	btfss	indf2,0,c
  7047  01720E  D004               	goto	l10873
  7048                           
  7049                           ;stkvar	_vterm @ sp[(0)+-1]
  7050  017210  0EFF               	movlw	-1
  7051  017212  50E3               	movf	plusw1,w,c
  7052  017214  B4D8               	btfsc	status,2,c
  7053  017216  D074               	goto	l1677
  7054  017218                     l10873:
  7055                           
  7056                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  7057                           ;stkvar	_vterm @ sp[(0)+-1]
  7058  017218  0EFF               	movlw	-1
  7059  01721A  50E3               	movf	plusw1,w,c
  7060  01721C  0D48               	mullw	72
  7061  01721E  0E0F               	movlw	low (_D+16)
  7062  017220  24F3               	addwf	243,w,c
  7063  017222  6ED9               	movwf	fsr2l,c
  7064  017224  0E07               	movlw	high (_D+16)
  7065  017226  20F4               	addwfc	prodh,w,c
  7066  017228  6EDA               	movwf	fsr2h,c
  7067  01722A  0E00               	movlw	0
  7068  01722C  6EDF               	movwf	indf2,c
  7069                           
  7070                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  7071                           ;stkvar	_vterm @ sp[(0)+-1]
  7072  01722E  0EFF               	movlw	-1
  7073  017230  50E3               	movf	plusw1,w,c
  7074  017232  0D48               	mullw	72
  7075  017234  0E27               	movlw	low (_D+40)
  7076  017236  24F3               	addwf	243,w,c
  7077  017238  6ED9               	movwf	fsr2l,c
  7078  01723A  0E07               	movlw	high (_D+40)
  7079  01723C  20F4               	addwfc	prodh,w,c
  7080  01723E  6EDA               	movwf	fsr2h,c
  7081  017240  0E00               	movlw	0
  7082  017242  6EDF               	movwf	indf2,c
  7083                           
  7084                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  7085                           ;stkvar	_vterm @ sp[(0)+-1]
  7086  017244  0EFF               	movlw	-1
  7087  017246  50E3               	movf	plusw1,w,c
  7088  017248  0D48               	mullw	72
  7089  01724A  0E3F               	movlw	low (_D+64)
  7090  01724C  24F3               	addwf	243,w,c
  7091  01724E  6ED9               	movwf	fsr2l,c
  7092  017250  0E07               	movlw	high (_D+64)
  7093  017252  20F4               	addwfc	prodh,w,c
  7094  017254  6EDA               	movwf	fsr2h,c
  7095  017256  0E00               	movlw	0
  7096  017258  6EDF               	movwf	indf2,c
  7097                           
  7098                           ;mconfig.c: 95:  wait_lcd_done();
  7099  01725A  ECBA  F0C9         	call	_wait_lcd_done	;wreg free
  7100                           
  7101                           ; BSR set to: 0
  7102                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  7103                           ;stkvar	_vterm @ sp[(0)+-1]
  7104  01725E  0EFF               	movlw	-1
  7105  017260  50E3               	movf	plusw1,w,c
  7106  017262  0D48               	mullw	72
  7107  017264  0EFF               	movlw	low _D
  7108  017266  6E2F               	movwf	(btemp+10)^0,c
  7109  017268  0E06               	movlw	high _D
  7110  01726A  6E30               	movwf	(btemp+11)^0,c
  7111  01726C  50F3               	movf	243,w,c
  7112  01726E  262F               	addwf	(btemp+10)^0,f,c
  7113  017270  50F4               	movf	244,w,c
  7114  017272  2230               	addwfc	(btemp+11)^0,f,c
  7115  017274  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  7116  01727A  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  7117  017280  0E00               	movlw	0
  7118  017282  6EE6               	movwf	postinc1,c
  7119  017284  0E00               	movlw	0
  7120  017286  6EE6               	movwf	postinc1,c
  7121  017288  EC11  F0C6         	call	_eaDogM_WriteStringAtPos	;wreg free
  7122                           
  7123                           ; BSR set to: 59
  7124                           ;mconfig.c: 97:  wait_lcd_done();
  7125  01728C  ECBA  F0C9         	call	_wait_lcd_done	;wreg free
  7126                           
  7127                           ; BSR set to: 0
  7128                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  7129                           ;stkvar	_vterm @ sp[(0)+-1]
  7130  017290  0EFF               	movlw	-1
  7131  017292  50E3               	movf	plusw1,w,c
  7132  017294  0D48               	mullw	72
  7133  017296  0EFF               	movlw	low _D
  7134  017298  6E2F               	movwf	(btemp+10)^0,c
  7135  01729A  0E06               	movlw	high _D
  7136  01729C  6E30               	movwf	(btemp+11)^0,c
  7137  01729E  0E18               	movlw	24
  7138  0172A0  262F               	addwf	(btemp+10)^0,f,c
  7139  0172A2  0E00               	movlw	0
  7140  0172A4  2230               	addwfc	(btemp+11)^0,f,c
  7141  0172A6  50F3               	movf	243,w,c
  7142  0172A8  262F               	addwf	(btemp+10)^0,f,c
  7143  0172AA  50F4               	movf	244,w,c
  7144  0172AC  2230               	addwfc	(btemp+11)^0,f,c
  7145  0172AE  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  7146  0172B4  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  7147  0172BA  0E00               	movlw	0
  7148  0172BC  6EE6               	movwf	postinc1,c
  7149  0172BE  0E01               	movlw	1
  7150  0172C0  6EE6               	movwf	postinc1,c
  7151  0172C2  EC11  F0C6         	call	_eaDogM_WriteStringAtPos	;wreg free
  7152                           
  7153                           ; BSR set to: 59
  7154                           ;mconfig.c: 99:  wait_lcd_done();
  7155  0172C6  ECBA  F0C9         	call	_wait_lcd_done	;wreg free
  7156                           
  7157                           ; BSR set to: 0
  7158                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  7159                           ;stkvar	_vterm @ sp[(0)+-1]
  7160  0172CA  0EFF               	movlw	-1
  7161  0172CC  50E3               	movf	plusw1,w,c
  7162  0172CE  0D48               	mullw	72
  7163  0172D0  0EFF               	movlw	low _D
  7164  0172D2  6E2F               	movwf	(btemp+10)^0,c
  7165  0172D4  0E06               	movlw	high _D
  7166  0172D6  6E30               	movwf	(btemp+11)^0,c
  7167  0172D8  0E30               	movlw	48
  7168  0172DA  262F               	addwf	(btemp+10)^0,f,c
  7169  0172DC  0E00               	movlw	0
  7170  0172DE  2230               	addwfc	(btemp+11)^0,f,c
  7171  0172E0  50F3               	movf	243,w,c
  7172  0172E2  262F               	addwf	(btemp+10)^0,f,c
  7173  0172E4  50F4               	movf	244,w,c
  7174  0172E6  2230               	addwfc	(btemp+11)^0,f,c
  7175  0172E8  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  7176  0172EE  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  7177  0172F4  0E00               	movlw	0
  7178  0172F6  6EE6               	movwf	postinc1,c
  7179  0172F8  0E02               	movlw	2
  7180  0172FA  6EE6               	movwf	postinc1,c
  7181  0172FC  EC11  F0C6         	call	_eaDogM_WriteStringAtPos	;wreg free
  7182  017300                     l1677:
  7183                           
  7184                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7185  017300  52E5               	movf	postdec1,f,c
  7186  017302  0012               	return		;funcret
  7187  017304                     __end_of_update_lcd:
  7188                           	opt callstack 0
  7189                           
  7190 ;; *************** function _eaDogM_WriteStringAtPos *****************
  7191 ;; Defined at:
  7192 ;;		line 265 in file "eadog.c"
  7193 ;; Parameters:    Size  Location     Type
  7194 ;;  r               1  [STACK] const unsigned char 
  7195 ;;  c               1  [STACK] const unsigned char 
  7196 ;;  strPtr          2  [STACK] PTR unsigned char 
  7197 ;;		 -> D.lcd(288), D(290), V(188), 
  7198 ;; Auto vars:     Size  Location     Type
  7199 ;;		None
  7200 ;; Return value:  Size  Location     Type
  7201 ;;                  1  [STACK] void 
  7202 ;; Registers used:
  7203 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7204 ;; Tracked objects:
  7205 ;;		On entry : 3F/0
  7206 ;;		On exit  : 3F/3B
  7207 ;;		Unchanged: 0/0
  7208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7213 ;;Total ram usage:        0 bytes
  7214 ;; Hardware stack levels used:    1
  7215 ;; Hardware stack levels required when called:   17
  7216 ;; This function calls:
  7217 ;;		_eaDogM_WriteString
  7218 ;;		_send_lcd_cmd_dma
  7219 ;; This function is called by:
  7220 ;;		_update_lcd
  7221 ;;		_vterm_dump
  7222 ;; This function uses a reentrant model
  7223 ;;
  7224                           
  7225                           	psect	text30
  7226  018C22                     __ptext30:
  7227                           	opt callstack 0
  7228  018C22                     _eaDogM_WriteStringAtPos:
  7229                           	opt callstack 12
  7230                           
  7231                           ;eadog.c: 265: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 266: {;eadog.c: 267:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  7232                           ;stkvar	_c @ sp[(0)+-2]
  7233                           
  7234                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7235                           ;incstack = 0
  7236  018C22  0EFE               	movlw	-2
  7237  018C24  006F FF8C  F030    	movff	plusw1,btemp+11
  7238                           
  7239                           ;stkvar	_r @ sp[(0)+-1]
  7240  018C2A  0EFF               	movlw	-1
  7241  018C2C  50E3               	movf	plusw1,w,c
  7242  018C2E  0D10               	mullw	16
  7243  018C30  50F3               	movf	243,w,c
  7244  018C32  2430               	addwf	(btemp+11)^0,w,c
  7245  018C34  0F80               	addlw	128
  7246  018C36  6EE6               	movwf	postinc1,c
  7247  018C38  EC8F  F0C3         	call	_send_lcd_cmd_dma	;wreg free
  7248                           
  7249                           ;eadog.c: 268:  eaDogM_WriteString(strPtr);
  7250                           ;stkvar	_strPtr @ sp[(0)+-4]
  7251  018C3C  0EFC               	movlw	-4
  7252  018C3E  006F FF8F FFE6     	movff	plusw1,postinc1
  7253  018C44  006F FF8F FFE6     	movff	plusw1,postinc1
  7254  018C4A  EC6F  F0BE         	call	_eaDogM_WriteString	;wreg free
  7255                           
  7256                           ; BSR set to: 59
  7257                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  7258  018C4E  52E5               	movf	postdec1,f,c
  7259  018C50  52E5               	movf	postdec1,f,c
  7260  018C52  52E5               	movf	postdec1,f,c
  7261  018C54  52E5               	movf	postdec1,f,c
  7262  018C56  0012               	return		;funcret
  7263  018C58                     __end_of_eaDogM_WriteStringAtPos:
  7264                           	opt callstack 0
  7265                           
  7266 ;; *************** function _send_lcd_cmd_dma *****************
  7267 ;; Defined at:
  7268 ;;		line 218 in file "eadog.c"
  7269 ;; Parameters:    Size  Location     Type
  7270 ;;  strPtr          1  [STACK] unsigned char 
  7271 ;; Auto vars:     Size  Location     Type
  7272 ;;		None
  7273 ;; Return value:  Size  Location     Type
  7274 ;;                  1  [STACK] void 
  7275 ;; Registers used:
  7276 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7277 ;; Tracked objects:
  7278 ;;		On entry : 0/3D
  7279 ;;		On exit  : 3F/0
  7280 ;;		Unchanged: 0/0
  7281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7286 ;;Total ram usage:        0 bytes
  7287 ;; Hardware stack levels used:    1
  7288 ;; Hardware stack levels required when called:   16
  7289 ;; This function calls:
  7290 ;;		_printf
  7291 ;;		_ringBufS_flush
  7292 ;;		_start_lcd
  7293 ;;		_wait_lcd_done
  7294 ;;		_wait_lcd_set
  7295 ;; This function is called by:
  7296 ;;		_eaDogM_WriteCommand
  7297 ;;		_eaDogM_WriteStringAtPos
  7298 ;; This function uses a reentrant model
  7299 ;;
  7300                           
  7301                           	psect	text31
  7302  01871E                     __ptext31:
  7303                           	opt callstack 0
  7304  01871E                     _send_lcd_cmd_dma:
  7305                           	opt callstack 12
  7306                           
  7307                           ;eadog.c: 218: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 219: {;eadog.c: 221:  wait
      +                          _lcd_set();
  7308                           
  7309                           ; BSR set to: 59
  7310                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7311                           ;incstack = 0
  7312  01871E  EC8A  F0CA         	call	_wait_lcd_set	;wreg free
  7313                           
  7314                           ; BSR set to: 0
  7315                           ;eadog.c: 223:  ringBufS_flush(spi_link.tx1a, 0);
  7316  018722  0E00               	movlw	0
  7317  018724  6EE6               	movwf	postinc1,c
  7318  018726  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  7319  01872C  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  7320  018732  EC5F  F0BF         	call	_ringBufS_flush	;wreg free
  7321  018736  92BC               	bcf	188,1,c	;volatile
  7322  018738  94BC               	bcf	188,2,c	;volatile
  7323                           
  7324                           ;eadog.c: 226:  DMA1CON0bits.EN = 0;
  7325  01873A  013B               	movlb	59	; () banked
  7326  01873C  9FFC               	bcf	252,7,b	;volatile
  7327                           
  7328                           ; BSR set to: 59
  7329                           ;eadog.c: 227:  DMA1SSZ = 1;
  7330  01873E  0E00               	movlw	0
  7331  018740  6FF8               	movwf	248,b	;volatile
  7332  018742  0E01               	movlw	1
  7333  018744  6FF7               	movwf	247,b	;volatile
  7334                           
  7335                           ; BSR set to: 59
  7336                           ;eadog.c: 228:  DMA1CON0bits.EN = 1;
  7337  018746  8FFC               	bsf	252,7,b	;volatile
  7338                           
  7339                           ; BSR set to: 59
  7340                           ;eadog.c: 229:  printf("%c", strPtr);
  7341                           ;stkvar	_strPtr @ sp[(0)+-1]
  7342  018748  0EFF               	movlw	-1
  7343  01874A  50E3               	movf	plusw1,w,c
  7344  01874C  6EE6               	movwf	postinc1,c
  7345  01874E  0E00               	movlw	0
  7346  018750  6EE6               	movwf	postinc1,c
  7347  018752  0EF9               	movlw	low STR_25
  7348  018754  6EE6               	movwf	postinc1,c
  7349  018756  0EFF               	movlw	high STR_25
  7350  018758  6EE6               	movwf	postinc1,c
  7351  01875A  0E04               	movlw	4
  7352  01875C  6EE6               	movwf	postinc1,c
  7353  01875E  ECA8  F0C2         	call	_printf	;wreg free
  7354                           
  7355                           ; BSR set to: 0
  7356                           ;eadog.c: 230:  start_lcd();
  7357  018762  EC8D  F0CA         	call	_start_lcd	;wreg free
  7358                           
  7359                           ; BSR set to: 59
  7360                           ;eadog.c: 231:  wait_lcd_done();
  7361  018766  ECBA  F0C9         	call	_wait_lcd_done	;wreg free
  7362                           
  7363                           ; BSR set to: 0
  7364  01876A  82BC               	bsf	188,1,c	;volatile
  7365                           
  7366                           ; BSR set to: 0
  7367                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7368  01876C  52E5               	movf	postdec1,f,c
  7369  01876E  0012               	return		;funcret
  7370  018770                     __end_of_send_lcd_cmd_dma:
  7371                           	opt callstack 0
  7372                           
  7373 ;; *************** function _wait_lcd_done *****************
  7374 ;; Defined at:
  7375 ;;		line 154 in file "eadog.c"
  7376 ;; Parameters:    Size  Location     Type
  7377 ;;		None
  7378 ;; Auto vars:     Size  Location     Type
  7379 ;;		None
  7380 ;; Return value:  Size  Location     Type
  7381 ;;                  1  [STACK] void 
  7382 ;; Registers used:
  7383 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7384 ;; Tracked objects:
  7385 ;;		On entry : 0/0
  7386 ;;		On exit  : 3F/0
  7387 ;;		Unchanged: 0/0
  7388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7393 ;;Total ram usage:        0 bytes
  7394 ;; Hardware stack levels used:    1
  7395 ;; Hardware stack levels required when called:    8
  7396 ;; This function calls:
  7397 ;;		_wdtdelay
  7398 ;; This function is called by:
  7399 ;;		_send_lcd_cmd_dma
  7400 ;;		_update_lcd
  7401 ;;		_vterm_dump
  7402 ;; This function uses a reentrant model
  7403 ;;
  7404                           
  7405                           	psect	text32
  7406  019374                     __ptext32:
  7407                           	opt callstack 0
  7408  019374                     _wait_lcd_done:
  7409                           	opt callstack 21
  7410                           
  7411                           ;eadog.c: 156:  while (spi_link.LCD_DATA);
  7412                           
  7413                           ; BSR set to: 0
  7414                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7415                           ;incstack = 0
  7416  019374  0100               	movlb	0	; () banked
  7417  019376  B789               	btfsc	_spi_link& (0+255),3,b	;volatile
  7418  019378  D7FD               	goto	_wait_lcd_done
  7419                           
  7420                           ; BSR set to: 0
  7421                           ;eadog.c: 157:  wdtdelay(50);
  7422  01937A  0E32               	movlw	50
  7423  01937C  6EE6               	movwf	postinc1,c
  7424  01937E  0E00               	movlw	0
  7425  019380  6EE6               	movwf	postinc1,c
  7426  019382  0E00               	movlw	0
  7427  019384  6EE6               	movwf	postinc1,c
  7428  019386  0E00               	movlw	0
  7429  019388  6EE6               	movwf	postinc1,c
  7430  01938A  EC08  F0C3         	call	_wdtdelay	;wreg free
  7431                           
  7432                           ; BSR set to: 0
  7433                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7434  01938E  0012               	return		;funcret
  7435  019390                     __end_of_wait_lcd_done:
  7436                           	opt callstack 0
  7437                           
  7438 ;; *************** function _wdtdelay *****************
  7439 ;; Defined at:
  7440 ;;		line 22 in file "eadog.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;  delay           4  [STACK] const unsigned long 
  7443 ;; Auto vars:     Size  Location     Type
  7444 ;;		None
  7445 ;; Return value:  Size  Location     Type
  7446 ;;                  1  [STACK] void 
  7447 ;; Registers used:
  7448 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7449 ;; Tracked objects:
  7450 ;;		On entry : 0/0
  7451 ;;		On exit  : 3F/0
  7452 ;;		Unchanged: 0/0
  7453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7458 ;;Total ram usage:        0 bytes
  7459 ;; Hardware stack levels used:    1
  7460 ;; Hardware stack levels required when called:    7
  7461 ;; This function calls:
  7462 ;;		Nothing
  7463 ;; This function is called by:
  7464 ;;		_init_display
  7465 ;;		_send_lcd_cmd
  7466 ;;		_send_lcd_cmd_long
  7467 ;;		_wait_lcd_done
  7468 ;; This function uses a reentrant model
  7469 ;;
  7470                           
  7471                           	psect	text33
  7472  018610                     __ptext33:
  7473                           	opt callstack 0
  7474  018610                     _wdtdelay:
  7475                           	opt callstack 21
  7476                           
  7477                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  7478                           
  7479                           ; BSR set to: 0
  7480                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7481                           ;incstack = 0
  7482  018610  0100               	movlb	0	; () banked
  7483  018612  6BA1               	clrf	wdtdelay@dcount& (0+255),b
  7484  018614  6BA2               	clrf	(wdtdelay@dcount+1)& (0+255),b
  7485  018616  6BA3               	clrf	(wdtdelay@dcount+2)& (0+255),b
  7486  018618  6BA4               	clrf	(wdtdelay@dcount+3)& (0+255),b
  7487  01861A                     l1444:
  7488                           
  7489                           ; BSR set to: 0
  7490                           ;eadog.c: 27:   __nop();
  7491  01861A  F000               	nop	
  7492  01861C  0004               	clrwdt		;# 
  7493                           
  7494                           ;eadog.c: 29:  };
  7495  01861E  0E01               	movlw	1
  7496  018620  0100               	movlb	0	; () banked
  7497  018622  27A1               	addwf	wdtdelay@dcount& (0+255),f,b
  7498  018624  0E00               	movlw	0
  7499  018626  23A2               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  7500  018628  23A3               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  7501  01862A  23A4               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  7502                           
  7503                           ; BSR set to: 0
  7504                           ;stkvar	_delay @ sp[(0)+-4]
  7505  01862C  0EFC               	movlw	-4
  7506  01862E  006F FF8C  F025    	movff	plusw1,btemp
  7507  018634  51A1               	movf	wdtdelay@dcount& (0+255),w,b
  7508  018636  5C25               	subwf	btemp^0,w,c
  7509  018638  0EFD               	movlw	-3
  7510  01863A  006F FF8C  F025    	movff	plusw1,btemp
  7511  018640  51A2               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  7512  018642  5825               	subwfb	btemp^0,w,c
  7513  018644  0EFE               	movlw	-2
  7514  018646  006F FF8C  F025    	movff	plusw1,btemp
  7515  01864C  51A3               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  7516  01864E  5825               	subwfb	btemp^0,w,c
  7517  018650  0EFF               	movlw	-1
  7518  018652  006F FF8C  F025    	movff	plusw1,btemp
  7519  018658  51A4               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  7520  01865A  5825               	subwfb	btemp^0,w,c
  7521  01865C  B0D8               	btfsc	status,0,c
  7522  01865E  D7DD               	goto	l1444
  7523                           
  7524                           ; BSR set to: 0
  7525                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  7526  018660  52E5               	movf	postdec1,f,c
  7527  018662  52E5               	movf	postdec1,f,c
  7528  018664  52E5               	movf	postdec1,f,c
  7529  018666  52E5               	movf	postdec1,f,c
  7530  018668  0012               	return		;funcret
  7531  01866A                     __end_of_wdtdelay:
  7532                           	opt callstack 0
  7533                           
  7534 ;; *************** function _eaDogM_WriteString *****************
  7535 ;; Defined at:
  7536 ;;		line 197 in file "eadog.c"
  7537 ;; Parameters:    Size  Location     Type
  7538 ;;  strPtr          2  [STACK] PTR unsigned char 
  7539 ;;		 -> D.lcd(288), D(290), V(188), 
  7540 ;; Auto vars:     Size  Location     Type
  7541 ;;		None
  7542 ;; Return value:  Size  Location     Type
  7543 ;;                  1  [STACK] void 
  7544 ;; Registers used:
  7545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7546 ;; Tracked objects:
  7547 ;;		On entry : 3F/0
  7548 ;;		On exit  : 3F/3B
  7549 ;;		Unchanged: 0/0
  7550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7555 ;;Total ram usage:        0 bytes
  7556 ;; Hardware stack levels used:    1
  7557 ;; Hardware stack levels required when called:   16
  7558 ;; This function calls:
  7559 ;;		_printf
  7560 ;;		_ringBufS_flush
  7561 ;;		_start_lcd
  7562 ;;		_strlen
  7563 ;;		_wait_lcd_set
  7564 ;; This function is called by:
  7565 ;;		_eaDogM_WriteStringAtPos
  7566 ;; This function uses a reentrant model
  7567 ;;
  7568                           
  7569                           	psect	text34
  7570  017CDE                     __ptext34:
  7571                           	opt callstack 0
  7572  017CDE                     _eaDogM_WriteString:
  7573                           	opt callstack 12
  7574                           
  7575                           ;eadog.c: 197: void eaDogM_WriteString(char *strPtr);eadog.c: 198: {;eadog.c: 200:  wait
      +                          _lcd_set();
  7576                           
  7577                           ; BSR set to: 0
  7578                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7579                           ;incstack = 0
  7580  017CDE  EC8A  F0CA         	call	_wait_lcd_set	;wreg free
  7581                           
  7582                           ; BSR set to: 0
  7583                           ;eadog.c: 202:  ringBufS_flush(spi_link.tx1a, 0);
  7584  017CE2  0E00               	movlw	0
  7585  017CE4  6EE6               	movwf	postinc1,c
  7586  017CE6  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  7587  017CEC  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  7588  017CF2  EC5F  F0BF         	call	_ringBufS_flush	;wreg free
  7589  017CF6  94BC               	bcf	188,2,c	;volatile
  7590                           
  7591                           ;eadog.c: 204:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  7592                           ;stkvar	_strPtr @ sp[(0)+-2]
  7593  017CF8  0EFE               	movlw	-2
  7594  017CFA  006F FF8F FFE6     	movff	plusw1,postinc1
  7595  017D00  006F FF8F FFE6     	movff	plusw1,postinc1
  7596  017D06  ECC2  F0BE         	call	_strlen	;wreg free
  7597  017D0A  5026               	movf	(btemp+1)^0,w,c
  7598  017D0C  E104               	bnz	u10640
  7599  017D0E  0E41               	movlw	65
  7600  017D10  5C25               	subwf	btemp^0,w,c
  7601  017D12  A0D8               	btfss	status,0,c
  7602  017D14  D010               	goto	l10839
  7603  017D16                     u10640:
  7604                           
  7605                           ;stkvar	_strPtr @ sp[(0)+-2]
  7606  017D16  0EFE               	movlw	-2
  7607  017D18  006F FF8C  F02F    	movff	plusw1,btemp+10
  7608  017D1E  0EFF               	movlw	-1
  7609  017D20  006F FF8C  F030    	movff	plusw1,btemp+11
  7610  017D26  0E40               	movlw	64
  7611  017D28  242F               	addwf	(btemp+10)^0,w,c
  7612  017D2A  6ED9               	movwf	fsr2l,c
  7613  017D2C  0E00               	movlw	0
  7614  017D2E  2030               	addwfc	(btemp+11)^0,w,c
  7615  017D30  6EDA               	movwf	fsr2h,c
  7616  017D32  0E00               	movlw	0
  7617  017D34  6EDF               	movwf	indf2,c
  7618  017D36                     l10839:
  7619                           
  7620                           ;eadog.c: 205:  DMA1CON0bits.EN = 0;
  7621  017D36  013B               	movlb	59	; () banked
  7622  017D38  9FFC               	bcf	252,7,b	;volatile
  7623                           
  7624                           ; BSR set to: 59
  7625                           ;eadog.c: 206:  DMA1SSZ = strlen(strPtr);
  7626                           ;stkvar	_strPtr @ sp[(0)+-2]
  7627  017D3A  0EFE               	movlw	-2
  7628  017D3C  006F FF8F FFE6     	movff	plusw1,postinc1
  7629  017D42  006F FF8F FFE6     	movff	plusw1,postinc1
  7630  017D48  ECC2  F0BE         	call	_strlen	;wreg free
  7631  017D4C  0060  F097  FBF7   	movff	btemp,15351	;volatile
  7632  017D52  0060  F09B  FBF8   	movff	btemp+1,15352	;volatile
  7633                           
  7634                           ;eadog.c: 207:  DMA1CON0bits.EN = 1;
  7635  017D58  013B               	movlb	59	; () banked
  7636  017D5A  8FFC               	bsf	252,7,b	;volatile
  7637                           
  7638                           ; BSR set to: 59
  7639                           ;eadog.c: 208:  printf("%s", strPtr);
  7640                           ;stkvar	_strPtr @ sp[(0)+-2]
  7641  017D5C  0EFE               	movlw	-2
  7642  017D5E  006F FF8F FFE6     	movff	plusw1,postinc1
  7643  017D64  006F FF8F FFE6     	movff	plusw1,postinc1
  7644  017D6A  0EFC               	movlw	low STR_24
  7645  017D6C  6EE6               	movwf	postinc1,c
  7646  017D6E  0EFF               	movlw	high STR_24
  7647  017D70  6EE6               	movwf	postinc1,c
  7648  017D72  0E04               	movlw	4
  7649  017D74  6EE6               	movwf	postinc1,c
  7650  017D76  ECA8  F0C2         	call	_printf	;wreg free
  7651                           
  7652                           ; BSR set to: 0
  7653                           ;eadog.c: 209:  start_lcd();
  7654  017D7A  EC8D  F0CA         	call	_start_lcd	;wreg free
  7655                           
  7656                           ; BSR set to: 59
  7657                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  7658  017D7E  52E5               	movf	postdec1,f,c
  7659  017D80  52E5               	movf	postdec1,f,c
  7660  017D82  0012               	return		;funcret
  7661  017D84                     __end_of_eaDogM_WriteString:
  7662                           	opt callstack 0
  7663                           
  7664 ;; *************** function _wait_lcd_set *****************
  7665 ;; Defined at:
  7666 ;;		line 144 in file "eadog.c"
  7667 ;; Parameters:    Size  Location     Type
  7668 ;;		None
  7669 ;; Auto vars:     Size  Location     Type
  7670 ;;		None
  7671 ;; Return value:  Size  Location     Type
  7672 ;;                  1  [STACK] void 
  7673 ;; Registers used:
  7674 ;;		None
  7675 ;; Tracked objects:
  7676 ;;		On entry : 0/3D
  7677 ;;		On exit  : 3F/0
  7678 ;;		Unchanged: 0/0
  7679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7684 ;;Total ram usage:        0 bytes
  7685 ;; Hardware stack levels used:    1
  7686 ;; Hardware stack levels required when called:    7
  7687 ;; This function calls:
  7688 ;;		Nothing
  7689 ;; This function is called by:
  7690 ;;		_eaDogM_WriteString
  7691 ;;		_send_lcd_cmd_dma
  7692 ;; This function uses a reentrant model
  7693 ;;
  7694                           
  7695                           	psect	text35
  7696  019514                     __ptext35:
  7697                           	opt callstack 0
  7698  019514                     _wait_lcd_set:
  7699                           	opt callstack 20
  7700                           
  7701                           ;eadog.c: 146:  spi_link.LCD_DATA = 1;
  7702                           
  7703                           ; BSR set to: 59
  7704                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7705                           ;incstack = 0
  7706  019514  0100               	movlb	0	; () banked
  7707  019516  8789               	bsf	_spi_link& (0+255),3,b	;volatile
  7708                           
  7709                           ; BSR set to: 0
  7710                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7711  019518  0012               	return		;funcret
  7712  01951A                     __end_of_wait_lcd_set:
  7713                           	opt callstack 0
  7714                           
  7715 ;; *************** function _start_lcd *****************
  7716 ;; Defined at:
  7717 ;;		line 139 in file "eadog.c"
  7718 ;; Parameters:    Size  Location     Type
  7719 ;;		None
  7720 ;; Auto vars:     Size  Location     Type
  7721 ;;		None
  7722 ;; Return value:  Size  Location     Type
  7723 ;;                  1  [STACK] void 
  7724 ;; Registers used:
  7725 ;;		None
  7726 ;; Tracked objects:
  7727 ;;		On entry : 3F/0
  7728 ;;		On exit  : 3F/3B
  7729 ;;		Unchanged: 0/0
  7730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7735 ;;Total ram usage:        0 bytes
  7736 ;; Hardware stack levels used:    1
  7737 ;; Hardware stack levels required when called:    7
  7738 ;; This function calls:
  7739 ;;		Nothing
  7740 ;; This function is called by:
  7741 ;;		_eaDogM_WriteString
  7742 ;;		_send_lcd_cmd_dma
  7743 ;; This function uses a reentrant model
  7744 ;;
  7745                           
  7746                           	psect	text36
  7747  01951A                     __ptext36:
  7748                           	opt callstack 0
  7749  01951A                     _start_lcd:
  7750                           	opt callstack 20
  7751                           
  7752                           ;eadog.c: 141:  DMA1CON0bits.DMA1SIRQEN = 1;
  7753                           
  7754                           ; BSR set to: 0
  7755                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7756                           ;incstack = 0
  7757  01951A  013B               	movlb	59	; () banked
  7758  01951C  8DFC               	bsf	252,6,b	;volatile
  7759                           
  7760                           ; BSR set to: 59
  7761                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7762  01951E  0012               	return		;funcret
  7763  019520                     __end_of_start_lcd:
  7764                           	opt callstack 0
  7765                           
  7766 ;; *************** function _ringBufS_flush *****************
  7767 ;; Defined at:
  7768 ;;		line 76 in file "ringbufs.c"
  7769 ;; Parameters:    Size  Location     Type
  7770 ;;  _this           2  [STACK] PTR struct ringBufS_t
  7771 ;;		 -> ring_buf1(67), 
  7772 ;;  clearBuffer     1  [STACK] const char 
  7773 ;; Auto vars:     Size  Location     Type
  7774 ;;		None
  7775 ;; Return value:  Size  Location     Type
  7776 ;;                  1  [STACK] void 
  7777 ;; Registers used:
  7778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7779 ;; Tracked objects:
  7780 ;;		On entry : 3F/0
  7781 ;;		On exit  : 0/0
  7782 ;;		Unchanged: 0/0
  7783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7788 ;;Total ram usage:        0 bytes
  7789 ;; Hardware stack levels used:    1
  7790 ;; Hardware stack levels required when called:    8
  7791 ;; This function calls:
  7792 ;;		_memset
  7793 ;; This function is called by:
  7794 ;;		_eaDogM_WriteString
  7795 ;;		_send_lcd_cmd_dma
  7796 ;; This function uses a reentrant model
  7797 ;;
  7798                           
  7799                           	psect	text37
  7800  017EBE                     __ptext37:
  7801                           	opt callstack 0
  7802  017EBE                     _ringBufS_flush:
  7803                           	opt callstack 19
  7804                           
  7805                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  7806                           ;stkvar	__this @ sp[(0)+-2]
  7807                           
  7808                           ; BSR set to: 59
  7809                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7810                           ;incstack = 0
  7811  017EBE  0EFE               	movlw	-2
  7812  017EC0  006F FF8C  F02F    	movff	plusw1,btemp+10
  7813  017EC6  0EFF               	movlw	-1
  7814  017EC8  006F FF8C  F030    	movff	plusw1,btemp+11
  7815  017ECE  0E42               	movlw	66
  7816  017ED0  242F               	addwf	(btemp+10)^0,w,c
  7817  017ED2  6ED9               	movwf	fsr2l,c
  7818  017ED4  0E00               	movlw	0
  7819  017ED6  2030               	addwfc	(btemp+11)^0,w,c
  7820  017ED8  6EDA               	movwf	fsr2h,c
  7821  017EDA  0E00               	movlw	0
  7822  017EDC  6EDF               	movwf	indf2,c
  7823                           
  7824                           ;ringbufs.c: 79:  _this->head = 0;
  7825                           ;stkvar	__this @ sp[(0)+-2]
  7826  017EDE  0EFE               	movlw	-2
  7827  017EE0  006F FF8C  F02F    	movff	plusw1,btemp+10
  7828  017EE6  0EFF               	movlw	-1
  7829  017EE8  006F FF8C  F030    	movff	plusw1,btemp+11
  7830  017EEE  0E40               	movlw	64
  7831  017EF0  242F               	addwf	(btemp+10)^0,w,c
  7832  017EF2  6ED9               	movwf	fsr2l,c
  7833  017EF4  0E00               	movlw	0
  7834  017EF6  2030               	addwfc	(btemp+11)^0,w,c
  7835  017EF8  6EDA               	movwf	fsr2h,c
  7836  017EFA  0E00               	movlw	0
  7837  017EFC  6EDF               	movwf	indf2,c
  7838                           
  7839                           ;ringbufs.c: 80:  _this->tail = 0;
  7840                           ;stkvar	__this @ sp[(0)+-2]
  7841  017EFE  0EFE               	movlw	-2
  7842  017F00  006F FF8C  F02F    	movff	plusw1,btemp+10
  7843  017F06  0EFF               	movlw	-1
  7844  017F08  006F FF8C  F030    	movff	plusw1,btemp+11
  7845  017F0E  0E41               	movlw	65
  7846  017F10  242F               	addwf	(btemp+10)^0,w,c
  7847  017F12  6ED9               	movwf	fsr2l,c
  7848  017F14  0E00               	movlw	0
  7849  017F16  2030               	addwfc	(btemp+11)^0,w,c
  7850  017F18  6EDA               	movwf	fsr2h,c
  7851  017F1A  0E00               	movlw	0
  7852  017F1C  6EDF               	movwf	indf2,c
  7853                           
  7854                           ;ringbufs.c: 81:  if (clearBuffer) {
  7855                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  7856  017F1E  0EFD               	movlw	-3
  7857  017F20  50E3               	movf	plusw1,w,c
  7858  017F22  B4D8               	btfsc	status,2,c
  7859  017F24  D011               	goto	l1584
  7860                           
  7861                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  7862  017F26  0E40               	movlw	64
  7863  017F28  6EE6               	movwf	postinc1,c
  7864  017F2A  0E00               	movlw	0
  7865  017F2C  6EE6               	movwf	postinc1,c
  7866  017F2E  0E00               	movlw	0
  7867  017F30  6EE6               	movwf	postinc1,c
  7868  017F32  0E00               	movlw	0
  7869  017F34  6EE6               	movwf	postinc1,c
  7870                           
  7871                           ;stkvar	__this @ sp[(-4)+-2]
  7872  017F36  0EFA               	movlw	-6
  7873  017F38  006F FF8F FFE6     	movff	plusw1,postinc1
  7874  017F3E  006F FF8F FFE6     	movff	plusw1,postinc1
  7875  017F44  ECA0  F0A7         	call	_memset	;wreg free
  7876  017F48                     l1584:
  7877                           
  7878                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  7879  017F48  52E5               	movf	postdec1,f,c
  7880  017F4A  52E5               	movf	postdec1,f,c
  7881  017F4C  52E5               	movf	postdec1,f,c
  7882  017F4E  0012               	return		;funcret
  7883  017F50                     __end_of_ringBufS_flush:
  7884                           	opt callstack 0
  7885                           
  7886 ;; *************** function _memset *****************
  7887 ;; Defined at:
  7888 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  7889 ;; Parameters:    Size  Location     Type
  7890 ;;  dest            2  [STACK] PTR void 
  7891 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7892 ;;  c               2  [STACK] int 
  7893 ;;  n               2  [STACK] unsigned int 
  7894 ;; Auto vars:     Size  Location     Type
  7895 ;;  s               2  [STACK] PTR unsigned char 
  7896 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7897 ;;  k               2  [STACK] unsigned int 
  7898 ;; Return value:  Size  Location     Type
  7899 ;;                  2  [STACK] PTR void 
  7900 ;; Registers used:
  7901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7902 ;; Tracked objects:
  7903 ;;		On entry : 0/0
  7904 ;;		On exit  : 0/0
  7905 ;;		Unchanged: 0/0
  7906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7911 ;;Total ram usage:        0 bytes
  7912 ;; Hardware stack levels used:    1
  7913 ;; Hardware stack levels required when called:    7
  7914 ;; This function calls:
  7915 ;;		Nothing
  7916 ;; This function is called by:
  7917 ;;		_ringBufS_init
  7918 ;;		_ringBufS_flush
  7919 ;; This function uses a reentrant model
  7920 ;;
  7921                           
  7922                           	psect	text38
  7923  014F40                     __ptext38:
  7924                           	opt callstack 0
  7925  014F40                     _memset:
  7926                           	opt callstack 0
  7927                           
  7928                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7929  014F40  52E6               	movf	postinc1,f,c
  7930  014F42  52E6               	movf	postinc1,f,c
  7931  014F44  52E6               	movf	postinc1,f,c
  7932  014F46  52E6               	movf	postinc1,f,c
  7933                           
  7934                           ;stkvar	_dest @ sp[(-4)+-2]
  7935                           
  7936                           ;incstack = 0
  7937  014F48  0EFA               	movlw	-6
  7938  014F4A  006F FF8C  F02F    	movff	plusw1,btemp+10
  7939  014F50  0EFB               	movlw	-5
  7940  014F52  006F FF8C  F030    	movff	plusw1,btemp+11
  7941                           
  7942                           ;stkvar	_s @ sp[(-4)+0]
  7943  014F58  0EFD               	movlw	-3
  7944  014F5A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  7945  014F60  0EFC               	movlw	-4
  7946  014F62  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  7947                           
  7948                           ;stkvar	_n @ sp[(-4)+-6]
  7949  014F68  0EF6               	movlw	-10
  7950  014F6A  006F FF8C  F025    	movff	plusw1,btemp
  7951  014F70  0EF7               	movlw	-9
  7952  014F72  50E3               	movf	plusw1,w,c
  7953  014F74  1025               	iorwf	btemp^0,w,c
  7954  014F76  B4D8               	btfsc	status,2,c
  7955  014F78  D154               	goto	u10610
  7956                           
  7957                           ;stkvar	_c @ sp[(-4)+-4]
  7958                           ;stkvar	_s @ sp[(-4)+0]
  7959  014F7A  0EFC               	movlw	-4
  7960  014F7C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7961  014F82  0EFD               	movlw	-3
  7962  014F84  006F FF8F FFDA     	movff	plusw1,fsr2h
  7963  014F8A  0EF8               	movlw	-8
  7964  014F8C  006F FF8F FFDF     	movff	plusw1,indf2
  7965                           
  7966                           ;stkvar	_c @ sp[(-4)+-4]
  7967                           ;stkvar	_n @ sp[(-4)+-6]
  7968                           ;stkvar	_s @ sp[(-4)+0]
  7969  014F92  0EFC               	movlw	-4
  7970  014F94  006F FF8C  F02F    	movff	plusw1,btemp+10
  7971  014F9A  0EFD               	movlw	-3
  7972  014F9C  006F FF8C  F030    	movff	plusw1,btemp+11
  7973  014FA2  0EF6               	movlw	-10
  7974  014FA4  50E3               	movf	plusw1,w,c
  7975  014FA6  262F               	addwf	(btemp+10)^0,f,c
  7976  014FA8  0EF7               	movlw	-9
  7977  014FAA  50E3               	movf	plusw1,w,c
  7978  014FAC  2230               	addwfc	(btemp+11)^0,f,c
  7979  014FAE  0EFF               	movlw	255
  7980  014FB0  242F               	addwf	(btemp+10)^0,w,c
  7981  014FB2  6ED9               	movwf	fsr2l,c
  7982  014FB4  0EFF               	movlw	255
  7983  014FB6  2030               	addwfc	(btemp+11)^0,w,c
  7984  014FB8  6EDA               	movwf	fsr2h,c
  7985  014FBA  0EF8               	movlw	-8
  7986  014FBC  006F FF8F FFDF     	movff	plusw1,indf2
  7987                           
  7988                           ;stkvar	_n @ sp[(-4)+-6]
  7989  014FC2  0EF7               	movlw	-9
  7990  014FC4  50E3               	movf	plusw1,w,c
  7991  014FC6  E108               	bnz	l10755
  7992  014FC8  0EF6               	movlw	-10
  7993  014FCA  006F FF8C  F025    	movff	plusw1,btemp
  7994  014FD0  0E03               	movlw	3
  7995  014FD2  5E25               	subwf	btemp^0,f,c
  7996  014FD4  A0D8               	btfss	status,0,c
  7997  014FD6  D125               	goto	u10610
  7998  014FD8                     l10755:
  7999                           
  8000                           ;stkvar	_c @ sp[(-4)+-4]
  8001                           ;stkvar	_s @ sp[(-4)+0]
  8002  014FD8  0EFC               	movlw	-4
  8003  014FDA  006F FF8C  F02F    	movff	plusw1,btemp+10
  8004  014FE0  0EFD               	movlw	-3
  8005  014FE2  006F FF8C  F030    	movff	plusw1,btemp+11
  8006  014FE8  0E01               	movlw	1
  8007  014FEA  242F               	addwf	(btemp+10)^0,w,c
  8008  014FEC  6ED9               	movwf	fsr2l,c
  8009  014FEE  0E00               	movlw	0
  8010  014FF0  2030               	addwfc	(btemp+11)^0,w,c
  8011  014FF2  6EDA               	movwf	fsr2h,c
  8012  014FF4  0EF8               	movlw	-8
  8013  014FF6  006F FF8F FFDF     	movff	plusw1,indf2
  8014                           
  8015                           ;stkvar	_c @ sp[(-4)+-4]
  8016                           ;stkvar	_s @ sp[(-4)+0]
  8017  014FFC  0EFC               	movlw	-4
  8018  014FFE  006F FF8C  F02F    	movff	plusw1,btemp+10
  8019  015004  0EFD               	movlw	-3
  8020  015006  006F FF8C  F030    	movff	plusw1,btemp+11
  8021  01500C  0E02               	movlw	2
  8022  01500E  242F               	addwf	(btemp+10)^0,w,c
  8023  015010  6ED9               	movwf	fsr2l,c
  8024  015012  0E00               	movlw	0
  8025  015014  2030               	addwfc	(btemp+11)^0,w,c
  8026  015016  6EDA               	movwf	fsr2h,c
  8027  015018  0EF8               	movlw	-8
  8028  01501A  006F FF8F FFDF     	movff	plusw1,indf2
  8029                           
  8030                           ;stkvar	_c @ sp[(-4)+-4]
  8031                           ;stkvar	_n @ sp[(-4)+-6]
  8032                           ;stkvar	_s @ sp[(-4)+0]
  8033  015020  0EFC               	movlw	-4
  8034  015022  006F FF8C  F02F    	movff	plusw1,btemp+10
  8035  015028  0EFD               	movlw	-3
  8036  01502A  006F FF8C  F030    	movff	plusw1,btemp+11
  8037  015030  0EF6               	movlw	-10
  8038  015032  50E3               	movf	plusw1,w,c
  8039  015034  262F               	addwf	(btemp+10)^0,f,c
  8040  015036  0EF7               	movlw	-9
  8041  015038  50E3               	movf	plusw1,w,c
  8042  01503A  2230               	addwfc	(btemp+11)^0,f,c
  8043  01503C  0EFE               	movlw	254
  8044  01503E  242F               	addwf	(btemp+10)^0,w,c
  8045  015040  6ED9               	movwf	fsr2l,c
  8046  015042  0EFF               	movlw	255
  8047  015044  2030               	addwfc	(btemp+11)^0,w,c
  8048  015046  6EDA               	movwf	fsr2h,c
  8049  015048  0EF8               	movlw	-8
  8050  01504A  006F FF8F FFDF     	movff	plusw1,indf2
  8051                           
  8052                           ;stkvar	_c @ sp[(-4)+-4]
  8053                           ;stkvar	_n @ sp[(-4)+-6]
  8054                           ;stkvar	_s @ sp[(-4)+0]
  8055  015050  0EFC               	movlw	-4
  8056  015052  006F FF8C  F02F    	movff	plusw1,btemp+10
  8057  015058  0EFD               	movlw	-3
  8058  01505A  006F FF8C  F030    	movff	plusw1,btemp+11
  8059  015060  0EF6               	movlw	-10
  8060  015062  50E3               	movf	plusw1,w,c
  8061  015064  262F               	addwf	(btemp+10)^0,f,c
  8062  015066  0EF7               	movlw	-9
  8063  015068  50E3               	movf	plusw1,w,c
  8064  01506A  2230               	addwfc	(btemp+11)^0,f,c
  8065  01506C  0EFD               	movlw	253
  8066  01506E  242F               	addwf	(btemp+10)^0,w,c
  8067  015070  6ED9               	movwf	fsr2l,c
  8068  015072  0EFF               	movlw	255
  8069  015074  2030               	addwfc	(btemp+11)^0,w,c
  8070  015076  6EDA               	movwf	fsr2h,c
  8071  015078  0EF8               	movlw	-8
  8072  01507A  006F FF8F FFDF     	movff	plusw1,indf2
  8073                           
  8074                           ;stkvar	_n @ sp[(-4)+-6]
  8075  015080  0EF7               	movlw	-9
  8076  015082  50E3               	movf	plusw1,w,c
  8077  015084  E108               	bnz	l10761
  8078  015086  0EF6               	movlw	-10
  8079  015088  006F FF8C  F025    	movff	plusw1,btemp
  8080  01508E  0E07               	movlw	7
  8081  015090  5E25               	subwf	btemp^0,f,c
  8082  015092  A0D8               	btfss	status,0,c
  8083  015094  D0C6               	goto	u10610
  8084  015096                     l10761:
  8085                           
  8086                           ;stkvar	_c @ sp[(-4)+-4]
  8087                           ;stkvar	_s @ sp[(-4)+0]
  8088  015096  0EFC               	movlw	-4
  8089  015098  006F FF8C  F02F    	movff	plusw1,btemp+10
  8090  01509E  0EFD               	movlw	-3
  8091  0150A0  006F FF8C  F030    	movff	plusw1,btemp+11
  8092  0150A6  0E03               	movlw	3
  8093  0150A8  242F               	addwf	(btemp+10)^0,w,c
  8094  0150AA  6ED9               	movwf	fsr2l,c
  8095  0150AC  0E00               	movlw	0
  8096  0150AE  2030               	addwfc	(btemp+11)^0,w,c
  8097  0150B0  6EDA               	movwf	fsr2h,c
  8098  0150B2  0EF8               	movlw	-8
  8099  0150B4  006F FF8F FFDF     	movff	plusw1,indf2
  8100                           
  8101                           ;stkvar	_c @ sp[(-4)+-4]
  8102                           ;stkvar	_n @ sp[(-4)+-6]
  8103                           ;stkvar	_s @ sp[(-4)+0]
  8104  0150BA  0EFC               	movlw	-4
  8105  0150BC  006F FF8C  F02F    	movff	plusw1,btemp+10
  8106  0150C2  0EFD               	movlw	-3
  8107  0150C4  006F FF8C  F030    	movff	plusw1,btemp+11
  8108  0150CA  0EF6               	movlw	-10
  8109  0150CC  50E3               	movf	plusw1,w,c
  8110  0150CE  262F               	addwf	(btemp+10)^0,f,c
  8111  0150D0  0EF7               	movlw	-9
  8112  0150D2  50E3               	movf	plusw1,w,c
  8113  0150D4  2230               	addwfc	(btemp+11)^0,f,c
  8114  0150D6  0EFC               	movlw	252
  8115  0150D8  242F               	addwf	(btemp+10)^0,w,c
  8116  0150DA  6ED9               	movwf	fsr2l,c
  8117  0150DC  0EFF               	movlw	255
  8118  0150DE  2030               	addwfc	(btemp+11)^0,w,c
  8119  0150E0  6EDA               	movwf	fsr2h,c
  8120  0150E2  0EF8               	movlw	-8
  8121  0150E4  006F FF8F FFDF     	movff	plusw1,indf2
  8122                           
  8123                           ;stkvar	_n @ sp[(-4)+-6]
  8124  0150EA  0EF7               	movlw	-9
  8125  0150EC  50E3               	movf	plusw1,w,c
  8126  0150EE  E108               	bnz	l10767
  8127  0150F0  0EF6               	movlw	-10
  8128  0150F2  006F FF8C  F025    	movff	plusw1,btemp
  8129  0150F8  0E09               	movlw	9
  8130  0150FA  5E25               	subwf	btemp^0,f,c
  8131  0150FC  A0D8               	btfss	status,0,c
  8132  0150FE  D091               	goto	u10610
  8133  015100                     l10767:
  8134                           
  8135                           ;stkvar	_s @ sp[(-4)+0]
  8136  015100  0EFC               	movlw	-4
  8137  015102  006F FF8C  F02F    	movff	plusw1,btemp+10
  8138  015108  1E2F               	comf	(btemp+10)^0,f,c
  8139  01510A  0EFD               	movlw	-3
  8140  01510C  006F FF8C  F030    	movff	plusw1,btemp+11
  8141  015112  1E30               	comf	(btemp+11)^0,f,c
  8142  015114  2A2F               	incf	(btemp+10)^0,f,c
  8143  015116  B4D8               	btfsc	status,2,c
  8144  015118  2A30               	incf	(btemp+11)^0,f,c
  8145  01511A  0E03               	movlw	3
  8146  01511C  162F               	andwf	(btemp+10)^0,f,c
  8147  01511E  0E00               	movlw	0
  8148  015120  1630               	andwf	(btemp+11)^0,f,c
  8149                           
  8150                           ;stkvar	_k @ sp[(-4)+2]
  8151  015122  0EFE               	movlw	-2
  8152  015124  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8153  01512A  0EFF               	movlw	-1
  8154  01512C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8155                           
  8156                           ;stkvar	_k @ sp[(-4)+2]
  8157                           ;stkvar	_s @ sp[(-4)+0]
  8158  015132  0EFC               	movlw	-4
  8159  015134  50E3               	movf	plusw1,w,c
  8160  015136  6E25               	movwf	btemp^0,c
  8161  015138  0EFE               	movlw	-2
  8162  01513A  50E3               	movf	plusw1,w,c
  8163  01513C  2625               	addwf	btemp^0,f,c
  8164  01513E  0EFC               	movlw	-4
  8165  015140  0060  F097  FFE3   	movff	btemp,plusw1
  8166  015146  0EFD               	movlw	-3
  8167  015148  50E3               	movf	plusw1,w,c
  8168  01514A  6E25               	movwf	btemp^0,c
  8169  01514C  0EFF               	movlw	-1
  8170  01514E  50E3               	movf	plusw1,w,c
  8171  015150  2225               	addwfc	btemp^0,f,c
  8172  015152  0EFD               	movlw	-3
  8173  015154  0060  F097  FFE3   	movff	btemp,plusw1
  8174                           
  8175                           ;stkvar	_k @ sp[(-4)+2]
  8176                           ;stkvar	_n @ sp[(-4)+-6]
  8177  01515A  0EF6               	movlw	-10
  8178  01515C  50E3               	movf	plusw1,w,c
  8179  01515E  6E25               	movwf	btemp^0,c
  8180  015160  0EFE               	movlw	-2
  8181  015162  50E3               	movf	plusw1,w,c
  8182  015164  5E25               	subwf	btemp^0,f,c
  8183  015166  0EF6               	movlw	-10
  8184  015168  0060  F097  FFE3   	movff	btemp,plusw1
  8185  01516E  0EF7               	movlw	-9
  8186  015170  50E3               	movf	plusw1,w,c
  8187  015172  6E25               	movwf	btemp^0,c
  8188  015174  0EFF               	movlw	-1
  8189  015176  50E3               	movf	plusw1,w,c
  8190  015178  5A25               	subwfb	btemp^0,f,c
  8191  01517A  0EF7               	movlw	-9
  8192  01517C  0060  F097  FFE3   	movff	btemp,plusw1
  8193  015182  0EFC               	movlw	252
  8194  015184  6E2F               	movwf	(btemp+10)^0,c
  8195  015186  0EFF               	movlw	255
  8196  015188  6E30               	movwf	(btemp+11)^0,c
  8197                           
  8198                           ;stkvar	_n @ sp[(-4)+-6]
  8199  01518A  0EF6               	movlw	-10
  8200  01518C  006F FF8C  F025    	movff	plusw1,btemp
  8201  015192  502F               	movf	(btemp+10)^0,w,c
  8202  015194  1625               	andwf	btemp^0,f,c
  8203  015196  0EF6               	movlw	-10
  8204  015198  0060  F097  FFE3   	movff	btemp,plusw1
  8205  01519E  0EF7               	movlw	-9
  8206  0151A0  006F FF8C  F025    	movff	plusw1,btemp
  8207  0151A6  5030               	movf	(btemp+11)^0,w,c
  8208  0151A8  1625               	andwf	btemp^0,f,c
  8209  0151AA  0EF7               	movlw	-9
  8210  0151AC  D02E               	goto	L6
  8211  0151AE                     l10775:
  8212                           
  8213                           ;stkvar	_c @ sp[(-4)+-4]
  8214                           ;stkvar	_s @ sp[(-4)+0]
  8215  0151AE  0EFC               	movlw	-4
  8216  0151B0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8217  0151B6  0EFD               	movlw	-3
  8218  0151B8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8219  0151BE  0EF8               	movlw	-8
  8220  0151C0  006F FF8F FFDF     	movff	plusw1,indf2
  8221                           
  8222                           ;stkvar	_n @ sp[(-4)+-6]
  8223  0151C6  0EF6               	movlw	-10
  8224  0151C8  006F FF8C  F025    	movff	plusw1,btemp
  8225  0151CE  0E01               	movlw	1
  8226  0151D0  5E25               	subwf	btemp^0,f,c
  8227  0151D2  0EF6               	movlw	-10
  8228  0151D4  0060  F097  FFE3   	movff	btemp,plusw1
  8229  0151DA  0EF7               	movlw	-9
  8230  0151DC  006F FF8C  F025    	movff	plusw1,btemp
  8231  0151E2  0E00               	movlw	0
  8232  0151E4  5A25               	subwfb	btemp^0,f,c
  8233  0151E6  0EF7               	movlw	-9
  8234  0151E8  0060  F097  FFE3   	movff	btemp,plusw1
  8235                           
  8236                           ;stkvar	_s @ sp[(-4)+0]
  8237  0151EE  0EFC               	movlw	-4
  8238  0151F0  50E3               	movf	plusw1,w,c
  8239  0151F2  0F01               	addlw	1
  8240  0151F4  6E25               	movwf	btemp^0,c
  8241  0151F6  0EFC               	movlw	-4
  8242  0151F8  0060  F097  FFE3   	movff	btemp,plusw1
  8243  0151FE  6A25               	clrf	btemp^0,c
  8244  015200  0EFD               	movlw	-3
  8245  015202  50E3               	movf	plusw1,w,c
  8246  015204  2025               	addwfc	btemp^0,w,c
  8247  015206  6E25               	movwf	btemp^0,c
  8248  015208  0EFD               	movlw	-3
  8249  01520A                     L6:
  8250  01520A  0060  F097  FFE3   	movff	btemp,plusw1
  8251                           
  8252                           ;stkvar	_n @ sp[(-4)+-6]
  8253  015210  0EF6               	movlw	-10
  8254  015212  006F FF8C  F025    	movff	plusw1,btemp
  8255  015218  0EF7               	movlw	-9
  8256  01521A  50E3               	movf	plusw1,w,c
  8257  01521C  1025               	iorwf	btemp^0,w,c
  8258  01521E  A4D8               	btfss	status,2,c
  8259  015220  D7C6               	goto	l10775
  8260  015222                     u10610:
  8261                           
  8262                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  8263  015222  0EF6               	movlw	246
  8264  015224  26E1               	addwf	fsr1l,f,c
  8265  015226  0EFF               	movlw	255
  8266  015228  22E2               	addwfc	fsr1h,f,c
  8267  01522A  0012               	return		;funcret
  8268  01522C                     __end_of_memset:
  8269                           	opt callstack 0
  8270                           
  8271 ;; *************** function _printf *****************
  8272 ;; Defined at:
  8273 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  8274 ;; Parameters:    Size  Location     Type
  8275 ;;  fmt             2  [STACK] PTR const unsigned char 
  8276 ;;		 -> STR_26(3), STR_25(3), STR_24(3), 
  8277 ;; Auto vars:     Size  Location     Type
  8278 ;;  ap              2  [STACK] PTR void [1]
  8279 ;;		 -> ?_printf(2), ?_sprintf(2), 
  8280 ;;  ret             2    0        int 
  8281 ;; Return value:  Size  Location     Type
  8282 ;;                  2  [STACK] int 
  8283 ;; Registers used:
  8284 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8285 ;; Tracked objects:
  8286 ;;		On entry : 3F/3B
  8287 ;;		On exit  : 3F/0
  8288 ;;		Unchanged: 0/0
  8289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8294 ;;Total ram usage:        0 bytes
  8295 ;; Hardware stack levels used:    1
  8296 ;; Hardware stack levels required when called:   15
  8297 ;; This function calls:
  8298 ;;		_vfprintf
  8299 ;; This function is called by:
  8300 ;;		_eaDogM_WriteString
  8301 ;;		_send_lcd_cmd_dma
  8302 ;; This function uses a reentrant model
  8303 ;;
  8304                           
  8305                           	psect	text39
  8306  018550                     __ptext39:
  8307                           	opt callstack 0
  8308  018550                     _printf:
  8309                           	opt callstack 0
  8310                           
  8311                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8312  018550  52E6               	movf	postinc1,f,c
  8313  018552  52E6               	movf	postinc1,f,c
  8314                           
  8315                           ;stkvar	?_printf @ sp[(-2)+-3]
  8316                           
  8317                           ;incstack = 0
  8318  018554  0EFB               	movlw	251
  8319  018556  24E1               	addwf	fsr1l,w,c
  8320  018558  6E2F               	movwf	(btemp+10)^0,c
  8321  01855A  0EFF               	movlw	255
  8322  01855C  20E2               	addwfc	fsr1h,w,c
  8323  01855E  6E30               	movwf	(btemp+11)^0,c
  8324                           
  8325                           ;stkvar	_ap @ sp[(-2)+0]
  8326  018560  0EFF               	movlw	-1
  8327  018562  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8328  018568  0EFE               	movlw	-2
  8329  01856A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8330                           
  8331                           ;stkvar	_ap @ sp[(-2)+0]
  8332  018570  0EFE               	movlw	254
  8333  018572  24E1               	addwf	fsr1l,w,c
  8334  018574  6E25               	movwf	btemp^0,c
  8335  018576  0EFF               	movlw	255
  8336  018578  20E2               	addwfc	fsr1h,w,c
  8337  01857A  6E26               	movwf	(btemp+1)^0,c
  8338  01857C  0060  F097  FFE6   	movff	btemp,postinc1
  8339  018582  0060  F09B  FFE6   	movff	btemp+1,postinc1
  8340                           
  8341                           ;stkvar	_fmt @ sp[(-4)+-3]
  8342  018588  0EF9               	movlw	-7
  8343  01858A  006F FF8F FFE6     	movff	plusw1,postinc1
  8344  018590  006F FF8F FFE6     	movff	plusw1,postinc1
  8345  018596  0E00               	movlw	0
  8346  018598  6EE6               	movwf	postinc1,c
  8347  01859A  0E00               	movlw	0
  8348  01859C  6EE6               	movwf	postinc1,c
  8349  01859E  ECC4  F0BD         	call	_vfprintf	;wreg free
  8350                           
  8351                           ; BSR set to: 0
  8352                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  8353  0185A2  52E5               	movf	postdec1,f,c
  8354  0185A4  52E5               	movf	postdec1,f,c
  8355  0185A6  52E5               	movf	postdec1,f,c
  8356  0185A8  50E7               	movf	indf1,w,c
  8357  0185AA  5EE1               	subwf	fsr1l,f,c
  8358  0185AC  0E00               	movlw	0
  8359  0185AE  5AE2               	subwfb	fsr1h,f,c
  8360  0185B0  0012               	return		;funcret
  8361  0185B2                     __end_of_printf:
  8362                           	opt callstack 0
  8363                           
  8364 ;; *************** function _vfprintf *****************
  8365 ;; Defined at:
  8366 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8367 ;; Parameters:    Size  Location     Type
  8368 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8369 ;;		 -> f(6), NULL(0), 
  8370 ;;  fmt             2  [STACK] PTR const unsigned char 
  8371 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  8372 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  8373 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  8374 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  8375 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
  8376 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(20), 
  8377 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  8378 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
  8379 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  8380 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8381 ;;  ap              2  [STACK] PTR PTR void 
  8382 ;;		 -> ap(2), ap(2), 
  8383 ;; Auto vars:     Size  Location     Type
  8384 ;;  cfmt            2  [STACK] PTR unsigned char 
  8385 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  8386 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  8387 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  8388 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  8389 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
  8390 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(20), 
  8391 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  8392 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
  8393 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  8394 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8395 ;; Return value:  Size  Location     Type
  8396 ;;                  2  [STACK] int 
  8397 ;; Registers used:
  8398 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8399 ;; Tracked objects:
  8400 ;;		On entry : 0/1
  8401 ;;		On exit  : 3F/0
  8402 ;;		Unchanged: 0/0
  8403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8408 ;;Total ram usage:        0 bytes
  8409 ;; Hardware stack levels used:    1
  8410 ;; Hardware stack levels required when called:   14
  8411 ;; This function calls:
  8412 ;;		_vfpfcnvrt
  8413 ;; This function is called by:
  8414 ;;		_sprintf
  8415 ;;		_printf
  8416 ;; This function uses a reentrant model
  8417 ;;
  8418                           
  8419                           	psect	text40
  8420  017B88                     __ptext40:
  8421                           	opt callstack 0
  8422  017B88                     _vfprintf:
  8423                           	opt callstack 0
  8424                           
  8425                           ; BSR set to: 0
  8426                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8427  017B88  52E6               	movf	postinc1,f,c
  8428  017B8A  52E6               	movf	postinc1,f,c
  8429                           
  8430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  8431                           ;stkvar	_fmt @ sp[(-2)+-4]
  8432                           
  8433                           ;incstack = 0
  8434  017B8C  0EFA               	movlw	-6
  8435  017B8E  006F FF8C  F02F    	movff	plusw1,btemp+10
  8436  017B94  0EFB               	movlw	-5
  8437  017B96  006F FF8C  F030    	movff	plusw1,btemp+11
  8438                           
  8439                           ;stkvar	_cfmt @ sp[(-2)+0]
  8440  017B9C  0EFF               	movlw	-1
  8441  017B9E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8442  017BA4  0EFE               	movlw	-2
  8443  017BA6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8444                           
  8445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  8446  017BAC  0100               	movlb	0	; () banked
  8447  017BAE  6BC1               	clrf	_nout& (0+255),b
  8448  017BB0  6BC2               	clrf	(_nout+1)& (0+255),b
  8449                           
  8450                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8451  017BB2  D021               	goto	l10789
  8452  017BB4                     l10787:
  8453                           
  8454                           ; BSR set to: 0
  8455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  8456                           ;stkvar	_ap @ sp[(-2)+-6]
  8457  017BB4  0EF8               	movlw	-8
  8458  017BB6  006F FF8F FFE6     	movff	plusw1,postinc1
  8459  017BBC  006F FF8F FFE6     	movff	plusw1,postinc1
  8460                           
  8461                           ;stkvar	_cfmt @ sp[(-4)+0]
  8462  017BC2  0EFC               	movlw	252
  8463  017BC4  24E1               	addwf	fsr1l,w,c
  8464  017BC6  6E25               	movwf	btemp^0,c
  8465  017BC8  0EFF               	movlw	255
  8466  017BCA  20E2               	addwfc	fsr1h,w,c
  8467  017BCC  6E26               	movwf	(btemp+1)^0,c
  8468  017BCE  0060  F097  FFE6   	movff	btemp,postinc1
  8469  017BD4  0060  F09B  FFE6   	movff	btemp+1,postinc1
  8470                           
  8471                           ;stkvar	_fp @ sp[(-6)+-2]
  8472  017BDA  0EF8               	movlw	-8
  8473  017BDC  006F FF8F FFE6     	movff	plusw1,postinc1
  8474  017BE2  006F FF8F FFE6     	movff	plusw1,postinc1
  8475  017BE8  EC22  F089         	call	_vfpfcnvrt	;wreg free
  8476  017BEC  5025               	movf	btemp^0,w,c
  8477  017BEE  0100               	movlb	0	; () banked
  8478  017BF0  27C1               	addwf	_nout& (0+255),f,b
  8479  017BF2  5026               	movf	(btemp+1)^0,w,c
  8480  017BF4  23C2               	addwfc	(_nout+1)& (0+255),f,b
  8481  017BF6                     l10789:
  8482                           
  8483                           ; BSR set to: 0
  8484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8485                           ;stkvar	_cfmt @ sp[(-2)+0]
  8486  017BF6  50E1               	movf	fsr1l,w,c
  8487  017BF8  0FFE               	addlw	-2
  8488  017BFA  6ED9               	movwf	fsr2l,c
  8489  017BFC  50E2               	movf	fsr1h,w,c
  8490  017BFE  6EDA               	movwf	fsr2h,c
  8491  017C00  0EFF               	movlw	255
  8492  017C02  22DA               	addwfc	fsr2h,f,c
  8493  017C04  006F FF7B FFF6     	movff	postinc2,tblptrl
  8494  017C0A  006F FF77 FFF7     	movff	postdec2,tblptrh
  8495  017C10                     	if	0	;tblptru may be non-zero
  8496  017C10                     	endif
  8497  017C10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8498  017C10  0E00               	movlw	low (__mediumconst shr (0+16))
  8499  017C12  6EF8               	movwf	tblptru,c
  8500  017C14                     	endif
  8501  017C14  0008               	tblrd		*
  8502  017C16  50F5               	movf	tablat,w,c
  8503  017C18  0900               	iorlw	0
  8504  017C1A  A4D8               	btfss	status,2,c
  8505  017C1C  D7CB               	goto	l10787
  8506                           
  8507                           ; BSR set to: 0
  8508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  8509  017C1E  0060  F304  F025   	movff	_nout,btemp
  8510  017C24  0060  F308  F026   	movff	_nout+1,btemp+1
  8511                           
  8512                           ; BSR set to: 0
  8513                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  8514  017C2A  0EF8               	movlw	248
  8515  017C2C  26E1               	addwf	fsr1l,f,c
  8516  017C2E  0EFF               	movlw	255
  8517  017C30  22E2               	addwfc	fsr1h,f,c
  8518  017C32  0012               	return		;funcret
  8519  017C34                     __end_of_vfprintf:
  8520                           	opt callstack 0
  8521                           
  8522 ;; *************** function _vfpfcnvrt *****************
  8523 ;; Defined at:
  8524 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8525 ;; Parameters:    Size  Location     Type
  8526 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8527 ;;		 -> f(6), NULL(0), 
  8528 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  8529 ;;		 -> cfmt(2), 
  8530 ;;  ap              2  [STACK] PTR PTR void 
  8531 ;;		 -> ap(2), ap(2), 
  8532 ;; Auto vars:     Size  Location     Type
  8533 ;;  llu             8  [STACK] unsigned long long 
  8534 ;;  ll              8  [STACK] long long 
  8535 ;;  f               4  [STACK] long long 
  8536 ;;  ct              3  [STACK] unsigned char [3]
  8537 ;;  vp              3    0        PTR void 
  8538 ;;  cp              2  [STACK] PTR unsigned char 
  8539 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
  8540 ;;		 -> D.lcd(288), D(290), T(144), STR_7(6), 
  8541 ;;		 -> STR_3(6), V(188), 
  8542 ;;  i               2    0        int 
  8543 ;;  done            2    0        int 
  8544 ;;  c               1  [STACK] unsigned char 
  8545 ;; Return value:  Size  Location     Type
  8546 ;;                  2  [STACK] int 
  8547 ;; Registers used:
  8548 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8549 ;; Tracked objects:
  8550 ;;		On entry : 0/0
  8551 ;;		On exit  : 0/0
  8552 ;;		Unchanged: 0/0
  8553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8558 ;;Total ram usage:        0 bytes
  8559 ;; Hardware stack levels used:    1
  8560 ;; Hardware stack levels required when called:   13
  8561 ;; This function calls:
  8562 ;;		_atoi
  8563 ;;		_ctoa
  8564 ;;		_dtoa
  8565 ;;		_efgtoa
  8566 ;;		_fputc
  8567 ;;		_isdigit
  8568 ;;		_isupper
  8569 ;;		_stoa
  8570 ;;		_strncmp
  8571 ;;		_tolower
  8572 ;;		_xtoa
  8573 ;; This function is called by:
  8574 ;;		_vfprintf
  8575 ;; This function uses a reentrant model
  8576 ;;
  8577                           
  8578                           	psect	text41
  8579  011244                     __ptext41:
  8580                           	opt callstack 0
  8581  011244                     _vfpfcnvrt:
  8582                           	opt callstack 0
  8583                           
  8584                           ; BSR set to: 0
  8585                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8586  011244  0E20               	movlw	32
  8587  011246  26E1               	addwf	fsr1l,f,c
  8588  011248  0E00               	movlw	0
  8589  01124A  22E2               	addwfc	fsr1h,f,c
  8590                           
  8591                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  8592                           ;stkvar	_fmt @ sp[(-32)+-4]
  8593                           
  8594                           ;incstack = 0
  8595  01124C  0EDC               	movlw	-36
  8596  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8597  011254  0EDD               	movlw	-35
  8598  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  8599  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8600  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  8601  011268                     	if	0	;tblptru may be non-zero
  8602  011268                     	endif
  8603  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8604  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  8605  01126A  6EF8               	movwf	tblptru,c
  8606  01126C                     	endif
  8607  01126C  0008               	tblrd		*
  8608  01126E  50F5               	movf	tablat,w,c
  8609  011270  0A25               	xorlw	37
  8610  011272  A4D8               	btfss	status,2,c
  8611  011274  EF92  F08E         	goto	l10733
  8612                           
  8613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  8614                           ;stkvar	_fmt @ sp[(-32)+-4]
  8615  011278  0EDC               	movlw	-36
  8616  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8617  011280  0EDD               	movlw	-35
  8618  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  8619  011288  2ADE               	incf	postinc2,f,c
  8620  01128A  0E00               	movlw	0
  8621  01128C  22DD               	addwfc	postdec2,f,c
  8622                           
  8623                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  8624  01128E  6A0A               	clrf	_width^0,c
  8625  011290  6A0B               	clrf	(_width+1)^0,c
  8626  011292  6A0E               	clrf	_flags^0,c
  8627  011294  6A0F               	clrf	(_flags+1)^0,c
  8628                           
  8629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  8630  011296  680C               	setf	_prec^0,c
  8631  011298  680D               	setf	(_prec+1)^0,c
  8632                           
  8633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  8634                           ;stkvar	_fmt @ sp[(-32)+-4]
  8635  01129A  0EDC               	movlw	-36
  8636  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8637  0112A2  0EDD               	movlw	-35
  8638  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8639  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  8640  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  8641  0112B6                     	if	0	;tblptru may be non-zero
  8642  0112B6                     	endif
  8643  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8644  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  8645  0112B8  6EF8               	movwf	tblptru,c
  8646  0112BA                     	endif
  8647  0112BA  0008               	tblrd		*
  8648  0112BC  50F5               	movf	tablat,w,c
  8649  0112BE  0A2A               	xorlw	42
  8650  0112C0  A4D8               	btfss	status,2,c
  8651  0112C2  D031               	goto	l10597
  8652                           
  8653                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  8654                           ;stkvar	_fmt @ sp[(-32)+-4]
  8655  0112C4  0EDC               	movlw	-36
  8656  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8657  0112CC  0EDD               	movlw	-35
  8658  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8659  0112D4  2ADE               	incf	postinc2,f,c
  8660  0112D6  0E00               	movlw	0
  8661  0112D8  22DD               	addwfc	postdec2,f,c
  8662                           
  8663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  8664                           ;stkvar	_ap @ sp[(-32)+-6]
  8665  0112DA  0EDA               	movlw	-38
  8666  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8667  0112E2  0EDB               	movlw	-37
  8668  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8669  0112EA  0E02               	movlw	2
  8670  0112EC  5EDE               	subwf	postinc2,f,c
  8671  0112EE  0E00               	movlw	0
  8672  0112F0  5ADD               	subwfb	postdec2,f,c
  8673  0112F2  006F FF78  F02F    	movff	postinc2,btemp+10
  8674  0112F8  006F FF74  F030    	movff	postdec2,btemp+11
  8675  0112FE  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  8676  011304  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  8677  01130A  006F FF78  F00A    	movff	postinc2,_width
  8678  011310  006F FF74  F00B    	movff	postdec2,_width+1
  8679                           
  8680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  8681  011316  AE0B               	btfss	(_width+1)^0,7,c
  8682  011318  D066               	goto	u10370
  8683                           
  8684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  8685  01131A  800E               	bsf	_flags^0,0,c
  8686                           
  8687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  8688  01131C  6C0A               	negf	_width^0,c
  8689  01131E  1E0B               	comf	(_width+1)^0,f,c
  8690  011320  B0D8               	btfsc	status,0,c
  8691  011322  2A0B               	incf	(_width+1)^0,f,c
  8692  011324  D060               	goto	u10370
  8693  011326                     l10597:
  8694                           
  8695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  8696                           ;stkvar	_fmt @ sp[(-32)+-4]
  8697  011326  0EDC               	movlw	-36
  8698  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  8699  01132E  0EDD               	movlw	-35
  8700  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  8701  011336  006F FF78  F02F    	movff	postinc2,btemp+10
  8702  01133C  006F FF74  F030    	movff	postdec2,btemp+11
  8703  011342  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  8704  011348  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  8705  01134E  EC22  F0AD         	call	_atoi	;wreg free
  8706  011352  0060  F094  F00A   	movff	btemp,_width
  8707  011358  0060  F098  F00B   	movff	btemp+1,_width+1
  8708                           
  8709                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8710  01135E  D00B               	goto	l10601
  8711  011360                     l10599:
  8712                           
  8713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  8714                           ;stkvar	_fmt @ sp[(-32)+-4]
  8715  011360  0EDC               	movlw	-36
  8716  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  8717  011368  0EDD               	movlw	-35
  8718  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8719  011370  2ADE               	incf	postinc2,f,c
  8720  011372  0E00               	movlw	0
  8721  011374  22DD               	addwfc	postdec2,f,c
  8722  011376                     l10601:
  8723  011376  0ED0               	movlw	208
  8724  011378  6E2F               	movwf	(btemp+10)^0,c
  8725  01137A  0EFF               	movlw	255
  8726  01137C  6E30               	movwf	(btemp+11)^0,c
  8727                           
  8728                           ;stkvar	_fmt @ sp[(-32)+-4]
  8729  01137E  0EDC               	movlw	-36
  8730  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  8731  011386  0EDD               	movlw	-35
  8732  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  8733  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  8734  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  8735  01139A                     	if	0	;tblptru may be non-zero
  8736  01139A                     	endif
  8737  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8738  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  8739  01139C  6EF8               	movwf	tblptru,c
  8740  01139E                     	endif
  8741  01139E  0008               	tblrd		*
  8742  0113A0  50F5               	movf	tablat,w,c
  8743  0113A2  6E2D               	movwf	(btemp+8)^0,c
  8744  0113A4  6A2E               	clrf	(btemp+9)^0,c
  8745  0113A6  502F               	movf	(btemp+10)^0,w,c
  8746  0113A8  262D               	addwf	(btemp+8)^0,f,c
  8747  0113AA  5030               	movf	(btemp+11)^0,w,c
  8748  0113AC  222E               	addwfc	(btemp+9)^0,f,c
  8749  0113AE  502E               	movf	(btemp+9)^0,w,c
  8750  0113B0  E106               	bnz	u10350
  8751  0113B2  0E0A               	movlw	10
  8752  0113B4  5C2D               	subwf	(btemp+8)^0,w,c
  8753  0113B6  B0D8               	btfsc	status,0,c
  8754  0113B8  D002               	goto	u10350
  8755  0113BA  0E01               	movlw	1
  8756  0113BC  D001               	goto	u10360
  8757  0113BE                     u10350:
  8758  0113BE  0E00               	movlw	0
  8759  0113C0                     u10360:
  8760  0113C0  6E2F               	movwf	(btemp+10)^0,c
  8761  0113C2  6A30               	clrf	(btemp+11)^0,c
  8762                           
  8763                           ;stkvar	_vfpfcnvrt$5035 @ sp[(-32)+4]
  8764  0113C4  0EE4               	movlw	-28
  8765  0113C6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8766  0113CC  0EE5               	movlw	-27
  8767  0113CE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8768                           
  8769                           ;stkvar	_vfpfcnvrt$5035 @ sp[(-32)+4]
  8770  0113D4  0EE4               	movlw	-28
  8771  0113D6  006F FF8C  F025    	movff	plusw1,btemp
  8772  0113DC  0EE5               	movlw	-27
  8773  0113DE  50E3               	movf	plusw1,w,c
  8774  0113E0  1025               	iorwf	btemp^0,w,c
  8775  0113E2  A4D8               	btfss	status,2,c
  8776  0113E4  D7BD               	goto	l10599
  8777  0113E6                     u10370:
  8778                           
  8779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  8780                           ;stkvar	_fmt @ sp[(-32)+-4]
  8781  0113E6  0EDC               	movlw	-36
  8782  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8783  0113EE  0EDD               	movlw	-35
  8784  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8785  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8786  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8787  011402                     	if	0	;tblptru may be non-zero
  8788  011402                     	endif
  8789  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8790  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  8791  011404  6EF8               	movwf	tblptru,c
  8792  011406                     	endif
  8793  011406  0008               	tblrd		*
  8794  011408  50F5               	movf	tablat,w,c
  8795  01140A  0A2E               	xorlw	46
  8796  01140C  A4D8               	btfss	status,2,c
  8797  01140E  D0AC               	goto	u10420
  8798                           
  8799                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  8800  011410  6A0C               	clrf	_prec^0,c
  8801  011412  6A0D               	clrf	(_prec+1)^0,c
  8802                           
  8803                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  8804                           ;stkvar	_fmt @ sp[(-32)+-4]
  8805  011414  0EDC               	movlw	-36
  8806  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  8807  01141C  0EDD               	movlw	-35
  8808  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8809  011424  2ADE               	incf	postinc2,f,c
  8810  011426  0E00               	movlw	0
  8811  011428  22DD               	addwfc	postdec2,f,c
  8812                           
  8813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  8814                           ;stkvar	_fmt @ sp[(-32)+-4]
  8815  01142A  0EDC               	movlw	-36
  8816  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8817  011432  0EDD               	movlw	-35
  8818  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  8819  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8820  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  8821  011446                     	if	0	;tblptru may be non-zero
  8822  011446                     	endif
  8823  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8824  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  8825  011448  6EF8               	movwf	tblptru,c
  8826  01144A                     	endif
  8827  01144A  0008               	tblrd		*
  8828  01144C  50F5               	movf	tablat,w,c
  8829  01144E  0A2A               	xorlw	42
  8830  011450  A4D8               	btfss	status,2,c
  8831  011452  D02A               	goto	l10619
  8832                           
  8833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  8834                           ;stkvar	_fmt @ sp[(-32)+-4]
  8835  011454  0EDC               	movlw	-36
  8836  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  8837  01145C  0EDD               	movlw	-35
  8838  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8839  011464  2ADE               	incf	postinc2,f,c
  8840  011466  0E00               	movlw	0
  8841  011468  22DD               	addwfc	postdec2,f,c
  8842                           
  8843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  8844                           ;stkvar	_ap @ sp[(-32)+-6]
  8845  01146A  0EDA               	movlw	-38
  8846  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8847  011472  0EDB               	movlw	-37
  8848  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  8849  01147A  0E02               	movlw	2
  8850  01147C  5EDE               	subwf	postinc2,f,c
  8851  01147E  0E00               	movlw	0
  8852  011480  5ADD               	subwfb	postdec2,f,c
  8853  011482  006F FF78  F02F    	movff	postinc2,btemp+10
  8854  011488  006F FF74  F030    	movff	postdec2,btemp+11
  8855  01148E  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  8856  011494  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  8857  01149A  006F FF78  F00C    	movff	postinc2,_prec
  8858  0114A0  006F FF74  F00D    	movff	postdec2,_prec+1
  8859                           
  8860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  8861  0114A6  D060               	goto	u10420
  8862  0114A8                     l10619:
  8863                           
  8864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  8865                           ;stkvar	_fmt @ sp[(-32)+-4]
  8866  0114A8  0EDC               	movlw	-36
  8867  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8868  0114B0  0EDD               	movlw	-35
  8869  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8870  0114B8  006F FF78  F02F    	movff	postinc2,btemp+10
  8871  0114BE  006F FF74  F030    	movff	postdec2,btemp+11
  8872  0114C4  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  8873  0114CA  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  8874  0114D0  EC22  F0AD         	call	_atoi	;wreg free
  8875  0114D4  0060  F094  F00C   	movff	btemp,_prec
  8876  0114DA  0060  F098  F00D   	movff	btemp+1,_prec+1
  8877                           
  8878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8879  0114E0  D00B               	goto	l10623
  8880  0114E2                     l10621:
  8881                           
  8882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  8883                           ;stkvar	_fmt @ sp[(-32)+-4]
  8884  0114E2  0EDC               	movlw	-36
  8885  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8886  0114EA  0EDD               	movlw	-35
  8887  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8888  0114F2  2ADE               	incf	postinc2,f,c
  8889  0114F4  0E00               	movlw	0
  8890  0114F6  22DD               	addwfc	postdec2,f,c
  8891  0114F8                     l10623:
  8892  0114F8  0ED0               	movlw	208
  8893  0114FA  6E2F               	movwf	(btemp+10)^0,c
  8894  0114FC  0EFF               	movlw	255
  8895  0114FE  6E30               	movwf	(btemp+11)^0,c
  8896                           
  8897                           ;stkvar	_fmt @ sp[(-32)+-4]
  8898  011500  0EDC               	movlw	-36
  8899  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  8900  011508  0EDD               	movlw	-35
  8901  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8902  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  8903  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  8904  01151C                     	if	0	;tblptru may be non-zero
  8905  01151C                     	endif
  8906  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8907  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  8908  01151E  6EF8               	movwf	tblptru,c
  8909  011520                     	endif
  8910  011520  0008               	tblrd		*
  8911  011522  50F5               	movf	tablat,w,c
  8912  011524  6E2D               	movwf	(btemp+8)^0,c
  8913  011526  6A2E               	clrf	(btemp+9)^0,c
  8914  011528  502F               	movf	(btemp+10)^0,w,c
  8915  01152A  262D               	addwf	(btemp+8)^0,f,c
  8916  01152C  5030               	movf	(btemp+11)^0,w,c
  8917  01152E  222E               	addwfc	(btemp+9)^0,f,c
  8918  011530  502E               	movf	(btemp+9)^0,w,c
  8919  011532  E106               	bnz	u10400
  8920  011534  0E0A               	movlw	10
  8921  011536  5C2D               	subwf	(btemp+8)^0,w,c
  8922  011538  B0D8               	btfsc	status,0,c
  8923  01153A  D002               	goto	u10400
  8924  01153C  0E01               	movlw	1
  8925  01153E  D001               	goto	u10410
  8926  011540                     u10400:
  8927  011540  0E00               	movlw	0
  8928  011542                     u10410:
  8929  011542  6E2F               	movwf	(btemp+10)^0,c
  8930  011544  6A30               	clrf	(btemp+11)^0,c
  8931                           
  8932                           ;stkvar	_vfpfcnvrt$5036 @ sp[(-32)+0]
  8933  011546  0EE0               	movlw	-32
  8934  011548  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8935  01154E  0EE1               	movlw	-31
  8936  011550  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8937                           
  8938                           ;stkvar	_vfpfcnvrt$5036 @ sp[(-32)+0]
  8939  011556  0EE0               	movlw	-32
  8940  011558  006F FF8C  F025    	movff	plusw1,btemp
  8941  01155E  0EE1               	movlw	-31
  8942  011560  50E3               	movf	plusw1,w,c
  8943  011562  1025               	iorwf	btemp^0,w,c
  8944  011564  A4D8               	btfss	status,2,c
  8945  011566  D7BD               	goto	l10621
  8946  011568                     u10420:
  8947                           
  8948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  8949                           ;stkvar	_fmt @ sp[(-32)+-4]
  8950  011568  0EDC               	movlw	-36
  8951  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8952  011570  0EDD               	movlw	-35
  8953  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  8954  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  8955  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  8956  011584                     	if	0	;tblptru may be non-zero
  8957  011584                     	endif
  8958  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8959  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  8960  011586  6EF8               	movwf	tblptru,c
  8961  011588                     	endif
  8962  011588  0008               	tblrd		*
  8963  01158A  50F5               	movf	tablat,w,c
  8964  01158C  6EE6               	movwf	postinc1,c
  8965  01158E  0E00               	movlw	0
  8966  011590  6EE6               	movwf	postinc1,c
  8967  011592  ECBF  F0C0         	call	_tolower	;wreg free
  8968                           
  8969                           ;stkvar	_ct @ sp[(-32)+26]
  8970  011596  0EFA               	movlw	-6
  8971  011598  0060  F097  FFE3   	movff	btemp,plusw1
  8972                           
  8973                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  8974                           ;stkvar	_ct @ sp[(-32)+26]
  8975  01159E  0EFA               	movlw	-6
  8976  0115A0  50E3               	movf	plusw1,w,c
  8977  0115A2  B4D8               	btfsc	status,2,c
  8978  0115A4  D05B               	goto	l10639
  8979                           
  8980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  8981                           ;stkvar	_ct @ sp[(-32)+26]
  8982  0115A6  0EFB               	movlw	251
  8983  0115A8  24E1               	addwf	fsr1l,w,c
  8984  0115AA  6ED9               	movwf	fsr2l,c
  8985  0115AC  0EFF               	movlw	255
  8986  0115AE  20E2               	addwfc	fsr1h,w,c
  8987  0115B0  6EDA               	movwf	fsr2h,c
  8988                           
  8989                           ;stkvar	_fmt @ sp[(-32)+-4]
  8990  0115B2  0EDC               	movlw	-36
  8991  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  8992  0115BA  0EDD               	movlw	-35
  8993  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  8994  0115C2  006F FFB8  F02F    	movff	postinc0,btemp+10
  8995  0115C8  006F FFB4  F030    	movff	postdec0,btemp+11
  8996  0115CE  0E01               	movlw	1
  8997  0115D0  262F               	addwf	(btemp+10)^0,f,c
  8998  0115D2  0E00               	movlw	0
  8999  0115D4  2230               	addwfc	(btemp+11)^0,f,c
  9000  0115D6  0060  F0BF  FFF6   	movff	btemp+10,tblptrl
  9001  0115DC  0060  F0C3  FFF7   	movff	btemp+11,tblptrh
  9002  0115E2                     	if	0	;tblptru may be non-zero
  9003  0115E2                     	endif
  9004  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9005  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  9006  0115E4  6EF8               	movwf	tblptru,c
  9007  0115E6                     	endif
  9008  0115E6  0008               	tblrd		*
  9009  0115E8  50F5               	movf	tablat,w,c
  9010  0115EA  6EE6               	movwf	postinc1,c
  9011  0115EC  0E00               	movlw	0
  9012  0115EE  6EE6               	movwf	postinc1,c
  9013  0115F0  ECBF  F0C0         	call	_tolower	;wreg free
  9014  0115F4  5025               	movf	btemp^0,w,c
  9015  0115F6  6EDF               	movwf	indf2,c
  9016                           
  9017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  9018                           ;stkvar	_ct @ sp[(-32)+26]
  9019  0115F8  0EFB               	movlw	251
  9020  0115FA  24E1               	addwf	fsr1l,w,c
  9021  0115FC  6ED9               	movwf	fsr2l,c
  9022  0115FE  0EFF               	movlw	255
  9023  011600  20E2               	addwfc	fsr1h,w,c
  9024  011602  6EDA               	movwf	fsr2h,c
  9025  011604  50DF               	movf	indf2,w,c
  9026  011606  B4D8               	btfsc	status,2,c
  9027  011608  D029               	goto	l10639
  9028                           
  9029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  9030                           ;stkvar	_ct @ sp[(-32)+26]
  9031  01160A  0EFC               	movlw	252
  9032  01160C  24E1               	addwf	fsr1l,w,c
  9033  01160E  6ED9               	movwf	fsr2l,c
  9034  011610  0EFF               	movlw	255
  9035  011612  20E2               	addwfc	fsr1h,w,c
  9036  011614  6EDA               	movwf	fsr2h,c
  9037                           
  9038                           ;stkvar	_fmt @ sp[(-32)+-4]
  9039  011616  0EDC               	movlw	-36
  9040  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  9041  01161E  0EDD               	movlw	-35
  9042  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  9043  011626  006F FFB8  F02F    	movff	postinc0,btemp+10
  9044  01162C  006F FFB4  F030    	movff	postdec0,btemp+11
  9045  011632  0E02               	movlw	2
  9046  011634  262F               	addwf	(btemp+10)^0,f,c
  9047  011636  0E00               	movlw	0
  9048  011638  2230               	addwfc	(btemp+11)^0,f,c
  9049  01163A  0060  F0BF  FFF6   	movff	btemp+10,tblptrl
  9050  011640  0060  F0C3  FFF7   	movff	btemp+11,tblptrh
  9051  011646                     	if	0	;tblptru may be non-zero
  9052  011646                     	endif
  9053  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9054  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  9055  011648  6EF8               	movwf	tblptru,c
  9056  01164A                     	endif
  9057  01164A  0008               	tblrd		*
  9058  01164C  50F5               	movf	tablat,w,c
  9059  01164E  6EE6               	movwf	postinc1,c
  9060  011650  0E00               	movlw	0
  9061  011652  6EE6               	movwf	postinc1,c
  9062  011654  ECBF  F0C0         	call	_tolower	;wreg free
  9063  011658  5025               	movf	btemp^0,w,c
  9064  01165A  6EDF               	movwf	indf2,c
  9065  01165C                     l10639:
  9066                           
  9067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  9068                           ;stkvar	_fmt @ sp[(-32)+-4]
  9069  01165C  0EDC               	movlw	-36
  9070  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9071  011664  0EDD               	movlw	-35
  9072  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  9073  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9074  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  9075  011678                     	if	0	;tblptru may be non-zero
  9076  011678                     	endif
  9077  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9078  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  9079  01167A  6EF8               	movwf	tblptru,c
  9080  01167C                     	endif
  9081  01167C  0008               	tblrd		*
  9082  01167E  50F5               	movf	tablat,w,c
  9083  011680  0A63               	xorlw	99
  9084  011682  A4D8               	btfss	status,2,c
  9085  011684  D036               	goto	l10649
  9086                           
  9087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  9088                           ;stkvar	_fmt @ sp[(-32)+-4]
  9089  011686  0EDC               	movlw	-36
  9090  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  9091  01168E  0EDD               	movlw	-35
  9092  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  9093  011696  2ADE               	incf	postinc2,f,c
  9094  011698  0E00               	movlw	0
  9095  01169A  22DD               	addwfc	postdec2,f,c
  9096                           
  9097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9098                           ;stkvar	_ap @ sp[(-32)+-6]
  9099  01169C  0EDA               	movlw	-38
  9100  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9101  0116A4  0EDB               	movlw	-37
  9102  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9103  0116AC  0E02               	movlw	2
  9104  0116AE  5EDE               	subwf	postinc2,f,c
  9105  0116B0  0E00               	movlw	0
  9106  0116B2  5ADD               	subwfb	postdec2,f,c
  9107  0116B4  006F FF78  F02F    	movff	postinc2,btemp+10
  9108  0116BA  006F FF74  F030    	movff	postdec2,btemp+11
  9109  0116C0  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9110  0116C6  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9111  0116CC  50DF               	movf	indf2,w,c
  9112  0116CE  6E30               	movwf	(btemp+11)^0,c
  9113                           
  9114                           ;stkvar	_c @ sp[(-32)+31]
  9115  0116D0  0EFF               	movlw	-1
  9116  0116D2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9117                           
  9118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  9119                           ;stkvar	_c @ sp[(-32)+31]
  9120  0116D8  0EFF               	movlw	-1
  9121  0116DA  50E3               	movf	plusw1,w,c
  9122  0116DC  6EE6               	movwf	postinc1,c
  9123                           
  9124                           ;stkvar	_fp @ sp[(-33)+-2]
  9125  0116DE  0EDD               	movlw	-35
  9126  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  9127  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  9128  0116EC  EC39  F0C0         	call	_ctoa	;wreg free
  9129  0116F0  D343               	goto	l2197
  9130  0116F2                     l10649:
  9131                           
  9132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  9133                           ;stkvar	_fmt @ sp[(-32)+-4]
  9134  0116F2  0EDC               	movlw	-36
  9135  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  9136  0116FA  0EDD               	movlw	-35
  9137  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  9138  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  9139  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  9140  01170E                     	if	0	;tblptru may be non-zero
  9141  01170E                     	endif
  9142  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9143  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  9144  011710  6EF8               	movwf	tblptru,c
  9145  011712                     	endif
  9146  011712  0008               	tblrd		*
  9147  011714  50F5               	movf	tablat,w,c
  9148  011716  0A64               	xorlw	100
  9149  011718  B4D8               	btfsc	status,2,c
  9150  01171A  D015               	goto	u10470
  9151                           
  9152                           ;stkvar	_fmt @ sp[(-32)+-4]
  9153  01171C  0EDC               	movlw	-36
  9154  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9155  011724  0EDD               	movlw	-35
  9156  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  9157  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9158  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  9159  011738                     	if	0	;tblptru may be non-zero
  9160  011738                     	endif
  9161  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9162  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  9163  01173A  6EF8               	movwf	tblptru,c
  9164  01173C                     	endif
  9165  01173C  0008               	tblrd		*
  9166  01173E  50F5               	movf	tablat,w,c
  9167  011740  0A69               	xorlw	105
  9168  011742  A4D8               	btfss	status,2,c
  9169  011744  D075               	goto	l10661
  9170  011746                     u10470:
  9171                           
  9172                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  9173                           ;stkvar	_fmt @ sp[(-32)+-4]
  9174  011746  0EDC               	movlw	-36
  9175  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  9176  01174E  0EDD               	movlw	-35
  9177  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  9178  011756  2ADE               	incf	postinc2,f,c
  9179  011758  0E00               	movlw	0
  9180  01175A  22DD               	addwfc	postdec2,f,c
  9181                           
  9182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  9183                           ;stkvar	_ap @ sp[(-32)+-6]
  9184  01175C  0EDA               	movlw	-38
  9185  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9186  011764  0EDB               	movlw	-37
  9187  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  9188  01176C  0E02               	movlw	2
  9189  01176E  5EDE               	subwf	postinc2,f,c
  9190  011770  0E00               	movlw	0
  9191  011772  5ADD               	subwfb	postdec2,f,c
  9192  011774  006F FF78  F02F    	movff	postinc2,btemp+10
  9193  01177A  006F FF74  F030    	movff	postdec2,btemp+11
  9194  011780  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9195  011786  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9196  01178C  006F FF78  F02F    	movff	postinc2,btemp+10
  9197  011792  006F FF74  F030    	movff	postdec2,btemp+11
  9198                           
  9199                           ;stkvar	_ll @ sp[(-32)+14]
  9200  011798  0EEE               	movlw	-18
  9201  01179A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9202  0117A0  0EEF               	movlw	-17
  9203  0117A2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9204  0117A8  6A25               	clrf	btemp^0,c
  9205  0117AA  BEE3               	btfsc	plusw1,7,c
  9206  0117AC  6825               	setf	btemp^0,c
  9207  0117AE  0EF0               	movlw	-16
  9208  0117B0  0060  F097  FFE3   	movff	btemp,plusw1
  9209  0117B6  0EF1               	movlw	-15
  9210  0117B8  0060  F097  FFE3   	movff	btemp,plusw1
  9211  0117BE  0EF2               	movlw	-14
  9212  0117C0  0060  F097  FFE3   	movff	btemp,plusw1
  9213  0117C6  0EF3               	movlw	-13
  9214  0117C8  0060  F097  FFE3   	movff	btemp,plusw1
  9215  0117CE  0EF4               	movlw	-12
  9216  0117D0  0060  F097  FFE3   	movff	btemp,plusw1
  9217  0117D6  0EF5               	movlw	-11
  9218  0117D8  0060  F097  FFE3   	movff	btemp,plusw1
  9219                           
  9220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  9221                           ;stkvar	_ll @ sp[(-32)+14]
  9222  0117DE  50E1               	movf	fsr1l,w,c
  9223  0117E0  0FEE               	addlw	-18
  9224  0117E2  6ED9               	movwf	fsr2l,c
  9225  0117E4  50E2               	movf	fsr1h,w,c
  9226  0117E6  6EDA               	movwf	fsr2h,c
  9227  0117E8  0EFF               	movlw	255
  9228  0117EA  22DA               	addwfc	fsr2h,f,c
  9229  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  9230  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  9231  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  9232  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  9233  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  9234  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  9235  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  9236  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  9237                           
  9238                           ;stkvar	_fp @ sp[(-40)+-2]
  9239  01181C  0ED6               	movlw	-42
  9240  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  9241  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  9242  01182A  EC1A  F0A0         	call	_dtoa	;wreg free
  9243  01182E  D2A4               	goto	l2197
  9244  011830                     l10661:
  9245                           
  9246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  9247                           ;stkvar	_ct @ sp[(-32)+26]
  9248  011830  0EFA               	movlw	-6
  9249  011832  006F FF8C  F025    	movff	plusw1,btemp
  9250  011838  0E66               	movlw	102
  9251  01183A  1825               	xorwf	btemp^0,w,c
  9252  01183C  A4D8               	btfss	status,2,c
  9253  01183E  D06E               	goto	l10673
  9254                           
  9255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  9256                           ;stkvar	_fmt @ sp[(-32)+-4]
  9257  011840  0EDC               	movlw	-36
  9258  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  9259  011848  0EDD               	movlw	-35
  9260  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9261  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  9262  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  9263  01185C                     	if	0	;tblptru may be non-zero
  9264  01185C                     	endif
  9265  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9266  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  9267  01185E  6EF8               	movwf	tblptru,c
  9268  011860                     	endif
  9269                           
  9270                           ;stkvar	_c @ sp[(-32)+31]
  9271  011860  0008               	tblrd		*
  9272  011862  0EFF               	movlw	-1
  9273  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  9274                           
  9275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  9276                           ;stkvar	_fmt @ sp[(-32)+-4]
  9277  01186A  0EDC               	movlw	-36
  9278  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9279  011872  0EDD               	movlw	-35
  9280  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  9281  01187A  2ADE               	incf	postinc2,f,c
  9282  01187C  0E00               	movlw	0
  9283  01187E  22DD               	addwfc	postdec2,f,c
  9284                           
  9285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  9286                           ;stkvar	_ap @ sp[(-32)+-6]
  9287  011880  0EDA               	movlw	-38
  9288  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  9289  011888  0EDB               	movlw	-37
  9290  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9291  011890  0E04               	movlw	4
  9292  011892  5EDE               	subwf	postinc2,f,c
  9293  011894  0E00               	movlw	0
  9294  011896  5ADD               	subwfb	postdec2,f,c
  9295  011898  006F FF78  F02F    	movff	postinc2,btemp+10
  9296  01189E  006F FF74  F030    	movff	postdec2,btemp+11
  9297  0118A4  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9298  0118AA  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9299  0118B0  006F FF78  F02D    	movff	postinc2,btemp+8
  9300  0118B6  006F FF78  F02E    	movff	postinc2,btemp+9
  9301  0118BC  006F FF78  F02F    	movff	postinc2,btemp+10
  9302  0118C2  006F FF78  F030    	movff	postinc2,btemp+11
  9303                           
  9304                           ;stkvar	_f @ sp[(-32)+22]
  9305  0118C8  0EF6               	movlw	-10
  9306  0118CA  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  9307  0118D0  0EF7               	movlw	-9
  9308  0118D2  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  9309  0118D8  0EF8               	movlw	-8
  9310  0118DA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9311  0118E0  0EF9               	movlw	-7
  9312  0118E2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9313  0118E8                     l10669:
  9314                           
  9315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  9316                           ;stkvar	_c @ sp[(-32)+31]
  9317  0118E8  0EFF               	movlw	-1
  9318  0118EA  50E3               	movf	plusw1,w,c
  9319  0118EC  6EE6               	movwf	postinc1,c
  9320                           
  9321                           ;stkvar	_f @ sp[(-33)+22]
  9322  0118EE  0EF5               	movlw	-11
  9323  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  9324  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  9325  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  9326  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  9327                           
  9328                           ;stkvar	_fp @ sp[(-37)+-2]
  9329  011908  0ED9               	movlw	-39
  9330  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  9331  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  9332  011916  EC00  F080         	call	_efgtoa	;wreg free
  9333  01191A  D22E               	goto	l2197
  9334  01191C                     l10673:
  9335                           
  9336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  9337  01191C  0E02               	movlw	2
  9338  01191E  6EE6               	movwf	postinc1,c
  9339  011920  0E00               	movlw	0
  9340  011922  6EE6               	movwf	postinc1,c
  9341  011924  0EF6               	movlw	low STR_54
  9342  011926  6EE6               	movwf	postinc1,c
  9343  011928  0EFF               	movlw	high STR_54
  9344  01192A  6EE6               	movwf	postinc1,c
  9345                           
  9346                           ;stkvar	_ct @ sp[(-36)+26]
  9347  01192C  0EF6               	movlw	246
  9348  01192E  24E1               	addwf	fsr1l,w,c
  9349  011930  6E25               	movwf	btemp^0,c
  9350  011932  0EFF               	movlw	255
  9351  011934  20E2               	addwfc	fsr1h,w,c
  9352  011936  6E26               	movwf	(btemp+1)^0,c
  9353  011938  0060  F097  FFE6   	movff	btemp,postinc1
  9354  01193E  0060  F09B  FFE6   	movff	btemp+1,postinc1
  9355  011944  EC87  F0B1         	call	_strncmp	;wreg free
  9356  011948  5025               	movf	btemp^0,w,c
  9357  01194A  1026               	iorwf	(btemp+1)^0,w,c
  9358  01194C  A4D8               	btfss	status,2,c
  9359  01194E  D096               	goto	l10693
  9360                           
  9361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  9362                           ;stkvar	_fmt @ sp[(-32)+-4]
  9363  011950  0EDC               	movlw	-36
  9364  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  9365  011958  0EDD               	movlw	-35
  9366  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9367  011960  006F FF78  F02F    	movff	postinc2,btemp+10
  9368  011966  006F FF74  F030    	movff	postdec2,btemp+11
  9369  01196C  0E01               	movlw	1
  9370  01196E  262F               	addwf	(btemp+10)^0,f,c
  9371  011970  0E00               	movlw	0
  9372  011972  2230               	addwfc	(btemp+11)^0,f,c
  9373  011974  0060  F0BF  FFF6   	movff	btemp+10,tblptrl
  9374  01197A  0060  F0C3  FFF7   	movff	btemp+11,tblptrh
  9375  011980                     	if	0	;tblptru may be non-zero
  9376  011980                     	endif
  9377  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9378  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  9379  011982  6EF8               	movwf	tblptru,c
  9380  011984                     	endif
  9381                           
  9382                           ;stkvar	_c @ sp[(-32)+31]
  9383  011984  0008               	tblrd		*
  9384  011986  0EFF               	movlw	-1
  9385  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  9386  01198E  0EBF               	movlw	191
  9387  011990  6E2F               	movwf	(btemp+10)^0,c
  9388  011992  0EFF               	movlw	255
  9389  011994  6E30               	movwf	(btemp+11)^0,c
  9390                           
  9391                           ;stkvar	_fmt @ sp[(-32)+-4]
  9392  011996  0EDC               	movlw	-36
  9393  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  9394  01199E  0EDD               	movlw	-35
  9395  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9396  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9397  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9398  0119B2                     	if	0	;tblptru may be non-zero
  9399  0119B2                     	endif
  9400  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9401  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  9402  0119B4  6EF8               	movwf	tblptru,c
  9403  0119B6                     	endif
  9404  0119B6  0008               	tblrd		*
  9405  0119B8  50F5               	movf	tablat,w,c
  9406  0119BA  6E2D               	movwf	(btemp+8)^0,c
  9407  0119BC  6A2E               	clrf	(btemp+9)^0,c
  9408  0119BE  502F               	movf	(btemp+10)^0,w,c
  9409  0119C0  262D               	addwf	(btemp+8)^0,f,c
  9410  0119C2  5030               	movf	(btemp+11)^0,w,c
  9411  0119C4  222E               	addwfc	(btemp+9)^0,f,c
  9412  0119C6  502E               	movf	(btemp+9)^0,w,c
  9413  0119C8  E106               	bnz	u10500
  9414  0119CA  0E1A               	movlw	26
  9415  0119CC  5C2D               	subwf	(btemp+8)^0,w,c
  9416  0119CE  B0D8               	btfsc	status,0,c
  9417  0119D0  D002               	goto	u10500
  9418  0119D2  0E01               	movlw	1
  9419  0119D4  D001               	goto	u10510
  9420  0119D6                     u10500:
  9421  0119D6  0E00               	movlw	0
  9422  0119D8                     u10510:
  9423  0119D8  6E2F               	movwf	(btemp+10)^0,c
  9424  0119DA  6A30               	clrf	(btemp+11)^0,c
  9425                           
  9426                           ;stkvar	_vfpfcnvrt$5042 @ sp[(-32)+2]
  9427  0119DC  0EE2               	movlw	-30
  9428  0119DE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9429  0119E4  0EE3               	movlw	-29
  9430  0119E6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9431                           
  9432                           ;stkvar	_vfpfcnvrt$5042 @ sp[(-32)+2]
  9433  0119EC  0EE2               	movlw	-30
  9434  0119EE  006F FF8C  F025    	movff	plusw1,btemp
  9435  0119F4  0EE3               	movlw	-29
  9436  0119F6  50E3               	movf	plusw1,w,c
  9437  0119F8  1025               	iorwf	btemp^0,w,c
  9438                           
  9439                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  9440                           ;stkvar	_ap @ sp[(-32)+-6]
  9441                           
  9442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  9443                           
  9444                           ;stkvar	_f @ sp[(-32)+22]
  9445                           
  9446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  9447                           ;stkvar	_ap @ sp[(-32)+-6]
  9448  0119FA  0EDA               	movlw	-38
  9449  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9450  011A02  0EDB               	movlw	-37
  9451  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  9452  011A0A  0E04               	movlw	4
  9453  011A0C  5EDE               	subwf	postinc2,f,c
  9454  011A0E  0E00               	movlw	0
  9455  011A10  5ADD               	subwfb	postdec2,f,c
  9456  011A12  006F FF78  F02F    	movff	postinc2,btemp+10
  9457  011A18  006F FF74  F030    	movff	postdec2,btemp+11
  9458  011A1E  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9459  011A24  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9460  011A2A  006F FF78  F02D    	movff	postinc2,btemp+8
  9461  011A30  006F FF78  F02E    	movff	postinc2,btemp+9
  9462  011A36  006F FF78  F02F    	movff	postinc2,btemp+10
  9463  011A3C  006F FF78  F030    	movff	postinc2,btemp+11
  9464                           
  9465                           ;stkvar	_f @ sp[(-32)+22]
  9466  011A42  0EF6               	movlw	-10
  9467  011A44  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  9468  011A4A  0EF7               	movlw	-9
  9469  011A4C  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  9470  011A52  0EF8               	movlw	-8
  9471  011A54  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9472  011A5A  0EF9               	movlw	-7
  9473  011A5C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9474                           
  9475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  9476                           ;stkvar	_fmt @ sp[(-32)+-4]
  9477  011A62  0EDC               	movlw	-36
  9478  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  9479  011A6A  0EDD               	movlw	-35
  9480  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9481  011A72  0E02               	movlw	2
  9482  011A74  26DE               	addwf	postinc2,f,c
  9483  011A76  0E00               	movlw	0
  9484  011A78  22DD               	addwfc	postdec2,f,c
  9485  011A7A  D736               	goto	l10669
  9486  011A7C                     l10693:
  9487                           
  9488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  9489                           ;stkvar	_fmt @ sp[(-32)+-4]
  9490  011A7C  0EDC               	movlw	-36
  9491  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9492  011A84  0EDD               	movlw	-35
  9493  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  9494  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9495  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  9496  011A98                     	if	0	;tblptru may be non-zero
  9497  011A98                     	endif
  9498  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9499  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  9500  011A9A  6EF8               	movwf	tblptru,c
  9501  011A9C                     	endif
  9502  011A9C  0008               	tblrd		*
  9503  011A9E  50F5               	movf	tablat,w,c
  9504  011AA0  0A73               	xorlw	115
  9505  011AA2  A4D8               	btfss	status,2,c
  9506  011AA4  D042               	goto	l10703
  9507                           
  9508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  9509                           ;stkvar	_fmt @ sp[(-32)+-4]
  9510  011AA6  0EDC               	movlw	-36
  9511  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9512  011AAE  0EDD               	movlw	-35
  9513  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9514  011AB6  2ADE               	incf	postinc2,f,c
  9515  011AB8  0E00               	movlw	0
  9516  011ABA  22DD               	addwfc	postdec2,f,c
  9517                           
  9518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  9519                           ;stkvar	_ap @ sp[(-32)+-6]
  9520  011ABC  0EDA               	movlw	-38
  9521  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9522  011AC4  0EDB               	movlw	-37
  9523  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9524  011ACC  0E02               	movlw	2
  9525  011ACE  5EDE               	subwf	postinc2,f,c
  9526  011AD0  0E00               	movlw	0
  9527  011AD2  5ADD               	subwfb	postdec2,f,c
  9528  011AD4  006F FF78  F02F    	movff	postinc2,btemp+10
  9529  011ADA  006F FF74  F030    	movff	postdec2,btemp+11
  9530  011AE0  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9531  011AE6  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9532  011AEC  006F FF78  F02F    	movff	postinc2,btemp+10
  9533  011AF2  006F FF74  F030    	movff	postdec2,btemp+11
  9534                           
  9535                           ;stkvar	_cp @ sp[(-32)+29]
  9536  011AF8  0EFE               	movlw	-2
  9537  011AFA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9538  011B00  0EFD               	movlw	-3
  9539  011B02  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9540                           
  9541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  9542                           ;stkvar	_cp @ sp[(-32)+29]
  9543  011B08  0EFD               	movlw	-3
  9544  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  9545  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  9546                           
  9547                           ;stkvar	_fp @ sp[(-34)+-2]
  9548  011B16  0EDC               	movlw	-36
  9549  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  9550  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  9551  011B24  EC83  F0AA         	call	_stoa	;wreg free
  9552  011B28  D127               	goto	l2197
  9553  011B2A                     l10703:
  9554                           
  9555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  9556                           ;stkvar	_fmt @ sp[(-32)+-4]
  9557  011B2A  0EDC               	movlw	-36
  9558  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9559  011B32  0EDD               	movlw	-35
  9560  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  9561  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  9562  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  9563  011B46                     	if	0	;tblptru may be non-zero
  9564  011B46                     	endif
  9565  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9566  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  9567  011B48  6EF8               	movwf	tblptru,c
  9568  011B4A                     	endif
  9569  011B4A  0008               	tblrd		*
  9570  011B4C  50F5               	movf	tablat,w,c
  9571  011B4E  0A78               	xorlw	120
  9572  011B50  B4D8               	btfsc	status,2,c
  9573  011B52  D015               	goto	u10550
  9574                           
  9575                           ;stkvar	_fmt @ sp[(-32)+-4]
  9576  011B54  0EDC               	movlw	-36
  9577  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  9578  011B5C  0EDD               	movlw	-35
  9579  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9580  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  9581  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  9582  011B70                     	if	0	;tblptru may be non-zero
  9583  011B70                     	endif
  9584  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9585  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  9586  011B72  6EF8               	movwf	tblptru,c
  9587  011B74                     	endif
  9588  011B74  0008               	tblrd		*
  9589  011B76  50F5               	movf	tablat,w,c
  9590  011B78  0A58               	xorlw	88
  9591  011B7A  A4D8               	btfss	status,2,c
  9592  011B7C  D094               	goto	l10717
  9593  011B7E                     u10550:
  9594                           
  9595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  9596                           ;stkvar	_fmt @ sp[(-32)+-4]
  9597  011B7E  0EDC               	movlw	-36
  9598  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  9599  011B86  0EDD               	movlw	-35
  9600  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  9601  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  9602  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  9603  011B9A                     	if	0	;tblptru may be non-zero
  9604  011B9A                     	endif
  9605  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9606  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  9607  011B9C  6EF8               	movwf	tblptru,c
  9608  011B9E                     	endif
  9609                           
  9610                           ;stkvar	_c @ sp[(-32)+31]
  9611  011B9E  0008               	tblrd		*
  9612  011BA0  0EFF               	movlw	-1
  9613  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  9614                           
  9615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  9616                           ;stkvar	_fmt @ sp[(-32)+-4]
  9617  011BA8  0EDC               	movlw	-36
  9618  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  9619  011BB0  0EDD               	movlw	-35
  9620  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  9621  011BB8  2ADE               	incf	postinc2,f,c
  9622  011BBA  0E00               	movlw	0
  9623  011BBC  22DD               	addwfc	postdec2,f,c
  9624                           
  9625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  9626                           ;stkvar	_ap @ sp[(-32)+-6]
  9627  011BBE  0EDA               	movlw	-38
  9628  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  9629  011BC6  0EDB               	movlw	-37
  9630  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  9631  011BCE  0E02               	movlw	2
  9632  011BD0  5EDE               	subwf	postinc2,f,c
  9633  011BD2  0E00               	movlw	0
  9634  011BD4  5ADD               	subwfb	postdec2,f,c
  9635  011BD6  006F FF78  F02F    	movff	postinc2,btemp+10
  9636  011BDC  006F FF74  F030    	movff	postdec2,btemp+11
  9637  011BE2  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9638  011BE8  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9639  011BEE  006F FF78  F02F    	movff	postinc2,btemp+10
  9640  011BF4  006F FF74  F030    	movff	postdec2,btemp+11
  9641  011BFA  502F               	movf	(btemp+10)^0,w,c
  9642  011BFC  6E35               	movwf	(btemp+16)^0,c
  9643  011BFE  5030               	movf	(btemp+11)^0,w,c
  9644  011C00  6E36               	movwf	(btemp+17)^0,c
  9645  011C02  6A37               	clrf	(btemp+18)^0,c
  9646  011C04  6A38               	clrf	(btemp+19)^0,c
  9647  011C06  6A39               	clrf	(btemp+20)^0,c
  9648  011C08  6A3A               	clrf	(btemp+21)^0,c
  9649  011C0A  6A3B               	clrf	(btemp+22)^0,c
  9650  011C0C  6A3C               	clrf	(btemp+23)^0,c
  9651                           
  9652                           ;stkvar	_llu @ sp[(-32)+6]
  9653  011C0E  0EE6               	movlw	-26
  9654  011C10  0060  F0D7  FFE3   	movff	btemp+16,plusw1
  9655  011C16  0EE7               	movlw	-25
  9656  011C18  0060  F0DB  FFE3   	movff	btemp+17,plusw1
  9657  011C1E  0EE8               	movlw	-24
  9658  011C20  0060  F0DF  FFE3   	movff	btemp+18,plusw1
  9659  011C26  0EE9               	movlw	-23
  9660  011C28  0060  F0E3  FFE3   	movff	btemp+19,plusw1
  9661  011C2E  0EEA               	movlw	-22
  9662  011C30  0060  F0E7  FFE3   	movff	btemp+20,plusw1
  9663  011C36  0EEB               	movlw	-21
  9664  011C38  0060  F0EB  FFE3   	movff	btemp+21,plusw1
  9665  011C3E  0EEC               	movlw	-20
  9666  011C40  0060  F0EF  FFE3   	movff	btemp+22,plusw1
  9667  011C46  0EED               	movlw	-19
  9668  011C48  0060  F0F3  FFE3   	movff	btemp+23,plusw1
  9669                           
  9670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  9671                           ;stkvar	_c @ sp[(-32)+31]
  9672  011C4E  0EFF               	movlw	-1
  9673  011C50  50E3               	movf	plusw1,w,c
  9674  011C52  6EE6               	movwf	postinc1,c
  9675                           
  9676                           ;stkvar	_llu @ sp[(-33)+6]
  9677  011C54  50E1               	movf	fsr1l,w,c
  9678  011C56  0FE5               	addlw	-27
  9679  011C58  6ED9               	movwf	fsr2l,c
  9680  011C5A  50E2               	movf	fsr1h,w,c
  9681  011C5C  6EDA               	movwf	fsr2h,c
  9682  011C5E  0EFF               	movlw	255
  9683  011C60  22DA               	addwfc	fsr2h,f,c
  9684  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  9685  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  9686  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  9687  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  9688  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  9689  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  9690  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  9691  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  9692                           
  9693                           ;stkvar	_fp @ sp[(-41)+-2]
  9694  011C92  0ED5               	movlw	-43
  9695  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  9696  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  9697  011CA0  EC5A  F0A2         	call	_xtoa	;wreg free
  9698  011CA4  D069               	goto	l2197
  9699  011CA6                     l10717:
  9700                           
  9701                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  9702                           ;stkvar	_fmt @ sp[(-32)+-4]
  9703  011CA6  0EDC               	movlw	-36
  9704  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9705  011CAE  0EDD               	movlw	-35
  9706  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9707  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9708  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9709  011CC2                     	if	0	;tblptru may be non-zero
  9710  011CC2                     	endif
  9711  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9712  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  9713  011CC4  6EF8               	movwf	tblptru,c
  9714  011CC6                     	endif
  9715  011CC6  0008               	tblrd		*
  9716  011CC8  50F5               	movf	tablat,w,c
  9717  011CCA  0A25               	xorlw	37
  9718  011CCC  A4D8               	btfss	status,2,c
  9719  011CCE  D01A               	goto	l10727
  9720                           
  9721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  9722                           ;stkvar	_fmt @ sp[(-32)+-4]
  9723  011CD0  0EDC               	movlw	-36
  9724  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  9725  011CD8  0EDD               	movlw	-35
  9726  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  9727  011CE0  2ADE               	incf	postinc2,f,c
  9728  011CE2  0E00               	movlw	0
  9729  011CE4  22DD               	addwfc	postdec2,f,c
  9730                           
  9731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  9732                           ;stkvar	_fp @ sp[(-32)+-2]
  9733  011CE6  0EDE               	movlw	-34
  9734  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  9735  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  9736  011CF4  0E25               	movlw	37
  9737  011CF6  6EE6               	movwf	postinc1,c
  9738  011CF8  0E00               	movlw	0
  9739  011CFA  6EE6               	movwf	postinc1,c
  9740  011CFC  EC52  F0B7         	call	_fputc	;wreg free
  9741  011D00                     l10723:
  9742                           
  9743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  9744  011D00  0E01               	movlw	1
  9745  011D02  D00C               	goto	L7
  9746  011D04                     l10727:
  9747                           
  9748                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  9749                           ;stkvar	_fmt @ sp[(-32)+-4]
  9750  011D04  0EDC               	movlw	-36
  9751  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  9752  011D0C  0EDD               	movlw	-35
  9753  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9754  011D14  2ADE               	incf	postinc2,f,c
  9755  011D16  0E00               	movlw	0
  9756  011D18  22DD               	addwfc	postdec2,f,c
  9757                           
  9758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  9759  011D1A  0E00               	movlw	0
  9760  011D1C                     L7:
  9761  011D1C  6E25               	movwf	btemp^0,c
  9762  011D1E  0E00               	movlw	0
  9763  011D20  6E26               	movwf	(btemp+1)^0,c
  9764  011D22  D02A               	goto	l2197
  9765  011D24                     l10733:
  9766                           
  9767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  9768                           ;stkvar	_fp @ sp[(-32)+-2]
  9769  011D24  0EDE               	movlw	-34
  9770  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  9771  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  9772                           
  9773                           ;stkvar	_fmt @ sp[(-34)+-4]
  9774  011D32  0EDA               	movlw	-38
  9775  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  9776  011D3A  0EDB               	movlw	-37
  9777  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9778  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  9779  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  9780  011D4E                     	if	0	;tblptru may be non-zero
  9781  011D4E                     	endif
  9782  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9783  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  9784  011D50  6EF8               	movwf	tblptru,c
  9785  011D52                     	endif
  9786  011D52  0008               	tblrd		*
  9787  011D54  50F5               	movf	tablat,w,c
  9788  011D56  6EE6               	movwf	postinc1,c
  9789  011D58  0E00               	movlw	0
  9790  011D5A  6EE6               	movwf	postinc1,c
  9791  011D5C  EC52  F0B7         	call	_fputc	;wreg free
  9792                           
  9793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  9794                           ;stkvar	_fmt @ sp[(-32)+-4]
  9795  011D60  0EDC               	movlw	-36
  9796  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  9797  011D68  0EDD               	movlw	-35
  9798  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9799  011D70  2ADE               	incf	postinc2,f,c
  9800  011D72  0E00               	movlw	0
  9801  011D74  22DD               	addwfc	postdec2,f,c
  9802  011D76  D7C4               	goto	l10723
  9803  011D78                     l2197:
  9804                           
  9805                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  9806  011D78  0EDA               	movlw	218
  9807  011D7A  26E1               	addwf	fsr1l,f,c
  9808  011D7C  0EFF               	movlw	255
  9809  011D7E  22E2               	addwfc	fsr1h,f,c
  9810  011D80  0012               	return		;funcret
  9811  011D82                     __end_of_vfpfcnvrt:
  9812                           	opt callstack 0
  9813                           
  9814 ;; *************** function _xtoa *****************
  9815 ;; Defined at:
  9816 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9817 ;; Parameters:    Size  Location     Type
  9818 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9819 ;;		 -> f(6), NULL(0), 
  9820 ;;  d               8  [STACK] unsigned long long 
  9821 ;;  x               1  [STACK] unsigned char 
  9822 ;; Auto vars:     Size  Location     Type
  9823 ;;  n               8  [STACK] unsigned long long 
  9824 ;;  c               2  [STACK] int 
  9825 ;;  i               2  [STACK] int 
  9826 ;;  w               2  [STACK] int 
  9827 ;;  p               2  [STACK] int 
  9828 ;; Return value:  Size  Location     Type
  9829 ;;                  2  [STACK] int 
  9830 ;; Registers used:
  9831 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9832 ;; Tracked objects:
  9833 ;;		On entry : 0/0
  9834 ;;		On exit  : 0/0
  9835 ;;		Unchanged: 0/0
  9836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9841 ;;Total ram usage:        0 bytes
  9842 ;; Hardware stack levels used:    1
  9843 ;; Hardware stack levels required when called:   12
  9844 ;; This function calls:
  9845 ;;		_isalpha
  9846 ;;		_isupper
  9847 ;;		_pad
  9848 ;;		_toupper
  9849 ;; This function is called by:
  9850 ;;		_vfpfcnvrt
  9851 ;; This function uses a reentrant model
  9852 ;;
  9853                           
  9854                           	psect	text42
  9855  0144B4                     __ptext42:
  9856                           	opt callstack 0
  9857  0144B4                     _xtoa:
  9858                           	opt callstack 0
  9859                           
  9860                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  9861  0144B4  0E14               	movlw	20
  9862  0144B6  26E1               	addwf	fsr1l,f,c
  9863  0144B8  0E00               	movlw	0
  9864  0144BA  22E2               	addwfc	fsr1h,f,c
  9865                           
  9866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  9867                           
  9868                           ;incstack = 0
  9869  0144BC  AE0D               	btfss	(_prec+1)^0,7,c
  9870                           
  9871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  9872  0144BE  920E               	bcf	_flags^0,1,c
  9873                           
  9874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  9875  0144C0  BE0D               	btfsc	(_prec+1)^0,7,c
  9876  0144C2  D005               	goto	u10150
  9877  0144C4  500D               	movf	(_prec+1)^0,w,c
  9878  0144C6  E110               	bnz	l10515
  9879  0144C8  040C               	decf	_prec^0,w,c
  9880  0144CA  B0D8               	btfsc	status,0,c
  9881  0144CC  D00D               	goto	l10515
  9882  0144CE                     u10150:
  9883  0144CE  0E01               	movlw	1
  9884  0144D0  6E2F               	movwf	(btemp+10)^0,c
  9885  0144D2  0E00               	movlw	0
  9886  0144D4  6E30               	movwf	(btemp+11)^0,c
  9887                           
  9888                           ;stkvar	_p @ sp[(-20)+18]
  9889  0144D6  0EFE               	movlw	-2
  9890  0144D8  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9891  0144DE  0EFF               	movlw	-1
  9892  0144E0  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9893  0144E6  D008               	goto	l2147
  9894  0144E8                     l10515:
  9895                           
  9896                           ;stkvar	_p @ sp[(-20)+18]
  9897  0144E8  0EFE               	movlw	-2
  9898  0144EA  0060  F033  FFE3   	movff	_prec,plusw1
  9899  0144F0  0EFF               	movlw	-1
  9900  0144F2  0060  F037  FFE3   	movff	_prec+1,plusw1
  9901  0144F8                     l2147:
  9902                           
  9903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  9904                           ;stkvar	_w @ sp[(-20)+16]
  9905  0144F8  0EFC               	movlw	-4
  9906  0144FA  0060  F02B  FFE3   	movff	_width,plusw1
  9907  014500  0EFD               	movlw	-3
  9908  014502  0060  F02F  FFE3   	movff	_width+1,plusw1
  9909                           
  9910                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  9911  014508  A80E               	btfss	_flags^0,4,c
  9912  01450A  D00B               	goto	l10521
  9913                           
  9914                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  9915                           ;stkvar	_w @ sp[(-20)+16]
  9916  01450C  50E1               	movf	fsr1l,w,c
  9917  01450E  0FFC               	addlw	-4
  9918  014510  6ED9               	movwf	fsr2l,c
  9919  014512  50E2               	movf	fsr1h,w,c
  9920  014514  6EDA               	movwf	fsr2h,c
  9921  014516  0EFF               	movlw	255
  9922  014518  22DA               	addwfc	fsr2h,f,c
  9923  01451A  0EFE               	movlw	254
  9924  01451C  26DE               	addwf	postinc2,f,c
  9925  01451E  0EFF               	movlw	255
  9926  014520  22DD               	addwfc	postdec2,f,c
  9927  014522                     l10521:
  9928                           
  9929                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  9930                           ;stkvar	_d @ sp[(-20)+-10]
  9931  014522  0EE2               	movlw	226
  9932  014524  24E1               	addwf	fsr1l,w,c
  9933  014526  6ED9               	movwf	fsr2l,c
  9934  014528  0EFF               	movlw	255
  9935  01452A  20E2               	addwfc	fsr1h,w,c
  9936  01452C  6EDA               	movwf	fsr2h,c
  9937                           
  9938                           ;stkvar	_n @ sp[(-20)+4]
  9939  01452E  0E08               	movlw	8
  9940  014530  6E25               	movwf	btemp^0,c
  9941  014532  0EF0               	movlw	-16
  9942  014534                     us1017999:
  9943  014534  006F FF7B FFE3     	movff	postinc2,plusw1
  9944  01453A  28E8               	incf	wreg,w,c
  9945  01453C  2E25               	decfsz	btemp^0,f,c
  9946  01453E  D7FA               	bra	us1017999
  9947                           
  9948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  9949  014540  0E4F               	movlw	79
  9950  014542  6E2F               	movwf	(btemp+10)^0,c
  9951  014544  0E00               	movlw	0
  9952  014546  6E30               	movwf	(btemp+11)^0,c
  9953                           
  9954                           ;stkvar	_i @ sp[(-20)+14]
  9955  014548  0EFA               	movlw	-6
  9956  01454A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9957  014550  0EFB               	movlw	-5
  9958  014552  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9959                           
  9960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  9961  014558  0103               	movlb	3	; () banked
  9962  01455A  6BE3               	clrf	(_dbuf+79)& (0+255),b
  9963                           
  9964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9965  01455C  D0EE               	goto	l10559
  9966  01455E                     l10527:
  9967                           
  9968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  9969                           ;stkvar	_i @ sp[(-20)+14]
  9970  01455E  50E1               	movf	fsr1l,w,c
  9971  014560  0FFA               	addlw	-6
  9972  014562  6ED9               	movwf	fsr2l,c
  9973  014564  50E2               	movf	fsr1h,w,c
  9974  014566  6EDA               	movwf	fsr2h,c
  9975  014568  0EFF               	movlw	255
  9976  01456A  22DA               	addwfc	fsr2h,f,c
  9977  01456C  06DE               	decf	postinc2,f,c
  9978  01456E  0E00               	movlw	0
  9979  014570  5ADD               	subwfb	postdec2,f,c
  9980                           
  9981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  9982                           ;stkvar	_n @ sp[(-20)+4]
  9983  014572  0EF0               	movlw	-16
  9984  014574  006F FF8C  F02F    	movff	plusw1,btemp+10
  9985  01457A  0EF1               	movlw	-15
  9986  01457C  006F FF8C  F030    	movff	plusw1,btemp+11
  9987  014582  0E0F               	movlw	15
  9988  014584  162F               	andwf	(btemp+10)^0,f,c
  9989  014586  0E00               	movlw	0
  9990  014588  1630               	andwf	(btemp+11)^0,f,c
  9991                           
  9992                           ;stkvar	_c @ sp[(-20)+12]
  9993  01458A  0EF8               	movlw	-8
  9994  01458C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9995  014592  0EF9               	movlw	-7
  9996  014594  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9997                           
  9998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  9999                           ;stkvar	_c @ sp[(-20)+12]
 10000  01459A  0EF9               	movlw	-7
 10001  01459C  BEE3               	btfsc	plusw1,7,c
 10002  01459E  D00F               	goto	l10535
 10003  0145A0  0EF9               	movlw	-7
 10004  0145A2  50E3               	movf	plusw1,w,c
 10005  0145A4  E108               	bnz	u10180
 10006  0145A6  0EF8               	movlw	-8
 10007  0145A8  006F FF8C  F025    	movff	plusw1,btemp
 10008  0145AE  0E0A               	movlw	10
 10009  0145B0  5E25               	subwf	btemp^0,f,c
 10010  0145B2  A0D8               	btfss	status,0,c
 10011  0145B4  D004               	goto	l10535
 10012  0145B6                     u10180:
 10013                           
 10014                           ;stkvar	_c @ sp[(-20)+12]
 10015  0145B6  0EF8               	movlw	-8
 10016  0145B8  50E3               	movf	plusw1,w,c
 10017  0145BA  0F57               	addlw	87
 10018  0145BC  D003               	goto	L8
 10019  0145BE                     l10535:
 10020                           
 10021                           ;stkvar	_c @ sp[(-20)+12]
 10022  0145BE  0EF8               	movlw	-8
 10023  0145C0  50E3               	movf	plusw1,w,c
 10024  0145C2  0F30               	addlw	48
 10025  0145C4                     L8:
 10026  0145C4  6E2F               	movwf	(btemp+10)^0,c
 10027  0145C6  0EF9               	movlw	-7
 10028  0145C8  006F FF8C  F030    	movff	plusw1,btemp+11
 10029  0145CE  0E00               	movlw	0
 10030  0145D0  2230               	addwfc	(btemp+11)^0,f,c
 10031                           
 10032                           ;stkvar	_c @ sp[(-20)+12]
 10033  0145D2  0EF8               	movlw	-8
 10034  0145D4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10035  0145DA  0EF9               	movlw	-7
 10036  0145DC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10037  0145E2  0EBF               	movlw	191
 10038  0145E4  6E2F               	movwf	(btemp+10)^0,c
 10039  0145E6  0EFF               	movlw	255
 10040  0145E8  6E30               	movwf	(btemp+11)^0,c
 10041                           
 10042                           ;stkvar	_x @ sp[(-20)+-11]
 10043  0145EA  0EE1               	movlw	-31
 10044  0145EC  50E3               	movf	plusw1,w,c
 10045  0145EE  6E2D               	movwf	(btemp+8)^0,c
 10046  0145F0  6A2E               	clrf	(btemp+9)^0,c
 10047  0145F2  502F               	movf	(btemp+10)^0,w,c
 10048  0145F4  262D               	addwf	(btemp+8)^0,f,c
 10049  0145F6  5030               	movf	(btemp+11)^0,w,c
 10050  0145F8  222E               	addwfc	(btemp+9)^0,f,c
 10051  0145FA  502E               	movf	(btemp+9)^0,w,c
 10052  0145FC  E106               	bnz	u10190
 10053  0145FE  0E1A               	movlw	26
 10054  014600  5C2D               	subwf	(btemp+8)^0,w,c
 10055  014602  B0D8               	btfsc	status,0,c
 10056  014604  D002               	goto	u10190
 10057  014606  0E01               	movlw	1
 10058  014608  D001               	goto	u10200
 10059  01460A                     u10190:
 10060  01460A  0E00               	movlw	0
 10061  01460C                     u10200:
 10062  01460C  6E2F               	movwf	(btemp+10)^0,c
 10063  01460E  6A30               	clrf	(btemp+11)^0,c
 10064                           
 10065                           ;stkvar	_xtoa$5020 @ sp[(-20)+2]
 10066  014610  0EEE               	movlw	-18
 10067  014612  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10068  014618  0EEF               	movlw	-17
 10069  01461A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10070                           
 10071                           ;stkvar	_xtoa$5020 @ sp[(-20)+2]
 10072  014620  0EEE               	movlw	-18
 10073  014622  006F FF8C  F025    	movff	plusw1,btemp
 10074  014628  0EEF               	movlw	-17
 10075  01462A  50E3               	movf	plusw1,w,c
 10076  01462C  1025               	iorwf	btemp^0,w,c
 10077  01462E  B4D8               	btfsc	status,2,c
 10078  014630  D041               	goto	l10551
 10079  014632  0E9F               	movlw	159
 10080  014634  6E2F               	movwf	(btemp+10)^0,c
 10081  014636  0EFF               	movlw	255
 10082  014638  6E30               	movwf	(btemp+11)^0,c
 10083                           
 10084                           ;stkvar	_c @ sp[(-20)+12]
 10085  01463A  0EF8               	movlw	-8
 10086  01463C  006F FF8C  F02D    	movff	plusw1,btemp+8
 10087  014642  0EF9               	movlw	-7
 10088  014644  006F FF8C  F02E    	movff	plusw1,btemp+9
 10089  01464A  0E20               	movlw	32
 10090  01464C  122D               	iorwf	(btemp+8)^0,f,c
 10091  01464E  0E00               	movlw	0
 10092  014650  122E               	iorwf	(btemp+9)^0,f,c
 10093  014652  502F               	movf	(btemp+10)^0,w,c
 10094  014654  262D               	addwf	(btemp+8)^0,f,c
 10095  014656  5030               	movf	(btemp+11)^0,w,c
 10096  014658  222E               	addwfc	(btemp+9)^0,f,c
 10097  01465A  502E               	movf	(btemp+9)^0,w,c
 10098  01465C  E106               	bnz	u10220
 10099  01465E  0E1A               	movlw	26
 10100  014660  5C2D               	subwf	(btemp+8)^0,w,c
 10101  014662  B0D8               	btfsc	status,0,c
 10102  014664  D002               	goto	u10220
 10103  014666  0E01               	movlw	1
 10104  014668  D001               	goto	u10230
 10105  01466A                     u10220:
 10106  01466A  0E00               	movlw	0
 10107  01466C                     u10230:
 10108  01466C  6E2F               	movwf	(btemp+10)^0,c
 10109  01466E  6A30               	clrf	(btemp+11)^0,c
 10110                           
 10111                           ;stkvar	_xtoa$5021 @ sp[(-20)+0]
 10112  014670  0EEC               	movlw	-20
 10113  014672  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10114  014678  0EED               	movlw	-19
 10115  01467A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10116                           
 10117                           ;stkvar	_xtoa$5021 @ sp[(-20)+0]
 10118  014680  0EEC               	movlw	-20
 10119  014682  006F FF8C  F025    	movff	plusw1,btemp
 10120  014688  0EED               	movlw	-19
 10121  01468A  50E3               	movf	plusw1,w,c
 10122  01468C  1025               	iorwf	btemp^0,w,c
 10123  01468E  B4D8               	btfsc	status,2,c
 10124  014690  D011               	goto	l10551
 10125                           
 10126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 10127                           ;stkvar	_c @ sp[(-20)+12]
 10128  014692  0EF8               	movlw	-8
 10129  014694  006F FF8F FFE6     	movff	plusw1,postinc1
 10130  01469A  006F FF8F FFE6     	movff	plusw1,postinc1
 10131  0146A0  EC7D  F0C0         	call	_toupper	;wreg free
 10132                           
 10133                           ;stkvar	_c @ sp[(-20)+12]
 10134  0146A4  0EF8               	movlw	-8
 10135  0146A6  0060  F097  FFE3   	movff	btemp,plusw1
 10136  0146AC  0EF9               	movlw	-7
 10137  0146AE  0060  F09B  FFE3   	movff	btemp+1,plusw1
 10138  0146B4                     l10551:
 10139                           
 10140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 10141                           ;stkvar	_c @ sp[(-20)+12]
 10142                           ;stkvar	_i @ sp[(-20)+14]
 10143  0146B4  0EFA               	movlw	-6
 10144  0146B6  006F FF8C  F02F    	movff	plusw1,btemp+10
 10145  0146BC  0EFB               	movlw	-5
 10146  0146BE  006F FF8C  F030    	movff	plusw1,btemp+11
 10147  0146C4  0E94               	movlw	low _dbuf
 10148  0146C6  242F               	addwf	(btemp+10)^0,w,c
 10149  0146C8  6ED9               	movwf	fsr2l,c
 10150  0146CA  0E03               	movlw	high _dbuf
 10151  0146CC  2030               	addwfc	(btemp+11)^0,w,c
 10152  0146CE  6EDA               	movwf	fsr2h,c
 10153  0146D0  0EF8               	movlw	-8
 10154  0146D2  006F FF8F FFDF     	movff	plusw1,indf2
 10155                           
 10156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 10157                           ;stkvar	_p @ sp[(-20)+18]
 10158  0146D8  50E1               	movf	fsr1l,w,c
 10159  0146DA  0FFE               	addlw	-2
 10160  0146DC  6ED9               	movwf	fsr2l,c
 10161  0146DE  50E2               	movf	fsr1h,w,c
 10162  0146E0  6EDA               	movwf	fsr2h,c
 10163  0146E2  0EFF               	movlw	255
 10164  0146E4  22DA               	addwfc	fsr2h,f,c
 10165  0146E6  06DE               	decf	postinc2,f,c
 10166  0146E8  0E00               	movlw	0
 10167  0146EA  5ADD               	subwfb	postdec2,f,c
 10168                           
 10169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 10170                           ;stkvar	_w @ sp[(-20)+16]
 10171  0146EC  50E1               	movf	fsr1l,w,c
 10172  0146EE  0FFC               	addlw	-4
 10173  0146F0  6ED9               	movwf	fsr2l,c
 10174  0146F2  50E2               	movf	fsr1h,w,c
 10175  0146F4  6EDA               	movwf	fsr2h,c
 10176  0146F6  0EFF               	movlw	255
 10177  0146F8  22DA               	addwfc	fsr2h,f,c
 10178  0146FA  06DE               	decf	postinc2,f,c
 10179  0146FC  0E00               	movlw	0
 10180  0146FE  5ADD               	subwfb	postdec2,f,c
 10181                           
 10182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 10183  014700  0E04               	movlw	4
 10184  014702  6E30               	movwf	(btemp+11)^0,c
 10185                           
 10186                           ;stkvar	_n @ sp[(-20)+4]
 10187  014704  50E1               	movf	fsr1l,w,c
 10188  014706  0FF0               	addlw	-16
 10189  014708  6ED9               	movwf	fsr2l,c
 10190  01470A  50E2               	movf	fsr1h,w,c
 10191  01470C  6EDA               	movwf	fsr2h,c
 10192  01470E  0EFF               	movlw	255
 10193  014710  22DA               	addwfc	fsr2h,f,c
 10194  014712  2830               	incf	(btemp+11)^0,w,c
 10195  014714  52DE               	movf	postinc2,f,c
 10196  014716  D00F               	goto	u10250
 10197  014718                     u10255:
 10198  014718  52DE               	movf	postinc2,f,c
 10199  01471A  52DE               	movf	postinc2,f,c
 10200  01471C  52DE               	movf	postinc2,f,c
 10201  01471E  52DE               	movf	postinc2,f,c
 10202  014720  52DE               	movf	postinc2,f,c
 10203  014722  52DE               	movf	postinc2,f,c
 10204  014724  90D8               	bcf	status,0,c
 10205  014726  32DD               	rrcf	postdec2,f,c
 10206  014728  32DD               	rrcf	postdec2,f,c
 10207  01472A  32DD               	rrcf	postdec2,f,c
 10208  01472C  32DD               	rrcf	postdec2,f,c
 10209  01472E  32DD               	rrcf	postdec2,f,c
 10210  014730  32DD               	rrcf	postdec2,f,c
 10211  014732  32DD               	rrcf	postdec2,f,c
 10212  014734  32DE               	rrcf	postinc2,f,c
 10213  014736                     u10250:
 10214  014736  2EE8               	decfsz	wreg,f,c
 10215  014738  D7EF               	goto	u10255
 10216  01473A                     l10559:
 10217                           
 10218                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10219                           ;stkvar	_i @ sp[(-20)+14]
 10220  01473A  0EFB               	movlw	-5
 10221  01473C  BEE3               	btfsc	plusw1,7,c
 10222  01473E  D03A               	goto	u10300
 10223  014740  0EFB               	movlw	-5
 10224  014742  50E3               	movf	plusw1,w,c
 10225  014744  E108               	bnz	u10260
 10226  014746  0EFA               	movlw	-6
 10227  014748  006F FF8C  F025    	movff	plusw1,btemp
 10228  01474E  0E02               	movlw	2
 10229  014750  5E25               	subwf	btemp^0,f,c
 10230  014752  A0D8               	btfss	status,0,c
 10231  014754  D02F               	goto	u10300
 10232  014756                     u10260:
 10233                           
 10234                           ;stkvar	_n @ sp[(-20)+4]
 10235  014756  0EF0               	movlw	-16
 10236  014758  50E3               	movf	plusw1,w,c
 10237  01475A  E115               	bnz	u10271
 10238  01475C  0EF1               	movlw	-15
 10239  01475E  50E3               	movf	plusw1,w,c
 10240  014760  E112               	bnz	u10271
 10241  014762  0EF2               	movlw	-14
 10242  014764  50E3               	movf	plusw1,w,c
 10243  014766  E10F               	bnz	u10271
 10244  014768  0EF3               	movlw	-13
 10245  01476A  50E3               	movf	plusw1,w,c
 10246  01476C  E10C               	bnz	u10271
 10247  01476E  0EF4               	movlw	-12
 10248  014770  50E3               	movf	plusw1,w,c
 10249  014772  E109               	bnz	u10271
 10250  014774  0EF5               	movlw	-11
 10251  014776  50E3               	movf	plusw1,w,c
 10252  014778  E106               	bnz	u10271
 10253  01477A  0EF6               	movlw	-10
 10254  01477C  50E3               	movf	plusw1,w,c
 10255  01477E  E103               	bnz	u10271
 10256  014780  0EF7               	movlw	-9
 10257  014782  50E3               	movf	plusw1,w,c
 10258  014784  A4D8               	btfss	status,2,c
 10259  014786                     u10271:
 10260  014786  D6EB               	goto	l10527
 10261                           
 10262                           ;stkvar	_p @ sp[(-20)+18]
 10263  014788  0EFF               	movlw	-1
 10264  01478A  BEE3               	btfsc	plusw1,7,c
 10265  01478C  D007               	goto	u10280
 10266  01478E  0EFF               	movlw	-1
 10267  014790  50E3               	movf	plusw1,w,c
 10268  014792  E103               	bnz	u10281
 10269  014794  0EFE               	movlw	-2
 10270  014796  04E3               	decf	plusw1,w,c
 10271  014798  B0D8               	btfsc	status,0,c
 10272  01479A                     u10281:
 10273  01479A  D6E1               	goto	l10527
 10274  01479C                     u10280:
 10275                           
 10276                           ;stkvar	_w @ sp[(-20)+16]
 10277  01479C  0EFD               	movlw	-3
 10278  01479E  BEE3               	btfsc	plusw1,7,c
 10279  0147A0  D009               	goto	u10300
 10280  0147A2  0EFD               	movlw	-3
 10281  0147A4  50E3               	movf	plusw1,w,c
 10282  0147A6  E104               	bnz	u10290
 10283  0147A8  0EFC               	movlw	-4
 10284  0147AA  04E3               	decf	plusw1,w,c
 10285  0147AC  A0D8               	btfss	status,0,c
 10286  0147AE  D002               	goto	u10300
 10287  0147B0                     u10290:
 10288  0147B0  B20E               	btfsc	_flags^0,1,c
 10289  0147B2  D6D5               	goto	l10527
 10290  0147B4                     u10300:
 10291                           
 10292                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 10293  0147B4  A80E               	btfss	_flags^0,4,c
 10294  0147B6  D036               	goto	l10575
 10295                           
 10296                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 10297                           ;stkvar	_i @ sp[(-20)+14]
 10298  0147B8  50E1               	movf	fsr1l,w,c
 10299  0147BA  0FFA               	addlw	-6
 10300  0147BC  6ED9               	movwf	fsr2l,c
 10301  0147BE  50E2               	movf	fsr1h,w,c
 10302  0147C0  6EDA               	movwf	fsr2h,c
 10303  0147C2  0EFF               	movlw	255
 10304  0147C4  22DA               	addwfc	fsr2h,f,c
 10305  0147C6  06DE               	decf	postinc2,f,c
 10306  0147C8  0E00               	movlw	0
 10307  0147CA  5ADD               	subwfb	postdec2,f,c
 10308                           
 10309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 10310                           ;stkvar	_x @ sp[(-20)+-11]
 10311                           ;stkvar	_i @ sp[(-20)+14]
 10312  0147CC  0EFA               	movlw	-6
 10313  0147CE  006F FF8C  F02F    	movff	plusw1,btemp+10
 10314  0147D4  0EFB               	movlw	-5
 10315  0147D6  006F FF8C  F030    	movff	plusw1,btemp+11
 10316  0147DC  0E94               	movlw	low _dbuf
 10317  0147DE  242F               	addwf	(btemp+10)^0,w,c
 10318  0147E0  6ED9               	movwf	fsr2l,c
 10319  0147E2  0E03               	movlw	high _dbuf
 10320  0147E4  2030               	addwfc	(btemp+11)^0,w,c
 10321  0147E6  6EDA               	movwf	fsr2h,c
 10322  0147E8  0EE1               	movlw	-31
 10323  0147EA  006F FF8F FFDF     	movff	plusw1,indf2
 10324                           
 10325                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 10326                           ;stkvar	_i @ sp[(-20)+14]
 10327  0147F0  50E1               	movf	fsr1l,w,c
 10328  0147F2  0FFA               	addlw	-6
 10329  0147F4  6ED9               	movwf	fsr2l,c
 10330  0147F6  50E2               	movf	fsr1h,w,c
 10331  0147F8  6EDA               	movwf	fsr2h,c
 10332  0147FA  0EFF               	movlw	255
 10333  0147FC  22DA               	addwfc	fsr2h,f,c
 10334  0147FE  06DE               	decf	postinc2,f,c
 10335  014800  0E00               	movlw	0
 10336  014802  5ADD               	subwfb	postdec2,f,c
 10337                           
 10338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 10339                           ;stkvar	_i @ sp[(-20)+14]
 10340  014804  0EFA               	movlw	-6
 10341  014806  006F FF8C  F02F    	movff	plusw1,btemp+10
 10342  01480C  0EFB               	movlw	-5
 10343  01480E  006F FF8C  F030    	movff	plusw1,btemp+11
 10344  014814  0E94               	movlw	low _dbuf
 10345  014816  242F               	addwf	(btemp+10)^0,w,c
 10346  014818  6ED9               	movwf	fsr2l,c
 10347  01481A  0E03               	movlw	high _dbuf
 10348  01481C  2030               	addwfc	(btemp+11)^0,w,c
 10349  01481E  6EDA               	movwf	fsr2h,c
 10350  014820  0E30               	movlw	48
 10351  014822  6EDF               	movwf	indf2,c
 10352  014824                     l10575:
 10353                           
 10354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 10355                           ;stkvar	_w @ sp[(-20)+16]
 10356  014824  0EFC               	movlw	-4
 10357  014826  006F FF8F FFE6     	movff	plusw1,postinc1
 10358  01482C  006F FF8F FFE6     	movff	plusw1,postinc1
 10359                           
 10360                           ;stkvar	_i @ sp[(-22)+14]
 10361  014832  0E94               	movlw	low _dbuf
 10362  014834  6E2F               	movwf	(btemp+10)^0,c
 10363  014836  0E03               	movlw	high _dbuf
 10364  014838  6E30               	movwf	(btemp+11)^0,c
 10365  01483A  0EF8               	movlw	-8
 10366  01483C  50E3               	movf	plusw1,w,c
 10367  01483E  262F               	addwf	(btemp+10)^0,f,c
 10368  014840  0EF9               	movlw	-7
 10369  014842  50E3               	movf	plusw1,w,c
 10370  014844  2230               	addwfc	(btemp+11)^0,f,c
 10371  014846  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 10372  01484C  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 10373                           
 10374                           ;stkvar	_fp @ sp[(-24)+-2]
 10375  014852  0EE6               	movlw	-26
 10376  014854  006F FF8F FFE6     	movff	plusw1,postinc1
 10377  01485A  006F FF8F FFE6     	movff	plusw1,postinc1
 10378  014860  EC70  F0B8         	call	_pad	;wreg free
 10379                           
 10380                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 10381  014864  0EE1               	movlw	225
 10382  014866  26E1               	addwf	fsr1l,f,c
 10383  014868  0EFF               	movlw	255
 10384  01486A  22E2               	addwfc	fsr1h,f,c
 10385  01486C  0012               	return		;funcret
 10386  01486E                     __end_of_xtoa:
 10387                           	opt callstack 0
 10388                           
 10389 ;; *************** function _toupper *****************
 10390 ;; Defined at:
 10391 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 10392 ;; Parameters:    Size  Location     Type
 10393 ;;  c               2  [STACK] int 
 10394 ;; Auto vars:     Size  Location     Type
 10395 ;;		None
 10396 ;; Return value:  Size  Location     Type
 10397 ;;                  2  [STACK] int 
 10398 ;; Registers used:
 10399 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 10400 ;; Tracked objects:
 10401 ;;		On entry : 0/3
 10402 ;;		On exit  : 0/0
 10403 ;;		Unchanged: 0/0
 10404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10409 ;;Total ram usage:        0 bytes
 10410 ;; Hardware stack levels used:    1
 10411 ;; Hardware stack levels required when called:    8
 10412 ;; This function calls:
 10413 ;;		_islower
 10414 ;; This function is called by:
 10415 ;;		_xtoa
 10416 ;; This function uses a reentrant model
 10417 ;;
 10418                           
 10419                           	psect	text43
 10420  0180FA                     __ptext43:
 10421                           	opt callstack 0
 10422  0180FA                     _toupper:
 10423                           	opt callstack 0
 10424                           
 10425                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10426  0180FA  52E6               	movf	postinc1,f,c
 10427  0180FC  52E6               	movf	postinc1,f,c
 10428                           
 10429                           ;stkvar	_c @ sp[(-2)+-2]
 10430                           
 10431                           ;incstack = 0
 10432  0180FE  0EFC               	movlw	-4
 10433  018100  50E3               	movf	plusw1,w,c
 10434  018102  0F9F               	addlw	159
 10435  018104  6E2F               	movwf	(btemp+10)^0,c
 10436  018106  0EFD               	movlw	-3
 10437  018108  006F FF8C  F030    	movff	plusw1,btemp+11
 10438  01810E  0EFF               	movlw	255
 10439  018110  2230               	addwfc	(btemp+11)^0,f,c
 10440  018112  5030               	movf	(btemp+11)^0,w,c
 10441  018114  E106               	bnz	u5040
 10442  018116  0E1A               	movlw	26
 10443  018118  5C2F               	subwf	(btemp+10)^0,w,c
 10444  01811A  B0D8               	btfsc	status,0,c
 10445  01811C  D002               	goto	u5040
 10446  01811E  0E01               	movlw	1
 10447  018120  D001               	goto	u5050
 10448  018122                     u5040:
 10449  018122  0E00               	movlw	0
 10450  018124                     u5050:
 10451  018124  6E2F               	movwf	(btemp+10)^0,c
 10452  018126  6A30               	clrf	(btemp+11)^0,c
 10453                           
 10454                           ;stkvar	_toupper$5681 @ sp[(-2)+0]
 10455  018128  0EFE               	movlw	-2
 10456  01812A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10457  018130  0EFF               	movlw	-1
 10458  018132  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10459                           
 10460                           ;stkvar	_toupper$5681 @ sp[(-2)+0]
 10461  018138  0EFE               	movlw	-2
 10462  01813A  006F FF8C  F025    	movff	plusw1,btemp
 10463  018140  0EFF               	movlw	-1
 10464  018142  50E3               	movf	plusw1,w,c
 10465  018144  1025               	iorwf	btemp^0,w,c
 10466  018146  B4D8               	btfsc	status,2,c
 10467  018148  D00D               	goto	l6735
 10468                           
 10469                           ;stkvar	_c @ sp[(-2)+-2]
 10470  01814A  0EFC               	movlw	-4
 10471  01814C  006F FF8C  F025    	movff	plusw1,btemp
 10472  018152  0EFD               	movlw	-3
 10473  018154  006F FF8C  F026    	movff	plusw1,btemp+1
 10474  01815A  0E5F               	movlw	95
 10475  01815C  1625               	andwf	btemp^0,f,c
 10476  01815E  0E00               	movlw	0
 10477  018160  1626               	andwf	(btemp+1)^0,f,c
 10478  018162  D008               	goto	l3080
 10479  018164                     l6735:
 10480                           
 10481                           ;stkvar	_c @ sp[(-2)+-2]
 10482  018164  0EFC               	movlw	-4
 10483  018166  006F FF8C  F025    	movff	plusw1,btemp
 10484  01816C  0EFD               	movlw	-3
 10485  01816E  006F FF8C  F026    	movff	plusw1,btemp+1
 10486  018174                     l3080:
 10487                           
 10488                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10489  018174  52E5               	movf	postdec1,f,c
 10490  018176  52E5               	movf	postdec1,f,c
 10491  018178  52E5               	movf	postdec1,f,c
 10492  01817A  52E5               	movf	postdec1,f,c
 10493  01817C  0012               	return		;funcret
 10494  01817E                     __end_of_toupper:
 10495                           	opt callstack 0
 10496                           
 10497 ;; *************** function _islower *****************
 10498 ;; Defined at:
 10499 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 10500 ;; Parameters:    Size  Location     Type
 10501 ;;  c               2  [STACK] int 
 10502 ;; Auto vars:     Size  Location     Type
 10503 ;;		None
 10504 ;; Return value:  Size  Location     Type
 10505 ;;                  2  [STACK] int 
 10506 ;; Registers used:
 10507 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 10508 ;; Tracked objects:
 10509 ;;		On entry : 0/0
 10510 ;;		On exit  : 0/0
 10511 ;;		Unchanged: 0/0
 10512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10517 ;;Total ram usage:        0 bytes
 10518 ;; Hardware stack levels used:    1
 10519 ;; Hardware stack levels required when called:    7
 10520 ;; This function calls:
 10521 ;;		Nothing
 10522 ;; This function is called by:
 10523 ;;		_toupper
 10524 ;; This function uses a reentrant model
 10525 ;;
 10526                           
 10527                           	psect	text44
 10528  018CF4                     __ptext44:
 10529                           	opt callstack 0
 10530  018CF4                     _islower:
 10531                           	opt callstack 15
 10532                           
 10533                           ;stkvar	_c @ sp[(0)+-2]
 10534                           
 10535                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10536                           ;incstack = 0
 10537  018CF4  0EFE               	movlw	-2
 10538  018CF6  50E3               	movf	plusw1,w,c
 10539  018CF8  0F9F               	addlw	159
 10540  018CFA  6E2F               	movwf	(btemp+10)^0,c
 10541  018CFC  0EFF               	movlw	-1
 10542  018CFE  006F FF8C  F030    	movff	plusw1,btemp+11
 10543  018D04  0EFF               	movlw	255
 10544  018D06  2230               	addwfc	(btemp+11)^0,f,c
 10545  018D08  5030               	movf	(btemp+11)^0,w,c
 10546  018D0A  E106               	bnz	u4730
 10547  018D0C  0E1A               	movlw	26
 10548  018D0E  5C2F               	subwf	(btemp+10)^0,w,c
 10549  018D10  B0D8               	btfsc	status,0,c
 10550  018D12  D002               	goto	u4730
 10551  018D14  0E01               	movlw	1
 10552  018D16  D001               	goto	u4740
 10553  018D18                     u4730:
 10554  018D18  0E00               	movlw	0
 10555  018D1A                     u4740:
 10556  018D1A  6E25               	movwf	btemp^0,c
 10557  018D1C  6A26               	clrf	(btemp+1)^0,c
 10558                           
 10559                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10560  018D1E  52E5               	movf	postdec1,f,c
 10561  018D20  52E5               	movf	postdec1,f,c
 10562  018D22  0012               	return		;funcret
 10563  018D24                     __end_of_islower:
 10564                           	opt callstack 0
 10565                           
 10566 ;; *************** function _isalpha *****************
 10567 ;; Defined at:
 10568 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 10569 ;; Parameters:    Size  Location     Type
 10570 ;;  c               2  [STACK] int 
 10571 ;; Auto vars:     Size  Location     Type
 10572 ;;		None
 10573 ;; Return value:  Size  Location     Type
 10574 ;;                  2  [STACK] int 
 10575 ;; Registers used:
 10576 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 10577 ;; Tracked objects:
 10578 ;;		On entry : 0/0
 10579 ;;		On exit  : 0/0
 10580 ;;		Unchanged: 0/0
 10581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10586 ;;Total ram usage:        0 bytes
 10587 ;; Hardware stack levels used:    1
 10588 ;; Hardware stack levels required when called:    7
 10589 ;; This function calls:
 10590 ;;		Nothing
 10591 ;; This function is called by:
 10592 ;;		_xtoa
 10593 ;; This function uses a reentrant model
 10594 ;;
 10595                           
 10596                           	psect	text45
 10597  0189BA                     __ptext45:
 10598                           	opt callstack 0
 10599  0189BA                     _isalpha:
 10600                           	opt callstack 16
 10601                           
 10602                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10603                           ;incstack = 0
 10604  0189BA  0E9F               	movlw	159
 10605  0189BC  6E2F               	movwf	(btemp+10)^0,c
 10606  0189BE  0EFF               	movlw	255
 10607  0189C0  6E30               	movwf	(btemp+11)^0,c
 10608                           
 10609                           ;stkvar	_c @ sp[(0)+-2]
 10610  0189C2  0EFE               	movlw	-2
 10611  0189C4  006F FF8C  F02D    	movff	plusw1,btemp+8
 10612  0189CA  0EFF               	movlw	-1
 10613  0189CC  006F FF8C  F02E    	movff	plusw1,btemp+9
 10614  0189D2  0E20               	movlw	32
 10615  0189D4  122D               	iorwf	(btemp+8)^0,f,c
 10616  0189D6  0E00               	movlw	0
 10617  0189D8  122E               	iorwf	(btemp+9)^0,f,c
 10618  0189DA  502F               	movf	(btemp+10)^0,w,c
 10619  0189DC  262D               	addwf	(btemp+8)^0,f,c
 10620  0189DE  5030               	movf	(btemp+11)^0,w,c
 10621  0189E0  222E               	addwfc	(btemp+9)^0,f,c
 10622  0189E2  502E               	movf	(btemp+9)^0,w,c
 10623  0189E4  E106               	bnz	u5020
 10624  0189E6  0E1A               	movlw	26
 10625  0189E8  5C2D               	subwf	(btemp+8)^0,w,c
 10626  0189EA  B0D8               	btfsc	status,0,c
 10627  0189EC  D002               	goto	u5020
 10628  0189EE  0E01               	movlw	1
 10629  0189F0  D001               	goto	u5030
 10630  0189F2                     u5020:
 10631  0189F2  0E00               	movlw	0
 10632  0189F4                     u5030:
 10633  0189F4  6E25               	movwf	btemp^0,c
 10634  0189F6  6A26               	clrf	(btemp+1)^0,c
 10635                           
 10636                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10637  0189F8  52E5               	movf	postdec1,f,c
 10638  0189FA  52E5               	movf	postdec1,f,c
 10639  0189FC  0012               	return		;funcret
 10640  0189FE                     __end_of_isalpha:
 10641                           	opt callstack 0
 10642                           
 10643 ;; *************** function _strncmp *****************
 10644 ;; Defined at:
 10645 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 10646 ;; Parameters:    Size  Location     Type
 10647 ;;  _l              2  [STACK] PTR const unsigned char 
 10648 ;;		 -> ct(3), 
 10649 ;;  _r              2  [STACK] PTR const unsigned char 
 10650 ;;		 -> STR_56(3), 
 10651 ;;  n               2  [STACK] unsigned int 
 10652 ;; Auto vars:     Size  Location     Type
 10653 ;;  r               2  [STACK] PTR const unsigned char 
 10654 ;;		 -> STR_56(3), 
 10655 ;;  l               2  [STACK] PTR const unsigned char 
 10656 ;;		 -> ct(3), 
 10657 ;; Return value:  Size  Location     Type
 10658 ;;                  2  [STACK] int 
 10659 ;; Registers used:
 10660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
 10661 ;; Tracked objects:
 10662 ;;		On entry : 0/0
 10663 ;;		On exit  : 0/0
 10664 ;;		Unchanged: 0/0
 10665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10670 ;;Total ram usage:        0 bytes
 10671 ;; Hardware stack levels used:    1
 10672 ;; Hardware stack levels required when called:    7
 10673 ;; This function calls:
 10674 ;;		Nothing
 10675 ;; This function is called by:
 10676 ;;		_vfpfcnvrt
 10677 ;; This function uses a reentrant model
 10678 ;;
 10679                           
 10680                           	psect	text46
 10681  01630E                     __ptext46:
 10682                           	opt callstack 0
 10683  01630E                     _strncmp:
 10684                           	opt callstack 0
 10685                           
 10686                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10687  01630E  52E6               	movf	postinc1,f,c
 10688  016310  52E6               	movf	postinc1,f,c
 10689  016312  52E6               	movf	postinc1,f,c
 10690  016314  52E6               	movf	postinc1,f,c
 10691                           
 10692                           ;stkvar	__l @ sp[(-4)+-2]
 10693                           
 10694                           ;incstack = 0
 10695  016316  0EFA               	movlw	-6
 10696  016318  006F FF8C  F02F    	movff	plusw1,btemp+10
 10697  01631E  0EFB               	movlw	-5
 10698  016320  006F FF8C  F030    	movff	plusw1,btemp+11
 10699                           
 10700                           ;stkvar	_l @ sp[(-4)+2]
 10701  016326  0EFF               	movlw	-1
 10702  016328  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10703  01632E  0EFE               	movlw	-2
 10704  016330  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10705                           
 10706                           ;stkvar	__r @ sp[(-4)+-4]
 10707  016336  0EF8               	movlw	-8
 10708  016338  006F FF8C  F02F    	movff	plusw1,btemp+10
 10709  01633E  0EF9               	movlw	-7
 10710  016340  006F FF8C  F030    	movff	plusw1,btemp+11
 10711                           
 10712                           ;stkvar	_r @ sp[(-4)+0]
 10713  016346  0EFD               	movlw	-3
 10714  016348  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10715  01634E  0EFC               	movlw	-4
 10716  016350  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10717                           
 10718                           ;stkvar	_n @ sp[(-4)+-6]
 10719  016356  0EF6               	movlw	-10
 10720  016358  006F FF8C  F025    	movff	plusw1,btemp
 10721  01635E  0E01               	movlw	1
 10722  016360  5E25               	subwf	btemp^0,f,c
 10723  016362  0EF6               	movlw	-10
 10724  016364  0060  F097  FFE3   	movff	btemp,plusw1
 10725  01636A  0EF7               	movlw	-9
 10726  01636C  006F FF8C  F025    	movff	plusw1,btemp
 10727  016372  0E00               	movlw	0
 10728  016374  5A25               	subwfb	btemp^0,f,c
 10729  016376  0EF7               	movlw	-9
 10730  016378  0060  F097  FFE3   	movff	btemp,plusw1
 10731  01637E  0EF6               	movlw	-10
 10732  016380  28E3               	incf	plusw1,w,c
 10733  016382  E13F               	bnz	l7711
 10734  016384  0EF7               	movlw	-9
 10735  016386  28E3               	incf	plusw1,w,c
 10736  016388  A4D8               	btfss	status,2,c
 10737  01638A  D03B               	goto	l7711
 10738  01638C  0E00               	movlw	0
 10739  01638E  6E25               	movwf	btemp^0,c
 10740  016390  0E00               	movlw	0
 10741  016392  6E26               	movwf	(btemp+1)^0,c
 10742  016394  D09B               	goto	l3052
 10743  016396                     l7709:
 10744                           
 10745                           ;stkvar	_l @ sp[(-4)+2]
 10746  016396  0EFE               	movlw	-2
 10747  016398  50E3               	movf	plusw1,w,c
 10748  01639A  0F01               	addlw	1
 10749  01639C  6E25               	movwf	btemp^0,c
 10750  01639E  0EFE               	movlw	-2
 10751  0163A0  0060  F097  FFE3   	movff	btemp,plusw1
 10752  0163A6  6A25               	clrf	btemp^0,c
 10753  0163A8  0EFF               	movlw	-1
 10754  0163AA  50E3               	movf	plusw1,w,c
 10755  0163AC  2025               	addwfc	btemp^0,w,c
 10756  0163AE  6E25               	movwf	btemp^0,c
 10757  0163B0  0EFF               	movlw	-1
 10758  0163B2  0060  F097  FFE3   	movff	btemp,plusw1
 10759                           
 10760                           ;stkvar	_r @ sp[(-4)+0]
 10761  0163B8  0EFC               	movlw	-4
 10762  0163BA  50E3               	movf	plusw1,w,c
 10763  0163BC  0F01               	addlw	1
 10764  0163BE  6E25               	movwf	btemp^0,c
 10765  0163C0  0EFC               	movlw	-4
 10766  0163C2  0060  F097  FFE3   	movff	btemp,plusw1
 10767  0163C8  6A25               	clrf	btemp^0,c
 10768  0163CA  0EFD               	movlw	-3
 10769  0163CC  50E3               	movf	plusw1,w,c
 10770  0163CE  2025               	addwfc	btemp^0,w,c
 10771  0163D0  6E25               	movwf	btemp^0,c
 10772  0163D2  0EFD               	movlw	-3
 10773  0163D4  0060  F097  FFE3   	movff	btemp,plusw1
 10774                           
 10775                           ;stkvar	_n @ sp[(-4)+-6]
 10776  0163DA  0EF6               	movlw	-10
 10777  0163DC  006F FF8C  F025    	movff	plusw1,btemp
 10778  0163E2  0E01               	movlw	1
 10779  0163E4  5E25               	subwf	btemp^0,f,c
 10780  0163E6  0EF6               	movlw	-10
 10781  0163E8  0060  F097  FFE3   	movff	btemp,plusw1
 10782  0163EE  0EF7               	movlw	-9
 10783  0163F0  006F FF8C  F025    	movff	plusw1,btemp
 10784  0163F6  0E00               	movlw	0
 10785  0163F8  5A25               	subwfb	btemp^0,f,c
 10786  0163FA  0EF7               	movlw	-9
 10787  0163FC  0060  F097  FFE3   	movff	btemp,plusw1
 10788  016402                     l7711:
 10789                           
 10790                           ;stkvar	_l @ sp[(-4)+2]
 10791  016402  0EFE               	movlw	-2
 10792  016404  006F FF8F FFD9     	movff	plusw1,fsr2l
 10793  01640A  0EFF               	movlw	-1
 10794  01640C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10795  016412  50DF               	movf	indf2,w,c
 10796  016414  B4D8               	btfsc	status,2,c
 10797  016416  D03B               	goto	u6930
 10798                           
 10799                           ;stkvar	_r @ sp[(-4)+0]
 10800  016418  50E1               	movf	fsr1l,w,c
 10801  01641A  0FFC               	addlw	-4
 10802  01641C  6ED9               	movwf	fsr2l,c
 10803  01641E  50E2               	movf	fsr1h,w,c
 10804  016420  6EDA               	movwf	fsr2h,c
 10805  016422  0EFF               	movlw	255
 10806  016424  22DA               	addwfc	fsr2h,f,c
 10807  016426  006F FF7B FFF6     	movff	postinc2,tblptrl
 10808  01642C  006F FF77 FFF7     	movff	postdec2,tblptrh
 10809  016432                     	if	0	;tblptru may be non-zero
 10810  016432                     	endif
 10811  016432                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10812  016432  0E00               	movlw	low (__mediumconst shr (0+16))
 10813  016434  6EF8               	movwf	tblptru,c
 10814  016436                     	endif
 10815  016436  0008               	tblrd		*
 10816  016438  50F5               	movf	tablat,w,c
 10817  01643A  0900               	iorlw	0
 10818  01643C  B4D8               	btfsc	status,2,c
 10819  01643E  D027               	goto	u6930
 10820                           
 10821                           ;stkvar	_n @ sp[(-4)+-6]
 10822  016440  0EF6               	movlw	-10
 10823  016442  006F FF8C  F025    	movff	plusw1,btemp
 10824  016448  0EF7               	movlw	-9
 10825  01644A  50E3               	movf	plusw1,w,c
 10826  01644C  1025               	iorwf	btemp^0,w,c
 10827  01644E  B4D8               	btfsc	status,2,c
 10828  016450  D01E               	goto	u6930
 10829                           
 10830                           ;stkvar	_l @ sp[(-4)+2]
 10831  016452  0EFE               	movlw	-2
 10832  016454  006F FF8F FFD9     	movff	plusw1,fsr2l
 10833  01645A  0EFF               	movlw	-1
 10834  01645C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10835  016462  50DF               	movf	indf2,w,c
 10836  016464  6E30               	movwf	(btemp+11)^0,c
 10837                           
 10838                           ;stkvar	_r @ sp[(-4)+0]
 10839  016466  50E1               	movf	fsr1l,w,c
 10840  016468  0FFC               	addlw	-4
 10841  01646A  6ED9               	movwf	fsr2l,c
 10842  01646C  50E2               	movf	fsr1h,w,c
 10843  01646E  6EDA               	movwf	fsr2h,c
 10844  016470  0EFF               	movlw	255
 10845  016472  22DA               	addwfc	fsr2h,f,c
 10846  016474  006F FF7B FFF6     	movff	postinc2,tblptrl
 10847  01647A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10848  016480                     	if	0	;tblptru may be non-zero
 10849  016480                     	endif
 10850  016480                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10851  016480  0E00               	movlw	low (__mediumconst shr (0+16))
 10852  016482  6EF8               	movwf	tblptru,c
 10853  016484                     	endif
 10854  016484  0008               	tblrd		*
 10855  016486  50F5               	movf	tablat,w,c
 10856  016488  1830               	xorwf	(btemp+11)^0,w,c
 10857  01648A  B4D8               	btfsc	status,2,c
 10858  01648C  D784               	goto	l7709
 10859  01648E                     u6930:
 10860                           
 10861                           ;stkvar	_l @ sp[(-4)+2]
 10862  01648E  0EFE               	movlw	-2
 10863  016490  006F FF8F FFD9     	movff	plusw1,fsr2l
 10864  016496  0EFF               	movlw	-1
 10865  016498  006F FF8F FFDA     	movff	plusw1,fsr2h
 10866  01649E  50DF               	movf	indf2,w,c
 10867  0164A0  6E25               	movwf	btemp^0,c
 10868  0164A2  6A26               	clrf	(btemp+1)^0,c
 10869                           
 10870                           ;stkvar	_r @ sp[(-4)+0]
 10871  0164A4  50E1               	movf	fsr1l,w,c
 10872  0164A6  0FFC               	addlw	-4
 10873  0164A8  6ED9               	movwf	fsr2l,c
 10874  0164AA  50E2               	movf	fsr1h,w,c
 10875  0164AC  6EDA               	movwf	fsr2h,c
 10876  0164AE  0EFF               	movlw	255
 10877  0164B0  22DA               	addwfc	fsr2h,f,c
 10878  0164B2  006F FF7B FFF6     	movff	postinc2,tblptrl
 10879  0164B8  006F FF77 FFF7     	movff	postdec2,tblptrh
 10880  0164BE                     	if	0	;tblptru may be non-zero
 10881  0164BE                     	endif
 10882  0164BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10883  0164BE  0E00               	movlw	low (__mediumconst shr (0+16))
 10884  0164C0  6EF8               	movwf	tblptru,c
 10885  0164C2                     	endif
 10886  0164C2  0008               	tblrd		*
 10887  0164C4  50F5               	movf	tablat,w,c
 10888  0164C6  5E25               	subwf	btemp^0,f,c
 10889  0164C8  0E00               	movlw	0
 10890  0164CA  5A26               	subwfb	(btemp+1)^0,f,c
 10891  0164CC                     l3052:
 10892                           
 10893                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 10894  0164CC  0EF6               	movlw	246
 10895  0164CE  26E1               	addwf	fsr1l,f,c
 10896  0164D0  0EFF               	movlw	255
 10897  0164D2  22E2               	addwfc	fsr1h,f,c
 10898  0164D4  0012               	return		;funcret
 10899  0164D6                     __end_of_strncmp:
 10900                           	opt callstack 0
 10901                           
 10902 ;; *************** function _stoa *****************
 10903 ;; Defined at:
 10904 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10905 ;; Parameters:    Size  Location     Type
 10906 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10907 ;;		 -> f(6), NULL(0), 
 10908 ;;  s               2  [STACK] PTR unsigned char 
 10909 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
 10910 ;;		 -> D.lcd(288), D(290), T(144), STR_7(6), 
 10911 ;;		 -> STR_3(6), V(188), 
 10912 ;; Auto vars:     Size  Location     Type
 10913 ;;  nuls            7  [STACK] unsigned char [7]
 10914 ;;  l               2  [STACK] int 
 10915 ;;  p               2  [STACK] int 
 10916 ;;  cp              2  [STACK] PTR unsigned char 
 10917 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_28(9), 
 10918 ;;		 -> STR_27(12), D.lcd(288), D(290), T(144), 
 10919 ;;		 -> STR_7(6), STR_3(6), V(188), 
 10920 ;;  w               2  [STACK] int 
 10921 ;;  i               2  [STACK] int 
 10922 ;; Return value:  Size  Location     Type
 10923 ;;                  2  [STACK] int 
 10924 ;; Registers used:
 10925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10926 ;; Tracked objects:
 10927 ;;		On entry : 0/0
 10928 ;;		On exit  : 0/0
 10929 ;;		Unchanged: 0/0
 10930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10935 ;;Total ram usage:        0 bytes
 10936 ;; Hardware stack levels used:    1
 10937 ;; Hardware stack levels required when called:   10
 10938 ;; This function calls:
 10939 ;;		_fputc
 10940 ;;		_strlen
 10941 ;; This function is called by:
 10942 ;;		_vfpfcnvrt
 10943 ;; This function uses a reentrant model
 10944 ;;
 10945                           
 10946                           	psect	text47
 10947  015506                     __ptext47:
 10948                           	opt callstack 0
 10949  015506                     _stoa:
 10950                           	opt callstack 0
 10951                           
 10952                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10953  015506  0E11               	movlw	17
 10954  015508  26E1               	addwf	fsr1l,f,c
 10955  01550A  0E00               	movlw	0
 10956  01550C  22E2               	addwfc	fsr1h,f,c
 10957                           
 10958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10959                           
 10960                           ;incstack = 0
 10961  01550E  EE20  F0EB         	lfsr	2,stoa@F1166
 10962                           
 10963                           ;stkvar	_nuls @ sp[(-17)+0]
 10964  015512  0E07               	movlw	7
 10965  015514  6E25               	movwf	btemp^0,c
 10966  015516  0EEF               	movlw	-17
 10967  015518                     us1004999:
 10968  015518  006F FF7B FFE3     	movff	postinc2,plusw1
 10969  01551E  28E8               	incf	wreg,w,c
 10970  015520  2E25               	decfsz	btemp^0,f,c
 10971  015522  D7FA               	bra	us1004999
 10972                           
 10973                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 10974                           ;stkvar	_s @ sp[(-17)+-4]
 10975  015524  0EEB               	movlw	-21
 10976  015526  006F FF8C  F02F    	movff	plusw1,btemp+10
 10977  01552C  0EEC               	movlw	-20
 10978  01552E  006F FF8C  F030    	movff	plusw1,btemp+11
 10979                           
 10980                           ;stkvar	_cp @ sp[(-17)+11]
 10981  015534  0EFB               	movlw	-5
 10982  015536  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10983  01553C  0EFA               	movlw	-6
 10984  01553E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10985                           
 10986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 10987                           ;stkvar	_cp @ sp[(-17)+11]
 10988  015544  0EFA               	movlw	-6
 10989  015546  006F FF8C  F025    	movff	plusw1,btemp
 10990  01554C  0EFB               	movlw	-5
 10991  01554E  50E3               	movf	plusw1,w,c
 10992  015550  1025               	iorwf	btemp^0,w,c
 10993  015552  A4D8               	btfss	status,2,c
 10994  015554  D00E               	goto	l10463
 10995                           
 10996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 10997                           ;stkvar	_nuls @ sp[(-17)+0]
 10998  015556  0EEF               	movlw	239
 10999  015558  24E1               	addwf	fsr1l,w,c
 11000  01555A  6E2F               	movwf	(btemp+10)^0,c
 11001  01555C  0EFF               	movlw	255
 11002  01555E  20E2               	addwfc	fsr1h,w,c
 11003  015560  6E30               	movwf	(btemp+11)^0,c
 11004                           
 11005                           ;stkvar	_cp @ sp[(-17)+11]
 11006  015562  0EFB               	movlw	-5
 11007  015564  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11008  01556A  0EFA               	movlw	-6
 11009  01556C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11010  015572                     l10463:
 11011                           
 11012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 11013                           ;stkvar	_cp @ sp[(-17)+11]
 11014  015572  0EFA               	movlw	-6
 11015  015574  006F FF8F FFE6     	movff	plusw1,postinc1
 11016  01557A  006F FF8F FFE6     	movff	plusw1,postinc1
 11017  015580  ECC2  F0BE         	call	_strlen	;wreg free
 11018                           
 11019                           ;stkvar	_l @ sp[(-17)+7]
 11020  015584  0EF6               	movlw	-10
 11021  015586  0060  F097  FFE3   	movff	btemp,plusw1
 11022  01558C  0EF7               	movlw	-9
 11023  01558E  0060  F09B  FFE3   	movff	btemp+1,plusw1
 11024                           
 11025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 11026                           ;stkvar	_p @ sp[(-17)+9]
 11027  015594  0EF8               	movlw	-8
 11028  015596  0060  F033  FFE3   	movff	_prec,plusw1
 11029  01559C  0EF9               	movlw	-7
 11030  01559E  0060  F037  FFE3   	movff	_prec+1,plusw1
 11031                           
 11032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 11033                           ;stkvar	_p @ sp[(-17)+9]
 11034  0155A4  0EF9               	movlw	-7
 11035  0155A6  BEE3               	btfsc	plusw1,7,c
 11036  0155A8  D023               	goto	l2126
 11037                           
 11038                           ;stkvar	_l @ sp[(-17)+7]
 11039                           ;stkvar	_p @ sp[(-17)+9]
 11040  0155AA  50E1               	movf	fsr1l,w,c
 11041  0155AC  0FF8               	addlw	-8
 11042  0155AE  6ED9               	movwf	fsr2l,c
 11043  0155B0  50E2               	movf	fsr1h,w,c
 11044  0155B2  6EDA               	movwf	fsr2h,c
 11045  0155B4  0EFF               	movlw	255
 11046  0155B6  22DA               	addwfc	fsr2h,f,c
 11047  0155B8  0EF6               	movlw	-10
 11048  0155BA  50E3               	movf	plusw1,w,c
 11049  0155BC  5CDE               	subwf	postinc2,w,c
 11050  0155BE  50DE               	movf	postinc2,w,c
 11051  0155C0  0A80               	xorlw	128
 11052  0155C2  6E25               	movwf	btemp^0,c
 11053  0155C4  0EF7               	movlw	-9
 11054  0155C6  50E3               	movf	plusw1,w,c
 11055  0155C8  0A80               	xorlw	128
 11056  0155CA  5825               	subwfb	btemp^0,w,c
 11057  0155CC  B0D8               	btfsc	status,0,c
 11058  0155CE  D010               	goto	l2126
 11059                           
 11060                           ;stkvar	_p @ sp[(-17)+9]
 11061                           ;stkvar	_l @ sp[(-17)+7]
 11062  0155D0  0EF8               	movlw	-8
 11063  0155D2  006F FF8C  F025    	movff	plusw1,btemp
 11064  0155D8  0EF6               	movlw	-10
 11065  0155DA  0060  F097  FFE3   	movff	btemp,plusw1
 11066  0155E0  0EF9               	movlw	-7
 11067  0155E2  006F FF8C  F025    	movff	plusw1,btemp
 11068  0155E8  0EF7               	movlw	-9
 11069  0155EA  0060  F097  FFE3   	movff	btemp,plusw1
 11070  0155F0                     l2126:
 11071                           
 11072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 11073                           ;stkvar	_l @ sp[(-17)+7]
 11074                           ;stkvar	_p @ sp[(-17)+9]
 11075  0155F0  0EF6               	movlw	-10
 11076  0155F2  006F FF8C  F025    	movff	plusw1,btemp
 11077  0155F8  0EF8               	movlw	-8
 11078  0155FA  0060  F097  FFE3   	movff	btemp,plusw1
 11079  015600  0EF7               	movlw	-9
 11080  015602  006F FF8C  F025    	movff	plusw1,btemp
 11081  015608  0EF9               	movlw	-7
 11082  01560A  0060  F097  FFE3   	movff	btemp,plusw1
 11083                           
 11084                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 11085                           ;stkvar	_w @ sp[(-17)+13]
 11086  015610  0EFC               	movlw	-4
 11087  015612  0060  F02B  FFE3   	movff	_width,plusw1
 11088  015618  0EFD               	movlw	-3
 11089  01561A  0060  F02F  FFE3   	movff	_width+1,plusw1
 11090                           
 11091                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 11092  015620  A00E               	btfss	_flags^0,0,c
 11093  015622  D01F               	goto	l10483
 11094  015624  D031               	goto	u10090
 11095  015626                     l10479:
 11096                           
 11097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 11098                           ;stkvar	_fp @ sp[(-17)+-2]
 11099  015626  0EED               	movlw	-19
 11100  015628  006F FF8F FFE6     	movff	plusw1,postinc1
 11101  01562E  006F FF8F FFE6     	movff	plusw1,postinc1
 11102  015634  0E20               	movlw	32
 11103  015636  6EE6               	movwf	postinc1,c
 11104  015638  0E00               	movlw	0
 11105  01563A  6EE6               	movwf	postinc1,c
 11106  01563C  EC52  F0B7         	call	_fputc	;wreg free
 11107                           
 11108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 11109                           ;stkvar	_l @ sp[(-17)+7]
 11110  015640  0EF6               	movlw	-10
 11111  015642  50E3               	movf	plusw1,w,c
 11112  015644  0F01               	addlw	1
 11113  015646  6E25               	movwf	btemp^0,c
 11114  015648  0EF6               	movlw	-10
 11115  01564A  0060  F097  FFE3   	movff	btemp,plusw1
 11116  015650  6A25               	clrf	btemp^0,c
 11117  015652  0EF7               	movlw	-9
 11118  015654  50E3               	movf	plusw1,w,c
 11119  015656  2025               	addwfc	btemp^0,w,c
 11120  015658  6E25               	movwf	btemp^0,c
 11121  01565A  0EF7               	movlw	-9
 11122  01565C  0060  F097  FFE3   	movff	btemp,plusw1
 11123  015662                     l10483:
 11124                           
 11125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 11126                           ;stkvar	_w @ sp[(-17)+13]
 11127                           ;stkvar	_l @ sp[(-17)+7]
 11128  015662  50E1               	movf	fsr1l,w,c
 11129  015664  0FF6               	addlw	-10
 11130  015666  6ED9               	movwf	fsr2l,c
 11131  015668  50E2               	movf	fsr1h,w,c
 11132  01566A  6EDA               	movwf	fsr2h,c
 11133  01566C  0EFF               	movlw	255
 11134  01566E  22DA               	addwfc	fsr2h,f,c
 11135  015670  0EFC               	movlw	-4
 11136  015672  50E3               	movf	plusw1,w,c
 11137  015674  5CDE               	subwf	postinc2,w,c
 11138  015676  50DE               	movf	postinc2,w,c
 11139  015678  0A80               	xorlw	128
 11140  01567A  6E25               	movwf	btemp^0,c
 11141  01567C  0EFD               	movlw	-3
 11142  01567E  50E3               	movf	plusw1,w,c
 11143  015680  0A80               	xorlw	128
 11144  015682  5825               	subwfb	btemp^0,w,c
 11145  015684  A0D8               	btfss	status,0,c
 11146  015686  D7CF               	goto	l10479
 11147  015688                     u10090:
 11148                           
 11149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 11150                           ;stkvar	_i @ sp[(-17)+15]
 11151  015688  0EFE               	movlw	-2
 11152  01568A  6AE3               	clrf	plusw1,c
 11153  01568C  0EFF               	movlw	-1
 11154  01568E  6AE3               	clrf	plusw1,c
 11155                           
 11156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11157  015690  D045               	goto	l10493
 11158  015692                     l10487:
 11159                           
 11160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 11161                           ;stkvar	_fp @ sp[(-17)+-2]
 11162  015692  0EED               	movlw	-19
 11163  015694  006F FF8F FFE6     	movff	plusw1,postinc1
 11164  01569A  006F FF8F FFE6     	movff	plusw1,postinc1
 11165                           
 11166                           ;stkvar	_cp @ sp[(-19)+11]
 11167  0156A0  0EF8               	movlw	-8
 11168  0156A2  006F FF8F FFF6     	movff	plusw1,tblptrl
 11169  0156A8  0EF9               	movlw	-7
 11170  0156AA  006F FF8F FFF7     	movff	plusw1,tblptrh
 11171  0156B0  0E00               	movlw	low (__mediumconst shr (0+16))
 11172  0156B2  6EF8               	movwf	tblptru,c
 11173  0156B4  0E1F               	movlw	(high __ramtop+-1)
 11174  0156B6  64F7               	cpfsgt	tblptrh,c
 11175  0156B8  D003               	bra	u10107
 11176  0156BA  0008               	tblrd		*
 11177  0156BC  50F5               	movf	tablat,w,c
 11178  0156BE  D007               	bra	u10100
 11179  0156C0                     u10107:
 11180  0156C0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11181  0156C6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11182  0156CC  50EF               	movf	indf0,w,c
 11183  0156CE                     u10100:
 11184  0156CE  6EE6               	movwf	postinc1,c
 11185  0156D0  0E00               	movlw	0
 11186  0156D2  6EE6               	movwf	postinc1,c
 11187  0156D4  EC52  F0B7         	call	_fputc	;wreg free
 11188                           
 11189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 11190                           ;stkvar	_cp @ sp[(-17)+11]
 11191  0156D8  0EFA               	movlw	-6
 11192  0156DA  50E3               	movf	plusw1,w,c
 11193  0156DC  0F01               	addlw	1
 11194  0156DE  6E25               	movwf	btemp^0,c
 11195  0156E0  0EFA               	movlw	-6
 11196  0156E2  0060  F097  FFE3   	movff	btemp,plusw1
 11197  0156E8  6A25               	clrf	btemp^0,c
 11198  0156EA  0EFB               	movlw	-5
 11199  0156EC  50E3               	movf	plusw1,w,c
 11200  0156EE  2025               	addwfc	btemp^0,w,c
 11201  0156F0  6E25               	movwf	btemp^0,c
 11202  0156F2  0EFB               	movlw	-5
 11203  0156F4  0060  F097  FFE3   	movff	btemp,plusw1
 11204                           
 11205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 11206                           ;stkvar	_i @ sp[(-17)+15]
 11207  0156FA  0EFE               	movlw	-2
 11208  0156FC  50E3               	movf	plusw1,w,c
 11209  0156FE  0F01               	addlw	1
 11210  015700  6E25               	movwf	btemp^0,c
 11211  015702  0EFE               	movlw	-2
 11212  015704  0060  F097  FFE3   	movff	btemp,plusw1
 11213  01570A  6A25               	clrf	btemp^0,c
 11214  01570C  0EFF               	movlw	-1
 11215  01570E  50E3               	movf	plusw1,w,c
 11216  015710  2025               	addwfc	btemp^0,w,c
 11217  015712  6E25               	movwf	btemp^0,c
 11218  015714  0EFF               	movlw	-1
 11219  015716  0060  F097  FFE3   	movff	btemp,plusw1
 11220  01571C                     l10493:
 11221                           
 11222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11223                           ;stkvar	_p @ sp[(-17)+9]
 11224                           ;stkvar	_i @ sp[(-17)+15]
 11225  01571C  50E1               	movf	fsr1l,w,c
 11226  01571E  0FFE               	addlw	-2
 11227  015720  6ED9               	movwf	fsr2l,c
 11228  015722  50E2               	movf	fsr1h,w,c
 11229  015724  6EDA               	movwf	fsr2h,c
 11230  015726  0EFF               	movlw	255
 11231  015728  22DA               	addwfc	fsr2h,f,c
 11232  01572A  0EF8               	movlw	-8
 11233  01572C  50E3               	movf	plusw1,w,c
 11234  01572E  5CDE               	subwf	postinc2,w,c
 11235  015730  50DE               	movf	postinc2,w,c
 11236  015732  0A80               	xorlw	128
 11237  015734  6E25               	movwf	btemp^0,c
 11238  015736  0EF9               	movlw	-7
 11239  015738  50E3               	movf	plusw1,w,c
 11240  01573A  0A80               	xorlw	128
 11241  01573C  5825               	subwfb	btemp^0,w,c
 11242  01573E  A0D8               	btfss	status,0,c
 11243  015740  D7A8               	goto	l10487
 11244                           
 11245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 11246  015742  B00E               	btfsc	_flags^0,0,c
 11247  015744  D01F               	goto	l10501
 11248  015746  D031               	goto	u10130
 11249  015748                     l10497:
 11250                           
 11251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 11252                           ;stkvar	_fp @ sp[(-17)+-2]
 11253  015748  0EED               	movlw	-19
 11254  01574A  006F FF8F FFE6     	movff	plusw1,postinc1
 11255  015750  006F FF8F FFE6     	movff	plusw1,postinc1
 11256  015756  0E20               	movlw	32
 11257  015758  6EE6               	movwf	postinc1,c
 11258  01575A  0E00               	movlw	0
 11259  01575C  6EE6               	movwf	postinc1,c
 11260  01575E  EC52  F0B7         	call	_fputc	;wreg free
 11261                           
 11262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 11263                           ;stkvar	_l @ sp[(-17)+7]
 11264  015762  0EF6               	movlw	-10
 11265  015764  50E3               	movf	plusw1,w,c
 11266  015766  0F01               	addlw	1
 11267  015768  6E25               	movwf	btemp^0,c
 11268  01576A  0EF6               	movlw	-10
 11269  01576C  0060  F097  FFE3   	movff	btemp,plusw1
 11270  015772  6A25               	clrf	btemp^0,c
 11271  015774  0EF7               	movlw	-9
 11272  015776  50E3               	movf	plusw1,w,c
 11273  015778  2025               	addwfc	btemp^0,w,c
 11274  01577A  6E25               	movwf	btemp^0,c
 11275  01577C  0EF7               	movlw	-9
 11276  01577E  0060  F097  FFE3   	movff	btemp,plusw1
 11277  015784                     l10501:
 11278                           
 11279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 11280                           ;stkvar	_w @ sp[(-17)+13]
 11281                           ;stkvar	_l @ sp[(-17)+7]
 11282  015784  50E1               	movf	fsr1l,w,c
 11283  015786  0FF6               	addlw	-10
 11284  015788  6ED9               	movwf	fsr2l,c
 11285  01578A  50E2               	movf	fsr1h,w,c
 11286  01578C  6EDA               	movwf	fsr2h,c
 11287  01578E  0EFF               	movlw	255
 11288  015790  22DA               	addwfc	fsr2h,f,c
 11289  015792  0EFC               	movlw	-4
 11290  015794  50E3               	movf	plusw1,w,c
 11291  015796  5CDE               	subwf	postinc2,w,c
 11292  015798  50DE               	movf	postinc2,w,c
 11293  01579A  0A80               	xorlw	128
 11294  01579C  6E25               	movwf	btemp^0,c
 11295  01579E  0EFD               	movlw	-3
 11296  0157A0  50E3               	movf	plusw1,w,c
 11297  0157A2  0A80               	xorlw	128
 11298  0157A4  5825               	subwfb	btemp^0,w,c
 11299  0157A6  A0D8               	btfss	status,0,c
 11300  0157A8  D7CF               	goto	l10497
 11301  0157AA                     u10130:
 11302                           
 11303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 11304                           ;stkvar	_l @ sp[(-17)+7]
 11305  0157AA  0EF6               	movlw	-10
 11306  0157AC  006F FF8C  F025    	movff	plusw1,btemp
 11307  0157B2  0EF7               	movlw	-9
 11308  0157B4  006F FF8C  F026    	movff	plusw1,btemp+1
 11309                           
 11310                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11311  0157BA  0EEB               	movlw	235
 11312  0157BC  26E1               	addwf	fsr1l,f,c
 11313  0157BE  0EFF               	movlw	255
 11314  0157C0  22E2               	addwfc	fsr1h,f,c
 11315  0157C2  0012               	return		;funcret
 11316  0157C4                     __end_of_stoa:
 11317                           	opt callstack 0
 11318                           
 11319 ;; *************** function _efgtoa *****************
 11320 ;; Defined at:
 11321 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11322 ;; Parameters:    Size  Location     Type
 11323 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11324 ;;		 -> f(6), NULL(0), 
 11325 ;;  f               4  [STACK] PTR struct _IO_FILE
 11326 ;;  c               1  [STACK] unsigned char 
 11327 ;; Auto vars:     Size  Location     Type
 11328 ;;  u               4  [STACK] unsigned char 
 11329 ;;  g               4  [STACK] unsigned char 
 11330 ;;  l               4  [STACK] unsigned char 
 11331 ;;  h               4  [STACK] unsigned char 
 11332 ;;  ou              4  [STACK] unsigned char 
 11333 ;;  n               2  [STACK] int 
 11334 ;;  e               2  [STACK] int 
 11335 ;;  i               2  [STACK] int 
 11336 ;;  w               2  [STACK] int 
 11337 ;;  p               2  [STACK] int 
 11338 ;;  sign            2  [STACK] int 
 11339 ;;  d               2  [STACK] int 
 11340 ;;  ne              2  [STACK] int 
 11341 ;;  m               2  [STACK] int 
 11342 ;;  pp              2  [STACK] int 
 11343 ;;  t               2  [STACK] int 
 11344 ;;  mode            1  [STACK] unsigned char 
 11345 ;;  nmode           1  [STACK] unsigned char 
 11346 ;; Return value:  Size  Location     Type
 11347 ;;                  2  [STACK] int 
 11348 ;; Registers used:
 11349 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 11350 ;; Tracked objects:
 11351 ;;		On entry : 0/0
 11352 ;;		On exit  : 0/0
 11353 ;;		Unchanged: 0/0
 11354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11359 ;;Total ram usage:        0 bytes
 11360 ;; Hardware stack levels used:    1
 11361 ;; Hardware stack levels required when called:   12
 11362 ;; This function calls:
 11363 ;;		___awdiv
 11364 ;;		___awmod
 11365 ;;		___fladd
 11366 ;;		___fldiv
 11367 ;;		___fleq
 11368 ;;		___flge
 11369 ;;		___flmul
 11370 ;;		___flneg
 11371 ;;		___flsub
 11372 ;;		___fltol
 11373 ;;		___fpclassifyf
 11374 ;;		_floorf
 11375 ;;		_isupper
 11376 ;;		_pad
 11377 ;;		_strcpy
 11378 ;;		_tolower
 11379 ;; This function is called by:
 11380 ;;		_vfpfcnvrt
 11381 ;; This function uses a reentrant model
 11382 ;;
 11383                           
 11384                           	psect	text48
 11385  010000                     __ptext48:
 11386                           	opt callstack 0
 11387  010000                     _efgtoa:
 11388                           	opt callstack 0
 11389                           
 11390                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11391  010000  0E38               	movlw	56
 11392  010002  26E1               	addwf	fsr1l,f,c
 11393  010004  0E00               	movlw	0
 11394  010006  22E2               	addwfc	fsr1h,f,c
 11395                           
 11396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 11397                           ;stkvar	_sign @ sp[(-56)+42]
 11398                           
 11399                           ;incstack = 0
 11400  010008  0EF2               	movlw	-14
 11401  01000A  6AE3               	clrf	plusw1,c
 11402  01000C  0EF3               	movlw	-13
 11403  01000E  6AE3               	clrf	plusw1,c
 11404                           
 11405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 11406                           ;stkvar	_f @ sp[(-56)+-6]
 11407  010010  0EC2               	movlw	-62
 11408  010012  006F FF8C  F02D    	movff	plusw1,btemp+8
 11409  010018  0EC3               	movlw	-61
 11410  01001A  006F FF8C  F02E    	movff	plusw1,btemp+9
 11411  010020  0EC4               	movlw	-60
 11412  010022  006F FF8C  F02F    	movff	plusw1,btemp+10
 11413  010028  0EC5               	movlw	-59
 11414  01002A  006F FF8C  F030    	movff	plusw1,btemp+11
 11415                           
 11416                           ;stkvar	_g @ sp[(-56)+16]
 11417  010030  0ED8               	movlw	-40
 11418  010032  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 11419  010038  0ED9               	movlw	-39
 11420  01003A  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 11421  010040  0EDA               	movlw	-38
 11422  010042  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11423  010048  0EDB               	movlw	-37
 11424  01004A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11425                           
 11426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 11427                           ;stkvar	_g @ sp[(-56)+16]
 11428  010050  0EDB               	movlw	-37
 11429  010052  AEE3               	btfss	plusw1,7,c
 11430  010054  D02B               	goto	l10161
 11431                           
 11432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 11433  010056  0E01               	movlw	1
 11434  010058  6E2F               	movwf	(btemp+10)^0,c
 11435  01005A  0E00               	movlw	0
 11436  01005C  6E30               	movwf	(btemp+11)^0,c
 11437                           
 11438                           ;stkvar	_sign @ sp[(-56)+42]
 11439  01005E  0EF2               	movlw	-14
 11440  010060  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11441  010066  0EF3               	movlw	-13
 11442  010068  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11443                           
 11444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 11445                           ;stkvar	_g @ sp[(-56)+16]
 11446  01006E  0ED8               	movlw	-40
 11447  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 11448  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 11449  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 11450  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 11451  010088  EC2D  F0C4         	call	___flneg	;wreg free
 11452                           
 11453                           ;stkvar	_g @ sp[(-56)+16]
 11454  01008C  0ED8               	movlw	-40
 11455  01008E  0060  F097  FFE3   	movff	btemp,plusw1
 11456  010094  0ED9               	movlw	-39
 11457  010096  0060  F09B  FFE3   	movff	btemp+1,plusw1
 11458  01009C  0EDA               	movlw	-38
 11459  01009E  0060  F09F  FFE3   	movff	btemp+2,plusw1
 11460  0100A4  0EDB               	movlw	-37
 11461  0100A6  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 11462  0100AC                     l10161:
 11463                           
 11464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 11465                           ;stkvar	_n @ sp[(-56)+32]
 11466  0100AC  0EE8               	movlw	-24
 11467  0100AE  6AE3               	clrf	plusw1,c
 11468  0100B0  0EE9               	movlw	-23
 11469  0100B2  6AE3               	clrf	plusw1,c
 11470                           
 11471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 11472                           ;stkvar	_w @ sp[(-56)+38]
 11473  0100B4  0EEE               	movlw	-18
 11474  0100B6  0060  F02B  FFE3   	movff	_width,plusw1
 11475  0100BC  0EEF               	movlw	-17
 11476  0100BE  0060  F02F  FFE3   	movff	_width+1,plusw1
 11477                           
 11478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 11479                           ;stkvar	_sign @ sp[(-56)+42]
 11480  0100C4  0EF2               	movlw	-14
 11481  0100C6  006F FF8C  F025    	movff	plusw1,btemp
 11482  0100CC  0EF3               	movlw	-13
 11483  0100CE  50E3               	movf	plusw1,w,c
 11484  0100D0  1025               	iorwf	btemp^0,w,c
 11485  0100D2  A4D8               	btfss	status,2,c
 11486  0100D4  D002               	goto	u9540
 11487  0100D6  A40E               	btfss	_flags^0,2,c
 11488  0100D8  D036               	goto	l10181
 11489  0100DA                     u9540:
 11490                           
 11491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 11492                           ;stkvar	_sign @ sp[(-56)+42]
 11493  0100DA  0EF2               	movlw	-14
 11494  0100DC  006F FF8C  F025    	movff	plusw1,btemp
 11495  0100E2  0EF3               	movlw	-13
 11496  0100E4  50E3               	movf	plusw1,w,c
 11497  0100E6  1025               	iorwf	btemp^0,w,c
 11498  0100E8  A4D8               	btfss	status,2,c
 11499  0100EA  D002               	goto	l10173
 11500  0100EC  0E2B               	movlw	43
 11501  0100EE  D001               	goto	L9
 11502  0100F0                     l10173:
 11503  0100F0  0E2D               	movlw	45
 11504  0100F2                     L9:
 11505  0100F2  6E2F               	movwf	(btemp+10)^0,c
 11506  0100F4  0E00               	movlw	0
 11507  0100F6  6E30               	movwf	(btemp+11)^0,c
 11508                           
 11509                           ;stkvar	_efgtoa$4989 @ sp[(-56)+10]
 11510  0100F8  0ED2               	movlw	-46
 11511  0100FA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11512  010100  0ED3               	movlw	-45
 11513  010102  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11514                           
 11515                           ;stkvar	_efgtoa$4989 @ sp[(-56)+10]
 11516  010108  0ED2               	movlw	-46
 11517  01010A  006F FF8C  F394    	movff	plusw1,_dbuf
 11518                           
 11519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 11520                           ;stkvar	_n @ sp[(-56)+32]
 11521  010110  0EE8               	movlw	-24
 11522  010112  50E3               	movf	plusw1,w,c
 11523  010114  0F01               	addlw	1
 11524  010116  6E25               	movwf	btemp^0,c
 11525  010118  0EE8               	movlw	-24
 11526  01011A  0060  F097  FFE3   	movff	btemp,plusw1
 11527  010120  6A25               	clrf	btemp^0,c
 11528  010122  0EE9               	movlw	-23
 11529  010124  50E3               	movf	plusw1,w,c
 11530  010126  2025               	addwfc	btemp^0,w,c
 11531  010128  6E25               	movwf	btemp^0,c
 11532  01012A  0EE9               	movlw	-23
 11533  01012C  0060  F097  FFE3   	movff	btemp,plusw1
 11534                           
 11535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 11536                           ;stkvar	_w @ sp[(-56)+38]
 11537  010132  50E1               	movf	fsr1l,w,c
 11538  010134  0FEE               	addlw	-18
 11539  010136  6ED9               	movwf	fsr2l,c
 11540  010138  50E2               	movf	fsr1h,w,c
 11541  01013A  6EDA               	movwf	fsr2h,c
 11542  01013C  0EFF               	movlw	255
 11543  01013E  22DA               	addwfc	fsr2h,f,c
 11544  010140  06DE               	decf	postinc2,f,c
 11545  010142  0E00               	movlw	0
 11546  010144  5ADD               	subwfb	postdec2,f,c
 11547  010146                     l10181:
 11548                           
 11549                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11550                           ;stkvar	_g @ sp[(-56)+16]
 11551  010146  0ED8               	movlw	-40
 11552  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 11553  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 11554  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 11555  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 11556  010160  EC4B  F0B3         	call	___fpclassifyf	;wreg free
 11557  010164  0425               	decf	btemp^0,w,c
 11558  010166  1026               	iorwf	(btemp+1)^0,w,c
 11559  010168  A4D8               	btfss	status,2,c
 11560  01016A  D076               	goto	l10199
 11561  01016C  0EBF               	movlw	191
 11562  01016E  6E2F               	movwf	(btemp+10)^0,c
 11563  010170  0EFF               	movlw	255
 11564  010172  6E30               	movwf	(btemp+11)^0,c
 11565                           
 11566                           ;stkvar	_c @ sp[(-56)+-7]
 11567  010174  0EC1               	movlw	-63
 11568  010176  50E3               	movf	plusw1,w,c
 11569  010178  6E2D               	movwf	(btemp+8)^0,c
 11570  01017A  6A2E               	clrf	(btemp+9)^0,c
 11571  01017C  502F               	movf	(btemp+10)^0,w,c
 11572  01017E  262D               	addwf	(btemp+8)^0,f,c
 11573  010180  5030               	movf	(btemp+11)^0,w,c
 11574  010182  222E               	addwfc	(btemp+9)^0,f,c
 11575  010184  502E               	movf	(btemp+9)^0,w,c
 11576  010186  E106               	bnz	u9570
 11577  010188  0E1A               	movlw	26
 11578  01018A  5C2D               	subwf	(btemp+8)^0,w,c
 11579  01018C  B0D8               	btfsc	status,0,c
 11580  01018E  D002               	goto	u9570
 11581  010190  0E01               	movlw	1
 11582  010192  D001               	goto	u9580
 11583  010194                     u9570:
 11584  010194  0E00               	movlw	0
 11585  010196                     u9580:
 11586  010196  6E2F               	movwf	(btemp+10)^0,c
 11587  010198  6A30               	clrf	(btemp+11)^0,c
 11588                           
 11589                           ;stkvar	_efgtoa$4990 @ sp[(-56)+8]
 11590  01019A  0ED0               	movlw	-48
 11591  01019C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11592  0101A2  0ED1               	movlw	-47
 11593  0101A4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11594                           
 11595                           ;stkvar	_efgtoa$4990 @ sp[(-56)+8]
 11596  0101AA  0ED0               	movlw	-48
 11597  0101AC  006F FF8C  F025    	movff	plusw1,btemp
 11598  0101B2  0ED1               	movlw	-47
 11599  0101B4  50E3               	movf	plusw1,w,c
 11600  0101B6  1025               	iorwf	btemp^0,w,c
 11601  0101B8  B4D8               	btfsc	status,2,c
 11602  0101BA  D017               	goto	l10191
 11603                           
 11604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 11605  0101BC  0EE6               	movlw	low STR_46
 11606  0101BE  6EE6               	movwf	postinc1,c
 11607  0101C0  0EFF               	movlw	high STR_46
 11608  0101C2  6EE6               	movwf	postinc1,c
 11609                           
 11610                           ;stkvar	_n @ sp[(-58)+32]
 11611  0101C4  0E94               	movlw	low _dbuf
 11612  0101C6  6E2F               	movwf	(btemp+10)^0,c
 11613  0101C8  0E03               	movlw	high _dbuf
 11614  0101CA  6E30               	movwf	(btemp+11)^0,c
 11615  0101CC  0EE6               	movlw	-26
 11616  0101CE  50E3               	movf	plusw1,w,c
 11617  0101D0  262F               	addwf	(btemp+10)^0,f,c
 11618  0101D2  0EE7               	movlw	-25
 11619  0101D4  50E3               	movf	plusw1,w,c
 11620  0101D6  2230               	addwfc	(btemp+11)^0,f,c
 11621  0101D8  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 11622  0101DE  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 11623  0101E4  EC7B  F0BB         	call	_strcpy	;wreg free
 11624                           
 11625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 11626  0101E8  D016               	goto	l10193
 11627  0101EA                     l10191:
 11628                           
 11629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 11630  0101EA  0EEE               	movlw	low STR_47
 11631  0101EC  6EE6               	movwf	postinc1,c
 11632  0101EE  0EFF               	movlw	high STR_47
 11633  0101F0  6EE6               	movwf	postinc1,c
 11634                           
 11635                           ;stkvar	_n @ sp[(-58)+32]
 11636  0101F2  0E94               	movlw	low _dbuf
 11637  0101F4  6E2F               	movwf	(btemp+10)^0,c
 11638  0101F6  0E03               	movlw	high _dbuf
 11639  0101F8  6E30               	movwf	(btemp+11)^0,c
 11640  0101FA  0EE6               	movlw	-26
 11641  0101FC  50E3               	movf	plusw1,w,c
 11642  0101FE  262F               	addwf	(btemp+10)^0,f,c
 11643  010200  0EE7               	movlw	-25
 11644  010202  50E3               	movf	plusw1,w,c
 11645  010204  2230               	addwfc	(btemp+11)^0,f,c
 11646  010206  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 11647  01020C  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 11648  010212  EC7B  F0BB         	call	_strcpy	;wreg free
 11649  010216                     l10193:
 11650                           
 11651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 11652                           ;stkvar	_w @ sp[(-56)+38]
 11653  010216  50E1               	movf	fsr1l,w,c
 11654  010218  0FEE               	addlw	-18
 11655  01021A  6ED9               	movwf	fsr2l,c
 11656  01021C  50E2               	movf	fsr1h,w,c
 11657  01021E  6EDA               	movwf	fsr2h,c
 11658  010220  0EFF               	movlw	255
 11659  010222  22DA               	addwfc	fsr2h,f,c
 11660  010224  0EFD               	movlw	253
 11661  010226  26DE               	addwf	postinc2,f,c
 11662  010228  0EFF               	movlw	255
 11663  01022A  22DD               	addwfc	postdec2,f,c
 11664  01022C                     l10195:
 11665                           
 11666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 11667                           ;stkvar	_w @ sp[(-56)+38]
 11668  01022C  0EEE               	movlw	-18
 11669  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 11670  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 11671  01023A  0E94               	movlw	low _dbuf
 11672  01023C  6EE6               	movwf	postinc1,c
 11673  01023E  0E03               	movlw	high _dbuf
 11674  010240  6EE6               	movwf	postinc1,c
 11675                           
 11676                           ;stkvar	_fp @ sp[(-60)+-2]
 11677  010242  0EC2               	movlw	-62
 11678  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 11679  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 11680  010250  EC70  F0B8         	call	_pad	;wreg free
 11681  010254  EF1D  F089         	goto	l2044
 11682  010258                     l10199:
 11683                           
 11684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11685                           ;stkvar	_g @ sp[(-56)+16]
 11686  010258  0ED8               	movlw	-40
 11687  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 11688  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 11689  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 11690  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 11691  010272  EC4B  F0B3         	call	___fpclassifyf	;wreg free
 11692  010276  5025               	movf	btemp^0,w,c
 11693  010278  1026               	iorwf	(btemp+1)^0,w,c
 11694  01027A  A4D8               	btfss	status,2,c
 11695  01027C  D056               	goto	l10217
 11696  01027E  0EBF               	movlw	191
 11697  010280  6E2F               	movwf	(btemp+10)^0,c
 11698  010282  0EFF               	movlw	255
 11699  010284  6E30               	movwf	(btemp+11)^0,c
 11700                           
 11701                           ;stkvar	_c @ sp[(-56)+-7]
 11702  010286  0EC1               	movlw	-63
 11703  010288  50E3               	movf	plusw1,w,c
 11704  01028A  6E2D               	movwf	(btemp+8)^0,c
 11705  01028C  6A2E               	clrf	(btemp+9)^0,c
 11706  01028E  502F               	movf	(btemp+10)^0,w,c
 11707  010290  262D               	addwf	(btemp+8)^0,f,c
 11708  010292  5030               	movf	(btemp+11)^0,w,c
 11709  010294  222E               	addwfc	(btemp+9)^0,f,c
 11710  010296  502E               	movf	(btemp+9)^0,w,c
 11711  010298  E106               	bnz	u9610
 11712  01029A  0E1A               	movlw	26
 11713  01029C  5C2D               	subwf	(btemp+8)^0,w,c
 11714  01029E  B0D8               	btfsc	status,0,c
 11715  0102A0  D002               	goto	u9610
 11716  0102A2  0E01               	movlw	1
 11717  0102A4  D001               	goto	u9620
 11718  0102A6                     u9610:
 11719  0102A6  0E00               	movlw	0
 11720  0102A8                     u9620:
 11721  0102A8  6E2F               	movwf	(btemp+10)^0,c
 11722  0102AA  6A30               	clrf	(btemp+11)^0,c
 11723                           
 11724                           ;stkvar	_efgtoa$4994 @ sp[(-56)+6]
 11725  0102AC  0ECE               	movlw	-50
 11726  0102AE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11727  0102B4  0ECF               	movlw	-49
 11728  0102B6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11729                           
 11730                           ;stkvar	_efgtoa$4994 @ sp[(-56)+6]
 11731  0102BC  0ECE               	movlw	-50
 11732  0102BE  006F FF8C  F025    	movff	plusw1,btemp
 11733  0102C4  0ECF               	movlw	-49
 11734  0102C6  50E3               	movf	plusw1,w,c
 11735  0102C8  1025               	iorwf	btemp^0,w,c
 11736  0102CA  B4D8               	btfsc	status,2,c
 11737  0102CC  D017               	goto	l10209
 11738                           
 11739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 11740  0102CE  0EEA               	movlw	low STR_50
 11741  0102D0  6EE6               	movwf	postinc1,c
 11742  0102D2  0EFF               	movlw	high STR_50
 11743  0102D4  6EE6               	movwf	postinc1,c
 11744                           
 11745                           ;stkvar	_n @ sp[(-58)+32]
 11746  0102D6  0E94               	movlw	low _dbuf
 11747  0102D8  6E2F               	movwf	(btemp+10)^0,c
 11748  0102DA  0E03               	movlw	high _dbuf
 11749  0102DC  6E30               	movwf	(btemp+11)^0,c
 11750  0102DE  0EE6               	movlw	-26
 11751  0102E0  50E3               	movf	plusw1,w,c
 11752  0102E2  262F               	addwf	(btemp+10)^0,f,c
 11753  0102E4  0EE7               	movlw	-25
 11754  0102E6  50E3               	movf	plusw1,w,c
 11755  0102E8  2230               	addwfc	(btemp+11)^0,f,c
 11756  0102EA  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 11757  0102F0  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 11758  0102F6  EC7B  F0BB         	call	_strcpy	;wreg free
 11759                           
 11760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 11761  0102FA  D78D               	goto	l10193
 11762  0102FC                     l10209:
 11763                           
 11764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 11765  0102FC  0EF2               	movlw	low STR_51
 11766  0102FE  6EE6               	movwf	postinc1,c
 11767  010300  0EFF               	movlw	high STR_51
 11768  010302  6EE6               	movwf	postinc1,c
 11769                           
 11770                           ;stkvar	_n @ sp[(-58)+32]
 11771  010304  0E94               	movlw	low _dbuf
 11772  010306  6E2F               	movwf	(btemp+10)^0,c
 11773  010308  0E03               	movlw	high _dbuf
 11774  01030A  6E30               	movwf	(btemp+11)^0,c
 11775  01030C  0EE6               	movlw	-26
 11776  01030E  50E3               	movf	plusw1,w,c
 11777  010310  262F               	addwf	(btemp+10)^0,f,c
 11778  010312  0EE7               	movlw	-25
 11779  010314  50E3               	movf	plusw1,w,c
 11780  010316  2230               	addwfc	(btemp+11)^0,f,c
 11781  010318  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 11782  01031E  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 11783  010324  EC7B  F0BB         	call	_strcpy	;wreg free
 11784  010328  D776               	goto	l10193
 11785  01032A                     l10217:
 11786                           
 11787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 11788  01032A  0E00               	movlw	0
 11789  01032C  6E2D               	movwf	(btemp+8)^0,c
 11790  01032E  0E00               	movlw	0
 11791  010330  6E2E               	movwf	(btemp+9)^0,c
 11792  010332  0E80               	movlw	128
 11793  010334  6E2F               	movwf	(btemp+10)^0,c
 11794  010336  0E3F               	movlw	63
 11795  010338  6E30               	movwf	(btemp+11)^0,c
 11796                           
 11797                           ;stkvar	_u @ sp[(-56)+12]
 11798  01033A  0ED4               	movlw	-44
 11799  01033C  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 11800  010342  0ED5               	movlw	-43
 11801  010344  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 11802  01034A  0ED6               	movlw	-42
 11803  01034C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11804  010352  0ED7               	movlw	-41
 11805  010354  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11806                           
 11807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 11808                           ;stkvar	_e @ sp[(-56)+34]
 11809  01035A  0EEA               	movlw	-22
 11810  01035C  6AE3               	clrf	plusw1,c
 11811  01035E  0EEB               	movlw	-21
 11812  010360  6AE3               	clrf	plusw1,c
 11813                           
 11814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 11815  010362  0E00               	movlw	0
 11816  010364  6EE6               	movwf	postinc1,c
 11817  010366  0E00               	movlw	0
 11818  010368  6EE6               	movwf	postinc1,c
 11819  01036A  0E00               	movlw	0
 11820  01036C  6EE6               	movwf	postinc1,c
 11821  01036E  0E00               	movlw	0
 11822  010370  6EE6               	movwf	postinc1,c
 11823                           
 11824                           ;stkvar	_g @ sp[(-60)+16]
 11825  010372  0ED4               	movlw	-44
 11826  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 11827  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 11828  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 11829  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 11830  01038C  EC4D  F0BC         	call	___fleq	;wreg free
 11831  010390  A025               	btfss	btemp& (0+255),0,c
 11832  010392  D039               	goto	l10229
 11833  010394  D0BC               	goto	u9660
 11834  010396                     l10225:
 11835                           
 11836                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 11837  010396  0E00               	movlw	0
 11838  010398  6EE6               	movwf	postinc1,c
 11839  01039A  0E00               	movlw	0
 11840  01039C  6EE6               	movwf	postinc1,c
 11841  01039E  0E20               	movlw	32
 11842  0103A0  6EE6               	movwf	postinc1,c
 11843  0103A2  0E41               	movlw	65
 11844  0103A4  6EE6               	movwf	postinc1,c
 11845                           
 11846                           ;stkvar	_u @ sp[(-60)+12]
 11847  0103A6  0ED0               	movlw	-48
 11848  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11849  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11850  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 11851  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 11852  0103C0  EC14  F093         	call	___flmul	;wreg free
 11853                           
 11854                           ;stkvar	_u @ sp[(-56)+12]
 11855  0103C4  0ED4               	movlw	-44
 11856  0103C6  0060  F097  FFE3   	movff	btemp,plusw1
 11857  0103CC  0ED5               	movlw	-43
 11858  0103CE  0060  F09B  FFE3   	movff	btemp+1,plusw1
 11859  0103D4  0ED6               	movlw	-42
 11860  0103D6  0060  F09F  FFE3   	movff	btemp+2,plusw1
 11861  0103DC  0ED7               	movlw	-41
 11862  0103DE  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 11863                           
 11864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 11865                           ;stkvar	_e @ sp[(-56)+34]
 11866  0103E4  0EEA               	movlw	-22
 11867  0103E6  50E3               	movf	plusw1,w,c
 11868  0103E8  0F01               	addlw	1
 11869  0103EA  6E25               	movwf	btemp^0,c
 11870  0103EC  0EEA               	movlw	-22
 11871  0103EE  0060  F097  FFE3   	movff	btemp,plusw1
 11872  0103F4  6A25               	clrf	btemp^0,c
 11873  0103F6  0EEB               	movlw	-21
 11874  0103F8  50E3               	movf	plusw1,w,c
 11875  0103FA  2025               	addwfc	btemp^0,w,c
 11876  0103FC  6E25               	movwf	btemp^0,c
 11877  0103FE  0EEB               	movlw	-21
 11878  010400  0060  F097  FFE3   	movff	btemp,plusw1
 11879  010406                     l10229:
 11880                           
 11881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 11882  010406  0E00               	movlw	0
 11883  010408  6EE6               	movwf	postinc1,c
 11884  01040A  0E00               	movlw	0
 11885  01040C  6EE6               	movwf	postinc1,c
 11886  01040E  0E20               	movlw	32
 11887  010410  6EE6               	movwf	postinc1,c
 11888  010412  0E41               	movlw	65
 11889  010414  6EE6               	movwf	postinc1,c
 11890                           
 11891                           ;stkvar	_u @ sp[(-60)+12]
 11892  010416  0ED0               	movlw	-48
 11893  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 11894  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 11895  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 11896  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 11897  010430  EC14  F093         	call	___flmul	;wreg free
 11898  010434  0060  F097  FFE6   	movff	btemp,postinc1
 11899  01043A  0060  F09B  FFE6   	movff	btemp+1,postinc1
 11900  010440  0060  F09F  FFE6   	movff	btemp+2,postinc1
 11901  010446  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 11902                           
 11903                           ;stkvar	_g @ sp[(-60)+16]
 11904  01044C  0ED4               	movlw	-44
 11905  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 11906  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 11907  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 11908  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 11909  010466  ECCF  F0B4         	call	___flge	;wreg free
 11910  01046A  A025               	btfss	btemp& (0+255),0,c
 11911  01046C  D032               	goto	l10235
 11912  01046E  D793               	goto	l10225
 11913  010470                     l10231:
 11914                           
 11915                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 11916  010470  0E00               	movlw	0
 11917  010472  6EE6               	movwf	postinc1,c
 11918  010474  0E00               	movlw	0
 11919  010476  6EE6               	movwf	postinc1,c
 11920  010478  0E20               	movlw	32
 11921  01047A  6EE6               	movwf	postinc1,c
 11922  01047C  0E41               	movlw	65
 11923  01047E  6EE6               	movwf	postinc1,c
 11924                           
 11925                           ;stkvar	_u @ sp[(-60)+12]
 11926  010480  0ED0               	movlw	-48
 11927  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 11928  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 11929  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 11930  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 11931  01049A  EC07  F09B         	call	___fldiv	;wreg free
 11932                           
 11933                           ;stkvar	_u @ sp[(-56)+12]
 11934  01049E  0ED4               	movlw	-44
 11935  0104A0  0060  F097  FFE3   	movff	btemp,plusw1
 11936  0104A6  0ED5               	movlw	-43
 11937  0104A8  0060  F09B  FFE3   	movff	btemp+1,plusw1
 11938  0104AE  0ED6               	movlw	-42
 11939  0104B0  0060  F09F  FFE3   	movff	btemp+2,plusw1
 11940  0104B6  0ED7               	movlw	-41
 11941  0104B8  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 11942                           
 11943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 11944                           ;stkvar	_e @ sp[(-56)+34]
 11945  0104BE  50E1               	movf	fsr1l,w,c
 11946  0104C0  0FEA               	addlw	-22
 11947  0104C2  6ED9               	movwf	fsr2l,c
 11948  0104C4  50E2               	movf	fsr1h,w,c
 11949  0104C6  6EDA               	movwf	fsr2h,c
 11950  0104C8  0EFF               	movlw	255
 11951  0104CA  22DA               	addwfc	fsr2h,f,c
 11952  0104CC  06DE               	decf	postinc2,f,c
 11953  0104CE  0E00               	movlw	0
 11954  0104D0  5ADD               	subwfb	postdec2,f,c
 11955  0104D2                     l10235:
 11956                           
 11957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 11958                           ;stkvar	_u @ sp[(-56)+12]
 11959  0104D2  0ED4               	movlw	-44
 11960  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11961  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11962  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 11963  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 11964                           
 11965                           ;stkvar	_g @ sp[(-60)+16]
 11966  0104EC  0ED4               	movlw	-44
 11967  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 11968  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 11969  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 11970  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 11971  010506  ECCF  F0B4         	call	___flge	;wreg free
 11972  01050A  A025               	btfss	btemp& (0+255),0,c
 11973  01050C  D7B1               	goto	l10231
 11974  01050E                     u9660:
 11975                           
 11976                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 11977                           ;stkvar	_c @ sp[(-56)+-7]
 11978  01050E  0EC1               	movlw	-63
 11979  010510  50E3               	movf	plusw1,w,c
 11980  010512  6EE6               	movwf	postinc1,c
 11981  010514  0E00               	movlw	0
 11982  010516  6EE6               	movwf	postinc1,c
 11983  010518  ECBF  F0C0         	call	_tolower	;wreg free
 11984                           
 11985                           ;stkvar	_mode @ sp[(-56)+54]
 11986  01051C  0EFE               	movlw	-2
 11987  01051E  0060  F097  FFE3   	movff	btemp,plusw1
 11988                           
 11989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 11990                           ;stkvar	_mode @ sp[(-56)+54]
 11991                           ;stkvar	_nmode @ sp[(-56)+55]
 11992  010524  0EFE               	movlw	-2
 11993  010526  006F FF8C  F025    	movff	plusw1,btemp
 11994  01052C  0EFF               	movlw	-1
 11995  01052E  0060  F097  FFE3   	movff	btemp,plusw1
 11996                           
 11997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 11998                           ;stkvar	_mode @ sp[(-56)+54]
 11999  010534  0EFE               	movlw	-2
 12000  010536  006F FF8C  F025    	movff	plusw1,btemp
 12001  01053C  0E67               	movlw	103
 12002  01053E  1825               	xorwf	btemp^0,w,c
 12003  010540  A4D8               	btfss	status,2,c
 12004  010542  D025               	goto	l10253
 12005                           
 12006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 12007  010544  500C               	movf	_prec^0,w,c
 12008  010546  100D               	iorwf	(_prec+1)^0,w,c
 12009  010548  A4D8               	btfss	status,2,c
 12010  01054A  D004               	goto	l10247
 12011                           
 12012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 12013  01054C  0E00               	movlw	0
 12014  01054E  6E0D               	movwf	(_prec+1)^0,c
 12015  010550  0E01               	movlw	1
 12016  010552  6E0C               	movwf	_prec^0,c
 12017  010554                     l10247:
 12018                           
 12019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 12020  010554  BE0D               	btfsc	(_prec+1)^0,7,c
 12021  010556  D005               	goto	u9690
 12022  010558  500D               	movf	(_prec+1)^0,w,c
 12023  01055A  E110               	bnz	l10251
 12024  01055C  040C               	decf	_prec^0,w,c
 12025  01055E  B0D8               	btfsc	status,0,c
 12026  010560  D00D               	goto	l10251
 12027  010562                     u9690:
 12028  010562  0E06               	movlw	6
 12029  010564  6E2F               	movwf	(btemp+10)^0,c
 12030  010566  0E00               	movlw	0
 12031  010568  6E30               	movwf	(btemp+11)^0,c
 12032                           
 12033                           ;stkvar	_p @ sp[(-56)+40]
 12034  01056A  0EF0               	movlw	-16
 12035  01056C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12036  010572  0EF1               	movlw	-15
 12037  010574  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12038  01057A  D00C               	goto	l10259
 12039  01057C                     l10251:
 12040                           
 12041                           ;stkvar	_p @ sp[(-56)+40]
 12042  01057C  0EF0               	movlw	-16
 12043  01057E  0060  F033  FFE3   	movff	_prec,plusw1
 12044  010584  0EF1               	movlw	-15
 12045  010586  0060  F037  FFE3   	movff	_prec+1,plusw1
 12046  01058C  D003               	goto	l10259
 12047  01058E                     l10253:
 12048                           
 12049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 12050  01058E  AE0D               	btfss	(_prec+1)^0,7,c
 12051  010590  D7F5               	goto	l10251
 12052  010592  D7E7               	goto	u9690
 12053  010594                     l10259:
 12054                           
 12055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 12056                           ;stkvar	_mode @ sp[(-56)+54]
 12057  010594  0EFE               	movlw	-2
 12058  010596  006F FF8C  F025    	movff	plusw1,btemp
 12059  01059C  0E67               	movlw	103
 12060  01059E  1825               	xorwf	btemp^0,w,c
 12061  0105A0  A4D8               	btfss	status,2,c
 12062  0105A2  D02F               	goto	l10269
 12063                           
 12064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 12065                           ;stkvar	_e @ sp[(-56)+34]
 12066  0105A4  0EEB               	movlw	-21
 12067  0105A6  AEE3               	btfss	plusw1,7,c
 12068  0105A8  D00E               	goto	u9720
 12069  0105AA  0EEA               	movlw	-22
 12070  0105AC  006F FF8C  F025    	movff	plusw1,btemp
 12071  0105B2  0EFC               	movlw	252
 12072  0105B4  5E25               	subwf	btemp^0,f,c
 12073  0105B6  0EEB               	movlw	-21
 12074  0105B8  006F FF8C  F025    	movff	plusw1,btemp
 12075  0105BE  0EFF               	movlw	255
 12076  0105C0  5A25               	subwfb	btemp^0,f,c
 12077  0105C2  A0D8               	btfss	status,0,c
 12078  0105C4  D018               	goto	l10267
 12079  0105C6                     u9720:
 12080                           
 12081                           ;stkvar	_e @ sp[(-56)+34]
 12082                           ;stkvar	_p @ sp[(-56)+40]
 12083  0105C6  0EF0               	movlw	-16
 12084  0105C8  50E3               	movf	plusw1,w,c
 12085  0105CA  0FFF               	addlw	255
 12086  0105CC  6E2F               	movwf	(btemp+10)^0,c
 12087  0105CE  0EF1               	movlw	-15
 12088  0105D0  006F FF8C  F030    	movff	plusw1,btemp+11
 12089  0105D6  0EFF               	movlw	255
 12090  0105D8  2230               	addwfc	(btemp+11)^0,f,c
 12091  0105DA  0EEA               	movlw	-22
 12092  0105DC  50E3               	movf	plusw1,w,c
 12093  0105DE  5C2F               	subwf	(btemp+10)^0,w,c
 12094  0105E0  5030               	movf	(btemp+11)^0,w,c
 12095  0105E2  0A80               	xorlw	128
 12096  0105E4  6E25               	movwf	btemp^0,c
 12097  0105E6  0EEB               	movlw	-21
 12098  0105E8  50E3               	movf	plusw1,w,c
 12099  0105EA  0A80               	xorlw	128
 12100  0105EC  5825               	subwfb	btemp^0,w,c
 12101  0105EE  A0D8               	btfss	status,0,c
 12102  0105F0  D002               	goto	l10267
 12103                           
 12104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 12105  0105F2  0E66               	movlw	102
 12106  0105F4  D001               	goto	L10
 12107  0105F6                     l10267:
 12108                           
 12109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 12110  0105F6  0E65               	movlw	101
 12111  0105F8                     L10:
 12112  0105F8  6E30               	movwf	(btemp+11)^0,c
 12113                           
 12114                           ;stkvar	_nmode @ sp[(-56)+55]
 12115  0105FA  0EFF               	movlw	-1
 12116  0105FC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12117  010602                     l10269:
 12118                           
 12119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 12120                           ;stkvar	_p @ sp[(-56)+40]
 12121                           ;stkvar	_m @ sp[(-56)+48]
 12122  010602  0EF0               	movlw	-16
 12123  010604  006F FF8C  F025    	movff	plusw1,btemp
 12124  01060A  0EF8               	movlw	-8
 12125  01060C  0060  F097  FFE3   	movff	btemp,plusw1
 12126  010612  0EF1               	movlw	-15
 12127  010614  006F FF8C  F025    	movff	plusw1,btemp
 12128  01061A  0EF9               	movlw	-7
 12129  01061C  0060  F097  FFE3   	movff	btemp,plusw1
 12130                           
 12131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 12132                           ;stkvar	_mode @ sp[(-56)+54]
 12133  010622  0EFE               	movlw	-2
 12134  010624  006F FF8C  F025    	movff	plusw1,btemp
 12135  01062A  0E67               	movlw	103
 12136  01062C  1825               	xorwf	btemp^0,w,c
 12137  01062E  A4D8               	btfss	status,2,c
 12138  010630  D00B               	goto	u9760
 12139                           
 12140                           ;stkvar	_nmode @ sp[(-56)+55]
 12141  010632  0EFF               	movlw	-1
 12142  010634  006F FF8C  F025    	movff	plusw1,btemp
 12143  01063A  0E66               	movlw	102
 12144  01063C  1825               	xorwf	btemp^0,w,c
 12145  01063E  A4D8               	btfss	status,2,c
 12146  010640  D014               	goto	l2073
 12147                           
 12148                           ;stkvar	_e @ sp[(-56)+34]
 12149  010642  0EEB               	movlw	-21
 12150  010644  AEE3               	btfss	plusw1,7,c
 12151  010646  D011               	goto	l2073
 12152  010648                     u9760:
 12153                           
 12154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 12155                           ;stkvar	_m @ sp[(-56)+48]
 12156  010648  0EF8               	movlw	-8
 12157  01064A  50E3               	movf	plusw1,w,c
 12158  01064C  0F01               	addlw	1
 12159  01064E  6E25               	movwf	btemp^0,c
 12160  010650  0EF8               	movlw	-8
 12161  010652  0060  F097  FFE3   	movff	btemp,plusw1
 12162  010658  6A25               	clrf	btemp^0,c
 12163  01065A  0EF9               	movlw	-7
 12164  01065C  50E3               	movf	plusw1,w,c
 12165  01065E  2025               	addwfc	btemp^0,w,c
 12166  010660  6E25               	movwf	btemp^0,c
 12167  010662  0EF9               	movlw	-7
 12168  010664  0060  F097  FFE3   	movff	btemp,plusw1
 12169  01066A                     l2073:
 12170                           
 12171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 12172                           ;stkvar	_nmode @ sp[(-56)+55]
 12173  01066A  0EFF               	movlw	-1
 12174  01066C  006F FF8C  F025    	movff	plusw1,btemp
 12175  010672  0E66               	movlw	102
 12176  010674  1825               	xorwf	btemp^0,w,c
 12177  010676  A4D8               	btfss	status,2,c
 12178  010678  D03B               	goto	l10289
 12179                           
 12180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 12181                           ;stkvar	_e @ sp[(-56)+34]
 12182  01067A  0EEB               	movlw	-21
 12183  01067C  AEE3               	btfss	plusw1,7,c
 12184  01067E  D01C               	goto	l10285
 12185                           
 12186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 12187  010680  0E00               	movlw	0
 12188  010682  6E2D               	movwf	(btemp+8)^0,c
 12189  010684  0E00               	movlw	0
 12190  010686  6E2E               	movwf	(btemp+9)^0,c
 12191  010688  0E80               	movlw	128
 12192  01068A  6E2F               	movwf	(btemp+10)^0,c
 12193  01068C  0E3F               	movlw	63
 12194  01068E  6E30               	movwf	(btemp+11)^0,c
 12195                           
 12196                           ;stkvar	_u @ sp[(-56)+12]
 12197  010690  0ED4               	movlw	-44
 12198  010692  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12199  010698  0ED5               	movlw	-43
 12200  01069A  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12201  0106A0  0ED6               	movlw	-42
 12202  0106A2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12203  0106A8  0ED7               	movlw	-41
 12204  0106AA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12205                           
 12206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 12207                           ;stkvar	_e @ sp[(-56)+34]
 12208  0106B0  0EEA               	movlw	-22
 12209  0106B2  6AE3               	clrf	plusw1,c
 12210  0106B4  0EEB               	movlw	-21
 12211  0106B6  6AE3               	clrf	plusw1,c
 12212  0106B8                     l10285:
 12213                           
 12214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 12215                           ;stkvar	_mode @ sp[(-56)+54]
 12216  0106B8  0EFE               	movlw	-2
 12217  0106BA  006F FF8C  F025    	movff	plusw1,btemp
 12218  0106C0  0E67               	movlw	103
 12219  0106C2  1825               	xorwf	btemp^0,w,c
 12220  0106C4  B4D8               	btfsc	status,2,c
 12221  0106C6  D014               	goto	l10289
 12222                           
 12223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 12224                           ;stkvar	_e @ sp[(-56)+34]
 12225                           ;stkvar	_m @ sp[(-56)+48]
 12226  0106C8  0EF8               	movlw	-8
 12227  0106CA  50E3               	movf	plusw1,w,c
 12228  0106CC  6E25               	movwf	btemp^0,c
 12229  0106CE  0EEA               	movlw	-22
 12230  0106D0  50E3               	movf	plusw1,w,c
 12231  0106D2  2625               	addwf	btemp^0,f,c
 12232  0106D4  0EF8               	movlw	-8
 12233  0106D6  0060  F097  FFE3   	movff	btemp,plusw1
 12234  0106DC  0EF9               	movlw	-7
 12235  0106DE  50E3               	movf	plusw1,w,c
 12236  0106E0  6E25               	movwf	btemp^0,c
 12237  0106E2  0EEB               	movlw	-21
 12238  0106E4  50E3               	movf	plusw1,w,c
 12239  0106E6  2225               	addwfc	btemp^0,f,c
 12240  0106E8  0EF9               	movlw	-7
 12241  0106EA  0060  F097  FFE3   	movff	btemp,plusw1
 12242  0106F0                     l10289:
 12243                           
 12244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 12245                           ;stkvar	_i @ sp[(-56)+36]
 12246  0106F0  0EEC               	movlw	-20
 12247  0106F2  6AE3               	clrf	plusw1,c
 12248  0106F4  0EED               	movlw	-19
 12249  0106F6  6AE3               	clrf	plusw1,c
 12250                           
 12251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 12252                           ;stkvar	_g @ sp[(-56)+16]
 12253  0106F8  0ED8               	movlw	-40
 12254  0106FA  006F FF8C  F02D    	movff	plusw1,btemp+8
 12255  010700  0ED9               	movlw	-39
 12256  010702  006F FF8C  F02E    	movff	plusw1,btemp+9
 12257  010708  0EDA               	movlw	-38
 12258  01070A  006F FF8C  F02F    	movff	plusw1,btemp+10
 12259  010710  0EDB               	movlw	-37
 12260  010712  006F FF8C  F030    	movff	plusw1,btemp+11
 12261                           
 12262                           ;stkvar	_h @ sp[(-56)+24]
 12263  010718  0EE0               	movlw	-32
 12264  01071A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12265  010720  0EE1               	movlw	-31
 12266  010722  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12267  010728  0EE2               	movlw	-30
 12268  01072A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12269  010730  0EE3               	movlw	-29
 12270  010732  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12271                           
 12272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 12273                           ;stkvar	_u @ sp[(-56)+12]
 12274  010738  0ED4               	movlw	-44
 12275  01073A  006F FF8C  F02D    	movff	plusw1,btemp+8
 12276  010740  0ED5               	movlw	-43
 12277  010742  006F FF8C  F02E    	movff	plusw1,btemp+9
 12278  010748  0ED6               	movlw	-42
 12279  01074A  006F FF8C  F02F    	movff	plusw1,btemp+10
 12280  010750  0ED7               	movlw	-41
 12281  010752  006F FF8C  F030    	movff	plusw1,btemp+11
 12282                           
 12283                           ;stkvar	_ou @ sp[(-56)+28]
 12284  010758  0EE4               	movlw	-28
 12285  01075A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12286  010760  0EE5               	movlw	-27
 12287  010762  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12288  010768  0EE6               	movlw	-26
 12289  01076A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12290  010770  0EE7               	movlw	-25
 12291  010772  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12292                           
 12293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12294  010778  D0D6               	goto	l10305
 12295  01077A                     l10295:
 12296                           
 12297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 12298                           ;stkvar	_u @ sp[(-56)+12]
 12299  01077A  0ED4               	movlw	-44
 12300  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 12301  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 12302  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 12303  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 12304                           
 12305                           ;stkvar	_h @ sp[(-60)+24]
 12306  010794  0EDC               	movlw	-36
 12307  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 12308  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 12309  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12310  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12311  0107AE  EC07  F09B         	call	___fldiv	;wreg free
 12312  0107B2  0060  F097  FFE6   	movff	btemp,postinc1
 12313  0107B8  0060  F09B  FFE6   	movff	btemp+1,postinc1
 12314  0107BE  0060  F09F  FFE6   	movff	btemp+2,postinc1
 12315  0107C4  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 12316  0107CA  EC37  F0A4         	call	_floorf	;wreg free
 12317                           
 12318                           ;stkvar	_l @ sp[(-56)+20]
 12319  0107CE  0EDC               	movlw	-36
 12320  0107D0  0060  F097  FFE3   	movff	btemp,plusw1
 12321  0107D6  0EDD               	movlw	-35
 12322  0107D8  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12323  0107DE  0EDE               	movlw	-34
 12324  0107E0  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12325  0107E6  0EDF               	movlw	-33
 12326  0107E8  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12327                           
 12328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 12329                           ;stkvar	_l @ sp[(-56)+20]
 12330  0107EE  0EDC               	movlw	-36
 12331  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 12332  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 12333  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 12334  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 12335  010808  EC16  F0B4         	call	___fltol	;wreg free
 12336  01080C  0060  F094  F02F   	movff	btemp,btemp+10
 12337  010812  0060  F098  F030   	movff	btemp+1,btemp+11
 12338                           
 12339                           ;stkvar	_d @ sp[(-56)+44]
 12340  010818  0EF4               	movlw	-12
 12341  01081A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12342  010820  0EF5               	movlw	-11
 12343  010822  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12344                           
 12345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 12346                           ;stkvar	_u @ sp[(-56)+12]
 12347  010828  0ED4               	movlw	-44
 12348  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 12349  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 12350  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 12351  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 12352                           
 12353                           ;stkvar	_l @ sp[(-60)+20]
 12354  010842  0ED8               	movlw	-40
 12355  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 12356  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 12357  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 12358  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 12359  01085C  EC14  F093         	call	___flmul	;wreg free
 12360  010860  0060  F097  FFE6   	movff	btemp,postinc1
 12361  010866  0060  F09B  FFE6   	movff	btemp+1,postinc1
 12362  01086C  0060  F09F  FFE6   	movff	btemp+2,postinc1
 12363  010872  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 12364                           
 12365                           ;stkvar	_h @ sp[(-60)+24]
 12366  010878  0EDC               	movlw	-36
 12367  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 12368  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 12369  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 12370  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 12371  010892  EC74  F0C4         	call	___flsub	;wreg free
 12372                           
 12373                           ;stkvar	_h @ sp[(-56)+24]
 12374  010896  0EE0               	movlw	-32
 12375  010898  0060  F097  FFE3   	movff	btemp,plusw1
 12376  01089E  0EE1               	movlw	-31
 12377  0108A0  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12378  0108A6  0EE2               	movlw	-30
 12379  0108A8  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12380  0108AE  0EE3               	movlw	-29
 12381  0108B0  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12382                           
 12383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 12384  0108B6  0E00               	movlw	0
 12385  0108B8  6EE6               	movwf	postinc1,c
 12386  0108BA  0E00               	movlw	0
 12387  0108BC  6EE6               	movwf	postinc1,c
 12388  0108BE  0E20               	movlw	32
 12389  0108C0  6EE6               	movwf	postinc1,c
 12390  0108C2  0E41               	movlw	65
 12391  0108C4  6EE6               	movwf	postinc1,c
 12392                           
 12393                           ;stkvar	_u @ sp[(-60)+12]
 12394  0108C6  0ED0               	movlw	-48
 12395  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12396  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 12397  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 12398  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 12399  0108E0  EC07  F09B         	call	___fldiv	;wreg free
 12400                           
 12401                           ;stkvar	_u @ sp[(-56)+12]
 12402  0108E4  0ED4               	movlw	-44
 12403  0108E6  0060  F097  FFE3   	movff	btemp,plusw1
 12404  0108EC  0ED5               	movlw	-43
 12405  0108EE  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12406  0108F4  0ED6               	movlw	-42
 12407  0108F6  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12408  0108FC  0ED7               	movlw	-41
 12409  0108FE  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12410                           
 12411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 12412                           ;stkvar	_i @ sp[(-56)+36]
 12413  010904  0EEC               	movlw	-20
 12414  010906  50E3               	movf	plusw1,w,c
 12415  010908  0F01               	addlw	1
 12416  01090A  6E25               	movwf	btemp^0,c
 12417  01090C  0EEC               	movlw	-20
 12418  01090E  0060  F097  FFE3   	movff	btemp,plusw1
 12419  010914  6A25               	clrf	btemp^0,c
 12420  010916  0EED               	movlw	-19
 12421  010918  50E3               	movf	plusw1,w,c
 12422  01091A  2025               	addwfc	btemp^0,w,c
 12423  01091C  6E25               	movwf	btemp^0,c
 12424  01091E  0EED               	movlw	-19
 12425  010920  0060  F097  FFE3   	movff	btemp,plusw1
 12426  010926                     l10305:
 12427                           
 12428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12429                           ;stkvar	_m @ sp[(-56)+48]
 12430                           ;stkvar	_i @ sp[(-56)+36]
 12431  010926  50E1               	movf	fsr1l,w,c
 12432  010928  0FEC               	addlw	-20
 12433  01092A  6ED9               	movwf	fsr2l,c
 12434  01092C  50E2               	movf	fsr1h,w,c
 12435  01092E  6EDA               	movwf	fsr2h,c
 12436  010930  0EFF               	movlw	255
 12437  010932  22DA               	addwfc	fsr2h,f,c
 12438  010934  0EF8               	movlw	-8
 12439  010936  50E3               	movf	plusw1,w,c
 12440  010938  5CDE               	subwf	postinc2,w,c
 12441  01093A  50DE               	movf	postinc2,w,c
 12442  01093C  0A80               	xorlw	128
 12443  01093E  6E25               	movwf	btemp^0,c
 12444  010940  0EF9               	movlw	-7
 12445  010942  50E3               	movf	plusw1,w,c
 12446  010944  0A80               	xorlw	128
 12447  010946  5825               	subwfb	btemp^0,w,c
 12448  010948  A0D8               	btfss	status,0,c
 12449  01094A  D717               	goto	l10295
 12450                           
 12451                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 12452  01094C  0E00               	movlw	0
 12453  01094E  6EE6               	movwf	postinc1,c
 12454  010950  0E00               	movlw	0
 12455  010952  6EE6               	movwf	postinc1,c
 12456  010954  0EA0               	movlw	160
 12457  010956  6EE6               	movwf	postinc1,c
 12458  010958  0E40               	movlw	64
 12459  01095A  6EE6               	movwf	postinc1,c
 12460                           
 12461                           ;stkvar	_u @ sp[(-60)+12]
 12462  01095C  0ED0               	movlw	-48
 12463  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 12464  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 12465  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 12466  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 12467  010976  EC14  F093         	call	___flmul	;wreg free
 12468                           
 12469                           ;stkvar	_l @ sp[(-56)+20]
 12470  01097A  0EDC               	movlw	-36
 12471  01097C  0060  F097  FFE3   	movff	btemp,plusw1
 12472  010982  0EDD               	movlw	-35
 12473  010984  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12474  01098A  0EDE               	movlw	-34
 12475  01098C  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12476  010992  0EDF               	movlw	-33
 12477  010994  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12478                           
 12479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 12480                           ;stkvar	_l @ sp[(-56)+20]
 12481  01099A  0EDC               	movlw	-36
 12482  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 12483  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12484  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12485  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 12486                           
 12487                           ;stkvar	_h @ sp[(-60)+24]
 12488  0109B4  0EDC               	movlw	-36
 12489  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 12490  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 12491  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12492  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12493  0109CE  ECCF  F0B4         	call	___flge	;wreg free
 12494  0109D2  A025               	btfss	btemp& (0+255),0,c
 12495  0109D4  D021               	goto	u9830
 12496                           
 12497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 12498                           ;stkvar	_l @ sp[(-56)+20]
 12499                           
 12500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 12501                           
 12502                           ;stkvar	_l @ sp[(-56)+20]
 12503                           
 12504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 12505  0109D6  0EDC               	movlw	-36
 12506  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 12507  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 12508  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12509  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 12510                           
 12511                           ;stkvar	_h @ sp[(-60)+24]
 12512  0109F0  0EDC               	movlw	-36
 12513  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 12514  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 12515  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 12516  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 12517  010A0A  EC4D  F0BC         	call	___fleq	;wreg free
 12518  010A0E  A025               	btfss	btemp& (0+255),0,c
 12519  010A10  D01B               	goto	l10319
 12520                           
 12521                           ;stkvar	_d @ sp[(-56)+44]
 12522  010A12  0EF4               	movlw	-12
 12523  010A14  B0E3               	btfsc	plusw1,0,c
 12524  010A16  D018               	goto	l10319
 12525  010A18                     u9830:
 12526                           
 12527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 12528  010A18  0E00               	movlw	0
 12529  010A1A  6E2D               	movwf	(btemp+8)^0,c
 12530  010A1C  0E00               	movlw	0
 12531  010A1E  6E2E               	movwf	(btemp+9)^0,c
 12532  010A20  0E00               	movlw	0
 12533  010A22  6E2F               	movwf	(btemp+10)^0,c
 12534  010A24  0E00               	movlw	0
 12535  010A26  6E30               	movwf	(btemp+11)^0,c
 12536                           
 12537                           ;stkvar	_l @ sp[(-56)+20]
 12538  010A28  0EDC               	movlw	-36
 12539  010A2A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12540  010A30  0EDD               	movlw	-35
 12541  010A32  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12542  010A38  0EDE               	movlw	-34
 12543  010A3A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12544  010A40  0EDF               	movlw	-33
 12545  010A42  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12546  010A48                     l10319:
 12547                           
 12548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 12549                           ;stkvar	_l @ sp[(-56)+20]
 12550  010A48  0EDC               	movlw	-36
 12551  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 12552  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 12553  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 12554  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12555                           
 12556                           ;stkvar	_g @ sp[(-60)+16]
 12557  010A62  0ED4               	movlw	-44
 12558  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 12559  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 12560  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 12561  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 12562  010A7C  EC29  F097         	call	___fladd	;wreg free
 12563                           
 12564                           ;stkvar	_h @ sp[(-56)+24]
 12565  010A80  0EE0               	movlw	-32
 12566  010A82  0060  F097  FFE3   	movff	btemp,plusw1
 12567  010A88  0EE1               	movlw	-31
 12568  010A8A  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12569  010A90  0EE2               	movlw	-30
 12570  010A92  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12571  010A98  0EE3               	movlw	-29
 12572  010A9A  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12573                           
 12574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 12575                           ;stkvar	_ou @ sp[(-56)+28]
 12576  010AA0  0EE4               	movlw	-28
 12577  010AA2  006F FF8C  F02D    	movff	plusw1,btemp+8
 12578  010AA8  0EE5               	movlw	-27
 12579  010AAA  006F FF8C  F02E    	movff	plusw1,btemp+9
 12580  010AB0  0EE6               	movlw	-26
 12581  010AB2  006F FF8C  F02F    	movff	plusw1,btemp+10
 12582  010AB8  0EE7               	movlw	-25
 12583  010ABA  006F FF8C  F030    	movff	plusw1,btemp+11
 12584                           
 12585                           ;stkvar	_u @ sp[(-56)+12]
 12586  010AC0  0ED4               	movlw	-44
 12587  010AC2  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12588  010AC8  0ED5               	movlw	-43
 12589  010ACA  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12590  010AD0  0ED6               	movlw	-42
 12591  010AD2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12592  010AD8  0ED7               	movlw	-41
 12593  010ADA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12594                           
 12595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 12596                           ;stkvar	_nmode @ sp[(-56)+55]
 12597  010AE0  0EFF               	movlw	-1
 12598  010AE2  006F FF8C  F025    	movff	plusw1,btemp
 12599  010AE8  0E65               	movlw	101
 12600  010AEA  1825               	xorwf	btemp^0,w,c
 12601  010AEC  B4D8               	btfsc	status,2,c
 12602  010AEE  D011               	goto	l10327
 12603                           
 12604                           ;stkvar	_e @ sp[(-56)+34]
 12605                           ;stkvar	_ne @ sp[(-56)+46]
 12606  010AF0  0EEA               	movlw	-22
 12607  010AF2  006F FF8C  F025    	movff	plusw1,btemp
 12608  010AF8  0EF6               	movlw	-10
 12609  010AFA  0060  F097  FFE3   	movff	btemp,plusw1
 12610  010B00  0EEB               	movlw	-21
 12611  010B02  006F FF8C  F025    	movff	plusw1,btemp
 12612  010B08  0EF7               	movlw	-9
 12613  010B0A  0060  F097  FFE3   	movff	btemp,plusw1
 12614  010B10  D004               	goto	l2088
 12615  010B12                     l10327:
 12616                           
 12617                           ;stkvar	_ne @ sp[(-56)+46]
 12618  010B12  0EF6               	movlw	-10
 12619  010B14  6AE3               	clrf	plusw1,c
 12620  010B16  0EF7               	movlw	-9
 12621  010B18  6AE3               	clrf	plusw1,c
 12622  010B1A                     l2088:
 12623                           
 12624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 12625                           ;stkvar	_pp @ sp[(-56)+50]
 12626  010B1A  0EFA               	movlw	-6
 12627  010B1C  6AE3               	clrf	plusw1,c
 12628  010B1E  0EFB               	movlw	-5
 12629  010B20  6AE3               	clrf	plusw1,c
 12630                           
 12631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 12632                           ;stkvar	_t @ sp[(-56)+52]
 12633  010B22  0EFC               	movlw	-4
 12634  010B24  6AE3               	clrf	plusw1,c
 12635  010B26  0EFD               	movlw	-3
 12636  010B28  6AE3               	clrf	plusw1,c
 12637                           
 12638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 12639                           ;stkvar	_i @ sp[(-56)+36]
 12640  010B2A  0EEC               	movlw	-20
 12641  010B2C  6AE3               	clrf	plusw1,c
 12642  010B2E  0EED               	movlw	-19
 12643  010B30  6AE3               	clrf	plusw1,c
 12644                           
 12645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12646  010B32  D1B7               	goto	l10379
 12647  010B34                     l10329:
 12648                           
 12649                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 12650                           ;stkvar	_u @ sp[(-56)+12]
 12651  010B34  0ED4               	movlw	-44
 12652  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 12653  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12654  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 12655  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 12656                           
 12657                           ;stkvar	_h @ sp[(-60)+24]
 12658  010B4E  0EDC               	movlw	-36
 12659  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 12660  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 12661  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12662  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 12663  010B68  EC07  F09B         	call	___fldiv	;wreg free
 12664  010B6C  0060  F097  FFE6   	movff	btemp,postinc1
 12665  010B72  0060  F09B  FFE6   	movff	btemp+1,postinc1
 12666  010B78  0060  F09F  FFE6   	movff	btemp+2,postinc1
 12667  010B7E  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 12668  010B84  EC37  F0A4         	call	_floorf	;wreg free
 12669                           
 12670                           ;stkvar	_l @ sp[(-56)+20]
 12671  010B88  0EDC               	movlw	-36
 12672  010B8A  0060  F097  FFE3   	movff	btemp,plusw1
 12673  010B90  0EDD               	movlw	-35
 12674  010B92  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12675  010B98  0EDE               	movlw	-34
 12676  010B9A  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12677  010BA0  0EDF               	movlw	-33
 12678  010BA2  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12679                           
 12680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 12681                           ;stkvar	_l @ sp[(-56)+20]
 12682  010BA8  0EDC               	movlw	-36
 12683  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12684  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 12685  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 12686  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 12687  010BC2  EC16  F0B4         	call	___fltol	;wreg free
 12688  010BC6  0060  F094  F02F   	movff	btemp,btemp+10
 12689  010BCC  0060  F098  F030   	movff	btemp+1,btemp+11
 12690                           
 12691                           ;stkvar	_d @ sp[(-56)+44]
 12692  010BD2  0EF4               	movlw	-12
 12693  010BD4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12694  010BDA  0EF5               	movlw	-11
 12695  010BDC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12696                           
 12697                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 12698  010BE2  B80E               	btfsc	_flags^0,4,c
 12699  010BE4  D026               	goto	l10343
 12700                           
 12701                           ;stkvar	_d @ sp[(-56)+44]
 12702  010BE6  0EF4               	movlw	-12
 12703  010BE8  006F FF8C  F025    	movff	plusw1,btemp
 12704  010BEE  0EF5               	movlw	-11
 12705  010BF0  50E3               	movf	plusw1,w,c
 12706  010BF2  1025               	iorwf	btemp^0,w,c
 12707  010BF4  A4D8               	btfss	status,2,c
 12708  010BF6  D01D               	goto	l10343
 12709                           
 12710                           ;stkvar	_mode @ sp[(-56)+54]
 12711  010BF8  0EFE               	movlw	-2
 12712  010BFA  006F FF8C  F025    	movff	plusw1,btemp
 12713  010C00  0E67               	movlw	103
 12714  010C02  1825               	xorwf	btemp^0,w,c
 12715  010C04  A4D8               	btfss	status,2,c
 12716  010C06  D015               	goto	l10343
 12717                           
 12718                           ;stkvar	_ne @ sp[(-56)+46]
 12719  010C08  0EF7               	movlw	-9
 12720  010C0A  AEE3               	btfss	plusw1,7,c
 12721  010C0C  D012               	goto	l10343
 12722                           
 12723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 12724                           ;stkvar	_t @ sp[(-56)+52]
 12725  010C0E  0EFC               	movlw	-4
 12726  010C10  50E3               	movf	plusw1,w,c
 12727  010C12  0F01               	addlw	1
 12728  010C14  6E25               	movwf	btemp^0,c
 12729  010C16  0EFC               	movlw	-4
 12730  010C18  0060  F097  FFE3   	movff	btemp,plusw1
 12731  010C1E  6A25               	clrf	btemp^0,c
 12732  010C20  0EFD               	movlw	-3
 12733  010C22  50E3               	movf	plusw1,w,c
 12734  010C24  2025               	addwfc	btemp^0,w,c
 12735  010C26  6E25               	movwf	btemp^0,c
 12736  010C28  0EFD               	movlw	-3
 12737  010C2A  0060  F097  FFE3   	movff	btemp,plusw1
 12738                           
 12739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 12740  010C30  D0AF               	goto	l10371
 12741  010C32                     l10343:
 12742                           
 12743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 12744                           ;stkvar	_pp @ sp[(-56)+50]
 12745  010C32  0EFA               	movlw	-6
 12746  010C34  006F FF8C  F025    	movff	plusw1,btemp
 12747  010C3A  0EFB               	movlw	-5
 12748  010C3C  50E3               	movf	plusw1,w,c
 12749  010C3E  1025               	iorwf	btemp^0,w,c
 12750  010C40  A4D8               	btfss	status,2,c
 12751  010C42  D070               	goto	l10363
 12752                           
 12753                           ;stkvar	_ne @ sp[(-56)+46]
 12754  010C44  0EF7               	movlw	-9
 12755  010C46  AEE3               	btfss	plusw1,7,c
 12756  010C48  D06D               	goto	l10363
 12757                           
 12758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 12759                           ;stkvar	_n @ sp[(-56)+32]
 12760  010C4A  0EE8               	movlw	-24
 12761  010C4C  006F FF8C  F02F    	movff	plusw1,btemp+10
 12762  010C52  0EE9               	movlw	-23
 12763  010C54  006F FF8C  F030    	movff	plusw1,btemp+11
 12764  010C5A  0E94               	movlw	low _dbuf
 12765  010C5C  242F               	addwf	(btemp+10)^0,w,c
 12766  010C5E  6ED9               	movwf	fsr2l,c
 12767  010C60  0E03               	movlw	high _dbuf
 12768  010C62  2030               	addwfc	(btemp+11)^0,w,c
 12769  010C64  6EDA               	movwf	fsr2h,c
 12770  010C66  0E2E               	movlw	46
 12771  010C68  6EDF               	movwf	indf2,c
 12772                           
 12773                           ;stkvar	_n @ sp[(-56)+32]
 12774  010C6A  0EE8               	movlw	-24
 12775  010C6C  50E3               	movf	plusw1,w,c
 12776  010C6E  0F01               	addlw	1
 12777  010C70  6E25               	movwf	btemp^0,c
 12778  010C72  0EE8               	movlw	-24
 12779  010C74  0060  F097  FFE3   	movff	btemp,plusw1
 12780  010C7A  6A25               	clrf	btemp^0,c
 12781  010C7C  0EE9               	movlw	-23
 12782  010C7E  50E3               	movf	plusw1,w,c
 12783  010C80  2025               	addwfc	btemp^0,w,c
 12784  010C82  6E25               	movwf	btemp^0,c
 12785  010C84  0EE9               	movlw	-23
 12786  010C86  0060  F097  FFE3   	movff	btemp,plusw1
 12787                           
 12788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 12789                           ;stkvar	_w @ sp[(-56)+38]
 12790  010C8C  50E1               	movf	fsr1l,w,c
 12791  010C8E  0FEE               	addlw	-18
 12792  010C90  6ED9               	movwf	fsr2l,c
 12793  010C92  50E2               	movf	fsr1h,w,c
 12794  010C94  6EDA               	movwf	fsr2h,c
 12795  010C96  0EFF               	movlw	255
 12796  010C98  22DA               	addwfc	fsr2h,f,c
 12797  010C9A  06DE               	decf	postinc2,f,c
 12798  010C9C  0E00               	movlw	0
 12799  010C9E  5ADD               	subwfb	postdec2,f,c
 12800                           
 12801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 12802  010CA0  0E01               	movlw	1
 12803  010CA2  6E2F               	movwf	(btemp+10)^0,c
 12804  010CA4  0E00               	movlw	0
 12805  010CA6  6E30               	movwf	(btemp+11)^0,c
 12806                           
 12807                           ;stkvar	_pp @ sp[(-56)+50]
 12808  010CA8  0EFA               	movlw	-6
 12809  010CAA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12810  010CB0  0EFB               	movlw	-5
 12811  010CB2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12812  010CB8  D035               	goto	l10363
 12813  010CBA                     l10355:
 12814                           
 12815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 12816                           ;stkvar	_n @ sp[(-56)+32]
 12817  010CBA  0EE8               	movlw	-24
 12818  010CBC  006F FF8C  F02F    	movff	plusw1,btemp+10
 12819  010CC2  0EE9               	movlw	-23
 12820  010CC4  006F FF8C  F030    	movff	plusw1,btemp+11
 12821  010CCA  0E94               	movlw	low _dbuf
 12822  010CCC  242F               	addwf	(btemp+10)^0,w,c
 12823  010CCE  6ED9               	movwf	fsr2l,c
 12824  010CD0  0E03               	movlw	high _dbuf
 12825  010CD2  2030               	addwfc	(btemp+11)^0,w,c
 12826  010CD4  6EDA               	movwf	fsr2h,c
 12827  010CD6  0E30               	movlw	48
 12828  010CD8  6EDF               	movwf	indf2,c
 12829                           
 12830                           ;stkvar	_n @ sp[(-56)+32]
 12831  010CDA  0EE8               	movlw	-24
 12832  010CDC  50E3               	movf	plusw1,w,c
 12833  010CDE  0F01               	addlw	1
 12834  010CE0  6E25               	movwf	btemp^0,c
 12835  010CE2  0EE8               	movlw	-24
 12836  010CE4  0060  F097  FFE3   	movff	btemp,plusw1
 12837  010CEA  6A25               	clrf	btemp^0,c
 12838  010CEC  0EE9               	movlw	-23
 12839  010CEE  50E3               	movf	plusw1,w,c
 12840  010CF0  2025               	addwfc	btemp^0,w,c
 12841  010CF2  6E25               	movwf	btemp^0,c
 12842  010CF4  0EE9               	movlw	-23
 12843  010CF6  0060  F097  FFE3   	movff	btemp,plusw1
 12844                           
 12845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 12846                           ;stkvar	_w @ sp[(-56)+38]
 12847  010CFC  50E1               	movf	fsr1l,w,c
 12848  010CFE  0FEE               	addlw	-18
 12849  010D00  6ED9               	movwf	fsr2l,c
 12850  010D02  50E2               	movf	fsr1h,w,c
 12851  010D04  6EDA               	movwf	fsr2h,c
 12852  010D06  0EFF               	movlw	255
 12853  010D08  22DA               	addwfc	fsr2h,f,c
 12854  010D0A  06DE               	decf	postinc2,f,c
 12855  010D0C  0E00               	movlw	0
 12856  010D0E  5ADD               	subwfb	postdec2,f,c
 12857                           
 12858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 12859                           ;stkvar	_t @ sp[(-56)+52]
 12860  010D10  50E1               	movf	fsr1l,w,c
 12861  010D12  0FFC               	addlw	-4
 12862  010D14  6ED9               	movwf	fsr2l,c
 12863  010D16  50E2               	movf	fsr1h,w,c
 12864  010D18  6EDA               	movwf	fsr2h,c
 12865  010D1A  0EFF               	movlw	255
 12866  010D1C  22DA               	addwfc	fsr2h,f,c
 12867  010D1E  06DE               	decf	postinc2,f,c
 12868  010D20  0E00               	movlw	0
 12869  010D22  5ADD               	subwfb	postdec2,f,c
 12870  010D24                     l10363:
 12871                           
 12872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 12873                           ;stkvar	_t @ sp[(-56)+52]
 12874  010D24  0EFC               	movlw	-4
 12875  010D26  006F FF8C  F025    	movff	plusw1,btemp
 12876  010D2C  0EFD               	movlw	-3
 12877  010D2E  50E3               	movf	plusw1,w,c
 12878  010D30  1025               	iorwf	btemp^0,w,c
 12879  010D32  A4D8               	btfss	status,2,c
 12880  010D34  D7C2               	goto	l10355
 12881                           
 12882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 12883                           ;stkvar	_n @ sp[(-56)+32]
 12884  010D36  0EE8               	movlw	-24
 12885  010D38  006F FF8C  F02F    	movff	plusw1,btemp+10
 12886  010D3E  0EE9               	movlw	-23
 12887  010D40  006F FF8C  F030    	movff	plusw1,btemp+11
 12888  010D46  0E94               	movlw	low _dbuf
 12889  010D48  242F               	addwf	(btemp+10)^0,w,c
 12890  010D4A  6ED9               	movwf	fsr2l,c
 12891  010D4C  0E03               	movlw	high _dbuf
 12892  010D4E  2030               	addwfc	(btemp+11)^0,w,c
 12893  010D50  6EDA               	movwf	fsr2h,c
 12894                           
 12895                           ;stkvar	_d @ sp[(-56)+44]
 12896  010D52  0EF4               	movlw	-12
 12897  010D54  50E3               	movf	plusw1,w,c
 12898  010D56  0F30               	addlw	48
 12899  010D58  6EDF               	movwf	indf2,c
 12900                           
 12901                           ;stkvar	_n @ sp[(-56)+32]
 12902  010D5A  0EE8               	movlw	-24
 12903  010D5C  50E3               	movf	plusw1,w,c
 12904  010D5E  0F01               	addlw	1
 12905  010D60  6E25               	movwf	btemp^0,c
 12906  010D62  0EE8               	movlw	-24
 12907  010D64  0060  F097  FFE3   	movff	btemp,plusw1
 12908  010D6A  6A25               	clrf	btemp^0,c
 12909  010D6C  0EE9               	movlw	-23
 12910  010D6E  50E3               	movf	plusw1,w,c
 12911  010D70  2025               	addwfc	btemp^0,w,c
 12912  010D72  6E25               	movwf	btemp^0,c
 12913  010D74  0EE9               	movlw	-23
 12914  010D76  0060  F097  FFE3   	movff	btemp,plusw1
 12915                           
 12916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 12917                           ;stkvar	_w @ sp[(-56)+38]
 12918  010D7C  50E1               	movf	fsr1l,w,c
 12919  010D7E  0FEE               	addlw	-18
 12920  010D80  6ED9               	movwf	fsr2l,c
 12921  010D82  50E2               	movf	fsr1h,w,c
 12922  010D84  6EDA               	movwf	fsr2h,c
 12923  010D86  0EFF               	movlw	255
 12924  010D88  22DA               	addwfc	fsr2h,f,c
 12925  010D8A  06DE               	decf	postinc2,f,c
 12926  010D8C  0E00               	movlw	0
 12927  010D8E  5ADD               	subwfb	postdec2,f,c
 12928  010D90                     l10371:
 12929                           
 12930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 12931                           ;stkvar	_u @ sp[(-56)+12]
 12932  010D90  0ED4               	movlw	-44
 12933  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 12934  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 12935  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 12936  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12937                           
 12938                           ;stkvar	_l @ sp[(-60)+20]
 12939  010DAA  0ED8               	movlw	-40
 12940  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 12941  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 12942  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12943  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12944  010DC4  EC14  F093         	call	___flmul	;wreg free
 12945  010DC8  0060  F097  FFE6   	movff	btemp,postinc1
 12946  010DCE  0060  F09B  FFE6   	movff	btemp+1,postinc1
 12947  010DD4  0060  F09F  FFE6   	movff	btemp+2,postinc1
 12948  010DDA  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 12949                           
 12950                           ;stkvar	_h @ sp[(-60)+24]
 12951  010DE0  0EDC               	movlw	-36
 12952  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 12953  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 12954  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 12955  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12956  010DFA  EC74  F0C4         	call	___flsub	;wreg free
 12957                           
 12958                           ;stkvar	_h @ sp[(-56)+24]
 12959  010DFE  0EE0               	movlw	-32
 12960  010E00  0060  F097  FFE3   	movff	btemp,plusw1
 12961  010E06  0EE1               	movlw	-31
 12962  010E08  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12963  010E0E  0EE2               	movlw	-30
 12964  010E10  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12965  010E16  0EE3               	movlw	-29
 12966  010E18  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12967                           
 12968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 12969  010E1E  0E00               	movlw	0
 12970  010E20  6EE6               	movwf	postinc1,c
 12971  010E22  0E00               	movlw	0
 12972  010E24  6EE6               	movwf	postinc1,c
 12973  010E26  0E20               	movlw	32
 12974  010E28  6EE6               	movwf	postinc1,c
 12975  010E2A  0E41               	movlw	65
 12976  010E2C  6EE6               	movwf	postinc1,c
 12977                           
 12978                           ;stkvar	_u @ sp[(-60)+12]
 12979  010E2E  0ED0               	movlw	-48
 12980  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 12981  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 12982  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12983  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 12984  010E48  EC07  F09B         	call	___fldiv	;wreg free
 12985                           
 12986                           ;stkvar	_u @ sp[(-56)+12]
 12987  010E4C  0ED4               	movlw	-44
 12988  010E4E  0060  F097  FFE3   	movff	btemp,plusw1
 12989  010E54  0ED5               	movlw	-43
 12990  010E56  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12991  010E5C  0ED6               	movlw	-42
 12992  010E5E  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12993  010E64  0ED7               	movlw	-41
 12994  010E66  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12995                           
 12996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 12997                           ;stkvar	_ne @ sp[(-56)+46]
 12998  010E6C  50E1               	movf	fsr1l,w,c
 12999  010E6E  0FF6               	addlw	-10
 13000  010E70  6ED9               	movwf	fsr2l,c
 13001  010E72  50E2               	movf	fsr1h,w,c
 13002  010E74  6EDA               	movwf	fsr2h,c
 13003  010E76  0EFF               	movlw	255
 13004  010E78  22DA               	addwfc	fsr2h,f,c
 13005  010E7A  06DE               	decf	postinc2,f,c
 13006  010E7C  0E00               	movlw	0
 13007  010E7E  5ADD               	subwfb	postdec2,f,c
 13008                           
 13009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 13010                           ;stkvar	_i @ sp[(-56)+36]
 13011  010E80  0EEC               	movlw	-20
 13012  010E82  50E3               	movf	plusw1,w,c
 13013  010E84  0F01               	addlw	1
 13014  010E86  6E25               	movwf	btemp^0,c
 13015  010E88  0EEC               	movlw	-20
 13016  010E8A  0060  F097  FFE3   	movff	btemp,plusw1
 13017  010E90  6A25               	clrf	btemp^0,c
 13018  010E92  0EED               	movlw	-19
 13019  010E94  50E3               	movf	plusw1,w,c
 13020  010E96  2025               	addwfc	btemp^0,w,c
 13021  010E98  6E25               	movwf	btemp^0,c
 13022  010E9A  0EED               	movlw	-19
 13023  010E9C  0060  F097  FFE3   	movff	btemp,plusw1
 13024  010EA2                     l10379:
 13025                           
 13026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 13027                           ;stkvar	_m @ sp[(-56)+48]
 13028                           ;stkvar	_i @ sp[(-56)+36]
 13029  010EA2  50E1               	movf	fsr1l,w,c
 13030  010EA4  0FEC               	addlw	-20
 13031  010EA6  6ED9               	movwf	fsr2l,c
 13032  010EA8  50E2               	movf	fsr1h,w,c
 13033  010EAA  6EDA               	movwf	fsr2h,c
 13034  010EAC  0EFF               	movlw	255
 13035  010EAE  22DA               	addwfc	fsr2h,f,c
 13036  010EB0  0EF8               	movlw	-8
 13037  010EB2  50E3               	movf	plusw1,w,c
 13038  010EB4  5CDE               	subwf	postinc2,w,c
 13039  010EB6  50DE               	movf	postinc2,w,c
 13040  010EB8  0A80               	xorlw	128
 13041  010EBA  6E25               	movwf	btemp^0,c
 13042  010EBC  0EF9               	movlw	-7
 13043  010EBE  50E3               	movf	plusw1,w,c
 13044  010EC0  0A80               	xorlw	128
 13045  010EC2  5825               	subwfb	btemp^0,w,c
 13046  010EC4  B0D8               	btfsc	status,0,c
 13047  010EC6  D00E               	goto	u9930
 13048                           
 13049                           ;stkvar	_n @ sp[(-56)+32]
 13050  010EC8  0EE9               	movlw	-23
 13051  010ECA  BEE3               	btfsc	plusw1,7,c
 13052  010ECC  D633               	goto	l10329
 13053  010ECE  0EE9               	movlw	-23
 13054  010ED0  50E3               	movf	plusw1,w,c
 13055  010ED2  E108               	bnz	u9930
 13056  010ED4  0EE8               	movlw	-24
 13057  010ED6  006F FF8C  F025    	movff	plusw1,btemp
 13058  010EDC  0E4B               	movlw	75
 13059  010EDE  5E25               	subwf	btemp^0,f,c
 13060  010EE0  A0D8               	btfss	status,0,c
 13061  010EE2  D628               	goto	l10329
 13062  010EE4                     u9930:
 13063                           
 13064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 13065                           ;stkvar	_pp @ sp[(-56)+50]
 13066  010EE4  0EFA               	movlw	-6
 13067  010EE6  006F FF8C  F025    	movff	plusw1,btemp
 13068  010EEC  0EFB               	movlw	-5
 13069  010EEE  50E3               	movf	plusw1,w,c
 13070  010EF0  1025               	iorwf	btemp^0,w,c
 13071  010EF2  B4D8               	btfsc	status,2,c
 13072  010EF4  A80E               	btfss	_flags^0,4,c
 13073  010EF6  D021               	goto	l10391
 13074                           
 13075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 13076                           ;stkvar	_n @ sp[(-56)+32]
 13077  010EF8  0EE8               	movlw	-24
 13078  010EFA  006F FF8C  F02F    	movff	plusw1,btemp+10
 13079  010F00  0EE9               	movlw	-23
 13080  010F02  006F FF8C  F030    	movff	plusw1,btemp+11
 13081  010F08  0E94               	movlw	low _dbuf
 13082  010F0A  242F               	addwf	(btemp+10)^0,w,c
 13083  010F0C  6ED9               	movwf	fsr2l,c
 13084  010F0E  0E03               	movlw	high _dbuf
 13085  010F10  2030               	addwfc	(btemp+11)^0,w,c
 13086  010F12  6EDA               	movwf	fsr2h,c
 13087  010F14  0E2E               	movlw	46
 13088  010F16  6EDF               	movwf	indf2,c
 13089                           
 13090                           ;stkvar	_n @ sp[(-56)+32]
 13091  010F18  0EE8               	movlw	-24
 13092  010F1A  50E3               	movf	plusw1,w,c
 13093  010F1C  0F01               	addlw	1
 13094  010F1E  6E25               	movwf	btemp^0,c
 13095  010F20  0EE8               	movlw	-24
 13096  010F22  0060  F097  FFE3   	movff	btemp,plusw1
 13097  010F28  6A25               	clrf	btemp^0,c
 13098  010F2A  0EE9               	movlw	-23
 13099  010F2C  50E3               	movf	plusw1,w,c
 13100  010F2E  2025               	addwfc	btemp^0,w,c
 13101  010F30  6E25               	movwf	btemp^0,c
 13102  010F32  0EE9               	movlw	-23
 13103  010F34  0060  F097  FFE3   	movff	btemp,plusw1
 13104  010F3A                     l10391:
 13105                           
 13106                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 13107                           ;stkvar	_n @ sp[(-56)+32]
 13108  010F3A  0EE8               	movlw	-24
 13109  010F3C  006F FF8C  F02F    	movff	plusw1,btemp+10
 13110  010F42  0EE9               	movlw	-23
 13111  010F44  006F FF8C  F030    	movff	plusw1,btemp+11
 13112  010F4A  0E94               	movlw	low _dbuf
 13113  010F4C  242F               	addwf	(btemp+10)^0,w,c
 13114  010F4E  6ED9               	movwf	fsr2l,c
 13115  010F50  0E03               	movlw	high _dbuf
 13116  010F52  2030               	addwfc	(btemp+11)^0,w,c
 13117  010F54  6EDA               	movwf	fsr2h,c
 13118  010F56  0E00               	movlw	0
 13119  010F58  6EDF               	movwf	indf2,c
 13120                           
 13121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 13122                           ;stkvar	_nmode @ sp[(-56)+55]
 13123  010F5A  0EFF               	movlw	-1
 13124  010F5C  006F FF8C  F025    	movff	plusw1,btemp
 13125  010F62  0E65               	movlw	101
 13126  010F64  1825               	xorwf	btemp^0,w,c
 13127  010F66  A4D8               	btfss	status,2,c
 13128  010F68  EF16  F081         	goto	l10195
 13129                           
 13130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 13131  010F6C  0E4F               	movlw	79
 13132  010F6E  6E2F               	movwf	(btemp+10)^0,c
 13133  010F70  0E00               	movlw	0
 13134  010F72  6E30               	movwf	(btemp+11)^0,c
 13135                           
 13136                           ;stkvar	_i @ sp[(-56)+36]
 13137  010F74  0EEC               	movlw	-20
 13138  010F76  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13139  010F7C  0EED               	movlw	-19
 13140  010F7E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13141                           
 13142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 13143                           ;stkvar	_i @ sp[(-56)+36]
 13144  010F84  0EEC               	movlw	-20
 13145  010F86  006F FF8C  F02F    	movff	plusw1,btemp+10
 13146  010F8C  0EED               	movlw	-19
 13147  010F8E  006F FF8C  F030    	movff	plusw1,btemp+11
 13148  010F94  0E94               	movlw	low _dbuf
 13149  010F96  242F               	addwf	(btemp+10)^0,w,c
 13150  010F98  6ED9               	movwf	fsr2l,c
 13151  010F9A  0E03               	movlw	high _dbuf
 13152  010F9C  2030               	addwfc	(btemp+11)^0,w,c
 13153  010F9E  6EDA               	movwf	fsr2h,c
 13154  010FA0  0E00               	movlw	0
 13155  010FA2  6EDF               	movwf	indf2,c
 13156                           
 13157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 13158                           ;stkvar	_sign @ sp[(-56)+42]
 13159  010FA4  0EF2               	movlw	-14
 13160  010FA6  6AE3               	clrf	plusw1,c
 13161  010FA8  0EF3               	movlw	-13
 13162  010FAA  6AE3               	clrf	plusw1,c
 13163                           
 13164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 13165                           ;stkvar	_e @ sp[(-56)+34]
 13166  010FAC  0EEB               	movlw	-21
 13167  010FAE  AEE3               	btfss	plusw1,7,c
 13168  010FB0  D012               	goto	l10405
 13169                           
 13170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 13171  010FB2  0E01               	movlw	1
 13172  010FB4  6E2F               	movwf	(btemp+10)^0,c
 13173  010FB6  0E00               	movlw	0
 13174  010FB8  6E30               	movwf	(btemp+11)^0,c
 13175                           
 13176                           ;stkvar	_sign @ sp[(-56)+42]
 13177  010FBA  0EF2               	movlw	-14
 13178  010FBC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13179  010FC2  0EF3               	movlw	-13
 13180  010FC4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13181                           
 13182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 13183                           ;stkvar	_e @ sp[(-56)+34]
 13184                           ;stkvar	_e @ sp[(-56)+34]
 13185  010FCA  0EEA               	movlw	-22
 13186  010FCC  6CE3               	negf	plusw1,c
 13187  010FCE  0EEB               	movlw	-21
 13188  010FD0  1EE3               	comf	plusw1,f,c
 13189  010FD2  B0D8               	btfsc	status,0,c
 13190  010FD4  2AE3               	incf	plusw1,f,c
 13191  010FD6                     l10405:
 13192                           
 13193                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 13194  010FD6  0E02               	movlw	2
 13195  010FD8  6E2F               	movwf	(btemp+10)^0,c
 13196  010FDA  0E00               	movlw	0
 13197  010FDC  6E30               	movwf	(btemp+11)^0,c
 13198                           
 13199                           ;stkvar	_p @ sp[(-56)+40]
 13200  010FDE  0EF0               	movlw	-16
 13201  010FE0  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13202  010FE6  0EF1               	movlw	-15
 13203  010FE8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13204                           
 13205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13206  010FEE  D051               	goto	l10417
 13207  010FF0                     l10407:
 13208                           
 13209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 13210                           ;stkvar	_i @ sp[(-56)+36]
 13211  010FF0  50E1               	movf	fsr1l,w,c
 13212  010FF2  0FEC               	addlw	-20
 13213  010FF4  6ED9               	movwf	fsr2l,c
 13214  010FF6  50E2               	movf	fsr1h,w,c
 13215  010FF8  6EDA               	movwf	fsr2h,c
 13216  010FFA  0EFF               	movlw	255
 13217  010FFC  22DA               	addwfc	fsr2h,f,c
 13218  010FFE  06DE               	decf	postinc2,f,c
 13219  011000  0E00               	movlw	0
 13220  011002  5ADD               	subwfb	postdec2,f,c
 13221                           
 13222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 13223                           ;stkvar	_i @ sp[(-56)+36]
 13224  011004  0EEC               	movlw	-20
 13225  011006  006F FF8C  F02F    	movff	plusw1,btemp+10
 13226  01100C  0EED               	movlw	-19
 13227  01100E  006F FF8C  F030    	movff	plusw1,btemp+11
 13228  011014  0E94               	movlw	low _dbuf
 13229  011016  242F               	addwf	(btemp+10)^0,w,c
 13230  011018  6ED9               	movwf	fsr2l,c
 13231  01101A  0E03               	movlw	high _dbuf
 13232  01101C  2030               	addwfc	(btemp+11)^0,w,c
 13233  01101E  6EDA               	movwf	fsr2h,c
 13234  011020  0E0A               	movlw	10
 13235  011022  6EE6               	movwf	postinc1,c
 13236  011024  0E00               	movlw	0
 13237  011026  6EE6               	movwf	postinc1,c
 13238                           
 13239                           ;stkvar	_e @ sp[(-58)+34]
 13240  011028  0EE8               	movlw	-24
 13241  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 13242  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 13243  011036  ECE4  F0B7         	call	___awmod	;wreg free
 13244  01103A  5025               	movf	btemp^0,w,c
 13245  01103C  0F30               	addlw	48
 13246  01103E  6EDF               	movwf	indf2,c
 13247                           
 13248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 13249  011040  0E0A               	movlw	10
 13250  011042  6EE6               	movwf	postinc1,c
 13251  011044  0E00               	movlw	0
 13252  011046  6EE6               	movwf	postinc1,c
 13253                           
 13254                           ;stkvar	_e @ sp[(-58)+34]
 13255  011048  0EE8               	movlw	-24
 13256  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 13257  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 13258  011056  EC80  F0B5         	call	___awdiv	;wreg free
 13259                           
 13260                           ;stkvar	_e @ sp[(-56)+34]
 13261  01105A  0EEA               	movlw	-22
 13262  01105C  0060  F097  FFE3   	movff	btemp,plusw1
 13263  011062  0EEB               	movlw	-21
 13264  011064  0060  F09B  FFE3   	movff	btemp+1,plusw1
 13265                           
 13266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 13267                           ;stkvar	_p @ sp[(-56)+40]
 13268  01106A  50E1               	movf	fsr1l,w,c
 13269  01106C  0FF0               	addlw	-16
 13270  01106E  6ED9               	movwf	fsr2l,c
 13271  011070  50E2               	movf	fsr1h,w,c
 13272  011072  6EDA               	movwf	fsr2h,c
 13273  011074  0EFF               	movlw	255
 13274  011076  22DA               	addwfc	fsr2h,f,c
 13275  011078  06DE               	decf	postinc2,f,c
 13276  01107A  0E00               	movlw	0
 13277  01107C  5ADD               	subwfb	postdec2,f,c
 13278                           
 13279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 13280                           ;stkvar	_w @ sp[(-56)+38]
 13281  01107E  50E1               	movf	fsr1l,w,c
 13282  011080  0FEE               	addlw	-18
 13283  011082  6ED9               	movwf	fsr2l,c
 13284  011084  50E2               	movf	fsr1h,w,c
 13285  011086  6EDA               	movwf	fsr2h,c
 13286  011088  0EFF               	movlw	255
 13287  01108A  22DA               	addwfc	fsr2h,f,c
 13288  01108C  06DE               	decf	postinc2,f,c
 13289  01108E  0E00               	movlw	0
 13290  011090  5ADD               	subwfb	postdec2,f,c
 13291  011092                     l10417:
 13292                           
 13293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13294                           ;stkvar	_e @ sp[(-56)+34]
 13295  011092  0EEA               	movlw	-22
 13296  011094  006F FF8C  F025    	movff	plusw1,btemp
 13297  01109A  0EEB               	movlw	-21
 13298  01109C  50E3               	movf	plusw1,w,c
 13299  01109E  1025               	iorwf	btemp^0,w,c
 13300  0110A0  A4D8               	btfss	status,2,c
 13301  0110A2  D7A6               	goto	l10407
 13302                           
 13303                           ;stkvar	_p @ sp[(-56)+40]
 13304  0110A4  0EF1               	movlw	-15
 13305  0110A6  BEE3               	btfsc	plusw1,7,c
 13306  0110A8  D007               	goto	u9990
 13307  0110AA  0EF1               	movlw	-15
 13308  0110AC  50E3               	movf	plusw1,w,c
 13309  0110AE  E1A0               	bnz	l10407
 13310  0110B0  0EF0               	movlw	-16
 13311  0110B2  04E3               	decf	plusw1,w,c
 13312  0110B4  B0D8               	btfsc	status,0,c
 13313  0110B6  D79C               	goto	l10407
 13314  0110B8                     u9990:
 13315                           
 13316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 13317                           ;stkvar	_i @ sp[(-56)+36]
 13318  0110B8  50E1               	movf	fsr1l,w,c
 13319  0110BA  0FEC               	addlw	-20
 13320  0110BC  6ED9               	movwf	fsr2l,c
 13321  0110BE  50E2               	movf	fsr1h,w,c
 13322  0110C0  6EDA               	movwf	fsr2h,c
 13323  0110C2  0EFF               	movlw	255
 13324  0110C4  22DA               	addwfc	fsr2h,f,c
 13325  0110C6  06DE               	decf	postinc2,f,c
 13326  0110C8  0E00               	movlw	0
 13327  0110CA  5ADD               	subwfb	postdec2,f,c
 13328                           
 13329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 13330                           ;stkvar	_sign @ sp[(-56)+42]
 13331  0110CC  0EF2               	movlw	-14
 13332  0110CE  006F FF8C  F025    	movff	plusw1,btemp
 13333  0110D4  0EF3               	movlw	-13
 13334  0110D6  50E3               	movf	plusw1,w,c
 13335  0110D8  1025               	iorwf	btemp^0,w,c
 13336  0110DA  A4D8               	btfss	status,2,c
 13337  0110DC  D002               	goto	l10427
 13338  0110DE  0E2B               	movlw	43
 13339  0110E0  D001               	goto	L11
 13340  0110E2                     l10427:
 13341  0110E2  0E2D               	movlw	45
 13342  0110E4                     L11:
 13343  0110E4  6E2F               	movwf	(btemp+10)^0,c
 13344  0110E6  0E00               	movlw	0
 13345  0110E8  6E30               	movwf	(btemp+11)^0,c
 13346                           
 13347                           ;stkvar	_efgtoa$4998 @ sp[(-56)+4]
 13348  0110EA  0ECC               	movlw	-52
 13349  0110EC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13350  0110F2  0ECD               	movlw	-51
 13351  0110F4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13352                           
 13353                           ;stkvar	_efgtoa$4998 @ sp[(-56)+4]
 13354                           ;stkvar	_i @ sp[(-56)+36]
 13355  0110FA  0EEC               	movlw	-20
 13356  0110FC  006F FF8C  F02F    	movff	plusw1,btemp+10
 13357  011102  0EED               	movlw	-19
 13358  011104  006F FF8C  F030    	movff	plusw1,btemp+11
 13359  01110A  0E94               	movlw	low _dbuf
 13360  01110C  242F               	addwf	(btemp+10)^0,w,c
 13361  01110E  6ED9               	movwf	fsr2l,c
 13362  011110  0E03               	movlw	high _dbuf
 13363  011112  2030               	addwfc	(btemp+11)^0,w,c
 13364  011114  6EDA               	movwf	fsr2h,c
 13365  011116  0ECC               	movlw	-52
 13366  011118  006F FF8F FFDF     	movff	plusw1,indf2
 13367                           
 13368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 13369                           ;stkvar	_w @ sp[(-56)+38]
 13370  01111E  50E1               	movf	fsr1l,w,c
 13371  011120  0FEE               	addlw	-18
 13372  011122  6ED9               	movwf	fsr2l,c
 13373  011124  50E2               	movf	fsr1h,w,c
 13374  011126  6EDA               	movwf	fsr2h,c
 13375  011128  0EFF               	movlw	255
 13376  01112A  22DA               	addwfc	fsr2h,f,c
 13377  01112C  06DE               	decf	postinc2,f,c
 13378  01112E  0E00               	movlw	0
 13379  011130  5ADD               	subwfb	postdec2,f,c
 13380                           
 13381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 13382                           ;stkvar	_i @ sp[(-56)+36]
 13383  011132  50E1               	movf	fsr1l,w,c
 13384  011134  0FEC               	addlw	-20
 13385  011136  6ED9               	movwf	fsr2l,c
 13386  011138  50E2               	movf	fsr1h,w,c
 13387  01113A  6EDA               	movwf	fsr2h,c
 13388  01113C  0EFF               	movlw	255
 13389  01113E  22DA               	addwfc	fsr2h,f,c
 13390  011140  06DE               	decf	postinc2,f,c
 13391  011142  0E00               	movlw	0
 13392  011144  5ADD               	subwfb	postdec2,f,c
 13393  011146  0EBF               	movlw	191
 13394  011148  6E2F               	movwf	(btemp+10)^0,c
 13395  01114A  0EFF               	movlw	255
 13396  01114C  6E30               	movwf	(btemp+11)^0,c
 13397                           
 13398                           ;stkvar	_c @ sp[(-56)+-7]
 13399  01114E  0EC1               	movlw	-63
 13400  011150  50E3               	movf	plusw1,w,c
 13401  011152  6E2D               	movwf	(btemp+8)^0,c
 13402  011154  6A2E               	clrf	(btemp+9)^0,c
 13403  011156  502F               	movf	(btemp+10)^0,w,c
 13404  011158  262D               	addwf	(btemp+8)^0,f,c
 13405  01115A  5030               	movf	(btemp+11)^0,w,c
 13406  01115C  222E               	addwfc	(btemp+9)^0,f,c
 13407  01115E  502E               	movf	(btemp+9)^0,w,c
 13408  011160  E106               	bnz	u10010
 13409  011162  0E1A               	movlw	26
 13410  011164  5C2D               	subwf	(btemp+8)^0,w,c
 13411  011166  B0D8               	btfsc	status,0,c
 13412  011168  D002               	goto	u10010
 13413  01116A  0E01               	movlw	1
 13414  01116C  D001               	goto	u10020
 13415  01116E                     u10010:
 13416  01116E  0E00               	movlw	0
 13417  011170                     u10020:
 13418  011170  6E2F               	movwf	(btemp+10)^0,c
 13419  011172  6A30               	clrf	(btemp+11)^0,c
 13420                           
 13421                           ;stkvar	_efgtoa$5000 @ sp[(-56)+0]
 13422  011174  0EC8               	movlw	-56
 13423  011176  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13424  01117C  0EC9               	movlw	-55
 13425  01117E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13426                           
 13427                           ;stkvar	_efgtoa$5000 @ sp[(-56)+0]
 13428  011184  0EC8               	movlw	-56
 13429  011186  006F FF8C  F025    	movff	plusw1,btemp
 13430  01118C  0EC9               	movlw	-55
 13431  01118E  50E3               	movf	plusw1,w,c
 13432  011190  1025               	iorwf	btemp^0,w,c
 13433  011192  A4D8               	btfss	status,2,c
 13434  011194  D002               	goto	l10443
 13435  011196  0E65               	movlw	101
 13436  011198  D001               	goto	L12
 13437  01119A                     l10443:
 13438  01119A  0E45               	movlw	69
 13439  01119C                     L12:
 13440  01119C  6E2F               	movwf	(btemp+10)^0,c
 13441  01119E  0E00               	movlw	0
 13442  0111A0  6E30               	movwf	(btemp+11)^0,c
 13443                           
 13444                           ;stkvar	_efgtoa$4999 @ sp[(-56)+2]
 13445  0111A2  0ECA               	movlw	-54
 13446  0111A4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13447  0111AA  0ECB               	movlw	-53
 13448  0111AC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13449                           
 13450                           ;stkvar	_efgtoa$4999 @ sp[(-56)+2]
 13451                           ;stkvar	_i @ sp[(-56)+36]
 13452  0111B2  0EEC               	movlw	-20
 13453  0111B4  006F FF8C  F02F    	movff	plusw1,btemp+10
 13454  0111BA  0EED               	movlw	-19
 13455  0111BC  006F FF8C  F030    	movff	plusw1,btemp+11
 13456  0111C2  0E94               	movlw	low _dbuf
 13457  0111C4  242F               	addwf	(btemp+10)^0,w,c
 13458  0111C6  6ED9               	movwf	fsr2l,c
 13459  0111C8  0E03               	movlw	high _dbuf
 13460  0111CA  2030               	addwfc	(btemp+11)^0,w,c
 13461  0111CC  6EDA               	movwf	fsr2h,c
 13462  0111CE  0ECA               	movlw	-54
 13463  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 13464                           
 13465                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 13466                           ;stkvar	_w @ sp[(-56)+38]
 13467  0111D6  50E1               	movf	fsr1l,w,c
 13468  0111D8  0FEE               	addlw	-18
 13469  0111DA  6ED9               	movwf	fsr2l,c
 13470  0111DC  50E2               	movf	fsr1h,w,c
 13471  0111DE  6EDA               	movwf	fsr2h,c
 13472  0111E0  0EFF               	movlw	255
 13473  0111E2  22DA               	addwfc	fsr2h,f,c
 13474  0111E4  06DE               	decf	postinc2,f,c
 13475  0111E6  0E00               	movlw	0
 13476  0111E8  5ADD               	subwfb	postdec2,f,c
 13477                           
 13478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 13479                           ;stkvar	_i @ sp[(-56)+36]
 13480  0111EA  0EEC               	movlw	-20
 13481  0111EC  006F FF8C  F02F    	movff	plusw1,btemp+10
 13482  0111F2  0EED               	movlw	-19
 13483  0111F4  006F FF8C  F030    	movff	plusw1,btemp+11
 13484  0111FA  0E94               	movlw	low _dbuf
 13485  0111FC  242F               	addwf	(btemp+10)^0,w,c
 13486  0111FE  6E2D               	movwf	(btemp+8)^0,c
 13487  011200  0E03               	movlw	high _dbuf
 13488  011202  2030               	addwfc	(btemp+11)^0,w,c
 13489  011204  6E2E               	movwf	(btemp+9)^0,c
 13490  011206  0060  F0B7  FFE6   	movff	btemp+8,postinc1
 13491  01120C  0060  F0BB  FFE6   	movff	btemp+9,postinc1
 13492                           
 13493                           ;stkvar	_n @ sp[(-58)+32]
 13494  011212  0E94               	movlw	low _dbuf
 13495  011214  6E2F               	movwf	(btemp+10)^0,c
 13496  011216  0E03               	movlw	high _dbuf
 13497  011218  6E30               	movwf	(btemp+11)^0,c
 13498  01121A  0EE6               	movlw	-26
 13499  01121C  50E3               	movf	plusw1,w,c
 13500  01121E  262F               	addwf	(btemp+10)^0,f,c
 13501  011220  0EE7               	movlw	-25
 13502  011222  50E3               	movf	plusw1,w,c
 13503  011224  2230               	addwfc	(btemp+11)^0,f,c
 13504  011226  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 13505  01122C  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 13506  011232  EC7B  F0BB         	call	_strcpy	;wreg free
 13507  011236  EF16  F081         	goto	l10195
 13508  01123A                     l2044:
 13509                           
 13510                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 13511  01123A  0EC1               	movlw	193
 13512  01123C  26E1               	addwf	fsr1l,f,c
 13513  01123E  0EFF               	movlw	255
 13514  011240  22E2               	addwfc	fsr1h,f,c
 13515  011242  0012               	return		;funcret
 13516  011244                     __end_of_efgtoa:
 13517                           	opt callstack 0
 13518                           
 13519 ;; *************** function _tolower *****************
 13520 ;; Defined at:
 13521 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 13522 ;; Parameters:    Size  Location     Type
 13523 ;;  c               2  [STACK] int 
 13524 ;; Auto vars:     Size  Location     Type
 13525 ;;		None
 13526 ;; Return value:  Size  Location     Type
 13527 ;;                  2  [STACK] int 
 13528 ;; Registers used:
 13529 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13530 ;; Tracked objects:
 13531 ;;		On entry : 0/0
 13532 ;;		On exit  : 0/0
 13533 ;;		Unchanged: 0/0
 13534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13539 ;;Total ram usage:        0 bytes
 13540 ;; Hardware stack levels used:    1
 13541 ;; Hardware stack levels required when called:    8
 13542 ;; This function calls:
 13543 ;;		_isupper
 13544 ;; This function is called by:
 13545 ;;		_efgtoa
 13546 ;;		_vfpfcnvrt
 13547 ;; This function uses a reentrant model
 13548 ;;
 13549                           
 13550                           	psect	text49
 13551  01817E                     __ptext49:
 13552                           	opt callstack 0
 13553  01817E                     _tolower:
 13554                           	opt callstack 0
 13555                           
 13556                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13557  01817E  52E6               	movf	postinc1,f,c
 13558  018180  52E6               	movf	postinc1,f,c
 13559                           
 13560                           ;stkvar	_c @ sp[(-2)+-2]
 13561                           
 13562                           ;incstack = 0
 13563  018182  0EFC               	movlw	-4
 13564  018184  50E3               	movf	plusw1,w,c
 13565  018186  0FBF               	addlw	191
 13566  018188  6E2F               	movwf	(btemp+10)^0,c
 13567  01818A  0EFD               	movlw	-3
 13568  01818C  006F FF8C  F030    	movff	plusw1,btemp+11
 13569  018192  0EFF               	movlw	255
 13570  018194  2230               	addwfc	(btemp+11)^0,f,c
 13571  018196  5030               	movf	(btemp+11)^0,w,c
 13572  018198  E106               	bnz	u4890
 13573  01819A  0E1A               	movlw	26
 13574  01819C  5C2F               	subwf	(btemp+10)^0,w,c
 13575  01819E  B0D8               	btfsc	status,0,c
 13576  0181A0  D002               	goto	u4890
 13577  0181A2  0E01               	movlw	1
 13578  0181A4  D001               	goto	u4900
 13579  0181A6                     u4890:
 13580  0181A6  0E00               	movlw	0
 13581  0181A8                     u4900:
 13582  0181A8  6E2F               	movwf	(btemp+10)^0,c
 13583  0181AA  6A30               	clrf	(btemp+11)^0,c
 13584                           
 13585                           ;stkvar	_tolower$5666 @ sp[(-2)+0]
 13586  0181AC  0EFE               	movlw	-2
 13587  0181AE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13588  0181B4  0EFF               	movlw	-1
 13589  0181B6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13590                           
 13591                           ;stkvar	_tolower$5666 @ sp[(-2)+0]
 13592  0181BC  0EFE               	movlw	-2
 13593  0181BE  006F FF8C  F025    	movff	plusw1,btemp
 13594  0181C4  0EFF               	movlw	-1
 13595  0181C6  50E3               	movf	plusw1,w,c
 13596  0181C8  1025               	iorwf	btemp^0,w,c
 13597  0181CA  B4D8               	btfsc	status,2,c
 13598  0181CC  D00D               	goto	l6679
 13599                           
 13600                           ;stkvar	_c @ sp[(-2)+-2]
 13601  0181CE  0EFC               	movlw	-4
 13602  0181D0  006F FF8C  F025    	movff	plusw1,btemp
 13603  0181D6  0EFD               	movlw	-3
 13604  0181D8  006F FF8C  F026    	movff	plusw1,btemp+1
 13605  0181DE  0E20               	movlw	32
 13606  0181E0  1225               	iorwf	btemp^0,f,c
 13607  0181E2  0E00               	movlw	0
 13608  0181E4  1226               	iorwf	(btemp+1)^0,f,c
 13609  0181E6  D008               	goto	l3067
 13610  0181E8                     l6679:
 13611                           
 13612                           ;stkvar	_c @ sp[(-2)+-2]
 13613  0181E8  0EFC               	movlw	-4
 13614  0181EA  006F FF8C  F025    	movff	plusw1,btemp
 13615  0181F0  0EFD               	movlw	-3
 13616  0181F2  006F FF8C  F026    	movff	plusw1,btemp+1
 13617  0181F8                     l3067:
 13618                           
 13619                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13620  0181F8  52E5               	movf	postdec1,f,c
 13621  0181FA  52E5               	movf	postdec1,f,c
 13622  0181FC  52E5               	movf	postdec1,f,c
 13623  0181FE  52E5               	movf	postdec1,f,c
 13624  018200  0012               	return		;funcret
 13625  018202                     __end_of_tolower:
 13626                           	opt callstack 0
 13627                           
 13628 ;; *************** function _isupper *****************
 13629 ;; Defined at:
 13630 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 13631 ;; Parameters:    Size  Location     Type
 13632 ;;  c               2  [STACK] int 
 13633 ;; Auto vars:     Size  Location     Type
 13634 ;;		None
 13635 ;; Return value:  Size  Location     Type
 13636 ;;                  2  [STACK] int 
 13637 ;; Registers used:
 13638 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13639 ;; Tracked objects:
 13640 ;;		On entry : 0/0
 13641 ;;		On exit  : 0/0
 13642 ;;		Unchanged: 0/0
 13643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13648 ;;Total ram usage:        0 bytes
 13649 ;; Hardware stack levels used:    1
 13650 ;; Hardware stack levels required when called:    7
 13651 ;; This function calls:
 13652 ;;		Nothing
 13653 ;; This function is called by:
 13654 ;;		_efgtoa
 13655 ;;		_xtoa
 13656 ;;		_vfpfcnvrt
 13657 ;;		_tolower
 13658 ;; This function uses a reentrant model
 13659 ;;
 13660                           
 13661                           	psect	text50
 13662  018D24                     __ptext50:
 13663                           	opt callstack 0
 13664  018D24                     _isupper:
 13665                           	opt callstack 16
 13666                           
 13667                           ;stkvar	_c @ sp[(0)+-2]
 13668                           
 13669                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13670                           ;incstack = 0
 13671  018D24  0EFE               	movlw	-2
 13672  018D26  50E3               	movf	plusw1,w,c
 13673  018D28  0FBF               	addlw	191
 13674  018D2A  6E2F               	movwf	(btemp+10)^0,c
 13675  018D2C  0EFF               	movlw	-1
 13676  018D2E  006F FF8C  F030    	movff	plusw1,btemp+11
 13677  018D34  0EFF               	movlw	255
 13678  018D36  2230               	addwfc	(btemp+11)^0,f,c
 13679  018D38  5030               	movf	(btemp+11)^0,w,c
 13680  018D3A  E106               	bnz	u4710
 13681  018D3C  0E1A               	movlw	26
 13682  018D3E  5C2F               	subwf	(btemp+10)^0,w,c
 13683  018D40  B0D8               	btfsc	status,0,c
 13684  018D42  D002               	goto	u4710
 13685  018D44  0E01               	movlw	1
 13686  018D46  D001               	goto	u4720
 13687  018D48                     u4710:
 13688  018D48  0E00               	movlw	0
 13689  018D4A                     u4720:
 13690  018D4A  6E25               	movwf	btemp^0,c
 13691  018D4C  6A26               	clrf	(btemp+1)^0,c
 13692                           
 13693                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13694  018D4E  52E5               	movf	postdec1,f,c
 13695  018D50  52E5               	movf	postdec1,f,c
 13696  018D52  0012               	return		;funcret
 13697  018D54                     __end_of_isupper:
 13698                           	opt callstack 0
 13699                           
 13700 ;; *************** function _strcpy *****************
 13701 ;; Defined at:
 13702 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 13703 ;; Parameters:    Size  Location     Type
 13704 ;;  dest            2  [STACK] PTR unsigned char 
 13705 ;;		 -> dbuf(80), 
 13706 ;;  src             2  [STACK] PTR const unsigned char 
 13707 ;;		 -> STR_51(4), STR_50(4), STR_47(4), STR_46(4), 
 13708 ;;		 -> dbuf(80), 
 13709 ;; Auto vars:     Size  Location     Type
 13710 ;;  d               2  [STACK] PTR unsigned char 
 13711 ;;		 -> dbuf(80), 
 13712 ;;  s               2  [STACK] PTR const unsigned char 
 13713 ;;		 -> STR_51(4), STR_50(4), STR_47(4), STR_46(4), 
 13714 ;;		 -> dbuf(80), 
 13715 ;; Return value:  Size  Location     Type
 13716 ;;                  2  [STACK] PTR unsigned char 
 13717 ;; Registers used:
 13718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 13719 ;; Tracked objects:
 13720 ;;		On entry : 0/0
 13721 ;;		On exit  : 0/0
 13722 ;;		Unchanged: 0/0
 13723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13728 ;;Total ram usage:        0 bytes
 13729 ;; Hardware stack levels used:    1
 13730 ;; Hardware stack levels required when called:    7
 13731 ;; This function calls:
 13732 ;;		Nothing
 13733 ;; This function is called by:
 13734 ;;		_efgtoa
 13735 ;; This function uses a reentrant model
 13736 ;;
 13737                           
 13738                           	psect	text51
 13739  0176F6                     __ptext51:
 13740                           	opt callstack 0
 13741  0176F6                     _strcpy:
 13742                           	opt callstack 0
 13743                           
 13744                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13745  0176F6  52E6               	movf	postinc1,f,c
 13746  0176F8  52E6               	movf	postinc1,f,c
 13747  0176FA  52E6               	movf	postinc1,f,c
 13748  0176FC  52E6               	movf	postinc1,f,c
 13749                           
 13750                           ;stkvar	_src @ sp[(-4)+-4]
 13751                           
 13752                           ;incstack = 0
 13753  0176FE  0EF8               	movlw	-8
 13754  017700  006F FF8C  F02F    	movff	plusw1,btemp+10
 13755  017706  0EF9               	movlw	-7
 13756  017708  006F FF8C  F030    	movff	plusw1,btemp+11
 13757                           
 13758                           ;stkvar	_s @ sp[(-4)+2]
 13759  01770E  0EFF               	movlw	-1
 13760  017710  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13761  017716  0EFE               	movlw	-2
 13762  017718  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13763                           
 13764                           ;stkvar	_dest @ sp[(-4)+-2]
 13765  01771E  0EFA               	movlw	-6
 13766  017720  006F FF8C  F02F    	movff	plusw1,btemp+10
 13767  017726  0EFB               	movlw	-5
 13768  017728  006F FF8C  F030    	movff	plusw1,btemp+11
 13769                           
 13770                           ;stkvar	_d @ sp[(-4)+0]
 13771  01772E  0EFD               	movlw	-3
 13772  017730  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13773  017736  0EFC               	movlw	-4
 13774  017738  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13775  01773E                     l10069:
 13776                           
 13777                           ;stkvar	_s @ sp[(-4)+2]
 13778  01773E  50E1               	movf	fsr1l,w,c
 13779  017740  0FFE               	addlw	-2
 13780  017742  6ED9               	movwf	fsr2l,c
 13781  017744  50E2               	movf	fsr1h,w,c
 13782  017746  6EDA               	movwf	fsr2h,c
 13783  017748  0EFF               	movlw	255
 13784  01774A  22DA               	addwfc	fsr2h,f,c
 13785  01774C  006F FF7C  F02F    	movff	indf2,btemp+10
 13786  017752  0E01               	movlw	1
 13787  017754  26DE               	addwf	postinc2,f,c
 13788  017756  006F FF7C  F030    	movff	indf2,btemp+11
 13789  01775C  0E00               	movlw	0
 13790  01775E  22DD               	addwfc	postdec2,f,c
 13791  017760  0060  F0BF  FFF6   	movff	btemp+10,tblptrl
 13792  017766  0060  F0C3  FFF7   	movff	btemp+11,tblptrh
 13793  01776C  0E00               	movlw	low (__mediumconst shr (0+16))
 13794  01776E  6EF8               	movwf	tblptru,c
 13795                           
 13796                           ;stkvar	_d @ sp[(-4)+0]
 13797  017770  50E1               	movf	fsr1l,w,c
 13798  017772  0FFC               	addlw	-4
 13799  017774  6ED9               	movwf	fsr2l,c
 13800  017776  50E2               	movf	fsr1h,w,c
 13801  017778  6EDA               	movwf	fsr2h,c
 13802  01777A  0EFF               	movlw	255
 13803  01777C  22DA               	addwfc	fsr2h,f,c
 13804  01777E  006F FF7C  F02F    	movff	indf2,btemp+10
 13805  017784  0E01               	movlw	1
 13806  017786  26DE               	addwf	postinc2,f,c
 13807  017788  006F FF7C  F030    	movff	indf2,btemp+11
 13808  01778E  0E00               	movlw	0
 13809  017790  22DD               	addwfc	postdec2,f,c
 13810  017792  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
 13811  017798  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
 13812  01779E  0E1F               	movlw	(high __ramtop+-1)
 13813  0177A0  64F7               	cpfsgt	tblptrh,c
 13814  0177A2  D003               	bra	u9327
 13815  0177A4  0008               	tblrd		*
 13816  0177A6  50F5               	movf	tablat,w,c
 13817  0177A8  D007               	bra	u9320
 13818  0177AA                     u9327:
 13819  0177AA  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13820  0177B0  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13821  0177B6  50EF               	movf	indf0,w,c
 13822  0177B8                     u9320:
 13823  0177B8  6EDF               	movwf	indf2,c
 13824  0177BA  50DF               	movf	indf2,w,c
 13825  0177BC  A4D8               	btfss	status,2,c
 13826  0177BE  D7BF               	goto	l10069
 13827                           
 13828                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 13829  0177C0  0EF8               	movlw	248
 13830  0177C2  26E1               	addwf	fsr1l,f,c
 13831  0177C4  0EFF               	movlw	255
 13832  0177C6  22E2               	addwfc	fsr1h,f,c
 13833  0177C8  0012               	return		;funcret
 13834  0177CA                     __end_of_strcpy:
 13835                           	opt callstack 0
 13836                           
 13837 ;; *************** function _floorf *****************
 13838 ;; Defined at:
 13839 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 13840 ;; Parameters:    Size  Location     Type
 13841 ;;  x               4  [STACK] float 
 13842 ;; Auto vars:     Size  Location     Type
 13843 ;;  u               4  [STACK] struct .
 13844 ;;  m               4  [STACK] unsigned long 
 13845 ;;  e               2  [STACK] int 
 13846 ;; Return value:  Size  Location     Type
 13847 ;;                  4  [STACK] float 
 13848 ;; Registers used:
 13849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13850 ;; Tracked objects:
 13851 ;;		On entry : 0/0
 13852 ;;		On exit  : 0/0
 13853 ;;		Unchanged: 0/0
 13854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13859 ;;Total ram usage:        0 bytes
 13860 ;; Hardware stack levels used:    1
 13861 ;; Hardware stack levels required when called:    7
 13862 ;; This function calls:
 13863 ;;		Nothing
 13864 ;; This function is called by:
 13865 ;;		_efgtoa
 13866 ;; This function uses a reentrant model
 13867 ;;
 13868                           
 13869                           	psect	text52
 13870  01486E                     __ptext52:
 13871                           	opt callstack 0
 13872  01486E                     _floorf:
 13873                           	opt callstack 0
 13874                           
 13875                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13876  01486E  0E0A               	movlw	10
 13877  014870  26E1               	addwf	fsr1l,f,c
 13878  014872  0E00               	movlw	0
 13879  014874  22E2               	addwfc	fsr1h,f,c
 13880                           
 13881                           ;incstack = 0
 13882  014876  0060  F254  F02D   	movff	floorf@F524,btemp+8
 13883  01487C  0060  F258  F02E   	movff	floorf@F524+1,btemp+9
 13884  014882  0060  F25C  F02F   	movff	floorf@F524+2,btemp+10
 13885  014888  0060  F260  F030   	movff	floorf@F524+3,btemp+11
 13886                           
 13887                           ;stkvar	_u @ sp[(-10)+0]
 13888  01488E  0EF6               	movlw	-10
 13889  014890  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 13890  014896  0EF7               	movlw	-9
 13891  014898  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 13892  01489E  0EF8               	movlw	-8
 13893  0148A0  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13894  0148A6  0EF9               	movlw	-7
 13895  0148A8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13896                           
 13897                           ;stkvar	_x @ sp[(-10)+-4]
 13898  0148AE  0EF2               	movlw	-14
 13899  0148B0  006F FF8C  F02D    	movff	plusw1,btemp+8
 13900  0148B6  0EF3               	movlw	-13
 13901  0148B8  006F FF8C  F02E    	movff	plusw1,btemp+9
 13902  0148BE  0EF4               	movlw	-12
 13903  0148C0  006F FF8C  F02F    	movff	plusw1,btemp+10
 13904  0148C6  0EF5               	movlw	-11
 13905  0148C8  006F FF8C  F030    	movff	plusw1,btemp+11
 13906                           
 13907                           ;stkvar	_u @ sp[(-10)+0]
 13908  0148CE  0EF6               	movlw	-10
 13909  0148D0  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 13910  0148D6  0EF7               	movlw	-9
 13911  0148D8  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 13912  0148DE  0EF8               	movlw	-8
 13913  0148E0  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13914  0148E6  0EF9               	movlw	-7
 13915  0148E8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13916  0148EE  0E81               	movlw	129
 13917  0148F0  6E2F               	movwf	(btemp+10)^0,c
 13918  0148F2  0EFF               	movlw	255
 13919  0148F4  6E30               	movwf	(btemp+11)^0,c
 13920                           
 13921                           ;stkvar	_u @ sp[(-10)+0]
 13922  0148F6  0EF6               	movlw	-10
 13923  0148F8  006F FF8C  F029    	movff	plusw1,btemp+4
 13924  0148FE  0EF7               	movlw	-9
 13925  014900  006F FF8C  F02A    	movff	plusw1,btemp+5
 13926  014906  0EF8               	movlw	-8
 13927  014908  006F FF8C  F02B    	movff	plusw1,btemp+6
 13928  01490E  0EF9               	movlw	-7
 13929  014910  006F FF8C  F02C    	movff	plusw1,btemp+7
 13930  014916  0E18               	movlw	24
 13931  014918  D005               	goto	u4920
 13932  01491A                     u4925:
 13933  01491A  90D8               	bcf	status,0,c
 13934  01491C  322C               	rrcf	(btemp+7)^0,f,c
 13935  01491E  322B               	rrcf	(btemp+6)^0,f,c
 13936  014920  322A               	rrcf	(btemp+5)^0,f,c
 13937  014922  3229               	rrcf	(btemp+4)^0,f,c
 13938  014924                     u4920:
 13939  014924  2EE8               	decfsz	wreg,f,c
 13940  014926  D7F9               	goto	u4925
 13941  014928  0060  F0A4  F02D   	movff	btemp+4,btemp+8
 13942  01492E  0060  F0A8  F02E   	movff	btemp+5,btemp+9
 13943  014934  0EFF               	movlw	255
 13944  014936  162D               	andwf	(btemp+8)^0,f,c
 13945  014938  0E00               	movlw	0
 13946  01493A  162E               	andwf	(btemp+9)^0,f,c
 13947  01493C  502F               	movf	(btemp+10)^0,w,c
 13948  01493E  262D               	addwf	(btemp+8)^0,f,c
 13949  014940  5030               	movf	(btemp+11)^0,w,c
 13950  014942  222E               	addwfc	(btemp+9)^0,f,c
 13951                           
 13952                           ;stkvar	_e @ sp[(-10)+8]
 13953  014944  0EFE               	movlw	-2
 13954  014946  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 13955  01494C  0EFF               	movlw	-1
 13956  01494E  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 13957                           
 13958                           ;stkvar	_e @ sp[(-10)+8]
 13959  014954  0EFF               	movlw	-1
 13960  014956  BEE3               	btfsc	plusw1,7,c
 13961  014958  D019               	goto	l6693
 13962  01495A  0EFF               	movlw	-1
 13963  01495C  50E3               	movf	plusw1,w,c
 13964  01495E  E108               	bnz	u4930
 13965  014960  0EFE               	movlw	-2
 13966  014962  006F FF8C  F025    	movff	plusw1,btemp
 13967  014968  0E17               	movlw	23
 13968  01496A  5E25               	subwf	btemp^0,f,c
 13969  01496C  A0D8               	btfss	status,0,c
 13970  01496E  D00E               	goto	l6693
 13971  014970                     u4930:
 13972                           
 13973                           ;stkvar	_x @ sp[(-10)+-4]
 13974  014970  0EF2               	movlw	-14
 13975  014972  006F FF8C  F025    	movff	plusw1,btemp
 13976  014978  0EF3               	movlw	-13
 13977  01497A  006F FF8C  F026    	movff	plusw1,btemp+1
 13978  014980  0EF4               	movlw	-12
 13979  014982  006F FF8C  F027    	movff	plusw1,btemp+2
 13980  014988  0EF5               	movlw	-11
 13981  01498A  D11F               	goto	L13
 13982  01498C                     l6693:
 13983                           
 13984                           ;stkvar	_e @ sp[(-10)+8]
 13985  01498C  0EFF               	movlw	-1
 13986  01498E  BEE3               	btfsc	plusw1,7,c
 13987  014990  D0B4               	goto	l6709
 13988                           
 13989                           ;stkvar	_e @ sp[(-10)+8]
 13990  014992  0EFE               	movlw	-2
 13991  014994  006F FF8C  F030    	movff	plusw1,btemp+11
 13992  01499A  0EFF               	movlw	255
 13993  01499C  6E29               	movwf	(btemp+4)^0,c
 13994  01499E  0EFF               	movlw	255
 13995  0149A0  6E2A               	movwf	(btemp+5)^0,c
 13996  0149A2  0E7F               	movlw	127
 13997  0149A4  6E2B               	movwf	(btemp+6)^0,c
 13998  0149A6  0E00               	movlw	0
 13999  0149A8  6E2C               	movwf	(btemp+7)^0,c
 14000  0149AA                     u4955:
 14001  0149AA  6630               	tstfsz	(btemp+11)^0,c
 14002  0149AC  D001               	goto	u4956
 14003  0149AE  D007               	goto	u4957
 14004  0149B0                     u4956:
 14005  0149B0  342C               	rlcf	(btemp+7)^0,w,c
 14006  0149B2  322C               	rrcf	(btemp+7)^0,f,c
 14007  0149B4  322B               	rrcf	(btemp+6)^0,f,c
 14008  0149B6  322A               	rrcf	(btemp+5)^0,f,c
 14009  0149B8  3229               	rrcf	(btemp+4)^0,f,c
 14010  0149BA  2E30               	decfsz	(btemp+11)^0,f,c
 14011  0149BC  D7F6               	goto	u4955
 14012  0149BE                     u4957:
 14013                           
 14014                           ;stkvar	_m @ sp[(-10)+4]
 14015  0149BE  0EFA               	movlw	-6
 14016  0149C0  0060  F0A7  FFE3   	movff	btemp+4,plusw1
 14017  0149C6  0EFB               	movlw	-5
 14018  0149C8  0060  F0AB  FFE3   	movff	btemp+5,plusw1
 14019  0149CE  0EFC               	movlw	-4
 14020  0149D0  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 14021  0149D6  0EFD               	movlw	-3
 14022  0149D8  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 14023                           
 14024                           ;stkvar	_m @ sp[(-10)+4]
 14025                           ;stkvar	_u @ sp[(-10)+0]
 14026  0149DE  0EF6               	movlw	-10
 14027  0149E0  006F FF8C  F02D    	movff	plusw1,btemp+8
 14028  0149E6  0EF7               	movlw	-9
 14029  0149E8  006F FF8C  F02E    	movff	plusw1,btemp+9
 14030  0149EE  0EF8               	movlw	-8
 14031  0149F0  006F FF8C  F02F    	movff	plusw1,btemp+10
 14032  0149F6  0EF9               	movlw	-7
 14033  0149F8  006F FF8C  F030    	movff	plusw1,btemp+11
 14034  0149FE  0EFA               	movlw	-6
 14035  014A00  50E3               	movf	plusw1,w,c
 14036  014A02  162D               	andwf	(btemp+8)^0,f,c
 14037  014A04  0EFB               	movlw	-5
 14038  014A06  50E3               	movf	plusw1,w,c
 14039  014A08  162E               	andwf	(btemp+9)^0,f,c
 14040  014A0A  0EFC               	movlw	-4
 14041  014A0C  50E3               	movf	plusw1,w,c
 14042  014A0E  162F               	andwf	(btemp+10)^0,f,c
 14043  014A10  0EFD               	movlw	-3
 14044  014A12  50E3               	movf	plusw1,w,c
 14045  014A14  1630               	andwf	(btemp+11)^0,f,c
 14046  014A16  502D               	movf	(btemp+8)^0,w,c
 14047  014A18  102E               	iorwf	(btemp+9)^0,w,c
 14048  014A1A  102F               	iorwf	(btemp+10)^0,w,c
 14049  014A1C  1030               	iorwf	(btemp+11)^0,w,c
 14050  014A1E  B4D8               	btfsc	status,2,c
 14051  014A20  D7A7               	goto	u4930
 14052                           
 14053                           ;stkvar	_u @ sp[(-10)+0]
 14054  014A22  0EF6               	movlw	-10
 14055  014A24  006F FF8C  F02D    	movff	plusw1,btemp+8
 14056  014A2A  0EF7               	movlw	-9
 14057  014A2C  006F FF8C  F02E    	movff	plusw1,btemp+9
 14058  014A32  0EF8               	movlw	-8
 14059  014A34  006F FF8C  F02F    	movff	plusw1,btemp+10
 14060  014A3A  0EF9               	movlw	-7
 14061  014A3C  006F FF8C  F030    	movff	plusw1,btemp+11
 14062  014A42  0E20               	movlw	32
 14063  014A44  D005               	goto	u4970
 14064  014A46                     u4975:
 14065  014A46  90D8               	bcf	status,0,c
 14066  014A48  3230               	rrcf	(btemp+11)^0,f,c
 14067  014A4A  322F               	rrcf	(btemp+10)^0,f,c
 14068  014A4C  322E               	rrcf	(btemp+9)^0,f,c
 14069  014A4E  322D               	rrcf	(btemp+8)^0,f,c
 14070  014A50                     u4970:
 14071  014A50  2EE8               	decfsz	wreg,f,c
 14072  014A52  D7F9               	goto	u4975
 14073  014A54  502D               	movf	(btemp+8)^0,w,c
 14074  014A56  B4D8               	btfsc	status,2,c
 14075  014A58  D028               	goto	l6707
 14076                           
 14077                           ;stkvar	_m @ sp[(-10)+4]
 14078                           ;stkvar	_u @ sp[(-10)+0]
 14079  014A5A  0EF6               	movlw	-10
 14080  014A5C  50E3               	movf	plusw1,w,c
 14081  014A5E  6E25               	movwf	btemp^0,c
 14082  014A60  0EFA               	movlw	-6
 14083  014A62  50E3               	movf	plusw1,w,c
 14084  014A64  2625               	addwf	btemp^0,f,c
 14085  014A66  0EF6               	movlw	-10
 14086  014A68  0060  F097  FFE3   	movff	btemp,plusw1
 14087  014A6E  0EF7               	movlw	-9
 14088  014A70  50E3               	movf	plusw1,w,c
 14089  014A72  6E25               	movwf	btemp^0,c
 14090  014A74  0EFB               	movlw	-5
 14091  014A76  50E3               	movf	plusw1,w,c
 14092  014A78  2225               	addwfc	btemp^0,f,c
 14093  014A7A  0EF7               	movlw	-9
 14094  014A7C  0060  F097  FFE3   	movff	btemp,plusw1
 14095  014A82  0EF8               	movlw	-8
 14096  014A84  50E3               	movf	plusw1,w,c
 14097  014A86  6E25               	movwf	btemp^0,c
 14098  014A88  0EFC               	movlw	-4
 14099  014A8A  50E3               	movf	plusw1,w,c
 14100  014A8C  2225               	addwfc	btemp^0,f,c
 14101  014A8E  0EF8               	movlw	-8
 14102  014A90  0060  F097  FFE3   	movff	btemp,plusw1
 14103  014A96  0EF9               	movlw	-7
 14104  014A98  50E3               	movf	plusw1,w,c
 14105  014A9A  6E25               	movwf	btemp^0,c
 14106  014A9C  0EFD               	movlw	-3
 14107  014A9E  50E3               	movf	plusw1,w,c
 14108  014AA0  2225               	addwfc	btemp^0,f,c
 14109  014AA2  0EF9               	movlw	-7
 14110  014AA4  0060  F097  FFE3   	movff	btemp,plusw1
 14111  014AAA                     l6707:
 14112                           
 14113                           ;stkvar	_m @ sp[(-10)+4]
 14114  014AAA  0EFA               	movlw	-6
 14115  014AAC  006F FF8C  F02D    	movff	plusw1,btemp+8
 14116  014AB2  0EFB               	movlw	-5
 14117  014AB4  006F FF8C  F02E    	movff	plusw1,btemp+9
 14118  014ABA  0EFC               	movlw	-4
 14119  014ABC  006F FF8C  F02F    	movff	plusw1,btemp+10
 14120  014AC2  0EFD               	movlw	-3
 14121  014AC4  006F FF8C  F030    	movff	plusw1,btemp+11
 14122  014ACA  1C2D               	comf	(btemp+8)^0,w,c
 14123  014ACC  6E29               	movwf	(btemp+4)^0,c
 14124  014ACE  1C2E               	comf	(btemp+9)^0,w,c
 14125  014AD0  6E2A               	movwf	(btemp+5)^0,c
 14126  014AD2  1C2F               	comf	(btemp+10)^0,w,c
 14127  014AD4  6E2B               	movwf	(btemp+6)^0,c
 14128  014AD6  1C30               	comf	(btemp+11)^0,w,c
 14129  014AD8  6E2C               	movwf	(btemp+7)^0,c
 14130                           
 14131                           ;stkvar	_u @ sp[(-10)+0]
 14132  014ADA  50E1               	movf	fsr1l,w,c
 14133  014ADC  0FF6               	addlw	-10
 14134  014ADE  6ED9               	movwf	fsr2l,c
 14135  014AE0  50E2               	movf	fsr1h,w,c
 14136  014AE2  6EDA               	movwf	fsr2h,c
 14137  014AE4  0EFF               	movlw	255
 14138  014AE6  22DA               	addwfc	fsr2h,f,c
 14139  014AE8  5029               	movf	(btemp+4)^0,w,c
 14140  014AEA  16DE               	andwf	postinc2,f,c
 14141  014AEC  502A               	movf	(btemp+5)^0,w,c
 14142  014AEE  16DE               	andwf	postinc2,f,c
 14143  014AF0  502B               	movf	(btemp+6)^0,w,c
 14144  014AF2  16DE               	andwf	postinc2,f,c
 14145  014AF4  502C               	movf	(btemp+7)^0,w,c
 14146  014AF6  16DE               	andwf	postinc2,f,c
 14147  014AF8  D05B               	goto	l6717
 14148  014AFA                     l6709:
 14149                           
 14150                           ;stkvar	_u @ sp[(-10)+0]
 14151  014AFA  0EF6               	movlw	-10
 14152  014AFC  006F FF8C  F02D    	movff	plusw1,btemp+8
 14153  014B02  0EF7               	movlw	-9
 14154  014B04  006F FF8C  F02E    	movff	plusw1,btemp+9
 14155  014B0A  0EF8               	movlw	-8
 14156  014B0C  006F FF8C  F02F    	movff	plusw1,btemp+10
 14157  014B12  0EF9               	movlw	-7
 14158  014B14  006F FF8C  F030    	movff	plusw1,btemp+11
 14159  014B1A  0E20               	movlw	32
 14160  014B1C  D005               	goto	u4990
 14161  014B1E                     u4995:
 14162  014B1E  90D8               	bcf	status,0,c
 14163  014B20  3230               	rrcf	(btemp+11)^0,f,c
 14164  014B22  322F               	rrcf	(btemp+10)^0,f,c
 14165  014B24  322E               	rrcf	(btemp+9)^0,f,c
 14166  014B26  322D               	rrcf	(btemp+8)^0,f,c
 14167  014B28                     u4990:
 14168  014B28  2EE8               	decfsz	wreg,f,c
 14169  014B2A  D7F9               	goto	u4995
 14170  014B2C  662D               	tstfsz	(btemp+8)^0,c
 14171  014B2E  D009               	goto	l6713
 14172                           
 14173                           ;stkvar	_u @ sp[(-10)+0]
 14174  014B30  0EF6               	movlw	-10
 14175  014B32  6AE3               	clrf	plusw1,c
 14176  014B34  0EF7               	movlw	-9
 14177  014B36  6AE3               	clrf	plusw1,c
 14178  014B38  0EF8               	movlw	-8
 14179  014B3A  6AE3               	clrf	plusw1,c
 14180  014B3C  0EF9               	movlw	-7
 14181  014B3E  6AE3               	clrf	plusw1,c
 14182  014B40  D037               	goto	l6717
 14183  014B42                     l6713:
 14184                           
 14185                           ;stkvar	_u @ sp[(-10)+0]
 14186  014B42  0EF6               	movlw	-10
 14187  014B44  006F FF8C  F02D    	movff	plusw1,btemp+8
 14188  014B4A  0EF7               	movlw	-9
 14189  014B4C  006F FF8C  F02E    	movff	plusw1,btemp+9
 14190  014B52  0EF8               	movlw	-8
 14191  014B54  006F FF8C  F02F    	movff	plusw1,btemp+10
 14192  014B5A  0EF9               	movlw	-7
 14193  014B5C  006F FF8C  F030    	movff	plusw1,btemp+11
 14194  014B62  90D8               	bcf	status,0,c
 14195  014B64  342D               	rlcf	(btemp+8)^0,w,c
 14196  014B66  6E29               	movwf	(btemp+4)^0,c
 14197  014B68  342E               	rlcf	(btemp+9)^0,w,c
 14198  014B6A  6E2A               	movwf	(btemp+5)^0,c
 14199  014B6C  342F               	rlcf	(btemp+10)^0,w,c
 14200  014B6E  6E2B               	movwf	(btemp+6)^0,c
 14201  014B70  3430               	rlcf	(btemp+11)^0,w,c
 14202  014B72  6E2C               	movwf	(btemp+7)^0,c
 14203  014B74  5029               	movf	(btemp+4)^0,w,c
 14204  014B76  102A               	iorwf	(btemp+5)^0,w,c
 14205  014B78  102B               	iorwf	(btemp+6)^0,w,c
 14206  014B7A  102C               	iorwf	(btemp+7)^0,w,c
 14207  014B7C  B4D8               	btfsc	status,2,c
 14208  014B7E  D018               	goto	l6717
 14209  014B80  0E00               	movlw	0
 14210  014B82  6E2D               	movwf	(btemp+8)^0,c
 14211  014B84  0E00               	movlw	0
 14212  014B86  6E2E               	movwf	(btemp+9)^0,c
 14213  014B88  0E80               	movlw	128
 14214  014B8A  6E2F               	movwf	(btemp+10)^0,c
 14215  014B8C  0EBF               	movlw	191
 14216  014B8E  6E30               	movwf	(btemp+11)^0,c
 14217                           
 14218                           ;stkvar	_u @ sp[(-10)+0]
 14219  014B90  0EF6               	movlw	-10
 14220  014B92  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14221  014B98  0EF7               	movlw	-9
 14222  014B9A  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14223  014BA0  0EF8               	movlw	-8
 14224  014BA2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14225  014BA8  0EF9               	movlw	-7
 14226  014BAA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14227  014BB0                     l6717:
 14228                           
 14229                           ;stkvar	_u @ sp[(-10)+0]
 14230  014BB0  0EF6               	movlw	-10
 14231  014BB2  006F FF8C  F025    	movff	plusw1,btemp
 14232  014BB8  0EF7               	movlw	-9
 14233  014BBA  006F FF8C  F026    	movff	plusw1,btemp+1
 14234  014BC0  0EF8               	movlw	-8
 14235  014BC2  006F FF8C  F027    	movff	plusw1,btemp+2
 14236  014BC8  0EF9               	movlw	-7
 14237  014BCA                     L13:
 14238  014BCA  006F FF8C  F028    	movff	plusw1,btemp+3
 14239                           
 14240                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14241  014BD0  0EF2               	movlw	242
 14242  014BD2  26E1               	addwf	fsr1l,f,c
 14243  014BD4  0EFF               	movlw	255
 14244  014BD6  22E2               	addwfc	fsr1h,f,c
 14245  014BD8  0012               	return		;funcret
 14246  014BDA                     __end_of_floorf:
 14247                           	opt callstack 0
 14248                           
 14249 ;; *************** function ___fpclassifyf *****************
 14250 ;; Defined at:
 14251 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 14252 ;; Parameters:    Size  Location     Type
 14253 ;;  x               4  [STACK] float 
 14254 ;; Auto vars:     Size  Location     Type
 14255 ;;  u               4  [STACK] struct .
 14256 ;;  e               2  [STACK] int 
 14257 ;; Return value:  Size  Location     Type
 14258 ;;                  2  [STACK] int 
 14259 ;; Registers used:
 14260 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 14261 ;; Tracked objects:
 14262 ;;		On entry : 0/0
 14263 ;;		On exit  : 0/0
 14264 ;;		Unchanged: 0/0
 14265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14270 ;;Total ram usage:        0 bytes
 14271 ;; Hardware stack levels used:    1
 14272 ;; Hardware stack levels required when called:    7
 14273 ;; This function calls:
 14274 ;;		Nothing
 14275 ;; This function is called by:
 14276 ;;		_efgtoa
 14277 ;; This function uses a reentrant model
 14278 ;;
 14279                           
 14280                           	psect	text53
 14281  016696                     __ptext53:
 14282                           	opt callstack 0
 14283  016696                     ___fpclassifyf:
 14284                           	opt callstack 0
 14285                           
 14286                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14287  016696  0E06               	movlw	6
 14288  016698  26E1               	addwf	fsr1l,f,c
 14289  01669A  0E00               	movlw	0
 14290  01669C  22E2               	addwfc	fsr1h,f,c
 14291                           
 14292                           ;incstack = 0
 14293  01669E  0060  F264  F02D   	movff	___fpclassifyf@F463,btemp+8
 14294  0166A4  0060  F268  F02E   	movff	___fpclassifyf@F463+1,btemp+9
 14295  0166AA  0060  F26C  F02F   	movff	___fpclassifyf@F463+2,btemp+10
 14296  0166B0  0060  F270  F030   	movff	___fpclassifyf@F463+3,btemp+11
 14297                           
 14298                           ;stkvar	_u @ sp[(-6)+0]
 14299  0166B6  0EFA               	movlw	-6
 14300  0166B8  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14301  0166BE  0EFB               	movlw	-5
 14302  0166C0  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14303  0166C6  0EFC               	movlw	-4
 14304  0166C8  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14305  0166CE  0EFD               	movlw	-3
 14306  0166D0  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14307                           
 14308                           ;stkvar	_x @ sp[(-6)+-4]
 14309  0166D6  0EF6               	movlw	-10
 14310  0166D8  006F FF8C  F02D    	movff	plusw1,btemp+8
 14311  0166DE  0EF7               	movlw	-9
 14312  0166E0  006F FF8C  F02E    	movff	plusw1,btemp+9
 14313  0166E6  0EF8               	movlw	-8
 14314  0166E8  006F FF8C  F02F    	movff	plusw1,btemp+10
 14315  0166EE  0EF9               	movlw	-7
 14316  0166F0  006F FF8C  F030    	movff	plusw1,btemp+11
 14317                           
 14318                           ;stkvar	_u @ sp[(-6)+0]
 14319  0166F6  0EFA               	movlw	-6
 14320  0166F8  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14321  0166FE  0EFB               	movlw	-5
 14322  016700  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14323  016706  0EFC               	movlw	-4
 14324  016708  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14325  01670E  0EFD               	movlw	-3
 14326  016710  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14327                           
 14328                           ;stkvar	_u @ sp[(-6)+0]
 14329  016716  0EFA               	movlw	-6
 14330  016718  006F FF8C  F02D    	movff	plusw1,btemp+8
 14331  01671E  0EFB               	movlw	-5
 14332  016720  006F FF8C  F02E    	movff	plusw1,btemp+9
 14333  016726  0EFC               	movlw	-4
 14334  016728  006F FF8C  F02F    	movff	plusw1,btemp+10
 14335  01672E  0EFD               	movlw	-3
 14336  016730  006F FF8C  F030    	movff	plusw1,btemp+11
 14337  016736  0E18               	movlw	24
 14338  016738  D005               	goto	u4800
 14339  01673A                     u4805:
 14340  01673A  90D8               	bcf	status,0,c
 14341  01673C  3230               	rrcf	(btemp+11)^0,f,c
 14342  01673E  322F               	rrcf	(btemp+10)^0,f,c
 14343  016740  322E               	rrcf	(btemp+9)^0,f,c
 14344  016742  322D               	rrcf	(btemp+8)^0,f,c
 14345  016744                     u4800:
 14346  016744  2EE8               	decfsz	wreg,f,c
 14347  016746  D7F9               	goto	u4805
 14348  016748  0060  F0B4  F02B   	movff	btemp+8,btemp+6
 14349  01674E  0060  F0B8  F02C   	movff	btemp+9,btemp+7
 14350  016754  0EFF               	movlw	255
 14351  016756  162B               	andwf	(btemp+6)^0,f,c
 14352  016758  0E00               	movlw	0
 14353  01675A  162C               	andwf	(btemp+7)^0,f,c
 14354                           
 14355                           ;stkvar	_e @ sp[(-6)+4]
 14356  01675C  0EFE               	movlw	-2
 14357  01675E  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 14358  016764  0EFF               	movlw	-1
 14359  016766  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 14360                           
 14361                           ;stkvar	_e @ sp[(-6)+4]
 14362  01676C  0EFE               	movlw	-2
 14363  01676E  006F FF8C  F025    	movff	plusw1,btemp
 14364  016774  0EFF               	movlw	-1
 14365  016776  50E3               	movf	plusw1,w,c
 14366  016778  1025               	iorwf	btemp^0,w,c
 14367  01677A  A4D8               	btfss	status,2,c
 14368  01677C  D023               	goto	l6655
 14369                           
 14370                           ;stkvar	_u @ sp[(-6)+0]
 14371  01677E  0EFA               	movlw	-6
 14372  016780  006F FF8C  F02D    	movff	plusw1,btemp+8
 14373  016786  0EFB               	movlw	-5
 14374  016788  006F FF8C  F02E    	movff	plusw1,btemp+9
 14375  01678E  0EFC               	movlw	-4
 14376  016790  006F FF8C  F02F    	movff	plusw1,btemp+10
 14377  016796  0EFD               	movlw	-3
 14378  016798  006F FF8C  F030    	movff	plusw1,btemp+11
 14379  01679E  90D8               	bcf	status,0,c
 14380  0167A0  342D               	rlcf	(btemp+8)^0,w,c
 14381  0167A2  6E29               	movwf	(btemp+4)^0,c
 14382  0167A4  342E               	rlcf	(btemp+9)^0,w,c
 14383  0167A6  6E2A               	movwf	(btemp+5)^0,c
 14384  0167A8  342F               	rlcf	(btemp+10)^0,w,c
 14385  0167AA  6E2B               	movwf	(btemp+6)^0,c
 14386  0167AC  3430               	rlcf	(btemp+11)^0,w,c
 14387  0167AE  6E2C               	movwf	(btemp+7)^0,c
 14388  0167B0  5029               	movf	(btemp+4)^0,w,c
 14389  0167B2  102A               	iorwf	(btemp+5)^0,w,c
 14390  0167B4  102B               	iorwf	(btemp+6)^0,w,c
 14391  0167B6  102C               	iorwf	(btemp+7)^0,w,c
 14392  0167B8  A4D8               	btfss	status,2,c
 14393  0167BA  D002               	goto	l6651
 14394  0167BC  0E02               	movlw	2
 14395  0167BE  D02E               	goto	L14
 14396  0167C0                     l6651:
 14397  0167C0  0E03               	movlw	3
 14398  0167C2  D02C               	goto	L14
 14399  0167C4                     l6655:
 14400                           
 14401                           ;stkvar	_e @ sp[(-6)+4]
 14402  0167C4  0EFE               	movlw	-2
 14403  0167C6  28E3               	incf	plusw1,w,c
 14404  0167C8  E128               	bnz	l6661
 14405  0167CA  0EFF               	movlw	-1
 14406  0167CC  50E3               	movf	plusw1,w,c
 14407  0167CE  A4D8               	btfss	status,2,c
 14408  0167D0  D024               	goto	l6661
 14409                           
 14410                           ;stkvar	_u @ sp[(-6)+0]
 14411  0167D2  0EFA               	movlw	-6
 14412  0167D4  006F FF8C  F02D    	movff	plusw1,btemp+8
 14413  0167DA  0EFB               	movlw	-5
 14414  0167DC  006F FF8C  F02E    	movff	plusw1,btemp+9
 14415  0167E2  0EFC               	movlw	-4
 14416  0167E4  006F FF8C  F02F    	movff	plusw1,btemp+10
 14417  0167EA  0EFD               	movlw	-3
 14418  0167EC  006F FF8C  F030    	movff	plusw1,btemp+11
 14419  0167F2  0E09               	movlw	9
 14420  0167F4                     u4845:
 14421  0167F4  90D8               	bcf	status,0,c
 14422  0167F6  362D               	rlcf	(btemp+8)^0,f,c
 14423  0167F8  362E               	rlcf	(btemp+9)^0,f,c
 14424  0167FA  362F               	rlcf	(btemp+10)^0,f,c
 14425  0167FC  3630               	rlcf	(btemp+11)^0,f,c
 14426  0167FE  2EE8               	decfsz	wreg,f,c
 14427  016800  D7F9               	goto	u4845
 14428  016802  502D               	movf	(btemp+8)^0,w,c
 14429  016804  102E               	iorwf	(btemp+9)^0,w,c
 14430  016806  102F               	iorwf	(btemp+10)^0,w,c
 14431  016808  1030               	iorwf	(btemp+11)^0,w,c
 14432  01680A  A4D8               	btfss	status,2,c
 14433  01680C  D002               	goto	u4850
 14434  01680E  0E01               	movlw	1
 14435  016810  D001               	goto	u4860
 14436  016812                     u4850:
 14437  016812  0E00               	movlw	0
 14438  016814                     u4860:
 14439  016814  6E25               	movwf	btemp^0,c
 14440  016816  6A26               	clrf	(btemp+1)^0,c
 14441  016818  D004               	goto	l2903
 14442  01681A                     l6661:
 14443  01681A  0E04               	movlw	4
 14444  01681C                     L14:
 14445  01681C  6E25               	movwf	btemp^0,c
 14446  01681E  0E00               	movlw	0
 14447  016820  6E26               	movwf	(btemp+1)^0,c
 14448  016822                     l2903:
 14449                           
 14450                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14451  016822  0EF6               	movlw	246
 14452  016824  26E1               	addwf	fsr1l,f,c
 14453  016826  0EFF               	movlw	255
 14454  016828  22E2               	addwfc	fsr1h,f,c
 14455  01682A  0012               	return		;funcret
 14456  01682C                     __end_of___fpclassifyf:
 14457                           	opt callstack 0
 14458                           
 14459 ;; *************** function ___fltol *****************
 14460 ;; Defined at:
 14461 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 14462 ;; Parameters:    Size  Location     Type
 14463 ;;  f1              4  [STACK] int 
 14464 ;; Auto vars:     Size  Location     Type
 14465 ;;  exp1            1  [STACK] unsigned char 
 14466 ;;  sign1           1  [STACK] unsigned char 
 14467 ;; Return value:  Size  Location     Type
 14468 ;;                  4  [STACK] long 
 14469 ;; Registers used:
 14470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14471 ;; Tracked objects:
 14472 ;;		On entry : 0/0
 14473 ;;		On exit  : 0/0
 14474 ;;		Unchanged: 0/0
 14475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14480 ;;Total ram usage:        0 bytes
 14481 ;; Hardware stack levels used:    1
 14482 ;; Hardware stack levels required when called:    7
 14483 ;; This function calls:
 14484 ;;		Nothing
 14485 ;; This function is called by:
 14486 ;;		_efgtoa
 14487 ;; This function uses a reentrant model
 14488 ;;
 14489                           
 14490                           	psect	text54
 14491  01682C                     __ptext54:
 14492                           	opt callstack 0
 14493  01682C                     ___fltol:
 14494                           	opt callstack 0
 14495                           
 14496                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14497  01682C  52E6               	movf	postinc1,f,c
 14498  01682E  52E6               	movf	postinc1,f,c
 14499                           
 14500                           ;stkvar	_f1 @ sp[(-2)+-4]
 14501                           
 14502                           ;incstack = 0
 14503  016830  0EFA               	movlw	-6
 14504  016832  006F FF8C  F02D    	movff	plusw1,btemp+8
 14505  016838  0EFB               	movlw	-5
 14506  01683A  006F FF8C  F02E    	movff	plusw1,btemp+9
 14507  016840  0EFC               	movlw	-4
 14508  016842  006F FF8C  F02F    	movff	plusw1,btemp+10
 14509  016848  0EFD               	movlw	-3
 14510  01684A  006F FF8C  F030    	movff	plusw1,btemp+11
 14511  016850  0E18               	movlw	24
 14512  016852  D005               	goto	u5720
 14513  016854                     u5725:
 14514  016854  90D8               	bcf	status,0,c
 14515  016856  3230               	rrcf	(btemp+11)^0,f,c
 14516  016858  322F               	rrcf	(btemp+10)^0,f,c
 14517  01685A  322E               	rrcf	(btemp+9)^0,f,c
 14518  01685C  322D               	rrcf	(btemp+8)^0,f,c
 14519  01685E                     u5720:
 14520  01685E  2EE8               	decfsz	wreg,f,c
 14521  016860  D7F9               	goto	u5725
 14522                           
 14523                           ;stkvar	_exp1 @ sp[(-2)+0]
 14524  016862  0EFE               	movlw	-2
 14525  016864  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14526  01686A  0EFE               	movlw	-2
 14527  01686C  50E3               	movf	plusw1,w,c
 14528  01686E  A4D8               	btfss	status,2,c
 14529  016870  D006               	goto	l7099
 14530  016872                     u5730:
 14531  016872  0E00               	movlw	0
 14532  016874  6E25               	movwf	btemp^0,c
 14533  016876  6A26               	clrf	(btemp+1)^0,c
 14534  016878  6A27               	clrf	(btemp+2)^0,c
 14535  01687A  6A28               	clrf	(btemp+3)^0,c
 14536  01687C  D08B               	goto	l2519
 14537  01687E                     l7099:
 14538                           
 14539                           ;stkvar	_f1 @ sp[(-2)+-4]
 14540  01687E  0EFA               	movlw	-6
 14541  016880  006F FF8C  F02D    	movff	plusw1,btemp+8
 14542  016886  0EFB               	movlw	-5
 14543  016888  006F FF8C  F02E    	movff	plusw1,btemp+9
 14544  01688E  0EFC               	movlw	-4
 14545  016890  006F FF8C  F02F    	movff	plusw1,btemp+10
 14546  016896  0EFD               	movlw	-3
 14547  016898  006F FF8C  F030    	movff	plusw1,btemp+11
 14548  01689E  0E20               	movlw	32
 14549  0168A0  D005               	goto	u5740
 14550  0168A2                     u5745:
 14551  0168A2  90D8               	bcf	status,0,c
 14552  0168A4  3230               	rrcf	(btemp+11)^0,f,c
 14553  0168A6  322F               	rrcf	(btemp+10)^0,f,c
 14554  0168A8  322E               	rrcf	(btemp+9)^0,f,c
 14555  0168AA  322D               	rrcf	(btemp+8)^0,f,c
 14556  0168AC                     u5740:
 14557  0168AC  2EE8               	decfsz	wreg,f,c
 14558  0168AE  D7F9               	goto	u5745
 14559                           
 14560                           ;stkvar	_sign1 @ sp[(-2)+1]
 14561  0168B0  0EFF               	movlw	-1
 14562  0168B2  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14563                           
 14564                           ;stkvar	_f1 @ sp[(-2)+-4]
 14565  0168B8  0EFC               	movlw	-4
 14566  0168BA  8EE3               	bsf	plusw1,7,c
 14567                           
 14568                           ;stkvar	_f1 @ sp[(-2)+-4]
 14569  0168BC  50E1               	movf	fsr1l,w,c
 14570  0168BE  0FFA               	addlw	-6
 14571  0168C0  6ED9               	movwf	fsr2l,c
 14572  0168C2  50E2               	movf	fsr1h,w,c
 14573  0168C4  6EDA               	movwf	fsr2h,c
 14574  0168C6  0EFF               	movlw	255
 14575  0168C8  22DA               	addwfc	fsr2h,f,c
 14576  0168CA  0EFF               	movlw	255
 14577  0168CC  16DE               	andwf	postinc2,f,c
 14578  0168CE  0EFF               	movlw	255
 14579  0168D0  16DE               	andwf	postinc2,f,c
 14580  0168D2  0EFF               	movlw	255
 14581  0168D4  16DE               	andwf	postinc2,f,c
 14582  0168D6  0E00               	movlw	0
 14583  0168D8  16DE               	andwf	postinc2,f,c
 14584                           
 14585                           ;stkvar	_exp1 @ sp[(-2)+0]
 14586  0168DA  0EFE               	movlw	-2
 14587  0168DC  006F FF8C  F025    	movff	plusw1,btemp
 14588  0168E2  0E96               	movlw	150
 14589  0168E4  5E25               	subwf	btemp^0,f,c
 14590  0168E6  0EFE               	movlw	-2
 14591  0168E8  0060  F097  FFE3   	movff	btemp,plusw1
 14592                           
 14593                           ;stkvar	_exp1 @ sp[(-2)+0]
 14594  0168EE  0EFE               	movlw	-2
 14595  0168F0  AEE3               	btfss	plusw1,7,c
 14596  0168F2  D014               	goto	l7117
 14597                           
 14598                           ;stkvar	_exp1 @ sp[(-2)+0]
 14599  0168F4  0EFE               	movlw	-2
 14600  0168F6  50E3               	movf	plusw1,w,c
 14601  0168F8  0A80               	xorlw	128
 14602  0168FA  0F97               	addlw	151
 14603  0168FC  A0D8               	btfss	status,0,c
 14604  0168FE  D7B9               	goto	u5730
 14605  016900                     l7115:
 14606                           
 14607                           ;stkvar	_f1 @ sp[(-2)+-4]
 14608  016900  90D8               	bcf	status,0,c
 14609  016902  0EFD               	movlw	-3
 14610  016904  32E3               	rrcf	plusw1,f,c
 14611  016906  0EFC               	movlw	-4
 14612  016908  32E3               	rrcf	plusw1,f,c
 14613  01690A  0EFB               	movlw	-5
 14614  01690C  32E3               	rrcf	plusw1,f,c
 14615  01690E  0EFA               	movlw	-6
 14616  016910  32E3               	rrcf	plusw1,f,c
 14617                           
 14618                           ;stkvar	_exp1 @ sp[(-2)+0]
 14619  016912  0EFE               	movlw	-2
 14620  016914  2AE3               	incf	plusw1,f,c
 14621  016916  B4D8               	btfsc	status,2,c
 14622  016918  D018               	goto	u5790
 14623  01691A  D7F2               	goto	l7115
 14624  01691C                     l7117:
 14625                           
 14626                           ;stkvar	_exp1 @ sp[(-2)+0]
 14627  01691C  0EFE               	movlw	-2
 14628  01691E  006F FF8C  F025    	movff	plusw1,btemp
 14629  016924  0E1F               	movlw	31
 14630  016926  6425               	cpfsgt	btemp^0,c
 14631  016928  D00C               	goto	l7125
 14632  01692A  D7A3               	goto	u5730
 14633  01692C                     l7123:
 14634                           
 14635                           ;stkvar	_f1 @ sp[(-2)+-4]
 14636  01692C  90D8               	bcf	status,0,c
 14637  01692E  0EFA               	movlw	-6
 14638  016930  36E3               	rlcf	plusw1,f,c
 14639  016932  0EFB               	movlw	-5
 14640  016934  36E3               	rlcf	plusw1,f,c
 14641  016936  0EFC               	movlw	-4
 14642  016938  36E3               	rlcf	plusw1,f,c
 14643  01693A  0EFD               	movlw	-3
 14644  01693C  36E3               	rlcf	plusw1,f,c
 14645                           
 14646                           ;stkvar	_exp1 @ sp[(-2)+0]
 14647  01693E  0EFE               	movlw	-2
 14648  016940  06E3               	decf	plusw1,f,c
 14649  016942                     l7125:
 14650                           
 14651                           ;stkvar	_exp1 @ sp[(-2)+0]
 14652  016942  0EFE               	movlw	-2
 14653  016944  50E3               	movf	plusw1,w,c
 14654  016946  A4D8               	btfss	status,2,c
 14655  016948  D7F1               	goto	l7123
 14656  01694A                     u5790:
 14657                           
 14658                           ;stkvar	_sign1 @ sp[(-2)+1]
 14659  01694A  0EFF               	movlw	-1
 14660  01694C  50E3               	movf	plusw1,w,c
 14661  01694E  B4D8               	btfsc	status,2,c
 14662  016950  D011               	goto	u5810
 14663                           
 14664                           ;stkvar	_f1 @ sp[(-2)+-4]
 14665                           ;stkvar	_f1 @ sp[(-2)+-4]
 14666  016952  0EFA               	movlw	-6
 14667  016954  6CE3               	negf	plusw1,c
 14668  016956  0EFB               	movlw	-5
 14669  016958  1EE3               	comf	plusw1,f,c
 14670  01695A  0EFC               	movlw	-4
 14671  01695C  1EE3               	comf	plusw1,f,c
 14672  01695E  0EFD               	movlw	-3
 14673  016960  1EE3               	comf	plusw1,f,c
 14674  016962  E308               	bnc	u5810
 14675  016964  0EFB               	movlw	-5
 14676  016966  2AE3               	incf	plusw1,f,c
 14677  016968  E305               	bnc	u5810
 14678  01696A  0EFC               	movlw	-4
 14679  01696C  2AE3               	incf	plusw1,f,c
 14680  01696E  E302               	bnc	u5810
 14681  016970  0EFD               	movlw	-3
 14682  016972  2AE3               	incf	plusw1,f,c
 14683  016974                     u5810:
 14684                           
 14685                           ;stkvar	_f1 @ sp[(-2)+-4]
 14686  016974  0EFA               	movlw	-6
 14687  016976  006F FF8C  F025    	movff	plusw1,btemp
 14688  01697C  0EFB               	movlw	-5
 14689  01697E  006F FF8C  F026    	movff	plusw1,btemp+1
 14690  016984  0EFC               	movlw	-4
 14691  016986  006F FF8C  F027    	movff	plusw1,btemp+2
 14692  01698C  0EFD               	movlw	-3
 14693  01698E  006F FF8C  F028    	movff	plusw1,btemp+3
 14694  016994                     l2519:
 14695                           
 14696                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14697  016994  0EFA               	movlw	250
 14698  016996  26E1               	addwf	fsr1l,f,c
 14699  016998  0EFF               	movlw	255
 14700  01699A  22E2               	addwfc	fsr1h,f,c
 14701  01699C  0012               	return		;funcret
 14702  01699E                     __end_of___fltol:
 14703                           	opt callstack 0
 14704                           
 14705 ;; *************** function ___flneg *****************
 14706 ;; Defined at:
 14707 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 14708 ;; Parameters:    Size  Location     Type
 14709 ;;  f1              4  [STACK] long 
 14710 ;; Auto vars:     Size  Location     Type
 14711 ;;		None
 14712 ;; Return value:  Size  Location     Type
 14713 ;;                  4  [STACK] long 
 14714 ;; Registers used:
 14715 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 14716 ;; Tracked objects:
 14717 ;;		On entry : 0/0
 14718 ;;		On exit  : 0/0
 14719 ;;		Unchanged: 0/0
 14720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14725 ;;Total ram usage:        0 bytes
 14726 ;; Hardware stack levels used:    1
 14727 ;; Hardware stack levels required when called:    7
 14728 ;; This function calls:
 14729 ;;		Nothing
 14730 ;; This function is called by:
 14731 ;;		_efgtoa
 14732 ;; This function uses a reentrant model
 14733 ;;
 14734                           
 14735                           	psect	text55
 14736  01885A                     __ptext55:
 14737                           	opt callstack 0
 14738  01885A                     ___flneg:
 14739                           	opt callstack 16
 14740                           
 14741                           ;stkvar	_f1 @ sp[(0)+-4]
 14742                           
 14743                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14744                           ;incstack = 0
 14745  01885A  0EFC               	movlw	-4
 14746  01885C  50E3               	movf	plusw1,w,c
 14747  01885E  E10A               	bnz	u5710
 14748  018860  0EFD               	movlw	-3
 14749  018862  50E3               	movf	plusw1,w,c
 14750  018864  E107               	bnz	u5710
 14751  018866  0EFE               	movlw	-2
 14752  018868  50E3               	movf	plusw1,w,c
 14753  01886A  E104               	bnz	u5710
 14754  01886C  0EFF               	movlw	-1
 14755  01886E  50E3               	movf	plusw1,w,c
 14756  018870  B4D8               	btfsc	status,2,c
 14757  018872  D002               	goto	l7089
 14758  018874                     u5710:
 14759                           
 14760                           ;stkvar	_f1 @ sp[(0)+-4]
 14761  018874  0EFF               	movlw	-1
 14762  018876  7EE3               	btg	plusw1,7,c
 14763  018878                     l7089:
 14764                           
 14765                           ;stkvar	_f1 @ sp[(0)+-4]
 14766  018878  0EFC               	movlw	-4
 14767  01887A  006F FF8C  F025    	movff	plusw1,btemp
 14768  018880  0EFD               	movlw	-3
 14769  018882  006F FF8C  F026    	movff	plusw1,btemp+1
 14770  018888  0EFE               	movlw	-2
 14771  01888A  006F FF8C  F027    	movff	plusw1,btemp+2
 14772  018890  0EFF               	movlw	-1
 14773  018892  006F FF8C  F028    	movff	plusw1,btemp+3
 14774                           
 14775                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14776  018898  52E5               	movf	postdec1,f,c
 14777  01889A  52E5               	movf	postdec1,f,c
 14778  01889C  52E5               	movf	postdec1,f,c
 14779  01889E  52E5               	movf	postdec1,f,c
 14780  0188A0  0012               	return		;funcret
 14781  0188A2                     __end_of___flneg:
 14782                           	opt callstack 0
 14783                           
 14784 ;; *************** function ___flge *****************
 14785 ;; Defined at:
 14786 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 14787 ;; Parameters:    Size  Location     Type
 14788 ;;  ff1             4  [STACK] long 
 14789 ;;  ff2             4  [STACK] long 
 14790 ;; Auto vars:     Size  Location     Type
 14791 ;;		None
 14792 ;; Return value:  Size  Location     Type
 14793 ;;		None               void
 14794 ;; Registers used:
 14795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14796 ;; Tracked objects:
 14797 ;;		On entry : 0/0
 14798 ;;		On exit  : 0/0
 14799 ;;		Unchanged: 0/0
 14800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14805 ;;Total ram usage:        0 bytes
 14806 ;; Hardware stack levels used:    1
 14807 ;; Hardware stack levels required when called:    7
 14808 ;; This function calls:
 14809 ;;		Nothing
 14810 ;; This function is called by:
 14811 ;;		_calc_bsoc
 14812 ;;		_efgtoa
 14813 ;; This function uses a reentrant model
 14814 ;;
 14815                           
 14816                           	psect	text56
 14817  01699E                     __ptext56:
 14818                           	opt callstack 0
 14819  01699E                     ___flge:
 14820                           	opt callstack 7
 14821                           
 14822                           ;stkvar	_ff1 @ sp[(0)+-4]
 14823                           
 14824                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14825                           ;incstack = 0
 14826  01699E  50E1               	movf	fsr1l,w,c
 14827  0169A0  0FFC               	addlw	-4
 14828  0169A2  6ED9               	movwf	fsr2l,c
 14829  0169A4  50E2               	movf	fsr1h,w,c
 14830  0169A6  6EDA               	movwf	fsr2h,c
 14831  0169A8  0EFF               	movlw	255
 14832  0169AA  22DA               	addwfc	fsr2h,f,c
 14833  0169AC  0E00               	movlw	0
 14834  0169AE  14DE               	andwf	postinc2,w,c
 14835  0169B0  6E2D               	movwf	(btemp+8)^0,c
 14836  0169B2  0E00               	movlw	0
 14837  0169B4  14DE               	andwf	postinc2,w,c
 14838  0169B6  6E2E               	movwf	(btemp+9)^0,c
 14839  0169B8  0E80               	movlw	128
 14840  0169BA  14DE               	andwf	postinc2,w,c
 14841  0169BC  6E2F               	movwf	(btemp+10)^0,c
 14842  0169BE  0E7F               	movlw	127
 14843  0169C0  14DE               	andwf	postinc2,w,c
 14844  0169C2  6E30               	movwf	(btemp+11)^0,c
 14845  0169C4  502D               	movf	(btemp+8)^0,w,c
 14846  0169C6  102E               	iorwf	(btemp+9)^0,w,c
 14847  0169C8  102F               	iorwf	(btemp+10)^0,w,c
 14848  0169CA  1030               	iorwf	(btemp+11)^0,w,c
 14849  0169CC  A4D8               	btfss	status,2,c
 14850  0169CE  D008               	goto	l8483
 14851                           
 14852                           ;stkvar	_ff1 @ sp[(0)+-4]
 14853  0169D0  0EFC               	movlw	-4
 14854  0169D2  6AE3               	clrf	plusw1,c
 14855  0169D4  0EFD               	movlw	-3
 14856  0169D6  6AE3               	clrf	plusw1,c
 14857  0169D8  0EFE               	movlw	-2
 14858  0169DA  6AE3               	clrf	plusw1,c
 14859  0169DC  0EFF               	movlw	-1
 14860  0169DE  6AE3               	clrf	plusw1,c
 14861  0169E0                     l8483:
 14862                           
 14863                           ;stkvar	_ff2 @ sp[(0)+-8]
 14864  0169E0  50E1               	movf	fsr1l,w,c
 14865  0169E2  0FF8               	addlw	-8
 14866  0169E4  6ED9               	movwf	fsr2l,c
 14867  0169E6  50E2               	movf	fsr1h,w,c
 14868  0169E8  6EDA               	movwf	fsr2h,c
 14869  0169EA  0EFF               	movlw	255
 14870  0169EC  22DA               	addwfc	fsr2h,f,c
 14871  0169EE  0E00               	movlw	0
 14872  0169F0  14DE               	andwf	postinc2,w,c
 14873  0169F2  6E2D               	movwf	(btemp+8)^0,c
 14874  0169F4  0E00               	movlw	0
 14875  0169F6  14DE               	andwf	postinc2,w,c
 14876  0169F8  6E2E               	movwf	(btemp+9)^0,c
 14877  0169FA  0E80               	movlw	128
 14878  0169FC  14DE               	andwf	postinc2,w,c
 14879  0169FE  6E2F               	movwf	(btemp+10)^0,c
 14880  016A00  0E7F               	movlw	127
 14881  016A02  14DE               	andwf	postinc2,w,c
 14882  016A04  6E30               	movwf	(btemp+11)^0,c
 14883  016A06  502D               	movf	(btemp+8)^0,w,c
 14884  016A08  102E               	iorwf	(btemp+9)^0,w,c
 14885  016A0A  102F               	iorwf	(btemp+10)^0,w,c
 14886  016A0C  1030               	iorwf	(btemp+11)^0,w,c
 14887  016A0E  A4D8               	btfss	status,2,c
 14888  016A10  D008               	goto	l2485
 14889                           
 14890                           ;stkvar	_ff2 @ sp[(0)+-8]
 14891  016A12  0EF8               	movlw	-8
 14892  016A14  6AE3               	clrf	plusw1,c
 14893  016A16  0EF9               	movlw	-7
 14894  016A18  6AE3               	clrf	plusw1,c
 14895  016A1A  0EFA               	movlw	-6
 14896  016A1C  6AE3               	clrf	plusw1,c
 14897  016A1E  0EFB               	movlw	-5
 14898  016A20  6AE3               	clrf	plusw1,c
 14899  016A22                     l2485:
 14900                           
 14901                           ;stkvar	_ff1 @ sp[(0)+-4]
 14902  016A22  0EFF               	movlw	-1
 14903  016A24  AEE3               	btfss	plusw1,7,c
 14904  016A26  D024               	goto	l8489
 14905                           
 14906                           ;stkvar	_ff1 @ sp[(0)+-4]
 14907  016A28  0E00               	movlw	0
 14908  016A2A  6E2D               	movwf	(btemp+8)^0,c
 14909  016A2C  0E00               	movlw	0
 14910  016A2E  6E2E               	movwf	(btemp+9)^0,c
 14911  016A30  0E00               	movlw	0
 14912  016A32  6E2F               	movwf	(btemp+10)^0,c
 14913  016A34  0E80               	movlw	128
 14914  016A36  6E30               	movwf	(btemp+11)^0,c
 14915  016A38  0EFC               	movlw	-4
 14916  016A3A  50E3               	movf	plusw1,w,c
 14917  016A3C  5E2D               	subwf	(btemp+8)^0,f,c
 14918  016A3E  0EFD               	movlw	-3
 14919  016A40  50E3               	movf	plusw1,w,c
 14920  016A42  5A2E               	subwfb	(btemp+9)^0,f,c
 14921  016A44  0EFE               	movlw	-2
 14922  016A46  50E3               	movf	plusw1,w,c
 14923  016A48  5A2F               	subwfb	(btemp+10)^0,f,c
 14924  016A4A  0EFF               	movlw	-1
 14925  016A4C  50E3               	movf	plusw1,w,c
 14926  016A4E  5A30               	subwfb	(btemp+11)^0,f,c
 14927                           
 14928                           ;stkvar	_ff1 @ sp[(0)+-4]
 14929  016A50  0EFC               	movlw	-4
 14930  016A52  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14931  016A58  0EFD               	movlw	-3
 14932  016A5A  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14933  016A60  0EFE               	movlw	-2
 14934  016A62  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14935  016A68  0EFF               	movlw	-1
 14936  016A6A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14937  016A70                     l8489:
 14938                           
 14939                           ;stkvar	_ff2 @ sp[(0)+-8]
 14940  016A70  0EFB               	movlw	-5
 14941  016A72  AEE3               	btfss	plusw1,7,c
 14942  016A74  D024               	goto	l8493
 14943                           
 14944                           ;stkvar	_ff2 @ sp[(0)+-8]
 14945  016A76  0E00               	movlw	0
 14946  016A78  6E2D               	movwf	(btemp+8)^0,c
 14947  016A7A  0E00               	movlw	0
 14948  016A7C  6E2E               	movwf	(btemp+9)^0,c
 14949  016A7E  0E00               	movlw	0
 14950  016A80  6E2F               	movwf	(btemp+10)^0,c
 14951  016A82  0E80               	movlw	128
 14952  016A84  6E30               	movwf	(btemp+11)^0,c
 14953  016A86  0EF8               	movlw	-8
 14954  016A88  50E3               	movf	plusw1,w,c
 14955  016A8A  5E2D               	subwf	(btemp+8)^0,f,c
 14956  016A8C  0EF9               	movlw	-7
 14957  016A8E  50E3               	movf	plusw1,w,c
 14958  016A90  5A2E               	subwfb	(btemp+9)^0,f,c
 14959  016A92  0EFA               	movlw	-6
 14960  016A94  50E3               	movf	plusw1,w,c
 14961  016A96  5A2F               	subwfb	(btemp+10)^0,f,c
 14962  016A98  0EFB               	movlw	-5
 14963  016A9A  50E3               	movf	plusw1,w,c
 14964  016A9C  5A30               	subwfb	(btemp+11)^0,f,c
 14965                           
 14966                           ;stkvar	_ff2 @ sp[(0)+-8]
 14967  016A9E  0EF8               	movlw	-8
 14968  016AA0  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14969  016AA6  0EF9               	movlw	-7
 14970  016AA8  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14971  016AAE  0EFA               	movlw	-6
 14972  016AB0  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14973  016AB6  0EFB               	movlw	-5
 14974  016AB8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14975  016ABE                     l8493:
 14976                           
 14977                           ;stkvar	_ff1 @ sp[(0)+-4]
 14978  016ABE  0EFF               	movlw	-1
 14979  016AC0  7EE3               	btg	plusw1,7,c
 14980                           
 14981                           ;stkvar	_ff2 @ sp[(0)+-8]
 14982  016AC2  0EFB               	movlw	-5
 14983  016AC4  7EE3               	btg	plusw1,7,c
 14984                           
 14985                           ;stkvar	_ff2 @ sp[(0)+-8]
 14986                           ;stkvar	_ff1 @ sp[(0)+-4]
 14987  016AC6  50E1               	movf	fsr1l,w,c
 14988  016AC8  0FFC               	addlw	-4
 14989  016ACA  6ED9               	movwf	fsr2l,c
 14990  016ACC  50E2               	movf	fsr1h,w,c
 14991  016ACE  6EDA               	movwf	fsr2h,c
 14992  016AD0  0EFF               	movlw	255
 14993  016AD2  22DA               	addwfc	fsr2h,f,c
 14994  016AD4  0EF8               	movlw	-8
 14995  016AD6  50E3               	movf	plusw1,w,c
 14996  016AD8  5CDE               	subwf	postinc2,w,c
 14997  016ADA  0EF9               	movlw	-7
 14998  016ADC  50E3               	movf	plusw1,w,c
 14999  016ADE  58DE               	subwfb	postinc2,w,c
 15000  016AE0  0EFA               	movlw	-6
 15001  016AE2  50E3               	movf	plusw1,w,c
 15002  016AE4  58DE               	subwfb	postinc2,w,c
 15003  016AE6  0EFB               	movlw	-5
 15004  016AE8  50E3               	movf	plusw1,w,c
 15005  016AEA  58DE               	subwfb	postinc2,w,c
 15006  016AEC  B0D8               	btfsc	status,0,c
 15007  016AEE  D002               	goto	l8501
 15008  016AF0  9025               	bcf	btemp& (0+255),0,c
 15009  016AF2  D001               	goto	l2492
 15010  016AF4                     l8501:
 15011  016AF4  8025               	bsf	btemp& (0+255),0,c
 15012  016AF6                     l2492:
 15013                           
 15014                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15015  016AF6  0EF8               	movlw	248
 15016  016AF8  26E1               	addwf	fsr1l,f,c
 15017  016AFA  0EFF               	movlw	255
 15018  016AFC  22E2               	addwfc	fsr1h,f,c
 15019  016AFE  0012               	return		;funcret
 15020  016B00                     __end_of___flge:
 15021                           	opt callstack 0
 15022                           
 15023 ;; *************** function ___fleq *****************
 15024 ;; Defined at:
 15025 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 15026 ;; Parameters:    Size  Location     Type
 15027 ;;  ff1             4  [STACK] long 
 15028 ;;  ff2             4  [STACK] long 
 15029 ;; Auto vars:     Size  Location     Type
 15030 ;;		None
 15031 ;; Return value:  Size  Location     Type
 15032 ;;		None               void
 15033 ;; Registers used:
 15034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 15035 ;; Tracked objects:
 15036 ;;		On entry : 0/0
 15037 ;;		On exit  : 0/0
 15038 ;;		Unchanged: 0/0
 15039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15044 ;;Total ram usage:        0 bytes
 15045 ;; Hardware stack levels used:    1
 15046 ;; Hardware stack levels required when called:    7
 15047 ;; This function calls:
 15048 ;;		Nothing
 15049 ;; This function is called by:
 15050 ;;		_efgtoa
 15051 ;; This function uses a reentrant model
 15052 ;;
 15053                           
 15054                           	psect	text57
 15055  01789A                     __ptext57:
 15056                           	opt callstack 0
 15057  01789A                     ___fleq:
 15058                           	opt callstack 16
 15059                           
 15060                           ;stkvar	_ff1 @ sp[(0)+-4]
 15061                           
 15062                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15063                           ;incstack = 0
 15064  01789A  50E1               	movf	fsr1l,w,c
 15065  01789C  0FFC               	addlw	-4
 15066  01789E  6ED9               	movwf	fsr2l,c
 15067  0178A0  50E2               	movf	fsr1h,w,c
 15068  0178A2  6EDA               	movwf	fsr2h,c
 15069  0178A4  0EFF               	movlw	255
 15070  0178A6  22DA               	addwfc	fsr2h,f,c
 15071  0178A8  0E00               	movlw	0
 15072  0178AA  14DE               	andwf	postinc2,w,c
 15073  0178AC  6E2D               	movwf	(btemp+8)^0,c
 15074  0178AE  0E00               	movlw	0
 15075  0178B0  14DE               	andwf	postinc2,w,c
 15076  0178B2  6E2E               	movwf	(btemp+9)^0,c
 15077  0178B4  0E80               	movlw	128
 15078  0178B6  14DE               	andwf	postinc2,w,c
 15079  0178B8  6E2F               	movwf	(btemp+10)^0,c
 15080  0178BA  0E7F               	movlw	127
 15081  0178BC  14DE               	andwf	postinc2,w,c
 15082  0178BE  6E30               	movwf	(btemp+11)^0,c
 15083  0178C0  502D               	movf	(btemp+8)^0,w,c
 15084  0178C2  102E               	iorwf	(btemp+9)^0,w,c
 15085  0178C4  102F               	iorwf	(btemp+10)^0,w,c
 15086  0178C6  1030               	iorwf	(btemp+11)^0,w,c
 15087  0178C8  A4D8               	btfss	status,2,c
 15088  0178CA  D008               	goto	l7073
 15089                           
 15090                           ;stkvar	_ff1 @ sp[(0)+-4]
 15091  0178CC  0EFC               	movlw	-4
 15092  0178CE  6AE3               	clrf	plusw1,c
 15093  0178D0  0EFD               	movlw	-3
 15094  0178D2  6AE3               	clrf	plusw1,c
 15095  0178D4  0EFE               	movlw	-2
 15096  0178D6  6AE3               	clrf	plusw1,c
 15097  0178D8  0EFF               	movlw	-1
 15098  0178DA  6AE3               	clrf	plusw1,c
 15099  0178DC                     l7073:
 15100                           
 15101                           ;stkvar	_ff2 @ sp[(0)+-8]
 15102  0178DC  50E1               	movf	fsr1l,w,c
 15103  0178DE  0FF8               	addlw	-8
 15104  0178E0  6ED9               	movwf	fsr2l,c
 15105  0178E2  50E2               	movf	fsr1h,w,c
 15106  0178E4  6EDA               	movwf	fsr2h,c
 15107  0178E6  0EFF               	movlw	255
 15108  0178E8  22DA               	addwfc	fsr2h,f,c
 15109  0178EA  0E00               	movlw	0
 15110  0178EC  14DE               	andwf	postinc2,w,c
 15111  0178EE  6E2D               	movwf	(btemp+8)^0,c
 15112  0178F0  0E00               	movlw	0
 15113  0178F2  14DE               	andwf	postinc2,w,c
 15114  0178F4  6E2E               	movwf	(btemp+9)^0,c
 15115  0178F6  0E80               	movlw	128
 15116  0178F8  14DE               	andwf	postinc2,w,c
 15117  0178FA  6E2F               	movwf	(btemp+10)^0,c
 15118  0178FC  0E7F               	movlw	127
 15119  0178FE  14DE               	andwf	postinc2,w,c
 15120  017900  6E30               	movwf	(btemp+11)^0,c
 15121  017902  502D               	movf	(btemp+8)^0,w,c
 15122  017904  102E               	iorwf	(btemp+9)^0,w,c
 15123  017906  102F               	iorwf	(btemp+10)^0,w,c
 15124  017908  1030               	iorwf	(btemp+11)^0,w,c
 15125  01790A  A4D8               	btfss	status,2,c
 15126  01790C  D008               	goto	l7077
 15127                           
 15128                           ;stkvar	_ff2 @ sp[(0)+-8]
 15129  01790E  0EF8               	movlw	-8
 15130  017910  6AE3               	clrf	plusw1,c
 15131  017912  0EF9               	movlw	-7
 15132  017914  6AE3               	clrf	plusw1,c
 15133  017916  0EFA               	movlw	-6
 15134  017918  6AE3               	clrf	plusw1,c
 15135  01791A  0EFB               	movlw	-5
 15136  01791C  6AE3               	clrf	plusw1,c
 15137  01791E                     l7077:
 15138                           
 15139                           ;stkvar	_ff2 @ sp[(0)+-8]
 15140                           ;stkvar	_ff1 @ sp[(0)+-4]
 15141  01791E  50E1               	movf	fsr1l,w,c
 15142  017920  0FFC               	addlw	-4
 15143  017922  6ED9               	movwf	fsr2l,c
 15144  017924  50E2               	movf	fsr1h,w,c
 15145  017926  6EDA               	movwf	fsr2h,c
 15146  017928  0EFF               	movlw	255
 15147  01792A  22DA               	addwfc	fsr2h,f,c
 15148  01792C  0EF8               	movlw	-8
 15149  01792E  50E3               	movf	plusw1,w,c
 15150  017930  18DE               	xorwf	postinc2,w,c
 15151  017932  E10D               	bnz	u5700
 15152  017934  0EF9               	movlw	-7
 15153  017936  50E3               	movf	plusw1,w,c
 15154  017938  18DE               	xorwf	postinc2,w,c
 15155  01793A  E109               	bnz	u5700
 15156  01793C  0EFA               	movlw	-6
 15157  01793E  50E3               	movf	plusw1,w,c
 15158  017940  18DE               	xorwf	postinc2,w,c
 15159  017942  E105               	bnz	u5700
 15160  017944  0EFB               	movlw	-5
 15161  017946  50E3               	movf	plusw1,w,c
 15162  017948  18DE               	xorwf	postinc2,w,c
 15163  01794A  B4D8               	btfsc	status,2,c
 15164  01794C  D002               	goto	l7081
 15165  01794E                     u5700:
 15166  01794E  9025               	bcf	btemp& (0+255),0,c
 15167  017950  D001               	goto	l2481
 15168  017952                     l7081:
 15169  017952  8025               	bsf	btemp& (0+255),0,c
 15170  017954                     l2481:
 15171                           
 15172                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15173  017954  0EF8               	movlw	248
 15174  017956  26E1               	addwf	fsr1l,f,c
 15175  017958  0EFF               	movlw	255
 15176  01795A  22E2               	addwfc	fsr1h,f,c
 15177  01795C  0012               	return		;funcret
 15178  01795E                     __end_of___fleq:
 15179                           	opt callstack 0
 15180                           
 15181 ;; *************** function ___fldiv *****************
 15182 ;; Defined at:
 15183 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 15184 ;; Parameters:    Size  Location     Type
 15185 ;;  b               4  [STACK] long 
 15186 ;;  a               4  [STACK] long 
 15187 ;; Auto vars:     Size  Location     Type
 15188 ;;  grs             4  [STACK] unsigned long 
 15189 ;;  rem             4  [STACK] unsigned long 
 15190 ;;  new_exp         2  [STACK] short 
 15191 ;;  aexp            1  [STACK] unsigned char 
 15192 ;;  bexp            1  [STACK] unsigned char 
 15193 ;;  sign            1  [STACK] unsigned char 
 15194 ;; Return value:  Size  Location     Type
 15195 ;;                  4  [STACK] unsigned char 
 15196 ;; Registers used:
 15197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 15198 ;; Tracked objects:
 15199 ;;		On entry : 0/2
 15200 ;;		On exit  : 0/0
 15201 ;;		Unchanged: 0/0
 15202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15207 ;;Total ram usage:        0 bytes
 15208 ;; Hardware stack levels used:    1
 15209 ;; Hardware stack levels required when called:    7
 15210 ;; This function calls:
 15211 ;;		Nothing
 15212 ;; This function is called by:
 15213 ;;		_conv_raw_result
 15214 ;;		_calc_bsoc
 15215 ;;		_efgtoa
 15216 ;; This function uses a reentrant model
 15217 ;;
 15218                           
 15219                           	psect	text58
 15220  01360E                     __ptext58:
 15221                           	opt callstack 0
 15222  01360E                     ___fldiv:
 15223                           	opt callstack 0
 15224                           
 15225                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15226  01360E  0E0D               	movlw	13
 15227  013610  26E1               	addwf	fsr1l,f,c
 15228  013612  0E00               	movlw	0
 15229  013614  22E2               	addwfc	fsr1h,f,c
 15230                           
 15231                           ;stkvar	_b @ sp[(-13)+-4]
 15232                           
 15233                           ;incstack = 0
 15234  013616  0EF2               	movlw	242
 15235  013618  24E1               	addwf	fsr1l,w,c
 15236  01361A  6ED9               	movwf	fsr2l,c
 15237  01361C  0EFF               	movlw	255
 15238  01361E  20E2               	addwfc	fsr1h,w,c
 15239  013620  6EDA               	movwf	fsr2h,c
 15240  013622  50DF               	movf	indf2,w,c
 15241  013624  6E30               	movwf	(btemp+11)^0,c
 15242  013626  0E80               	movlw	128
 15243  013628  1630               	andwf	(btemp+11)^0,f,c
 15244                           
 15245                           ;stkvar	_sign @ sp[(-13)+12]
 15246  01362A  0EFF               	movlw	-1
 15247  01362C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15248                           
 15249                           ;stkvar	_b @ sp[(-13)+-4]
 15250  013632  0EF2               	movlw	242
 15251  013634  24E1               	addwf	fsr1l,w,c
 15252  013636  6ED9               	movwf	fsr2l,c
 15253  013638  0EFF               	movlw	255
 15254  01363A  20E2               	addwfc	fsr1h,w,c
 15255  01363C  6EDA               	movwf	fsr2h,c
 15256  01363E  50DF               	movf	indf2,w,c
 15257  013640  6E30               	movwf	(btemp+11)^0,c
 15258  013642  90D8               	bcf	status,0,c
 15259  013644  3430               	rlcf	(btemp+11)^0,w,c
 15260  013646  6E2F               	movwf	(btemp+10)^0,c
 15261                           
 15262                           ;stkvar	_bexp @ sp[(-13)+11]
 15263  013648  0EFE               	movlw	-2
 15264  01364A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15265                           
 15266                           ;stkvar	_b @ sp[(-13)+-4]
 15267  013650  0EF1               	movlw	241
 15268  013652  24E1               	addwf	fsr1l,w,c
 15269  013654  6ED9               	movwf	fsr2l,c
 15270  013656  0EFF               	movlw	255
 15271  013658  20E2               	addwfc	fsr1h,w,c
 15272  01365A  6EDA               	movwf	fsr2h,c
 15273  01365C  AEDF               	btfss	indf2,7,c
 15274  01365E  D002               	goto	l8331
 15275                           
 15276                           ;stkvar	_bexp @ sp[(-13)+11]
 15277  013660  0EFE               	movlw	-2
 15278  013662  80E3               	bsf	plusw1,0,c
 15279  013664                     l8331:
 15280                           
 15281                           ;stkvar	_bexp @ sp[(-13)+11]
 15282  013664  0EFE               	movlw	-2
 15283  013666  50E3               	movf	plusw1,w,c
 15284  013668  B4D8               	btfsc	status,2,c
 15285  01366A  D027               	goto	l8341
 15286                           
 15287                           ;stkvar	_bexp @ sp[(-13)+11]
 15288  01366C  0EFE               	movlw	-2
 15289  01366E  28E3               	incf	plusw1,w,c
 15290  013670  A4D8               	btfss	status,2,c
 15291  013672  D018               	goto	l8337
 15292  013674  0E00               	movlw	0
 15293  013676  6E2D               	movwf	(btemp+8)^0,c
 15294  013678  0E00               	movlw	0
 15295  01367A  6E2E               	movwf	(btemp+9)^0,c
 15296  01367C  0E00               	movlw	0
 15297  01367E  6E2F               	movwf	(btemp+10)^0,c
 15298  013680  0E00               	movlw	0
 15299  013682  6E30               	movwf	(btemp+11)^0,c
 15300                           
 15301                           ;stkvar	_b @ sp[(-13)+-4]
 15302  013684  0EEF               	movlw	-17
 15303  013686  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15304  01368C  0EF0               	movlw	-16
 15305  01368E  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15306  013694  0EF1               	movlw	-15
 15307  013696  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15308  01369C  0EF2               	movlw	-14
 15309  01369E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15310  0136A4                     l8337:
 15311                           
 15312                           ;stkvar	_b @ sp[(-13)+-4]
 15313  0136A4  0EF1               	movlw	-15
 15314  0136A6  8EE3               	bsf	plusw1,7,c
 15315                           
 15316                           ;stkvar	_b @ sp[(-13)+-4]
 15317  0136A8  0EF2               	movlw	242
 15318  0136AA  24E1               	addwf	fsr1l,w,c
 15319  0136AC  6ED9               	movwf	fsr2l,c
 15320  0136AE  0EFF               	movlw	255
 15321  0136B0  20E2               	addwfc	fsr1h,w,c
 15322  0136B2  6EDA               	movwf	fsr2h,c
 15323  0136B4  0E00               	movlw	0
 15324  0136B6  6EDF               	movwf	indf2,c
 15325  0136B8  D018               	goto	l8343
 15326  0136BA                     l8341:
 15327  0136BA  0E00               	movlw	0
 15328  0136BC  6E2D               	movwf	(btemp+8)^0,c
 15329  0136BE  0E00               	movlw	0
 15330  0136C0  6E2E               	movwf	(btemp+9)^0,c
 15331  0136C2  0E00               	movlw	0
 15332  0136C4  6E2F               	movwf	(btemp+10)^0,c
 15333  0136C6  0E00               	movlw	0
 15334  0136C8  6E30               	movwf	(btemp+11)^0,c
 15335                           
 15336                           ;stkvar	_b @ sp[(-13)+-4]
 15337  0136CA  0EEF               	movlw	-17
 15338  0136CC  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15339  0136D2  0EF0               	movlw	-16
 15340  0136D4  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15341  0136DA  0EF1               	movlw	-15
 15342  0136DC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15343  0136E2  0EF2               	movlw	-14
 15344  0136E4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15345  0136EA                     l8343:
 15346                           
 15347                           ;stkvar	_a @ sp[(-13)+-8]
 15348  0136EA  0EEE               	movlw	238
 15349  0136EC  24E1               	addwf	fsr1l,w,c
 15350  0136EE  6ED9               	movwf	fsr2l,c
 15351  0136F0  0EFF               	movlw	255
 15352  0136F2  20E2               	addwfc	fsr1h,w,c
 15353  0136F4  6EDA               	movwf	fsr2h,c
 15354  0136F6  50DF               	movf	indf2,w,c
 15355  0136F8  6E30               	movwf	(btemp+11)^0,c
 15356  0136FA  0E80               	movlw	128
 15357  0136FC  1630               	andwf	(btemp+11)^0,f,c
 15358                           
 15359                           ;stkvar	_sign @ sp[(-13)+12]
 15360  0136FE  50E1               	movf	fsr1l,w,c
 15361  013700  0FFF               	addlw	-1
 15362  013702  6ED9               	movwf	fsr2l,c
 15363  013704  50E2               	movf	fsr1h,w,c
 15364  013706  6EDA               	movwf	fsr2h,c
 15365  013708  0EFF               	movlw	255
 15366  01370A  22DA               	addwfc	fsr2h,f,c
 15367  01370C  5030               	movf	(btemp+11)^0,w,c
 15368  01370E  1ADF               	xorwf	indf2,f,c
 15369                           
 15370                           ;stkvar	_a @ sp[(-13)+-8]
 15371  013710  0EEE               	movlw	238
 15372  013712  24E1               	addwf	fsr1l,w,c
 15373  013714  6ED9               	movwf	fsr2l,c
 15374  013716  0EFF               	movlw	255
 15375  013718  20E2               	addwfc	fsr1h,w,c
 15376  01371A  6EDA               	movwf	fsr2h,c
 15377  01371C  50DF               	movf	indf2,w,c
 15378  01371E  6E30               	movwf	(btemp+11)^0,c
 15379  013720  90D8               	bcf	status,0,c
 15380  013722  3430               	rlcf	(btemp+11)^0,w,c
 15381  013724  6E2F               	movwf	(btemp+10)^0,c
 15382                           
 15383                           ;stkvar	_aexp @ sp[(-13)+10]
 15384  013726  0EFD               	movlw	-3
 15385  013728  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15386                           
 15387                           ;stkvar	_a @ sp[(-13)+-8]
 15388  01372E  0EED               	movlw	237
 15389  013730  24E1               	addwf	fsr1l,w,c
 15390  013732  6ED9               	movwf	fsr2l,c
 15391  013734  0EFF               	movlw	255
 15392  013736  20E2               	addwfc	fsr1h,w,c
 15393  013738  6EDA               	movwf	fsr2h,c
 15394  01373A  AEDF               	btfss	indf2,7,c
 15395  01373C  D002               	goto	l8351
 15396                           
 15397                           ;stkvar	_aexp @ sp[(-13)+10]
 15398  01373E  0EFD               	movlw	-3
 15399  013740  80E3               	bsf	plusw1,0,c
 15400  013742                     l8351:
 15401                           
 15402                           ;stkvar	_aexp @ sp[(-13)+10]
 15403  013742  0EFD               	movlw	-3
 15404  013744  50E3               	movf	plusw1,w,c
 15405  013746  B4D8               	btfsc	status,2,c
 15406  013748  D027               	goto	l8361
 15407                           
 15408                           ;stkvar	_aexp @ sp[(-13)+10]
 15409  01374A  0EFD               	movlw	-3
 15410  01374C  28E3               	incf	plusw1,w,c
 15411  01374E  A4D8               	btfss	status,2,c
 15412  013750  D018               	goto	l8357
 15413  013752  0E00               	movlw	0
 15414  013754  6E2D               	movwf	(btemp+8)^0,c
 15415  013756  0E00               	movlw	0
 15416  013758  6E2E               	movwf	(btemp+9)^0,c
 15417  01375A  0E00               	movlw	0
 15418  01375C  6E2F               	movwf	(btemp+10)^0,c
 15419  01375E  0E00               	movlw	0
 15420  013760  6E30               	movwf	(btemp+11)^0,c
 15421                           
 15422                           ;stkvar	_a @ sp[(-13)+-8]
 15423  013762  0EEB               	movlw	-21
 15424  013764  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15425  01376A  0EEC               	movlw	-20
 15426  01376C  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15427  013772  0EED               	movlw	-19
 15428  013774  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15429  01377A  0EEE               	movlw	-18
 15430  01377C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15431  013782                     l8357:
 15432                           
 15433                           ;stkvar	_a @ sp[(-13)+-8]
 15434  013782  0EED               	movlw	-19
 15435  013784  8EE3               	bsf	plusw1,7,c
 15436                           
 15437                           ;stkvar	_a @ sp[(-13)+-8]
 15438  013786  0EEE               	movlw	238
 15439  013788  24E1               	addwf	fsr1l,w,c
 15440  01378A  6ED9               	movwf	fsr2l,c
 15441  01378C  0EFF               	movlw	255
 15442  01378E  20E2               	addwfc	fsr1h,w,c
 15443  013790  6EDA               	movwf	fsr2h,c
 15444  013792  0E00               	movlw	0
 15445  013794  6EDF               	movwf	indf2,c
 15446  013796  D018               	goto	l8363
 15447  013798                     l8361:
 15448  013798  0E00               	movlw	0
 15449  01379A  6E2D               	movwf	(btemp+8)^0,c
 15450  01379C  0E00               	movlw	0
 15451  01379E  6E2E               	movwf	(btemp+9)^0,c
 15452  0137A0  0E00               	movlw	0
 15453  0137A2  6E2F               	movwf	(btemp+10)^0,c
 15454  0137A4  0E00               	movlw	0
 15455  0137A6  6E30               	movwf	(btemp+11)^0,c
 15456                           
 15457                           ;stkvar	_a @ sp[(-13)+-8]
 15458  0137A8  0EEB               	movlw	-21
 15459  0137AA  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15460  0137B0  0EEC               	movlw	-20
 15461  0137B2  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15462  0137B8  0EED               	movlw	-19
 15463  0137BA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15464  0137C0  0EEE               	movlw	-18
 15465  0137C2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15466  0137C8                     l8363:
 15467                           
 15468                           ;stkvar	_a @ sp[(-13)+-8]
 15469  0137C8  0EEB               	movlw	-21
 15470  0137CA  50E3               	movf	plusw1,w,c
 15471  0137CC  E139               	bnz	l8375
 15472  0137CE  0EEC               	movlw	-20
 15473  0137D0  50E3               	movf	plusw1,w,c
 15474  0137D2  E136               	bnz	l8375
 15475  0137D4  0EED               	movlw	-19
 15476  0137D6  50E3               	movf	plusw1,w,c
 15477  0137D8  E133               	bnz	l8375
 15478  0137DA  0EEE               	movlw	-18
 15479  0137DC  50E3               	movf	plusw1,w,c
 15480  0137DE  A4D8               	btfss	status,2,c
 15481  0137E0  D02F               	goto	l8375
 15482                           
 15483                           ;stkvar	_b @ sp[(-13)+-4]
 15484  0137E2  0EEF               	movlw	-17
 15485  0137E4  6AE3               	clrf	plusw1,c
 15486  0137E6  0EF0               	movlw	-16
 15487  0137E8  6AE3               	clrf	plusw1,c
 15488  0137EA  0EF1               	movlw	-15
 15489  0137EC  6AE3               	clrf	plusw1,c
 15490  0137EE  0EF2               	movlw	-14
 15491  0137F0  6AE3               	clrf	plusw1,c
 15492                           
 15493                           ;stkvar	_b @ sp[(-13)+-4]
 15494  0137F2  0EF1               	movlw	241
 15495  0137F4  24E1               	addwf	fsr1l,w,c
 15496  0137F6  6ED9               	movwf	fsr2l,c
 15497  0137F8  0EFF               	movlw	255
 15498  0137FA  20E2               	addwfc	fsr1h,w,c
 15499  0137FC  6EDA               	movwf	fsr2h,c
 15500  0137FE  0E80               	movlw	128
 15501  013800  12DE               	iorwf	postinc2,f,c
 15502  013802  0E7F               	movlw	127
 15503  013804  12DD               	iorwf	postdec2,f,c
 15504  013806                     l8369:
 15505                           
 15506                           ;stkvar	_sign @ sp[(-13)+12]
 15507  013806  0EFF               	movlw	-1
 15508  013808  006F FF8C  F030    	movff	plusw1,btemp+11
 15509                           
 15510                           ;stkvar	_b @ sp[(-13)+-4]
 15511  01380E  0EF2               	movlw	242
 15512  013810  24E1               	addwf	fsr1l,w,c
 15513  013812  6ED9               	movwf	fsr2l,c
 15514  013814  0EFF               	movlw	255
 15515  013816  20E2               	addwfc	fsr1h,w,c
 15516  013818  6EDA               	movwf	fsr2h,c
 15517  01381A  5030               	movf	(btemp+11)^0,w,c
 15518  01381C  12DF               	iorwf	indf2,f,c
 15519                           
 15520                           ;stkvar	_b @ sp[(-13)+-4]
 15521  01381E  0EEF               	movlw	-17
 15522  013820  006F FF8C  F025    	movff	plusw1,btemp
 15523  013826  0EF0               	movlw	-16
 15524  013828  006F FF8C  F026    	movff	plusw1,btemp+1
 15525  01382E  0EF1               	movlw	-15
 15526  013830  006F FF8C  F027    	movff	plusw1,btemp+2
 15527  013836  0EF2               	movlw	-14
 15528  013838  006F FF8C  F028    	movff	plusw1,btemp+3
 15529  01383E  D19F               	goto	l2804
 15530  013840                     l8375:
 15531                           
 15532                           ;stkvar	_bexp @ sp[(-13)+11]
 15533  013840  0EFE               	movlw	-2
 15534  013842  50E3               	movf	plusw1,w,c
 15535  013844  A4D8               	btfss	status,2,c
 15536  013846  D009               	goto	l8383
 15537  013848  0E00               	movlw	0
 15538  01384A  6E25               	movwf	btemp^0,c
 15539  01384C  0E00               	movlw	0
 15540  01384E  6E26               	movwf	(btemp+1)^0,c
 15541  013850  0E00               	movlw	0
 15542  013852  6E27               	movwf	(btemp+2)^0,c
 15543  013854  0E00               	movlw	0
 15544  013856  6E28               	movwf	(btemp+3)^0,c
 15545  013858  D192               	goto	l2804
 15546  01385A                     l8383:
 15547                           
 15548                           ;stkvar	_bexp @ sp[(-13)+11]
 15549  01385A  0EFE               	movlw	-2
 15550  01385C  50E3               	movf	plusw1,w,c
 15551  01385E  6E2F               	movwf	(btemp+10)^0,c
 15552  013860  6A30               	clrf	(btemp+11)^0,c
 15553                           
 15554                           ;stkvar	_aexp @ sp[(-13)+10]
 15555  013862  0EFD               	movlw	-3
 15556  013864  50E3               	movf	plusw1,w,c
 15557  013866  5E2F               	subwf	(btemp+10)^0,f,c
 15558  013868  0E00               	movlw	0
 15559  01386A  5A30               	subwfb	(btemp+11)^0,f,c
 15560  01386C  0E7F               	movlw	127
 15561  01386E  262F               	addwf	(btemp+10)^0,f,c
 15562  013870  0E00               	movlw	0
 15563  013872  2230               	addwfc	(btemp+11)^0,f,c
 15564                           
 15565                           ;stkvar	_new_exp @ sp[(-13)+8]
 15566  013874  0EFB               	movlw	-5
 15567  013876  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15568  01387C  0EFC               	movlw	-4
 15569  01387E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15570                           
 15571                           ;stkvar	_b @ sp[(-13)+-4]
 15572  013884  0EEF               	movlw	-17
 15573  013886  006F FF8C  F02D    	movff	plusw1,btemp+8
 15574  01388C  0EF0               	movlw	-16
 15575  01388E  006F FF8C  F02E    	movff	plusw1,btemp+9
 15576  013894  0EF1               	movlw	-15
 15577  013896  006F FF8C  F02F    	movff	plusw1,btemp+10
 15578  01389C  0EF2               	movlw	-14
 15579  01389E  006F FF8C  F030    	movff	plusw1,btemp+11
 15580                           
 15581                           ;stkvar	_rem @ sp[(-13)+4]
 15582  0138A4  0EF7               	movlw	-9
 15583  0138A6  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15584  0138AC  0EF8               	movlw	-8
 15585  0138AE  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15586  0138B4  0EF9               	movlw	-7
 15587  0138B6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15588  0138BC  0EFA               	movlw	-6
 15589  0138BE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15590                           
 15591                           ;stkvar	_b @ sp[(-13)+-4]
 15592  0138C4  0EEF               	movlw	-17
 15593  0138C6  6AE3               	clrf	plusw1,c
 15594  0138C8  0EF0               	movlw	-16
 15595  0138CA  6AE3               	clrf	plusw1,c
 15596  0138CC  0EF1               	movlw	-15
 15597  0138CE  6AE3               	clrf	plusw1,c
 15598  0138D0  0EF2               	movlw	-14
 15599  0138D2  6AE3               	clrf	plusw1,c
 15600                           
 15601                           ;stkvar	_grs @ sp[(-13)+0]
 15602  0138D4  0EF3               	movlw	-13
 15603  0138D6  6AE3               	clrf	plusw1,c
 15604  0138D8  0EF4               	movlw	-12
 15605  0138DA  6AE3               	clrf	plusw1,c
 15606  0138DC  0EF5               	movlw	-11
 15607  0138DE  6AE3               	clrf	plusw1,c
 15608  0138E0  0EF6               	movlw	-10
 15609  0138E2  6AE3               	clrf	plusw1,c
 15610                           
 15611                           ;stkvar	_aexp @ sp[(-13)+10]
 15612  0138E4  0EFD               	movlw	-3
 15613  0138E6  6AE3               	clrf	plusw1,c
 15614  0138E8  D050               	goto	l8411
 15615  0138EA                     l8393:
 15616                           
 15617                           ;stkvar	_aexp @ sp[(-13)+10]
 15618  0138EA  0EFD               	movlw	-3
 15619  0138EC  50E3               	movf	plusw1,w,c
 15620  0138EE  B4D8               	btfsc	status,2,c
 15621  0138F0  D020               	goto	l8403
 15622                           
 15623                           ;stkvar	_rem @ sp[(-13)+4]
 15624  0138F2  90D8               	bcf	status,0,c
 15625  0138F4  0EF7               	movlw	-9
 15626  0138F6  36E3               	rlcf	plusw1,f,c
 15627  0138F8  0EF8               	movlw	-8
 15628  0138FA  36E3               	rlcf	plusw1,f,c
 15629  0138FC  0EF9               	movlw	-7
 15630  0138FE  36E3               	rlcf	plusw1,f,c
 15631  013900  0EFA               	movlw	-6
 15632  013902  36E3               	rlcf	plusw1,f,c
 15633                           
 15634                           ;stkvar	_b @ sp[(-13)+-4]
 15635  013904  90D8               	bcf	status,0,c
 15636  013906  0EEF               	movlw	-17
 15637  013908  36E3               	rlcf	plusw1,f,c
 15638  01390A  0EF0               	movlw	-16
 15639  01390C  36E3               	rlcf	plusw1,f,c
 15640  01390E  0EF1               	movlw	-15
 15641  013910  36E3               	rlcf	plusw1,f,c
 15642  013912  0EF2               	movlw	-14
 15643  013914  36E3               	rlcf	plusw1,f,c
 15644                           
 15645                           ;stkvar	_grs @ sp[(-13)+0]
 15646  013916  0EF6               	movlw	-10
 15647  013918  AEE3               	btfss	plusw1,7,c
 15648  01391A  D002               	goto	l8401
 15649                           
 15650                           ;stkvar	_b @ sp[(-13)+-4]
 15651  01391C  0EEF               	movlw	-17
 15652  01391E  80E3               	bsf	plusw1,0,c
 15653  013920                     l8401:
 15654                           
 15655                           ;stkvar	_grs @ sp[(-13)+0]
 15656  013920  90D8               	bcf	status,0,c
 15657  013922  0EF3               	movlw	-13
 15658  013924  36E3               	rlcf	plusw1,f,c
 15659  013926  0EF4               	movlw	-12
 15660  013928  36E3               	rlcf	plusw1,f,c
 15661  01392A  0EF5               	movlw	-11
 15662  01392C  36E3               	rlcf	plusw1,f,c
 15663  01392E  0EF6               	movlw	-10
 15664  013930  36E3               	rlcf	plusw1,f,c
 15665  013932                     l8403:
 15666                           
 15667                           ;stkvar	_a @ sp[(-13)+-8]
 15668                           ;stkvar	_rem @ sp[(-13)+4]
 15669  013932  50E1               	movf	fsr1l,w,c
 15670  013934  0FF7               	addlw	-9
 15671  013936  6ED9               	movwf	fsr2l,c
 15672  013938  50E2               	movf	fsr1h,w,c
 15673  01393A  6EDA               	movwf	fsr2h,c
 15674  01393C  0EFF               	movlw	255
 15675  01393E  22DA               	addwfc	fsr2h,f,c
 15676  013940  0EEB               	movlw	-21
 15677  013942  50E3               	movf	plusw1,w,c
 15678  013944  5CDE               	subwf	postinc2,w,c
 15679  013946  0EEC               	movlw	-20
 15680  013948  50E3               	movf	plusw1,w,c
 15681  01394A  58DE               	subwfb	postinc2,w,c
 15682  01394C  0EED               	movlw	-19
 15683  01394E  50E3               	movf	plusw1,w,c
 15684  013950  58DE               	subwfb	postinc2,w,c
 15685  013952  0EEE               	movlw	-18
 15686  013954  50E3               	movf	plusw1,w,c
 15687  013956  58DE               	subwfb	postinc2,w,c
 15688  013958  A0D8               	btfss	status,0,c
 15689  01395A  D015               	goto	l8409
 15690                           
 15691                           ;stkvar	_grs @ sp[(-13)+0]
 15692  01395C  0EF6               	movlw	-10
 15693  01395E  8CE3               	bsf	plusw1,6,c
 15694                           
 15695                           ;stkvar	_a @ sp[(-13)+-8]
 15696                           ;stkvar	_rem @ sp[(-13)+4]
 15697  013960  50E1               	movf	fsr1l,w,c
 15698  013962  0FF7               	addlw	-9
 15699  013964  6ED9               	movwf	fsr2l,c
 15700  013966  50E2               	movf	fsr1h,w,c
 15701  013968  6EDA               	movwf	fsr2h,c
 15702  01396A  0EFF               	movlw	255
 15703  01396C  22DA               	addwfc	fsr2h,f,c
 15704  01396E  0EEB               	movlw	-21
 15705  013970  50E3               	movf	plusw1,w,c
 15706  013972  5EDE               	subwf	postinc2,f,c
 15707  013974  0EEC               	movlw	-20
 15708  013976  50E3               	movf	plusw1,w,c
 15709  013978  5ADE               	subwfb	postinc2,f,c
 15710  01397A  0EED               	movlw	-19
 15711  01397C  50E3               	movf	plusw1,w,c
 15712  01397E  5ADE               	subwfb	postinc2,f,c
 15713  013980  0EEE               	movlw	-18
 15714  013982  50E3               	movf	plusw1,w,c
 15715  013984  5ADE               	subwfb	postinc2,f,c
 15716  013986                     l8409:
 15717                           
 15718                           ;stkvar	_aexp @ sp[(-13)+10]
 15719  013986  0EFD               	movlw	-3
 15720  013988  2AE3               	incf	plusw1,f,c
 15721  01398A                     l8411:
 15722                           
 15723                           ;stkvar	_aexp @ sp[(-13)+10]
 15724  01398A  0EFD               	movlw	-3
 15725  01398C  006F FF8C  F025    	movff	plusw1,btemp
 15726  013992  0E19               	movlw	25
 15727  013994  6425               	cpfsgt	btemp^0,c
 15728  013996  D7A9               	goto	l8393
 15729                           
 15730                           ;stkvar	_rem @ sp[(-13)+4]
 15731  013998  0EF7               	movlw	-9
 15732  01399A  50E3               	movf	plusw1,w,c
 15733  01399C  E10A               	bnz	u7880
 15734  01399E  0EF8               	movlw	-8
 15735  0139A0  50E3               	movf	plusw1,w,c
 15736  0139A2  E107               	bnz	u7880
 15737  0139A4  0EF9               	movlw	-7
 15738  0139A6  50E3               	movf	plusw1,w,c
 15739  0139A8  E104               	bnz	u7880
 15740  0139AA  0EFA               	movlw	-6
 15741  0139AC  50E3               	movf	plusw1,w,c
 15742  0139AE  B4D8               	btfsc	status,2,c
 15743  0139B0  D024               	goto	l8427
 15744  0139B2                     u7880:
 15745                           
 15746                           ;stkvar	_grs @ sp[(-13)+0]
 15747  0139B2  0EF3               	movlw	-13
 15748  0139B4  80E3               	bsf	plusw1,0,c
 15749  0139B6  D021               	goto	l8427
 15750  0139B8                     l8417:
 15751                           
 15752                           ;stkvar	_b @ sp[(-13)+-4]
 15753  0139B8  90D8               	bcf	status,0,c
 15754  0139BA  0EEF               	movlw	-17
 15755  0139BC  36E3               	rlcf	plusw1,f,c
 15756  0139BE  0EF0               	movlw	-16
 15757  0139C0  36E3               	rlcf	plusw1,f,c
 15758  0139C2  0EF1               	movlw	-15
 15759  0139C4  36E3               	rlcf	plusw1,f,c
 15760  0139C6  0EF2               	movlw	-14
 15761  0139C8  36E3               	rlcf	plusw1,f,c
 15762                           
 15763                           ;stkvar	_grs @ sp[(-13)+0]
 15764  0139CA  0EF6               	movlw	-10
 15765  0139CC  AEE3               	btfss	plusw1,7,c
 15766  0139CE  D002               	goto	l8423
 15767                           
 15768                           ;stkvar	_b @ sp[(-13)+-4]
 15769  0139D0  0EEF               	movlw	-17
 15770  0139D2  80E3               	bsf	plusw1,0,c
 15771  0139D4                     l8423:
 15772                           
 15773                           ;stkvar	_grs @ sp[(-13)+0]
 15774  0139D4  90D8               	bcf	status,0,c
 15775  0139D6  0EF3               	movlw	-13
 15776  0139D8  36E3               	rlcf	plusw1,f,c
 15777  0139DA  0EF4               	movlw	-12
 15778  0139DC  36E3               	rlcf	plusw1,f,c
 15779  0139DE  0EF5               	movlw	-11
 15780  0139E0  36E3               	rlcf	plusw1,f,c
 15781  0139E2  0EF6               	movlw	-10
 15782  0139E4  36E3               	rlcf	plusw1,f,c
 15783                           
 15784                           ;stkvar	_new_exp @ sp[(-13)+8]
 15785  0139E6  50E1               	movf	fsr1l,w,c
 15786  0139E8  0FFB               	addlw	-5
 15787  0139EA  6ED9               	movwf	fsr2l,c
 15788  0139EC  50E2               	movf	fsr1h,w,c
 15789  0139EE  6EDA               	movwf	fsr2h,c
 15790  0139F0  0EFF               	movlw	255
 15791  0139F2  22DA               	addwfc	fsr2h,f,c
 15792  0139F4  06DE               	decf	postinc2,f,c
 15793  0139F6  0E00               	movlw	0
 15794  0139F8  5ADD               	subwfb	postdec2,f,c
 15795  0139FA                     l8427:
 15796                           
 15797                           ;stkvar	_b @ sp[(-13)+-4]
 15798  0139FA  0EF1               	movlw	-15
 15799  0139FC  AEE3               	btfss	plusw1,7,c
 15800  0139FE  D7DC               	goto	l8417
 15801                           
 15802                           ;stkvar	_aexp @ sp[(-13)+10]
 15803  013A00  0EFD               	movlw	-3
 15804  013A02  6AE3               	clrf	plusw1,c
 15805                           
 15806                           ;stkvar	_grs @ sp[(-13)+0]
 15807  013A04  0EF6               	movlw	-10
 15808  013A06  AEE3               	btfss	plusw1,7,c
 15809  013A08  D020               	goto	l8441
 15810                           
 15811                           ;stkvar	_grs @ sp[(-13)+0]
 15812  013A0A  50E1               	movf	fsr1l,w,c
 15813  013A0C  0FF3               	addlw	-13
 15814  013A0E  6ED9               	movwf	fsr2l,c
 15815  013A10  50E2               	movf	fsr1h,w,c
 15816  013A12  6EDA               	movwf	fsr2h,c
 15817  013A14  0EFF               	movlw	255
 15818  013A16  22DA               	addwfc	fsr2h,f,c
 15819  013A18  0EFF               	movlw	255
 15820  013A1A  14DE               	andwf	postinc2,w,c
 15821  013A1C  6E2D               	movwf	(btemp+8)^0,c
 15822  013A1E  0EFF               	movlw	255
 15823  013A20  14DE               	andwf	postinc2,w,c
 15824  013A22  6E2E               	movwf	(btemp+9)^0,c
 15825  013A24  0EFF               	movlw	255
 15826  013A26  14DE               	andwf	postinc2,w,c
 15827  013A28  6E2F               	movwf	(btemp+10)^0,c
 15828  013A2A  0E7F               	movlw	127
 15829  013A2C  14DE               	andwf	postinc2,w,c
 15830  013A2E  6E30               	movwf	(btemp+11)^0,c
 15831  013A30  502D               	movf	(btemp+8)^0,w,c
 15832  013A32  102E               	iorwf	(btemp+9)^0,w,c
 15833  013A34  102F               	iorwf	(btemp+10)^0,w,c
 15834  013A36  1030               	iorwf	(btemp+11)^0,w,c
 15835  013A38  B4D8               	btfsc	status,2,c
 15836  013A3A  D004               	goto	l8437
 15837  013A3C                     u7920:
 15838                           
 15839                           ;stkvar	_aexp @ sp[(-13)+10]
 15840  013A3C  0EFD               	movlw	-3
 15841  013A3E  6AE3               	clrf	plusw1,c
 15842  013A40  2AE3               	incf	plusw1,f,c
 15843  013A42  D003               	goto	l8441
 15844  013A44                     l8437:
 15845                           
 15846                           ;stkvar	_b @ sp[(-13)+-4]
 15847  013A44  0EEF               	movlw	-17
 15848  013A46  B0E3               	btfsc	plusw1,0,c
 15849  013A48  D7F9               	goto	u7920
 15850  013A4A                     l8441:
 15851                           
 15852                           ;stkvar	_aexp @ sp[(-13)+10]
 15853  013A4A  0EFD               	movlw	-3
 15854  013A4C  50E3               	movf	plusw1,w,c
 15855  013A4E  B4D8               	btfsc	status,2,c
 15856  013A50  D036               	goto	l8451
 15857                           
 15858                           ;stkvar	_b @ sp[(-13)+-4]
 15859  013A52  50E1               	movf	fsr1l,w,c
 15860  013A54  0FEF               	addlw	-17
 15861  013A56  6ED9               	movwf	fsr2l,c
 15862  013A58  50E2               	movf	fsr1h,w,c
 15863  013A5A  6EDA               	movwf	fsr2h,c
 15864  013A5C  0EFF               	movlw	255
 15865  013A5E  22DA               	addwfc	fsr2h,f,c
 15866  013A60  2ADE               	incf	postinc2,f,c
 15867  013A62  0E00               	movlw	0
 15868  013A64  22DE               	addwfc	postinc2,f,c
 15869  013A66  22DE               	addwfc	postinc2,f,c
 15870  013A68  22DE               	addwfc	postinc2,f,c
 15871                           
 15872                           ;stkvar	_b @ sp[(-13)+-4]
 15873  013A6A  0EF2               	movlw	-14
 15874  013A6C  A0E3               	btfss	plusw1,0,c
 15875  013A6E  D027               	goto	l8451
 15876  013A70  0E01               	movlw	1
 15877  013A72  6E30               	movwf	(btemp+11)^0,c
 15878                           
 15879                           ;stkvar	_b @ sp[(-13)+-4]
 15880  013A74  50E1               	movf	fsr1l,w,c
 15881  013A76  0FEF               	addlw	-17
 15882  013A78  6ED9               	movwf	fsr2l,c
 15883  013A7A  50E2               	movf	fsr1h,w,c
 15884  013A7C  6EDA               	movwf	fsr2h,c
 15885  013A7E  0EFF               	movlw	255
 15886  013A80  22DA               	addwfc	fsr2h,f,c
 15887  013A82  2830               	incf	(btemp+11)^0,w,c
 15888  013A84  52DE               	movf	postinc2,f,c
 15889  013A86  D008               	goto	u7960
 15890  013A88                     u7965:
 15891  013A88  52DE               	movf	postinc2,f,c
 15892  013A8A  90D8               	bcf	status,0,c
 15893  013A8C  BEDC               	btfsc	preinc2,7,c
 15894  013A8E  80D8               	bsf	status,0,c
 15895  013A90  32DD               	rrcf	postdec2,f,c
 15896  013A92  32DD               	rrcf	postdec2,f,c
 15897  013A94  32DD               	rrcf	postdec2,f,c
 15898  013A96  32DE               	rrcf	postinc2,f,c
 15899  013A98                     u7960:
 15900  013A98  2EE8               	decfsz	wreg,f,c
 15901  013A9A  D7F6               	goto	u7965
 15902                           
 15903                           ;stkvar	_new_exp @ sp[(-13)+8]
 15904  013A9C  0EFB               	movlw	-5
 15905  013A9E  50E3               	movf	plusw1,w,c
 15906  013AA0  0F01               	addlw	1
 15907  013AA2  6E25               	movwf	btemp^0,c
 15908  013AA4  0EFB               	movlw	-5
 15909  013AA6  0060  F097  FFE3   	movff	btemp,plusw1
 15910  013AAC  6A25               	clrf	btemp^0,c
 15911  013AAE  0EFC               	movlw	-4
 15912  013AB0  50E3               	movf	plusw1,w,c
 15913  013AB2  2025               	addwfc	btemp^0,w,c
 15914  013AB4  6E25               	movwf	btemp^0,c
 15915  013AB6  0EFC               	movlw	-4
 15916  013AB8  0060  F097  FFE3   	movff	btemp,plusw1
 15917  013ABE                     l8451:
 15918                           
 15919                           ;stkvar	_new_exp @ sp[(-13)+8]
 15920  013ABE  0EFC               	movlw	-4
 15921  013AC0  BEE3               	btfsc	plusw1,7,c
 15922  013AC2  D01B               	goto	l8457
 15923  013AC4  0EFC               	movlw	-4
 15924  013AC6  50E3               	movf	plusw1,w,c
 15925  013AC8  E104               	bnz	u7970
 15926  013ACA  0EFB               	movlw	-5
 15927  013ACC  28E3               	incf	plusw1,w,c
 15928  013ACE  A0D8               	btfss	status,0,c
 15929  013AD0  D014               	goto	l8457
 15930  013AD2                     u7970:
 15931  013AD2  0EFF               	movlw	255
 15932  013AD4  6E2F               	movwf	(btemp+10)^0,c
 15933  013AD6  0E00               	movlw	0
 15934  013AD8  6E30               	movwf	(btemp+11)^0,c
 15935                           
 15936                           ;stkvar	_new_exp @ sp[(-13)+8]
 15937  013ADA  0EFB               	movlw	-5
 15938  013ADC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15939  013AE2  0EFC               	movlw	-4
 15940  013AE4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15941                           
 15942                           ;stkvar	_b @ sp[(-13)+-4]
 15943  013AEA  0EEF               	movlw	-17
 15944  013AEC  6AE3               	clrf	plusw1,c
 15945  013AEE  0EF0               	movlw	-16
 15946  013AF0  6AE3               	clrf	plusw1,c
 15947  013AF2  0EF1               	movlw	-15
 15948  013AF4  6AE3               	clrf	plusw1,c
 15949  013AF6  0EF2               	movlw	-14
 15950  013AF8  6AE3               	clrf	plusw1,c
 15951  013AFA                     l8457:
 15952                           
 15953                           ;stkvar	_new_exp @ sp[(-13)+8]
 15954  013AFA  0EFC               	movlw	-4
 15955  013AFC  BEE3               	btfsc	plusw1,7,c
 15956  013AFE  D007               	goto	u7980
 15957  013B00  0EFC               	movlw	-4
 15958  013B02  50E3               	movf	plusw1,w,c
 15959  013B04  E112               	bnz	l8463
 15960  013B06  0EFB               	movlw	-5
 15961  013B08  04E3               	decf	plusw1,w,c
 15962  013B0A  B0D8               	btfsc	status,0,c
 15963  013B0C  D00E               	goto	l8463
 15964  013B0E                     u7980:
 15965                           
 15966                           ;stkvar	_new_exp @ sp[(-13)+8]
 15967  013B0E  0EFB               	movlw	-5
 15968  013B10  6AE3               	clrf	plusw1,c
 15969  013B12  0EFC               	movlw	-4
 15970  013B14  6AE3               	clrf	plusw1,c
 15971                           
 15972                           ;stkvar	_b @ sp[(-13)+-4]
 15973  013B16  0EEF               	movlw	-17
 15974  013B18  6AE3               	clrf	plusw1,c
 15975  013B1A  0EF0               	movlw	-16
 15976  013B1C  6AE3               	clrf	plusw1,c
 15977  013B1E  0EF1               	movlw	-15
 15978  013B20  6AE3               	clrf	plusw1,c
 15979  013B22  0EF2               	movlw	-14
 15980  013B24  6AE3               	clrf	plusw1,c
 15981                           
 15982                           ;stkvar	_sign @ sp[(-13)+12]
 15983  013B26  0EFF               	movlw	-1
 15984  013B28  6AE3               	clrf	plusw1,c
 15985  013B2A                     l8463:
 15986                           
 15987                           ;stkvar	_new_exp @ sp[(-13)+8]
 15988                           ;stkvar	_bexp @ sp[(-13)+11]
 15989  013B2A  0EFB               	movlw	-5
 15990  013B2C  006F FF8C  F025    	movff	plusw1,btemp
 15991  013B32  0EFE               	movlw	-2
 15992  013B34  0060  F097  FFE3   	movff	btemp,plusw1
 15993                           
 15994                           ;stkvar	_bexp @ sp[(-13)+11]
 15995  013B3A  0EFE               	movlw	-2
 15996  013B3C  A0E3               	btfss	plusw1,0,c
 15997  013B3E  D009               	goto	l8469
 15998                           
 15999                           ;stkvar	_b @ sp[(-13)+-4]
 16000  013B40  0EF1               	movlw	241
 16001  013B42  24E1               	addwf	fsr1l,w,c
 16002  013B44  6ED9               	movwf	fsr2l,c
 16003  013B46  0EFF               	movlw	255
 16004  013B48  20E2               	addwfc	fsr1h,w,c
 16005  013B4A  6EDA               	movwf	fsr2h,c
 16006  013B4C  0E00               	movlw	0
 16007  013B4E  8EDB               	bsf	plusw2,7,c
 16008  013B50  D008               	goto	l8471
 16009  013B52                     l8469:
 16010                           
 16011                           ;stkvar	_b @ sp[(-13)+-4]
 16012  013B52  0EF1               	movlw	241
 16013  013B54  24E1               	addwf	fsr1l,w,c
 16014  013B56  6ED9               	movwf	fsr2l,c
 16015  013B58  0EFF               	movlw	255
 16016  013B5A  20E2               	addwfc	fsr1h,w,c
 16017  013B5C  6EDA               	movwf	fsr2h,c
 16018  013B5E  0E7F               	movlw	127
 16019  013B60  16DF               	andwf	indf2,f,c
 16020  013B62                     l8471:
 16021                           
 16022                           ;stkvar	_b @ sp[(-13)+-4]
 16023  013B62  0EF2               	movlw	242
 16024  013B64  24E1               	addwf	fsr1l,w,c
 16025  013B66  6ED9               	movwf	fsr2l,c
 16026  013B68  0EFF               	movlw	255
 16027  013B6A  20E2               	addwfc	fsr1h,w,c
 16028  013B6C  6EDA               	movwf	fsr2h,c
 16029                           
 16030                           ;stkvar	_bexp @ sp[(-13)+11]
 16031  013B6E  0EFE               	movlw	-2
 16032  013B70  006F FF8C  F030    	movff	plusw1,btemp+11
 16033  013B76  90D8               	bcf	status,0,c
 16034  013B78  3030               	rrcf	(btemp+11)^0,w,c
 16035  013B7A  6EDF               	movwf	indf2,c
 16036  013B7C  D644               	goto	l8369
 16037  013B7E                     l2804:
 16038                           
 16039                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 16040  013B7E  0EEB               	movlw	235
 16041  013B80  26E1               	addwf	fsr1l,f,c
 16042  013B82  0EFF               	movlw	255
 16043  013B84  22E2               	addwfc	fsr1h,f,c
 16044  013B86  0012               	return		;funcret
 16045  013B88                     __end_of___fldiv:
 16046                           	opt callstack 0
 16047                           
 16048 ;; *************** function ___awmod *****************
 16049 ;; Defined at:
 16050 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 16051 ;; Parameters:    Size  Location     Type
 16052 ;;  dividend        2  [STACK] int 
 16053 ;;  divisor         2  [STACK] int 
 16054 ;; Auto vars:     Size  Location     Type
 16055 ;;  sign            1  [STACK] unsigned char 
 16056 ;;  counter         1  [STACK] unsigned char 
 16057 ;; Return value:  Size  Location     Type
 16058 ;;                  2  [STACK] int 
 16059 ;; Registers used:
 16060 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16061 ;; Tracked objects:
 16062 ;;		On entry : 0/0
 16063 ;;		On exit  : 0/0
 16064 ;;		Unchanged: 0/0
 16065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16070 ;;Total ram usage:        0 bytes
 16071 ;; Hardware stack levels used:    1
 16072 ;; Hardware stack levels required when called:    7
 16073 ;; This function calls:
 16074 ;;		Nothing
 16075 ;; This function is called by:
 16076 ;;		_efgtoa
 16077 ;; This function uses a reentrant model
 16078 ;;
 16079                           
 16080                           	psect	text59
 16081  016FC8                     __ptext59:
 16082                           	opt callstack 0
 16083  016FC8                     ___awmod:
 16084                           	opt callstack 0
 16085                           
 16086                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16087  016FC8  52E6               	movf	postinc1,f,c
 16088  016FCA  52E6               	movf	postinc1,f,c
 16089                           
 16090                           ;stkvar	_sign @ sp[(-2)+0]
 16091                           
 16092                           ;incstack = 0
 16093  016FCC  0EFE               	movlw	-2
 16094  016FCE  6AE3               	clrf	plusw1,c
 16095                           
 16096                           ;stkvar	_dividend @ sp[(-2)+-2]
 16097  016FD0  0EFD               	movlw	-3
 16098  016FD2  AEE3               	btfss	plusw1,7,c
 16099  016FD4  D009               	goto	l7039
 16100                           
 16101                           ;stkvar	_dividend @ sp[(-2)+-2]
 16102                           ;stkvar	_dividend @ sp[(-2)+-2]
 16103  016FD6  0EFC               	movlw	-4
 16104  016FD8  6CE3               	negf	plusw1,c
 16105  016FDA  0EFD               	movlw	-3
 16106  016FDC  1EE3               	comf	plusw1,f,c
 16107  016FDE  B0D8               	btfsc	status,0,c
 16108  016FE0  2AE3               	incf	plusw1,f,c
 16109                           
 16110                           ;stkvar	_sign @ sp[(-2)+0]
 16111  016FE2  0EFE               	movlw	-2
 16112  016FE4  6AE3               	clrf	plusw1,c
 16113  016FE6  2AE3               	incf	plusw1,f,c
 16114  016FE8                     l7039:
 16115                           
 16116                           ;stkvar	_divisor @ sp[(-2)+-4]
 16117  016FE8  0EFB               	movlw	-5
 16118  016FEA  AEE3               	btfss	plusw1,7,c
 16119  016FEC  D006               	goto	l7043
 16120                           
 16121                           ;stkvar	_divisor @ sp[(-2)+-4]
 16122                           ;stkvar	_divisor @ sp[(-2)+-4]
 16123  016FEE  0EFA               	movlw	-6
 16124  016FF0  6CE3               	negf	plusw1,c
 16125  016FF2  0EFB               	movlw	-5
 16126  016FF4  1EE3               	comf	plusw1,f,c
 16127  016FF6  B0D8               	btfsc	status,0,c
 16128  016FF8  2AE3               	incf	plusw1,f,c
 16129  016FFA                     l7043:
 16130                           
 16131                           ;stkvar	_divisor @ sp[(-2)+-4]
 16132  016FFA  0EFA               	movlw	-6
 16133  016FFC  006F FF8C  F025    	movff	plusw1,btemp
 16134  017002  0EFB               	movlw	-5
 16135  017004  50E3               	movf	plusw1,w,c
 16136  017006  1025               	iorwf	btemp^0,w,c
 16137  017008  B4D8               	btfsc	status,2,c
 16138  01700A  D053               	goto	u5660
 16139                           
 16140                           ;stkvar	_counter @ sp[(-2)+1]
 16141  01700C  0EFF               	movlw	-1
 16142  01700E  6AE3               	clrf	plusw1,c
 16143  017010  D012               	goto	L15
 16144  017012                     l7047:
 16145                           
 16146                           ;stkvar	_divisor @ sp[(-2)+-4]
 16147  017012  0EFA               	movlw	-6
 16148  017014  50E3               	movf	plusw1,w,c
 16149  017016  90D8               	bcf	status,0,c
 16150  017018  34E8               	rlcf	wreg,w,c
 16151  01701A  6E25               	movwf	btemp^0,c
 16152  01701C  0EFA               	movlw	-6
 16153  01701E  0060  F097  FFE3   	movff	btemp,plusw1
 16154  017024  0EFB               	movlw	-5
 16155  017026  50E3               	movf	plusw1,w,c
 16156  017028  34E8               	rlcf	wreg,w,c
 16157  01702A  6E25               	movwf	btemp^0,c
 16158  01702C  0EFB               	movlw	-5
 16159  01702E  0060  F097  FFE3   	movff	btemp,plusw1
 16160                           
 16161                           ;stkvar	_counter @ sp[(-2)+1]
 16162  017034  0EFF               	movlw	-1
 16163  017036                     L15:
 16164  017036  2AE3               	incf	plusw1,f,c
 16165                           
 16166                           ;stkvar	_divisor @ sp[(-2)+-4]
 16167  017038  0EFB               	movlw	-5
 16168  01703A  AEE3               	btfss	plusw1,7,c
 16169  01703C  D7EA               	goto	l7047
 16170  01703E                     u5640:
 16171                           
 16172                           ;stkvar	_divisor @ sp[(-2)+-4]
 16173  01703E  0EFA               	movlw	-6
 16174  017040  006F FF8C  F02F    	movff	plusw1,btemp+10
 16175  017046  0EFB               	movlw	-5
 16176  017048  006F FF8C  F030    	movff	plusw1,btemp+11
 16177                           
 16178                           ;stkvar	_dividend @ sp[(-2)+-2]
 16179  01704E  0EFC               	movlw	-4
 16180  017050  006F FF8C  F02D    	movff	plusw1,btemp+8
 16181  017056  0EFD               	movlw	-3
 16182  017058  006F FF8C  F02E    	movff	plusw1,btemp+9
 16183  01705E  502F               	movf	(btemp+10)^0,w,c
 16184  017060  5C2D               	subwf	(btemp+8)^0,w,c
 16185  017062  5030               	movf	(btemp+11)^0,w,c
 16186  017064  582E               	subwfb	(btemp+9)^0,w,c
 16187  017066  A0D8               	btfss	status,0,c
 16188  017068  D014               	goto	l7057
 16189                           
 16190                           ;stkvar	_divisor @ sp[(-2)+-4]
 16191                           ;stkvar	_dividend @ sp[(-2)+-2]
 16192  01706A  0EFC               	movlw	-4
 16193  01706C  50E3               	movf	plusw1,w,c
 16194  01706E  6E25               	movwf	btemp^0,c
 16195  017070  0EFA               	movlw	-6
 16196  017072  50E3               	movf	plusw1,w,c
 16197  017074  5E25               	subwf	btemp^0,f,c
 16198  017076  0EFC               	movlw	-4
 16199  017078  0060  F097  FFE3   	movff	btemp,plusw1
 16200  01707E  0EFD               	movlw	-3
 16201  017080  50E3               	movf	plusw1,w,c
 16202  017082  6E25               	movwf	btemp^0,c
 16203  017084  0EFB               	movlw	-5
 16204  017086  50E3               	movf	plusw1,w,c
 16205  017088  5A25               	subwfb	btemp^0,f,c
 16206  01708A  0EFD               	movlw	-3
 16207  01708C  0060  F097  FFE3   	movff	btemp,plusw1
 16208  017092                     l7057:
 16209                           
 16210                           ;stkvar	_divisor @ sp[(-2)+-4]
 16211  017092  90D8               	bcf	status,0,c
 16212  017094  0EFB               	movlw	-5
 16213  017096  32E3               	rrcf	plusw1,f,c
 16214  017098  0EFA               	movlw	-6
 16215  01709A  32E3               	rrcf	plusw1,f,c
 16216                           
 16217                           ;stkvar	_counter @ sp[(-2)+1]
 16218  01709C  0EFF               	movlw	-1
 16219  01709E  50E3               	movf	plusw1,w,c
 16220  0170A0  6E25               	movwf	btemp^0,c
 16221  0170A2  0E01               	movlw	1
 16222  0170A4  5E25               	subwf	btemp^0,f,c
 16223  0170A6  0EFF               	movlw	-1
 16224  0170A8  0060  F097  FFE3   	movff	btemp,plusw1
 16225  0170AE  A4D8               	btfss	status,2,c
 16226  0170B0  D7C6               	goto	u5640
 16227  0170B2                     u5660:
 16228                           
 16229                           ;stkvar	_sign @ sp[(-2)+0]
 16230  0170B2  0EFE               	movlw	-2
 16231  0170B4  50E3               	movf	plusw1,w,c
 16232  0170B6  B4D8               	btfsc	status,2,c
 16233  0170B8  D006               	goto	l7065
 16234                           
 16235                           ;stkvar	_dividend @ sp[(-2)+-2]
 16236                           ;stkvar	_dividend @ sp[(-2)+-2]
 16237  0170BA  0EFC               	movlw	-4
 16238  0170BC  6CE3               	negf	plusw1,c
 16239  0170BE  0EFD               	movlw	-3
 16240  0170C0  1EE3               	comf	plusw1,f,c
 16241  0170C2  B0D8               	btfsc	status,0,c
 16242  0170C4  2AE3               	incf	plusw1,f,c
 16243  0170C6                     l7065:
 16244                           
 16245                           ;stkvar	_dividend @ sp[(-2)+-2]
 16246  0170C6  0EFC               	movlw	-4
 16247  0170C8  006F FF8C  F025    	movff	plusw1,btemp
 16248  0170CE  0EFD               	movlw	-3
 16249  0170D0  006F FF8C  F026    	movff	plusw1,btemp+1
 16250                           
 16251                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16252  0170D6  0EFA               	movlw	250
 16253  0170D8  26E1               	addwf	fsr1l,f,c
 16254  0170DA  0EFF               	movlw	255
 16255  0170DC  22E2               	addwfc	fsr1h,f,c
 16256  0170DE  0012               	return		;funcret
 16257  0170E0                     __end_of___awmod:
 16258                           	opt callstack 0
 16259                           
 16260 ;; *************** function ___awdiv *****************
 16261 ;; Defined at:
 16262 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 16263 ;; Parameters:    Size  Location     Type
 16264 ;;  dividend        2  [STACK] int 
 16265 ;;  divisor         2  [STACK] int 
 16266 ;; Auto vars:     Size  Location     Type
 16267 ;;  quotient        2  [STACK] int 
 16268 ;;  sign            1  [STACK] unsigned char 
 16269 ;;  counter         1  [STACK] unsigned char 
 16270 ;; Return value:  Size  Location     Type
 16271 ;;                  2  [STACK] int 
 16272 ;; Registers used:
 16273 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16274 ;; Tracked objects:
 16275 ;;		On entry : 0/0
 16276 ;;		On exit  : 0/0
 16277 ;;		Unchanged: 0/0
 16278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16283 ;;Total ram usage:        0 bytes
 16284 ;; Hardware stack levels used:    1
 16285 ;; Hardware stack levels required when called:    7
 16286 ;; This function calls:
 16287 ;;		Nothing
 16288 ;; This function is called by:
 16289 ;;		_efgtoa
 16290 ;; This function uses a reentrant model
 16291 ;;
 16292                           
 16293                           	psect	text60
 16294  016B00                     __ptext60:
 16295                           	opt callstack 0
 16296  016B00                     ___awdiv:
 16297                           	opt callstack 0
 16298                           
 16299                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16300  016B00  52E6               	movf	postinc1,f,c
 16301  016B02  52E6               	movf	postinc1,f,c
 16302  016B04  52E6               	movf	postinc1,f,c
 16303  016B06  52E6               	movf	postinc1,f,c
 16304                           
 16305                           ;stkvar	_sign @ sp[(-4)+2]
 16306                           
 16307                           ;incstack = 0
 16308  016B08  0EFE               	movlw	-2
 16309  016B0A  6AE3               	clrf	plusw1,c
 16310                           
 16311                           ;stkvar	_divisor @ sp[(-4)+-4]
 16312  016B0C  0EF9               	movlw	-7
 16313  016B0E  AEE3               	btfss	plusw1,7,c
 16314  016B10  D009               	goto	l6993
 16315                           
 16316                           ;stkvar	_divisor @ sp[(-4)+-4]
 16317                           ;stkvar	_divisor @ sp[(-4)+-4]
 16318  016B12  0EF8               	movlw	-8
 16319  016B14  6CE3               	negf	plusw1,c
 16320  016B16  0EF9               	movlw	-7
 16321  016B18  1EE3               	comf	plusw1,f,c
 16322  016B1A  B0D8               	btfsc	status,0,c
 16323  016B1C  2AE3               	incf	plusw1,f,c
 16324                           
 16325                           ;stkvar	_sign @ sp[(-4)+2]
 16326  016B1E  0EFE               	movlw	-2
 16327  016B20  6AE3               	clrf	plusw1,c
 16328  016B22  2AE3               	incf	plusw1,f,c
 16329  016B24                     l6993:
 16330                           
 16331                           ;stkvar	_dividend @ sp[(-4)+-2]
 16332  016B24  0EFB               	movlw	-5
 16333  016B26  AEE3               	btfss	plusw1,7,c
 16334  016B28  D008               	goto	l6999
 16335                           
 16336                           ;stkvar	_dividend @ sp[(-4)+-2]
 16337                           ;stkvar	_dividend @ sp[(-4)+-2]
 16338  016B2A  0EFA               	movlw	-6
 16339  016B2C  6CE3               	negf	plusw1,c
 16340  016B2E  0EFB               	movlw	-5
 16341  016B30  1EE3               	comf	plusw1,f,c
 16342  016B32  B0D8               	btfsc	status,0,c
 16343  016B34  2AE3               	incf	plusw1,f,c
 16344                           
 16345                           ;stkvar	_sign @ sp[(-4)+2]
 16346  016B36  0EFE               	movlw	-2
 16347  016B38  70E3               	btg	plusw1,0,c
 16348  016B3A                     l6999:
 16349                           
 16350                           ;stkvar	_quotient @ sp[(-4)+0]
 16351  016B3A  0EFC               	movlw	-4
 16352  016B3C  6AE3               	clrf	plusw1,c
 16353  016B3E  0EFD               	movlw	-3
 16354  016B40  6AE3               	clrf	plusw1,c
 16355                           
 16356                           ;stkvar	_divisor @ sp[(-4)+-4]
 16357  016B42  0EF8               	movlw	-8
 16358  016B44  006F FF8C  F025    	movff	plusw1,btemp
 16359  016B4A  0EF9               	movlw	-7
 16360  016B4C  50E3               	movf	plusw1,w,c
 16361  016B4E  1025               	iorwf	btemp^0,w,c
 16362  016B50  B4D8               	btfsc	status,2,c
 16363  016B52  D066               	goto	u5590
 16364                           
 16365                           ;stkvar	_counter @ sp[(-4)+3]
 16366  016B54  0EFF               	movlw	-1
 16367  016B56  6AE3               	clrf	plusw1,c
 16368  016B58  D012               	goto	L16
 16369  016B5A                     l7005:
 16370                           
 16371                           ;stkvar	_divisor @ sp[(-4)+-4]
 16372  016B5A  0EF8               	movlw	-8
 16373  016B5C  50E3               	movf	plusw1,w,c
 16374  016B5E  90D8               	bcf	status,0,c
 16375  016B60  34E8               	rlcf	wreg,w,c
 16376  016B62  6E25               	movwf	btemp^0,c
 16377  016B64  0EF8               	movlw	-8
 16378  016B66  0060  F097  FFE3   	movff	btemp,plusw1
 16379  016B6C  0EF9               	movlw	-7
 16380  016B6E  50E3               	movf	plusw1,w,c
 16381  016B70  34E8               	rlcf	wreg,w,c
 16382  016B72  6E25               	movwf	btemp^0,c
 16383  016B74  0EF9               	movlw	-7
 16384  016B76  0060  F097  FFE3   	movff	btemp,plusw1
 16385                           
 16386                           ;stkvar	_counter @ sp[(-4)+3]
 16387  016B7C  0EFF               	movlw	-1
 16388  016B7E                     L16:
 16389  016B7E  2AE3               	incf	plusw1,f,c
 16390                           
 16391                           ;stkvar	_divisor @ sp[(-4)+-4]
 16392  016B80  0EF9               	movlw	-7
 16393  016B82  AEE3               	btfss	plusw1,7,c
 16394  016B84  D7EA               	goto	l7005
 16395  016B86                     u5570:
 16396                           
 16397                           ;stkvar	_quotient @ sp[(-4)+0]
 16398  016B86  0EFC               	movlw	-4
 16399  016B88  50E3               	movf	plusw1,w,c
 16400  016B8A  90D8               	bcf	status,0,c
 16401  016B8C  34E8               	rlcf	wreg,w,c
 16402  016B8E  6E25               	movwf	btemp^0,c
 16403  016B90  0EFC               	movlw	-4
 16404  016B92  0060  F097  FFE3   	movff	btemp,plusw1
 16405  016B98  0EFD               	movlw	-3
 16406  016B9A  50E3               	movf	plusw1,w,c
 16407  016B9C  34E8               	rlcf	wreg,w,c
 16408  016B9E  6E25               	movwf	btemp^0,c
 16409  016BA0  0EFD               	movlw	-3
 16410  016BA2  0060  F097  FFE3   	movff	btemp,plusw1
 16411                           
 16412                           ;stkvar	_divisor @ sp[(-4)+-4]
 16413  016BA8  0EF8               	movlw	-8
 16414  016BAA  006F FF8C  F02F    	movff	plusw1,btemp+10
 16415  016BB0  0EF9               	movlw	-7
 16416  016BB2  006F FF8C  F030    	movff	plusw1,btemp+11
 16417                           
 16418                           ;stkvar	_dividend @ sp[(-4)+-2]
 16419  016BB8  0EFA               	movlw	-6
 16420  016BBA  006F FF8C  F02D    	movff	plusw1,btemp+8
 16421  016BC0  0EFB               	movlw	-5
 16422  016BC2  006F FF8C  F02E    	movff	plusw1,btemp+9
 16423  016BC8  502F               	movf	(btemp+10)^0,w,c
 16424  016BCA  5C2D               	subwf	(btemp+8)^0,w,c
 16425  016BCC  5030               	movf	(btemp+11)^0,w,c
 16426  016BCE  582E               	subwfb	(btemp+9)^0,w,c
 16427  016BD0  A0D8               	btfss	status,0,c
 16428  016BD2  D016               	goto	l7019
 16429                           
 16430                           ;stkvar	_divisor @ sp[(-4)+-4]
 16431                           ;stkvar	_dividend @ sp[(-4)+-2]
 16432  016BD4  0EFA               	movlw	-6
 16433  016BD6  50E3               	movf	plusw1,w,c
 16434  016BD8  6E25               	movwf	btemp^0,c
 16435  016BDA  0EF8               	movlw	-8
 16436  016BDC  50E3               	movf	plusw1,w,c
 16437  016BDE  5E25               	subwf	btemp^0,f,c
 16438  016BE0  0EFA               	movlw	-6
 16439  016BE2  0060  F097  FFE3   	movff	btemp,plusw1
 16440  016BE8  0EFB               	movlw	-5
 16441  016BEA  50E3               	movf	plusw1,w,c
 16442  016BEC  6E25               	movwf	btemp^0,c
 16443  016BEE  0EF9               	movlw	-7
 16444  016BF0  50E3               	movf	plusw1,w,c
 16445  016BF2  5A25               	subwfb	btemp^0,f,c
 16446  016BF4  0EFB               	movlw	-5
 16447  016BF6  0060  F097  FFE3   	movff	btemp,plusw1
 16448                           
 16449                           ;stkvar	_quotient @ sp[(-4)+0]
 16450  016BFC  0EFC               	movlw	-4
 16451  016BFE  80E3               	bsf	plusw1,0,c
 16452  016C00                     l7019:
 16453                           
 16454                           ;stkvar	_divisor @ sp[(-4)+-4]
 16455  016C00  90D8               	bcf	status,0,c
 16456  016C02  0EF9               	movlw	-7
 16457  016C04  32E3               	rrcf	plusw1,f,c
 16458  016C06  0EF8               	movlw	-8
 16459  016C08  32E3               	rrcf	plusw1,f,c
 16460                           
 16461                           ;stkvar	_counter @ sp[(-4)+3]
 16462  016C0A  0EFF               	movlw	-1
 16463  016C0C  50E3               	movf	plusw1,w,c
 16464  016C0E  6E25               	movwf	btemp^0,c
 16465  016C10  0E01               	movlw	1
 16466  016C12  5E25               	subwf	btemp^0,f,c
 16467  016C14  0EFF               	movlw	-1
 16468  016C16  0060  F097  FFE3   	movff	btemp,plusw1
 16469  016C1C  A4D8               	btfss	status,2,c
 16470  016C1E  D7B3               	goto	u5570
 16471  016C20                     u5590:
 16472                           
 16473                           ;stkvar	_sign @ sp[(-4)+2]
 16474  016C20  0EFE               	movlw	-2
 16475  016C22  50E3               	movf	plusw1,w,c
 16476  016C24  B4D8               	btfsc	status,2,c
 16477  016C26  D006               	goto	l7027
 16478                           
 16479                           ;stkvar	_quotient @ sp[(-4)+0]
 16480                           ;stkvar	_quotient @ sp[(-4)+0]
 16481  016C28  0EFC               	movlw	-4
 16482  016C2A  6CE3               	negf	plusw1,c
 16483  016C2C  0EFD               	movlw	-3
 16484  016C2E  1EE3               	comf	plusw1,f,c
 16485  016C30  B0D8               	btfsc	status,0,c
 16486  016C32  2AE3               	incf	plusw1,f,c
 16487  016C34                     l7027:
 16488                           
 16489                           ;stkvar	_quotient @ sp[(-4)+0]
 16490  016C34  0EFC               	movlw	-4
 16491  016C36  006F FF8C  F025    	movff	plusw1,btemp
 16492  016C3C  0EFD               	movlw	-3
 16493  016C3E  006F FF8C  F026    	movff	plusw1,btemp+1
 16494                           
 16495                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16496  016C44  0EF8               	movlw	248
 16497  016C46  26E1               	addwf	fsr1l,f,c
 16498  016C48  0EFF               	movlw	255
 16499  016C4A  22E2               	addwfc	fsr1h,f,c
 16500  016C4C  0012               	return		;funcret
 16501  016C4E                     __end_of___awdiv:
 16502                           	opt callstack 0
 16503                           
 16504 ;; *************** function _dtoa *****************
 16505 ;; Defined at:
 16506 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16507 ;; Parameters:    Size  Location     Type
 16508 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16509 ;;		 -> f(6), NULL(0), 
 16510 ;;  d               8  [STACK] long long 
 16511 ;; Auto vars:     Size  Location     Type
 16512 ;;  n               8  [STACK] long long 
 16513 ;;  i               2  [STACK] int 
 16514 ;;  s               2  [STACK] int 
 16515 ;;  w               2  [STACK] int 
 16516 ;;  p               2  [STACK] int 
 16517 ;; Return value:  Size  Location     Type
 16518 ;;                  2  [STACK] int 
 16519 ;; Registers used:
 16520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 16521 ;; Tracked objects:
 16522 ;;		On entry : 0/0
 16523 ;;		On exit  : 0/0
 16524 ;;		Unchanged: 0/0
 16525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16530 ;;Total ram usage:        0 bytes
 16531 ;; Hardware stack levels used:    1
 16532 ;; Hardware stack levels required when called:   12
 16533 ;; This function calls:
 16534 ;;		___aodiv
 16535 ;;		___aomod
 16536 ;;		_abs
 16537 ;;		_pad
 16538 ;; This function is called by:
 16539 ;;		_vfpfcnvrt
 16540 ;; This function uses a reentrant model
 16541 ;;
 16542                           
 16543                           	psect	text61
 16544  014034                     __ptext61:
 16545                           	opt callstack 0
 16546  014034                     _dtoa:
 16547                           	opt callstack 0
 16548                           
 16549                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16550  014034  0E12               	movlw	18
 16551  014036  26E1               	addwf	fsr1l,f,c
 16552  014038  0E00               	movlw	0
 16553  01403A  22E2               	addwfc	fsr1h,f,c
 16554                           
 16555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 16556                           ;stkvar	_d @ sp[(-18)+-10]
 16557                           
 16558                           ;incstack = 0
 16559  01403C  0EE4               	movlw	228
 16560  01403E  24E1               	addwf	fsr1l,w,c
 16561  014040  6ED9               	movwf	fsr2l,c
 16562  014042  0EFF               	movlw	255
 16563  014044  20E2               	addwfc	fsr1h,w,c
 16564  014046  6EDA               	movwf	fsr2h,c
 16565                           
 16566                           ;stkvar	_n @ sp[(-18)+2]
 16567  014048  0E08               	movlw	8
 16568  01404A  6E25               	movwf	btemp^0,c
 16569  01404C  0EF0               	movlw	-16
 16570  01404E                     us935999:
 16571  01404E  006F FF7B FFE3     	movff	postinc2,plusw1
 16572  014054  28E8               	incf	wreg,w,c
 16573  014056  2E25               	decfsz	btemp^0,f,c
 16574  014058  D7FA               	bra	us935999
 16575                           
 16576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 16577                           ;stkvar	_n @ sp[(-18)+2]
 16578  01405A  0EF7               	movlw	-9
 16579  01405C  AEE3               	btfss	plusw1,7,c
 16580  01405E  D002               	goto	u9360
 16581  014060  0E01               	movlw	1
 16582  014062  D001               	goto	u9370
 16583  014064                     u9360:
 16584  014064  0E00               	movlw	0
 16585  014066                     u9370:
 16586  014066  6E2F               	movwf	(btemp+10)^0,c
 16587  014068  6A30               	clrf	(btemp+11)^0,c
 16588                           
 16589                           ;stkvar	_s @ sp[(-18)+12]
 16590  01406A  0EFA               	movlw	-6
 16591  01406C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 16592  014072  0EFB               	movlw	-5
 16593  014074  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 16594                           
 16595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 16596                           ;stkvar	_s @ sp[(-18)+12]
 16597  01407A  0EFA               	movlw	-6
 16598  01407C  006F FF8C  F025    	movff	plusw1,btemp
 16599  014082  0EFB               	movlw	-5
 16600  014084  50E3               	movf	plusw1,w,c
 16601  014086  1025               	iorwf	btemp^0,w,c
 16602  014088  B4D8               	btfsc	status,2,c
 16603  01408A  D025               	goto	u9390
 16604                           
 16605                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 16606                           ;stkvar	_n @ sp[(-18)+2]
 16607                           ;stkvar	_n @ sp[(-18)+2]
 16608  01408C  0EF0               	movlw	-16
 16609  01408E  6CE3               	negf	plusw1,c
 16610  014090  0EF1               	movlw	-15
 16611  014092  1EE3               	comf	plusw1,f,c
 16612  014094  0EF2               	movlw	-14
 16613  014096  1EE3               	comf	plusw1,f,c
 16614  014098  0EF3               	movlw	-13
 16615  01409A  1EE3               	comf	plusw1,f,c
 16616  01409C  0EF4               	movlw	-12
 16617  01409E  1EE3               	comf	plusw1,f,c
 16618  0140A0  0EF5               	movlw	-11
 16619  0140A2  1EE3               	comf	plusw1,f,c
 16620  0140A4  0EF6               	movlw	-10
 16621  0140A6  1EE3               	comf	plusw1,f,c
 16622  0140A8  0EF7               	movlw	-9
 16623  0140AA  1EE3               	comf	plusw1,f,c
 16624  0140AC  E314               	bnc	u9390
 16625  0140AE  0EF1               	movlw	-15
 16626  0140B0  2AE3               	incf	plusw1,f,c
 16627  0140B2  E311               	bnc	u9390
 16628  0140B4  0EF2               	movlw	-14
 16629  0140B6  2AE3               	incf	plusw1,f,c
 16630  0140B8  E30E               	bnc	u9390
 16631  0140BA  0EF3               	movlw	-13
 16632  0140BC  2AE3               	incf	plusw1,f,c
 16633  0140BE  E30B               	bnc	u9390
 16634  0140C0  0EF4               	movlw	-12
 16635  0140C2  2AE3               	incf	plusw1,f,c
 16636  0140C4  E308               	bnc	u9390
 16637  0140C6  0EF5               	movlw	-11
 16638  0140C8  2AE3               	incf	plusw1,f,c
 16639  0140CA  E305               	bnc	u9390
 16640  0140CC  0EF6               	movlw	-10
 16641  0140CE  2AE3               	incf	plusw1,f,c
 16642  0140D0  E302               	bnc	u9390
 16643  0140D2  0EF7               	movlw	-9
 16644  0140D4  2AE3               	incf	plusw1,f,c
 16645  0140D6                     u9390:
 16646                           
 16647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 16648  0140D6  AE0D               	btfss	(_prec+1)^0,7,c
 16649                           
 16650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 16651  0140D8  920E               	bcf	_flags^0,1,c
 16652                           
 16653                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 16654  0140DA  BE0D               	btfsc	(_prec+1)^0,7,c
 16655  0140DC  D005               	goto	u9410
 16656  0140DE  500D               	movf	(_prec+1)^0,w,c
 16657  0140E0  E110               	bnz	l10101
 16658  0140E2  040C               	decf	_prec^0,w,c
 16659  0140E4  B0D8               	btfsc	status,0,c
 16660  0140E6  D00D               	goto	l10101
 16661  0140E8                     u9410:
 16662  0140E8  0E01               	movlw	1
 16663  0140EA  6E2F               	movwf	(btemp+10)^0,c
 16664  0140EC  0E00               	movlw	0
 16665  0140EE  6E30               	movwf	(btemp+11)^0,c
 16666                           
 16667                           ;stkvar	_p @ sp[(-18)+16]
 16668  0140F0  0EFE               	movlw	-2
 16669  0140F2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 16670  0140F8  0EFF               	movlw	-1
 16671  0140FA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 16672  014100  D008               	goto	l2008
 16673  014102                     l10101:
 16674                           
 16675                           ;stkvar	_p @ sp[(-18)+16]
 16676  014102  0EFE               	movlw	-2
 16677  014104  0060  F033  FFE3   	movff	_prec,plusw1
 16678  01410A  0EFF               	movlw	-1
 16679  01410C  0060  F037  FFE3   	movff	_prec+1,plusw1
 16680  014112                     l2008:
 16681                           
 16682                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 16683                           ;stkvar	_w @ sp[(-18)+14]
 16684  014112  0EFC               	movlw	-4
 16685  014114  0060  F02B  FFE3   	movff	_width,plusw1
 16686  01411A  0EFD               	movlw	-3
 16687  01411C  0060  F02F  FFE3   	movff	_width+1,plusw1
 16688                           
 16689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 16690                           ;stkvar	_s @ sp[(-18)+12]
 16691  014122  0EFA               	movlw	-6
 16692  014124  006F FF8C  F025    	movff	plusw1,btemp
 16693  01412A  0EFB               	movlw	-5
 16694  01412C  50E3               	movf	plusw1,w,c
 16695  01412E  1025               	iorwf	btemp^0,w,c
 16696  014130  A4D8               	btfss	status,2,c
 16697  014132  D002               	goto	u9430
 16698  014134  A40E               	btfss	_flags^0,2,c
 16699  014136  D00A               	goto	l10109
 16700  014138                     u9430:
 16701                           
 16702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 16703                           ;stkvar	_w @ sp[(-18)+14]
 16704  014138  50E1               	movf	fsr1l,w,c
 16705  01413A  0FFC               	addlw	-4
 16706  01413C  6ED9               	movwf	fsr2l,c
 16707  01413E  50E2               	movf	fsr1h,w,c
 16708  014140  6EDA               	movwf	fsr2h,c
 16709  014142  0EFF               	movlw	255
 16710  014144  22DA               	addwfc	fsr2h,f,c
 16711  014146  06DE               	decf	postinc2,f,c
 16712  014148  0E00               	movlw	0
 16713  01414A  5ADD               	subwfb	postdec2,f,c
 16714  01414C                     l10109:
 16715                           
 16716                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 16717  01414C  0E4F               	movlw	79
 16718  01414E  6E2F               	movwf	(btemp+10)^0,c
 16719  014150  0E00               	movlw	0
 16720  014152  6E30               	movwf	(btemp+11)^0,c
 16721                           
 16722                           ;stkvar	_i @ sp[(-18)+10]
 16723  014154  0EF8               	movlw	-8
 16724  014156  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 16725  01415C  0EF9               	movlw	-7
 16726  01415E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 16727                           
 16728                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 16729  014164  0103               	movlb	3	; () banked
 16730  014166  6BE3               	clrf	(_dbuf+79)& (0+255),b
 16731                           
 16732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16733  014168  D109               	goto	l10123
 16734  01416A                     l10113:
 16735                           
 16736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 16737                           ;stkvar	_i @ sp[(-18)+10]
 16738  01416A  50E1               	movf	fsr1l,w,c
 16739  01416C  0FF8               	addlw	-8
 16740  01416E  6ED9               	movwf	fsr2l,c
 16741  014170  50E2               	movf	fsr1h,w,c
 16742  014172  6EDA               	movwf	fsr2h,c
 16743  014174  0EFF               	movlw	255
 16744  014176  22DA               	addwfc	fsr2h,f,c
 16745  014178  06DE               	decf	postinc2,f,c
 16746  01417A  0E00               	movlw	0
 16747  01417C  5ADD               	subwfb	postdec2,f,c
 16748                           
 16749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 16750  01417E  0E0A               	movlw	10
 16751  014180  6EE6               	movwf	postinc1,c
 16752  014182  0E00               	movlw	0
 16753  014184  6EE6               	movwf	postinc1,c
 16754  014186  0E00               	movlw	0
 16755  014188  6EE6               	movwf	postinc1,c
 16756  01418A  0E00               	movlw	0
 16757  01418C  6EE6               	movwf	postinc1,c
 16758  01418E  0E00               	movlw	0
 16759  014190  6EE6               	movwf	postinc1,c
 16760  014192  0E00               	movlw	0
 16761  014194  6EE6               	movwf	postinc1,c
 16762  014196  0E00               	movlw	0
 16763  014198  6EE6               	movwf	postinc1,c
 16764  01419A  0E00               	movlw	0
 16765  01419C  6EE6               	movwf	postinc1,c
 16766                           
 16767                           ;stkvar	_n @ sp[(-26)+2]
 16768  01419E  50E1               	movf	fsr1l,w,c
 16769  0141A0  0FE8               	addlw	-24
 16770  0141A2  6ED9               	movwf	fsr2l,c
 16771  0141A4  50E2               	movf	fsr1h,w,c
 16772  0141A6  6EDA               	movwf	fsr2h,c
 16773  0141A8  0EFF               	movlw	255
 16774  0141AA  22DA               	addwfc	fsr2h,f,c
 16775  0141AC  006F FF7B FFE6     	movff	postinc2,postinc1
 16776  0141B2  006F FF7B FFE6     	movff	postinc2,postinc1
 16777  0141B8  006F FF7B FFE6     	movff	postinc2,postinc1
 16778  0141BE  006F FF7B FFE6     	movff	postinc2,postinc1
 16779  0141C4  006F FF7B FFE6     	movff	postinc2,postinc1
 16780  0141CA  006F FF7B FFE6     	movff	postinc2,postinc1
 16781  0141D0  006F FF7B FFE6     	movff	postinc2,postinc1
 16782  0141D6  006F FF7B FFE6     	movff	postinc2,postinc1
 16783  0141DC  EC5C  F0AE         	call	___aomod	;wreg free
 16784  0141E0  52E5               	movf	postdec1,f,c
 16785  0141E2  006F FF9C  F03C    	movff	indf1,btemp+23
 16786  0141E8  52E5               	movf	postdec1,f,c
 16787  0141EA  006F FF9C  F03B    	movff	indf1,btemp+22
 16788  0141F0  52E5               	movf	postdec1,f,c
 16789  0141F2  006F FF9C  F03A    	movff	indf1,btemp+21
 16790  0141F8  52E5               	movf	postdec1,f,c
 16791  0141FA  006F FF9C  F039    	movff	indf1,btemp+20
 16792  014200  52E5               	movf	postdec1,f,c
 16793  014202  006F FF9C  F038    	movff	indf1,btemp+19
 16794  014208  52E5               	movf	postdec1,f,c
 16795  01420A  006F FF9C  F037    	movff	indf1,btemp+18
 16796  014210  52E5               	movf	postdec1,f,c
 16797  014212  006F FF9C  F036    	movff	indf1,btemp+17
 16798  014218  52E5               	movf	postdec1,f,c
 16799  01421A  006F FF9C  F035    	movff	indf1,btemp+16
 16800  014220  0EF8               	movlw	248
 16801  014222  26E1               	addwf	fsr1l,f,c
 16802  014224  0EFF               	movlw	255
 16803  014226  22E2               	addwfc	fsr1h,f,c
 16804  014228  0060  F0D4  F02F   	movff	btemp+16,btemp+10
 16805  01422E  0060  F0D8  F030   	movff	btemp+17,btemp+11
 16806  014234  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 16807  01423A  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 16808  014240  EC51  F0C4         	call	_abs	;wreg free
 16809  014244  0E30               	movlw	48
 16810  014246  2625               	addwf	btemp^0,f,c
 16811                           
 16812                           ;stkvar	_i @ sp[(-18)+10]
 16813  014248  0EF8               	movlw	-8
 16814  01424A  006F FF8C  F02F    	movff	plusw1,btemp+10
 16815  014250  0EF9               	movlw	-7
 16816  014252  006F FF8C  F030    	movff	plusw1,btemp+11
 16817  014258  0E94               	movlw	low _dbuf
 16818  01425A  242F               	addwf	(btemp+10)^0,w,c
 16819  01425C  6ED9               	movwf	fsr2l,c
 16820  01425E  0E03               	movlw	high _dbuf
 16821  014260  2030               	addwfc	(btemp+11)^0,w,c
 16822  014262  6EDA               	movwf	fsr2h,c
 16823  014264  0060  F097  FFDF   	movff	btemp,indf2
 16824                           
 16825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 16826                           ;stkvar	_p @ sp[(-18)+16]
 16827  01426A  50E1               	movf	fsr1l,w,c
 16828  01426C  0FFE               	addlw	-2
 16829  01426E  6ED9               	movwf	fsr2l,c
 16830  014270  50E2               	movf	fsr1h,w,c
 16831  014272  6EDA               	movwf	fsr2h,c
 16832  014274  0EFF               	movlw	255
 16833  014276  22DA               	addwfc	fsr2h,f,c
 16834  014278  06DE               	decf	postinc2,f,c
 16835  01427A  0E00               	movlw	0
 16836  01427C  5ADD               	subwfb	postdec2,f,c
 16837                           
 16838                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 16839                           ;stkvar	_w @ sp[(-18)+14]
 16840  01427E  50E1               	movf	fsr1l,w,c
 16841  014280  0FFC               	addlw	-4
 16842  014282  6ED9               	movwf	fsr2l,c
 16843  014284  50E2               	movf	fsr1h,w,c
 16844  014286  6EDA               	movwf	fsr2h,c
 16845  014288  0EFF               	movlw	255
 16846  01428A  22DA               	addwfc	fsr2h,f,c
 16847  01428C  06DE               	decf	postinc2,f,c
 16848  01428E  0E00               	movlw	0
 16849  014290  5ADD               	subwfb	postdec2,f,c
 16850                           
 16851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 16852  014292  0E0A               	movlw	10
 16853  014294  6EE6               	movwf	postinc1,c
 16854  014296  0E00               	movlw	0
 16855  014298  6EE6               	movwf	postinc1,c
 16856  01429A  0E00               	movlw	0
 16857  01429C  6EE6               	movwf	postinc1,c
 16858  01429E  0E00               	movlw	0
 16859  0142A0  6EE6               	movwf	postinc1,c
 16860  0142A2  0E00               	movlw	0
 16861  0142A4  6EE6               	movwf	postinc1,c
 16862  0142A6  0E00               	movlw	0
 16863  0142A8  6EE6               	movwf	postinc1,c
 16864  0142AA  0E00               	movlw	0
 16865  0142AC  6EE6               	movwf	postinc1,c
 16866  0142AE  0E00               	movlw	0
 16867  0142B0  6EE6               	movwf	postinc1,c
 16868                           
 16869                           ;stkvar	_n @ sp[(-26)+2]
 16870  0142B2  50E1               	movf	fsr1l,w,c
 16871  0142B4  0FE8               	addlw	-24
 16872  0142B6  6ED9               	movwf	fsr2l,c
 16873  0142B8  50E2               	movf	fsr1h,w,c
 16874  0142BA  6EDA               	movwf	fsr2h,c
 16875  0142BC  0EFF               	movlw	255
 16876  0142BE  22DA               	addwfc	fsr2h,f,c
 16877  0142C0  006F FF7B FFE6     	movff	postinc2,postinc1
 16878  0142C6  006F FF7B FFE6     	movff	postinc2,postinc1
 16879  0142CC  006F FF7B FFE6     	movff	postinc2,postinc1
 16880  0142D2  006F FF7B FFE6     	movff	postinc2,postinc1
 16881  0142D8  006F FF7B FFE6     	movff	postinc2,postinc1
 16882  0142DE  006F FF7B FFE6     	movff	postinc2,postinc1
 16883  0142E4  006F FF7B FFE6     	movff	postinc2,postinc1
 16884  0142EA  006F FF7B FFE6     	movff	postinc2,postinc1
 16885  0142F0  ECE2  F0AB         	call	___aodiv	;wreg free
 16886  0142F4  52E5               	movf	postdec1,f,c
 16887  0142F6  006F FF9C  F03C    	movff	indf1,btemp+23
 16888  0142FC  52E5               	movf	postdec1,f,c
 16889  0142FE  006F FF9C  F03B    	movff	indf1,btemp+22
 16890  014304  52E5               	movf	postdec1,f,c
 16891  014306  006F FF9C  F03A    	movff	indf1,btemp+21
 16892  01430C  52E5               	movf	postdec1,f,c
 16893  01430E  006F FF9C  F039    	movff	indf1,btemp+20
 16894  014314  52E5               	movf	postdec1,f,c
 16895  014316  006F FF9C  F038    	movff	indf1,btemp+19
 16896  01431C  52E5               	movf	postdec1,f,c
 16897  01431E  006F FF9C  F037    	movff	indf1,btemp+18
 16898  014324  52E5               	movf	postdec1,f,c
 16899  014326  006F FF9C  F036    	movff	indf1,btemp+17
 16900  01432C  52E5               	movf	postdec1,f,c
 16901  01432E  006F FF9C  F035    	movff	indf1,btemp+16
 16902  014334  0EF8               	movlw	248
 16903  014336  26E1               	addwf	fsr1l,f,c
 16904  014338  0EFF               	movlw	255
 16905  01433A  22E2               	addwfc	fsr1h,f,c
 16906                           
 16907                           ;stkvar	_n @ sp[(-18)+2]
 16908  01433C  0EF0               	movlw	-16
 16909  01433E  0060  F0D7  FFE3   	movff	btemp+16,plusw1
 16910  014344  0EF1               	movlw	-15
 16911  014346  0060  F0DB  FFE3   	movff	btemp+17,plusw1
 16912  01434C  0EF2               	movlw	-14
 16913  01434E  0060  F0DF  FFE3   	movff	btemp+18,plusw1
 16914  014354  0EF3               	movlw	-13
 16915  014356  0060  F0E3  FFE3   	movff	btemp+19,plusw1
 16916  01435C  0EF4               	movlw	-12
 16917  01435E  0060  F0E7  FFE3   	movff	btemp+20,plusw1
 16918  014364  0EF5               	movlw	-11
 16919  014366  0060  F0EB  FFE3   	movff	btemp+21,plusw1
 16920  01436C  0EF6               	movlw	-10
 16921  01436E  0060  F0EF  FFE3   	movff	btemp+22,plusw1
 16922  014374  0EF7               	movlw	-9
 16923  014376  0060  F0F3  FFE3   	movff	btemp+23,plusw1
 16924  01437C                     l10123:
 16925                           
 16926                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16927                           ;stkvar	_i @ sp[(-18)+10]
 16928  01437C  0EF9               	movlw	-7
 16929  01437E  BEE3               	btfsc	plusw1,7,c
 16930  014380  D036               	goto	u9480
 16931  014382  0EF9               	movlw	-7
 16932  014384  50E3               	movf	plusw1,w,c
 16933  014386  E104               	bnz	u9440
 16934  014388  0EF8               	movlw	-8
 16935  01438A  04E3               	decf	plusw1,w,c
 16936  01438C  A0D8               	btfss	status,0,c
 16937  01438E  D02F               	goto	u9480
 16938  014390                     u9440:
 16939                           
 16940                           ;stkvar	_n @ sp[(-18)+2]
 16941  014390  0EF0               	movlw	-16
 16942  014392  50E3               	movf	plusw1,w,c
 16943  014394  E115               	bnz	u9451
 16944  014396  0EF1               	movlw	-15
 16945  014398  50E3               	movf	plusw1,w,c
 16946  01439A  E112               	bnz	u9451
 16947  01439C  0EF2               	movlw	-14
 16948  01439E  50E3               	movf	plusw1,w,c
 16949  0143A0  E10F               	bnz	u9451
 16950  0143A2  0EF3               	movlw	-13
 16951  0143A4  50E3               	movf	plusw1,w,c
 16952  0143A6  E10C               	bnz	u9451
 16953  0143A8  0EF4               	movlw	-12
 16954  0143AA  50E3               	movf	plusw1,w,c
 16955  0143AC  E109               	bnz	u9451
 16956  0143AE  0EF5               	movlw	-11
 16957  0143B0  50E3               	movf	plusw1,w,c
 16958  0143B2  E106               	bnz	u9451
 16959  0143B4  0EF6               	movlw	-10
 16960  0143B6  50E3               	movf	plusw1,w,c
 16961  0143B8  E103               	bnz	u9451
 16962  0143BA  0EF7               	movlw	-9
 16963  0143BC  50E3               	movf	plusw1,w,c
 16964  0143BE  A4D8               	btfss	status,2,c
 16965  0143C0                     u9451:
 16966  0143C0  D6D4               	goto	l10113
 16967                           
 16968                           ;stkvar	_p @ sp[(-18)+16]
 16969  0143C2  0EFF               	movlw	-1
 16970  0143C4  BEE3               	btfsc	plusw1,7,c
 16971  0143C6  D007               	goto	u9460
 16972  0143C8  0EFF               	movlw	-1
 16973  0143CA  50E3               	movf	plusw1,w,c
 16974  0143CC  E103               	bnz	u9461
 16975  0143CE  0EFE               	movlw	-2
 16976  0143D0  04E3               	decf	plusw1,w,c
 16977  0143D2  B0D8               	btfsc	status,0,c
 16978  0143D4                     u9461:
 16979  0143D4  D6CA               	goto	l10113
 16980  0143D6                     u9460:
 16981                           
 16982                           ;stkvar	_w @ sp[(-18)+14]
 16983  0143D6  0EFD               	movlw	-3
 16984  0143D8  BEE3               	btfsc	plusw1,7,c
 16985  0143DA  D009               	goto	u9480
 16986  0143DC  0EFD               	movlw	-3
 16987  0143DE  50E3               	movf	plusw1,w,c
 16988  0143E0  E104               	bnz	u9470
 16989  0143E2  0EFC               	movlw	-4
 16990  0143E4  04E3               	decf	plusw1,w,c
 16991  0143E6  A0D8               	btfss	status,0,c
 16992  0143E8  D002               	goto	u9480
 16993  0143EA                     u9470:
 16994  0143EA  B20E               	btfsc	_flags^0,1,c
 16995  0143EC  D6BE               	goto	l10113
 16996  0143EE                     u9480:
 16997                           
 16998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 16999                           ;stkvar	_s @ sp[(-18)+12]
 17000  0143EE  0EFA               	movlw	-6
 17001  0143F0  006F FF8C  F025    	movff	plusw1,btemp
 17002  0143F6  0EFB               	movlw	-5
 17003  0143F8  50E3               	movf	plusw1,w,c
 17004  0143FA  1025               	iorwf	btemp^0,w,c
 17005  0143FC  A4D8               	btfss	status,2,c
 17006  0143FE  D002               	goto	u9500
 17007  014400  A40E               	btfss	_flags^0,2,c
 17008  014402  D033               	goto	l10147
 17009  014404                     u9500:
 17010                           
 17011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 17012                           ;stkvar	_i @ sp[(-18)+10]
 17013  014404  50E1               	movf	fsr1l,w,c
 17014  014406  0FF8               	addlw	-8
 17015  014408  6ED9               	movwf	fsr2l,c
 17016  01440A  50E2               	movf	fsr1h,w,c
 17017  01440C  6EDA               	movwf	fsr2h,c
 17018  01440E  0EFF               	movlw	255
 17019  014410  22DA               	addwfc	fsr2h,f,c
 17020  014412  06DE               	decf	postinc2,f,c
 17021  014414  0E00               	movlw	0
 17022  014416  5ADD               	subwfb	postdec2,f,c
 17023                           
 17024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 17025                           ;stkvar	_s @ sp[(-18)+12]
 17026  014418  0EFA               	movlw	-6
 17027  01441A  006F FF8C  F025    	movff	plusw1,btemp
 17028  014420  0EFB               	movlw	-5
 17029  014422  50E3               	movf	plusw1,w,c
 17030  014424  1025               	iorwf	btemp^0,w,c
 17031  014426  A4D8               	btfss	status,2,c
 17032  014428  D002               	goto	l10143
 17033  01442A  0E2B               	movlw	43
 17034  01442C  D001               	goto	L17
 17035  01442E                     l10143:
 17036  01442E  0E2D               	movlw	45
 17037  014430                     L17:
 17038  014430  6E2F               	movwf	(btemp+10)^0,c
 17039  014432  0E00               	movlw	0
 17040  014434  6E30               	movwf	(btemp+11)^0,c
 17041                           
 17042                           ;stkvar	_dtoa$4966 @ sp[(-18)+0]
 17043  014436  0EEE               	movlw	-18
 17044  014438  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 17045  01443E  0EEF               	movlw	-17
 17046  014440  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 17047                           
 17048                           ;stkvar	_dtoa$4966 @ sp[(-18)+0]
 17049                           ;stkvar	_i @ sp[(-18)+10]
 17050  014446  0EF8               	movlw	-8
 17051  014448  006F FF8C  F02F    	movff	plusw1,btemp+10
 17052  01444E  0EF9               	movlw	-7
 17053  014450  006F FF8C  F030    	movff	plusw1,btemp+11
 17054  014456  0E94               	movlw	low _dbuf
 17055  014458  242F               	addwf	(btemp+10)^0,w,c
 17056  01445A  6ED9               	movwf	fsr2l,c
 17057  01445C  0E03               	movlw	high _dbuf
 17058  01445E  2030               	addwfc	(btemp+11)^0,w,c
 17059  014460  6EDA               	movwf	fsr2h,c
 17060  014462  0EEE               	movlw	-18
 17061  014464  006F FF8F FFDF     	movff	plusw1,indf2
 17062  01446A                     l10147:
 17063                           
 17064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 17065                           ;stkvar	_w @ sp[(-18)+14]
 17066  01446A  0EFC               	movlw	-4
 17067  01446C  006F FF8F FFE6     	movff	plusw1,postinc1
 17068  014472  006F FF8F FFE6     	movff	plusw1,postinc1
 17069                           
 17070                           ;stkvar	_i @ sp[(-20)+10]
 17071  014478  0E94               	movlw	low _dbuf
 17072  01447A  6E2F               	movwf	(btemp+10)^0,c
 17073  01447C  0E03               	movlw	high _dbuf
 17074  01447E  6E30               	movwf	(btemp+11)^0,c
 17075  014480  0EF6               	movlw	-10
 17076  014482  50E3               	movf	plusw1,w,c
 17077  014484  262F               	addwf	(btemp+10)^0,f,c
 17078  014486  0EF7               	movlw	-9
 17079  014488  50E3               	movf	plusw1,w,c
 17080  01448A  2230               	addwfc	(btemp+11)^0,f,c
 17081  01448C  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 17082  014492  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 17083                           
 17084                           ;stkvar	_fp @ sp[(-22)+-2]
 17085  014498  0EE8               	movlw	-24
 17086  01449A  006F FF8F FFE6     	movff	plusw1,postinc1
 17087  0144A0  006F FF8F FFE6     	movff	plusw1,postinc1
 17088  0144A6  EC70  F0B8         	call	_pad	;wreg free
 17089                           
 17090                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 17091  0144AA  0EE4               	movlw	228
 17092  0144AC  26E1               	addwf	fsr1l,f,c
 17093  0144AE  0EFF               	movlw	255
 17094  0144B0  22E2               	addwfc	fsr1h,f,c
 17095  0144B2  0012               	return		;funcret
 17096  0144B4                     __end_of_dtoa:
 17097                           	opt callstack 0
 17098                           
 17099 ;; *************** function _abs *****************
 17100 ;; Defined at:
 17101 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 17102 ;; Parameters:    Size  Location     Type
 17103 ;;  a               2  [STACK] int 
 17104 ;; Auto vars:     Size  Location     Type
 17105 ;;		None
 17106 ;; Return value:  Size  Location     Type
 17107 ;;                  2  [STACK] int 
 17108 ;; Registers used:
 17109 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 17110 ;; Tracked objects:
 17111 ;;		On entry : 0/3
 17112 ;;		On exit  : 0/0
 17113 ;;		Unchanged: 0/0
 17114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17119 ;;Total ram usage:        0 bytes
 17120 ;; Hardware stack levels used:    1
 17121 ;; Hardware stack levels required when called:    7
 17122 ;; This function calls:
 17123 ;;		Nothing
 17124 ;; This function is called by:
 17125 ;;		_dtoa
 17126 ;; This function uses a reentrant model
 17127 ;;
 17128                           
 17129                           	psect	text62
 17130  0188A2                     __ptext62:
 17131                           	opt callstack 0
 17132  0188A2                     _abs:
 17133                           	opt callstack 16
 17134                           
 17135                           ;stkvar	_a @ sp[(0)+-2]
 17136                           
 17137                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17138                           ;incstack = 0
 17139  0188A2  0EFF               	movlw	-1
 17140  0188A4  BEE3               	btfsc	plusw1,7,c
 17141  0188A6  D007               	goto	u4790
 17142  0188A8  0EFF               	movlw	-1
 17143  0188AA  50E3               	movf	plusw1,w,c
 17144  0188AC  E112               	bnz	l6637
 17145  0188AE  0EFE               	movlw	-2
 17146  0188B0  04E3               	decf	plusw1,w,c
 17147  0188B2  B0D8               	btfsc	status,0,c
 17148  0188B4  D00E               	goto	l6637
 17149  0188B6                     u4790:
 17150                           
 17151                           ;stkvar	_a @ sp[(0)+-2]
 17152  0188B6  0EFE               	movlw	-2
 17153  0188B8  006F FF8C  F025    	movff	plusw1,btemp
 17154  0188BE  1E25               	comf	btemp^0,f,c
 17155  0188C0  0EFF               	movlw	-1
 17156  0188C2  006F FF8C  F026    	movff	plusw1,btemp+1
 17157  0188C8  1E26               	comf	(btemp+1)^0,f,c
 17158  0188CA  2A25               	incf	btemp^0,f,c
 17159  0188CC  B4D8               	btfsc	status,2,c
 17160  0188CE  2A26               	incf	(btemp+1)^0,f,c
 17161  0188D0  D008               	goto	l2911
 17162  0188D2                     l6637:
 17163                           
 17164                           ;stkvar	_a @ sp[(0)+-2]
 17165  0188D2  0EFE               	movlw	-2
 17166  0188D4  006F FF8C  F025    	movff	plusw1,btemp
 17167  0188DA  0EFF               	movlw	-1
 17168  0188DC  006F FF8C  F026    	movff	plusw1,btemp+1
 17169  0188E2                     l2911:
 17170                           
 17171                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 17172  0188E2  52E5               	movf	postdec1,f,c
 17173  0188E4  52E5               	movf	postdec1,f,c
 17174  0188E6  0012               	return		;funcret
 17175  0188E8                     __end_of_abs:
 17176                           	opt callstack 0
 17177                           
 17178 ;; *************** function ___aomod *****************
 17179 ;; Defined at:
 17180 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 17181 ;; Parameters:    Size  Location     Type
 17182 ;;  dividend        8  [STACK] long long 
 17183 ;;  divisor         8  [STACK] long long 
 17184 ;; Auto vars:     Size  Location     Type
 17185 ;;  sign            1  [STACK] unsigned char 
 17186 ;;  counter         1  [STACK] unsigned char 
 17187 ;; Return value:  Size  Location     Type
 17188 ;;                  8  [STACK] long long 
 17189 ;; Registers used:
 17190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17191 ;; Tracked objects:
 17192 ;;		On entry : 0/3
 17193 ;;		On exit  : 0/0
 17194 ;;		Unchanged: 0/0
 17195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17200 ;;Total ram usage:        0 bytes
 17201 ;; Hardware stack levels used:    1
 17202 ;; Hardware stack levels required when called:    7
 17203 ;; This function calls:
 17204 ;;		Nothing
 17205 ;; This function is called by:
 17206 ;;		_dtoa
 17207 ;; This function uses a reentrant model
 17208 ;;
 17209                           
 17210                           	psect	text63
 17211  015CB8                     __ptext63:
 17212                           	opt callstack 0
 17213  015CB8                     ___aomod:
 17214                           	opt callstack 0
 17215                           
 17216                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 17217  015CB8  52E6               	movf	postinc1,f,c
 17218  015CBA  52E6               	movf	postinc1,f,c
 17219                           
 17220                           ;stkvar	_sign @ sp[(-2)+0]
 17221                           
 17222                           ;incstack = 0
 17223  015CBC  0EFE               	movlw	-2
 17224  015CBE  6AE3               	clrf	plusw1,c
 17225                           
 17226                           ;stkvar	_dividend @ sp[(-2)+-8]
 17227  015CC0  0EFD               	movlw	-3
 17228  015CC2  AEE3               	btfss	plusw1,7,c
 17229  015CC4  D028               	goto	l6795
 17230                           
 17231                           ;stkvar	_dividend @ sp[(-2)+-8]
 17232                           ;stkvar	_dividend @ sp[(-2)+-8]
 17233  015CC6  0EF6               	movlw	-10
 17234  015CC8  6CE3               	negf	plusw1,c
 17235  015CCA  0EF7               	movlw	-9
 17236  015CCC  1EE3               	comf	plusw1,f,c
 17237  015CCE  0EF8               	movlw	-8
 17238  015CD0  1EE3               	comf	plusw1,f,c
 17239  015CD2  0EF9               	movlw	-7
 17240  015CD4  1EE3               	comf	plusw1,f,c
 17241  015CD6  0EFA               	movlw	-6
 17242  015CD8  1EE3               	comf	plusw1,f,c
 17243  015CDA  0EFB               	movlw	-5
 17244  015CDC  1EE3               	comf	plusw1,f,c
 17245  015CDE  0EFC               	movlw	-4
 17246  015CE0  1EE3               	comf	plusw1,f,c
 17247  015CE2  0EFD               	movlw	-3
 17248  015CE4  1EE3               	comf	plusw1,f,c
 17249  015CE6  E314               	bnc	u5220
 17250  015CE8  0EF7               	movlw	-9
 17251  015CEA  2AE3               	incf	plusw1,f,c
 17252  015CEC  E311               	bnc	u5220
 17253  015CEE  0EF8               	movlw	-8
 17254  015CF0  2AE3               	incf	plusw1,f,c
 17255  015CF2  E30E               	bnc	u5220
 17256  015CF4  0EF9               	movlw	-7
 17257  015CF6  2AE3               	incf	plusw1,f,c
 17258  015CF8  E30B               	bnc	u5220
 17259  015CFA  0EFA               	movlw	-6
 17260  015CFC  2AE3               	incf	plusw1,f,c
 17261  015CFE  E308               	bnc	u5220
 17262  015D00  0EFB               	movlw	-5
 17263  015D02  2AE3               	incf	plusw1,f,c
 17264  015D04  E305               	bnc	u5220
 17265  015D06  0EFC               	movlw	-4
 17266  015D08  2AE3               	incf	plusw1,f,c
 17267  015D0A  E302               	bnc	u5220
 17268  015D0C  0EFD               	movlw	-3
 17269  015D0E  2AE3               	incf	plusw1,f,c
 17270  015D10                     u5220:
 17271                           
 17272                           ;stkvar	_sign @ sp[(-2)+0]
 17273  015D10  0EFE               	movlw	-2
 17274  015D12  6AE3               	clrf	plusw1,c
 17275  015D14  2AE3               	incf	plusw1,f,c
 17276  015D16                     l6795:
 17277                           
 17278                           ;stkvar	_divisor @ sp[(-2)+-16]
 17279  015D16  0EF5               	movlw	-11
 17280  015D18  AEE3               	btfss	plusw1,7,c
 17281  015D1A  D025               	goto	u5240
 17282                           
 17283                           ;stkvar	_divisor @ sp[(-2)+-16]
 17284                           ;stkvar	_divisor @ sp[(-2)+-16]
 17285  015D1C  0EEE               	movlw	-18
 17286  015D1E  6CE3               	negf	plusw1,c
 17287  015D20  0EEF               	movlw	-17
 17288  015D22  1EE3               	comf	plusw1,f,c
 17289  015D24  0EF0               	movlw	-16
 17290  015D26  1EE3               	comf	plusw1,f,c
 17291  015D28  0EF1               	movlw	-15
 17292  015D2A  1EE3               	comf	plusw1,f,c
 17293  015D2C  0EF2               	movlw	-14
 17294  015D2E  1EE3               	comf	plusw1,f,c
 17295  015D30  0EF3               	movlw	-13
 17296  015D32  1EE3               	comf	plusw1,f,c
 17297  015D34  0EF4               	movlw	-12
 17298  015D36  1EE3               	comf	plusw1,f,c
 17299  015D38  0EF5               	movlw	-11
 17300  015D3A  1EE3               	comf	plusw1,f,c
 17301  015D3C  E314               	bnc	u5240
 17302  015D3E  0EEF               	movlw	-17
 17303  015D40  2AE3               	incf	plusw1,f,c
 17304  015D42  E311               	bnc	u5240
 17305  015D44  0EF0               	movlw	-16
 17306  015D46  2AE3               	incf	plusw1,f,c
 17307  015D48  E30E               	bnc	u5240
 17308  015D4A  0EF1               	movlw	-15
 17309  015D4C  2AE3               	incf	plusw1,f,c
 17310  015D4E  E30B               	bnc	u5240
 17311  015D50  0EF2               	movlw	-14
 17312  015D52  2AE3               	incf	plusw1,f,c
 17313  015D54  E308               	bnc	u5240
 17314  015D56  0EF3               	movlw	-13
 17315  015D58  2AE3               	incf	plusw1,f,c
 17316  015D5A  E305               	bnc	u5240
 17317  015D5C  0EF4               	movlw	-12
 17318  015D5E  2AE3               	incf	plusw1,f,c
 17319  015D60  E302               	bnc	u5240
 17320  015D62  0EF5               	movlw	-11
 17321  015D64  2AE3               	incf	plusw1,f,c
 17322  015D66                     u5240:
 17323                           
 17324                           ;stkvar	_divisor @ sp[(-2)+-16]
 17325  015D66  0EEE               	movlw	-18
 17326  015D68  50E3               	movf	plusw1,w,c
 17327  015D6A  E116               	bnz	u5250
 17328  015D6C  0EEF               	movlw	-17
 17329  015D6E  50E3               	movf	plusw1,w,c
 17330  015D70  E113               	bnz	u5250
 17331  015D72  0EF0               	movlw	-16
 17332  015D74  50E3               	movf	plusw1,w,c
 17333  015D76  E110               	bnz	u5250
 17334  015D78  0EF1               	movlw	-15
 17335  015D7A  50E3               	movf	plusw1,w,c
 17336  015D7C  E10D               	bnz	u5250
 17337  015D7E  0EF2               	movlw	-14
 17338  015D80  50E3               	movf	plusw1,w,c
 17339  015D82  E10A               	bnz	u5250
 17340  015D84  0EF3               	movlw	-13
 17341  015D86  50E3               	movf	plusw1,w,c
 17342  015D88  E107               	bnz	u5250
 17343  015D8A  0EF4               	movlw	-12
 17344  015D8C  50E3               	movf	plusw1,w,c
 17345  015D8E  E104               	bnz	u5250
 17346  015D90  0EF5               	movlw	-11
 17347  015D92  50E3               	movf	plusw1,w,c
 17348  015D94  B4D8               	btfsc	status,2,c
 17349  015D96  D075               	goto	u5280
 17350  015D98                     u5250:
 17351                           
 17352                           ;stkvar	_counter @ sp[(-2)+1]
 17353  015D98  0EFF               	movlw	-1
 17354  015D9A  6AE3               	clrf	plusw1,c
 17355  015D9C  D012               	goto	L18
 17356  015D9E                     l6803:
 17357                           
 17358                           ;stkvar	_divisor @ sp[(-2)+-16]
 17359  015D9E  90D8               	bcf	status,0,c
 17360  015DA0  0EEE               	movlw	-18
 17361  015DA2  36E3               	rlcf	plusw1,f,c
 17362  015DA4  0EEF               	movlw	-17
 17363  015DA6  36E3               	rlcf	plusw1,f,c
 17364  015DA8  0EF0               	movlw	-16
 17365  015DAA  36E3               	rlcf	plusw1,f,c
 17366  015DAC  0EF1               	movlw	-15
 17367  015DAE  36E3               	rlcf	plusw1,f,c
 17368  015DB0  0EF2               	movlw	-14
 17369  015DB2  36E3               	rlcf	plusw1,f,c
 17370  015DB4  0EF3               	movlw	-13
 17371  015DB6  36E3               	rlcf	plusw1,f,c
 17372  015DB8  0EF4               	movlw	-12
 17373  015DBA  36E3               	rlcf	plusw1,f,c
 17374  015DBC  0EF5               	movlw	-11
 17375  015DBE  36E3               	rlcf	plusw1,f,c
 17376                           
 17377                           ;stkvar	_counter @ sp[(-2)+1]
 17378  015DC0  0EFF               	movlw	-1
 17379  015DC2                     L18:
 17380  015DC2  2AE3               	incf	plusw1,f,c
 17381                           
 17382                           ;stkvar	_divisor @ sp[(-2)+-16]
 17383  015DC4  0EF5               	movlw	-11
 17384  015DC6  AEE3               	btfss	plusw1,7,c
 17385  015DC8  D7EA               	goto	l6803
 17386  015DCA                     u5260:
 17387                           
 17388                           ;stkvar	_divisor @ sp[(-2)+-16]
 17389                           ;stkvar	_dividend @ sp[(-2)+-8]
 17390  015DCA  50E1               	movf	fsr1l,w,c
 17391  015DCC  0FF6               	addlw	-10
 17392  015DCE  6ED9               	movwf	fsr2l,c
 17393  015DD0  50E2               	movf	fsr1h,w,c
 17394  015DD2  6EDA               	movwf	fsr2h,c
 17395  015DD4  0EFF               	movlw	255
 17396  015DD6  22DA               	addwfc	fsr2h,f,c
 17397  015DD8  0EEE               	movlw	-18
 17398  015DDA  50E3               	movf	plusw1,w,c
 17399  015DDC  5CDE               	subwf	postinc2,w,c
 17400  015DDE  0EEF               	movlw	-17
 17401  015DE0  50E3               	movf	plusw1,w,c
 17402  015DE2  58DE               	subwfb	postinc2,w,c
 17403  015DE4  0EF0               	movlw	-16
 17404  015DE6  50E3               	movf	plusw1,w,c
 17405  015DE8  58DE               	subwfb	postinc2,w,c
 17406  015DEA  0EF1               	movlw	-15
 17407  015DEC  50E3               	movf	plusw1,w,c
 17408  015DEE  58DE               	subwfb	postinc2,w,c
 17409  015DF0  0EF2               	movlw	-14
 17410  015DF2  50E3               	movf	plusw1,w,c
 17411  015DF4  58DE               	subwfb	postinc2,w,c
 17412  015DF6  0EF3               	movlw	-13
 17413  015DF8  50E3               	movf	plusw1,w,c
 17414  015DFA  58DE               	subwfb	postinc2,w,c
 17415  015DFC  0EF4               	movlw	-12
 17416  015DFE  50E3               	movf	plusw1,w,c
 17417  015E00  58DE               	subwfb	postinc2,w,c
 17418  015E02  0EF5               	movlw	-11
 17419  015E04  50E3               	movf	plusw1,w,c
 17420  015E06  58DE               	subwfb	postinc2,w,c
 17421  015E08  A0D8               	btfss	status,0,c
 17422  015E0A  D01F               	goto	l6811
 17423                           
 17424                           ;stkvar	_divisor @ sp[(-2)+-16]
 17425                           ;stkvar	_dividend @ sp[(-2)+-8]
 17426  015E0C  50E1               	movf	fsr1l,w,c
 17427  015E0E  0FF6               	addlw	-10
 17428  015E10  6ED9               	movwf	fsr2l,c
 17429  015E12  50E2               	movf	fsr1h,w,c
 17430  015E14  6EDA               	movwf	fsr2h,c
 17431  015E16  0EFF               	movlw	255
 17432  015E18  22DA               	addwfc	fsr2h,f,c
 17433  015E1A  0EEE               	movlw	-18
 17434  015E1C  50E3               	movf	plusw1,w,c
 17435  015E1E  5EDE               	subwf	postinc2,f,c
 17436  015E20  0EEF               	movlw	-17
 17437  015E22  50E3               	movf	plusw1,w,c
 17438  015E24  5ADE               	subwfb	postinc2,f,c
 17439  015E26  0EF0               	movlw	-16
 17440  015E28  50E3               	movf	plusw1,w,c
 17441  015E2A  5ADE               	subwfb	postinc2,f,c
 17442  015E2C  0EF1               	movlw	-15
 17443  015E2E  50E3               	movf	plusw1,w,c
 17444  015E30  5ADE               	subwfb	postinc2,f,c
 17445  015E32  0EF2               	movlw	-14
 17446  015E34  50E3               	movf	plusw1,w,c
 17447  015E36  5ADE               	subwfb	postinc2,f,c
 17448  015E38  0EF3               	movlw	-13
 17449  015E3A  50E3               	movf	plusw1,w,c
 17450  015E3C  5ADE               	subwfb	postinc2,f,c
 17451  015E3E  0EF4               	movlw	-12
 17452  015E40  50E3               	movf	plusw1,w,c
 17453  015E42  5ADE               	subwfb	postinc2,f,c
 17454  015E44  0EF5               	movlw	-11
 17455  015E46  50E3               	movf	plusw1,w,c
 17456  015E48  5ADE               	subwfb	postinc2,f,c
 17457  015E4A                     l6811:
 17458                           
 17459                           ;stkvar	_divisor @ sp[(-2)+-16]
 17460  015E4A  90D8               	bcf	status,0,c
 17461  015E4C  0EF5               	movlw	-11
 17462  015E4E  32E3               	rrcf	plusw1,f,c
 17463  015E50  0EF4               	movlw	-12
 17464  015E52  32E3               	rrcf	plusw1,f,c
 17465  015E54  0EF3               	movlw	-13
 17466  015E56  32E3               	rrcf	plusw1,f,c
 17467  015E58  0EF2               	movlw	-14
 17468  015E5A  32E3               	rrcf	plusw1,f,c
 17469  015E5C  0EF1               	movlw	-15
 17470  015E5E  32E3               	rrcf	plusw1,f,c
 17471  015E60  0EF0               	movlw	-16
 17472  015E62  32E3               	rrcf	plusw1,f,c
 17473  015E64  0EEF               	movlw	-17
 17474  015E66  32E3               	rrcf	plusw1,f,c
 17475  015E68  0EEE               	movlw	-18
 17476  015E6A  32E3               	rrcf	plusw1,f,c
 17477                           
 17478                           ;stkvar	_counter @ sp[(-2)+1]
 17479  015E6C  0EFF               	movlw	-1
 17480  015E6E  50E3               	movf	plusw1,w,c
 17481  015E70  6E25               	movwf	btemp^0,c
 17482  015E72  0E01               	movlw	1
 17483  015E74  5E25               	subwf	btemp^0,f,c
 17484  015E76  0EFF               	movlw	-1
 17485  015E78  0060  F097  FFE3   	movff	btemp,plusw1
 17486  015E7E  A4D8               	btfss	status,2,c
 17487  015E80  D7A4               	goto	u5260
 17488  015E82                     u5280:
 17489                           
 17490                           ;stkvar	_sign @ sp[(-2)+0]
 17491  015E82  0EFE               	movlw	-2
 17492  015E84  50E3               	movf	plusw1,w,c
 17493  015E86  B4D8               	btfsc	status,2,c
 17494  015E88  D025               	goto	u5300
 17495                           
 17496                           ;stkvar	_dividend @ sp[(-2)+-8]
 17497                           ;stkvar	_dividend @ sp[(-2)+-8]
 17498  015E8A  0EF6               	movlw	-10
 17499  015E8C  6CE3               	negf	plusw1,c
 17500  015E8E  0EF7               	movlw	-9
 17501  015E90  1EE3               	comf	plusw1,f,c
 17502  015E92  0EF8               	movlw	-8
 17503  015E94  1EE3               	comf	plusw1,f,c
 17504  015E96  0EF9               	movlw	-7
 17505  015E98  1EE3               	comf	plusw1,f,c
 17506  015E9A  0EFA               	movlw	-6
 17507  015E9C  1EE3               	comf	plusw1,f,c
 17508  015E9E  0EFB               	movlw	-5
 17509  015EA0  1EE3               	comf	plusw1,f,c
 17510  015EA2  0EFC               	movlw	-4
 17511  015EA4  1EE3               	comf	plusw1,f,c
 17512  015EA6  0EFD               	movlw	-3
 17513  015EA8  1EE3               	comf	plusw1,f,c
 17514  015EAA  E314               	bnc	u5300
 17515  015EAC  0EF7               	movlw	-9
 17516  015EAE  2AE3               	incf	plusw1,f,c
 17517  015EB0  E311               	bnc	u5300
 17518  015EB2  0EF8               	movlw	-8
 17519  015EB4  2AE3               	incf	plusw1,f,c
 17520  015EB6  E30E               	bnc	u5300
 17521  015EB8  0EF9               	movlw	-7
 17522  015EBA  2AE3               	incf	plusw1,f,c
 17523  015EBC  E30B               	bnc	u5300
 17524  015EBE  0EFA               	movlw	-6
 17525  015EC0  2AE3               	incf	plusw1,f,c
 17526  015EC2  E308               	bnc	u5300
 17527  015EC4  0EFB               	movlw	-5
 17528  015EC6  2AE3               	incf	plusw1,f,c
 17529  015EC8  E305               	bnc	u5300
 17530  015ECA  0EFC               	movlw	-4
 17531  015ECC  2AE3               	incf	plusw1,f,c
 17532  015ECE  E302               	bnc	u5300
 17533  015ED0  0EFD               	movlw	-3
 17534  015ED2  2AE3               	incf	plusw1,f,c
 17535  015ED4                     u5300:
 17536                           
 17537                           ;stkvar	_dividend @ sp[(-2)+-8]
 17538  015ED4  0EF6               	movlw	246
 17539  015ED6  24E1               	addwf	fsr1l,w,c
 17540  015ED8  6ED9               	movwf	fsr2l,c
 17541  015EDA  0EFF               	movlw	255
 17542  015EDC  20E2               	addwfc	fsr1h,w,c
 17543  015EDE  6EDA               	movwf	fsr2h,c
 17544                           
 17545                           ;stkvar	?___aomod @ sp[(-2)+-8]
 17546  015EE0  0E08               	movlw	8
 17547  015EE2  6E25               	movwf	btemp^0,c
 17548  015EE4  0EF6               	movlw	-10
 17549  015EE6                     us531999:
 17550  015EE6  006F FF7B FFE3     	movff	postinc2,plusw1
 17551  015EEC  28E8               	incf	wreg,w,c
 17552  015EEE  2E25               	decfsz	btemp^0,f,c
 17553  015EF0  D7FA               	bra	us531999
 17554                           
 17555                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 17556  015EF2  52E5               	movf	postdec1,f,c
 17557  015EF4  52E5               	movf	postdec1,f,c
 17558  015EF6  0012               	return		;funcret
 17559  015EF8                     __end_of___aomod:
 17560                           	opt callstack 0
 17561                           
 17562 ;; *************** function ___aodiv *****************
 17563 ;; Defined at:
 17564 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 17565 ;; Parameters:    Size  Location     Type
 17566 ;;  dividend        8  [STACK] long long 
 17567 ;;  divisor         8  [STACK] long long 
 17568 ;; Auto vars:     Size  Location     Type
 17569 ;;  quotient        8  [STACK] long long 
 17570 ;;  sign            1  [STACK] unsigned char 
 17571 ;;  counter         1  [STACK] unsigned char 
 17572 ;; Return value:  Size  Location     Type
 17573 ;;                  8  [STACK] long long 
 17574 ;; Registers used:
 17575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17576 ;; Tracked objects:
 17577 ;;		On entry : 0/3
 17578 ;;		On exit  : 0/0
 17579 ;;		Unchanged: 0/0
 17580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17585 ;;Total ram usage:        0 bytes
 17586 ;; Hardware stack levels used:    1
 17587 ;; Hardware stack levels required when called:    7
 17588 ;; This function calls:
 17589 ;;		Nothing
 17590 ;; This function is called by:
 17591 ;;		_dtoa
 17592 ;; This function uses a reentrant model
 17593 ;;
 17594                           
 17595                           	psect	text64
 17596  0157C4                     __ptext64:
 17597                           	opt callstack 0
 17598  0157C4                     ___aodiv:
 17599                           	opt callstack 0
 17600                           
 17601                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 17602  0157C4  0E0A               	movlw	10
 17603  0157C6  26E1               	addwf	fsr1l,f,c
 17604  0157C8  0E00               	movlw	0
 17605  0157CA  22E2               	addwfc	fsr1h,f,c
 17606                           
 17607                           ;stkvar	_sign @ sp[(-10)+8]
 17608                           
 17609                           ;incstack = 0
 17610  0157CC  0EFE               	movlw	-2
 17611  0157CE  6AE3               	clrf	plusw1,c
 17612                           
 17613                           ;stkvar	_divisor @ sp[(-10)+-16]
 17614  0157D0  0EED               	movlw	-19
 17615  0157D2  AEE3               	btfss	plusw1,7,c
 17616  0157D4  D028               	goto	l6751
 17617                           
 17618                           ;stkvar	_divisor @ sp[(-10)+-16]
 17619                           ;stkvar	_divisor @ sp[(-10)+-16]
 17620  0157D6  0EE6               	movlw	-26
 17621  0157D8  6CE3               	negf	plusw1,c
 17622  0157DA  0EE7               	movlw	-25
 17623  0157DC  1EE3               	comf	plusw1,f,c
 17624  0157DE  0EE8               	movlw	-24
 17625  0157E0  1EE3               	comf	plusw1,f,c
 17626  0157E2  0EE9               	movlw	-23
 17627  0157E4  1EE3               	comf	plusw1,f,c
 17628  0157E6  0EEA               	movlw	-22
 17629  0157E8  1EE3               	comf	plusw1,f,c
 17630  0157EA  0EEB               	movlw	-21
 17631  0157EC  1EE3               	comf	plusw1,f,c
 17632  0157EE  0EEC               	movlw	-20
 17633  0157F0  1EE3               	comf	plusw1,f,c
 17634  0157F2  0EED               	movlw	-19
 17635  0157F4  1EE3               	comf	plusw1,f,c
 17636  0157F6  E314               	bnc	u5100
 17637  0157F8  0EE7               	movlw	-25
 17638  0157FA  2AE3               	incf	plusw1,f,c
 17639  0157FC  E311               	bnc	u5100
 17640  0157FE  0EE8               	movlw	-24
 17641  015800  2AE3               	incf	plusw1,f,c
 17642  015802  E30E               	bnc	u5100
 17643  015804  0EE9               	movlw	-23
 17644  015806  2AE3               	incf	plusw1,f,c
 17645  015808  E30B               	bnc	u5100
 17646  01580A  0EEA               	movlw	-22
 17647  01580C  2AE3               	incf	plusw1,f,c
 17648  01580E  E308               	bnc	u5100
 17649  015810  0EEB               	movlw	-21
 17650  015812  2AE3               	incf	plusw1,f,c
 17651  015814  E305               	bnc	u5100
 17652  015816  0EEC               	movlw	-20
 17653  015818  2AE3               	incf	plusw1,f,c
 17654  01581A  E302               	bnc	u5100
 17655  01581C  0EED               	movlw	-19
 17656  01581E  2AE3               	incf	plusw1,f,c
 17657  015820                     u5100:
 17658                           
 17659                           ;stkvar	_sign @ sp[(-10)+8]
 17660  015820  0EFE               	movlw	-2
 17661  015822  6AE3               	clrf	plusw1,c
 17662  015824  2AE3               	incf	plusw1,f,c
 17663  015826                     l6751:
 17664                           
 17665                           ;stkvar	_dividend @ sp[(-10)+-8]
 17666  015826  0EF5               	movlw	-11
 17667  015828  AEE3               	btfss	plusw1,7,c
 17668  01582A  D027               	goto	l6757
 17669                           
 17670                           ;stkvar	_dividend @ sp[(-10)+-8]
 17671                           ;stkvar	_dividend @ sp[(-10)+-8]
 17672  01582C  0EEE               	movlw	-18
 17673  01582E  6CE3               	negf	plusw1,c
 17674  015830  0EEF               	movlw	-17
 17675  015832  1EE3               	comf	plusw1,f,c
 17676  015834  0EF0               	movlw	-16
 17677  015836  1EE3               	comf	plusw1,f,c
 17678  015838  0EF1               	movlw	-15
 17679  01583A  1EE3               	comf	plusw1,f,c
 17680  01583C  0EF2               	movlw	-14
 17681  01583E  1EE3               	comf	plusw1,f,c
 17682  015840  0EF3               	movlw	-13
 17683  015842  1EE3               	comf	plusw1,f,c
 17684  015844  0EF4               	movlw	-12
 17685  015846  1EE3               	comf	plusw1,f,c
 17686  015848  0EF5               	movlw	-11
 17687  01584A  1EE3               	comf	plusw1,f,c
 17688  01584C  E314               	bnc	u5120
 17689  01584E  0EEF               	movlw	-17
 17690  015850  2AE3               	incf	plusw1,f,c
 17691  015852  E311               	bnc	u5120
 17692  015854  0EF0               	movlw	-16
 17693  015856  2AE3               	incf	plusw1,f,c
 17694  015858  E30E               	bnc	u5120
 17695  01585A  0EF1               	movlw	-15
 17696  01585C  2AE3               	incf	plusw1,f,c
 17697  01585E  E30B               	bnc	u5120
 17698  015860  0EF2               	movlw	-14
 17699  015862  2AE3               	incf	plusw1,f,c
 17700  015864  E308               	bnc	u5120
 17701  015866  0EF3               	movlw	-13
 17702  015868  2AE3               	incf	plusw1,f,c
 17703  01586A  E305               	bnc	u5120
 17704  01586C  0EF4               	movlw	-12
 17705  01586E  2AE3               	incf	plusw1,f,c
 17706  015870  E302               	bnc	u5120
 17707  015872  0EF5               	movlw	-11
 17708  015874  2AE3               	incf	plusw1,f,c
 17709  015876                     u5120:
 17710                           
 17711                           ;stkvar	_sign @ sp[(-10)+8]
 17712  015876  0EFE               	movlw	-2
 17713  015878  70E3               	btg	plusw1,0,c
 17714  01587A                     l6757:
 17715                           
 17716                           ;stkvar	_quotient @ sp[(-10)+0]
 17717  01587A  0E07               	movlw	7
 17718  01587C  6E25               	movwf	btemp^0,c
 17719  01587E  0EF6               	movlw	-10
 17720  015880                     u5131:
 17721  015880  6AE3               	clrf	plusw1,c
 17722  015882  2AE8               	incf	wreg,f,c
 17723  015884  0625               	decf	btemp^0,f,c
 17724  015886  E2FC               	bc	u5131
 17725                           
 17726                           ;stkvar	_divisor @ sp[(-10)+-16]
 17727  015888  0EE6               	movlw	-26
 17728  01588A  50E3               	movf	plusw1,w,c
 17729  01588C  E116               	bnz	u5140
 17730  01588E  0EE7               	movlw	-25
 17731  015890  50E3               	movf	plusw1,w,c
 17732  015892  E113               	bnz	u5140
 17733  015894  0EE8               	movlw	-24
 17734  015896  50E3               	movf	plusw1,w,c
 17735  015898  E110               	bnz	u5140
 17736  01589A  0EE9               	movlw	-23
 17737  01589C  50E3               	movf	plusw1,w,c
 17738  01589E  E10D               	bnz	u5140
 17739  0158A0  0EEA               	movlw	-22
 17740  0158A2  50E3               	movf	plusw1,w,c
 17741  0158A4  E10A               	bnz	u5140
 17742  0158A6  0EEB               	movlw	-21
 17743  0158A8  50E3               	movf	plusw1,w,c
 17744  0158AA  E107               	bnz	u5140
 17745  0158AC  0EEC               	movlw	-20
 17746  0158AE  50E3               	movf	plusw1,w,c
 17747  0158B0  E104               	bnz	u5140
 17748  0158B2  0EED               	movlw	-19
 17749  0158B4  50E3               	movf	plusw1,w,c
 17750  0158B6  B4D8               	btfsc	status,2,c
 17751  0158B8  D088               	goto	u5170
 17752  0158BA                     u5140:
 17753                           
 17754                           ;stkvar	_counter @ sp[(-10)+9]
 17755  0158BA  0EFF               	movlw	-1
 17756  0158BC  6AE3               	clrf	plusw1,c
 17757  0158BE  D012               	goto	L19
 17758  0158C0                     l6763:
 17759                           
 17760                           ;stkvar	_divisor @ sp[(-10)+-16]
 17761  0158C0  90D8               	bcf	status,0,c
 17762  0158C2  0EE6               	movlw	-26
 17763  0158C4  36E3               	rlcf	plusw1,f,c
 17764  0158C6  0EE7               	movlw	-25
 17765  0158C8  36E3               	rlcf	plusw1,f,c
 17766  0158CA  0EE8               	movlw	-24
 17767  0158CC  36E3               	rlcf	plusw1,f,c
 17768  0158CE  0EE9               	movlw	-23
 17769  0158D0  36E3               	rlcf	plusw1,f,c
 17770  0158D2  0EEA               	movlw	-22
 17771  0158D4  36E3               	rlcf	plusw1,f,c
 17772  0158D6  0EEB               	movlw	-21
 17773  0158D8  36E3               	rlcf	plusw1,f,c
 17774  0158DA  0EEC               	movlw	-20
 17775  0158DC  36E3               	rlcf	plusw1,f,c
 17776  0158DE  0EED               	movlw	-19
 17777  0158E0  36E3               	rlcf	plusw1,f,c
 17778                           
 17779                           ;stkvar	_counter @ sp[(-10)+9]
 17780  0158E2  0EFF               	movlw	-1
 17781  0158E4                     L19:
 17782  0158E4  2AE3               	incf	plusw1,f,c
 17783                           
 17784                           ;stkvar	_divisor @ sp[(-10)+-16]
 17785  0158E6  0EED               	movlw	-19
 17786  0158E8  AEE3               	btfss	plusw1,7,c
 17787  0158EA  D7EA               	goto	l6763
 17788  0158EC                     u5150:
 17789                           
 17790                           ;stkvar	_quotient @ sp[(-10)+0]
 17791  0158EC  90D8               	bcf	status,0,c
 17792  0158EE  0EF6               	movlw	-10
 17793  0158F0  36E3               	rlcf	plusw1,f,c
 17794  0158F2  0EF7               	movlw	-9
 17795  0158F4  36E3               	rlcf	plusw1,f,c
 17796  0158F6  0EF8               	movlw	-8
 17797  0158F8  36E3               	rlcf	plusw1,f,c
 17798  0158FA  0EF9               	movlw	-7
 17799  0158FC  36E3               	rlcf	plusw1,f,c
 17800  0158FE  0EFA               	movlw	-6
 17801  015900  36E3               	rlcf	plusw1,f,c
 17802  015902  0EFB               	movlw	-5
 17803  015904  36E3               	rlcf	plusw1,f,c
 17804  015906  0EFC               	movlw	-4
 17805  015908  36E3               	rlcf	plusw1,f,c
 17806  01590A  0EFD               	movlw	-3
 17807  01590C  36E3               	rlcf	plusw1,f,c
 17808                           
 17809                           ;stkvar	_divisor @ sp[(-10)+-16]
 17810                           ;stkvar	_dividend @ sp[(-10)+-8]
 17811  01590E  50E1               	movf	fsr1l,w,c
 17812  015910  0FEE               	addlw	-18
 17813  015912  6ED9               	movwf	fsr2l,c
 17814  015914  50E2               	movf	fsr1h,w,c
 17815  015916  6EDA               	movwf	fsr2h,c
 17816  015918  0EFF               	movlw	255
 17817  01591A  22DA               	addwfc	fsr2h,f,c
 17818  01591C  0EE6               	movlw	-26
 17819  01591E  50E3               	movf	plusw1,w,c
 17820  015920  5CDE               	subwf	postinc2,w,c
 17821  015922  0EE7               	movlw	-25
 17822  015924  50E3               	movf	plusw1,w,c
 17823  015926  58DE               	subwfb	postinc2,w,c
 17824  015928  0EE8               	movlw	-24
 17825  01592A  50E3               	movf	plusw1,w,c
 17826  01592C  58DE               	subwfb	postinc2,w,c
 17827  01592E  0EE9               	movlw	-23
 17828  015930  50E3               	movf	plusw1,w,c
 17829  015932  58DE               	subwfb	postinc2,w,c
 17830  015934  0EEA               	movlw	-22
 17831  015936  50E3               	movf	plusw1,w,c
 17832  015938  58DE               	subwfb	postinc2,w,c
 17833  01593A  0EEB               	movlw	-21
 17834  01593C  50E3               	movf	plusw1,w,c
 17835  01593E  58DE               	subwfb	postinc2,w,c
 17836  015940  0EEC               	movlw	-20
 17837  015942  50E3               	movf	plusw1,w,c
 17838  015944  58DE               	subwfb	postinc2,w,c
 17839  015946  0EED               	movlw	-19
 17840  015948  50E3               	movf	plusw1,w,c
 17841  01594A  58DE               	subwfb	postinc2,w,c
 17842  01594C  A0D8               	btfss	status,0,c
 17843  01594E  D021               	goto	l6775
 17844                           
 17845                           ;stkvar	_divisor @ sp[(-10)+-16]
 17846                           ;stkvar	_dividend @ sp[(-10)+-8]
 17847  015950  50E1               	movf	fsr1l,w,c
 17848  015952  0FEE               	addlw	-18
 17849  015954  6ED9               	movwf	fsr2l,c
 17850  015956  50E2               	movf	fsr1h,w,c
 17851  015958  6EDA               	movwf	fsr2h,c
 17852  01595A  0EFF               	movlw	255
 17853  01595C  22DA               	addwfc	fsr2h,f,c
 17854  01595E  0EE6               	movlw	-26
 17855  015960  50E3               	movf	plusw1,w,c
 17856  015962  5EDE               	subwf	postinc2,f,c
 17857  015964  0EE7               	movlw	-25
 17858  015966  50E3               	movf	plusw1,w,c
 17859  015968  5ADE               	subwfb	postinc2,f,c
 17860  01596A  0EE8               	movlw	-24
 17861  01596C  50E3               	movf	plusw1,w,c
 17862  01596E  5ADE               	subwfb	postinc2,f,c
 17863  015970  0EE9               	movlw	-23
 17864  015972  50E3               	movf	plusw1,w,c
 17865  015974  5ADE               	subwfb	postinc2,f,c
 17866  015976  0EEA               	movlw	-22
 17867  015978  50E3               	movf	plusw1,w,c
 17868  01597A  5ADE               	subwfb	postinc2,f,c
 17869  01597C  0EEB               	movlw	-21
 17870  01597E  50E3               	movf	plusw1,w,c
 17871  015980  5ADE               	subwfb	postinc2,f,c
 17872  015982  0EEC               	movlw	-20
 17873  015984  50E3               	movf	plusw1,w,c
 17874  015986  5ADE               	subwfb	postinc2,f,c
 17875  015988  0EED               	movlw	-19
 17876  01598A  50E3               	movf	plusw1,w,c
 17877  01598C  5ADE               	subwfb	postinc2,f,c
 17878                           
 17879                           ;stkvar	_quotient @ sp[(-10)+0]
 17880  01598E  0EF6               	movlw	-10
 17881  015990  80E3               	bsf	plusw1,0,c
 17882  015992                     l6775:
 17883                           
 17884                           ;stkvar	_divisor @ sp[(-10)+-16]
 17885  015992  90D8               	bcf	status,0,c
 17886  015994  0EED               	movlw	-19
 17887  015996  32E3               	rrcf	plusw1,f,c
 17888  015998  0EEC               	movlw	-20
 17889  01599A  32E3               	rrcf	plusw1,f,c
 17890  01599C  0EEB               	movlw	-21
 17891  01599E  32E3               	rrcf	plusw1,f,c
 17892  0159A0  0EEA               	movlw	-22
 17893  0159A2  32E3               	rrcf	plusw1,f,c
 17894  0159A4  0EE9               	movlw	-23
 17895  0159A6  32E3               	rrcf	plusw1,f,c
 17896  0159A8  0EE8               	movlw	-24
 17897  0159AA  32E3               	rrcf	plusw1,f,c
 17898  0159AC  0EE7               	movlw	-25
 17899  0159AE  32E3               	rrcf	plusw1,f,c
 17900  0159B0  0EE6               	movlw	-26
 17901  0159B2  32E3               	rrcf	plusw1,f,c
 17902                           
 17903                           ;stkvar	_counter @ sp[(-10)+9]
 17904  0159B4  0EFF               	movlw	-1
 17905  0159B6  50E3               	movf	plusw1,w,c
 17906  0159B8  6E25               	movwf	btemp^0,c
 17907  0159BA  0E01               	movlw	1
 17908  0159BC  5E25               	subwf	btemp^0,f,c
 17909  0159BE  0EFF               	movlw	-1
 17910  0159C0  0060  F097  FFE3   	movff	btemp,plusw1
 17911  0159C6  A4D8               	btfss	status,2,c
 17912  0159C8  D791               	goto	u5150
 17913  0159CA                     u5170:
 17914                           
 17915                           ;stkvar	_sign @ sp[(-10)+8]
 17916  0159CA  0EFE               	movlw	-2
 17917  0159CC  50E3               	movf	plusw1,w,c
 17918  0159CE  B4D8               	btfsc	status,2,c
 17919  0159D0  D025               	goto	u5190
 17920                           
 17921                           ;stkvar	_quotient @ sp[(-10)+0]
 17922                           ;stkvar	_quotient @ sp[(-10)+0]
 17923  0159D2  0EF6               	movlw	-10
 17924  0159D4  6CE3               	negf	plusw1,c
 17925  0159D6  0EF7               	movlw	-9
 17926  0159D8  1EE3               	comf	plusw1,f,c
 17927  0159DA  0EF8               	movlw	-8
 17928  0159DC  1EE3               	comf	plusw1,f,c
 17929  0159DE  0EF9               	movlw	-7
 17930  0159E0  1EE3               	comf	plusw1,f,c
 17931  0159E2  0EFA               	movlw	-6
 17932  0159E4  1EE3               	comf	plusw1,f,c
 17933  0159E6  0EFB               	movlw	-5
 17934  0159E8  1EE3               	comf	plusw1,f,c
 17935  0159EA  0EFC               	movlw	-4
 17936  0159EC  1EE3               	comf	plusw1,f,c
 17937  0159EE  0EFD               	movlw	-3
 17938  0159F0  1EE3               	comf	plusw1,f,c
 17939  0159F2  E314               	bnc	u5190
 17940  0159F4  0EF7               	movlw	-9
 17941  0159F6  2AE3               	incf	plusw1,f,c
 17942  0159F8  E311               	bnc	u5190
 17943  0159FA  0EF8               	movlw	-8
 17944  0159FC  2AE3               	incf	plusw1,f,c
 17945  0159FE  E30E               	bnc	u5190
 17946  015A00  0EF9               	movlw	-7
 17947  015A02  2AE3               	incf	plusw1,f,c
 17948  015A04  E30B               	bnc	u5190
 17949  015A06  0EFA               	movlw	-6
 17950  015A08  2AE3               	incf	plusw1,f,c
 17951  015A0A  E308               	bnc	u5190
 17952  015A0C  0EFB               	movlw	-5
 17953  015A0E  2AE3               	incf	plusw1,f,c
 17954  015A10  E305               	bnc	u5190
 17955  015A12  0EFC               	movlw	-4
 17956  015A14  2AE3               	incf	plusw1,f,c
 17957  015A16  E302               	bnc	u5190
 17958  015A18  0EFD               	movlw	-3
 17959  015A1A  2AE3               	incf	plusw1,f,c
 17960  015A1C                     u5190:
 17961                           
 17962                           ;stkvar	_quotient @ sp[(-10)+0]
 17963  015A1C  0EF6               	movlw	246
 17964  015A1E  24E1               	addwf	fsr1l,w,c
 17965  015A20  6ED9               	movwf	fsr2l,c
 17966  015A22  0EFF               	movlw	255
 17967  015A24  20E2               	addwfc	fsr1h,w,c
 17968  015A26  6EDA               	movwf	fsr2h,c
 17969                           
 17970                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 17971  015A28  0E08               	movlw	8
 17972  015A2A  6E25               	movwf	btemp^0,c
 17973  015A2C  0EEE               	movlw	-18
 17974  015A2E                     us520999:
 17975  015A2E  006F FF7B FFE3     	movff	postinc2,plusw1
 17976  015A34  28E8               	incf	wreg,w,c
 17977  015A36  2E25               	decfsz	btemp^0,f,c
 17978  015A38  D7FA               	bra	us520999
 17979                           
 17980                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 17981  015A3A  0EF6               	movlw	246
 17982  015A3C  26E1               	addwf	fsr1l,f,c
 17983  015A3E  0EFF               	movlw	255
 17984  015A40  22E2               	addwfc	fsr1h,f,c
 17985  015A42  0012               	return		;funcret
 17986  015A44                     __end_of___aodiv:
 17987                           	opt callstack 0
 17988                           
 17989 ;; *************** function _ctoa *****************
 17990 ;; Defined at:
 17991 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17992 ;; Parameters:    Size  Location     Type
 17993 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17994 ;;		 -> f(6), NULL(0), 
 17995 ;;  c               1  [STACK] unsigned char 
 17996 ;; Auto vars:     Size  Location     Type
 17997 ;;  w               2  [STACK] int 
 17998 ;;  l               2    0        int 
 17999 ;; Return value:  Size  Location     Type
 18000 ;;                  2  [STACK] int 
 18001 ;; Registers used:
 18002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18003 ;; Tracked objects:
 18004 ;;		On entry : 0/0
 18005 ;;		On exit  : 0/0
 18006 ;;		Unchanged: 0/0
 18007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18012 ;;Total ram usage:        0 bytes
 18013 ;; Hardware stack levels used:    1
 18014 ;; Hardware stack levels required when called:   12
 18015 ;; This function calls:
 18016 ;;		_pad
 18017 ;; This function is called by:
 18018 ;;		_vfpfcnvrt
 18019 ;; This function uses a reentrant model
 18020 ;;
 18021                           
 18022                           	psect	text65
 18023  018072                     __ptext65:
 18024                           	opt callstack 0
 18025  018072                     _ctoa:
 18026                           	opt callstack 0
 18027                           
 18028                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18029  018072  52E6               	movf	postinc1,f,c
 18030  018074  52E6               	movf	postinc1,f,c
 18031                           
 18032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 18033                           
 18034                           ;incstack = 0
 18035  018076  500A               	movf	_width^0,w,c
 18036  018078  100B               	iorwf	(_width+1)^0,w,c
 18037  01807A  A4D8               	btfss	status,2,c
 18038  01807C  D009               	goto	l10075
 18039                           
 18040                           ;stkvar	_w @ sp[(-2)+0]
 18041  01807E  0EFE               	movlw	-2
 18042  018080  0060  F02B  FFE3   	movff	_width,plusw1
 18043  018086  0EFF               	movlw	-1
 18044  018088  0060  F02F  FFE3   	movff	_width+1,plusw1
 18045  01808E  D016               	goto	l10077
 18046  018090                     l10075:
 18047  018090  0EFF               	movlw	255
 18048  018092  6E2F               	movwf	(btemp+10)^0,c
 18049  018094  0EFF               	movlw	255
 18050  018096  6E30               	movwf	(btemp+11)^0,c
 18051  018098  0060  F028  F02D   	movff	_width,btemp+8
 18052  01809E  0060  F02C  F02E   	movff	_width+1,btemp+9
 18053  0180A4  502F               	movf	(btemp+10)^0,w,c
 18054  0180A6  262D               	addwf	(btemp+8)^0,f,c
 18055  0180A8  5030               	movf	(btemp+11)^0,w,c
 18056  0180AA  222E               	addwfc	(btemp+9)^0,f,c
 18057                           
 18058                           ;stkvar	_w @ sp[(-2)+0]
 18059  0180AC  0EFE               	movlw	-2
 18060  0180AE  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 18061  0180B4  0EFF               	movlw	-1
 18062  0180B6  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 18063  0180BC                     l10077:
 18064                           
 18065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 18066                           ;stkvar	_c @ sp[(-2)+-3]
 18067  0180BC  0EFB               	movlw	-5
 18068  0180BE  006F FF8C  F394    	movff	plusw1,_dbuf
 18069                           
 18070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 18071  0180C4  0103               	movlb	3	; () banked
 18072  0180C6  6B95               	clrf	(_dbuf+1)& (0+255),b
 18073                           
 18074                           ; BSR set to: 3
 18075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 18076                           ;stkvar	_w @ sp[(-2)+0]
 18077  0180C8  0EFE               	movlw	-2
 18078  0180CA  006F FF8F FFE6     	movff	plusw1,postinc1
 18079  0180D0  006F FF8F FFE6     	movff	plusw1,postinc1
 18080  0180D6  0E94               	movlw	low _dbuf
 18081  0180D8  6EE6               	movwf	postinc1,c
 18082  0180DA  0E03               	movlw	high _dbuf
 18083  0180DC  6EE6               	movwf	postinc1,c
 18084                           
 18085                           ;stkvar	_fp @ sp[(-6)+-2]
 18086  0180DE  0EF8               	movlw	-8
 18087  0180E0  006F FF8F FFE6     	movff	plusw1,postinc1
 18088  0180E6  006F FF8F FFE6     	movff	plusw1,postinc1
 18089  0180EC  EC70  F0B8         	call	_pad	;wreg free
 18090                           
 18091                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 18092  0180F0  0EFB               	movlw	251
 18093  0180F2  26E1               	addwf	fsr1l,f,c
 18094  0180F4  0EFF               	movlw	255
 18095  0180F6  22E2               	addwfc	fsr1h,f,c
 18096  0180F8  0012               	return		;funcret
 18097  0180FA                     __end_of_ctoa:
 18098                           	opt callstack 0
 18099                           
 18100 ;; *************** function _pad *****************
 18101 ;; Defined at:
 18102 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18103 ;; Parameters:    Size  Location     Type
 18104 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18105 ;;		 -> f(6), NULL(0), 
 18106 ;;  buf             2  [STACK] PTR unsigned char 
 18107 ;;		 -> dbuf(80), 
 18108 ;;  p               2  [STACK] int 
 18109 ;; Auto vars:     Size  Location     Type
 18110 ;;  w               2  [STACK] int 
 18111 ;;  i               2  [STACK] int 
 18112 ;; Return value:  Size  Location     Type
 18113 ;;                  2  [STACK] int 
 18114 ;; Registers used:
 18115 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18116 ;; Tracked objects:
 18117 ;;		On entry : 0/3
 18118 ;;		On exit  : 0/0
 18119 ;;		Unchanged: 0/0
 18120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18125 ;;Total ram usage:        0 bytes
 18126 ;; Hardware stack levels used:    1
 18127 ;; Hardware stack levels required when called:   11
 18128 ;; This function calls:
 18129 ;;		_fputc
 18130 ;;		_fputs
 18131 ;;		_strlen
 18132 ;; This function is called by:
 18133 ;;		_ctoa
 18134 ;;		_dtoa
 18135 ;;		_efgtoa
 18136 ;;		_xtoa
 18137 ;; This function uses a reentrant model
 18138 ;;
 18139                           
 18140                           	psect	text66
 18141  0170E0                     __ptext66:
 18142                           	opt callstack 0
 18143  0170E0                     _pad:
 18144                           	opt callstack 0
 18145                           
 18146                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18147  0170E0  52E6               	movf	postinc1,f,c
 18148  0170E2  52E6               	movf	postinc1,f,c
 18149  0170E4  52E6               	movf	postinc1,f,c
 18150  0170E6  52E6               	movf	postinc1,f,c
 18151                           
 18152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 18153                           
 18154                           ;incstack = 0
 18155  0170E8  A00E               	btfss	_flags^0,0,c
 18156  0170EA  D010               	goto	l10049
 18157                           
 18158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 18159                           ;stkvar	_fp @ sp[(-4)+-2]
 18160  0170EC  0EFA               	movlw	-6
 18161  0170EE  006F FF8F FFE6     	movff	plusw1,postinc1
 18162  0170F4  006F FF8F FFE6     	movff	plusw1,postinc1
 18163                           
 18164                           ;stkvar	_buf @ sp[(-6)+-4]
 18165  0170FA  0EF6               	movlw	-10
 18166  0170FC  006F FF8F FFE6     	movff	plusw1,postinc1
 18167  017102  006F FF8F FFE6     	movff	plusw1,postinc1
 18168  017108  EC13  F0BF         	call	_fputs	;wreg free
 18169  01710C                     l10049:
 18170                           
 18171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 18172                           ;stkvar	_p @ sp[(-4)+-6]
 18173  01710C  0EF7               	movlw	-9
 18174  01710E  BEE3               	btfsc	plusw1,7,c
 18175  017110  D011               	goto	l10053
 18176                           
 18177                           ;stkvar	_p @ sp[(-4)+-6]
 18178                           ;stkvar	_w @ sp[(-4)+0]
 18179  017112  0EF6               	movlw	-10
 18180  017114  006F FF8C  F025    	movff	plusw1,btemp
 18181  01711A  0EFC               	movlw	-4
 18182  01711C  0060  F097  FFE3   	movff	btemp,plusw1
 18183  017122  0EF7               	movlw	-9
 18184  017124  006F FF8C  F025    	movff	plusw1,btemp
 18185  01712A  0EFD               	movlw	-3
 18186  01712C  0060  F097  FFE3   	movff	btemp,plusw1
 18187  017132  D004               	goto	l1988
 18188  017134                     l10053:
 18189                           
 18190                           ;stkvar	_w @ sp[(-4)+0]
 18191  017134  0EFC               	movlw	-4
 18192  017136  6AE3               	clrf	plusw1,c
 18193  017138  0EFD               	movlw	-3
 18194  01713A  6AE3               	clrf	plusw1,c
 18195  01713C                     l1988:
 18196                           
 18197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 18198                           ;stkvar	_i @ sp[(-4)+2]
 18199  01713C  0EFE               	movlw	-2
 18200  01713E  6AE3               	clrf	plusw1,c
 18201  017140  0EFF               	movlw	-1
 18202  017142  6AE3               	clrf	plusw1,c
 18203                           
 18204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18205  017144  D01E               	goto	l10059
 18206  017146                     l10055:
 18207                           
 18208                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 18209                           ;stkvar	_fp @ sp[(-4)+-2]
 18210  017146  0EFA               	movlw	-6
 18211  017148  006F FF8F FFE6     	movff	plusw1,postinc1
 18212  01714E  006F FF8F FFE6     	movff	plusw1,postinc1
 18213  017154  0E20               	movlw	32
 18214  017156  6EE6               	movwf	postinc1,c
 18215  017158  0E00               	movlw	0
 18216  01715A  6EE6               	movwf	postinc1,c
 18217  01715C  EC52  F0B7         	call	_fputc	;wreg free
 18218                           
 18219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 18220                           ;stkvar	_i @ sp[(-4)+2]
 18221  017160  0EFE               	movlw	-2
 18222  017162  50E3               	movf	plusw1,w,c
 18223  017164  0F01               	addlw	1
 18224  017166  6E25               	movwf	btemp^0,c
 18225  017168  0EFE               	movlw	-2
 18226  01716A  0060  F097  FFE3   	movff	btemp,plusw1
 18227  017170  6A25               	clrf	btemp^0,c
 18228  017172  0EFF               	movlw	-1
 18229  017174  50E3               	movf	plusw1,w,c
 18230  017176  2025               	addwfc	btemp^0,w,c
 18231  017178  6E25               	movwf	btemp^0,c
 18232  01717A  0EFF               	movlw	-1
 18233  01717C  0060  F097  FFE3   	movff	btemp,plusw1
 18234  017182                     l10059:
 18235                           
 18236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18237                           ;stkvar	_w @ sp[(-4)+0]
 18238                           ;stkvar	_i @ sp[(-4)+2]
 18239  017182  50E1               	movf	fsr1l,w,c
 18240  017184  0FFE               	addlw	-2
 18241  017186  6ED9               	movwf	fsr2l,c
 18242  017188  50E2               	movf	fsr1h,w,c
 18243  01718A  6EDA               	movwf	fsr2h,c
 18244  01718C  0EFF               	movlw	255
 18245  01718E  22DA               	addwfc	fsr2h,f,c
 18246  017190  0EFC               	movlw	-4
 18247  017192  50E3               	movf	plusw1,w,c
 18248  017194  5CDE               	subwf	postinc2,w,c
 18249  017196  50DE               	movf	postinc2,w,c
 18250  017198  0A80               	xorlw	128
 18251  01719A  6E25               	movwf	btemp^0,c
 18252  01719C  0EFD               	movlw	-3
 18253  01719E  50E3               	movf	plusw1,w,c
 18254  0171A0  0A80               	xorlw	128
 18255  0171A2  5825               	subwfb	btemp^0,w,c
 18256  0171A4  A0D8               	btfss	status,0,c
 18257  0171A6  D7CF               	goto	l10055
 18258                           
 18259                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 18260  0171A8  B00E               	btfsc	_flags^0,0,c
 18261  0171AA  D010               	goto	l10063
 18262                           
 18263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 18264                           ;stkvar	_fp @ sp[(-4)+-2]
 18265  0171AC  0EFA               	movlw	-6
 18266  0171AE  006F FF8F FFE6     	movff	plusw1,postinc1
 18267  0171B4  006F FF8F FFE6     	movff	plusw1,postinc1
 18268                           
 18269                           ;stkvar	_buf @ sp[(-6)+-4]
 18270  0171BA  0EF6               	movlw	-10
 18271  0171BC  006F FF8F FFE6     	movff	plusw1,postinc1
 18272  0171C2  006F FF8F FFE6     	movff	plusw1,postinc1
 18273  0171C8  EC13  F0BF         	call	_fputs	;wreg free
 18274  0171CC                     l10063:
 18275                           
 18276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 18277                           ;stkvar	_w @ sp[(-4)+0]
 18278                           ;stkvar	_buf @ sp[(-4)+-4]
 18279  0171CC  0EF8               	movlw	-8
 18280  0171CE  006F FF8F FFE6     	movff	plusw1,postinc1
 18281  0171D4  006F FF8F FFE6     	movff	plusw1,postinc1
 18282  0171DA  ECC2  F0BE         	call	_strlen	;wreg free
 18283  0171DE  0EFC               	movlw	-4
 18284  0171E0  50E3               	movf	plusw1,w,c
 18285  0171E2  2625               	addwf	btemp^0,f,c
 18286  0171E4  0EFD               	movlw	-3
 18287  0171E6  50E3               	movf	plusw1,w,c
 18288  0171E8  2226               	addwfc	(btemp+1)^0,f,c
 18289                           
 18290                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 18291  0171EA  0EF6               	movlw	246
 18292  0171EC  26E1               	addwf	fsr1l,f,c
 18293  0171EE  0EFF               	movlw	255
 18294  0171F0  22E2               	addwfc	fsr1h,f,c
 18295  0171F2  0012               	return		;funcret
 18296  0171F4                     __end_of_pad:
 18297                           	opt callstack 0
 18298                           
 18299 ;; *************** function _strlen *****************
 18300 ;; Defined at:
 18301 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 18302 ;; Parameters:    Size  Location     Type
 18303 ;;  s               2  [STACK] PTR const unsigned char 
 18304 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18305 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 18306 ;;		 -> T(144), STR_7(6), STR_3(6), V(188), 
 18307 ;; Auto vars:     Size  Location     Type
 18308 ;;  a               2  [STACK] PTR const unsigned char 
 18309 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18310 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 18311 ;;		 -> T(144), STR_7(6), STR_3(6), V(188), 
 18312 ;; Return value:  Size  Location     Type
 18313 ;;                  2  [STACK] unsigned int 
 18314 ;; Registers used:
 18315 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 18316 ;; Tracked objects:
 18317 ;;		On entry : 0/0
 18318 ;;		On exit  : 0/0
 18319 ;;		Unchanged: 0/0
 18320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18325 ;;Total ram usage:        0 bytes
 18326 ;; Hardware stack levels used:    1
 18327 ;; Hardware stack levels required when called:    7
 18328 ;; This function calls:
 18329 ;;		Nothing
 18330 ;; This function is called by:
 18331 ;;		_eaDogM_WriteString
 18332 ;;		_pad
 18333 ;;		_stoa
 18334 ;; This function uses a reentrant model
 18335 ;;
 18336                           
 18337                           	psect	text67
 18338  017D84                     __ptext67:
 18339                           	opt callstack 0
 18340  017D84                     _strlen:
 18341                           	opt callstack 0
 18342                           
 18343                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18344  017D84  52E6               	movf	postinc1,f,c
 18345  017D86  52E6               	movf	postinc1,f,c
 18346                           
 18347                           ;stkvar	_s @ sp[(-2)+-2]
 18348                           
 18349                           ;incstack = 0
 18350  017D88  0EFC               	movlw	-4
 18351  017D8A  006F FF8C  F02F    	movff	plusw1,btemp+10
 18352  017D90  0EFD               	movlw	-3
 18353  017D92  006F FF8C  F030    	movff	plusw1,btemp+11
 18354                           
 18355                           ;stkvar	_a @ sp[(-2)+0]
 18356  017D98  0EFF               	movlw	-1
 18357  017D9A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 18358  017DA0  0EFE               	movlw	-2
 18359  017DA2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 18360  017DA8  D011               	goto	l6589
 18361  017DAA                     l6587:
 18362                           
 18363                           ;stkvar	_s @ sp[(-2)+-2]
 18364  017DAA  0EFC               	movlw	-4
 18365  017DAC  50E3               	movf	plusw1,w,c
 18366  017DAE  0F01               	addlw	1
 18367  017DB0  6E25               	movwf	btemp^0,c
 18368  017DB2  0EFC               	movlw	-4
 18369  017DB4  0060  F097  FFE3   	movff	btemp,plusw1
 18370  017DBA  6A25               	clrf	btemp^0,c
 18371  017DBC  0EFD               	movlw	-3
 18372  017DBE  50E3               	movf	plusw1,w,c
 18373  017DC0  2025               	addwfc	btemp^0,w,c
 18374  017DC2  6E25               	movwf	btemp^0,c
 18375  017DC4  0EFD               	movlw	-3
 18376  017DC6  0060  F097  FFE3   	movff	btemp,plusw1
 18377  017DCC                     l6589:
 18378                           
 18379                           ;stkvar	_s @ sp[(-2)+-2]
 18380  017DCC  0EFC               	movlw	-4
 18381  017DCE  006F FF8F FFF6     	movff	plusw1,tblptrl
 18382  017DD4  0EFD               	movlw	-3
 18383  017DD6  006F FF8F FFF7     	movff	plusw1,tblptrh
 18384  017DDC  0E00               	movlw	low (__mediumconst shr (0+16))
 18385  017DDE  6EF8               	movwf	tblptru,c
 18386  017DE0  0E1F               	movlw	(high __ramtop+-1)
 18387  017DE2  64F7               	cpfsgt	tblptrh,c
 18388  017DE4  D003               	bra	u4687
 18389  017DE6  0008               	tblrd		*
 18390  017DE8  50F5               	movf	tablat,w,c
 18391  017DEA  D007               	bra	u4680
 18392  017DEC                     u4687:
 18393  017DEC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18394  017DF2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18395  017DF8  50EF               	movf	indf0,w,c
 18396  017DFA                     u4680:
 18397  017DFA  0900               	iorlw	0
 18398  017DFC  A4D8               	btfss	status,2,c
 18399  017DFE  D7D5               	goto	l6587
 18400                           
 18401                           ;stkvar	_a @ sp[(-2)+0]
 18402                           ;stkvar	_s @ sp[(-2)+-2]
 18403  017E00  0EFC               	movlw	-4
 18404  017E02  006F FF8C  F025    	movff	plusw1,btemp
 18405  017E08  0EFD               	movlw	-3
 18406  017E0A  006F FF8C  F026    	movff	plusw1,btemp+1
 18407  017E10  0EFE               	movlw	-2
 18408  017E12  50E3               	movf	plusw1,w,c
 18409  017E14  5E25               	subwf	btemp^0,f,c
 18410  017E16  0EFF               	movlw	-1
 18411  017E18  50E3               	movf	plusw1,w,c
 18412  017E1A  5A26               	subwfb	(btemp+1)^0,f,c
 18413                           
 18414                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 18415  017E1C  52E5               	movf	postdec1,f,c
 18416  017E1E  52E5               	movf	postdec1,f,c
 18417  017E20  52E5               	movf	postdec1,f,c
 18418  017E22  52E5               	movf	postdec1,f,c
 18419  017E24  0012               	return		;funcret
 18420  017E26                     __end_of_strlen:
 18421                           	opt callstack 0
 18422                           
 18423 ;; *************** function _fputs *****************
 18424 ;; Defined at:
 18425 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 18426 ;; Parameters:    Size  Location     Type
 18427 ;;  s               2  [STACK] PTR const unsigned char 
 18428 ;;		 -> dbuf(80), 
 18429 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18430 ;;		 -> f(6), NULL(0), 
 18431 ;; Auto vars:     Size  Location     Type
 18432 ;;  i               2  [STACK] int 
 18433 ;;  c               1  [STACK] unsigned char 
 18434 ;; Return value:  Size  Location     Type
 18435 ;;                  2  [STACK] int 
 18436 ;; Registers used:
 18437 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18438 ;; Tracked objects:
 18439 ;;		On entry : 0/3
 18440 ;;		On exit  : 0/0
 18441 ;;		Unchanged: 0/0
 18442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18447 ;;Total ram usage:        0 bytes
 18448 ;; Hardware stack levels used:    1
 18449 ;; Hardware stack levels required when called:   10
 18450 ;; This function calls:
 18451 ;;		_fputc
 18452 ;; This function is called by:
 18453 ;;		_pad
 18454 ;; This function uses a reentrant model
 18455 ;;
 18456                           
 18457                           	psect	text68
 18458  017E26                     __ptext68:
 18459                           	opt callstack 0
 18460  017E26                     _fputs:
 18461                           	opt callstack 0
 18462                           
 18463                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18464  017E26  52E6               	movf	postinc1,f,c
 18465  017E28  52E6               	movf	postinc1,f,c
 18466  017E2A  52E6               	movf	postinc1,f,c
 18467                           
 18468                           ;stkvar	_i @ sp[(-3)+0]
 18469                           
 18470                           ;incstack = 0
 18471  017E2C  0EFD               	movlw	-3
 18472  017E2E  6AE3               	clrf	plusw1,c
 18473  017E30  0EFE               	movlw	-2
 18474  017E32  6AE3               	clrf	plusw1,c
 18475  017E34  D01F               	goto	l10043
 18476  017E36                     l10039:
 18477                           
 18478                           ;stkvar	_fp @ sp[(-3)+-4]
 18479  017E36  0EF9               	movlw	-7
 18480  017E38  006F FF8F FFE6     	movff	plusw1,postinc1
 18481  017E3E  006F FF8F FFE6     	movff	plusw1,postinc1
 18482                           
 18483                           ;stkvar	_c @ sp[(-5)+2]
 18484  017E44  0EFD               	movlw	-3
 18485  017E46  50E3               	movf	plusw1,w,c
 18486  017E48  6EE6               	movwf	postinc1,c
 18487  017E4A  0E00               	movlw	0
 18488  017E4C  6EE6               	movwf	postinc1,c
 18489  017E4E  EC52  F0B7         	call	_fputc	;wreg free
 18490                           
 18491                           ;stkvar	_i @ sp[(-3)+0]
 18492  017E52  0EFD               	movlw	-3
 18493  017E54  50E3               	movf	plusw1,w,c
 18494  017E56  0F01               	addlw	1
 18495  017E58  6E25               	movwf	btemp^0,c
 18496  017E5A  0EFD               	movlw	-3
 18497  017E5C  0060  F097  FFE3   	movff	btemp,plusw1
 18498  017E62  6A25               	clrf	btemp^0,c
 18499  017E64  0EFE               	movlw	-2
 18500  017E66  50E3               	movf	plusw1,w,c
 18501  017E68  2025               	addwfc	btemp^0,w,c
 18502  017E6A  6E25               	movwf	btemp^0,c
 18503  017E6C  0EFE               	movlw	-2
 18504  017E6E  0060  F097  FFE3   	movff	btemp,plusw1
 18505  017E74                     l10043:
 18506                           
 18507                           ;stkvar	_i @ sp[(-3)+0]
 18508  017E74  0EFD               	movlw	-3
 18509  017E76  006F FF8C  F02F    	movff	plusw1,btemp+10
 18510  017E7C  0EFE               	movlw	-2
 18511  017E7E  006F FF8C  F030    	movff	plusw1,btemp+11
 18512                           
 18513                           ;stkvar	_s @ sp[(-3)+-2]
 18514  017E84  0EFB               	movlw	-5
 18515  017E86  006F FF8C  F02D    	movff	plusw1,btemp+8
 18516  017E8C  0EFC               	movlw	-4
 18517  017E8E  006F FF8C  F02E    	movff	plusw1,btemp+9
 18518  017E94  502F               	movf	(btemp+10)^0,w,c
 18519  017E96  242D               	addwf	(btemp+8)^0,w,c
 18520  017E98  6ED9               	movwf	fsr2l,c
 18521  017E9A  5030               	movf	(btemp+11)^0,w,c
 18522  017E9C  202E               	addwfc	(btemp+9)^0,w,c
 18523  017E9E  6EDA               	movwf	fsr2h,c
 18524  017EA0  50DF               	movf	indf2,w,c
 18525  017EA2  6E30               	movwf	(btemp+11)^0,c
 18526                           
 18527                           ;stkvar	_c @ sp[(-3)+2]
 18528  017EA4  0EFF               	movlw	-1
 18529  017EA6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 18530  017EAC  0EFF               	movlw	-1
 18531  017EAE  50E3               	movf	plusw1,w,c
 18532  017EB0  A4D8               	btfss	status,2,c
 18533  017EB2  D7C1               	goto	l10039
 18534                           
 18535                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18536  017EB4  0EF9               	movlw	249
 18537  017EB6  26E1               	addwf	fsr1l,f,c
 18538  017EB8  0EFF               	movlw	255
 18539  017EBA  22E2               	addwfc	fsr1h,f,c
 18540  017EBC  0012               	return		;funcret
 18541  017EBE                     __end_of_fputs:
 18542                           	opt callstack 0
 18543                           
 18544 ;; *************** function _fputc *****************
 18545 ;; Defined at:
 18546 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 18547 ;; Parameters:    Size  Location     Type
 18548 ;;  c               2  [STACK] int 
 18549 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18550 ;;		 -> f(6), NULL(0), 
 18551 ;; Auto vars:     Size  Location     Type
 18552 ;;		None
 18553 ;; Return value:  Size  Location     Type
 18554 ;;                  2  [STACK] int 
 18555 ;; Registers used:
 18556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18557 ;; Tracked objects:
 18558 ;;		On entry : 0/0
 18559 ;;		On exit  : 0/0
 18560 ;;		Unchanged: 0/0
 18561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18566 ;;Total ram usage:        0 bytes
 18567 ;; Hardware stack levels used:    1
 18568 ;; Hardware stack levels required when called:    9
 18569 ;; This function calls:
 18570 ;;		_putch
 18571 ;; This function is called by:
 18572 ;;		_pad
 18573 ;;		_stoa
 18574 ;;		_vfpfcnvrt
 18575 ;;		_fputs
 18576 ;; This function uses a reentrant model
 18577 ;;
 18578                           
 18579                           	psect	text69
 18580  016EA4                     __ptext69:
 18581                           	opt callstack 0
 18582  016EA4                     _fputc:
 18583                           	opt callstack 12
 18584                           
 18585                           ;stkvar	_fp @ sp[(0)+-4]
 18586                           
 18587                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18588                           ;incstack = 0
 18589  016EA4  0EFC               	movlw	-4
 18590  016EA6  006F FF8C  F025    	movff	plusw1,btemp
 18591  016EAC  0EFD               	movlw	-3
 18592  016EAE  50E3               	movf	plusw1,w,c
 18593  016EB0  1025               	iorwf	btemp^0,w,c
 18594  016EB2  B4D8               	btfsc	status,2,c
 18595  016EB4  D009               	goto	u9240
 18596                           
 18597                           ;stkvar	_fp @ sp[(0)+-4]
 18598  016EB6  0EFC               	movlw	-4
 18599  016EB8  006F FF8C  F025    	movff	plusw1,btemp
 18600  016EBE  0EFD               	movlw	-3
 18601  016EC0  50E3               	movf	plusw1,w,c
 18602  016EC2  1025               	iorwf	btemp^0,w,c
 18603  016EC4  A4D8               	btfss	status,2,c
 18604  016EC6  D006               	goto	l10027
 18605  016EC8                     u9240:
 18606                           
 18607                           ;stkvar	_c @ sp[(0)+-2]
 18608  016EC8  0EFE               	movlw	-2
 18609  016ECA  50E3               	movf	plusw1,w,c
 18610  016ECC  6EE6               	movwf	postinc1,c
 18611  016ECE  ECC8  F0C9         	call	_putch	;wreg free
 18612  016ED2  D075               	goto	l3006
 18613  016ED4                     l10027:
 18614                           
 18615                           ;stkvar	_fp @ sp[(0)+-4]
 18616  016ED4  0EFC               	movlw	-4
 18617  016ED6  006F FF8C  F02F    	movff	plusw1,btemp+10
 18618  016EDC  0EFD               	movlw	-3
 18619  016EDE  006F FF8C  F030    	movff	plusw1,btemp+11
 18620  016EE4  0E04               	movlw	4
 18621  016EE6  242F               	addwf	(btemp+10)^0,w,c
 18622  016EE8  6ED9               	movwf	fsr2l,c
 18623  016EEA  0E00               	movlw	0
 18624  016EEC  2030               	addwfc	(btemp+11)^0,w,c
 18625  016EEE  6EDA               	movwf	fsr2h,c
 18626  016EF0  50DE               	movf	postinc2,w,c
 18627  016EF2  10DE               	iorwf	postinc2,w,c
 18628  016EF4  B4D8               	btfsc	status,2,c
 18629  016EF6  D026               	goto	u9260
 18630                           
 18631                           ;stkvar	_fp @ sp[(0)+-4]
 18632  016EF8  0EFC               	movlw	-4
 18633  016EFA  006F FF8C  F02F    	movff	plusw1,btemp+10
 18634  016F00  0EFD               	movlw	-3
 18635  016F02  006F FF8C  F030    	movff	plusw1,btemp+11
 18636  016F08  0E04               	movlw	4
 18637  016F0A  242F               	addwf	(btemp+10)^0,w,c
 18638  016F0C  6ED9               	movwf	fsr2l,c
 18639  016F0E  0E00               	movlw	0
 18640  016F10  2030               	addwfc	(btemp+11)^0,w,c
 18641  016F12  6EDA               	movwf	fsr2h,c
 18642                           
 18643                           ;stkvar	_fp @ sp[(0)+-4]
 18644  016F14  0EFC               	movlw	-4
 18645  016F16  006F FF8C  F02F    	movff	plusw1,btemp+10
 18646  016F1C  0EFD               	movlw	-3
 18647  016F1E  006F FF8C  F030    	movff	plusw1,btemp+11
 18648  016F24  0E02               	movlw	2
 18649  016F26  242F               	addwf	(btemp+10)^0,w,c
 18650  016F28  6EE9               	movwf	fsr0l,c
 18651  016F2A  0E00               	movlw	0
 18652  016F2C  2030               	addwfc	(btemp+11)^0,w,c
 18653  016F2E  6EEA               	movwf	fsr0h,c
 18654  016F30  50DE               	movf	postinc2,w,c
 18655  016F32  5CEE               	subwf	postinc0,w,c
 18656  016F34  50EE               	movf	postinc0,w,c
 18657  016F36  0A80               	xorlw	128
 18658  016F38  6E25               	movwf	btemp^0,c
 18659  016F3A  50DE               	movf	postinc2,w,c
 18660  016F3C  0A80               	xorlw	128
 18661  016F3E  5825               	subwfb	btemp^0,w,c
 18662  016F40  B0D8               	btfsc	status,0,c
 18663  016F42  D03D               	goto	l3006
 18664  016F44                     u9260:
 18665                           
 18666                           ;stkvar	_c @ sp[(0)+-2]
 18667                           ;stkvar	_fp @ sp[(0)+-4]
 18668  016F44  0EFC               	movlw	-4
 18669  016F46  006F FF8C  F02F    	movff	plusw1,btemp+10
 18670  016F4C  0EFD               	movlw	-3
 18671  016F4E  006F FF8C  F030    	movff	plusw1,btemp+11
 18672  016F54  0E02               	movlw	2
 18673  016F56  242F               	addwf	(btemp+10)^0,w,c
 18674  016F58  6ED9               	movwf	fsr2l,c
 18675  016F5A  0E00               	movlw	0
 18676  016F5C  2030               	addwfc	(btemp+11)^0,w,c
 18677  016F5E  6EDA               	movwf	fsr2h,c
 18678  016F60  006F FF78  F02F    	movff	postinc2,btemp+10
 18679  016F66  006F FF74  F030    	movff	postdec2,btemp+11
 18680                           
 18681                           ;stkvar	_fp @ sp[(0)+-4]
 18682  016F6C  0EFC               	movlw	-4
 18683  016F6E  006F FF8F FFD9     	movff	plusw1,fsr2l
 18684  016F74  0EFD               	movlw	-3
 18685  016F76  006F FF8F FFDA     	movff	plusw1,fsr2h
 18686  016F7C  006F FF78  F02D    	movff	postinc2,btemp+8
 18687  016F82  006F FF74  F02E    	movff	postdec2,btemp+9
 18688  016F88  502F               	movf	(btemp+10)^0,w,c
 18689  016F8A  242D               	addwf	(btemp+8)^0,w,c
 18690  016F8C  6ED9               	movwf	fsr2l,c
 18691  016F8E  5030               	movf	(btemp+11)^0,w,c
 18692  016F90  202E               	addwfc	(btemp+9)^0,w,c
 18693  016F92  6EDA               	movwf	fsr2h,c
 18694  016F94  0EFE               	movlw	-2
 18695  016F96  006F FF8F FFDF     	movff	plusw1,indf2
 18696                           
 18697                           ;stkvar	_fp @ sp[(0)+-4]
 18698  016F9C  0EFC               	movlw	-4
 18699  016F9E  006F FF8C  F02F    	movff	plusw1,btemp+10
 18700  016FA4  0EFD               	movlw	-3
 18701  016FA6  006F FF8C  F030    	movff	plusw1,btemp+11
 18702  016FAC  0E02               	movlw	2
 18703  016FAE  242F               	addwf	(btemp+10)^0,w,c
 18704  016FB0  6ED9               	movwf	fsr2l,c
 18705  016FB2  0E00               	movlw	0
 18706  016FB4  2030               	addwfc	(btemp+11)^0,w,c
 18707  016FB6  6EDA               	movwf	fsr2h,c
 18708  016FB8  2ADE               	incf	postinc2,f,c
 18709  016FBA  0E00               	movlw	0
 18710  016FBC  22DD               	addwfc	postdec2,f,c
 18711  016FBE                     l3006:
 18712                           
 18713                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18714  016FBE  52E5               	movf	postdec1,f,c
 18715  016FC0  52E5               	movf	postdec1,f,c
 18716  016FC2  52E5               	movf	postdec1,f,c
 18717  016FC4  52E5               	movf	postdec1,f,c
 18718  016FC6  0012               	return		;funcret
 18719  016FC8                     __end_of_fputc:
 18720                           	opt callstack 0
 18721                           
 18722 ;; *************** function _putch *****************
 18723 ;; Defined at:
 18724 ;;		line 168 in file "eadog.c"
 18725 ;; Parameters:    Size  Location     Type
 18726 ;;  c               1  [STACK] unsigned char 
 18727 ;; Auto vars:     Size  Location     Type
 18728 ;;		None
 18729 ;; Return value:  Size  Location     Type
 18730 ;;                  1  [STACK] void 
 18731 ;; Registers used:
 18732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18733 ;; Tracked objects:
 18734 ;;		On entry : 0/0
 18735 ;;		On exit  : 0/0
 18736 ;;		Unchanged: 0/0
 18737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18742 ;;Total ram usage:        0 bytes
 18743 ;; Hardware stack levels used:    1
 18744 ;; Hardware stack levels required when called:    8
 18745 ;; This function calls:
 18746 ;;		_ringBufS_put_dma
 18747 ;; This function is called by:
 18748 ;;		_fputc
 18749 ;; This function uses a reentrant model
 18750 ;;
 18751                           
 18752                           	psect	text70
 18753  019390                     __ptext70:
 18754                           	opt callstack 0
 18755  019390                     _putch:
 18756                           	opt callstack 12
 18757                           
 18758                           ;eadog.c: 168: void putch(char c);eadog.c: 169: {;eadog.c: 170:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 18759                           ;stkvar	_c @ sp[(0)+-1]
 18760                           
 18761                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18762                           ;incstack = 0
 18763  019390  0EFF               	movlw	-1
 18764  019392  50E3               	movf	plusw1,w,c
 18765  019394  6EE6               	movwf	postinc1,c
 18766  019396  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
 18767  01939C  0060  F243  FFE6   	movff	_spi_link+7,postinc1
 18768  0193A2  EC1A  F0BE         	call	_ringBufS_put_dma	;wreg free
 18769                           
 18770                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 18771  0193A6  52E5               	movf	postdec1,f,c
 18772  0193A8  0012               	return		;funcret
 18773  0193AA                     __end_of_putch:
 18774                           	opt callstack 0
 18775                           
 18776 ;; *************** function _ringBufS_put_dma *****************
 18777 ;; Defined at:
 18778 ;;		line 67 in file "ringbufs.c"
 18779 ;; Parameters:    Size  Location     Type
 18780 ;;  _this           2  [STACK] PTR struct ringBufS_t
 18781 ;;		 -> ring_buf1(67), 
 18782 ;;  c               1  [STACK] const unsigned char 
 18783 ;; Auto vars:     Size  Location     Type
 18784 ;;		None
 18785 ;; Return value:  Size  Location     Type
 18786 ;;                  1  [STACK] void 
 18787 ;; Registers used:
 18788 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18789 ;; Tracked objects:
 18790 ;;		On entry : 0/0
 18791 ;;		On exit  : 0/0
 18792 ;;		Unchanged: 0/0
 18793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18798 ;;Total ram usage:        0 bytes
 18799 ;; Hardware stack levels used:    1
 18800 ;; Hardware stack levels required when called:    7
 18801 ;; This function calls:
 18802 ;;		Nothing
 18803 ;; This function is called by:
 18804 ;;		_putch
 18805 ;; This function uses a reentrant model
 18806 ;;
 18807                           
 18808                           	psect	text71
 18809  017C34                     __ptext71:
 18810                           	opt callstack 0
 18811  017C34                     _ringBufS_put_dma:
 18812                           	opt callstack 12
 18813                           
 18814                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 18815                           ;stkvar	__this @ sp[(0)+-2]
 18816                           
 18817                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18818                           ;incstack = 0
 18819  017C34  0EFE               	movlw	-2
 18820  017C36  006F FF8C  F02F    	movff	plusw1,btemp+10
 18821  017C3C  0EFF               	movlw	-1
 18822  017C3E  006F FF8C  F030    	movff	plusw1,btemp+11
 18823  017C44  0E42               	movlw	66
 18824  017C46  242F               	addwf	(btemp+10)^0,w,c
 18825  017C48  6ED9               	movwf	fsr2l,c
 18826  017C4A  0E00               	movlw	0
 18827  017C4C  2030               	addwfc	(btemp+11)^0,w,c
 18828  017C4E  6EDA               	movwf	fsr2h,c
 18829  017C50  0E40               	movlw	64
 18830  017C52  60DF               	cpfslt	indf2,c
 18831  017C54  D040               	goto	l1580
 18832                           
 18833                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 18834                           ;stkvar	_c @ sp[(0)+-3]
 18835                           ;stkvar	__this @ sp[(0)+-2]
 18836  017C56  0EFE               	movlw	-2
 18837  017C58  006F FF8C  F02F    	movff	plusw1,btemp+10
 18838  017C5E  0EFF               	movlw	-1
 18839  017C60  006F FF8C  F030    	movff	plusw1,btemp+11
 18840  017C66  0E40               	movlw	64
 18841  017C68  242F               	addwf	(btemp+10)^0,w,c
 18842  017C6A  6ED9               	movwf	fsr2l,c
 18843  017C6C  0E00               	movlw	0
 18844  017C6E  2030               	addwfc	(btemp+11)^0,w,c
 18845  017C70  6EDA               	movwf	fsr2h,c
 18846  017C72  50DF               	movf	indf2,w,c
 18847  017C74  6E30               	movwf	(btemp+11)^0,c
 18848                           
 18849                           ;stkvar	__this @ sp[(0)+-2]
 18850  017C76  0EFE               	movlw	-2
 18851  017C78  006F FF8C  F02D    	movff	plusw1,btemp+8
 18852  017C7E  0EFF               	movlw	-1
 18853  017C80  006F FF8C  F02E    	movff	plusw1,btemp+9
 18854  017C86  5030               	movf	(btemp+11)^0,w,c
 18855  017C88  242D               	addwf	(btemp+8)^0,w,c
 18856  017C8A  6ED9               	movwf	fsr2l,c
 18857  017C8C  0E00               	movlw	0
 18858  017C8E  202E               	addwfc	(btemp+9)^0,w,c
 18859  017C90  6EDA               	movwf	fsr2h,c
 18860  017C92  0EFD               	movlw	-3
 18861  017C94  006F FF8F FFDF     	movff	plusw1,indf2
 18862                           
 18863                           ;ringbufs.c: 71:   ++_this->head;
 18864                           ;stkvar	__this @ sp[(0)+-2]
 18865  017C9A  0EFE               	movlw	-2
 18866  017C9C  006F FF8C  F02F    	movff	plusw1,btemp+10
 18867  017CA2  0EFF               	movlw	-1
 18868  017CA4  006F FF8C  F030    	movff	plusw1,btemp+11
 18869  017CAA  0E40               	movlw	64
 18870  017CAC  242F               	addwf	(btemp+10)^0,w,c
 18871  017CAE  6ED9               	movwf	fsr2l,c
 18872  017CB0  0E00               	movlw	0
 18873  017CB2  2030               	addwfc	(btemp+11)^0,w,c
 18874  017CB4  6EDA               	movwf	fsr2h,c
 18875  017CB6  2ADF               	incf	indf2,f,c
 18876                           
 18877                           ;ringbufs.c: 72:   ++_this->count;
 18878                           ;stkvar	__this @ sp[(0)+-2]
 18879  017CB8  0EFE               	movlw	-2
 18880  017CBA  006F FF8C  F02F    	movff	plusw1,btemp+10
 18881  017CC0  0EFF               	movlw	-1
 18882  017CC2  006F FF8C  F030    	movff	plusw1,btemp+11
 18883  017CC8  0E42               	movlw	66
 18884  017CCA  242F               	addwf	(btemp+10)^0,w,c
 18885  017CCC  6ED9               	movwf	fsr2l,c
 18886  017CCE  0E00               	movlw	0
 18887  017CD0  2030               	addwfc	(btemp+11)^0,w,c
 18888  017CD2  6EDA               	movwf	fsr2h,c
 18889  017CD4  2ADF               	incf	indf2,f,c
 18890  017CD6                     l1580:
 18891                           
 18892                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 18893  017CD6  52E5               	movf	postdec1,f,c
 18894  017CD8  52E5               	movf	postdec1,f,c
 18895  017CDA  52E5               	movf	postdec1,f,c
 18896  017CDC  0012               	return		;funcret
 18897  017CDE                     __end_of_ringBufS_put_dma:
 18898                           	opt callstack 0
 18899                           
 18900 ;; *************** function _atoi *****************
 18901 ;; Defined at:
 18902 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 18903 ;; Parameters:    Size  Location     Type
 18904 ;;  s               2  [STACK] PTR const unsigned char 
 18905 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
 18906 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
 18907 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
 18908 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
 18909 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
 18910 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(20), 
 18911 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
 18912 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
 18913 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
 18914 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 18915 ;; Auto vars:     Size  Location     Type
 18916 ;;  n               2  [STACK] int 
 18917 ;;  neg             2  [STACK] int 
 18918 ;; Return value:  Size  Location     Type
 18919 ;;                  2  [STACK] int 
 18920 ;; Registers used:
 18921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 18922 ;; Tracked objects:
 18923 ;;		On entry : 0/0
 18924 ;;		On exit  : 0/0
 18925 ;;		Unchanged: 0/0
 18926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18931 ;;Total ram usage:        0 bytes
 18932 ;; Hardware stack levels used:    1
 18933 ;; Hardware stack levels required when called:    8
 18934 ;; This function calls:
 18935 ;;		_isdigit
 18936 ;;		_isspace
 18937 ;; This function is called by:
 18938 ;;		_vfpfcnvrt
 18939 ;; This function uses a reentrant model
 18940 ;;
 18941                           
 18942                           	psect	text72
 18943  015A44                     __ptext72:
 18944                           	opt callstack 0
 18945  015A44                     _atoi:
 18946                           	opt callstack 0
 18947                           
 18948                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18949  015A44  0E09               	movlw	9
 18950  015A46  26E1               	addwf	fsr1l,f,c
 18951  015A48  0E00               	movlw	0
 18952  015A4A  22E2               	addwfc	fsr1h,f,c
 18953                           
 18954                           ;stkvar	_n @ sp[(-9)+5]
 18955                           
 18956                           ;incstack = 0
 18957  015A4C  0EFC               	movlw	-4
 18958  015A4E  6AE3               	clrf	plusw1,c
 18959  015A50  0EFD               	movlw	-3
 18960  015A52  6AE3               	clrf	plusw1,c
 18961                           
 18962                           ;stkvar	_neg @ sp[(-9)+7]
 18963  015A54  0EFE               	movlw	-2
 18964  015A56  6AE3               	clrf	plusw1,c
 18965  015A58  0EFF               	movlw	-1
 18966  015A5A  6AE3               	clrf	plusw1,c
 18967  015A5C  D011               	goto	l7659
 18968  015A5E                     l7657:
 18969                           
 18970                           ;stkvar	_s @ sp[(-9)+-2]
 18971  015A5E  0EF5               	movlw	-11
 18972  015A60  50E3               	movf	plusw1,w,c
 18973  015A62  0F01               	addlw	1
 18974  015A64  6E25               	movwf	btemp^0,c
 18975  015A66  0EF5               	movlw	-11
 18976  015A68  0060  F097  FFE3   	movff	btemp,plusw1
 18977  015A6E  6A25               	clrf	btemp^0,c
 18978  015A70  0EF6               	movlw	-10
 18979  015A72  50E3               	movf	plusw1,w,c
 18980  015A74  2025               	addwfc	btemp^0,w,c
 18981  015A76  6E25               	movwf	btemp^0,c
 18982  015A78  0EF6               	movlw	-10
 18983  015A7A  0060  F097  FFE3   	movff	btemp,plusw1
 18984  015A80                     l7659:
 18985                           
 18986                           ;stkvar	_atoi$5518 @ sp[(-9)+4]
 18987  015A80  0EFB               	movlw	-5
 18988  015A82  6AE3               	clrf	plusw1,c
 18989  015A84  2AE3               	incf	plusw1,f,c
 18990                           
 18991                           ;stkvar	_s @ sp[(-9)+-2]
 18992  015A86  50E1               	movf	fsr1l,w,c
 18993  015A88  0FF5               	addlw	-11
 18994  015A8A  6ED9               	movwf	fsr2l,c
 18995  015A8C  50E2               	movf	fsr1h,w,c
 18996  015A8E  6EDA               	movwf	fsr2h,c
 18997  015A90  0EFF               	movlw	255
 18998  015A92  22DA               	addwfc	fsr2h,f,c
 18999  015A94  006F FF7B FFF6     	movff	postinc2,tblptrl
 19000  015A9A  006F FF77 FFF7     	movff	postdec2,tblptrh
 19001  015AA0                     	if	0	;tblptru may be non-zero
 19002  015AA0                     	endif
 19003  015AA0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19004  015AA0  0E00               	movlw	low (__mediumconst shr (0+16))
 19005  015AA2  6EF8               	movwf	tblptru,c
 19006  015AA4                     	endif
 19007  015AA4  0008               	tblrd		*
 19008  015AA6  50F5               	movf	tablat,w,c
 19009  015AA8  0A20               	xorlw	32
 19010  015AAA  B4D8               	btfsc	status,2,c
 19011  015AAC  D023               	goto	l7667
 19012  015AAE  0EF7               	movlw	247
 19013  015AB0  6E2F               	movwf	(btemp+10)^0,c
 19014  015AB2  0EFF               	movlw	255
 19015  015AB4  6E30               	movwf	(btemp+11)^0,c
 19016                           
 19017                           ;stkvar	_s @ sp[(-9)+-2]
 19018  015AB6  50E1               	movf	fsr1l,w,c
 19019  015AB8  0FF5               	addlw	-11
 19020  015ABA  6ED9               	movwf	fsr2l,c
 19021  015ABC  50E2               	movf	fsr1h,w,c
 19022  015ABE  6EDA               	movwf	fsr2h,c
 19023  015AC0  0EFF               	movlw	255
 19024  015AC2  22DA               	addwfc	fsr2h,f,c
 19025  015AC4  006F FF7B FFF6     	movff	postinc2,tblptrl
 19026  015ACA  006F FF77 FFF7     	movff	postdec2,tblptrh
 19027  015AD0                     	if	0	;tblptru may be non-zero
 19028  015AD0                     	endif
 19029  015AD0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19030  015AD0  0E00               	movlw	low (__mediumconst shr (0+16))
 19031  015AD2  6EF8               	movwf	tblptru,c
 19032  015AD4                     	endif
 19033  015AD4  0008               	tblrd		*
 19034  015AD6  50F5               	movf	tablat,w,c
 19035  015AD8  6E2D               	movwf	(btemp+8)^0,c
 19036  015ADA  6A2E               	clrf	(btemp+9)^0,c
 19037  015ADC  502F               	movf	(btemp+10)^0,w,c
 19038  015ADE  262D               	addwf	(btemp+8)^0,f,c
 19039  015AE0  5030               	movf	(btemp+11)^0,w,c
 19040  015AE2  222E               	addwfc	(btemp+9)^0,f,c
 19041  015AE4  502E               	movf	(btemp+9)^0,w,c
 19042  015AE6  E104               	bnz	u6830
 19043  015AE8  0E05               	movlw	5
 19044  015AEA  5C2D               	subwf	(btemp+8)^0,w,c
 19045  015AEC  A0D8               	btfss	status,0,c
 19046  015AEE  D002               	goto	l7667
 19047  015AF0                     u6830:
 19048                           
 19049                           ;stkvar	_atoi$5518 @ sp[(-9)+4]
 19050  015AF0  0EFB               	movlw	-5
 19051  015AF2  6AE3               	clrf	plusw1,c
 19052  015AF4                     l7667:
 19053                           
 19054                           ;stkvar	_atoi$5518 @ sp[(-9)+4]
 19055  015AF4  0EFB               	movlw	-5
 19056  015AF6  50E3               	movf	plusw1,w,c
 19057  015AF8  6E2F               	movwf	(btemp+10)^0,c
 19058  015AFA  6A30               	clrf	(btemp+11)^0,c
 19059                           
 19060                           ;stkvar	_atoi$5517 @ sp[(-9)+2]
 19061  015AFC  0EF9               	movlw	-7
 19062  015AFE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 19063  015B04  0EFA               	movlw	-6
 19064  015B06  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 19065                           
 19066                           ;stkvar	_atoi$5517 @ sp[(-9)+2]
 19067  015B0C  0EF9               	movlw	-7
 19068  015B0E  006F FF8C  F025    	movff	plusw1,btemp
 19069  015B14  0EFA               	movlw	-6
 19070  015B16  50E3               	movf	plusw1,w,c
 19071  015B18  1025               	iorwf	btemp^0,w,c
 19072  015B1A  B4D8               	btfsc	status,2,c
 19073  015B1C  D01F               	goto	l7677
 19074  015B1E  D79F               	goto	l7657
 19075  015B20                     l7673:
 19076  015B20  0E01               	movlw	1
 19077  015B22  6E2F               	movwf	(btemp+10)^0,c
 19078  015B24  0E00               	movlw	0
 19079  015B26  6E30               	movwf	(btemp+11)^0,c
 19080                           
 19081                           ;stkvar	_neg @ sp[(-9)+7]
 19082  015B28  0EFE               	movlw	-2
 19083  015B2A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 19084  015B30  0EFF               	movlw	-1
 19085  015B32  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 19086  015B38                     l7675:
 19087                           
 19088                           ;stkvar	_s @ sp[(-9)+-2]
 19089  015B38  0EF5               	movlw	-11
 19090  015B3A  50E3               	movf	plusw1,w,c
 19091  015B3C  0F01               	addlw	1
 19092  015B3E  6E25               	movwf	btemp^0,c
 19093  015B40  0EF5               	movlw	-11
 19094  015B42  0060  F097  FFE3   	movff	btemp,plusw1
 19095  015B48  6A25               	clrf	btemp^0,c
 19096  015B4A  0EF6               	movlw	-10
 19097  015B4C  50E3               	movf	plusw1,w,c
 19098  015B4E  2025               	addwfc	btemp^0,w,c
 19099  015B50  6E25               	movwf	btemp^0,c
 19100  015B52  0EF6               	movlw	-10
 19101  015B54  0060  F097  FFE3   	movff	btemp,plusw1
 19102  015B5A  D053               	goto	l7683
 19103  015B5C                     l7677:
 19104                           
 19105                           ;stkvar	_s @ sp[(-9)+-2]
 19106  015B5C  50E1               	movf	fsr1l,w,c
 19107  015B5E  0FF5               	addlw	-11
 19108  015B60  6ED9               	movwf	fsr2l,c
 19109  015B62  50E2               	movf	fsr1h,w,c
 19110  015B64  6EDA               	movwf	fsr2h,c
 19111  015B66  0EFF               	movlw	255
 19112  015B68  22DA               	addwfc	fsr2h,f,c
 19113  015B6A  006F FF7B FFF6     	movff	postinc2,tblptrl
 19114  015B70  006F FF77 FFF7     	movff	postdec2,tblptrh
 19115  015B76                     	if	0	;tblptru may be non-zero
 19116  015B76                     	endif
 19117  015B76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19118  015B76  0E00               	movlw	low (__mediumconst shr (0+16))
 19119  015B78  6EF8               	movwf	tblptru,c
 19120  015B7A                     	endif
 19121  015B7A  0008               	tblrd		*
 19122  015B7C  50F5               	movf	tablat,w,c
 19123  015B7E  6E2F               	movwf	(btemp+10)^0,c
 19124  015B80  6A30               	clrf	(btemp+11)^0,c
 19125                           
 19126                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19127                           ; Switch size 1, requested type "simple"
 19128                           ; Number of cases is 1, Range of values is 0 to 0
 19129                           ; switch strategies available:
 19130                           ; Name         Instructions Cycles
 19131                           ; simple_byte            4     3 (average)
 19132                           ;	Chosen strategy is simple_byte
 19133  015B82  5030               	movf	(btemp+11)^0,w,c
 19134  015B84  0A00               	xorlw	0	; case 0
 19135  015B86  A4D8               	btfss	status,2,c
 19136  015B88  D03C               	goto	l7683
 19137                           
 19138                           ; Switch size 1, requested type "simple"
 19139                           ; Number of cases is 2, Range of values is 43 to 45
 19140                           ; switch strategies available:
 19141                           ; Name         Instructions Cycles
 19142                           ; simple_byte            7     4 (average)
 19143                           ;	Chosen strategy is simple_byte
 19144  015B8A  502F               	movf	(btemp+10)^0,w,c
 19145  015B8C  0A2B               	xorlw	43	; case 43
 19146  015B8E  B4D8               	btfsc	status,2,c
 19147  015B90  D7D3               	goto	l7675
 19148  015B92  0A06               	xorlw	6	; case 45
 19149  015B94  B4D8               	btfsc	status,2,c
 19150  015B96  D7C4               	goto	l7673
 19151  015B98  D034               	goto	l7683
 19152  015B9A                     l7679:
 19153                           
 19154                           ;stkvar	_n @ sp[(-9)+5]
 19155  015B9A  0EFC               	movlw	-4
 19156  015B9C  006F FF8C  F02F    	movff	plusw1,btemp+10
 19157  015BA2  0EFD               	movlw	-3
 19158  015BA4  006F FF8C  F030    	movff	plusw1,btemp+11
 19159  015BAA  0E0A               	movlw	10
 19160  015BAC  022F               	mulwf	(btemp+10)^0,c
 19161  015BAE  006F FFCC  F02D    	movff	prodl,btemp+8
 19162  015BB4  006F FFD0  F02E    	movff	prodh,btemp+9
 19163  015BBA  0230               	mulwf	(btemp+11)^0,c
 19164  015BBC  50F3               	movf	prodl,w,c
 19165  015BBE  262E               	addwf	(btemp+9)^0,f,c
 19166                           
 19167                           ;stkvar	_s @ sp[(-9)+-2]
 19168  015BC0  50E1               	movf	fsr1l,w,c
 19169  015BC2  0FF5               	addlw	-11
 19170  015BC4  6ED9               	movwf	fsr2l,c
 19171  015BC6  50E2               	movf	fsr1h,w,c
 19172  015BC8  6EDA               	movwf	fsr2h,c
 19173  015BCA  0EFF               	movlw	255
 19174  015BCC  22DA               	addwfc	fsr2h,f,c
 19175  015BCE  006F FF7B FFF6     	movff	postinc2,tblptrl
 19176  015BD4  006F FF77 FFF7     	movff	postdec2,tblptrh
 19177  015BDA                     	if	0	;tblptru may be non-zero
 19178  015BDA                     	endif
 19179  015BDA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19180  015BDA  0E00               	movlw	low (__mediumconst shr (0+16))
 19181  015BDC  6EF8               	movwf	tblptru,c
 19182  015BDE                     	endif
 19183  015BDE  0008               	tblrd		*
 19184  015BE0  50F5               	movf	tablat,w,c
 19185  015BE2  5E2D               	subwf	(btemp+8)^0,f,c
 19186  015BE4  0E00               	movlw	0
 19187  015BE6  5A2E               	subwfb	(btemp+9)^0,f,c
 19188  015BE8  0E30               	movlw	48
 19189  015BEA  262D               	addwf	(btemp+8)^0,f,c
 19190  015BEC  0E00               	movlw	0
 19191  015BEE  222E               	addwfc	(btemp+9)^0,f,c
 19192                           
 19193                           ;stkvar	_n @ sp[(-9)+5]
 19194  015BF0  0EFC               	movlw	-4
 19195  015BF2  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 19196  015BF8  0EFD               	movlw	-3
 19197  015BFA  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 19198  015C00  D79B               	goto	l7675
 19199  015C02                     l7683:
 19200  015C02  0ED0               	movlw	208
 19201  015C04  6E2F               	movwf	(btemp+10)^0,c
 19202  015C06  0EFF               	movlw	255
 19203  015C08  6E30               	movwf	(btemp+11)^0,c
 19204                           
 19205                           ;stkvar	_s @ sp[(-9)+-2]
 19206  015C0A  50E1               	movf	fsr1l,w,c
 19207  015C0C  0FF5               	addlw	-11
 19208  015C0E  6ED9               	movwf	fsr2l,c
 19209  015C10  50E2               	movf	fsr1h,w,c
 19210  015C12  6EDA               	movwf	fsr2h,c
 19211  015C14  0EFF               	movlw	255
 19212  015C16  22DA               	addwfc	fsr2h,f,c
 19213  015C18  006F FF7B FFF6     	movff	postinc2,tblptrl
 19214  015C1E  006F FF77 FFF7     	movff	postdec2,tblptrh
 19215  015C24                     	if	0	;tblptru may be non-zero
 19216  015C24                     	endif
 19217  015C24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19218  015C24  0E00               	movlw	low (__mediumconst shr (0+16))
 19219  015C26  6EF8               	movwf	tblptru,c
 19220  015C28                     	endif
 19221  015C28  0008               	tblrd		*
 19222  015C2A  50F5               	movf	tablat,w,c
 19223  015C2C  6E2D               	movwf	(btemp+8)^0,c
 19224  015C2E  6A2E               	clrf	(btemp+9)^0,c
 19225  015C30  502F               	movf	(btemp+10)^0,w,c
 19226  015C32  262D               	addwf	(btemp+8)^0,f,c
 19227  015C34  5030               	movf	(btemp+11)^0,w,c
 19228  015C36  222E               	addwfc	(btemp+9)^0,f,c
 19229  015C38  502E               	movf	(btemp+9)^0,w,c
 19230  015C3A  E106               	bnz	u6850
 19231  015C3C  0E0A               	movlw	10
 19232  015C3E  5C2D               	subwf	(btemp+8)^0,w,c
 19233  015C40  B0D8               	btfsc	status,0,c
 19234  015C42  D002               	goto	u6850
 19235  015C44  0E01               	movlw	1
 19236  015C46  D001               	goto	u6860
 19237  015C48                     u6850:
 19238  015C48  0E00               	movlw	0
 19239  015C4A                     u6860:
 19240  015C4A  6E2F               	movwf	(btemp+10)^0,c
 19241  015C4C  6A30               	clrf	(btemp+11)^0,c
 19242                           
 19243                           ;stkvar	_atoi$5519 @ sp[(-9)+0]
 19244  015C4E  0EF7               	movlw	-9
 19245  015C50  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 19246  015C56  0EF8               	movlw	-8
 19247  015C58  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 19248                           
 19249                           ;stkvar	_atoi$5519 @ sp[(-9)+0]
 19250  015C5E  0EF7               	movlw	-9
 19251  015C60  006F FF8C  F025    	movff	plusw1,btemp
 19252  015C66  0EF8               	movlw	-8
 19253  015C68  50E3               	movf	plusw1,w,c
 19254  015C6A  1025               	iorwf	btemp^0,w,c
 19255  015C6C  A4D8               	btfss	status,2,c
 19256  015C6E  D795               	goto	l7679
 19257                           
 19258                           ;stkvar	_neg @ sp[(-9)+7]
 19259  015C70  0EFE               	movlw	-2
 19260  015C72  006F FF8C  F025    	movff	plusw1,btemp
 19261  015C78  0EFF               	movlw	-1
 19262  015C7A  50E3               	movf	plusw1,w,c
 19263  015C7C  1025               	iorwf	btemp^0,w,c
 19264  015C7E  A4D8               	btfss	status,2,c
 19265  015C80  D00E               	goto	l7693
 19266                           
 19267                           ;stkvar	_n @ sp[(-9)+5]
 19268  015C82  0EFC               	movlw	-4
 19269  015C84  006F FF8C  F025    	movff	plusw1,btemp
 19270  015C8A  1E25               	comf	btemp^0,f,c
 19271  015C8C  0EFD               	movlw	-3
 19272  015C8E  006F FF8C  F026    	movff	plusw1,btemp+1
 19273  015C94  1E26               	comf	(btemp+1)^0,f,c
 19274  015C96  2A25               	incf	btemp^0,f,c
 19275  015C98  B4D8               	btfsc	status,2,c
 19276  015C9A  2A26               	incf	(btemp+1)^0,f,c
 19277  015C9C  D008               	goto	l2942
 19278  015C9E                     l7693:
 19279                           
 19280                           ;stkvar	_n @ sp[(-9)+5]
 19281  015C9E  0EFC               	movlw	-4
 19282  015CA0  006F FF8C  F025    	movff	plusw1,btemp
 19283  015CA6  0EFD               	movlw	-3
 19284  015CA8  006F FF8C  F026    	movff	plusw1,btemp+1
 19285  015CAE                     l2942:
 19286                           
 19287                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 19288  015CAE  0EF5               	movlw	245
 19289  015CB0  26E1               	addwf	fsr1l,f,c
 19290  015CB2  0EFF               	movlw	255
 19291  015CB4  22E2               	addwfc	fsr1h,f,c
 19292  015CB6  0012               	return		;funcret
 19293  015CB8                     __end_of_atoi:
 19294                           	opt callstack 0
 19295                           
 19296 ;; *************** function _isspace *****************
 19297 ;; Defined at:
 19298 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 19299 ;; Parameters:    Size  Location     Type
 19300 ;;  c               2  [STACK] int 
 19301 ;; Auto vars:     Size  Location     Type
 19302 ;;		None
 19303 ;; Return value:  Size  Location     Type
 19304 ;;                  2  [STACK] int 
 19305 ;; Registers used:
 19306 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19307 ;; Tracked objects:
 19308 ;;		On entry : 0/0
 19309 ;;		On exit  : 0/0
 19310 ;;		Unchanged: 0/0
 19311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19316 ;;Total ram usage:        0 bytes
 19317 ;; Hardware stack levels used:    1
 19318 ;; Hardware stack levels required when called:    7
 19319 ;; This function calls:
 19320 ;;		Nothing
 19321 ;; This function is called by:
 19322 ;;		_atoi
 19323 ;; This function uses a reentrant model
 19324 ;;
 19325                           
 19326                           	psect	text73
 19327  018770                     __ptext73:
 19328                           	opt callstack 0
 19329  018770                     _isspace:
 19330                           	opt callstack 0
 19331                           
 19332                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19333  018770  52E6               	movf	postinc1,f,c
 19334                           
 19335                           ;stkvar	_isspace$5557 @ sp[(-1)+0]
 19336                           
 19337                           ;incstack = 0
 19338  018772  0EFF               	movlw	-1
 19339  018774  6AE3               	clrf	plusw1,c
 19340  018776  2AE3               	incf	plusw1,f,c
 19341                           
 19342                           ;stkvar	_c @ sp[(-1)+-2]
 19343  018778  0EFD               	movlw	-3
 19344  01877A  006F FF8C  F025    	movff	plusw1,btemp
 19345  018780  0E20               	movlw	32
 19346  018782  1825               	xorwf	btemp^0,w,c
 19347  018784  E104               	bnz	u5820
 19348  018786  0EFE               	movlw	-2
 19349  018788  50E3               	movf	plusw1,w,c
 19350  01878A  B4D8               	btfsc	status,2,c
 19351  01878C  D012               	goto	l7143
 19352  01878E                     u5820:
 19353                           
 19354                           ;stkvar	_c @ sp[(-1)+-2]
 19355  01878E  0EFD               	movlw	-3
 19356  018790  50E3               	movf	plusw1,w,c
 19357  018792  0FF7               	addlw	247
 19358  018794  6E2F               	movwf	(btemp+10)^0,c
 19359  018796  0EFE               	movlw	-2
 19360  018798  006F FF8C  F030    	movff	plusw1,btemp+11
 19361  01879E  0EFF               	movlw	255
 19362  0187A0  2230               	addwfc	(btemp+11)^0,f,c
 19363  0187A2  5030               	movf	(btemp+11)^0,w,c
 19364  0187A4  E104               	bnz	u5830
 19365  0187A6  0E05               	movlw	5
 19366  0187A8  5C2F               	subwf	(btemp+10)^0,w,c
 19367  0187AA  A0D8               	btfss	status,0,c
 19368  0187AC  D002               	goto	l7143
 19369  0187AE                     u5830:
 19370                           
 19371                           ;stkvar	_isspace$5557 @ sp[(-1)+0]
 19372  0187AE  0EFF               	movlw	-1
 19373  0187B0  6AE3               	clrf	plusw1,c
 19374  0187B2                     l7143:
 19375                           
 19376                           ;stkvar	_isspace$5557 @ sp[(-1)+0]
 19377  0187B2  0EFF               	movlw	-1
 19378  0187B4  50E3               	movf	plusw1,w,c
 19379  0187B6  6E25               	movwf	btemp^0,c
 19380  0187B8  6A26               	clrf	(btemp+1)^0,c
 19381                           
 19382                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19383  0187BA  52E5               	movf	postdec1,f,c
 19384  0187BC  52E5               	movf	postdec1,f,c
 19385  0187BE  52E5               	movf	postdec1,f,c
 19386  0187C0  0012               	return		;funcret
 19387  0187C2                     __end_of_isspace:
 19388                           	opt callstack 0
 19389                           
 19390 ;; *************** function _isdigit *****************
 19391 ;; Defined at:
 19392 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 19393 ;; Parameters:    Size  Location     Type
 19394 ;;  c               2  [STACK] int 
 19395 ;; Auto vars:     Size  Location     Type
 19396 ;;		None
 19397 ;; Return value:  Size  Location     Type
 19398 ;;                  2  [STACK] int 
 19399 ;; Registers used:
 19400 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19401 ;; Tracked objects:
 19402 ;;		On entry : 0/0
 19403 ;;		On exit  : 0/0
 19404 ;;		Unchanged: 0/0
 19405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19410 ;;Total ram usage:        0 bytes
 19411 ;; Hardware stack levels used:    1
 19412 ;; Hardware stack levels required when called:    7
 19413 ;; This function calls:
 19414 ;;		Nothing
 19415 ;; This function is called by:
 19416 ;;		_vfpfcnvrt
 19417 ;;		_atoi
 19418 ;; This function uses a reentrant model
 19419 ;;
 19420                           
 19421                           	psect	text74
 19422  018D54                     __ptext74:
 19423                           	opt callstack 0
 19424  018D54                     _isdigit:
 19425                           	opt callstack 17
 19426                           
 19427                           ;stkvar	_c @ sp[(0)+-2]
 19428                           
 19429                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19430                           ;incstack = 0
 19431  018D54  0EFE               	movlw	-2
 19432  018D56  50E3               	movf	plusw1,w,c
 19433  018D58  0FD0               	addlw	208
 19434  018D5A  6E2F               	movwf	(btemp+10)^0,c
 19435  018D5C  0EFF               	movlw	-1
 19436  018D5E  006F FF8C  F030    	movff	plusw1,btemp+11
 19437  018D64  0EFF               	movlw	255
 19438  018D66  2230               	addwfc	(btemp+11)^0,f,c
 19439  018D68  5030               	movf	(btemp+11)^0,w,c
 19440  018D6A  E106               	bnz	u5070
 19441  018D6C  0E0A               	movlw	10
 19442  018D6E  5C2F               	subwf	(btemp+10)^0,w,c
 19443  018D70  B0D8               	btfsc	status,0,c
 19444  018D72  D002               	goto	u5070
 19445  018D74  0E01               	movlw	1
 19446  018D76  D001               	goto	u5080
 19447  018D78                     u5070:
 19448  018D78  0E00               	movlw	0
 19449  018D7A                     u5080:
 19450  018D7A  6E25               	movwf	btemp^0,c
 19451  018D7C  6A26               	clrf	(btemp+1)^0,c
 19452                           
 19453                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19454  018D7E  52E5               	movf	postdec1,f,c
 19455  018D80  52E5               	movf	postdec1,f,c
 19456  018D82  0012               	return		;funcret
 19457  018D84                     __end_of_isdigit:
 19458                           	opt callstack 0
 19459                           
 19460 ;; *************** function _set_vterm *****************
 19461 ;; Defined at:
 19462 ;;		line 107 in file "mconfig.c"
 19463 ;; Parameters:    Size  Location     Type
 19464 ;;  vterm           1  [STACK] const unsigned char 
 19465 ;; Auto vars:     Size  Location     Type
 19466 ;;		None
 19467 ;; Return value:  Size  Location     Type
 19468 ;;                  1  [STACK] unsigned char 
 19469 ;; Registers used:
 19470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 19471 ;; Tracked objects:
 19472 ;;		On entry : 0/1
 19473 ;;		On exit  : 0/0
 19474 ;;		Unchanged: 0/0
 19475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19480 ;;Total ram usage:        0 bytes
 19481 ;; Hardware stack levels used:    1
 19482 ;; Hardware stack levels required when called:    7
 19483 ;; This function calls:
 19484 ;;		Nothing
 19485 ;; This function is called by:
 19486 ;;		_main
 19487 ;;		_check_help
 19488 ;; This function uses a reentrant model
 19489 ;;
 19490                           
 19491                           	psect	text75
 19492  0192FC                     __ptext75:
 19493                           	opt callstack 0
 19494  0192FC                     _set_vterm:
 19495                           	opt callstack 23
 19496                           
 19497                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 19498                           ;stkvar	_vterm @ sp[(0)+-1]
 19499                           
 19500                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19501                           ;incstack = 0
 19502  0192FC  0EFF               	movlw	-1
 19503  0192FE  006F FF8C  F030    	movff	plusw1,btemp+11
 19504  019304  0E03               	movlw	3
 19505  019306  1630               	andwf	(btemp+11)^0,f,c
 19506  019308  EE22  F01F         	lfsr	2,_D+288
 19507  01930C  50DF               	movf	223,w,c
 19508  01930E  1830               	xorwf	(btemp+11)^0,w,c
 19509  019310  0BFE               	andlw	-2
 19510  019312  1830               	xorwf	(btemp+11)^0,w,c
 19511  019314  6EDF               	movwf	223,c
 19512                           
 19513                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19514  019316  52E5               	movf	postdec1,f,c
 19515  019318  0012               	return		;funcret
 19516  01931A                     __end_of_set_vterm:
 19517                           	opt callstack 0
 19518                           
 19519 ;; *************** function _set_temp_display_help *****************
 19520 ;; Defined at:
 19521 ;;		line 211 in file "mconfig.c"
 19522 ;; Parameters:    Size  Location     Type
 19523 ;;  new_response    1  [STACK] const enum E16518
 19524 ;; Auto vars:     Size  Location     Type
 19525 ;;		None
 19526 ;; Return value:  Size  Location     Type
 19527 ;;                  1  [STACK] enum E16518
 19528 ;; Registers used:
 19529 ;;		wreg, fsr1l, fsr1h
 19530 ;; Tracked objects:
 19531 ;;		On entry : 0/2
 19532 ;;		On exit  : 3F/2
 19533 ;;		Unchanged: 0/0
 19534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19539 ;;Total ram usage:        0 bytes
 19540 ;; Hardware stack levels used:    1
 19541 ;; Hardware stack levels required when called:    7
 19542 ;; This function calls:
 19543 ;;		Nothing
 19544 ;; This function is called by:
 19545 ;;		_check_help
 19546 ;; This function uses a reentrant model
 19547 ;;
 19548                           
 19549                           	psect	text76
 19550  019470                     __ptext76:
 19551                           	opt callstack 0
 19552  019470                     _set_temp_display_help:
 19553                           	opt callstack 22
 19554                           
 19555                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 19556                           
 19557                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19558                           ;incstack = 0
 19559  019470  0102               	movlb	2	; () banked
 19560  019472  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 19561                           
 19562                           ; BSR set to: 2
 19563                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 19564                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19565  019474  0EFF               	movlw	-1
 19566  019476  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 19567                           
 19568                           ; BSR set to: 2
 19569                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 19570  01947C  52E5               	movf	postdec1,f,c
 19571  01947E  0012               	return		;funcret
 19572  019480                     __end_of_set_temp_display_help:
 19573                           	opt callstack 0
 19574                           
 19575 ;; *************** function _set_display_info *****************
 19576 ;; Defined at:
 19577 ;;		line 200 in file "mconfig.c"
 19578 ;; Parameters:    Size  Location     Type
 19579 ;;  new_response    1  [STACK] const enum E16518
 19580 ;; Auto vars:     Size  Location     Type
 19581 ;;		None
 19582 ;; Return value:  Size  Location     Type
 19583 ;;                  1  [STACK] enum E17003
 19584 ;; Registers used:
 19585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19586 ;; Tracked objects:
 19587 ;;		On entry : 0/1
 19588 ;;		On exit  : 0/0
 19589 ;;		Unchanged: 0/0
 19590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19595 ;;Total ram usage:        0 bytes
 19596 ;; Hardware stack levels used:    1
 19597 ;; Hardware stack levels required when called:    8
 19598 ;; This function calls:
 19599 ;;		_TimerDone
 19600 ;; This function is called by:
 19601 ;;		_main
 19602 ;;		_check_help
 19603 ;; This function uses a reentrant model
 19604 ;;
 19605                           
 19606                           	psect	text77
 19607  01931A                     __ptext77:
 19608                           	opt callstack 0
 19609  01931A                     _set_display_info:
 19610                           	opt callstack 22
 19611                           
 19612                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 19613                           
 19614                           ; BSR set to: 2
 19615                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19616                           ;incstack = 0
 19617  01931A  0E07               	movlw	7
 19618  01931C  6EE6               	movwf	postinc1,c
 19619  01931E  EC81  F0C7         	call	_TimerDone	;wreg free
 19620  019322  5025               	movf	btemp^0,w,c
 19621  019324  B4D8               	btfsc	status,2,c
 19622  019326  D006               	goto	l1717
 19623                           
 19624                           ;mconfig.c: 205:   old_info = V.response.info;
 19625  019328  0102               	movlb	2	; () banked
 19626  01932A  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 19627                           
 19628                           ; BSR set to: 2
 19629                           ;mconfig.c: 206:   V.response.info = new_response_info;
 19630                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19631  01932C  0EFF               	movlw	-1
 19632  01932E  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 19633  019334                     l1717:
 19634                           
 19635                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 19636  019334  52E5               	movf	postdec1,f,c
 19637  019336  0012               	return		;funcret
 19638  019338                     __end_of_set_display_info:
 19639                           	opt callstack 0
 19640                           
 19641 ;; *************** function _mode_lamp_dim *****************
 19642 ;; Defined at:
 19643 ;;		line 13 in file "mconfig.c"
 19644 ;; Parameters:    Size  Location     Type
 19645 ;;  level           2  [STACK] const unsigned short 
 19646 ;; Auto vars:     Size  Location     Type
 19647 ;;		None
 19648 ;; Return value:  Size  Location     Type
 19649 ;;                  1  [STACK] void 
 19650 ;; Registers used:
 19651 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19652 ;; Tracked objects:
 19653 ;;		On entry : 0/2
 19654 ;;		On exit  : 0/0
 19655 ;;		Unchanged: 0/0
 19656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19661 ;;Total ram usage:        0 bytes
 19662 ;; Hardware stack levels used:    1
 19663 ;; Hardware stack levels required when called:    8
 19664 ;; This function calls:
 19665 ;;		_PWM8_LoadDutyValue
 19666 ;; This function is called by:
 19667 ;;		_main
 19668 ;;		_check_help
 19669 ;; This function uses a reentrant model
 19670 ;;
 19671                           
 19672                           	psect	text78
 19673  0193C6                     __ptext78:
 19674                           	opt callstack 0
 19675  0193C6                     _mode_lamp_dim:
 19676                           	opt callstack 22
 19677                           
 19678                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 19679                           ;stkvar	_level @ sp[(0)+-2]
 19680                           
 19681                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19682                           ;incstack = 0
 19683  0193C6  0EFE               	movlw	-2
 19684  0193C8  006F FF8F FFE6     	movff	plusw1,postinc1
 19685  0193CE  006F FF8F FFE6     	movff	plusw1,postinc1
 19686  0193D4  ECFF  F0C4         	call	_PWM8_LoadDutyValue	;wreg free
 19687                           
 19688                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 19689  0193D8  52E5               	movf	postdec1,f,c
 19690  0193DA  52E5               	movf	postdec1,f,c
 19691  0193DC  0012               	return		;funcret
 19692  0193DE                     __end_of_mode_lamp_dim:
 19693                           	opt callstack 0
 19694                           
 19695 ;; *************** function _mode_lamp_bright *****************
 19696 ;; Defined at:
 19697 ;;		line 18 in file "mconfig.c"
 19698 ;; Parameters:    Size  Location     Type
 19699 ;;		None
 19700 ;; Auto vars:     Size  Location     Type
 19701 ;;		None
 19702 ;; Return value:  Size  Location     Type
 19703 ;;                  1  [STACK] void 
 19704 ;; Registers used:
 19705 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19706 ;; Tracked objects:
 19707 ;;		On entry : 0/0
 19708 ;;		On exit  : 0/0
 19709 ;;		Unchanged: 0/0
 19710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19715 ;;Total ram usage:        0 bytes
 19716 ;; Hardware stack levels used:    1
 19717 ;; Hardware stack levels required when called:    8
 19718 ;; This function calls:
 19719 ;;		_PWM8_LoadDutyValue
 19720 ;; This function is called by:
 19721 ;;		_check_help
 19722 ;; This function uses a reentrant model
 19723 ;;
 19724                           
 19725                           	psect	text79
 19726  01948E                     __ptext79:
 19727                           	opt callstack 0
 19728  01948E                     _mode_lamp_bright:
 19729                           	opt callstack 21
 19730                           
 19731                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 19732                           
 19733                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19734                           ;incstack = 0
 19735  01948E  0E2C               	movlw	44
 19736  019490  6EE6               	movwf	postinc1,c
 19737  019492  0E01               	movlw	1
 19738  019494  6EE6               	movwf	postinc1,c
 19739  019496  ECFF  F0C4         	call	_PWM8_LoadDutyValue	;wreg free
 19740                           
 19741                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 19742  01949A  0012               	return		;funcret
 19743  01949C                     __end_of_mode_lamp_bright:
 19744                           	opt callstack 0
 19745                           
 19746 ;; *************** function _PWM8_LoadDutyValue *****************
 19747 ;; Defined at:
 19748 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 19749 ;; Parameters:    Size  Location     Type
 19750 ;;  dutyValue       2  [STACK] unsigned short 
 19751 ;; Auto vars:     Size  Location     Type
 19752 ;;		None
 19753 ;; Return value:  Size  Location     Type
 19754 ;;                  1  [STACK] void 
 19755 ;; Registers used:
 19756 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19757 ;; Tracked objects:
 19758 ;;		On entry : 0/2
 19759 ;;		On exit  : 0/0
 19760 ;;		Unchanged: 0/0
 19761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19766 ;;Total ram usage:        0 bytes
 19767 ;; Hardware stack levels used:    1
 19768 ;; Hardware stack levels required when called:    7
 19769 ;; This function calls:
 19770 ;;		Nothing
 19771 ;; This function is called by:
 19772 ;;		_mode_lamp_dim
 19773 ;;		_mode_lamp_bright
 19774 ;; This function uses a reentrant model
 19775 ;;
 19776                           
 19777                           	psect	text80
 19778  0189FE                     __ptext80:
 19779                           	opt callstack 0
 19780  0189FE                     _PWM8_LoadDutyValue:
 19781                           	opt callstack 22
 19782                           
 19783                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 19784                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19785                           
 19786                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19787                           ;incstack = 0
 19788  0189FE  0EFE               	movlw	-2
 19789  018A00  006F FF8C  F02F    	movff	plusw1,btemp+10
 19790  018A06  0EFF               	movlw	-1
 19791  018A08  006F FF8C  F030    	movff	plusw1,btemp+11
 19792  018A0E  90D8               	bcf	status,0,c
 19793  018A10  3230               	rrcf	(btemp+11)^0,f,c
 19794  018A12  322F               	rrcf	(btemp+10)^0,f,c
 19795  018A14  90D8               	bcf	status,0,c
 19796  018A16  3230               	rrcf	(btemp+11)^0,f,c
 19797  018A18  322F               	rrcf	(btemp+10)^0,f,c
 19798  018A1A  502F               	movf	(btemp+10)^0,w,c
 19799  018A1C  6E61               	movwf	97,c	;volatile
 19800                           
 19801                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 19802                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19803  018A1E  0EFE               	movlw	-2
 19804  018A20  006F FF8C  F030    	movff	plusw1,btemp+11
 19805  018A26  0E03               	movlw	3
 19806  018A28  1630               	andwf	(btemp+11)^0,f,c
 19807  018A2A  0E06               	movlw	6
 19808  018A2C  6E25               	movwf	btemp^0,c
 19809  018A2E                     u7315:
 19810  018A2E  90D8               	bcf	status,0,c
 19811  018A30  3630               	rlcf	(btemp+11)^0,f,c
 19812  018A32  2E25               	decfsz	btemp^0,f,c
 19813  018A34  D7FC               	goto	u7315
 19814  018A36  5030               	movf	(btemp+11)^0,w,c
 19815  018A38  6E60               	movwf	96,c	;volatile
 19816                           
 19817                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 19818  018A3A  52E5               	movf	postdec1,f,c
 19819  018A3C  52E5               	movf	postdec1,f,c
 19820  018A3E  0012               	return		;funcret
 19821  018A40                     __end_of_PWM8_LoadDutyValue:
 19822                           	opt callstack 0
 19823                           
 19824 ;; *************** function _help_button *****************
 19825 ;; Defined at:
 19826 ;;		line 26 in file "mconfig.c"
 19827 ;; Parameters:    Size  Location     Type
 19828 ;;		None
 19829 ;; Auto vars:     Size  Location     Type
 19830 ;;		None
 19831 ;; Return value:  Size  Location     Type
 19832 ;;                  1  [STACK] _Bool 
 19833 ;; Registers used:
 19834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19835 ;; Tracked objects:
 19836 ;;		On entry : 0/2
 19837 ;;		On exit  : 0/0
 19838 ;;		Unchanged: 0/0
 19839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19844 ;;Total ram usage:        0 bytes
 19845 ;; Hardware stack levels used:    1
 19846 ;; Hardware stack levels required when called:    8
 19847 ;; This function calls:
 19848 ;;		_StartTimer
 19849 ;;		_TimerDone
 19850 ;; This function is called by:
 19851 ;;		_check_help
 19852 ;; This function uses a reentrant model
 19853 ;;
 19854                           
 19855                           	psect	text81
 19856  018B7E                     __ptext81:
 19857                           	opt callstack 0
 19858  018B7E                     _help_button:
 19859                           	opt callstack 21
 19860                           
 19861                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 19862                           
 19863                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19864                           ;incstack = 0
 19865  018B7E  B0CB               	btfsc	203,0,c	;volatile
 19866  018B80  D00C               	goto	l1660
 19867                           
 19868                           ;mconfig.c: 29:   V.help = 1;
 19869  018B82  0102               	movlb	2	; () banked
 19870  018B84  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 19871                           
 19872                           ; BSR set to: 2
 19873                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 19874  018B86  0E08               	movlw	8
 19875  018B88  6EE6               	movwf	postinc1,c
 19876  018B8A  EC81  F0C7         	call	_TimerDone	;wreg free
 19877  018B8E  5025               	movf	btemp^0,w,c
 19878  018B90  B4D8               	btfsc	status,2,c
 19879  018B92  D003               	goto	l1660
 19880                           
 19881                           ;mconfig.c: 31:    return 1;
 19882  018B94  0E01               	movlw	1
 19883  018B96  6E25               	movwf	btemp^0,c
 19884  018B98  0012               	return	
 19885  018B9A                     l1660:
 19886                           
 19887                           ;mconfig.c: 34:  if (!V.help)
 19888  018B9A  0102               	movlb	2	; () banked
 19889  018B9C  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 19890  018B9E  D008               	goto	l9037
 19891                           
 19892                           ; BSR set to: 2
 19893                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 19894  018BA0  0E2C               	movlw	44
 19895  018BA2  6EE6               	movwf	postinc1,c
 19896  018BA4  0E01               	movlw	1
 19897  018BA6  6EE6               	movwf	postinc1,c
 19898  018BA8  0E08               	movlw	8
 19899  018BAA  6EE6               	movwf	postinc1,c
 19900  018BAC  EC20  F0C5         	call	_StartTimer	;wreg free
 19901  018BB0                     l9037:
 19902                           
 19903                           ;mconfig.c: 37:  return 0;
 19904  018BB0  0E00               	movlw	0
 19905  018BB2  6E25               	movwf	btemp^0,c
 19906                           
 19907                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 19908  018BB4  0012               	return		;funcret
 19909  018BB6                     __end_of_help_button:
 19910                           	opt callstack 0
 19911                           
 19912 ;; *************** function _TimerDone *****************
 19913 ;; Defined at:
 19914 ;;		line 20 in file "timers.c"
 19915 ;; Parameters:    Size  Location     Type
 19916 ;;  timer           1  [STACK] const unsigned char 
 19917 ;; Auto vars:     Size  Location     Type
 19918 ;;		None
 19919 ;; Return value:  Size  Location     Type
 19920 ;;                  1  [STACK] _Bool 
 19921 ;; Registers used:
 19922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19923 ;; Tracked objects:
 19924 ;;		On entry : 0/1
 19925 ;;		On exit  : 0/0
 19926 ;;		Unchanged: 0/0
 19927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19932 ;;Total ram usage:        0 bytes
 19933 ;; Hardware stack levels used:    1
 19934 ;; Hardware stack levels required when called:    7
 19935 ;; This function calls:
 19936 ;;		Nothing
 19937 ;; This function is called by:
 19938 ;;		_main
 19939 ;;		_WaitMs
 19940 ;;		_help_button
 19941 ;;		_check_help
 19942 ;;		_set_display_info
 19943 ;; This function uses a reentrant model
 19944 ;;
 19945                           
 19946                           	psect	text82
 19947  018F02                     __ptext82:
 19948                           	opt callstack 0
 19949  018F02                     _TimerDone:
 19950                           	opt callstack 22
 19951                           
 19952                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19953                           ;incstack = 0
 19954  018F02  0004               	clrwdt		;# 
 19955                           
 19956                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 19957                           ;stkvar	_timer @ sp[(0)+-1]
 19958  018F04  0EFF               	movlw	-1
 19959  018F06  50E3               	movf	plusw1,w,c
 19960  018F08  0D02               	mullw	2
 19961  018F0A  0EB5               	movlw	low _tickCount
 19962  018F0C  24F3               	addwf	243,w,c
 19963  018F0E  6ED9               	movwf	fsr2l,c
 19964  018F10  0E01               	movlw	high _tickCount
 19965  018F12  20F4               	addwfc	prodh,w,c
 19966  018F14  6EDA               	movwf	fsr2h,c
 19967  018F16  50DE               	movf	postinc2,w,c
 19968  018F18  10DE               	iorwf	postinc2,w,c
 19969  018F1A  A4D8               	btfss	status,2,c
 19970  018F1C  D002               	goto	l7979
 19971                           
 19972                           ;timers.c: 24:   return 1;
 19973  018F1E  0E01               	movlw	1
 19974  018F20  D001               	goto	L20
 19975  018F22                     l7979:
 19976                           
 19977                           ;timers.c: 26:  return 0;
 19978  018F22  0E00               	movlw	0
 19979  018F24                     L20:
 19980  018F24  6E25               	movwf	btemp^0,c
 19981                           
 19982                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19983  018F26  52E5               	movf	postdec1,f,c
 19984  018F28  0012               	return		;funcret
 19985  018F2A                     __end_of_TimerDone:
 19986                           	opt callstack 0
 19987                           
 19988 ;; *************** function _StartTimer *****************
 19989 ;; Defined at:
 19990 ;;		line 12 in file "timers.c"
 19991 ;; Parameters:    Size  Location     Type
 19992 ;;  timer           1  [STACK] const unsigned char 
 19993 ;;  count           2  [STACK] const unsigned short 
 19994 ;; Auto vars:     Size  Location     Type
 19995 ;;		None
 19996 ;; Return value:  Size  Location     Type
 19997 ;;                  1  [STACK] void 
 19998 ;; Registers used:
 19999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20000 ;; Tracked objects:
 20001 ;;		On entry : 0/0
 20002 ;;		On exit  : 0/0
 20003 ;;		Unchanged: 0/0
 20004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20009 ;;Total ram usage:        0 bytes
 20010 ;; Hardware stack levels used:    1
 20011 ;; Hardware stack levels required when called:    7
 20012 ;; This function calls:
 20013 ;;		Nothing
 20014 ;; This function is called by:
 20015 ;;		_main
 20016 ;;		_WaitMs
 20017 ;;		_help_button
 20018 ;;		_check_help
 20019 ;; This function uses a reentrant model
 20020 ;;
 20021                           
 20022                           	psect	text83
 20023  018A40                     __ptext83:
 20024                           	opt callstack 0
 20025  018A40                     _StartTimer:
 20026                           	opt callstack 20
 20027                           
 20028                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 20029                           ;stkvar	_count @ sp[(0)+-3]
 20030                           
 20031                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20032                           ;incstack = 0
 20033  018A40  0EFD               	movlw	-3
 20034  018A42  006F FF8C  F02F    	movff	plusw1,btemp+10
 20035  018A48  0EFE               	movlw	-2
 20036  018A4A  006F FF8C  F030    	movff	plusw1,btemp+11
 20037  018A50  90D8               	bcf	status,0,c
 20038  018A52  342F               	rlcf	(btemp+10)^0,w,c
 20039  018A54  6E2D               	movwf	(btemp+8)^0,c
 20040  018A56  3430               	rlcf	(btemp+11)^0,w,c
 20041  018A58  6E2E               	movwf	(btemp+9)^0,c
 20042                           
 20043                           ;stkvar	_timer @ sp[(0)+-1]
 20044  018A5A  0EFF               	movlw	-1
 20045  018A5C  50E3               	movf	plusw1,w,c
 20046  018A5E  0D02               	mullw	2
 20047  018A60  0EB5               	movlw	low _tickCount
 20048  018A62  24F3               	addwf	243,w,c
 20049  018A64  6ED9               	movwf	fsr2l,c
 20050  018A66  0E01               	movlw	high _tickCount
 20051  018A68  20F4               	addwfc	prodh,w,c
 20052  018A6A  6EDA               	movwf	fsr2h,c
 20053  018A6C  0060  F0B7  FFDE   	movff	btemp+8,postinc2
 20054  018A72  0060  F0BB  FFDD   	movff	btemp+9,postdec2
 20055                           
 20056                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 20057  018A78  52E5               	movf	postdec1,f,c
 20058  018A7A  52E5               	movf	postdec1,f,c
 20059  018A7C  52E5               	movf	postdec1,f,c
 20060  018A7E  0012               	return		;funcret
 20061  018A80                     __end_of_StartTimer:
 20062                           	opt callstack 0
 20063                           
 20064 ;; *************** function _display_info *****************
 20065 ;; Defined at:
 20066 ;;		line 190 in file "mconfig.c"
 20067 ;; Parameters:    Size  Location     Type
 20068 ;;		None
 20069 ;; Auto vars:     Size  Location     Type
 20070 ;;		None
 20071 ;; Return value:  Size  Location     Type
 20072 ;;                  1  [STACK] enum E16518
 20073 ;; Registers used:
 20074 ;;		btemp
 20075 ;; Tracked objects:
 20076 ;;		On entry : 0/2
 20077 ;;		On exit  : 0/0
 20078 ;;		Unchanged: 0/0
 20079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20084 ;;Total ram usage:        0 bytes
 20085 ;; Hardware stack levels used:    1
 20086 ;; Hardware stack levels required when called:    7
 20087 ;; This function calls:
 20088 ;;		Nothing
 20089 ;; This function is called by:
 20090 ;;		_check_help
 20091 ;; This function uses a reentrant model
 20092 ;;
 20093                           
 20094                           	psect	text84
 20095  0194EE                     __ptext84:
 20096                           	opt callstack 0
 20097  0194EE                     _display_info:
 20098                           	opt callstack 22
 20099                           
 20100                           ;mconfig.c: 192:  return V.response.info;
 20101                           
 20102                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20103                           ;incstack = 0
 20104  0194EE  0060  FA8C  F025   	movff	_V+163,btemp	;volatile
 20105                           
 20106                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20107  0194F4  0012               	return		;funcret
 20108  0194F6                     __end_of_display_info:
 20109                           	opt callstack 0
 20110                           
 20111 ;; *************** function _display_help *****************
 20112 ;; Defined at:
 20113 ;;		line 195 in file "mconfig.c"
 20114 ;; Parameters:    Size  Location     Type
 20115 ;;		None
 20116 ;; Auto vars:     Size  Location     Type
 20117 ;;		None
 20118 ;; Return value:  Size  Location     Type
 20119 ;;                  1  [STACK] enum E16518
 20120 ;; Registers used:
 20121 ;;		btemp
 20122 ;; Tracked objects:
 20123 ;;		On entry : 3F/2
 20124 ;;		On exit  : 0/0
 20125 ;;		Unchanged: 0/0
 20126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20131 ;;Total ram usage:        0 bytes
 20132 ;; Hardware stack levels used:    1
 20133 ;; Hardware stack levels required when called:    7
 20134 ;; This function calls:
 20135 ;;		Nothing
 20136 ;; This function is called by:
 20137 ;;		_check_help
 20138 ;; This function uses a reentrant model
 20139 ;;
 20140                           
 20141                           	psect	text85
 20142  0194F6                     __ptext85:
 20143                           	opt callstack 0
 20144  0194F6                     _display_help:
 20145                           	opt callstack 22
 20146                           
 20147                           ;mconfig.c: 197:  return V.response.help_temp;
 20148                           
 20149                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20150                           ;incstack = 0
 20151  0194F6  0060  FA90  F025   	movff	_V+164,btemp	;volatile
 20152                           
 20153                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20154  0194FC  0012               	return		;funcret
 20155  0194FE                     __end_of_display_help:
 20156                           	opt callstack 0
 20157                           
 20158 ;; *************** function _check_enter_button *****************
 20159 ;; Defined at:
 20160 ;;		line 42 in file "hid.c"
 20161 ;; Parameters:    Size  Location     Type
 20162 ;;  h               1  [STACK] PTR struct H_data
 20163 ;;		 -> H(7), 
 20164 ;; Auto vars:     Size  Location     Type
 20165 ;;		None
 20166 ;; Return value:  Size  Location     Type
 20167 ;;                  1  [STACK] _Bool 
 20168 ;; Registers used:
 20169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20170 ;; Tracked objects:
 20171 ;;		On entry : 0/1
 20172 ;;		On exit  : 0/0
 20173 ;;		Unchanged: 0/0
 20174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20179 ;;Total ram usage:        0 bytes
 20180 ;; Hardware stack levels used:    1
 20181 ;; Hardware stack levels required when called:    7
 20182 ;; This function calls:
 20183 ;;		Nothing
 20184 ;; This function is called by:
 20185 ;;		_main
 20186 ;; This function uses a reentrant model
 20187 ;;
 20188                           
 20189                           	psect	text86
 20190  018A80                     __ptext86:
 20191                           	opt callstack 0
 20192  018A80                     _check_enter_button:
 20193                           	opt callstack 23
 20194                           
 20195                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 20196                           ;stkvar	_h @ sp[(0)+-1]
 20197                           
 20198                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20199                           ;incstack = 0
 20200  018A80  0EFF               	movlw	-1
 20201  018A82  50E3               	movf	plusw1,w,c
 20202  018A84  6ED9               	movwf	fsr2l,c
 20203  018A86  6ADA               	clrf	fsr2h,c
 20204  018A88  0E04               	movlw	4
 20205  018A8A  26D9               	addwf	fsr2l,f,c
 20206  018A8C  50DF               	movf	indf2,w,c
 20207  018A8E  A4D8               	btfss	status,2,c
 20208  018A90  D013               	goto	l9555
 20209                           
 20210                           ;stkvar	_h @ sp[(0)+-1]
 20211  018A92  0EFF               	movlw	-1
 20212  018A94  50E3               	movf	plusw1,w,c
 20213  018A96  6ED9               	movwf	fsr2l,c
 20214  018A98  6ADA               	clrf	fsr2h,c
 20215  018A9A  0E05               	movlw	5
 20216  018A9C  26D9               	addwf	fsr2l,f,c
 20217  018A9E  50DF               	movf	indf2,w,c
 20218  018AA0  A4D8               	btfss	status,2,c
 20219  018AA2  D00A               	goto	l9555
 20220                           
 20221                           ;hid.c: 45:   h->wait_enter = 1;
 20222                           ;stkvar	_h @ sp[(0)+-1]
 20223  018AA4  0EFF               	movlw	-1
 20224  018AA6  50E3               	movf	plusw1,w,c
 20225  018AA8  6ED9               	movwf	fsr2l,c
 20226  018AAA  6ADA               	clrf	fsr2h,c
 20227  018AAC  0E04               	movlw	4
 20228  018AAE  26D9               	addwf	fsr2l,f,c
 20229  018AB0  0E01               	movlw	1
 20230  018AB2  6EDF               	movwf	indf2,c
 20231                           
 20232                           ;hid.c: 46:   return 1;
 20233  018AB4  0E01               	movlw	1
 20234  018AB6  D001               	goto	L21
 20235  018AB8                     l9555:
 20236                           
 20237                           ;hid.c: 48:  return 0;
 20238  018AB8  0E00               	movlw	0
 20239  018ABA                     L21:
 20240  018ABA  6E25               	movwf	btemp^0,c
 20241                           
 20242                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 20243  018ABC  52E5               	movf	postdec1,f,c
 20244  018ABE  0012               	return		;funcret
 20245  018AC0                     __end_of_check_enter_button:
 20246                           	opt callstack 0
 20247                           
 20248 ;; *************** function _check_adc_scan *****************
 20249 ;; Defined at:
 20250 ;;		line 56 in file "daq.c"
 20251 ;; Parameters:    Size  Location     Type
 20252 ;;		None
 20253 ;; Auto vars:     Size  Location     Type
 20254 ;;		None
 20255 ;; Return value:  Size  Location     Type
 20256 ;;                  1  [STACK] _Bool 
 20257 ;; Registers used:
 20258 ;;		btemp
 20259 ;; Tracked objects:
 20260 ;;		On entry : 0/1
 20261 ;;		On exit  : 0/0
 20262 ;;		Unchanged: 0/0
 20263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20268 ;;Total ram usage:        0 bytes
 20269 ;; Hardware stack levels used:    1
 20270 ;; Hardware stack levels required when called:    7
 20271 ;; This function calls:
 20272 ;;		Nothing
 20273 ;; This function is called by:
 20274 ;;		_main
 20275 ;; This function uses a reentrant model
 20276 ;;
 20277                           
 20278                           	psect	text87
 20279  0194FE                     __ptext87:
 20280                           	opt callstack 0
 20281  0194FE                     _check_adc_scan:
 20282                           	opt callstack 23
 20283                           
 20284                           ;daq.c: 58:  return R.done;
 20285                           
 20286                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20287                           ;incstack = 0
 20288  0194FE  0060  F3A8  F025   	movff	_R+39,btemp	;volatile
 20289                           
 20290                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 20291  019504  0012               	return		;funcret
 20292  019506                     __end_of_check_adc_scan:
 20293                           	opt callstack 0
 20294                           
 20295 ;; *************** function _calc_model_data *****************
 20296 ;; Defined at:
 20297 ;;		line 56 in file "mbmc.c"
 20298 ;; Parameters:    Size  Location     Type
 20299 ;;		None
 20300 ;; Auto vars:     Size  Location     Type
 20301 ;;		None
 20302 ;; Return value:  Size  Location     Type
 20303 ;;                  1  [STACK] void 
 20304 ;; Registers used:
 20305 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20306 ;; Tracked objects:
 20307 ;;		On entry : 0/1
 20308 ;;		On exit  : 3F/1
 20309 ;;		Unchanged: 0/0
 20310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20315 ;;Total ram usage:        0 bytes
 20316 ;; Hardware stack levels used:    1
 20317 ;; Hardware stack levels required when called:   10
 20318 ;; This function calls:
 20319 ;;		___fladd
 20320 ;;		___flmul
 20321 ;;		___flsub
 20322 ;;		_lp_filter
 20323 ;;		_start_bsoc
 20324 ;;		_stop_bsoc
 20325 ;; This function is called by:
 20326 ;;		_main
 20327 ;; This function uses a reentrant model
 20328 ;;
 20329                           
 20330                           	psect	text88
 20331  01522C                     __ptext88:
 20332                           	opt callstack 0
 20333  01522C                     _calc_model_data:
 20334                           	opt callstack 20
 20335                           
 20336                           ;mbmc.c: 58:  stop_bsoc();
 20337                           
 20338                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20339                           ;incstack = 0
 20340  01522C  EC90  F0CA         	call	_stop_bsoc	;wreg free
 20341                           
 20342                           ; BSR set to: 57
 20343                           ;mbmc.c: 60:  if (!V.calib) {
 20344  015230  0102               	movlb	2	; () banked
 20345  015232  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 20346  015234  A4D8               	btfss	status,2,c
 20347  015236  D161               	goto	l9455
 20348                           
 20349                           ; BSR set to: 2
 20350                           ;mbmc.c: 61:   C.c_bat = C.calc[C_BATT];
 20351  015238  C100  F144         	movff	_C,_C+68	;volatile
 20352  01523C  C101  F145         	movff	_C+1,_C+69	;volatile
 20353  015240  C102  F146         	movff	_C+2,_C+70	;volatile
 20354  015244  C103  F147         	movff	_C+3,_C+71	;volatile
 20355                           
 20356                           ;mbmc.c: 62:   C.c_pv = C.calc[C_PV];
 20357  015248  C104  F148         	movff	_C+4,_C+72	;volatile
 20358  01524C  C105  F149         	movff	_C+5,_C+73	;volatile
 20359  015250  C106  F14A         	movff	_C+6,_C+74	;volatile
 20360  015254  C107  F14B         	movff	_C+7,_C+75	;volatile
 20361                           
 20362                           ;mbmc.c: 63:   C.v_bat = C.calc[V_BAT];
 20363  015258  C110  F154         	movff	_C+16,_C+84	;volatile
 20364  01525C  C111  F155         	movff	_C+17,_C+85	;volatile
 20365  015260  C112  F156         	movff	_C+18,_C+86	;volatile
 20366  015264  C113  F157         	movff	_C+19,_C+87	;volatile
 20367                           
 20368                           ;mbmc.c: 64:   C.v_pv = C.calc[V_PV];
 20369  015268  C114  F150         	movff	_C+20,_C+80	;volatile
 20370  01526C  C115  F151         	movff	_C+21,_C+81	;volatile
 20371  015270  C116  F152         	movff	_C+22,_C+82	;volatile
 20372  015274  C117  F153         	movff	_C+23,_C+83	;volatile
 20373                           
 20374                           ;mbmc.c: 65:   C.v_inverter = C.calc[V_INVERTER];
 20375  015278  C130  F164         	movff	_C+48,_C+100	;volatile
 20376  01527C  C131  F165         	movff	_C+49,_C+101	;volatile
 20377  015280  C132  F166         	movff	_C+50,_C+102	;volatile
 20378  015284  C133  F167         	movff	_C+51,_C+103	;volatile
 20379                           
 20380                           ; BSR set to: 2
 20381                           ;mbmc.c: 66:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 20382  015288  0E01               	movlw	1
 20383  01528A  6EE6               	movwf	postinc1,c
 20384  01528C  0E10               	movlw	16
 20385  01528E  6EE6               	movwf	postinc1,c
 20386  015290  0060  F403  FFE6   	movff	_C,postinc1
 20387  015296  0060  F407  FFE6   	movff	_C+1,postinc1
 20388  01529C  0060  F40B  FFE6   	movff	_C+2,postinc1
 20389  0152A2  0060  F40F  FFE6   	movff	_C+3,postinc1
 20390  0152A8  0060  F413  FFE6   	movff	_C+4,postinc1
 20391  0152AE  0060  F417  FFE6   	movff	_C+5,postinc1
 20392  0152B4  0060  F41B  FFE6   	movff	_C+6,postinc1
 20393  0152BA  0060  F41F  FFE6   	movff	_C+7,postinc1
 20394  0152C0  EC74  F0C4         	call	___flsub	;wreg free
 20395  0152C4  0060  F097  FFE6   	movff	btemp,postinc1
 20396  0152CA  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20397  0152D0  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20398  0152D6  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20399  0152DC  EC6B  F0B2         	call	_lp_filter	;wreg free
 20400  0152E0  0060  F094  F140   	movff	btemp,_C+64	;volatile
 20401  0152E6  0060  F098  F141   	movff	btemp+1,_C+65	;volatile
 20402  0152EC  0060  F09C  F142   	movff	btemp+2,_C+66	;volatile
 20403  0152F2  0060  F0A0  F143   	movff	btemp+3,_C+67	;volatile
 20404                           
 20405                           ;mbmc.c: 67:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 20406  0152F8  0E01               	movlw	1
 20407  0152FA  6EE6               	movwf	postinc1,c
 20408  0152FC  0E11               	movlw	17
 20409  0152FE  6EE6               	movwf	postinc1,c
 20410  015300  0060  F553  FFE6   	movff	_C+84,postinc1
 20411  015306  0060  F557  FFE6   	movff	_C+85,postinc1
 20412  01530C  0060  F55B  FFE6   	movff	_C+86,postinc1
 20413  015312  0060  F55F  FFE6   	movff	_C+87,postinc1
 20414  015318  0060  F503  FFE6   	movff	_C+64,postinc1
 20415  01531E  0060  F507  FFE6   	movff	_C+65,postinc1
 20416  015324  0060  F50B  FFE6   	movff	_C+66,postinc1
 20417  01532A  0060  F50F  FFE6   	movff	_C+67,postinc1
 20418  015330  EC14  F093         	call	___flmul	;wreg free
 20419  015334  0060  F097  FFE6   	movff	btemp,postinc1
 20420  01533A  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20421  015340  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20422  015346  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20423  01534C  EC6B  F0B2         	call	_lp_filter	;wreg free
 20424  015350  0060  F094  F168   	movff	btemp,_C+104	;volatile
 20425  015356  0060  F098  F169   	movff	btemp+1,_C+105	;volatile
 20426  01535C  0060  F09C  F16A   	movff	btemp+2,_C+106	;volatile
 20427  015362  0060  F0A0  F16B   	movff	btemp+3,_C+107	;volatile
 20428                           
 20429                           ;mbmc.c: 68:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 20430  015368  0E01               	movlw	1
 20431  01536A  6EE6               	movwf	postinc1,c
 20432  01536C  0E12               	movlw	18
 20433  01536E  6EE6               	movwf	postinc1,c
 20434  015370  0060  F543  FFE6   	movff	_C+80,postinc1
 20435  015376  0060  F547  FFE6   	movff	_C+81,postinc1
 20436  01537C  0060  F54B  FFE6   	movff	_C+82,postinc1
 20437  015382  0060  F54F  FFE6   	movff	_C+83,postinc1
 20438  015388  0060  F523  FFE6   	movff	_C+72,postinc1
 20439  01538E  0060  F527  FFE6   	movff	_C+73,postinc1
 20440  015394  0060  F52B  FFE6   	movff	_C+74,postinc1
 20441  01539A  0060  F52F  FFE6   	movff	_C+75,postinc1
 20442  0153A0  EC14  F093         	call	___flmul	;wreg free
 20443  0153A4  0060  F097  FFE6   	movff	btemp,postinc1
 20444  0153AA  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20445  0153B0  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20446  0153B6  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20447  0153BC  EC6B  F0B2         	call	_lp_filter	;wreg free
 20448  0153C0  0060  F094  F170   	movff	btemp,_C+112	;volatile
 20449  0153C6  0060  F098  F171   	movff	btemp+1,_C+113	;volatile
 20450  0153CC  0060  F09C  F172   	movff	btemp+2,_C+114	;volatile
 20451  0153D2  0060  F0A0  F173   	movff	btemp+3,_C+115	;volatile
 20452                           
 20453                           ;mbmc.c: 69:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 20454  0153D8  0E01               	movlw	1
 20455  0153DA  6EE6               	movwf	postinc1,c
 20456  0153DC  0E13               	movlw	19
 20457  0153DE  6EE6               	movwf	postinc1,c
 20458  0153E0  0E00               	movlw	0
 20459  0153E2  6EE6               	movwf	postinc1,c
 20460  0153E4  0E00               	movlw	0
 20461  0153E6  6EE6               	movwf	postinc1,c
 20462  0153E8  0E60               	movlw	96
 20463  0153EA  6EE6               	movwf	postinc1,c
 20464  0153EC  0EC1               	movlw	193
 20465  0153EE  6EE6               	movwf	postinc1,c
 20466  0153F0  0060  F593  FFE6   	movff	_C+100,postinc1
 20467  0153F6  0060  F597  FFE6   	movff	_C+101,postinc1
 20468  0153FC  0060  F59B  FFE6   	movff	_C+102,postinc1
 20469  015402  0060  F59F  FFE6   	movff	_C+103,postinc1
 20470  015408  0060  F503  FFE6   	movff	_C+64,postinc1
 20471  01540E  0060  F507  FFE6   	movff	_C+65,postinc1
 20472  015414  0060  F50B  FFE6   	movff	_C+66,postinc1
 20473  01541A  0060  F50F  FFE6   	movff	_C+67,postinc1
 20474  015420  EC14  F093         	call	___flmul	;wreg free
 20475  015424  0060  F097  FFE6   	movff	btemp,postinc1
 20476  01542A  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20477  015430  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20478  015436  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20479  01543C  EC29  F097         	call	___fladd	;wreg free
 20480  015440  0060  F097  FFE6   	movff	btemp,postinc1
 20481  015446  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20482  01544C  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20483  015452  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20484  015458  EC6B  F0B2         	call	_lp_filter	;wreg free
 20485  01545C  0060  F094  F16C   	movff	btemp,_C+108	;volatile
 20486  015462  0060  F098  F16D   	movff	btemp+1,_C+109	;volatile
 20487  015468  0060  F09C  F16E   	movff	btemp+2,_C+110	;volatile
 20488  01546E  0060  F0A0  F16F   	movff	btemp+3,_C+111	;volatile
 20489                           
 20490                           ;mbmc.c: 70:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 20491  015474  0E01               	movlw	1
 20492  015476  6EE6               	movwf	postinc1,c
 20493  015478  0E14               	movlw	20
 20494  01547A  6EE6               	movwf	postinc1,c
 20495  01547C  0060  F553  FFE6   	movff	_C+84,postinc1
 20496  015482  0060  F557  FFE6   	movff	_C+85,postinc1
 20497  015488  0060  F55B  FFE6   	movff	_C+86,postinc1
 20498  01548E  0060  F55F  FFE6   	movff	_C+87,postinc1
 20499  015494  0060  F513  FFE6   	movff	_C+68,postinc1
 20500  01549A  0060  F517  FFE6   	movff	_C+69,postinc1
 20501  0154A0  0060  F51B  FFE6   	movff	_C+70,postinc1
 20502  0154A6  0060  F51F  FFE6   	movff	_C+71,postinc1
 20503  0154AC  EC14  F093         	call	___flmul	;wreg free
 20504  0154B0  0060  F097  FFE6   	movff	btemp,postinc1
 20505  0154B6  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20506  0154BC  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20507  0154C2  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20508  0154C8  EC6B  F0B2         	call	_lp_filter	;wreg free
 20509  0154CC  0060  F094  F174   	movff	btemp,_C+116	;volatile
 20510  0154D2  0060  F098  F175   	movff	btemp+1,_C+117	;volatile
 20511  0154D8  0060  F09C  F176   	movff	btemp+2,_C+118	;volatile
 20512  0154DE  0060  F0A0  F177   	movff	btemp+3,_C+119	;volatile
 20513                           
 20514                           ;mbmc.c: 74:   if (C.p_inverter < 0.0)
 20515  0154E4  0101               	movlb	1	; () banked
 20516  0154E6  AF6F               	btfss	(_C+111)& (0+255),7,b	;volatile
 20517  0154E8  D008               	goto	l9455
 20518                           
 20519                           ; BSR set to: 1
 20520                           ;mbmc.c: 75:    C.p_inverter = 0.0001;
 20521  0154EA  0E17               	movlw	23
 20522  0154EC  6F6C               	movwf	(_C+108)& (0+255),b	;volatile
 20523  0154EE  0EB7               	movlw	183
 20524  0154F0  6F6D               	movwf	(_C+109)& (0+255),b	;volatile
 20525  0154F2  0ED1               	movlw	209
 20526  0154F4  6F6E               	movwf	(_C+110)& (0+255),b	;volatile
 20527  0154F6  0E38               	movlw	56
 20528  0154F8  6F6F               	movwf	(_C+111)& (0+255),b	;volatile
 20529  0154FA                     l9455:
 20530                           
 20531                           ;mbmc.c: 77:  start_bsoc();
 20532  0154FA  EC1D  F0C9         	call	_start_bsoc	;wreg free
 20533                           
 20534                           ; BSR set to: 57
 20535                           ;mbmc.c: 78:  C.update = 1;
 20536  0154FE  0E01               	movlw	1
 20537  015500  0101               	movlb	1	; () banked
 20538  015502  6FA4               	movwf	(_C+164)& (0+255),b	;volatile
 20539                           
 20540                           ; BSR set to: 1
 20541                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 20542  015504  0012               	return		;funcret
 20543  015506                     __end_of_calc_model_data:
 20544                           	opt callstack 0
 20545                           
 20546 ;; *************** function _stop_bsoc *****************
 20547 ;; Defined at:
 20548 ;;		line 45 in file "bsoc.c"
 20549 ;; Parameters:    Size  Location     Type
 20550 ;;		None
 20551 ;; Auto vars:     Size  Location     Type
 20552 ;;		None
 20553 ;; Return value:  Size  Location     Type
 20554 ;;                  1  [STACK] void 
 20555 ;; Registers used:
 20556 ;;		None
 20557 ;; Tracked objects:
 20558 ;;		On entry : 0/1
 20559 ;;		On exit  : 3F/39
 20560 ;;		Unchanged: 0/0
 20561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20566 ;;Total ram usage:        0 bytes
 20567 ;; Hardware stack levels used:    1
 20568 ;; Hardware stack levels required when called:    7
 20569 ;; This function calls:
 20570 ;;		Nothing
 20571 ;; This function is called by:
 20572 ;;		_calc_model_data
 20573 ;; This function uses a reentrant model
 20574 ;;
 20575                           
 20576                           	psect	text89
 20577  019520                     __ptext89:
 20578                           	opt callstack 0
 20579  019520                     _stop_bsoc:
 20580                           	opt callstack 22
 20581                           
 20582                           ;bsoc.c: 48:  PIE6bits.TMR3IE = 0;
 20583                           
 20584                           ; BSR set to: 1
 20585                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20586                           ;incstack = 0
 20587  019520  0139               	movlb	57	; () banked
 20588  019522  9D96               	bcf	150,6,b	;volatile
 20589                           
 20590                           ; BSR set to: 57
 20591                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 20592  019524  0012               	return		;funcret
 20593  019526                     __end_of_stop_bsoc:
 20594                           	opt callstack 0
 20595                           
 20596 ;; *************** function _start_bsoc *****************
 20597 ;; Defined at:
 20598 ;;		line 36 in file "bsoc.c"
 20599 ;; Parameters:    Size  Location     Type
 20600 ;;		None
 20601 ;; Auto vars:     Size  Location     Type
 20602 ;;		None
 20603 ;; Return value:  Size  Location     Type
 20604 ;;                  1  [STACK] void 
 20605 ;; Registers used:
 20606 ;;		wreg, status,2, status,0, btemp+11
 20607 ;; Tracked objects:
 20608 ;;		On entry : 3C/2
 20609 ;;		On exit  : 3F/39
 20610 ;;		Unchanged: 0/0
 20611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20616 ;;Total ram usage:        0 bytes
 20617 ;; Hardware stack levels used:    1
 20618 ;; Hardware stack levels required when called:    7
 20619 ;; This function calls:
 20620 ;;		Nothing
 20621 ;; This function is called by:
 20622 ;;		_calc_model_data
 20623 ;; This function uses a reentrant model
 20624 ;;
 20625                           
 20626                           	psect	text90
 20627  01923A                     __ptext90:
 20628                           	opt callstack 0
 20629  01923A                     _start_bsoc:
 20630                           	opt callstack 22
 20631                           
 20632                           ;bsoc.c: 39:  PIE6bits.TMR3IE = 1;
 20633                           
 20634                           ; BSR set to: 57
 20635                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20636                           ;incstack = 0
 20637  01923A  0139               	movlb	57	; () banked
 20638  01923C  8D96               	bsf	150,6,b	;volatile
 20639                           
 20640                           ; BSR set to: 57
 20641  01923E  A4BE               	btfss	190,2,c	;volatile
 20642  019240  D002               	goto	u8430
 20643  019242  0E01               	movlw	1
 20644  019244  D001               	goto	u8436
 20645  019246                     u8430:
 20646  019246  0E00               	movlw	0
 20647  019248                     u8436:
 20648  019248  0AFF               	xorlw	255
 20649  01924A  6E30               	movwf	(btemp+11)^0,c
 20650  01924C  4630               	rlncf	(btemp+11)^0,f,c
 20651  01924E  4630               	rlncf	(btemp+11)^0,f,c
 20652  019250  50BE               	movf	190,w,c	;volatile
 20653  019252  1830               	xorwf	(btemp+11)^0,w,c
 20654  019254  0BFB               	andlw	-5
 20655  019256  1830               	xorwf	(btemp+11)^0,w,c
 20656  019258  6EBE               	movwf	190,c	;volatile
 20657                           
 20658                           ; BSR set to: 57
 20659                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 20660  01925A  0012               	return		;funcret
 20661  01925C                     __end_of_start_bsoc:
 20662                           	opt callstack 0
 20663                           
 20664 ;; *************** function _lp_filter *****************
 20665 ;; Defined at:
 20666 ;;		line 18 in file "mbmc.c"
 20667 ;; Parameters:    Size  Location     Type
 20668 ;;  new             4  [STACK] const float 
 20669 ;;  bn              1  [STACK] const unsigned char 
 20670 ;;  slow            1  [STACK] const char 
 20671 ;; Auto vars:     Size  Location     Type
 20672 ;;  lp_speed        4  [STACK] float 
 20673 ;; Return value:  Size  Location     Type
 20674 ;;                  4  [STACK] float 
 20675 ;; Registers used:
 20676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20677 ;; Tracked objects:
 20678 ;;		On entry : 0/2
 20679 ;;		On exit  : 0/0
 20680 ;;		Unchanged: 0/0
 20681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20686 ;;Total ram usage:        0 bytes
 20687 ;; Hardware stack levels used:    1
 20688 ;; Hardware stack levels required when called:    9
 20689 ;; This function calls:
 20690 ;;		___fladd
 20691 ;;		___flmul
 20692 ;;		___flsub
 20693 ;; This function is called by:
 20694 ;;		_main
 20695 ;;		_convert_adc_data
 20696 ;;		_calc_model_data
 20697 ;; This function uses a reentrant model
 20698 ;;
 20699                           
 20700                           	psect	text91
 20701  0164D6                     __ptext91:
 20702                           	opt callstack 0
 20703  0164D6                     _lp_filter:
 20704                           	opt callstack 0
 20705                           
 20706                           ; BSR set to: 57
 20707                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20708  0164D6  52E6               	movf	postinc1,f,c
 20709  0164D8  52E6               	movf	postinc1,f,c
 20710  0164DA  52E6               	movf	postinc1,f,c
 20711  0164DC  52E6               	movf	postinc1,f,c
 20712                           
 20713                           ;mbmc.c: 18: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 19: {;mbmc.c: 20:  static float smooth[16 +5];;mbmc.c: 21:  float lp_speed;;mbmc.c: 2
      +                          3:  if (bn >= 16 +5)
 20714                           ;stkvar	_bn @ sp[(-4)+-5]
 20715                           
 20716                           ;incstack = 0
 20717  0164DE  0EF7               	movlw	-9
 20718  0164E0  006F FF8C  F025    	movff	plusw1,btemp
 20719  0164E6  0E14               	movlw	20
 20720  0164E8  6425               	cpfsgt	btemp^0,c
 20721  0164EA  D011               	goto	l8991
 20722  0164EC                     u8250:
 20723                           
 20724                           ;mbmc.c: 24:   return new;
 20725                           ;stkvar	_new @ sp[(-4)+-4]
 20726  0164EC  0EF8               	movlw	-8
 20727  0164EE  006F FF8C  F025    	movff	plusw1,btemp
 20728  0164F4  0EF9               	movlw	-7
 20729  0164F6  006F FF8C  F026    	movff	plusw1,btemp+1
 20730  0164FC  0EFA               	movlw	-6
 20731  0164FE  006F FF8C  F027    	movff	plusw1,btemp+2
 20732  016504  0EFB               	movlw	-5
 20733  016506  006F FF8C  F028    	movff	plusw1,btemp+3
 20734  01650C  D0BF               	goto	l1808
 20735  01650E                     l8991:
 20736                           
 20737                           ;mbmc.c: 26:  if (slow == (-1)) {
 20738                           ;stkvar	_slow @ sp[(-4)+-6]
 20739  01650E  0EF6               	movlw	-10
 20740  016510  28E3               	incf	plusw1,w,c
 20741  016512  A4D8               	btfss	status,2,c
 20742  016514  D012               	goto	l8999
 20743                           
 20744                           ;mbmc.c: 27:   smooth[bn] = 0.0;
 20745                           ;stkvar	_bn @ sp[(-4)+-5]
 20746  016516  0EF7               	movlw	-9
 20747  016518  50E3               	movf	plusw1,w,c
 20748  01651A  0D04               	mullw	4
 20749  01651C  0E00               	movlw	low lp_filter@smooth
 20750  01651E  24F3               	addwf	243,w,c
 20751  016520  6ED9               	movwf	fsr2l,c
 20752  016522  0E03               	movlw	high lp_filter@smooth
 20753  016524  20F4               	addwfc	prodh,w,c
 20754  016526  6EDA               	movwf	fsr2h,c
 20755  016528  0E00               	movlw	0
 20756  01652A  6EDE               	movwf	postinc2,c
 20757  01652C  0E00               	movlw	0
 20758  01652E  6EDE               	movwf	postinc2,c
 20759  016530  0E00               	movlw	0
 20760  016532  6EDE               	movwf	postinc2,c
 20761  016534  0E00               	movlw	0
 20762  016536  6EDD               	movwf	postdec2,c
 20763  016538  D7D9               	goto	u8250
 20764  01653A                     l8999:
 20765                           
 20766                           ;mbmc.c: 31:  if (slow) {
 20767                           ;stkvar	_slow @ sp[(-4)+-6]
 20768  01653A  0EF6               	movlw	-10
 20769  01653C  50E3               	movf	plusw1,w,c
 20770  01653E  B4D8               	btfsc	status,2,c
 20771  016540  D008               	goto	l9003
 20772                           
 20773                           ;mbmc.c: 32:   lp_speed = 0.033;
 20774  016542  0E02               	movlw	2
 20775  016544  6E2D               	movwf	(btemp+8)^0,c
 20776  016546  0E2B               	movlw	43
 20777  016548  6E2E               	movwf	(btemp+9)^0,c
 20778  01654A  0E07               	movlw	7
 20779  01654C  6E2F               	movwf	(btemp+10)^0,c
 20780  01654E  0E3D               	movlw	61
 20781  016550  D007               	goto	L22
 20782  016552                     l9003:
 20783                           
 20784                           ;mbmc.c: 34:   lp_speed = 0.125;
 20785  016552  0E00               	movlw	0
 20786  016554  6E2D               	movwf	(btemp+8)^0,c
 20787  016556  0E00               	movlw	0
 20788  016558  6E2E               	movwf	(btemp+9)^0,c
 20789  01655A  0E00               	movlw	0
 20790  01655C  6E2F               	movwf	(btemp+10)^0,c
 20791  01655E  0E3E               	movlw	62
 20792  016560                     L22:
 20793  016560  6E30               	movwf	(btemp+11)^0,c
 20794                           
 20795                           ;stkvar	_lp_speed @ sp[(-4)+0]
 20796  016562  0EFC               	movlw	-4
 20797  016564  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 20798  01656A  0EFD               	movlw	-3
 20799  01656C  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 20800  016572  0EFE               	movlw	-2
 20801  016574  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 20802  01657A  0EFF               	movlw	-1
 20803  01657C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 20804                           
 20805                           ;mbmc.c: 37:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 20806                           ;stkvar	_bn @ sp[(-4)+-5]
 20807  016582  0EF7               	movlw	-9
 20808  016584  50E3               	movf	plusw1,w,c
 20809  016586  0D04               	mullw	4
 20810  016588  0E00               	movlw	low lp_filter@smooth
 20811  01658A  24F3               	addwf	243,w,c
 20812  01658C  6ED9               	movwf	fsr2l,c
 20813  01658E  0E03               	movlw	high lp_filter@smooth
 20814  016590  20F4               	addwfc	prodh,w,c
 20815  016592  6EDA               	movwf	fsr2h,c
 20816  016594  006F FF7B FFE6     	movff	postinc2,postinc1
 20817  01659A  006F FF7B FFE6     	movff	postinc2,postinc1
 20818  0165A0  006F FF7B FFE6     	movff	postinc2,postinc1
 20819  0165A6  006F FF7B FFE6     	movff	postinc2,postinc1
 20820                           
 20821                           ;stkvar	_lp_speed @ sp[(-8)+0]
 20822  0165AC  0EF8               	movlw	-8
 20823  0165AE  006F FF8F FFE6     	movff	plusw1,postinc1
 20824  0165B4  006F FF8F FFE6     	movff	plusw1,postinc1
 20825  0165BA  006F FF8F FFE6     	movff	plusw1,postinc1
 20826  0165C0  006F FF8F FFE6     	movff	plusw1,postinc1
 20827                           
 20828                           ;stkvar	_bn @ sp[(-12)+-5]
 20829  0165C6  0EEF               	movlw	-17
 20830  0165C8  50E3               	movf	plusw1,w,c
 20831  0165CA  0D04               	mullw	4
 20832  0165CC  0E00               	movlw	low lp_filter@smooth
 20833  0165CE  24F3               	addwf	243,w,c
 20834  0165D0  6ED9               	movwf	fsr2l,c
 20835  0165D2  0E03               	movlw	high lp_filter@smooth
 20836  0165D4  20F4               	addwfc	prodh,w,c
 20837  0165D6  6EDA               	movwf	fsr2h,c
 20838  0165D8  006F FF7B FFE6     	movff	postinc2,postinc1
 20839  0165DE  006F FF7B FFE6     	movff	postinc2,postinc1
 20840  0165E4  006F FF7B FFE6     	movff	postinc2,postinc1
 20841  0165EA  006F FF7B FFE6     	movff	postinc2,postinc1
 20842                           
 20843                           ;stkvar	_new @ sp[(-16)+-4]
 20844  0165F0  0EEC               	movlw	-20
 20845  0165F2  006F FF8F FFE6     	movff	plusw1,postinc1
 20846  0165F8  006F FF8F FFE6     	movff	plusw1,postinc1
 20847  0165FE  006F FF8F FFE6     	movff	plusw1,postinc1
 20848  016604  006F FF8F FFE6     	movff	plusw1,postinc1
 20849  01660A  EC74  F0C4         	call	___flsub	;wreg free
 20850  01660E  0060  F097  FFE6   	movff	btemp,postinc1
 20851  016614  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20852  01661A  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20853  016620  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20854  016626  EC14  F093         	call	___flmul	;wreg free
 20855  01662A  0060  F097  FFE6   	movff	btemp,postinc1
 20856  016630  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20857  016636  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20858  01663C  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20859  016642  EC29  F097         	call	___fladd	;wreg free
 20860                           
 20861                           ;stkvar	_bn @ sp[(-4)+-5]
 20862  016646  0EF7               	movlw	-9
 20863  016648  50E3               	movf	plusw1,w,c
 20864  01664A  0D04               	mullw	4
 20865  01664C  0E00               	movlw	low lp_filter@smooth
 20866  01664E  24F3               	addwf	243,w,c
 20867  016650  6ED9               	movwf	fsr2l,c
 20868  016652  0E03               	movlw	high lp_filter@smooth
 20869  016654  20F4               	addwfc	prodh,w,c
 20870  016656  6EDA               	movwf	fsr2h,c
 20871  016658  0060  F097  FFDE   	movff	btemp,postinc2
 20872  01665E  0060  F09B  FFDE   	movff	btemp+1,postinc2
 20873  016664  0060  F09F  FFDE   	movff	btemp+2,postinc2
 20874  01666A  0060  F0A3  FFDD   	movff	btemp+3,postdec2
 20875  016670  52DD               	movf	postdec2,f,c
 20876  016672  52DD               	movf	postdec2,f,c
 20877  016674  006F FF78  F025    	movff	postinc2,btemp
 20878  01667A  006F FF78  F026    	movff	postinc2,btemp+1
 20879  016680  006F FF78  F027    	movff	postinc2,btemp+2
 20880  016686  006F FF78  F028    	movff	postinc2,btemp+3
 20881  01668C                     l1808:
 20882                           
 20883                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 20884  01668C  0EF6               	movlw	246
 20885  01668E  26E1               	addwf	fsr1l,f,c
 20886  016690  0EFF               	movlw	255
 20887  016692  22E2               	addwfc	fsr1h,f,c
 20888  016694  0012               	return		;funcret
 20889  016696                     __end_of_lp_filter:
 20890                           	opt callstack 0
 20891                           
 20892 ;; *************** function ___flsub *****************
 20893 ;; Defined at:
 20894 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 20895 ;; Parameters:    Size  Location     Type
 20896 ;;  b               4  [STACK] float 
 20897 ;;  a               4  [STACK] float 
 20898 ;; Auto vars:     Size  Location     Type
 20899 ;;		None
 20900 ;; Return value:  Size  Location     Type
 20901 ;;                  4  [STACK] float 
 20902 ;; Registers used:
 20903 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 20904 ;; Tracked objects:
 20905 ;;		On entry : 0/2
 20906 ;;		On exit  : 0/0
 20907 ;;		Unchanged: 0/0
 20908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20913 ;;Total ram usage:        0 bytes
 20914 ;; Hardware stack levels used:    1
 20915 ;; Hardware stack levels required when called:    8
 20916 ;; This function calls:
 20917 ;;		___fladd
 20918 ;; This function is called by:
 20919 ;;		_conv_raw_result
 20920 ;;		_lp_filter
 20921 ;;		_calc_model_data
 20922 ;;		_efgtoa
 20923 ;; This function uses a reentrant model
 20924 ;;
 20925                           
 20926                           	psect	text92
 20927  0188E8                     __ptext92:
 20928                           	opt callstack 0
 20929  0188E8                     ___flsub:
 20930                           	opt callstack 15
 20931                           
 20932                           ;stkvar	_a @ sp[(0)+-8]
 20933                           
 20934                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20935                           ;incstack = 0
 20936  0188E8  0EFB               	movlw	-5
 20937  0188EA  7EE3               	btg	plusw1,7,c
 20938                           
 20939                           ;stkvar	_a @ sp[(0)+-8]
 20940  0188EC  0EF8               	movlw	-8
 20941  0188EE  006F FF8F FFE6     	movff	plusw1,postinc1
 20942  0188F4  006F FF8F FFE6     	movff	plusw1,postinc1
 20943  0188FA  006F FF8F FFE6     	movff	plusw1,postinc1
 20944  018900  006F FF8F FFE6     	movff	plusw1,postinc1
 20945                           
 20946                           ;stkvar	_b @ sp[(-4)+-4]
 20947  018906  0EF8               	movlw	-8
 20948  018908  006F FF8F FFE6     	movff	plusw1,postinc1
 20949  01890E  006F FF8F FFE6     	movff	plusw1,postinc1
 20950  018914  006F FF8F FFE6     	movff	plusw1,postinc1
 20951  01891A  006F FF8F FFE6     	movff	plusw1,postinc1
 20952  018920  EC29  F097         	call	___fladd	;wreg free
 20953                           
 20954                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 20955  018924  0EF8               	movlw	248
 20956  018926  26E1               	addwf	fsr1l,f,c
 20957  018928  0EFF               	movlw	255
 20958  01892A  22E2               	addwfc	fsr1h,f,c
 20959  01892C  0012               	return		;funcret
 20960  01892E                     __end_of___flsub:
 20961                           	opt callstack 0
 20962                           
 20963 ;; *************** function ___fladd *****************
 20964 ;; Defined at:
 20965 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 20966 ;; Parameters:    Size  Location     Type
 20967 ;;  b               4  [STACK] float 
 20968 ;;  a               4  [STACK] float 
 20969 ;; Auto vars:     Size  Location     Type
 20970 ;;  grs             1  [STACK] unsigned char 
 20971 ;;  bexp            1  [STACK] unsigned char 
 20972 ;;  aexp            1  [STACK] unsigned char 
 20973 ;;  signs           1  [STACK] unsigned char 
 20974 ;; Return value:  Size  Location     Type
 20975 ;;                  4  [STACK] unsigned char 
 20976 ;; Registers used:
 20977 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 20978 ;; Tracked objects:
 20979 ;;		On entry : 0/0
 20980 ;;		On exit  : 0/0
 20981 ;;		Unchanged: 0/0
 20982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20987 ;;Total ram usage:        0 bytes
 20988 ;; Hardware stack levels used:    1
 20989 ;; Hardware stack levels required when called:    7
 20990 ;; This function calls:
 20991 ;;		Nothing
 20992 ;; This function is called by:
 20993 ;;		_lp_filter
 20994 ;;		_calc_model_data
 20995 ;;		_calc_bsoc
 20996 ;;		_efgtoa
 20997 ;;		___flsub
 20998 ;; This function uses a reentrant model
 20999 ;;
 21000                           
 21001                           	psect	text93
 21002  012E52                     __ptext93:
 21003                           	opt callstack 0
 21004  012E52                     ___fladd:
 21005                           	opt callstack 0
 21006                           
 21007                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21008  012E52  52E6               	movf	postinc1,f,c
 21009  012E54  52E6               	movf	postinc1,f,c
 21010  012E56  52E6               	movf	postinc1,f,c
 21011  012E58  52E6               	movf	postinc1,f,c
 21012                           
 21013                           ;stkvar	_b @ sp[(-4)+-4]
 21014                           
 21015                           ;incstack = 0
 21016  012E5A  0EFB               	movlw	251
 21017  012E5C  24E1               	addwf	fsr1l,w,c
 21018  012E5E  6ED9               	movwf	fsr2l,c
 21019  012E60  0EFF               	movlw	255
 21020  012E62  20E2               	addwfc	fsr1h,w,c
 21021  012E64  6EDA               	movwf	fsr2h,c
 21022  012E66  50DF               	movf	indf2,w,c
 21023  012E68  6E30               	movwf	(btemp+11)^0,c
 21024  012E6A  0E80               	movlw	128
 21025  012E6C  1630               	andwf	(btemp+11)^0,f,c
 21026                           
 21027                           ;stkvar	_signs @ sp[(-4)+3]
 21028  012E6E  0EFF               	movlw	-1
 21029  012E70  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21030                           
 21031                           ;stkvar	_b @ sp[(-4)+-4]
 21032  012E76  0EFB               	movlw	251
 21033  012E78  24E1               	addwf	fsr1l,w,c
 21034  012E7A  6ED9               	movwf	fsr2l,c
 21035  012E7C  0EFF               	movlw	255
 21036  012E7E  20E2               	addwfc	fsr1h,w,c
 21037  012E80  6EDA               	movwf	fsr2h,c
 21038  012E82  50DF               	movf	indf2,w,c
 21039  012E84  6E30               	movwf	(btemp+11)^0,c
 21040  012E86  90D8               	bcf	status,0,c
 21041  012E88  3430               	rlcf	(btemp+11)^0,w,c
 21042  012E8A  6E2F               	movwf	(btemp+10)^0,c
 21043                           
 21044                           ;stkvar	_bexp @ sp[(-4)+1]
 21045  012E8C  0EFD               	movlw	-3
 21046  012E8E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21047                           
 21048                           ;stkvar	_b @ sp[(-4)+-4]
 21049  012E94  0EFA               	movlw	250
 21050  012E96  24E1               	addwf	fsr1l,w,c
 21051  012E98  6ED9               	movwf	fsr2l,c
 21052  012E9A  0EFF               	movlw	255
 21053  012E9C  20E2               	addwfc	fsr1h,w,c
 21054  012E9E  6EDA               	movwf	fsr2h,c
 21055  012EA0  AEDF               	btfss	indf2,7,c
 21056  012EA2  D002               	goto	l8111
 21057                           
 21058                           ;stkvar	_bexp @ sp[(-4)+1]
 21059  012EA4  0EFD               	movlw	-3
 21060  012EA6  80E3               	bsf	plusw1,0,c
 21061  012EA8                     l8111:
 21062                           
 21063                           ;stkvar	_bexp @ sp[(-4)+1]
 21064  012EA8  0EFD               	movlw	-3
 21065  012EAA  50E3               	movf	plusw1,w,c
 21066  012EAC  B4D8               	btfsc	status,2,c
 21067  012EAE  D027               	goto	l8121
 21068                           
 21069                           ;stkvar	_bexp @ sp[(-4)+1]
 21070  012EB0  0EFD               	movlw	-3
 21071  012EB2  28E3               	incf	plusw1,w,c
 21072  012EB4  A4D8               	btfss	status,2,c
 21073  012EB6  D018               	goto	l8117
 21074  012EB8  0E00               	movlw	0
 21075  012EBA  6E2D               	movwf	(btemp+8)^0,c
 21076  012EBC  0E00               	movlw	0
 21077  012EBE  6E2E               	movwf	(btemp+9)^0,c
 21078  012EC0  0E00               	movlw	0
 21079  012EC2  6E2F               	movwf	(btemp+10)^0,c
 21080  012EC4  0E00               	movlw	0
 21081  012EC6  6E30               	movwf	(btemp+11)^0,c
 21082                           
 21083                           ;stkvar	_b @ sp[(-4)+-4]
 21084  012EC8  0EF8               	movlw	-8
 21085  012ECA  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 21086  012ED0  0EF9               	movlw	-7
 21087  012ED2  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 21088  012ED8  0EFA               	movlw	-6
 21089  012EDA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21090  012EE0  0EFB               	movlw	-5
 21091  012EE2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21092  012EE8                     l8117:
 21093                           
 21094                           ;stkvar	_b @ sp[(-4)+-4]
 21095  012EE8  0EFA               	movlw	-6
 21096  012EEA  8EE3               	bsf	plusw1,7,c
 21097                           
 21098                           ;stkvar	_b @ sp[(-4)+-4]
 21099  012EEC  0EFB               	movlw	251
 21100  012EEE  24E1               	addwf	fsr1l,w,c
 21101  012EF0  6ED9               	movwf	fsr2l,c
 21102  012EF2  0EFF               	movlw	255
 21103  012EF4  20E2               	addwfc	fsr1h,w,c
 21104  012EF6  6EDA               	movwf	fsr2h,c
 21105  012EF8  0E00               	movlw	0
 21106  012EFA  6EDF               	movwf	indf2,c
 21107  012EFC  D018               	goto	l8123
 21108  012EFE                     l8121:
 21109  012EFE  0E00               	movlw	0
 21110  012F00  6E2D               	movwf	(btemp+8)^0,c
 21111  012F02  0E00               	movlw	0
 21112  012F04  6E2E               	movwf	(btemp+9)^0,c
 21113  012F06  0E00               	movlw	0
 21114  012F08  6E2F               	movwf	(btemp+10)^0,c
 21115  012F0A  0E00               	movlw	0
 21116  012F0C  6E30               	movwf	(btemp+11)^0,c
 21117                           
 21118                           ;stkvar	_b @ sp[(-4)+-4]
 21119  012F0E  0EF8               	movlw	-8
 21120  012F10  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 21121  012F16  0EF9               	movlw	-7
 21122  012F18  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 21123  012F1E  0EFA               	movlw	-6
 21124  012F20  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21125  012F26  0EFB               	movlw	-5
 21126  012F28  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21127  012F2E                     l8123:
 21128                           
 21129                           ;stkvar	_a @ sp[(-4)+-8]
 21130  012F2E  0EF7               	movlw	247
 21131  012F30  24E1               	addwf	fsr1l,w,c
 21132  012F32  6ED9               	movwf	fsr2l,c
 21133  012F34  0EFF               	movlw	255
 21134  012F36  20E2               	addwfc	fsr1h,w,c
 21135  012F38  6EDA               	movwf	fsr2h,c
 21136  012F3A  50DF               	movf	indf2,w,c
 21137  012F3C  6E30               	movwf	(btemp+11)^0,c
 21138  012F3E  0E80               	movlw	128
 21139  012F40  1630               	andwf	(btemp+11)^0,f,c
 21140                           
 21141                           ;stkvar	_aexp @ sp[(-4)+2]
 21142  012F42  0EFE               	movlw	-2
 21143  012F44  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21144                           
 21145                           ;stkvar	_signs @ sp[(-4)+3]
 21146                           ;stkvar	_aexp @ sp[(-4)+2]
 21147  012F4A  50E1               	movf	fsr1l,w,c
 21148  012F4C  0FFE               	addlw	-2
 21149  012F4E  6ED9               	movwf	fsr2l,c
 21150  012F50  50E2               	movf	fsr1h,w,c
 21151  012F52  6EDA               	movwf	fsr2h,c
 21152  012F54  0EFF               	movlw	255
 21153  012F56  22DA               	addwfc	fsr2h,f,c
 21154  012F58  0EFF               	movlw	-1
 21155  012F5A  50E3               	movf	plusw1,w,c
 21156  012F5C  18DE               	xorwf	postinc2,w,c
 21157  012F5E  B4D8               	btfsc	status,2,c
 21158  012F60  D002               	goto	l8129
 21159                           
 21160                           ;stkvar	_signs @ sp[(-4)+3]
 21161  012F62  0EFF               	movlw	-1
 21162  012F64  8CE3               	bsf	plusw1,6,c
 21163  012F66                     l8129:
 21164                           
 21165                           ;stkvar	_a @ sp[(-4)+-8]
 21166  012F66  0EF7               	movlw	247
 21167  012F68  24E1               	addwf	fsr1l,w,c
 21168  012F6A  6ED9               	movwf	fsr2l,c
 21169  012F6C  0EFF               	movlw	255
 21170  012F6E  20E2               	addwfc	fsr1h,w,c
 21171  012F70  6EDA               	movwf	fsr2h,c
 21172  012F72  50DF               	movf	indf2,w,c
 21173  012F74  6E30               	movwf	(btemp+11)^0,c
 21174  012F76  90D8               	bcf	status,0,c
 21175  012F78  3430               	rlcf	(btemp+11)^0,w,c
 21176  012F7A  6E2F               	movwf	(btemp+10)^0,c
 21177                           
 21178                           ;stkvar	_aexp @ sp[(-4)+2]
 21179  012F7C  0EFE               	movlw	-2
 21180  012F7E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21181                           
 21182                           ;stkvar	_a @ sp[(-4)+-8]
 21183  012F84  0EF6               	movlw	246
 21184  012F86  24E1               	addwf	fsr1l,w,c
 21185  012F88  6ED9               	movwf	fsr2l,c
 21186  012F8A  0EFF               	movlw	255
 21187  012F8C  20E2               	addwfc	fsr1h,w,c
 21188  012F8E  6EDA               	movwf	fsr2h,c
 21189  012F90  AEDF               	btfss	indf2,7,c
 21190  012F92  D002               	goto	l8135
 21191                           
 21192                           ;stkvar	_aexp @ sp[(-4)+2]
 21193  012F94  0EFE               	movlw	-2
 21194  012F96  80E3               	bsf	plusw1,0,c
 21195  012F98                     l8135:
 21196                           
 21197                           ;stkvar	_aexp @ sp[(-4)+2]
 21198  012F98  0EFE               	movlw	-2
 21199  012F9A  50E3               	movf	plusw1,w,c
 21200  012F9C  B4D8               	btfsc	status,2,c
 21201  012F9E  D027               	goto	l8145
 21202                           
 21203                           ;stkvar	_aexp @ sp[(-4)+2]
 21204  012FA0  0EFE               	movlw	-2
 21205  012FA2  28E3               	incf	plusw1,w,c
 21206  012FA4  A4D8               	btfss	status,2,c
 21207  012FA6  D018               	goto	l8141
 21208  012FA8  0E00               	movlw	0
 21209  012FAA  6E2D               	movwf	(btemp+8)^0,c
 21210  012FAC  0E00               	movlw	0
 21211  012FAE  6E2E               	movwf	(btemp+9)^0,c
 21212  012FB0  0E00               	movlw	0
 21213  012FB2  6E2F               	movwf	(btemp+10)^0,c
 21214  012FB4  0E00               	movlw	0
 21215  012FB6  6E30               	movwf	(btemp+11)^0,c
 21216                           
 21217                           ;stkvar	_a @ sp[(-4)+-8]
 21218  012FB8  0EF4               	movlw	-12
 21219  012FBA  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 21220  012FC0  0EF5               	movlw	-11
 21221  012FC2  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 21222  012FC8  0EF6               	movlw	-10
 21223  012FCA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21224  012FD0  0EF7               	movlw	-9
 21225  012FD2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21226  012FD8                     l8141:
 21227                           
 21228                           ;stkvar	_a @ sp[(-4)+-8]
 21229  012FD8  0EF6               	movlw	-10
 21230  012FDA  8EE3               	bsf	plusw1,7,c
 21231                           
 21232                           ;stkvar	_a @ sp[(-4)+-8]
 21233  012FDC  0EF7               	movlw	247
 21234  012FDE  24E1               	addwf	fsr1l,w,c
 21235  012FE0  6ED9               	movwf	fsr2l,c
 21236  012FE2  0EFF               	movlw	255
 21237  012FE4  20E2               	addwfc	fsr1h,w,c
 21238  012FE6  6EDA               	movwf	fsr2h,c
 21239  012FE8  0E00               	movlw	0
 21240  012FEA  6EDF               	movwf	indf2,c
 21241  012FEC  D018               	goto	l8147
 21242  012FEE                     l8145:
 21243  012FEE  0E00               	movlw	0
 21244  012FF0  6E2D               	movwf	(btemp+8)^0,c
 21245  012FF2  0E00               	movlw	0
 21246  012FF4  6E2E               	movwf	(btemp+9)^0,c
 21247  012FF6  0E00               	movlw	0
 21248  012FF8  6E2F               	movwf	(btemp+10)^0,c
 21249  012FFA  0E00               	movlw	0
 21250  012FFC  6E30               	movwf	(btemp+11)^0,c
 21251                           
 21252                           ;stkvar	_a @ sp[(-4)+-8]
 21253  012FFE  0EF4               	movlw	-12
 21254  013000  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 21255  013006  0EF5               	movlw	-11
 21256  013008  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 21257  01300E  0EF6               	movlw	-10
 21258  013010  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21259  013016  0EF7               	movlw	-9
 21260  013018  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21261  01301E                     l8147:
 21262                           
 21263                           ;stkvar	_bexp @ sp[(-4)+1]
 21264                           ;stkvar	_aexp @ sp[(-4)+2]
 21265  01301E  50E1               	movf	fsr1l,w,c
 21266  013020  0FFE               	addlw	-2
 21267  013022  6ED9               	movwf	fsr2l,c
 21268  013024  50E2               	movf	fsr1h,w,c
 21269  013026  6EDA               	movwf	fsr2h,c
 21270  013028  0EFF               	movlw	255
 21271  01302A  22DA               	addwfc	fsr2h,f,c
 21272  01302C  0EFD               	movlw	-3
 21273  01302E  50E3               	movf	plusw1,w,c
 21274  013030  5CDE               	subwf	postinc2,w,c
 21275  013032  B0D8               	btfsc	status,0,c
 21276  013034  D0A4               	goto	l8183
 21277                           
 21278                           ;stkvar	_signs @ sp[(-4)+3]
 21279  013036  0EFF               	movlw	-1
 21280  013038  ACE3               	btfss	plusw1,6,c
 21281  01303A  D002               	goto	l8153
 21282                           
 21283                           ;stkvar	_signs @ sp[(-4)+3]
 21284  01303C  0EFF               	movlw	-1
 21285  01303E  7EE3               	btg	plusw1,7,c
 21286  013040                     l8153:
 21287                           
 21288                           ;stkvar	_bexp @ sp[(-4)+1]
 21289                           ;stkvar	_grs @ sp[(-4)+0]
 21290  013040  0EFD               	movlw	-3
 21291  013042  006F FF8C  F025    	movff	plusw1,btemp
 21292  013048  0EFC               	movlw	-4
 21293  01304A  0060  F097  FFE3   	movff	btemp,plusw1
 21294                           
 21295                           ;stkvar	_aexp @ sp[(-4)+2]
 21296                           ;stkvar	_bexp @ sp[(-4)+1]
 21297  013050  0EFE               	movlw	-2
 21298  013052  006F FF8C  F025    	movff	plusw1,btemp
 21299  013058  0EFD               	movlw	-3
 21300  01305A  0060  F097  FFE3   	movff	btemp,plusw1
 21301                           
 21302                           ;stkvar	_grs @ sp[(-4)+0]
 21303                           ;stkvar	_aexp @ sp[(-4)+2]
 21304  013060  0EFC               	movlw	-4
 21305  013062  006F FF8C  F025    	movff	plusw1,btemp
 21306  013068  0EFE               	movlw	-2
 21307  01306A  0060  F097  FFE3   	movff	btemp,plusw1
 21308                           
 21309                           ;stkvar	_b @ sp[(-4)+-4]
 21310                           ;stkvar	_grs @ sp[(-4)+0]
 21311  013070  0EF8               	movlw	-8
 21312  013072  006F FF8C  F025    	movff	plusw1,btemp
 21313  013078  0EFC               	movlw	-4
 21314  01307A  0060  F097  FFE3   	movff	btemp,plusw1
 21315                           
 21316                           ;stkvar	_a @ sp[(-4)+-8]
 21317                           ;stkvar	_b @ sp[(-4)+-4]
 21318  013080  0EF4               	movlw	-12
 21319  013082  006F FF8C  F025    	movff	plusw1,btemp
 21320  013088  0EF8               	movlw	-8
 21321  01308A  0060  F097  FFE3   	movff	btemp,plusw1
 21322                           
 21323                           ;stkvar	_grs @ sp[(-4)+0]
 21324                           ;stkvar	_a @ sp[(-4)+-8]
 21325  013090  0EFC               	movlw	-4
 21326  013092  006F FF8C  F025    	movff	plusw1,btemp
 21327  013098  0EF4               	movlw	-12
 21328  01309A  0060  F097  FFE3   	movff	btemp,plusw1
 21329                           
 21330                           ;stkvar	_b @ sp[(-4)+-4]
 21331  0130A0  0EF9               	movlw	249
 21332  0130A2  24E1               	addwf	fsr1l,w,c
 21333  0130A4  6ED9               	movwf	fsr2l,c
 21334  0130A6  0EFF               	movlw	255
 21335  0130A8  20E2               	addwfc	fsr1h,w,c
 21336  0130AA  6EDA               	movwf	fsr2h,c
 21337  0130AC  50DF               	movf	indf2,w,c
 21338  0130AE  6E30               	movwf	(btemp+11)^0,c
 21339                           
 21340                           ;stkvar	_grs @ sp[(-4)+0]
 21341  0130B0  0EFC               	movlw	-4
 21342  0130B2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21343                           
 21344                           ;stkvar	_a @ sp[(-4)+-8]
 21345  0130B8  0EF5               	movlw	245
 21346  0130BA  24E1               	addwf	fsr1l,w,c
 21347  0130BC  6ED9               	movwf	fsr2l,c
 21348  0130BE  0EFF               	movlw	255
 21349  0130C0  20E2               	addwfc	fsr1h,w,c
 21350  0130C2  6EDA               	movwf	fsr2h,c
 21351                           
 21352                           ;stkvar	_b @ sp[(-4)+-4]
 21353  0130C4  0EF9               	movlw	249
 21354  0130C6  24E1               	addwf	fsr1l,w,c
 21355  0130C8  6EE9               	movwf	fsr0l,c
 21356  0130CA  0EFF               	movlw	255
 21357  0130CC  20E2               	addwfc	fsr1h,w,c
 21358  0130CE  6EEA               	movwf	fsr0h,c
 21359  0130D0  006F FF7F FFEF     	movff	indf2,indf0
 21360                           
 21361                           ;stkvar	_grs @ sp[(-4)+0]
 21362                           ;stkvar	_a @ sp[(-4)+-8]
 21363  0130D6  0EF5               	movlw	245
 21364  0130D8  24E1               	addwf	fsr1l,w,c
 21365  0130DA  6ED9               	movwf	fsr2l,c
 21366  0130DC  0EFF               	movlw	255
 21367  0130DE  20E2               	addwfc	fsr1h,w,c
 21368  0130E0  6EDA               	movwf	fsr2h,c
 21369  0130E2  0EFC               	movlw	-4
 21370  0130E4  006F FF8F FFDF     	movff	plusw1,indf2
 21371                           
 21372                           ;stkvar	_b @ sp[(-4)+-4]
 21373  0130EA  0EFA               	movlw	250
 21374  0130EC  24E1               	addwf	fsr1l,w,c
 21375  0130EE  6ED9               	movwf	fsr2l,c
 21376  0130F0  0EFF               	movlw	255
 21377  0130F2  20E2               	addwfc	fsr1h,w,c
 21378  0130F4  6EDA               	movwf	fsr2h,c
 21379  0130F6  50DF               	movf	indf2,w,c
 21380  0130F8  6E30               	movwf	(btemp+11)^0,c
 21381                           
 21382                           ;stkvar	_grs @ sp[(-4)+0]
 21383  0130FA  0EFC               	movlw	-4
 21384  0130FC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21385                           
 21386                           ;stkvar	_a @ sp[(-4)+-8]
 21387  013102  0EF6               	movlw	246
 21388  013104  24E1               	addwf	fsr1l,w,c
 21389  013106  6ED9               	movwf	fsr2l,c
 21390  013108  0EFF               	movlw	255
 21391  01310A  20E2               	addwfc	fsr1h,w,c
 21392  01310C  6EDA               	movwf	fsr2h,c
 21393                           
 21394                           ;stkvar	_b @ sp[(-4)+-4]
 21395  01310E  0EFA               	movlw	250
 21396  013110  24E1               	addwf	fsr1l,w,c
 21397  013112  6EE9               	movwf	fsr0l,c
 21398  013114  0EFF               	movlw	255
 21399  013116  20E2               	addwfc	fsr1h,w,c
 21400  013118  6EEA               	movwf	fsr0h,c
 21401  01311A  006F FF7F FFEF     	movff	indf2,indf0
 21402                           
 21403                           ;stkvar	_grs @ sp[(-4)+0]
 21404                           ;stkvar	_a @ sp[(-4)+-8]
 21405  013120  0EF6               	movlw	246
 21406  013122  24E1               	addwf	fsr1l,w,c
 21407  013124  6ED9               	movwf	fsr2l,c
 21408  013126  0EFF               	movlw	255
 21409  013128  20E2               	addwfc	fsr1h,w,c
 21410  01312A  6EDA               	movwf	fsr2h,c
 21411  01312C  0EFC               	movlw	-4
 21412  01312E  006F FF8F FFDF     	movff	plusw1,indf2
 21413                           
 21414                           ;stkvar	_b @ sp[(-4)+-4]
 21415  013134  0EFB               	movlw	251
 21416  013136  24E1               	addwf	fsr1l,w,c
 21417  013138  6ED9               	movwf	fsr2l,c
 21418  01313A  0EFF               	movlw	255
 21419  01313C  20E2               	addwfc	fsr1h,w,c
 21420  01313E  6EDA               	movwf	fsr2h,c
 21421  013140  50DF               	movf	indf2,w,c
 21422  013142  6E30               	movwf	(btemp+11)^0,c
 21423                           
 21424                           ;stkvar	_grs @ sp[(-4)+0]
 21425  013144  0EFC               	movlw	-4
 21426  013146  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21427                           
 21428                           ;stkvar	_a @ sp[(-4)+-8]
 21429  01314C  0EF7               	movlw	247
 21430  01314E  24E1               	addwf	fsr1l,w,c
 21431  013150  6ED9               	movwf	fsr2l,c
 21432  013152  0EFF               	movlw	255
 21433  013154  20E2               	addwfc	fsr1h,w,c
 21434  013156  6EDA               	movwf	fsr2h,c
 21435                           
 21436                           ;stkvar	_b @ sp[(-4)+-4]
 21437  013158  0EFB               	movlw	251
 21438  01315A  24E1               	addwf	fsr1l,w,c
 21439  01315C  6EE9               	movwf	fsr0l,c
 21440  01315E  0EFF               	movlw	255
 21441  013160  20E2               	addwfc	fsr1h,w,c
 21442  013162  6EEA               	movwf	fsr0h,c
 21443  013164  006F FF7F FFEF     	movff	indf2,indf0
 21444                           
 21445                           ;stkvar	_grs @ sp[(-4)+0]
 21446                           ;stkvar	_a @ sp[(-4)+-8]
 21447  01316A  0EF7               	movlw	247
 21448  01316C  24E1               	addwf	fsr1l,w,c
 21449  01316E  6ED9               	movwf	fsr2l,c
 21450  013170  0EFF               	movlw	255
 21451  013172  20E2               	addwfc	fsr1h,w,c
 21452  013174  6EDA               	movwf	fsr2h,c
 21453  013176  0EFC               	movlw	-4
 21454  013178  006F FF8F FFDF     	movff	plusw1,indf2
 21455  01317E                     l8183:
 21456                           
 21457                           ;stkvar	_grs @ sp[(-4)+0]
 21458  01317E  0EFC               	movlw	-4
 21459  013180  6AE3               	clrf	plusw1,c
 21460                           
 21461                           ;stkvar	_aexp @ sp[(-4)+2]
 21462  013182  0EFE               	movlw	-2
 21463  013184  50E3               	movf	plusw1,w,c
 21464  013186  6E2F               	movwf	(btemp+10)^0,c
 21465  013188  6A30               	clrf	(btemp+11)^0,c
 21466                           
 21467                           ;stkvar	_bexp @ sp[(-4)+1]
 21468  01318A  0EFD               	movlw	-3
 21469  01318C  50E3               	movf	plusw1,w,c
 21470  01318E  5E2F               	subwf	(btemp+10)^0,f,c
 21471  013190  0E00               	movlw	0
 21472  013192  5A30               	subwfb	(btemp+11)^0,f,c
 21473  013194  BE30               	btfsc	(btemp+11)^0,7,c
 21474  013196  D062               	goto	l8207
 21475  013198  5030               	movf	(btemp+11)^0,w,c
 21476  01319A  E104               	bnz	u7430
 21477  01319C  0E1A               	movlw	26
 21478  01319E  5C2F               	subwf	(btemp+10)^0,w,c
 21479  0131A0  A0D8               	btfss	status,0,c
 21480  0131A2  D05C               	goto	l8207
 21481  0131A4                     u7430:
 21482                           
 21483                           ;stkvar	_b @ sp[(-4)+-4]
 21484  0131A4  0EF8               	movlw	-8
 21485  0131A6  50E3               	movf	plusw1,w,c
 21486  0131A8  E10A               	bnz	u7441
 21487  0131AA  0EF9               	movlw	-7
 21488  0131AC  50E3               	movf	plusw1,w,c
 21489  0131AE  E107               	bnz	u7441
 21490  0131B0  0EFA               	movlw	-6
 21491  0131B2  50E3               	movf	plusw1,w,c
 21492  0131B4  E104               	bnz	u7441
 21493  0131B6  0EFB               	movlw	-5
 21494  0131B8  50E3               	movf	plusw1,w,c
 21495  0131BA  B4D8               	btfsc	status,2,c
 21496  0131BC  D003               	goto	u7440
 21497  0131BE                     u7441:
 21498  0131BE  6A30               	clrf	(btemp+11)^0,c
 21499  0131C0  2A30               	incf	(btemp+11)^0,f,c
 21500  0131C2  D001               	goto	u7458
 21501  0131C4                     u7440:
 21502  0131C4  6A30               	clrf	(btemp+11)^0,c
 21503  0131C6                     u7458:
 21504                           
 21505                           ;stkvar	_grs @ sp[(-4)+0]
 21506  0131C6  0EFC               	movlw	-4
 21507  0131C8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21508                           
 21509                           ;stkvar	_b @ sp[(-4)+-4]
 21510  0131CE  0EF8               	movlw	-8
 21511  0131D0  6AE3               	clrf	plusw1,c
 21512  0131D2  0EF9               	movlw	-7
 21513  0131D4  6AE3               	clrf	plusw1,c
 21514  0131D6  0EFA               	movlw	-6
 21515  0131D8  6AE3               	clrf	plusw1,c
 21516  0131DA  0EFB               	movlw	-5
 21517  0131DC  6AE3               	clrf	plusw1,c
 21518                           
 21519                           ;stkvar	_aexp @ sp[(-4)+2]
 21520                           ;stkvar	_bexp @ sp[(-4)+1]
 21521  0131DE  0EFE               	movlw	-2
 21522  0131E0  006F FF8C  F025    	movff	plusw1,btemp
 21523  0131E6  0EFD               	movlw	-3
 21524  0131E8  0060  F097  FFE3   	movff	btemp,plusw1
 21525  0131EE  D042               	goto	u7490
 21526  0131F0                     l8193:
 21527                           
 21528                           ;stkvar	_grs @ sp[(-4)+0]
 21529  0131F0  0EFC               	movlw	-4
 21530  0131F2  A0E3               	btfss	plusw1,0,c
 21531  0131F4  D00D               	goto	l8197
 21532                           
 21533                           ;stkvar	_grs @ sp[(-4)+0]
 21534  0131F6  0EFC               	movlw	-4
 21535  0131F8  006F FF8C  F030    	movff	plusw1,btemp+11
 21536  0131FE  90D8               	bcf	status,0,c
 21537  013200  3230               	rrcf	(btemp+11)^0,f,c
 21538  013202  0E01               	movlw	1
 21539  013204  1230               	iorwf	(btemp+11)^0,f,c
 21540                           
 21541                           ;stkvar	_grs @ sp[(-4)+0]
 21542  013206  0EFC               	movlw	-4
 21543  013208  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21544  01320E  D009               	goto	l8199
 21545  013210                     l8197:
 21546                           
 21547                           ;stkvar	_grs @ sp[(-4)+0]
 21548  013210  50E1               	movf	fsr1l,w,c
 21549  013212  0FFC               	addlw	-4
 21550  013214  6ED9               	movwf	fsr2l,c
 21551  013216  50E2               	movf	fsr1h,w,c
 21552  013218  6EDA               	movwf	fsr2h,c
 21553  01321A  0EFF               	movlw	255
 21554  01321C  22DA               	addwfc	fsr2h,f,c
 21555  01321E  90D8               	bcf	status,0,c
 21556  013220  32DF               	rrcf	indf2,f,c
 21557  013222                     l8199:
 21558                           
 21559                           ;stkvar	_b @ sp[(-4)+-4]
 21560  013222  0EF8               	movlw	-8
 21561  013224  A0E3               	btfss	plusw1,0,c
 21562  013226  D002               	goto	l8203
 21563                           
 21564                           ;stkvar	_grs @ sp[(-4)+0]
 21565  013228  0EFC               	movlw	-4
 21566  01322A  8EE3               	bsf	plusw1,7,c
 21567  01322C                     l8203:
 21568  01322C  0E01               	movlw	1
 21569  01322E  6E30               	movwf	(btemp+11)^0,c
 21570                           
 21571                           ;stkvar	_b @ sp[(-4)+-4]
 21572  013230  50E1               	movf	fsr1l,w,c
 21573  013232  0FF8               	addlw	-8
 21574  013234  6ED9               	movwf	fsr2l,c
 21575  013236  50E2               	movf	fsr1h,w,c
 21576  013238  6EDA               	movwf	fsr2h,c
 21577  01323A  0EFF               	movlw	255
 21578  01323C  22DA               	addwfc	fsr2h,f,c
 21579  01323E  2830               	incf	(btemp+11)^0,w,c
 21580  013240  52DE               	movf	postinc2,f,c
 21581  013242  D008               	goto	u7480
 21582  013244                     u7485:
 21583  013244  52DE               	movf	postinc2,f,c
 21584  013246  90D8               	bcf	status,0,c
 21585  013248  BEDC               	btfsc	preinc2,7,c
 21586  01324A  80D8               	bsf	status,0,c
 21587  01324C  32DD               	rrcf	postdec2,f,c
 21588  01324E  32DD               	rrcf	postdec2,f,c
 21589  013250  32DD               	rrcf	postdec2,f,c
 21590  013252  32DE               	rrcf	postinc2,f,c
 21591  013254                     u7480:
 21592  013254  2EE8               	decfsz	wreg,f,c
 21593  013256  D7F6               	goto	u7485
 21594                           
 21595                           ;stkvar	_bexp @ sp[(-4)+1]
 21596  013258  0EFD               	movlw	-3
 21597  01325A  2AE3               	incf	plusw1,f,c
 21598  01325C                     l8207:
 21599                           
 21600                           ;stkvar	_aexp @ sp[(-4)+2]
 21601                           ;stkvar	_bexp @ sp[(-4)+1]
 21602  01325C  50E1               	movf	fsr1l,w,c
 21603  01325E  0FFD               	addlw	-3
 21604  013260  6ED9               	movwf	fsr2l,c
 21605  013262  50E2               	movf	fsr1h,w,c
 21606  013264  6EDA               	movwf	fsr2h,c
 21607  013266  0EFF               	movlw	255
 21608  013268  22DA               	addwfc	fsr2h,f,c
 21609  01326A  0EFE               	movlw	-2
 21610  01326C  50E3               	movf	plusw1,w,c
 21611  01326E  5CDE               	subwf	postinc2,w,c
 21612  013270  A0D8               	btfss	status,0,c
 21613  013272  D7BE               	goto	l8193
 21614  013274                     u7490:
 21615                           
 21616                           ;stkvar	_signs @ sp[(-4)+3]
 21617  013274  0EFF               	movlw	-1
 21618  013276  BCE3               	btfsc	plusw1,6,c
 21619  013278  D066               	goto	l8235
 21620                           
 21621                           ;stkvar	_bexp @ sp[(-4)+1]
 21622  01327A  0EFD               	movlw	-3
 21623  01327C  50E3               	movf	plusw1,w,c
 21624  01327E  B4D8               	btfsc	status,2,c
 21625  013280  D0F2               	goto	u7590
 21626                           
 21627                           ;stkvar	_a @ sp[(-4)+-8]
 21628                           ;stkvar	_b @ sp[(-4)+-4]
 21629  013282  0EF8               	movlw	-8
 21630  013284  50E3               	movf	plusw1,w,c
 21631  013286  6E25               	movwf	btemp^0,c
 21632  013288  0EF4               	movlw	-12
 21633  01328A  50E3               	movf	plusw1,w,c
 21634  01328C  2625               	addwf	btemp^0,f,c
 21635  01328E  0EF8               	movlw	-8
 21636  013290  0060  F097  FFE3   	movff	btemp,plusw1
 21637  013296  0EF9               	movlw	-7
 21638  013298  50E3               	movf	plusw1,w,c
 21639  01329A  6E25               	movwf	btemp^0,c
 21640  01329C  0EF5               	movlw	-11
 21641  01329E  50E3               	movf	plusw1,w,c
 21642  0132A0  2225               	addwfc	btemp^0,f,c
 21643  0132A2  0EF9               	movlw	-7
 21644  0132A4  0060  F097  FFE3   	movff	btemp,plusw1
 21645  0132AA  0EFA               	movlw	-6
 21646  0132AC  50E3               	movf	plusw1,w,c
 21647  0132AE  6E25               	movwf	btemp^0,c
 21648  0132B0  0EF6               	movlw	-10
 21649  0132B2  50E3               	movf	plusw1,w,c
 21650  0132B4  2225               	addwfc	btemp^0,f,c
 21651  0132B6  0EFA               	movlw	-6
 21652  0132B8  0060  F097  FFE3   	movff	btemp,plusw1
 21653  0132BE  0EFB               	movlw	-5
 21654  0132C0  50E3               	movf	plusw1,w,c
 21655  0132C2  6E25               	movwf	btemp^0,c
 21656  0132C4  0EF7               	movlw	-9
 21657  0132C6  50E3               	movf	plusw1,w,c
 21658  0132C8  2225               	addwfc	btemp^0,f,c
 21659  0132CA  0EFB               	movlw	-5
 21660  0132CC  0060  F097  FFE3   	movff	btemp,plusw1
 21661                           
 21662                           ;stkvar	_b @ sp[(-4)+-4]
 21663  0132D2  0EFB               	movlw	-5
 21664  0132D4  A0E3               	btfss	plusw1,0,c
 21665  0132D6  D101               	goto	u7630
 21666                           
 21667                           ;stkvar	_grs @ sp[(-4)+0]
 21668  0132D8  0EFC               	movlw	-4
 21669  0132DA  A0E3               	btfss	plusw1,0,c
 21670  0132DC  D00D               	goto	l8225
 21671                           
 21672                           ;stkvar	_grs @ sp[(-4)+0]
 21673  0132DE  0EFC               	movlw	-4
 21674  0132E0  006F FF8C  F030    	movff	plusw1,btemp+11
 21675  0132E6  90D8               	bcf	status,0,c
 21676  0132E8  3230               	rrcf	(btemp+11)^0,f,c
 21677  0132EA  0E01               	movlw	1
 21678  0132EC  1230               	iorwf	(btemp+11)^0,f,c
 21679                           
 21680                           ;stkvar	_grs @ sp[(-4)+0]
 21681  0132EE  0EFC               	movlw	-4
 21682  0132F0  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21683  0132F6  D009               	goto	l8227
 21684  0132F8                     l8225:
 21685                           
 21686                           ;stkvar	_grs @ sp[(-4)+0]
 21687  0132F8  50E1               	movf	fsr1l,w,c
 21688  0132FA  0FFC               	addlw	-4
 21689  0132FC  6ED9               	movwf	fsr2l,c
 21690  0132FE  50E2               	movf	fsr1h,w,c
 21691  013300  6EDA               	movwf	fsr2h,c
 21692  013302  0EFF               	movlw	255
 21693  013304  22DA               	addwfc	fsr2h,f,c
 21694  013306  90D8               	bcf	status,0,c
 21695  013308  32DF               	rrcf	indf2,f,c
 21696  01330A                     l8227:
 21697                           
 21698                           ;stkvar	_b @ sp[(-4)+-4]
 21699  01330A  0EF8               	movlw	-8
 21700  01330C  A0E3               	btfss	plusw1,0,c
 21701  01330E  D002               	goto	l8231
 21702                           
 21703                           ;stkvar	_grs @ sp[(-4)+0]
 21704  013310  0EFC               	movlw	-4
 21705  013312  8EE3               	bsf	plusw1,7,c
 21706  013314                     l8231:
 21707  013314  0E01               	movlw	1
 21708  013316  6E30               	movwf	(btemp+11)^0,c
 21709                           
 21710                           ;stkvar	_b @ sp[(-4)+-4]
 21711  013318  50E1               	movf	fsr1l,w,c
 21712  01331A  0FF8               	addlw	-8
 21713  01331C  6ED9               	movwf	fsr2l,c
 21714  01331E  50E2               	movf	fsr1h,w,c
 21715  013320  6EDA               	movwf	fsr2h,c
 21716  013322  0EFF               	movlw	255
 21717  013324  22DA               	addwfc	fsr2h,f,c
 21718  013326  2830               	incf	(btemp+11)^0,w,c
 21719  013328  52DE               	movf	postinc2,f,c
 21720  01332A  D008               	goto	u7550
 21721  01332C                     u7555:
 21722  01332C  52DE               	movf	postinc2,f,c
 21723  01332E  90D8               	bcf	status,0,c
 21724  013330  BEDC               	btfsc	preinc2,7,c
 21725  013332  80D8               	bsf	status,0,c
 21726  013334  32DD               	rrcf	postdec2,f,c
 21727  013336  32DD               	rrcf	postdec2,f,c
 21728  013338  32DD               	rrcf	postdec2,f,c
 21729  01333A  32DE               	rrcf	postinc2,f,c
 21730  01333C                     u7550:
 21731  01333C  2EE8               	decfsz	wreg,f,c
 21732  01333E  D7F6               	goto	u7555
 21733                           
 21734                           ;stkvar	_bexp @ sp[(-4)+1]
 21735  013340  0EFD               	movlw	-3
 21736  013342  2AE3               	incf	plusw1,f,c
 21737  013344  D0CA               	goto	u7630
 21738  013346                     l8235:
 21739                           
 21740                           ;stkvar	_a @ sp[(-4)+-8]
 21741                           ;stkvar	_b @ sp[(-4)+-4]
 21742  013346  50E1               	movf	fsr1l,w,c
 21743  013348  0FF8               	addlw	-8
 21744  01334A  6ED9               	movwf	fsr2l,c
 21745  01334C  50E2               	movf	fsr1h,w,c
 21746  01334E  6EDA               	movwf	fsr2h,c
 21747  013350  0EFF               	movlw	255
 21748  013352  22DA               	addwfc	fsr2h,f,c
 21749  013354  0EF4               	movlw	-12
 21750  013356  50E3               	movf	plusw1,w,c
 21751  013358  5CDE               	subwf	postinc2,w,c
 21752  01335A  0EF5               	movlw	-11
 21753  01335C  50E3               	movf	plusw1,w,c
 21754  01335E  58DE               	subwfb	postinc2,w,c
 21755  013360  0EF6               	movlw	-10
 21756  013362  50E3               	movf	plusw1,w,c
 21757  013364  58DE               	subwfb	postinc2,w,c
 21758  013366  50DE               	movf	postinc2,w,c
 21759  013368  0A80               	xorlw	128
 21760  01336A  6E25               	movwf	btemp^0,c
 21761  01336C  0EF7               	movlw	-9
 21762  01336E  50E3               	movf	plusw1,w,c
 21763  013370  0A80               	xorlw	128
 21764  013372  5825               	subwfb	btemp^0,w,c
 21765  013374  B0D8               	btfsc	status,0,c
 21766  013376  D053               	goto	l8247
 21767                           
 21768                           ;stkvar	_b @ sp[(-4)+-4]
 21769                           ;stkvar	_a @ sp[(-4)+-8]
 21770  013378  0EF4               	movlw	-12
 21771  01337A  006F FF8C  F02D    	movff	plusw1,btemp+8
 21772  013380  0EF5               	movlw	-11
 21773  013382  006F FF8C  F02E    	movff	plusw1,btemp+9
 21774  013388  0EF6               	movlw	-10
 21775  01338A  006F FF8C  F02F    	movff	plusw1,btemp+10
 21776  013390  0EF7               	movlw	-9
 21777  013392  006F FF8C  F030    	movff	plusw1,btemp+11
 21778  013398  0EF8               	movlw	-8
 21779  01339A  50E3               	movf	plusw1,w,c
 21780  01339C  5E2D               	subwf	(btemp+8)^0,f,c
 21781  01339E  0EF9               	movlw	-7
 21782  0133A0  50E3               	movf	plusw1,w,c
 21783  0133A2  5A2E               	subwfb	(btemp+9)^0,f,c
 21784  0133A4  0EFA               	movlw	-6
 21785  0133A6  50E3               	movf	plusw1,w,c
 21786  0133A8  5A2F               	subwfb	(btemp+10)^0,f,c
 21787  0133AA  0EFB               	movlw	-5
 21788  0133AC  50E3               	movf	plusw1,w,c
 21789  0133AE  5A30               	subwfb	(btemp+11)^0,f,c
 21790  0133B0  0EFF               	movlw	255
 21791  0133B2  242D               	addwf	(btemp+8)^0,w,c
 21792  0133B4  6E29               	movwf	(btemp+4)^0,c
 21793  0133B6  0EFF               	movlw	255
 21794  0133B8  202E               	addwfc	(btemp+9)^0,w,c
 21795  0133BA  6E2A               	movwf	(btemp+5)^0,c
 21796  0133BC  0EFF               	movlw	255
 21797  0133BE  202F               	addwfc	(btemp+10)^0,w,c
 21798  0133C0  6E2B               	movwf	(btemp+6)^0,c
 21799  0133C2  0EFF               	movlw	255
 21800  0133C4  2030               	addwfc	(btemp+11)^0,w,c
 21801  0133C6  6E2C               	movwf	(btemp+7)^0,c
 21802                           
 21803                           ;stkvar	_b @ sp[(-4)+-4]
 21804  0133C8  0EF8               	movlw	-8
 21805  0133CA  0060  F0A7  FFE3   	movff	btemp+4,plusw1
 21806  0133D0  0EF9               	movlw	-7
 21807  0133D2  0060  F0AB  FFE3   	movff	btemp+5,plusw1
 21808  0133D8  0EFA               	movlw	-6
 21809  0133DA  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 21810  0133E0  0EFB               	movlw	-5
 21811  0133E2  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 21812                           
 21813                           ;stkvar	_signs @ sp[(-4)+3]
 21814  0133E8  0EFF               	movlw	-1
 21815  0133EA  7EE3               	btg	plusw1,7,c
 21816                           
 21817                           ;stkvar	_grs @ sp[(-4)+0]
 21818  0133EC  0EFC               	movlw	-4
 21819  0133EE  50E3               	movf	plusw1,w,c
 21820  0133F0  0800               	sublw	0
 21821  0133F2  6E30               	movwf	(btemp+11)^0,c
 21822                           
 21823                           ;stkvar	_grs @ sp[(-4)+0]
 21824  0133F4  0EFC               	movlw	-4
 21825  0133F6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21826                           
 21827                           ;stkvar	_grs @ sp[(-4)+0]
 21828  0133FC  0EFC               	movlw	-4
 21829  0133FE  50E3               	movf	plusw1,w,c
 21830  013400  A4D8               	btfss	status,2,c
 21831  013402  D020               	goto	l8249
 21832                           
 21833                           ;stkvar	_b @ sp[(-4)+-4]
 21834  013404  50E1               	movf	fsr1l,w,c
 21835  013406  0FF8               	addlw	-8
 21836  013408  6ED9               	movwf	fsr2l,c
 21837  01340A  50E2               	movf	fsr1h,w,c
 21838  01340C  6EDA               	movwf	fsr2h,c
 21839  01340E  0EFF               	movlw	255
 21840  013410  22DA               	addwfc	fsr2h,f,c
 21841  013412  2ADE               	incf	postinc2,f,c
 21842  013414  0E00               	movlw	0
 21843  013416  22DE               	addwfc	postinc2,f,c
 21844  013418  22DE               	addwfc	postinc2,f,c
 21845  01341A  22DE               	addwfc	postinc2,f,c
 21846  01341C  D013               	goto	l8249
 21847  01341E                     l8247:
 21848                           
 21849                           ;stkvar	_a @ sp[(-4)+-8]
 21850                           ;stkvar	_b @ sp[(-4)+-4]
 21851  01341E  50E1               	movf	fsr1l,w,c
 21852  013420  0FF8               	addlw	-8
 21853  013422  6ED9               	movwf	fsr2l,c
 21854  013424  50E2               	movf	fsr1h,w,c
 21855  013426  6EDA               	movwf	fsr2h,c
 21856  013428  0EFF               	movlw	255
 21857  01342A  22DA               	addwfc	fsr2h,f,c
 21858  01342C  0EF4               	movlw	-12
 21859  01342E  50E3               	movf	plusw1,w,c
 21860  013430  5EDE               	subwf	postinc2,f,c
 21861  013432  0EF5               	movlw	-11
 21862  013434  50E3               	movf	plusw1,w,c
 21863  013436  5ADE               	subwfb	postinc2,f,c
 21864  013438  0EF6               	movlw	-10
 21865  01343A  50E3               	movf	plusw1,w,c
 21866  01343C  5ADE               	subwfb	postinc2,f,c
 21867  01343E  0EF7               	movlw	-9
 21868  013440  50E3               	movf	plusw1,w,c
 21869  013442  5ADE               	subwfb	postinc2,f,c
 21870  013444                     l8249:
 21871                           
 21872                           ;stkvar	_b @ sp[(-4)+-4]
 21873  013444  0EF8               	movlw	-8
 21874  013446  50E3               	movf	plusw1,w,c
 21875  013448  E145               	bnz	l8271
 21876  01344A  0EF9               	movlw	-7
 21877  01344C  50E3               	movf	plusw1,w,c
 21878  01344E  E142               	bnz	l8271
 21879  013450  0EFA               	movlw	-6
 21880  013452  50E3               	movf	plusw1,w,c
 21881  013454  E13F               	bnz	l8271
 21882  013456  0EFB               	movlw	-5
 21883  013458  50E3               	movf	plusw1,w,c
 21884  01345A  A4D8               	btfss	status,2,c
 21885  01345C  D03B               	goto	l8271
 21886                           
 21887                           ;stkvar	_grs @ sp[(-4)+0]
 21888  01345E  0EFC               	movlw	-4
 21889  013460  50E3               	movf	plusw1,w,c
 21890  013462  A4D8               	btfss	status,2,c
 21891  013464  D037               	goto	l8271
 21892  013466                     u7590:
 21893  013466  0E00               	movlw	0
 21894  013468  6E25               	movwf	btemp^0,c
 21895  01346A  0E00               	movlw	0
 21896  01346C  6E26               	movwf	(btemp+1)^0,c
 21897  01346E  0E00               	movlw	0
 21898  013470  6E27               	movwf	(btemp+2)^0,c
 21899  013472  0E00               	movlw	0
 21900  013474  6E28               	movwf	(btemp+3)^0,c
 21901  013476  D0C6               	goto	l2759
 21902  013478                     l8257:
 21903                           
 21904                           ;stkvar	_b @ sp[(-4)+-4]
 21905  013478  90D8               	bcf	status,0,c
 21906  01347A  0EF8               	movlw	-8
 21907  01347C  36E3               	rlcf	plusw1,f,c
 21908  01347E  0EF9               	movlw	-7
 21909  013480  36E3               	rlcf	plusw1,f,c
 21910  013482  0EFA               	movlw	-6
 21911  013484  36E3               	rlcf	plusw1,f,c
 21912  013486  0EFB               	movlw	-5
 21913  013488  36E3               	rlcf	plusw1,f,c
 21914                           
 21915                           ;stkvar	_grs @ sp[(-4)+0]
 21916  01348A  0EFC               	movlw	-4
 21917  01348C  AEE3               	btfss	plusw1,7,c
 21918  01348E  D002               	goto	l2771
 21919                           
 21920                           ;stkvar	_b @ sp[(-4)+-4]
 21921  013490  0EF8               	movlw	-8
 21922  013492  80E3               	bsf	plusw1,0,c
 21923  013494                     l2771:
 21924                           
 21925                           ;stkvar	_grs @ sp[(-4)+0]
 21926  013494  0EFC               	movlw	-4
 21927  013496  A0E3               	btfss	plusw1,0,c
 21928  013498  D00E               	goto	l8265
 21929                           
 21930                           ;stkvar	_grs @ sp[(-4)+0]
 21931  01349A  0EFC               	movlw	-4
 21932  01349C  006F FF8C  F030    	movff	plusw1,btemp+11
 21933  0134A2  90D8               	bcf	status,0,c
 21934  0134A4  3430               	rlcf	(btemp+11)^0,w,c
 21935  0134A6  6E2F               	movwf	(btemp+10)^0,c
 21936  0134A8  0E01               	movlw	1
 21937  0134AA  122F               	iorwf	(btemp+10)^0,f,c
 21938                           
 21939                           ;stkvar	_grs @ sp[(-4)+0]
 21940  0134AC  0EFC               	movlw	-4
 21941  0134AE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21942  0134B4  D009               	goto	l8267
 21943  0134B6                     l8265:
 21944                           
 21945                           ;stkvar	_grs @ sp[(-4)+0]
 21946  0134B6  50E1               	movf	fsr1l,w,c
 21947  0134B8  0FFC               	addlw	-4
 21948  0134BA  6ED9               	movwf	fsr2l,c
 21949  0134BC  50E2               	movf	fsr1h,w,c
 21950  0134BE  6EDA               	movwf	fsr2h,c
 21951  0134C0  0EFF               	movlw	255
 21952  0134C2  22DA               	addwfc	fsr2h,f,c
 21953  0134C4  90D8               	bcf	status,0,c
 21954  0134C6  36DF               	rlcf	indf2,f,c
 21955  0134C8                     l8267:
 21956                           
 21957                           ;stkvar	_bexp @ sp[(-4)+1]
 21958  0134C8  0EFD               	movlw	-3
 21959  0134CA  50E3               	movf	plusw1,w,c
 21960  0134CC  B4D8               	btfsc	status,2,c
 21961  0134CE  D002               	goto	l8271
 21962                           
 21963                           ;stkvar	_bexp @ sp[(-4)+1]
 21964  0134D0  0EFD               	movlw	-3
 21965  0134D2  06E3               	decf	plusw1,f,c
 21966  0134D4                     l8271:
 21967                           
 21968                           ;stkvar	_b @ sp[(-4)+-4]
 21969  0134D4  0EFA               	movlw	-6
 21970  0134D6  AEE3               	btfss	plusw1,7,c
 21971  0134D8  D7CF               	goto	l8257
 21972  0134DA                     u7630:
 21973                           
 21974                           ;stkvar	_aexp @ sp[(-4)+2]
 21975  0134DA  0EFE               	movlw	-2
 21976  0134DC  6AE3               	clrf	plusw1,c
 21977                           
 21978                           ;stkvar	_grs @ sp[(-4)+0]
 21979  0134DE  0EFC               	movlw	-4
 21980  0134E0  AEE3               	btfss	plusw1,7,c
 21981  0134E2  D00F               	goto	l8285
 21982                           
 21983                           ;stkvar	_grs @ sp[(-4)+0]
 21984  0134E4  0EFC               	movlw	-4
 21985  0134E6  006F FF8C  F030    	movff	plusw1,btemp+11
 21986  0134EC  0E7F               	movlw	127
 21987  0134EE  1630               	andwf	(btemp+11)^0,f,c
 21988  0134F0  B4D8               	btfsc	status,2,c
 21989  0134F2  D004               	goto	l8281
 21990  0134F4                     u7650:
 21991                           
 21992                           ;stkvar	_aexp @ sp[(-4)+2]
 21993  0134F4  0EFE               	movlw	-2
 21994  0134F6  6AE3               	clrf	plusw1,c
 21995  0134F8  2AE3               	incf	plusw1,f,c
 21996  0134FA  D003               	goto	l8285
 21997  0134FC                     l8281:
 21998                           
 21999                           ;stkvar	_b @ sp[(-4)+-4]
 22000  0134FC  0EF8               	movlw	-8
 22001  0134FE  B0E3               	btfsc	plusw1,0,c
 22002  013500  D7F9               	goto	u7650
 22003  013502                     l8285:
 22004                           
 22005                           ;stkvar	_aexp @ sp[(-4)+2]
 22006  013502  0EFE               	movlw	-2
 22007  013504  50E3               	movf	plusw1,w,c
 22008  013506  B4D8               	btfsc	status,2,c
 22009  013508  D02B               	goto	l8297
 22010                           
 22011                           ;stkvar	_b @ sp[(-4)+-4]
 22012  01350A  50E1               	movf	fsr1l,w,c
 22013  01350C  0FF8               	addlw	-8
 22014  01350E  6ED9               	movwf	fsr2l,c
 22015  013510  50E2               	movf	fsr1h,w,c
 22016  013512  6EDA               	movwf	fsr2h,c
 22017  013514  0EFF               	movlw	255
 22018  013516  22DA               	addwfc	fsr2h,f,c
 22019  013518  2ADE               	incf	postinc2,f,c
 22020  01351A  0E00               	movlw	0
 22021  01351C  22DE               	addwfc	postinc2,f,c
 22022  01351E  22DE               	addwfc	postinc2,f,c
 22023  013520  22DE               	addwfc	postinc2,f,c
 22024                           
 22025                           ;stkvar	_b @ sp[(-4)+-4]
 22026  013522  0EFB               	movlw	-5
 22027  013524  A0E3               	btfss	plusw1,0,c
 22028  013526  D01C               	goto	l8297
 22029  013528  0E01               	movlw	1
 22030  01352A  6E30               	movwf	(btemp+11)^0,c
 22031                           
 22032                           ;stkvar	_b @ sp[(-4)+-4]
 22033  01352C  50E1               	movf	fsr1l,w,c
 22034  01352E  0FF8               	addlw	-8
 22035  013530  6ED9               	movwf	fsr2l,c
 22036  013532  50E2               	movf	fsr1h,w,c
 22037  013534  6EDA               	movwf	fsr2h,c
 22038  013536  0EFF               	movlw	255
 22039  013538  22DA               	addwfc	fsr2h,f,c
 22040  01353A  2830               	incf	(btemp+11)^0,w,c
 22041  01353C  52DE               	movf	postinc2,f,c
 22042  01353E  D008               	goto	u7690
 22043  013540                     u7695:
 22044  013540  52DE               	movf	postinc2,f,c
 22045  013542  90D8               	bcf	status,0,c
 22046  013544  BEDC               	btfsc	preinc2,7,c
 22047  013546  80D8               	bsf	status,0,c
 22048  013548  32DD               	rrcf	postdec2,f,c
 22049  01354A  32DD               	rrcf	postdec2,f,c
 22050  01354C  32DD               	rrcf	postdec2,f,c
 22051  01354E  32DE               	rrcf	postinc2,f,c
 22052  013550                     u7690:
 22053  013550  2EE8               	decfsz	wreg,f,c
 22054  013552  D7F6               	goto	u7695
 22055                           
 22056                           ;stkvar	_bexp @ sp[(-4)+1]
 22057  013554  0EFD               	movlw	-3
 22058  013556  28E3               	incf	plusw1,w,c
 22059  013558  B4D8               	btfsc	status,2,c
 22060  01355A  D002               	goto	l8297
 22061                           
 22062                           ;stkvar	_bexp @ sp[(-4)+1]
 22063  01355C  0EFD               	movlw	-3
 22064  01355E  2AE3               	incf	plusw1,f,c
 22065  013560                     l8297:
 22066                           
 22067                           ;stkvar	_bexp @ sp[(-4)+1]
 22068  013560  0EFD               	movlw	-3
 22069  013562  28E3               	incf	plusw1,w,c
 22070  013564  B4D8               	btfsc	status,2,c
 22071  013566  D004               	goto	u7720
 22072                           
 22073                           ;stkvar	_bexp @ sp[(-4)+1]
 22074  013568  0EFD               	movlw	-3
 22075  01356A  50E3               	movf	plusw1,w,c
 22076  01356C  A4D8               	btfss	status,2,c
 22077  01356E  D00E               	goto	l8307
 22078  013570                     u7720:
 22079                           
 22080                           ;stkvar	_b @ sp[(-4)+-4]
 22081  013570  0EF8               	movlw	-8
 22082  013572  6AE3               	clrf	plusw1,c
 22083  013574  0EF9               	movlw	-7
 22084  013576  6AE3               	clrf	plusw1,c
 22085  013578  0EFA               	movlw	-6
 22086  01357A  6AE3               	clrf	plusw1,c
 22087  01357C  0EFB               	movlw	-5
 22088  01357E  6AE3               	clrf	plusw1,c
 22089                           
 22090                           ;stkvar	_bexp @ sp[(-4)+1]
 22091  013580  0EFD               	movlw	-3
 22092  013582  50E3               	movf	plusw1,w,c
 22093  013584  A4D8               	btfss	status,2,c
 22094  013586  D002               	goto	l8307
 22095                           
 22096                           ;stkvar	_signs @ sp[(-4)+3]
 22097  013588  0EFF               	movlw	-1
 22098  01358A  6AE3               	clrf	plusw1,c
 22099  01358C                     l8307:
 22100                           
 22101                           ;stkvar	_bexp @ sp[(-4)+1]
 22102  01358C  0EFD               	movlw	-3
 22103  01358E  A0E3               	btfss	plusw1,0,c
 22104  013590  D009               	goto	l8311
 22105                           
 22106                           ;stkvar	_b @ sp[(-4)+-4]
 22107  013592  0EFA               	movlw	250
 22108  013594  24E1               	addwf	fsr1l,w,c
 22109  013596  6ED9               	movwf	fsr2l,c
 22110  013598  0EFF               	movlw	255
 22111  01359A  20E2               	addwfc	fsr1h,w,c
 22112  01359C  6EDA               	movwf	fsr2h,c
 22113  01359E  0E00               	movlw	0
 22114  0135A0  8EDB               	bsf	plusw2,7,c
 22115  0135A2  D008               	goto	l8313
 22116  0135A4                     l8311:
 22117                           
 22118                           ;stkvar	_b @ sp[(-4)+-4]
 22119  0135A4  0EFA               	movlw	250
 22120  0135A6  24E1               	addwf	fsr1l,w,c
 22121  0135A8  6ED9               	movwf	fsr2l,c
 22122  0135AA  0EFF               	movlw	255
 22123  0135AC  20E2               	addwfc	fsr1h,w,c
 22124  0135AE  6EDA               	movwf	fsr2h,c
 22125  0135B0  0E7F               	movlw	127
 22126  0135B2  16DF               	andwf	indf2,f,c
 22127  0135B4                     l8313:
 22128                           
 22129                           ;stkvar	_b @ sp[(-4)+-4]
 22130  0135B4  0EFB               	movlw	251
 22131  0135B6  24E1               	addwf	fsr1l,w,c
 22132  0135B8  6ED9               	movwf	fsr2l,c
 22133  0135BA  0EFF               	movlw	255
 22134  0135BC  20E2               	addwfc	fsr1h,w,c
 22135  0135BE  6EDA               	movwf	fsr2h,c
 22136                           
 22137                           ;stkvar	_bexp @ sp[(-4)+1]
 22138  0135C0  0EFD               	movlw	-3
 22139  0135C2  006F FF8C  F030    	movff	plusw1,btemp+11
 22140  0135C8  90D8               	bcf	status,0,c
 22141  0135CA  3030               	rrcf	(btemp+11)^0,w,c
 22142  0135CC  6EDF               	movwf	indf2,c
 22143                           
 22144                           ;stkvar	_signs @ sp[(-4)+3]
 22145  0135CE  0EFF               	movlw	-1
 22146  0135D0  AEE3               	btfss	plusw1,7,c
 22147  0135D2  D008               	goto	l8319
 22148                           
 22149                           ;stkvar	_b @ sp[(-4)+-4]
 22150  0135D4  0EFB               	movlw	251
 22151  0135D6  24E1               	addwf	fsr1l,w,c
 22152  0135D8  6ED9               	movwf	fsr2l,c
 22153  0135DA  0EFF               	movlw	255
 22154  0135DC  20E2               	addwfc	fsr1h,w,c
 22155  0135DE  6EDA               	movwf	fsr2h,c
 22156  0135E0  0E00               	movlw	0
 22157  0135E2  8EDB               	bsf	plusw2,7,c
 22158  0135E4                     l8319:
 22159                           
 22160                           ;stkvar	_b @ sp[(-4)+-4]
 22161  0135E4  0EF8               	movlw	-8
 22162  0135E6  006F FF8C  F025    	movff	plusw1,btemp
 22163  0135EC  0EF9               	movlw	-7
 22164  0135EE  006F FF8C  F026    	movff	plusw1,btemp+1
 22165  0135F4  0EFA               	movlw	-6
 22166  0135F6  006F FF8C  F027    	movff	plusw1,btemp+2
 22167  0135FC  0EFB               	movlw	-5
 22168  0135FE  006F FF8C  F028    	movff	plusw1,btemp+3
 22169  013604                     l2759:
 22170                           
 22171                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 22172  013604  0EF4               	movlw	244
 22173  013606  26E1               	addwf	fsr1l,f,c
 22174  013608  0EFF               	movlw	255
 22175  01360A  22E2               	addwfc	fsr1h,f,c
 22176  01360C  0012               	return		;funcret
 22177  01360E                     __end_of___fladd:
 22178                           	opt callstack 0
 22179                           
 22180 ;; *************** function ___flmul *****************
 22181 ;; Defined at:
 22182 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 22183 ;; Parameters:    Size  Location     Type
 22184 ;;  b               4  [STACK] unsigned char 
 22185 ;;  a               4  [STACK] unsigned char 
 22186 ;; Auto vars:     Size  Location     Type
 22187 ;;  prod            4  [STACK] struct .
 22188 ;;  grs             4  [STACK] unsigned long 
 22189 ;;  temp            2  [STACK] struct .
 22190 ;;  bexp            1  [STACK] unsigned char 
 22191 ;;  aexp            1  [STACK] unsigned char 
 22192 ;;  sign            1  [STACK] unsigned char 
 22193 ;; Return value:  Size  Location     Type
 22194 ;;                  4  [STACK] unsigned char 
 22195 ;; Registers used:
 22196 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22197 ;; Tracked objects:
 22198 ;;		On entry : 0/2
 22199 ;;		On exit  : 0/0
 22200 ;;		Unchanged: 0/0
 22201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22206 ;;Total ram usage:        0 bytes
 22207 ;; Hardware stack levels used:    1
 22208 ;; Hardware stack levels required when called:    7
 22209 ;; This function calls:
 22210 ;;		Nothing
 22211 ;; This function is called by:
 22212 ;;		_conv_raw_result
 22213 ;;		_lp_filter
 22214 ;;		_calc_model_data
 22215 ;;		_efgtoa
 22216 ;; This function uses a reentrant model
 22217 ;;
 22218                           
 22219                           	psect	text94
 22220  012628                     __ptext94:
 22221                           	opt callstack 0
 22222  012628                     ___flmul:
 22223                           	opt callstack 0
 22224                           
 22225                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 22226  012628  0E0D               	movlw	13
 22227  01262A  26E1               	addwf	fsr1l,f,c
 22228  01262C  0E00               	movlw	0
 22229  01262E  22E2               	addwfc	fsr1h,f,c
 22230                           
 22231                           ;stkvar	_b @ sp[(-13)+-4]
 22232                           
 22233                           ;incstack = 0
 22234  012630  0EF2               	movlw	242
 22235  012632  24E1               	addwf	fsr1l,w,c
 22236  012634  6ED9               	movwf	fsr2l,c
 22237  012636  0EFF               	movlw	255
 22238  012638  20E2               	addwfc	fsr1h,w,c
 22239  01263A  6EDA               	movwf	fsr2h,c
 22240  01263C  50DF               	movf	indf2,w,c
 22241  01263E  6E30               	movwf	(btemp+11)^0,c
 22242  012640  0E80               	movlw	128
 22243  012642  1630               	andwf	(btemp+11)^0,f,c
 22244                           
 22245                           ;stkvar	_sign @ sp[(-13)+12]
 22246  012644  0EFF               	movlw	-1
 22247  012646  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22248                           
 22249                           ;stkvar	_b @ sp[(-13)+-4]
 22250  01264C  0EF2               	movlw	242
 22251  01264E  24E1               	addwf	fsr1l,w,c
 22252  012650  6ED9               	movwf	fsr2l,c
 22253  012652  0EFF               	movlw	255
 22254  012654  20E2               	addwfc	fsr1h,w,c
 22255  012656  6EDA               	movwf	fsr2h,c
 22256  012658  50DF               	movf	indf2,w,c
 22257  01265A  6E30               	movwf	(btemp+11)^0,c
 22258  01265C  90D8               	bcf	status,0,c
 22259  01265E  3430               	rlcf	(btemp+11)^0,w,c
 22260  012660  6E2F               	movwf	(btemp+10)^0,c
 22261                           
 22262                           ;stkvar	_bexp @ sp[(-13)+10]
 22263  012662  0EFD               	movlw	-3
 22264  012664  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22265                           
 22266                           ;stkvar	_b @ sp[(-13)+-4]
 22267  01266A  0EF1               	movlw	241
 22268  01266C  24E1               	addwf	fsr1l,w,c
 22269  01266E  6ED9               	movwf	fsr2l,c
 22270  012670  0EFF               	movlw	255
 22271  012672  20E2               	addwfc	fsr1h,w,c
 22272  012674  6EDA               	movwf	fsr2h,c
 22273  012676  AEDF               	btfss	indf2,7,c
 22274  012678  D002               	goto	l6831
 22275                           
 22276                           ;stkvar	_bexp @ sp[(-13)+10]
 22277  01267A  0EFD               	movlw	-3
 22278  01267C  80E3               	bsf	plusw1,0,c
 22279  01267E                     l6831:
 22280                           
 22281                           ;stkvar	_bexp @ sp[(-13)+10]
 22282  01267E  0EFD               	movlw	-3
 22283  012680  50E3               	movf	plusw1,w,c
 22284  012682  B4D8               	btfsc	status,2,c
 22285  012684  D01F               	goto	l6839
 22286                           
 22287                           ;stkvar	_bexp @ sp[(-13)+10]
 22288  012686  0EFD               	movlw	-3
 22289  012688  28E3               	incf	plusw1,w,c
 22290  01268A  A4D8               	btfss	status,2,c
 22291  01268C  D018               	goto	l6837
 22292  01268E  0E00               	movlw	0
 22293  012690  6E2D               	movwf	(btemp+8)^0,c
 22294  012692  0E00               	movlw	0
 22295  012694  6E2E               	movwf	(btemp+9)^0,c
 22296  012696  0E00               	movlw	0
 22297  012698  6E2F               	movwf	(btemp+10)^0,c
 22298  01269A  0E00               	movlw	0
 22299  01269C  6E30               	movwf	(btemp+11)^0,c
 22300                           
 22301                           ;stkvar	_b @ sp[(-13)+-4]
 22302  01269E  0EEF               	movlw	-17
 22303  0126A0  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22304  0126A6  0EF0               	movlw	-16
 22305  0126A8  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22306  0126AE  0EF1               	movlw	-15
 22307  0126B0  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22308  0126B6  0EF2               	movlw	-14
 22309  0126B8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22310  0126BE                     l6837:
 22311                           
 22312                           ;stkvar	_b @ sp[(-13)+-4]
 22313  0126BE  0EF1               	movlw	-15
 22314  0126C0  8EE3               	bsf	plusw1,7,c
 22315  0126C2  D018               	goto	l6841
 22316  0126C4                     l6839:
 22317  0126C4  0E00               	movlw	0
 22318  0126C6  6E2D               	movwf	(btemp+8)^0,c
 22319  0126C8  0E00               	movlw	0
 22320  0126CA  6E2E               	movwf	(btemp+9)^0,c
 22321  0126CC  0E00               	movlw	0
 22322  0126CE  6E2F               	movwf	(btemp+10)^0,c
 22323  0126D0  0E00               	movlw	0
 22324  0126D2  6E30               	movwf	(btemp+11)^0,c
 22325                           
 22326                           ;stkvar	_b @ sp[(-13)+-4]
 22327  0126D4  0EEF               	movlw	-17
 22328  0126D6  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22329  0126DC  0EF0               	movlw	-16
 22330  0126DE  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22331  0126E4  0EF1               	movlw	-15
 22332  0126E6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22333  0126EC  0EF2               	movlw	-14
 22334  0126EE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22335  0126F4                     l6841:
 22336                           
 22337                           ;stkvar	_a @ sp[(-13)+-8]
 22338  0126F4  0EEE               	movlw	238
 22339  0126F6  24E1               	addwf	fsr1l,w,c
 22340  0126F8  6ED9               	movwf	fsr2l,c
 22341  0126FA  0EFF               	movlw	255
 22342  0126FC  20E2               	addwfc	fsr1h,w,c
 22343  0126FE  6EDA               	movwf	fsr2h,c
 22344  012700  50DF               	movf	indf2,w,c
 22345  012702  6E30               	movwf	(btemp+11)^0,c
 22346  012704  0E80               	movlw	128
 22347  012706  1630               	andwf	(btemp+11)^0,f,c
 22348                           
 22349                           ;stkvar	_sign @ sp[(-13)+12]
 22350  012708  50E1               	movf	fsr1l,w,c
 22351  01270A  0FFF               	addlw	-1
 22352  01270C  6ED9               	movwf	fsr2l,c
 22353  01270E  50E2               	movf	fsr1h,w,c
 22354  012710  6EDA               	movwf	fsr2h,c
 22355  012712  0EFF               	movlw	255
 22356  012714  22DA               	addwfc	fsr2h,f,c
 22357  012716  5030               	movf	(btemp+11)^0,w,c
 22358  012718  1ADF               	xorwf	indf2,f,c
 22359                           
 22360                           ;stkvar	_a @ sp[(-13)+-8]
 22361  01271A  0EEE               	movlw	238
 22362  01271C  24E1               	addwf	fsr1l,w,c
 22363  01271E  6ED9               	movwf	fsr2l,c
 22364  012720  0EFF               	movlw	255
 22365  012722  20E2               	addwfc	fsr1h,w,c
 22366  012724  6EDA               	movwf	fsr2h,c
 22367  012726  50DF               	movf	indf2,w,c
 22368  012728  6E30               	movwf	(btemp+11)^0,c
 22369  01272A  90D8               	bcf	status,0,c
 22370  01272C  3430               	rlcf	(btemp+11)^0,w,c
 22371  01272E  6E2F               	movwf	(btemp+10)^0,c
 22372                           
 22373                           ;stkvar	_aexp @ sp[(-13)+11]
 22374  012730  0EFE               	movlw	-2
 22375  012732  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22376                           
 22377                           ;stkvar	_a @ sp[(-13)+-8]
 22378  012738  0EED               	movlw	237
 22379  01273A  24E1               	addwf	fsr1l,w,c
 22380  01273C  6ED9               	movwf	fsr2l,c
 22381  01273E  0EFF               	movlw	255
 22382  012740  20E2               	addwfc	fsr1h,w,c
 22383  012742  6EDA               	movwf	fsr2h,c
 22384  012744  AEDF               	btfss	indf2,7,c
 22385  012746  D002               	goto	l6849
 22386                           
 22387                           ;stkvar	_aexp @ sp[(-13)+11]
 22388  012748  0EFE               	movlw	-2
 22389  01274A  80E3               	bsf	plusw1,0,c
 22390  01274C                     l6849:
 22391                           
 22392                           ;stkvar	_aexp @ sp[(-13)+11]
 22393  01274C  0EFE               	movlw	-2
 22394  01274E  50E3               	movf	plusw1,w,c
 22395  012750  B4D8               	btfsc	status,2,c
 22396  012752  D01F               	goto	l6857
 22397                           
 22398                           ;stkvar	_aexp @ sp[(-13)+11]
 22399  012754  0EFE               	movlw	-2
 22400  012756  28E3               	incf	plusw1,w,c
 22401  012758  A4D8               	btfss	status,2,c
 22402  01275A  D018               	goto	l6855
 22403  01275C  0E00               	movlw	0
 22404  01275E  6E2D               	movwf	(btemp+8)^0,c
 22405  012760  0E00               	movlw	0
 22406  012762  6E2E               	movwf	(btemp+9)^0,c
 22407  012764  0E00               	movlw	0
 22408  012766  6E2F               	movwf	(btemp+10)^0,c
 22409  012768  0E00               	movlw	0
 22410  01276A  6E30               	movwf	(btemp+11)^0,c
 22411                           
 22412                           ;stkvar	_a @ sp[(-13)+-8]
 22413  01276C  0EEB               	movlw	-21
 22414  01276E  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22415  012774  0EEC               	movlw	-20
 22416  012776  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22417  01277C  0EED               	movlw	-19
 22418  01277E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22419  012784  0EEE               	movlw	-18
 22420  012786  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22421  01278C                     l6855:
 22422                           
 22423                           ;stkvar	_a @ sp[(-13)+-8]
 22424  01278C  0EED               	movlw	-19
 22425  01278E  8EE3               	bsf	plusw1,7,c
 22426  012790  D018               	goto	l6859
 22427  012792                     l6857:
 22428  012792  0E00               	movlw	0
 22429  012794  6E2D               	movwf	(btemp+8)^0,c
 22430  012796  0E00               	movlw	0
 22431  012798  6E2E               	movwf	(btemp+9)^0,c
 22432  01279A  0E00               	movlw	0
 22433  01279C  6E2F               	movwf	(btemp+10)^0,c
 22434  01279E  0E00               	movlw	0
 22435  0127A0  6E30               	movwf	(btemp+11)^0,c
 22436                           
 22437                           ;stkvar	_a @ sp[(-13)+-8]
 22438  0127A2  0EEB               	movlw	-21
 22439  0127A4  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22440  0127AA  0EEC               	movlw	-20
 22441  0127AC  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22442  0127B2  0EED               	movlw	-19
 22443  0127B4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22444  0127BA  0EEE               	movlw	-18
 22445  0127BC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22446  0127C2                     l6859:
 22447                           
 22448                           ;stkvar	_aexp @ sp[(-13)+11]
 22449  0127C2  0EFE               	movlw	-2
 22450  0127C4  50E3               	movf	plusw1,w,c
 22451  0127C6  B4D8               	btfsc	status,2,c
 22452  0127C8  D004               	goto	u5390
 22453                           
 22454                           ;stkvar	_bexp @ sp[(-13)+10]
 22455  0127CA  0EFD               	movlw	-3
 22456  0127CC  50E3               	movf	plusw1,w,c
 22457  0127CE  A4D8               	btfss	status,2,c
 22458  0127D0  D009               	goto	l6867
 22459  0127D2                     u5390:
 22460  0127D2  0E00               	movlw	0
 22461  0127D4  6E25               	movwf	btemp^0,c
 22462  0127D6  0E00               	movlw	0
 22463  0127D8  6E26               	movwf	(btemp+1)^0,c
 22464  0127DA  0E00               	movlw	0
 22465  0127DC  6E27               	movwf	(btemp+2)^0,c
 22466  0127DE  0E00               	movlw	0
 22467  0127E0  6E28               	movwf	(btemp+3)^0,c
 22468  0127E2  D332               	goto	l2840
 22469  0127E4                     l6867:
 22470                           
 22471                           ;stkvar	_b @ sp[(-13)+-4]
 22472  0127E4  0EEF               	movlw	-17
 22473  0127E6  006F FF8C  F030    	movff	plusw1,btemp+11
 22474                           
 22475                           ;stkvar	_a @ sp[(-13)+-8]
 22476  0127EC  0EED               	movlw	237
 22477  0127EE  24E1               	addwf	fsr1l,w,c
 22478  0127F0  6ED9               	movwf	fsr2l,c
 22479  0127F2  0EFF               	movlw	255
 22480  0127F4  20E2               	addwfc	fsr1h,w,c
 22481  0127F6  6EDA               	movwf	fsr2h,c
 22482  0127F8  50DF               	movf	indf2,w,c
 22483  0127FA  0230               	mulwf	(btemp+11)^0,c
 22484                           
 22485                           ;stkvar	_temp @ sp[(-13)+8]
 22486  0127FC  0EFB               	movlw	-5
 22487  0127FE  006F FFCF FFE3     	movff	prodl,plusw1
 22488  012804  0EFC               	movlw	-4
 22489  012806  006F FFD3 FFE3     	movff	prodh,plusw1
 22490                           
 22491                           ;stkvar	_temp @ sp[(-13)+8]
 22492  01280C  0EFB               	movlw	-5
 22493  01280E  006F FF8C  F030    	movff	plusw1,btemp+11
 22494  012814  0060  F0C0  F029   	movff	btemp+11,btemp+4
 22495  01281A  6A2A               	clrf	(btemp+5)^0,c
 22496  01281C  6A2B               	clrf	(btemp+6)^0,c
 22497  01281E  6A2C               	clrf	(btemp+7)^0,c
 22498                           
 22499                           ;stkvar	_grs @ sp[(-13)+4]
 22500  012820  0EF7               	movlw	-9
 22501  012822  0060  F0A7  FFE3   	movff	btemp+4,plusw1
 22502  012828  0EF8               	movlw	-8
 22503  01282A  0060  F0AB  FFE3   	movff	btemp+5,plusw1
 22504  012830  0EF9               	movlw	-7
 22505  012832  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 22506  012838  0EFA               	movlw	-6
 22507  01283A  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 22508                           
 22509                           ;stkvar	_temp @ sp[(-13)+8]
 22510  012840  0EFC               	movlw	252
 22511  012842  24E1               	addwf	fsr1l,w,c
 22512  012844  6ED9               	movwf	fsr2l,c
 22513  012846  0EFF               	movlw	255
 22514  012848  20E2               	addwfc	fsr1h,w,c
 22515  01284A  6EDA               	movwf	fsr2h,c
 22516  01284C  50DF               	movf	indf2,w,c
 22517  01284E  6E30               	movwf	(btemp+11)^0,c
 22518  012850  0060  F0C0  F029   	movff	btemp+11,btemp+4
 22519  012856  6A2A               	clrf	(btemp+5)^0,c
 22520  012858  6A2B               	clrf	(btemp+6)^0,c
 22521  01285A  6A2C               	clrf	(btemp+7)^0,c
 22522                           
 22523                           ;stkvar	_prod @ sp[(-13)+0]
 22524  01285C  0EF3               	movlw	-13
 22525  01285E  0060  F0A7  FFE3   	movff	btemp+4,plusw1
 22526  012864  0EF4               	movlw	-12
 22527  012866  0060  F0AB  FFE3   	movff	btemp+5,plusw1
 22528  01286C  0EF5               	movlw	-11
 22529  01286E  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 22530  012874  0EF6               	movlw	-10
 22531  012876  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 22532                           
 22533                           ;stkvar	_b @ sp[(-13)+-4]
 22534  01287C  0EF0               	movlw	240
 22535  01287E  24E1               	addwf	fsr1l,w,c
 22536  012880  6ED9               	movwf	fsr2l,c
 22537  012882  0EFF               	movlw	255
 22538  012884  20E2               	addwfc	fsr1h,w,c
 22539  012886  6EDA               	movwf	fsr2h,c
 22540  012888  50DF               	movf	indf2,w,c
 22541  01288A  6E30               	movwf	(btemp+11)^0,c
 22542                           
 22543                           ;stkvar	_a @ sp[(-13)+-8]
 22544  01288C  0EEC               	movlw	236
 22545  01288E  24E1               	addwf	fsr1l,w,c
 22546  012890  6ED9               	movwf	fsr2l,c
 22547  012892  0EFF               	movlw	255
 22548  012894  20E2               	addwfc	fsr1h,w,c
 22549  012896  6EDA               	movwf	fsr2h,c
 22550  012898  50DF               	movf	indf2,w,c
 22551  01289A  0230               	mulwf	(btemp+11)^0,c
 22552                           
 22553                           ;stkvar	_temp @ sp[(-13)+8]
 22554  01289C  0EFB               	movlw	-5
 22555  01289E  006F FFCF FFE3     	movff	prodl,plusw1
 22556  0128A4  0EFC               	movlw	-4
 22557  0128A6  006F FFD3 FFE3     	movff	prodh,plusw1
 22558                           
 22559                           ;stkvar	_grs @ sp[(-13)+4]
 22560  0128AC  50E1               	movf	fsr1l,w,c
 22561  0128AE  0FF7               	addlw	-9
 22562  0128B0  6ED9               	movwf	fsr2l,c
 22563  0128B2  50E2               	movf	fsr1h,w,c
 22564  0128B4  6EDA               	movwf	fsr2h,c
 22565  0128B6  0EFF               	movlw	255
 22566  0128B8  22DA               	addwfc	fsr2h,f,c
 22567                           
 22568                           ;stkvar	_temp @ sp[(-13)+8]
 22569  0128BA  0EFB               	movlw	-5
 22570  0128BC  50E3               	movf	plusw1,w,c
 22571  0128BE  26DE               	addwf	postinc2,f,c
 22572  0128C0  0E00               	movlw	0
 22573  0128C2  22DE               	addwfc	postinc2,f,c
 22574  0128C4  22DE               	addwfc	postinc2,f,c
 22575  0128C6  22DE               	addwfc	postinc2,f,c
 22576                           
 22577                           ;stkvar	_prod @ sp[(-13)+0]
 22578  0128C8  50E1               	movf	fsr1l,w,c
 22579  0128CA  0FF3               	addlw	-13
 22580  0128CC  6ED9               	movwf	fsr2l,c
 22581  0128CE  50E2               	movf	fsr1h,w,c
 22582  0128D0  6EDA               	movwf	fsr2h,c
 22583  0128D2  0EFF               	movlw	255
 22584  0128D4  22DA               	addwfc	fsr2h,f,c
 22585                           
 22586                           ;stkvar	_temp @ sp[(-13)+8]
 22587  0128D6  0EFC               	movlw	252
 22588  0128D8  24E1               	addwf	fsr1l,w,c
 22589  0128DA  6EE9               	movwf	fsr0l,c
 22590  0128DC  0EFF               	movlw	255
 22591  0128DE  20E2               	addwfc	fsr1h,w,c
 22592  0128E0  6EEA               	movwf	fsr0h,c
 22593  0128E2  50EF               	movf	indf0,w,c
 22594  0128E4  26DE               	addwf	postinc2,f,c
 22595  0128E6  0E00               	movlw	0
 22596  0128E8  22DE               	addwfc	postinc2,f,c
 22597  0128EA  22DE               	addwfc	postinc2,f,c
 22598  0128EC  22DE               	addwfc	postinc2,f,c
 22599                           
 22600                           ;stkvar	_b @ sp[(-13)+-4]
 22601  0128EE  0EF1               	movlw	241
 22602  0128F0  24E1               	addwf	fsr1l,w,c
 22603  0128F2  6ED9               	movwf	fsr2l,c
 22604  0128F4  0EFF               	movlw	255
 22605  0128F6  20E2               	addwfc	fsr1h,w,c
 22606  0128F8  6EDA               	movwf	fsr2h,c
 22607  0128FA  50DF               	movf	indf2,w,c
 22608  0128FC  6E30               	movwf	(btemp+11)^0,c
 22609                           
 22610                           ;stkvar	_a @ sp[(-13)+-8]
 22611  0128FE  0EEB               	movlw	-21
 22612  012900  50E3               	movf	plusw1,w,c
 22613  012902  0230               	mulwf	(btemp+11)^0,c
 22614                           
 22615                           ;stkvar	_temp @ sp[(-13)+8]
 22616  012904  0EFB               	movlw	-5
 22617  012906  006F FFCF FFE3     	movff	prodl,plusw1
 22618  01290C  0EFC               	movlw	-4
 22619  01290E  006F FFD3 FFE3     	movff	prodh,plusw1
 22620                           
 22621                           ;stkvar	_grs @ sp[(-13)+4]
 22622  012914  50E1               	movf	fsr1l,w,c
 22623  012916  0FF7               	addlw	-9
 22624  012918  6ED9               	movwf	fsr2l,c
 22625  01291A  50E2               	movf	fsr1h,w,c
 22626  01291C  6EDA               	movwf	fsr2h,c
 22627  01291E  0EFF               	movlw	255
 22628  012920  22DA               	addwfc	fsr2h,f,c
 22629                           
 22630                           ;stkvar	_temp @ sp[(-13)+8]
 22631  012922  0EFB               	movlw	-5
 22632  012924  50E3               	movf	plusw1,w,c
 22633  012926  26DE               	addwf	postinc2,f,c
 22634  012928  0E00               	movlw	0
 22635  01292A  22DE               	addwfc	postinc2,f,c
 22636  01292C  22DE               	addwfc	postinc2,f,c
 22637  01292E  22DE               	addwfc	postinc2,f,c
 22638                           
 22639                           ;stkvar	_prod @ sp[(-13)+0]
 22640  012930  50E1               	movf	fsr1l,w,c
 22641  012932  0FF3               	addlw	-13
 22642  012934  6ED9               	movwf	fsr2l,c
 22643  012936  50E2               	movf	fsr1h,w,c
 22644  012938  6EDA               	movwf	fsr2h,c
 22645  01293A  0EFF               	movlw	255
 22646  01293C  22DA               	addwfc	fsr2h,f,c
 22647                           
 22648                           ;stkvar	_temp @ sp[(-13)+8]
 22649  01293E  0EFC               	movlw	252
 22650  012940  24E1               	addwf	fsr1l,w,c
 22651  012942  6EE9               	movwf	fsr0l,c
 22652  012944  0EFF               	movlw	255
 22653  012946  20E2               	addwfc	fsr1h,w,c
 22654  012948  6EEA               	movwf	fsr0h,c
 22655  01294A  50EF               	movf	indf0,w,c
 22656  01294C  26DE               	addwf	postinc2,f,c
 22657  01294E  0E00               	movlw	0
 22658  012950  22DE               	addwfc	postinc2,f,c
 22659  012952  22DE               	addwfc	postinc2,f,c
 22660  012954  22DE               	addwfc	postinc2,f,c
 22661                           
 22662                           ;stkvar	_grs @ sp[(-13)+4]
 22663  012956  50E1               	movf	fsr1l,w,c
 22664  012958  0FF7               	addlw	-9
 22665  01295A  6ED9               	movwf	fsr2l,c
 22666  01295C  50E2               	movf	fsr1h,w,c
 22667  01295E  6EDA               	movwf	fsr2h,c
 22668  012960  0EFF               	movlw	255
 22669  012962  22DA               	addwfc	fsr2h,f,c
 22670  012964  0E08               	movlw	8
 22671  012966                     u5405:
 22672  012966  90D8               	bcf	status,0,c
 22673  012968  36DE               	rlcf	postinc2,f,c
 22674  01296A  36DE               	rlcf	postinc2,f,c
 22675  01296C  36DE               	rlcf	postinc2,f,c
 22676  01296E  36DD               	rlcf	postdec2,f,c
 22677  012970  52DD               	movf	postdec2,f,c
 22678  012972  52DD               	movf	postdec2,f,c
 22679  012974  2EE8               	decfsz	wreg,f,c
 22680  012976  D7F7               	goto	u5405
 22681                           
 22682                           ;stkvar	_b @ sp[(-13)+-4]
 22683  012978  0EF0               	movlw	240
 22684  01297A  24E1               	addwf	fsr1l,w,c
 22685  01297C  6ED9               	movwf	fsr2l,c
 22686  01297E  0EFF               	movlw	255
 22687  012980  20E2               	addwfc	fsr1h,w,c
 22688  012982  6EDA               	movwf	fsr2h,c
 22689  012984  50DF               	movf	indf2,w,c
 22690  012986  6E30               	movwf	(btemp+11)^0,c
 22691                           
 22692                           ;stkvar	_a @ sp[(-13)+-8]
 22693  012988  0EEB               	movlw	-21
 22694  01298A  50E3               	movf	plusw1,w,c
 22695  01298C  0230               	mulwf	(btemp+11)^0,c
 22696                           
 22697                           ;stkvar	_temp @ sp[(-13)+8]
 22698  01298E  0EFB               	movlw	-5
 22699  012990  006F FFCF FFE3     	movff	prodl,plusw1
 22700  012996  0EFC               	movlw	-4
 22701  012998  006F FFD3 FFE3     	movff	prodh,plusw1
 22702                           
 22703                           ;stkvar	_temp @ sp[(-13)+8]
 22704  01299E  0EFB               	movlw	-5
 22705  0129A0  006F FF8C  F02F    	movff	plusw1,btemp+10
 22706  0129A6  0EFC               	movlw	-4
 22707  0129A8  006F FF8C  F030    	movff	plusw1,btemp+11
 22708                           
 22709                           ;stkvar	_grs @ sp[(-13)+4]
 22710  0129AE  50E1               	movf	fsr1l,w,c
 22711  0129B0  0FF7               	addlw	-9
 22712  0129B2  6ED9               	movwf	fsr2l,c
 22713  0129B4  50E2               	movf	fsr1h,w,c
 22714  0129B6  6EDA               	movwf	fsr2h,c
 22715  0129B8  0EFF               	movlw	255
 22716  0129BA  22DA               	addwfc	fsr2h,f,c
 22717  0129BC  502F               	movf	(btemp+10)^0,w,c
 22718  0129BE  26DE               	addwf	postinc2,f,c
 22719  0129C0  5030               	movf	(btemp+11)^0,w,c
 22720  0129C2  22DE               	addwfc	postinc2,f,c
 22721  0129C4  0E00               	movlw	0
 22722  0129C6  22DE               	addwfc	postinc2,f,c
 22723  0129C8  22DE               	addwfc	postinc2,f,c
 22724                           
 22725                           ;stkvar	_b @ sp[(-13)+-4]
 22726  0129CA  0EEF               	movlw	-17
 22727  0129CC  006F FF8C  F030    	movff	plusw1,btemp+11
 22728                           
 22729                           ;stkvar	_a @ sp[(-13)+-8]
 22730  0129D2  0EEC               	movlw	236
 22731  0129D4  24E1               	addwf	fsr1l,w,c
 22732  0129D6  6ED9               	movwf	fsr2l,c
 22733  0129D8  0EFF               	movlw	255
 22734  0129DA  20E2               	addwfc	fsr1h,w,c
 22735  0129DC  6EDA               	movwf	fsr2h,c
 22736  0129DE  50DF               	movf	indf2,w,c
 22737  0129E0  0230               	mulwf	(btemp+11)^0,c
 22738                           
 22739                           ;stkvar	_temp @ sp[(-13)+8]
 22740  0129E2  0EFB               	movlw	-5
 22741  0129E4  006F FFCF FFE3     	movff	prodl,plusw1
 22742  0129EA  0EFC               	movlw	-4
 22743  0129EC  006F FFD3 FFE3     	movff	prodh,plusw1
 22744                           
 22745                           ;stkvar	_temp @ sp[(-13)+8]
 22746  0129F2  0EFB               	movlw	-5
 22747  0129F4  006F FF8C  F02F    	movff	plusw1,btemp+10
 22748  0129FA  0EFC               	movlw	-4
 22749  0129FC  006F FF8C  F030    	movff	plusw1,btemp+11
 22750                           
 22751                           ;stkvar	_grs @ sp[(-13)+4]
 22752  012A02  50E1               	movf	fsr1l,w,c
 22753  012A04  0FF7               	addlw	-9
 22754  012A06  6ED9               	movwf	fsr2l,c
 22755  012A08  50E2               	movf	fsr1h,w,c
 22756  012A0A  6EDA               	movwf	fsr2h,c
 22757  012A0C  0EFF               	movlw	255
 22758  012A0E  22DA               	addwfc	fsr2h,f,c
 22759  012A10  502F               	movf	(btemp+10)^0,w,c
 22760  012A12  26DE               	addwf	postinc2,f,c
 22761  012A14  5030               	movf	(btemp+11)^0,w,c
 22762  012A16  22DE               	addwfc	postinc2,f,c
 22763  012A18  0E00               	movlw	0
 22764  012A1A  22DE               	addwfc	postinc2,f,c
 22765  012A1C  22DE               	addwfc	postinc2,f,c
 22766                           
 22767                           ;stkvar	_grs @ sp[(-13)+4]
 22768  012A1E  50E1               	movf	fsr1l,w,c
 22769  012A20  0FF7               	addlw	-9
 22770  012A22  6ED9               	movwf	fsr2l,c
 22771  012A24  50E2               	movf	fsr1h,w,c
 22772  012A26  6EDA               	movwf	fsr2h,c
 22773  012A28  0EFF               	movlw	255
 22774  012A2A  22DA               	addwfc	fsr2h,f,c
 22775  012A2C  0E08               	movlw	8
 22776  012A2E                     u5415:
 22777  012A2E  90D8               	bcf	status,0,c
 22778  012A30  36DE               	rlcf	postinc2,f,c
 22779  012A32  36DE               	rlcf	postinc2,f,c
 22780  012A34  36DE               	rlcf	postinc2,f,c
 22781  012A36  36DD               	rlcf	postdec2,f,c
 22782  012A38  52DD               	movf	postdec2,f,c
 22783  012A3A  52DD               	movf	postdec2,f,c
 22784  012A3C  2EE8               	decfsz	wreg,f,c
 22785  012A3E  D7F7               	goto	u5415
 22786                           
 22787                           ;stkvar	_b @ sp[(-13)+-4]
 22788  012A40  0EEF               	movlw	-17
 22789  012A42  006F FF8C  F030    	movff	plusw1,btemp+11
 22790                           
 22791                           ;stkvar	_a @ sp[(-13)+-8]
 22792  012A48  0EEB               	movlw	-21
 22793  012A4A  50E3               	movf	plusw1,w,c
 22794  012A4C  0230               	mulwf	(btemp+11)^0,c
 22795                           
 22796                           ;stkvar	_temp @ sp[(-13)+8]
 22797  012A4E  0EFB               	movlw	-5
 22798  012A50  006F FFCF FFE3     	movff	prodl,plusw1
 22799  012A56  0EFC               	movlw	-4
 22800  012A58  006F FFD3 FFE3     	movff	prodh,plusw1
 22801                           
 22802                           ;stkvar	_temp @ sp[(-13)+8]
 22803  012A5E  0EFB               	movlw	-5
 22804  012A60  006F FF8C  F02F    	movff	plusw1,btemp+10
 22805  012A66  0EFC               	movlw	-4
 22806  012A68  006F FF8C  F030    	movff	plusw1,btemp+11
 22807                           
 22808                           ;stkvar	_grs @ sp[(-13)+4]
 22809  012A6E  50E1               	movf	fsr1l,w,c
 22810  012A70  0FF7               	addlw	-9
 22811  012A72  6ED9               	movwf	fsr2l,c
 22812  012A74  50E2               	movf	fsr1h,w,c
 22813  012A76  6EDA               	movwf	fsr2h,c
 22814  012A78  0EFF               	movlw	255
 22815  012A7A  22DA               	addwfc	fsr2h,f,c
 22816  012A7C  502F               	movf	(btemp+10)^0,w,c
 22817  012A7E  26DE               	addwf	postinc2,f,c
 22818  012A80  5030               	movf	(btemp+11)^0,w,c
 22819  012A82  22DE               	addwfc	postinc2,f,c
 22820  012A84  0E00               	movlw	0
 22821  012A86  22DE               	addwfc	postinc2,f,c
 22822  012A88  22DE               	addwfc	postinc2,f,c
 22823                           
 22824                           ;stkvar	_b @ sp[(-13)+-4]
 22825  012A8A  0EF0               	movlw	240
 22826  012A8C  24E1               	addwf	fsr1l,w,c
 22827  012A8E  6ED9               	movwf	fsr2l,c
 22828  012A90  0EFF               	movlw	255
 22829  012A92  20E2               	addwfc	fsr1h,w,c
 22830  012A94  6EDA               	movwf	fsr2h,c
 22831  012A96  50DF               	movf	indf2,w,c
 22832  012A98  6E30               	movwf	(btemp+11)^0,c
 22833                           
 22834                           ;stkvar	_a @ sp[(-13)+-8]
 22835  012A9A  0EED               	movlw	237
 22836  012A9C  24E1               	addwf	fsr1l,w,c
 22837  012A9E  6ED9               	movwf	fsr2l,c
 22838  012AA0  0EFF               	movlw	255
 22839  012AA2  20E2               	addwfc	fsr1h,w,c
 22840  012AA4  6EDA               	movwf	fsr2h,c
 22841  012AA6  50DF               	movf	indf2,w,c
 22842  012AA8  0230               	mulwf	(btemp+11)^0,c
 22843                           
 22844                           ;stkvar	_temp @ sp[(-13)+8]
 22845  012AAA  0EFB               	movlw	-5
 22846  012AAC  006F FFCF FFE3     	movff	prodl,plusw1
 22847  012AB2  0EFC               	movlw	-4
 22848  012AB4  006F FFD3 FFE3     	movff	prodh,plusw1
 22849                           
 22850                           ;stkvar	_temp @ sp[(-13)+8]
 22851  012ABA  0EFB               	movlw	-5
 22852  012ABC  006F FF8C  F02F    	movff	plusw1,btemp+10
 22853  012AC2  0EFC               	movlw	-4
 22854  012AC4  006F FF8C  F030    	movff	plusw1,btemp+11
 22855                           
 22856                           ;stkvar	_prod @ sp[(-13)+0]
 22857  012ACA  50E1               	movf	fsr1l,w,c
 22858  012ACC  0FF3               	addlw	-13
 22859  012ACE  6ED9               	movwf	fsr2l,c
 22860  012AD0  50E2               	movf	fsr1h,w,c
 22861  012AD2  6EDA               	movwf	fsr2h,c
 22862  012AD4  0EFF               	movlw	255
 22863  012AD6  22DA               	addwfc	fsr2h,f,c
 22864  012AD8  502F               	movf	(btemp+10)^0,w,c
 22865  012ADA  26DE               	addwf	postinc2,f,c
 22866  012ADC  5030               	movf	(btemp+11)^0,w,c
 22867  012ADE  22DE               	addwfc	postinc2,f,c
 22868  012AE0  0E00               	movlw	0
 22869  012AE2  22DE               	addwfc	postinc2,f,c
 22870  012AE4  22DE               	addwfc	postinc2,f,c
 22871                           
 22872                           ;stkvar	_b @ sp[(-13)+-4]
 22873  012AE6  0EF1               	movlw	241
 22874  012AE8  24E1               	addwf	fsr1l,w,c
 22875  012AEA  6ED9               	movwf	fsr2l,c
 22876  012AEC  0EFF               	movlw	255
 22877  012AEE  20E2               	addwfc	fsr1h,w,c
 22878  012AF0  6EDA               	movwf	fsr2h,c
 22879  012AF2  50DF               	movf	indf2,w,c
 22880  012AF4  6E30               	movwf	(btemp+11)^0,c
 22881                           
 22882                           ;stkvar	_a @ sp[(-13)+-8]
 22883  012AF6  0EEC               	movlw	236
 22884  012AF8  24E1               	addwf	fsr1l,w,c
 22885  012AFA  6ED9               	movwf	fsr2l,c
 22886  012AFC  0EFF               	movlw	255
 22887  012AFE  20E2               	addwfc	fsr1h,w,c
 22888  012B00  6EDA               	movwf	fsr2h,c
 22889  012B02  50DF               	movf	indf2,w,c
 22890  012B04  0230               	mulwf	(btemp+11)^0,c
 22891                           
 22892                           ;stkvar	_temp @ sp[(-13)+8]
 22893  012B06  0EFB               	movlw	-5
 22894  012B08  006F FFCF FFE3     	movff	prodl,plusw1
 22895  012B0E  0EFC               	movlw	-4
 22896  012B10  006F FFD3 FFE3     	movff	prodh,plusw1
 22897                           
 22898                           ;stkvar	_temp @ sp[(-13)+8]
 22899  012B16  0EFB               	movlw	-5
 22900  012B18  006F FF8C  F02F    	movff	plusw1,btemp+10
 22901  012B1E  0EFC               	movlw	-4
 22902  012B20  006F FF8C  F030    	movff	plusw1,btemp+11
 22903                           
 22904                           ;stkvar	_prod @ sp[(-13)+0]
 22905  012B26  50E1               	movf	fsr1l,w,c
 22906  012B28  0FF3               	addlw	-13
 22907  012B2A  6ED9               	movwf	fsr2l,c
 22908  012B2C  50E2               	movf	fsr1h,w,c
 22909  012B2E  6EDA               	movwf	fsr2h,c
 22910  012B30  0EFF               	movlw	255
 22911  012B32  22DA               	addwfc	fsr2h,f,c
 22912  012B34  502F               	movf	(btemp+10)^0,w,c
 22913  012B36  26DE               	addwf	postinc2,f,c
 22914  012B38  5030               	movf	(btemp+11)^0,w,c
 22915  012B3A  22DE               	addwfc	postinc2,f,c
 22916  012B3C  0E00               	movlw	0
 22917  012B3E  22DE               	addwfc	postinc2,f,c
 22918  012B40  22DE               	addwfc	postinc2,f,c
 22919                           
 22920                           ;stkvar	_b @ sp[(-13)+-4]
 22921  012B42  0EF1               	movlw	241
 22922  012B44  24E1               	addwf	fsr1l,w,c
 22923  012B46  6ED9               	movwf	fsr2l,c
 22924  012B48  0EFF               	movlw	255
 22925  012B4A  20E2               	addwfc	fsr1h,w,c
 22926  012B4C  6EDA               	movwf	fsr2h,c
 22927  012B4E  50DF               	movf	indf2,w,c
 22928  012B50  6E30               	movwf	(btemp+11)^0,c
 22929                           
 22930                           ;stkvar	_a @ sp[(-13)+-8]
 22931  012B52  0EED               	movlw	237
 22932  012B54  24E1               	addwf	fsr1l,w,c
 22933  012B56  6ED9               	movwf	fsr2l,c
 22934  012B58  0EFF               	movlw	255
 22935  012B5A  20E2               	addwfc	fsr1h,w,c
 22936  012B5C  6EDA               	movwf	fsr2h,c
 22937  012B5E  50DF               	movf	indf2,w,c
 22938  012B60  0230               	mulwf	(btemp+11)^0,c
 22939                           
 22940                           ;stkvar	_temp @ sp[(-13)+8]
 22941  012B62  0EFB               	movlw	-5
 22942  012B64  006F FFCF FFE3     	movff	prodl,plusw1
 22943  012B6A  0EFC               	movlw	-4
 22944  012B6C  006F FFD3 FFE3     	movff	prodh,plusw1
 22945                           
 22946                           ;stkvar	_temp @ sp[(-13)+8]
 22947  012B72  0EFB               	movlw	-5
 22948  012B74  006F FF8C  F02F    	movff	plusw1,btemp+10
 22949  012B7A  0EFC               	movlw	-4
 22950  012B7C  006F FF8C  F030    	movff	plusw1,btemp+11
 22951  012B82  502F               	movf	(btemp+10)^0,w,c
 22952  012B84  6E29               	movwf	(btemp+4)^0,c
 22953  012B86  5030               	movf	(btemp+11)^0,w,c
 22954  012B88  6E2A               	movwf	(btemp+5)^0,c
 22955  012B8A  6A2B               	clrf	(btemp+6)^0,c
 22956  012B8C  6A2C               	clrf	(btemp+7)^0,c
 22957  012B8E  0060  F0AC  F02C   	movff	btemp+6,btemp+7
 22958  012B94  0060  F0A8  F02B   	movff	btemp+5,btemp+6
 22959  012B9A  0060  F0A4  F02A   	movff	btemp+4,btemp+5
 22960  012BA0  6A29               	clrf	(btemp+4)^0,c
 22961                           
 22962                           ;stkvar	_prod @ sp[(-13)+0]
 22963  012BA2  50E1               	movf	fsr1l,w,c
 22964  012BA4  0FF3               	addlw	-13
 22965  012BA6  6ED9               	movwf	fsr2l,c
 22966  012BA8  50E2               	movf	fsr1h,w,c
 22967  012BAA  6EDA               	movwf	fsr2h,c
 22968  012BAC  0EFF               	movlw	255
 22969  012BAE  22DA               	addwfc	fsr2h,f,c
 22970  012BB0  5029               	movf	(btemp+4)^0,w,c
 22971  012BB2  26DE               	addwf	postinc2,f,c
 22972  012BB4  502A               	movf	(btemp+5)^0,w,c
 22973  012BB6  22DE               	addwfc	postinc2,f,c
 22974  012BB8  502B               	movf	(btemp+6)^0,w,c
 22975  012BBA  22DE               	addwfc	postinc2,f,c
 22976  012BBC  502C               	movf	(btemp+7)^0,w,c
 22977  012BBE  22DE               	addwfc	postinc2,f,c
 22978                           
 22979                           ;stkvar	_prod @ sp[(-13)+0]
 22980  012BC0  50E1               	movf	fsr1l,w,c
 22981  012BC2  0FF3               	addlw	-13
 22982  012BC4  6ED9               	movwf	fsr2l,c
 22983  012BC6  50E2               	movf	fsr1h,w,c
 22984  012BC8  6EDA               	movwf	fsr2h,c
 22985  012BCA  0EFF               	movlw	255
 22986  012BCC  22DA               	addwfc	fsr2h,f,c
 22987                           
 22988                           ;stkvar	_grs @ sp[(-13)+4]
 22989  012BCE  0EFA               	movlw	250
 22990  012BD0  24E1               	addwf	fsr1l,w,c
 22991  012BD2  6EE9               	movwf	fsr0l,c
 22992  012BD4  0EFF               	movlw	255
 22993  012BD6  20E2               	addwfc	fsr1h,w,c
 22994  012BD8  6EEA               	movwf	fsr0h,c
 22995  012BDA  50EF               	movf	indf0,w,c
 22996  012BDC  26DE               	addwf	postinc2,f,c
 22997  012BDE  0E00               	movlw	0
 22998  012BE0  22DE               	addwfc	postinc2,f,c
 22999  012BE2  22DE               	addwfc	postinc2,f,c
 23000  012BE4  22DE               	addwfc	postinc2,f,c
 23001                           
 23002                           ;stkvar	_grs @ sp[(-13)+4]
 23003  012BE6  50E1               	movf	fsr1l,w,c
 23004  012BE8  0FF7               	addlw	-9
 23005  012BEA  6ED9               	movwf	fsr2l,c
 23006  012BEC  50E2               	movf	fsr1h,w,c
 23007  012BEE  6EDA               	movwf	fsr2h,c
 23008  012BF0  0EFF               	movlw	255
 23009  012BF2  22DA               	addwfc	fsr2h,f,c
 23010  012BF4  0E08               	movlw	8
 23011  012BF6                     u5425:
 23012  012BF6  90D8               	bcf	status,0,c
 23013  012BF8  36DE               	rlcf	postinc2,f,c
 23014  012BFA  36DE               	rlcf	postinc2,f,c
 23015  012BFC  36DE               	rlcf	postinc2,f,c
 23016  012BFE  36DD               	rlcf	postdec2,f,c
 23017  012C00  52DD               	movf	postdec2,f,c
 23018  012C02  52DD               	movf	postdec2,f,c
 23019  012C04  2EE8               	decfsz	wreg,f,c
 23020  012C06  D7F7               	goto	u5425
 23021  012C08  0E82               	movlw	130
 23022  012C0A  6E2F               	movwf	(btemp+10)^0,c
 23023  012C0C  0EFF               	movlw	255
 23024  012C0E  6E30               	movwf	(btemp+11)^0,c
 23025                           
 23026                           ;stkvar	_bexp @ sp[(-13)+10]
 23027  012C10  0EFD               	movlw	-3
 23028  012C12  50E3               	movf	plusw1,w,c
 23029  012C14  6E2D               	movwf	(btemp+8)^0,c
 23030  012C16  6A2E               	clrf	(btemp+9)^0,c
 23031                           
 23032                           ;stkvar	_aexp @ sp[(-13)+11]
 23033  012C18  0EFE               	movlw	-2
 23034  012C1A  50E3               	movf	plusw1,w,c
 23035  012C1C  262D               	addwf	(btemp+8)^0,f,c
 23036  012C1E  0E00               	movlw	0
 23037  012C20  222E               	addwfc	(btemp+9)^0,f,c
 23038  012C22  502F               	movf	(btemp+10)^0,w,c
 23039  012C24  262D               	addwf	(btemp+8)^0,f,c
 23040  012C26  5030               	movf	(btemp+11)^0,w,c
 23041  012C28  222E               	addwfc	(btemp+9)^0,f,c
 23042                           
 23043                           ;stkvar	_temp @ sp[(-13)+8]
 23044  012C2A  0EFB               	movlw	-5
 23045  012C2C  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 23046  012C32  0EFC               	movlw	-4
 23047  012C34  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 23048  012C3A  D021               	goto	l6929
 23049  012C3C                     l6919:
 23050                           
 23051                           ;stkvar	_prod @ sp[(-13)+0]
 23052  012C3C  90D8               	bcf	status,0,c
 23053  012C3E  0EF3               	movlw	-13
 23054  012C40  36E3               	rlcf	plusw1,f,c
 23055  012C42  0EF4               	movlw	-12
 23056  012C44  36E3               	rlcf	plusw1,f,c
 23057  012C46  0EF5               	movlw	-11
 23058  012C48  36E3               	rlcf	plusw1,f,c
 23059  012C4A  0EF6               	movlw	-10
 23060  012C4C  36E3               	rlcf	plusw1,f,c
 23061                           
 23062                           ;stkvar	_grs @ sp[(-13)+4]
 23063  012C4E  0EFA               	movlw	-6
 23064  012C50  AEE3               	btfss	plusw1,7,c
 23065  012C52  D002               	goto	l6925
 23066                           
 23067                           ;stkvar	_prod @ sp[(-13)+0]
 23068  012C54  0EF3               	movlw	-13
 23069  012C56  80E3               	bsf	plusw1,0,c
 23070  012C58                     l6925:
 23071                           
 23072                           ;stkvar	_grs @ sp[(-13)+4]
 23073  012C58  90D8               	bcf	status,0,c
 23074  012C5A  0EF7               	movlw	-9
 23075  012C5C  36E3               	rlcf	plusw1,f,c
 23076  012C5E  0EF8               	movlw	-8
 23077  012C60  36E3               	rlcf	plusw1,f,c
 23078  012C62  0EF9               	movlw	-7
 23079  012C64  36E3               	rlcf	plusw1,f,c
 23080  012C66  0EFA               	movlw	-6
 23081  012C68  36E3               	rlcf	plusw1,f,c
 23082                           
 23083                           ;stkvar	_temp @ sp[(-13)+8]
 23084  012C6A  50E1               	movf	fsr1l,w,c
 23085  012C6C  0FFB               	addlw	-5
 23086  012C6E  6ED9               	movwf	fsr2l,c
 23087  012C70  50E2               	movf	fsr1h,w,c
 23088  012C72  6EDA               	movwf	fsr2h,c
 23089  012C74  0EFF               	movlw	255
 23090  012C76  22DA               	addwfc	fsr2h,f,c
 23091  012C78  06DE               	decf	postinc2,f,c
 23092  012C7A  0E00               	movlw	0
 23093  012C7C  5ADD               	subwfb	postdec2,f,c
 23094  012C7E                     l6929:
 23095                           
 23096                           ;stkvar	_prod @ sp[(-13)+0]
 23097  012C7E  0EF5               	movlw	-11
 23098  012C80  AEE3               	btfss	plusw1,7,c
 23099  012C82  D7DC               	goto	l6919
 23100                           
 23101                           ;stkvar	_aexp @ sp[(-13)+11]
 23102  012C84  0EFE               	movlw	-2
 23103  012C86  6AE3               	clrf	plusw1,c
 23104                           
 23105                           ;stkvar	_grs @ sp[(-13)+4]
 23106  012C88  0EFA               	movlw	-6
 23107  012C8A  AEE3               	btfss	plusw1,7,c
 23108  012C8C  D020               	goto	l6943
 23109                           
 23110                           ;stkvar	_grs @ sp[(-13)+4]
 23111  012C8E  50E1               	movf	fsr1l,w,c
 23112  012C90  0FF7               	addlw	-9
 23113  012C92  6ED9               	movwf	fsr2l,c
 23114  012C94  50E2               	movf	fsr1h,w,c
 23115  012C96  6EDA               	movwf	fsr2h,c
 23116  012C98  0EFF               	movlw	255
 23117  012C9A  22DA               	addwfc	fsr2h,f,c
 23118  012C9C  0EFF               	movlw	255
 23119  012C9E  14DE               	andwf	postinc2,w,c
 23120  012CA0  6E2D               	movwf	(btemp+8)^0,c
 23121  012CA2  0EFF               	movlw	255
 23122  012CA4  14DE               	andwf	postinc2,w,c
 23123  012CA6  6E2E               	movwf	(btemp+9)^0,c
 23124  012CA8  0EFF               	movlw	255
 23125  012CAA  14DE               	andwf	postinc2,w,c
 23126  012CAC  6E2F               	movwf	(btemp+10)^0,c
 23127  012CAE  0E7F               	movlw	127
 23128  012CB0  14DE               	andwf	postinc2,w,c
 23129  012CB2  6E30               	movwf	(btemp+11)^0,c
 23130  012CB4  502D               	movf	(btemp+8)^0,w,c
 23131  012CB6  102E               	iorwf	(btemp+9)^0,w,c
 23132  012CB8  102F               	iorwf	(btemp+10)^0,w,c
 23133  012CBA  1030               	iorwf	(btemp+11)^0,w,c
 23134  012CBC  B4D8               	btfsc	status,2,c
 23135  012CBE  D004               	goto	l6939
 23136  012CC0                     u5460:
 23137                           
 23138                           ;stkvar	_aexp @ sp[(-13)+11]
 23139  012CC0  0EFE               	movlw	-2
 23140  012CC2  6AE3               	clrf	plusw1,c
 23141  012CC4  2AE3               	incf	plusw1,f,c
 23142  012CC6  D003               	goto	l6943
 23143  012CC8                     l6939:
 23144                           
 23145                           ;stkvar	_prod @ sp[(-13)+0]
 23146  012CC8  0EF3               	movlw	-13
 23147  012CCA  B0E3               	btfsc	plusw1,0,c
 23148  012CCC  D7F9               	goto	u5460
 23149  012CCE                     l6943:
 23150                           
 23151                           ;stkvar	_aexp @ sp[(-13)+11]
 23152  012CCE  0EFE               	movlw	-2
 23153  012CD0  50E3               	movf	plusw1,w,c
 23154  012CD2  B4D8               	btfsc	status,2,c
 23155  012CD4  D036               	goto	l6953
 23156                           
 23157                           ;stkvar	_prod @ sp[(-13)+0]
 23158  012CD6  50E1               	movf	fsr1l,w,c
 23159  012CD8  0FF3               	addlw	-13
 23160  012CDA  6ED9               	movwf	fsr2l,c
 23161  012CDC  50E2               	movf	fsr1h,w,c
 23162  012CDE  6EDA               	movwf	fsr2h,c
 23163  012CE0  0EFF               	movlw	255
 23164  012CE2  22DA               	addwfc	fsr2h,f,c
 23165  012CE4  2ADE               	incf	postinc2,f,c
 23166  012CE6  0E00               	movlw	0
 23167  012CE8  22DE               	addwfc	postinc2,f,c
 23168  012CEA  22DE               	addwfc	postinc2,f,c
 23169  012CEC  22DE               	addwfc	postinc2,f,c
 23170                           
 23171                           ;stkvar	_prod @ sp[(-13)+0]
 23172  012CEE  0EF6               	movlw	-10
 23173  012CF0  A0E3               	btfss	plusw1,0,c
 23174  012CF2  D027               	goto	l6953
 23175  012CF4  0E01               	movlw	1
 23176  012CF6  6E30               	movwf	(btemp+11)^0,c
 23177                           
 23178                           ;stkvar	_prod @ sp[(-13)+0]
 23179  012CF8  50E1               	movf	fsr1l,w,c
 23180  012CFA  0FF3               	addlw	-13
 23181  012CFC  6ED9               	movwf	fsr2l,c
 23182  012CFE  50E2               	movf	fsr1h,w,c
 23183  012D00  6EDA               	movwf	fsr2h,c
 23184  012D02  0EFF               	movlw	255
 23185  012D04  22DA               	addwfc	fsr2h,f,c
 23186  012D06  2830               	incf	(btemp+11)^0,w,c
 23187  012D08  52DE               	movf	postinc2,f,c
 23188  012D0A  D008               	goto	u5500
 23189  012D0C                     u5505:
 23190  012D0C  52DE               	movf	postinc2,f,c
 23191  012D0E  90D8               	bcf	status,0,c
 23192  012D10  BEDC               	btfsc	preinc2,7,c
 23193  012D12  80D8               	bsf	status,0,c
 23194  012D14  32DD               	rrcf	postdec2,f,c
 23195  012D16  32DD               	rrcf	postdec2,f,c
 23196  012D18  32DD               	rrcf	postdec2,f,c
 23197  012D1A  32DE               	rrcf	postinc2,f,c
 23198  012D1C                     u5500:
 23199  012D1C  2EE8               	decfsz	wreg,f,c
 23200  012D1E  D7F6               	goto	u5505
 23201                           
 23202                           ;stkvar	_temp @ sp[(-13)+8]
 23203  012D20  0EFB               	movlw	-5
 23204  012D22  50E3               	movf	plusw1,w,c
 23205  012D24  0F01               	addlw	1
 23206  012D26  6E25               	movwf	btemp^0,c
 23207  012D28  0EFB               	movlw	-5
 23208  012D2A  0060  F097  FFE3   	movff	btemp,plusw1
 23209  012D30  6A25               	clrf	btemp^0,c
 23210  012D32  0EFC               	movlw	-4
 23211  012D34  50E3               	movf	plusw1,w,c
 23212  012D36  2025               	addwfc	btemp^0,w,c
 23213  012D38  6E25               	movwf	btemp^0,c
 23214  012D3A  0EFC               	movlw	-4
 23215  012D3C  0060  F097  FFE3   	movff	btemp,plusw1
 23216  012D42                     l6953:
 23217                           
 23218                           ;stkvar	_temp @ sp[(-13)+8]
 23219  012D42  0EFC               	movlw	-4
 23220  012D44  BEE3               	btfsc	plusw1,7,c
 23221  012D46  D020               	goto	l6957
 23222  012D48  0EFC               	movlw	-4
 23223  012D4A  50E3               	movf	plusw1,w,c
 23224  012D4C  E104               	bnz	u5510
 23225  012D4E  0EFB               	movlw	-5
 23226  012D50  28E3               	incf	plusw1,w,c
 23227  012D52  A0D8               	btfss	status,0,c
 23228  012D54  D019               	goto	l6957
 23229  012D56                     u5510:
 23230  012D56  0E00               	movlw	0
 23231  012D58  6E2D               	movwf	(btemp+8)^0,c
 23232  012D5A  0E00               	movlw	0
 23233  012D5C  6E2E               	movwf	(btemp+9)^0,c
 23234  012D5E  0E80               	movlw	128
 23235  012D60  6E2F               	movwf	(btemp+10)^0,c
 23236  012D62  0E7F               	movlw	127
 23237  012D64  6E30               	movwf	(btemp+11)^0,c
 23238                           
 23239                           ;stkvar	_prod @ sp[(-13)+0]
 23240  012D66  0EF3               	movlw	-13
 23241  012D68  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 23242  012D6E  0EF4               	movlw	-12
 23243  012D70  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 23244  012D76  0EF5               	movlw	-11
 23245  012D78  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 23246  012D7E  0EF6               	movlw	-10
 23247  012D80  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 23248  012D86  D044               	goto	l6973
 23249  012D88                     l6957:
 23250                           
 23251                           ;stkvar	_temp @ sp[(-13)+8]
 23252  012D88  0EFC               	movlw	-4
 23253  012D8A  BEE3               	btfsc	plusw1,7,c
 23254  012D8C  D007               	goto	u5520
 23255  012D8E  0EFC               	movlw	-4
 23256  012D90  50E3               	movf	plusw1,w,c
 23257  012D92  E10F               	bnz	l6963
 23258  012D94  0EFB               	movlw	-5
 23259  012D96  04E3               	decf	plusw1,w,c
 23260  012D98  B0D8               	btfsc	status,0,c
 23261  012D9A  D00B               	goto	l6963
 23262  012D9C                     u5520:
 23263                           
 23264                           ;stkvar	_prod @ sp[(-13)+0]
 23265  012D9C  0EF3               	movlw	-13
 23266  012D9E  6AE3               	clrf	plusw1,c
 23267  012DA0  0EF4               	movlw	-12
 23268  012DA2  6AE3               	clrf	plusw1,c
 23269  012DA4  0EF5               	movlw	-11
 23270  012DA6  6AE3               	clrf	plusw1,c
 23271  012DA8  0EF6               	movlw	-10
 23272  012DAA  6AE3               	clrf	plusw1,c
 23273                           
 23274                           ;stkvar	_sign @ sp[(-13)+12]
 23275  012DAC  0EFF               	movlw	-1
 23276  012DAE  6AE3               	clrf	plusw1,c
 23277  012DB0  D02F               	goto	l6973
 23278  012DB2                     l6963:
 23279                           
 23280                           ;stkvar	_temp @ sp[(-13)+8]
 23281                           ;stkvar	_bexp @ sp[(-13)+10]
 23282  012DB2  0EFB               	movlw	-5
 23283  012DB4  006F FF8C  F025    	movff	plusw1,btemp
 23284  012DBA  0EFD               	movlw	-3
 23285  012DBC  0060  F097  FFE3   	movff	btemp,plusw1
 23286                           
 23287                           ;stkvar	_prod @ sp[(-13)+0]
 23288  012DC2  50E1               	movf	fsr1l,w,c
 23289  012DC4  0FF3               	addlw	-13
 23290  012DC6  6ED9               	movwf	fsr2l,c
 23291  012DC8  50E2               	movf	fsr1h,w,c
 23292  012DCA  6EDA               	movwf	fsr2h,c
 23293  012DCC  0EFF               	movlw	255
 23294  012DCE  22DA               	addwfc	fsr2h,f,c
 23295  012DD0  0EFF               	movlw	255
 23296  012DD2  16DE               	andwf	postinc2,f,c
 23297  012DD4  0EFF               	movlw	255
 23298  012DD6  16DE               	andwf	postinc2,f,c
 23299  012DD8  0E7F               	movlw	127
 23300  012DDA  16DE               	andwf	postinc2,f,c
 23301  012DDC  0E00               	movlw	0
 23302  012DDE  16DE               	andwf	postinc2,f,c
 23303                           
 23304                           ;stkvar	_bexp @ sp[(-13)+10]
 23305  012DE0  0EFD               	movlw	-3
 23306  012DE2  A0E3               	btfss	plusw1,0,c
 23307  012DE4  D008               	goto	l6971
 23308                           
 23309                           ;stkvar	_prod @ sp[(-13)+0]
 23310  012DE6  0EF5               	movlw	245
 23311  012DE8  24E1               	addwf	fsr1l,w,c
 23312  012DEA  6ED9               	movwf	fsr2l,c
 23313  012DEC  0EFF               	movlw	255
 23314  012DEE  20E2               	addwfc	fsr1h,w,c
 23315  012DF0  6EDA               	movwf	fsr2h,c
 23316  012DF2  0E00               	movlw	0
 23317  012DF4  8EDB               	bsf	plusw2,7,c
 23318  012DF6                     l6971:
 23319                           
 23320                           ;stkvar	_prod @ sp[(-13)+0]
 23321  012DF6  0EF6               	movlw	246
 23322  012DF8  24E1               	addwf	fsr1l,w,c
 23323  012DFA  6ED9               	movwf	fsr2l,c
 23324  012DFC  0EFF               	movlw	255
 23325  012DFE  20E2               	addwfc	fsr1h,w,c
 23326  012E00  6EDA               	movwf	fsr2h,c
 23327                           
 23328                           ;stkvar	_bexp @ sp[(-13)+10]
 23329  012E02  0EFD               	movlw	-3
 23330  012E04  006F FF8C  F030    	movff	plusw1,btemp+11
 23331  012E0A  90D8               	bcf	status,0,c
 23332  012E0C  3030               	rrcf	(btemp+11)^0,w,c
 23333  012E0E  6EDF               	movwf	indf2,c
 23334  012E10                     l6973:
 23335                           
 23336                           ;stkvar	_sign @ sp[(-13)+12]
 23337  012E10  0EFF               	movlw	-1
 23338  012E12  006F FF8C  F030    	movff	plusw1,btemp+11
 23339                           
 23340                           ;stkvar	_prod @ sp[(-13)+0]
 23341  012E18  0EF6               	movlw	246
 23342  012E1A  24E1               	addwf	fsr1l,w,c
 23343  012E1C  6ED9               	movwf	fsr2l,c
 23344  012E1E  0EFF               	movlw	255
 23345  012E20  20E2               	addwfc	fsr1h,w,c
 23346  012E22  6EDA               	movwf	fsr2h,c
 23347  012E24  5030               	movf	(btemp+11)^0,w,c
 23348  012E26  12DF               	iorwf	indf2,f,c
 23349                           
 23350                           ;stkvar	_prod @ sp[(-13)+0]
 23351  012E28  0EF3               	movlw	-13
 23352  012E2A  006F FF8C  F025    	movff	plusw1,btemp
 23353  012E30  0EF4               	movlw	-12
 23354  012E32  006F FF8C  F026    	movff	plusw1,btemp+1
 23355  012E38  0EF5               	movlw	-11
 23356  012E3A  006F FF8C  F027    	movff	plusw1,btemp+2
 23357  012E40  0EF6               	movlw	-10
 23358  012E42  006F FF8C  F028    	movff	plusw1,btemp+3
 23359  012E48                     l2840:
 23360                           
 23361                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 23362  012E48  0EEB               	movlw	235
 23363  012E4A  26E1               	addwf	fsr1l,f,c
 23364  012E4C  0EFF               	movlw	255
 23365  012E4E  22E2               	addwfc	fsr1h,f,c
 23366  012E50  0012               	return		;funcret
 23367  012E52                     __end_of___flmul:
 23368                           	opt callstack 0
 23369                           
 23370 ;; *************** function _SYSTEM_Initialize *****************
 23371 ;; Defined at:
 23372 ;;		line 50 in file "mcc_generated_files/mcc.c"
 23373 ;; Parameters:    Size  Location     Type
 23374 ;;		None
 23375 ;; Auto vars:     Size  Location     Type
 23376 ;;		None
 23377 ;; Return value:  Size  Location     Type
 23378 ;;                  1  [STACK] void 
 23379 ;; Registers used:
 23380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 23381 ;; Tracked objects:
 23382 ;;		On entry : 0/0
 23383 ;;		On exit  : 3F/3C
 23384 ;;		Unchanged: 0/0
 23385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23390 ;;Total ram usage:        0 bytes
 23391 ;; Hardware stack levels used:    1
 23392 ;; Hardware stack levels required when called:    9
 23393 ;; This function calls:
 23394 ;;		_ADCC_Initialize
 23395 ;;		_CLKREF_Initialize
 23396 ;;		_DMA1_Initialize
 23397 ;;		_DMA2_Initialize
 23398 ;;		_EXT_INT_Initialize
 23399 ;;		_FVR_Initialize
 23400 ;;		_INTERRUPT_Initialize
 23401 ;;		_OSCILLATOR_Initialize
 23402 ;;		_PIN_MANAGER_Initialize
 23403 ;;		_PMD_Initialize
 23404 ;;		_PWM8_Initialize
 23405 ;;		_SPI1_Initialize
 23406 ;;		_TMR2_Initialize
 23407 ;;		_TMR3_Initialize
 23408 ;;		_TMR5_Initialize
 23409 ;;		_TMR6_Initialize
 23410 ;;		_UART1_Initialize
 23411 ;;		_UART2_Initialize
 23412 ;; This function is called by:
 23413 ;;		_main
 23414 ;; This function uses a reentrant model
 23415 ;;
 23416                           
 23417                           	psect	text95
 23418  018810                     __ptext95:
 23419                           	opt callstack 0
 23420  018810                     _SYSTEM_Initialize:
 23421                           	opt callstack 21
 23422                           
 23423                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 23424                           
 23425                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23426                           ;incstack = 0
 23427  018810  ECDF  F0C1         	call	_INTERRUPT_Initialize	;wreg free
 23428                           
 23429                           ; BSR set to: 57
 23430                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 23431  018814  EC1C  F0CA         	call	_PMD_Initialize	;wreg free
 23432                           
 23433                           ; BSR set to: 57
 23434                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 23435  018818  ECA8  F0BF         	call	_PIN_MANAGER_Initialize	;wreg free
 23436                           
 23437                           ; BSR set to: 58
 23438                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 23439  01881C  EC11  F0CA         	call	_OSCILLATOR_Initialize	;wreg free
 23440                           
 23441                           ; BSR set to: 57
 23442                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 23443  018820  EC83  F0CA         	call	_FVR_Initialize	;wreg free
 23444                           
 23445                           ; BSR set to: 62
 23446                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 23447  018824  EC75  F0C1         	call	_ADCC_Initialize	;wreg free
 23448                           
 23449                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 23450  018828  EC06  F0CA         	call	_PWM8_Initialize	;wreg free
 23451                           
 23452                           ; BSR set to: 63
 23453                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 23454  01882C  ECEF  F0C9         	call	_TMR2_Initialize	;wreg free
 23455                           
 23456                           ; BSR set to: 57
 23457                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 23458  018830  EC60  F0C6         	call	_EXT_INT_Initialize	;wreg free
 23459                           
 23460                           ; BSR set to: 57
 23461                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 23462  018834  EC1C  F0C7         	call	_TMR6_Initialize	;wreg free
 23463                           
 23464                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 23465  018838  ECBA  F0C4         	call	_TMR3_Initialize	;wreg free
 23466                           
 23467                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 23468  01883C  EC97  F0C4         	call	_TMR5_Initialize	;wreg free
 23469                           
 23470                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 23471  018840  EC45  F0C2         	call	_UART1_Initialize	;wreg free
 23472                           
 23473                           ; BSR set to: 57
 23474                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 23475  018844  ECD9  F0C2         	call	_UART2_Initialize	;wreg free
 23476                           
 23477                           ; BSR set to: 57
 23478                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 23479  018848  ECFB  F0C9         	call	_SPI1_Initialize	;wreg free
 23480                           
 23481                           ; BSR set to: 61
 23482                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 23483  01884C  EC35  F0C3         	call	_DMA2_Initialize	;wreg free
 23484                           
 23485                           ; BSR set to: 59
 23486                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 23487  018850  EC40  F0C1         	call	_DMA1_Initialize	;wreg free
 23488                           
 23489                           ; BSR set to: 59
 23490                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 23491  018854  EC5D  F0CA         	call	_CLKREF_Initialize	;wreg free
 23492                           
 23493                           ; BSR set to: 60
 23494                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 23495  018858  0012               	return		;funcret
 23496  01885A                     __end_of_SYSTEM_Initialize:
 23497                           	opt callstack 0
 23498                           
 23499 ;; *************** function _UART2_Initialize *****************
 23500 ;; Defined at:
 23501 ;;		line 78 in file "mcc_generated_files/uart2.c"
 23502 ;; Parameters:    Size  Location     Type
 23503 ;;		None
 23504 ;; Auto vars:     Size  Location     Type
 23505 ;;		None
 23506 ;; Return value:  Size  Location     Type
 23507 ;;                  1  [STACK] void 
 23508 ;; Registers used:
 23509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23510 ;; Tracked objects:
 23511 ;;		On entry : 3F/39
 23512 ;;		On exit  : 3F/39
 23513 ;;		Unchanged: 0/0
 23514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23519 ;;Total ram usage:        0 bytes
 23520 ;; Hardware stack levels used:    1
 23521 ;; Hardware stack levels required when called:    8
 23522 ;; This function calls:
 23523 ;;		_UART2_SetRxInterruptHandler
 23524 ;;		_UART2_SetTxInterruptHandler
 23525 ;; This function is called by:
 23526 ;;		_SYSTEM_Initialize
 23527 ;; This function uses a reentrant model
 23528 ;;
 23529                           
 23530                           	psect	text96
 23531  0185B2                     __ptext96:
 23532                           	opt callstack 0
 23533  0185B2                     _UART2_Initialize:
 23534                           	opt callstack 21
 23535                           
 23536                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 23537                           
 23538                           ; BSR set to: 60
 23539                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23540                           ;incstack = 0
 23541  0185B2  0139               	movlb	57	; () banked
 23542  0185B4  9596               	bcf	150,2,b	;volatile
 23543                           
 23544                           ; BSR set to: 57
 23545                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 23546  0185B6  0E56               	movlw	low _UART2_Receive_ISR
 23547  0185B8  6EE6               	movwf	postinc1,c
 23548  0185BA  0E93               	movlw	high _UART2_Receive_ISR
 23549  0185BC  6EE6               	movwf	postinc1,c
 23550  0185BE  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 23551  0185C0  6EE6               	movwf	postinc1,c
 23552  0185C2  ECA9  F0C7         	call	_UART2_SetRxInterruptHandler	;wreg free
 23553                           
 23554                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 23555  0185C6  0139               	movlb	57	; () banked
 23556  0185C8  9796               	bcf	150,3,b	;volatile
 23557                           
 23558                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 23559  0185CA  0E0C               	movlw	low _UART2_Transmit_ISR
 23560  0185CC  6EE6               	movwf	postinc1,c
 23561  0185CE  0E8E               	movlw	high _UART2_Transmit_ISR
 23562  0185D0  6EE6               	movwf	postinc1,c
 23563  0185D2  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 23564  0185D4  6EE6               	movwf	postinc1,c
 23565  0185D6  EC95  F0C7         	call	_UART2_SetTxInterruptHandler	;wreg free
 23566                           
 23567                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 23568  0185DA  013D               	movlb	61	; () banked
 23569  0185DC  6BD4               	clrf	212,b	;volatile
 23570                           
 23571                           ; BSR set to: 61
 23572                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 23573  0185DE  6BD6               	clrf	214,b	;volatile
 23574                           
 23575                           ; BSR set to: 61
 23576                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 23577  0185E0  6BD8               	clrf	216,b	;volatile
 23578                           
 23579                           ; BSR set to: 61
 23580                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 23581  0185E2  0EB0               	movlw	176
 23582  0185E4  6FDA               	movwf	218,b	;volatile
 23583                           
 23584                           ; BSR set to: 61
 23585                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 23586  0185E6  0E80               	movlw	128
 23587  0185E8  6FDB               	movwf	219,b	;volatile
 23588                           
 23589                           ; BSR set to: 61
 23590                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 23591  0185EA  6BDC               	clrf	220,b	;volatile
 23592                           
 23593                           ; BSR set to: 61
 23594                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 23595  0185EC  0E82               	movlw	130
 23596  0185EE  6FDD               	movwf	221,b	;volatile
 23597                           
 23598                           ; BSR set to: 61
 23599                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 23600  0185F0  0E06               	movlw	6
 23601  0185F2  6FDE               	movwf	222,b	;volatile
 23602                           
 23603                           ; BSR set to: 61
 23604                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 23605  0185F4  6BDF               	clrf	223,b	;volatile
 23606                           
 23607                           ; BSR set to: 61
 23608                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 23609  0185F6  6BE0               	clrf	224,b	;volatile
 23610                           
 23611                           ; BSR set to: 61
 23612                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 23613  0185F8  6BE1               	clrf	225,b	;volatile
 23614                           
 23615                           ; BSR set to: 61
 23616                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 23617  0185FA  6BE2               	clrf	226,b	;volatile
 23618                           
 23619                           ; BSR set to: 61
 23620                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 23621  0185FC  6A1E               	clrf	_uart2TxHead^0,c	;volatile
 23622                           
 23623                           ; BSR set to: 61
 23624                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 23625  0185FE  6A1D               	clrf	_uart2TxTail^0,c	;volatile
 23626                           
 23627                           ; BSR set to: 61
 23628                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 23629  018600  0E40               	movlw	64
 23630  018602  6E1C               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 23631                           
 23632                           ; BSR set to: 61
 23633                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 23634  018604  6A1B               	clrf	_uart2RxHead^0,c	;volatile
 23635                           
 23636                           ; BSR set to: 61
 23637                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 23638  018606  6A1A               	clrf	_uart2RxTail^0,c	;volatile
 23639                           
 23640                           ; BSR set to: 61
 23641                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 23642  018608  6A19               	clrf	_uart2RxCount^0,c	;volatile
 23643                           
 23644                           ; BSR set to: 61
 23645                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 23646  01860A  0139               	movlb	57	; () banked
 23647  01860C  8596               	bsf	150,2,b	;volatile
 23648                           
 23649                           ; BSR set to: 57
 23650                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23651  01860E  0012               	return		;funcret
 23652  018610                     __end_of_UART2_Initialize:
 23653                           	opt callstack 0
 23654                           
 23655 ;; *************** function _UART2_SetTxInterruptHandler *****************
 23656 ;; Defined at:
 23657 ;;		line 252 in file "mcc_generated_files/uart2.c"
 23658 ;; Parameters:    Size  Location     Type
 23659 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23660 ;;		 -> UART2_Transmit_ISR(1), 
 23661 ;; Auto vars:     Size  Location     Type
 23662 ;;		None
 23663 ;; Return value:  Size  Location     Type
 23664 ;;                  1  [STACK] void 
 23665 ;; Registers used:
 23666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23667 ;; Tracked objects:
 23668 ;;		On entry : 3F/39
 23669 ;;		On exit  : 0/0
 23670 ;;		Unchanged: 0/0
 23671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23676 ;;Total ram usage:        0 bytes
 23677 ;; Hardware stack levels used:    1
 23678 ;; Hardware stack levels required when called:    7
 23679 ;; This function calls:
 23680 ;;		Nothing
 23681 ;; This function is called by:
 23682 ;;		_UART2_Initialize
 23683 ;; This function uses a reentrant model
 23684 ;;
 23685                           
 23686                           	psect	text97
 23687  018F2A                     __ptext97:
 23688                           	opt callstack 0
 23689  018F2A                     _UART2_SetTxInterruptHandler:
 23690                           	opt callstack 21
 23691                           
 23692                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 23693                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23694                           
 23695                           ; BSR set to: 57
 23696                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23697                           ;incstack = 0
 23698  018F2A  50E1               	movf	fsr1l,w,c
 23699  018F2C  0FFD               	addlw	-3
 23700  018F2E  6ED9               	movwf	fsr2l,c
 23701  018F30  50E2               	movf	fsr1h,w,c
 23702  018F32  6EDA               	movwf	fsr2h,c
 23703  018F34  0EFF               	movlw	255
 23704  018F36  22DA               	addwfc	fsr2h,f,c
 23705  018F38  006F FF78  F0BE    	movff	postinc2,_UART2_TxInterruptHandler
 23706  018F3E  006F FF78  F0BF    	movff	postinc2,_UART2_TxInterruptHandler+1
 23707  018F44  006F FF74  F0C0    	movff	postdec2,_UART2_TxInterruptHandler+2
 23708                           
 23709                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23710  018F4A  52E5               	movf	postdec1,f,c
 23711  018F4C  52E5               	movf	postdec1,f,c
 23712  018F4E  52E5               	movf	postdec1,f,c
 23713  018F50  0012               	return		;funcret
 23714  018F52                     __end_of_UART2_SetTxInterruptHandler:
 23715                           	opt callstack 0
 23716                           
 23717 ;; *************** function _UART2_SetRxInterruptHandler *****************
 23718 ;; Defined at:
 23719 ;;		line 248 in file "mcc_generated_files/uart2.c"
 23720 ;; Parameters:    Size  Location     Type
 23721 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23722 ;;		 -> UART2_Receive_ISR(1), 
 23723 ;; Auto vars:     Size  Location     Type
 23724 ;;		None
 23725 ;; Return value:  Size  Location     Type
 23726 ;;                  1  [STACK] void 
 23727 ;; Registers used:
 23728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23729 ;; Tracked objects:
 23730 ;;		On entry : 3F/39
 23731 ;;		On exit  : 0/0
 23732 ;;		Unchanged: 0/0
 23733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23738 ;;Total ram usage:        0 bytes
 23739 ;; Hardware stack levels used:    1
 23740 ;; Hardware stack levels required when called:    7
 23741 ;; This function calls:
 23742 ;;		Nothing
 23743 ;; This function is called by:
 23744 ;;		_UART2_Initialize
 23745 ;; This function uses a reentrant model
 23746 ;;
 23747                           
 23748                           	psect	text98
 23749  018F52                     __ptext98:
 23750                           	opt callstack 0
 23751  018F52                     _UART2_SetRxInterruptHandler:
 23752                           	opt callstack 21
 23753                           
 23754                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 23755                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23756                           
 23757                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23758                           ;incstack = 0
 23759  018F52  50E1               	movf	fsr1l,w,c
 23760  018F54  0FFD               	addlw	-3
 23761  018F56  6ED9               	movwf	fsr2l,c
 23762  018F58  50E2               	movf	fsr1h,w,c
 23763  018F5A  6EDA               	movwf	fsr2h,c
 23764  018F5C  0EFF               	movlw	255
 23765  018F5E  22DA               	addwfc	fsr2h,f,c
 23766  018F60  006F FF78  F001    	movff	postinc2,_UART2_RxInterruptHandler
 23767  018F66  006F FF78  F002    	movff	postinc2,_UART2_RxInterruptHandler+1
 23768  018F6C  006F FF74  F003    	movff	postdec2,_UART2_RxInterruptHandler+2
 23769                           
 23770                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23771  018F72  52E5               	movf	postdec1,f,c
 23772  018F74  52E5               	movf	postdec1,f,c
 23773  018F76  52E5               	movf	postdec1,f,c
 23774  018F78  0012               	return		;funcret
 23775  018F7A                     __end_of_UART2_SetRxInterruptHandler:
 23776                           	opt callstack 0
 23777                           
 23778 ;; *************** function _UART1_Initialize *****************
 23779 ;; Defined at:
 23780 ;;		line 79 in file "mcc_generated_files/uart1.c"
 23781 ;; Parameters:    Size  Location     Type
 23782 ;;		None
 23783 ;; Auto vars:     Size  Location     Type
 23784 ;;		None
 23785 ;; Return value:  Size  Location     Type
 23786 ;;                  1  [STACK] void 
 23787 ;; Registers used:
 23788 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23789 ;; Tracked objects:
 23790 ;;		On entry : 0/39
 23791 ;;		On exit  : 3F/39
 23792 ;;		Unchanged: 0/0
 23793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23798 ;;Total ram usage:        0 bytes
 23799 ;; Hardware stack levels used:    1
 23800 ;; Hardware stack levels required when called:    8
 23801 ;; This function calls:
 23802 ;;		_UART1_SetRxInterruptHandler
 23803 ;;		_UART1_SetTxInterruptHandler
 23804 ;; This function is called by:
 23805 ;;		_SYSTEM_Initialize
 23806 ;; This function uses a reentrant model
 23807 ;;
 23808                           
 23809                           	psect	text99
 23810  01848A                     __ptext99:
 23811                           	opt callstack 0
 23812  01848A                     _UART1_Initialize:
 23813                           	opt callstack 21
 23814                           
 23815                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 23816                           
 23817                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23818                           ;incstack = 0
 23819  01848A  0139               	movlb	57	; () banked
 23820  01848C  9793               	bcf	147,3,b	;volatile
 23821                           
 23822                           ; BSR set to: 57
 23823                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 23824  01848E  0E38               	movlw	low _UART1_Receive_ISR
 23825  018490  6EE6               	movwf	postinc1,c
 23826  018492  0E93               	movlw	high _UART1_Receive_ISR
 23827  018494  6EE6               	movwf	postinc1,c
 23828  018496  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 23829  018498  6EE6               	movwf	postinc1,c
 23830  01849A  ECD1  F0C7         	call	_UART1_SetRxInterruptHandler	;wreg free
 23831                           
 23832                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 23833  01849E  0139               	movlb	57	; () banked
 23834  0184A0  9993               	bcf	147,4,b	;volatile
 23835                           
 23836                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 23837  0184A2  0EE0               	movlw	low _UART1_Transmit_ISR
 23838  0184A4  6EE6               	movwf	postinc1,c
 23839  0184A6  0E8D               	movlw	high _UART1_Transmit_ISR
 23840  0184A8  6EE6               	movwf	postinc1,c
 23841  0184AA  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 23842  0184AC  6EE6               	movwf	postinc1,c
 23843  0184AE  ECBD  F0C7         	call	_UART1_SetTxInterruptHandler	;wreg free
 23844                           
 23845                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 23846  0184B2  013D               	movlb	61	; () banked
 23847  0184B4  6BEC               	clrf	236,b	;volatile
 23848                           
 23849                           ; BSR set to: 61
 23850                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 23851  0184B6  6BED               	clrf	237,b	;volatile
 23852                           
 23853                           ; BSR set to: 61
 23854                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 23855  0184B8  6BEE               	clrf	238,b	;volatile
 23856                           
 23857                           ; BSR set to: 61
 23858                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 23859  0184BA  6BEF               	clrf	239,b	;volatile
 23860                           
 23861                           ; BSR set to: 61
 23862                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 23863  0184BC  6BF0               	clrf	240,b	;volatile
 23864                           
 23865                           ; BSR set to: 61
 23866                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 23867  0184BE  6BF1               	clrf	241,b	;volatile
 23868                           
 23869                           ; BSR set to: 61
 23870                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 23871  0184C0  0EB0               	movlw	176
 23872  0184C2  6FF2               	movwf	242,b	;volatile
 23873                           
 23874                           ; BSR set to: 61
 23875                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 23876  0184C4  0E80               	movlw	128
 23877  0184C6  6FF3               	movwf	243,b	;volatile
 23878                           
 23879                           ; BSR set to: 61
 23880                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 23881  0184C8  6BF4               	clrf	244,b	;volatile
 23882                           
 23883                           ; BSR set to: 61
 23884                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 23885  0184CA  0E82               	movlw	130
 23886  0184CC  6FF5               	movwf	245,b	;volatile
 23887                           
 23888                           ; BSR set to: 61
 23889                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 23890  0184CE  0E06               	movlw	6
 23891  0184D0  6FF6               	movwf	246,b	;volatile
 23892                           
 23893                           ; BSR set to: 61
 23894                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 23895  0184D2  6BF7               	clrf	247,b	;volatile
 23896                           
 23897                           ; BSR set to: 61
 23898                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 23899  0184D4  6BF8               	clrf	248,b	;volatile
 23900                           
 23901                           ; BSR set to: 61
 23902                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 23903  0184D6  6BF9               	clrf	249,b	;volatile
 23904                           
 23905                           ; BSR set to: 61
 23906                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 23907  0184D8  6BFA               	clrf	250,b	;volatile
 23908                           
 23909                           ; BSR set to: 61
 23910                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 23911  0184DA  6A24               	clrf	_uart1TxHead^0,c	;volatile
 23912                           
 23913                           ; BSR set to: 61
 23914                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 23915  0184DC  6A23               	clrf	_uart1TxTail^0,c	;volatile
 23916                           
 23917                           ; BSR set to: 61
 23918                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 23919  0184DE  0E40               	movlw	64
 23920  0184E0  6E22               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 23921                           
 23922                           ; BSR set to: 61
 23923                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 23924  0184E2  6A21               	clrf	_uart1RxHead^0,c	;volatile
 23925                           
 23926                           ; BSR set to: 61
 23927                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 23928  0184E4  6A20               	clrf	_uart1RxTail^0,c	;volatile
 23929                           
 23930                           ; BSR set to: 61
 23931                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 23932  0184E6  6A1F               	clrf	_uart1RxCount^0,c	;volatile
 23933                           
 23934                           ; BSR set to: 61
 23935                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 23936  0184E8  0139               	movlb	57	; () banked
 23937  0184EA  8793               	bsf	147,3,b	;volatile
 23938                           
 23939                           ; BSR set to: 57
 23940                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23941  0184EC  0012               	return		;funcret
 23942  0184EE                     __end_of_UART1_Initialize:
 23943                           	opt callstack 0
 23944                           
 23945 ;; *************** function _UART1_SetTxInterruptHandler *****************
 23946 ;; Defined at:
 23947 ;;		line 246 in file "mcc_generated_files/uart1.c"
 23948 ;; Parameters:    Size  Location     Type
 23949 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23950 ;;		 -> UART1_Transmit_ISR(1), 
 23951 ;; Auto vars:     Size  Location     Type
 23952 ;;		None
 23953 ;; Return value:  Size  Location     Type
 23954 ;;                  1  [STACK] void 
 23955 ;; Registers used:
 23956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23957 ;; Tracked objects:
 23958 ;;		On entry : 3F/39
 23959 ;;		On exit  : 0/0
 23960 ;;		Unchanged: 0/0
 23961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23966 ;;Total ram usage:        0 bytes
 23967 ;; Hardware stack levels used:    1
 23968 ;; Hardware stack levels required when called:    7
 23969 ;; This function calls:
 23970 ;;		Nothing
 23971 ;; This function is called by:
 23972 ;;		_UART1_Initialize
 23973 ;; This function uses a reentrant model
 23974 ;;
 23975                           
 23976                           	psect	text100
 23977  018F7A                     __ptext100:
 23978                           	opt callstack 0
 23979  018F7A                     _UART1_SetTxInterruptHandler:
 23980                           	opt callstack 21
 23981                           
 23982                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 23983                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23984                           
 23985                           ; BSR set to: 57
 23986                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23987                           ;incstack = 0
 23988  018F7A  50E1               	movf	fsr1l,w,c
 23989  018F7C  0FFD               	addlw	-3
 23990  018F7E  6ED9               	movwf	fsr2l,c
 23991  018F80  50E2               	movf	fsr1h,w,c
 23992  018F82  6EDA               	movwf	fsr2h,c
 23993  018F84  0EFF               	movlw	255
 23994  018F86  22DA               	addwfc	fsr2h,f,c
 23995  018F88  006F FF78  F0B8    	movff	postinc2,_UART1_TxInterruptHandler
 23996  018F8E  006F FF78  F0B9    	movff	postinc2,_UART1_TxInterruptHandler+1
 23997  018F94  006F FF74  F0BA    	movff	postdec2,_UART1_TxInterruptHandler+2
 23998                           
 23999                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24000  018F9A  52E5               	movf	postdec1,f,c
 24001  018F9C  52E5               	movf	postdec1,f,c
 24002  018F9E  52E5               	movf	postdec1,f,c
 24003  018FA0  0012               	return		;funcret
 24004  018FA2                     __end_of_UART1_SetTxInterruptHandler:
 24005                           	opt callstack 0
 24006                           
 24007 ;; *************** function _UART1_SetRxInterruptHandler *****************
 24008 ;; Defined at:
 24009 ;;		line 241 in file "mcc_generated_files/uart1.c"
 24010 ;; Parameters:    Size  Location     Type
 24011 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24012 ;;		 -> UART1_Receive_ISR(1), 
 24013 ;; Auto vars:     Size  Location     Type
 24014 ;;		None
 24015 ;; Return value:  Size  Location     Type
 24016 ;;                  1  [STACK] void 
 24017 ;; Registers used:
 24018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24019 ;; Tracked objects:
 24020 ;;		On entry : 3F/39
 24021 ;;		On exit  : 0/0
 24022 ;;		Unchanged: 0/0
 24023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24028 ;;Total ram usage:        0 bytes
 24029 ;; Hardware stack levels used:    1
 24030 ;; Hardware stack levels required when called:    7
 24031 ;; This function calls:
 24032 ;;		Nothing
 24033 ;; This function is called by:
 24034 ;;		_UART1_Initialize
 24035 ;; This function uses a reentrant model
 24036 ;;
 24037                           
 24038                           	psect	text101
 24039  018FA2                     __ptext101:
 24040                           	opt callstack 0
 24041  018FA2                     _UART1_SetRxInterruptHandler:
 24042                           	opt callstack 21
 24043                           
 24044                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 24045                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24046                           
 24047                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24048                           ;incstack = 0
 24049  018FA2  50E1               	movf	fsr1l,w,c
 24050  018FA4  0FFD               	addlw	-3
 24051  018FA6  6ED9               	movwf	fsr2l,c
 24052  018FA8  50E2               	movf	fsr1h,w,c
 24053  018FAA  6EDA               	movwf	fsr2h,c
 24054  018FAC  0EFF               	movlw	255
 24055  018FAE  22DA               	addwfc	fsr2h,f,c
 24056  018FB0  006F FF78  F0BB    	movff	postinc2,_UART1_RxInterruptHandler
 24057  018FB6  006F FF78  F0BC    	movff	postinc2,_UART1_RxInterruptHandler+1
 24058  018FBC  006F FF74  F0BD    	movff	postdec2,_UART1_RxInterruptHandler+2
 24059                           
 24060                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24061  018FC2  52E5               	movf	postdec1,f,c
 24062  018FC4  52E5               	movf	postdec1,f,c
 24063  018FC6  52E5               	movf	postdec1,f,c
 24064  018FC8  0012               	return		;funcret
 24065  018FCA                     __end_of_UART1_SetRxInterruptHandler:
 24066                           	opt callstack 0
 24067                           
 24068 ;; *************** function _TMR6_Initialize *****************
 24069 ;; Defined at:
 24070 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 24071 ;; Parameters:    Size  Location     Type
 24072 ;;		None
 24073 ;; Auto vars:     Size  Location     Type
 24074 ;;		None
 24075 ;; Return value:  Size  Location     Type
 24076 ;;                  1  [STACK] void 
 24077 ;; Registers used:
 24078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 24079 ;; Tracked objects:
 24080 ;;		On entry : 3F/39
 24081 ;;		On exit  : 0/0
 24082 ;;		Unchanged: 0/0
 24083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24088 ;;Total ram usage:        0 bytes
 24089 ;; Hardware stack levels used:    1
 24090 ;; Hardware stack levels required when called:    8
 24091 ;; This function calls:
 24092 ;;		_TMR6_SetInterruptHandler
 24093 ;; This function is called by:
 24094 ;;		_SYSTEM_Initialize
 24095 ;; This function uses a reentrant model
 24096 ;;
 24097                           
 24098                           	psect	text102
 24099  018E38                     __ptext102:
 24100                           	opt callstack 0
 24101  018E38                     _TMR6_Initialize:
 24102                           	opt callstack 21
 24103                           
 24104                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 24105                           
 24106                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24107                           ;incstack = 0
 24108  018E38  0E01               	movlw	1
 24109  018E3A  6E96               	movwf	150,c	;volatile
 24110                           
 24111                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 24112  018E3C  6A95               	clrf	149,c	;volatile
 24113                           
 24114                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 24115  018E3E  6A97               	clrf	151,c	;volatile
 24116                           
 24117                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 24118  018E40  0E7C               	movlw	124
 24119  018E42  6E93               	movwf	147,c	;volatile
 24120                           
 24121                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 24122  018E44  6A92               	clrf	146,c	;volatile
 24123                           
 24124                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 24125  018E46  0139               	movlb	57	; () banked
 24126  018E48  91A9               	bcf	169,0,b	;volatile
 24127                           
 24128                           ; BSR set to: 57
 24129                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 24130  018E4A  8199               	bsf	153,0,b	;volatile
 24131                           
 24132                           ; BSR set to: 57
 24133                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 24134  018E4C  0EC2               	movlw	low _TMR6_DefaultInterruptHandler
 24135  018E4E  6EE6               	movwf	postinc1,c
 24136  018E50  0E87               	movlw	high _TMR6_DefaultInterruptHandler
 24137  018E52  6EE6               	movwf	postinc1,c
 24138  018E54  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 24139  018E56  6EE6               	movwf	postinc1,c
 24140  018E58  ECE5  F0C7         	call	_TMR6_SetInterruptHandler	;wreg free
 24141                           
 24142                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 24143  018E5C  0EE0               	movlw	224
 24144  018E5E  6E94               	movwf	148,c	;volatile
 24145                           
 24146                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24147  018E60  0012               	return		;funcret
 24148  018E62                     __end_of_TMR6_Initialize:
 24149                           	opt callstack 0
 24150                           
 24151 ;; *************** function _TMR6_SetInterruptHandler *****************
 24152 ;; Defined at:
 24153 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 24154 ;; Parameters:    Size  Location     Type
 24155 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24156 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 24157 ;; Auto vars:     Size  Location     Type
 24158 ;;		None
 24159 ;; Return value:  Size  Location     Type
 24160 ;;                  1  [STACK] void 
 24161 ;; Registers used:
 24162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24163 ;; Tracked objects:
 24164 ;;		On entry : 3F/39
 24165 ;;		On exit  : 0/0
 24166 ;;		Unchanged: 0/0
 24167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24172 ;;Total ram usage:        0 bytes
 24173 ;; Hardware stack levels used:    1
 24174 ;; Hardware stack levels required when called:    7
 24175 ;; This function calls:
 24176 ;;		Nothing
 24177 ;; This function is called by:
 24178 ;;		_TMR6_Initialize
 24179 ;; This function uses a reentrant model
 24180 ;;
 24181                           
 24182                           	psect	text103
 24183  018FCA                     __ptext103:
 24184                           	opt callstack 0
 24185  018FCA                     _TMR6_SetInterruptHandler:
 24186                           	opt callstack 21
 24187                           
 24188                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 24189                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24190                           
 24191                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24192                           ;incstack = 0
 24193  018FCA  50E1               	movf	fsr1l,w,c
 24194  018FCC  0FFD               	addlw	-3
 24195  018FCE  6ED9               	movwf	fsr2l,c
 24196  018FD0  50E2               	movf	fsr1h,w,c
 24197  018FD2  6EDA               	movwf	fsr2h,c
 24198  018FD4  0EFF               	movlw	255
 24199  018FD6  22DA               	addwfc	fsr2h,f,c
 24200  018FD8  006F FF78  F0AF    	movff	postinc2,_TMR6_InterruptHandler
 24201  018FDE  006F FF78  F0B0    	movff	postinc2,_TMR6_InterruptHandler+1
 24202  018FE4  006F FF74  F0B1    	movff	postdec2,_TMR6_InterruptHandler+2
 24203                           
 24204                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24205  018FEA  52E5               	movf	postdec1,f,c
 24206  018FEC  52E5               	movf	postdec1,f,c
 24207  018FEE  52E5               	movf	postdec1,f,c
 24208  018FF0  0012               	return		;funcret
 24209  018FF2                     __end_of_TMR6_SetInterruptHandler:
 24210                           	opt callstack 0
 24211                           
 24212 ;; *************** function _TMR5_Initialize *****************
 24213 ;; Defined at:
 24214 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 24215 ;; Parameters:    Size  Location     Type
 24216 ;;		None
 24217 ;; Auto vars:     Size  Location     Type
 24218 ;;		None
 24219 ;; Return value:  Size  Location     Type
 24220 ;;                  1  [STACK] void 
 24221 ;; Registers used:
 24222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 24223 ;; Tracked objects:
 24224 ;;		On entry : 0/39
 24225 ;;		On exit  : 0/0
 24226 ;;		Unchanged: 0/0
 24227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24232 ;;Total ram usage:        0 bytes
 24233 ;; Hardware stack levels used:    1
 24234 ;; Hardware stack levels required when called:    8
 24235 ;; This function calls:
 24236 ;;		_TMR5_SetInterruptHandler
 24237 ;; This function is called by:
 24238 ;;		_SYSTEM_Initialize
 24239 ;; This function uses a reentrant model
 24240 ;;
 24241                           
 24242                           	psect	text104
 24243  01892E                     __ptext104:
 24244                           	opt callstack 0
 24245  01892E                     _TMR5_Initialize:
 24246                           	opt callstack 21
 24247                           
 24248                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 24249                           
 24250                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24251                           ;incstack = 0
 24252  01892E  6A9B               	clrf	155,c	;volatile
 24253                           
 24254                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 24255  018930  6A9C               	clrf	156,c	;volatile
 24256                           
 24257                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 24258  018932  0E01               	movlw	1
 24259  018934  6E9D               	movwf	157,c	;volatile
 24260                           
 24261                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 24262  018936  0E63               	movlw	99
 24263  018938  6E99               	movwf	153,c	;volatile
 24264                           
 24265                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 24266  01893A  0EC0               	movlw	192
 24267  01893C  6E98               	movwf	152,c	;volatile
 24268                           
 24269                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 24270  01893E  5098               	movf	152,w,c	;volatile
 24271  018940  006F FE64  F025    	movff	16281,btemp	;volatile
 24272  018946  6A26               	clrf	(btemp+1)^0,c
 24273  018948  0060  F094  F026   	movff	btemp,btemp+1
 24274  01894E  6A25               	clrf	btemp^0,c
 24275  018950  1025               	iorwf	btemp^0,w,c
 24276  018952  6E16               	movwf	_timer5ReloadVal^0,c	;volatile
 24277  018954  5026               	movf	(btemp+1)^0,w,c
 24278  018956  6E17               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 24279                           
 24280                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 24281  018958  0139               	movlb	57	; () banked
 24282  01895A  9DA8               	bcf	168,6,b	;volatile
 24283                           
 24284                           ; BSR set to: 57
 24285                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 24286  01895C  8D98               	bsf	152,6,b	;volatile
 24287                           
 24288                           ; BSR set to: 57
 24289                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 24290  01895E  0EE2               	movlw	low _TMR5_DefaultInterruptHandler
 24291  018960  6EE6               	movwf	postinc1,c
 24292  018962  0E90               	movlw	high _TMR5_DefaultInterruptHandler
 24293  018964  6EE6               	movwf	postinc1,c
 24294  018966  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 24295  018968  6EE6               	movwf	postinc1,c
 24296  01896A  ECF9  F0C7         	call	_TMR5_SetInterruptHandler	;wreg free
 24297                           
 24298                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 24299  01896E  0E31               	movlw	49
 24300  018970  6E9A               	movwf	154,c	;volatile
 24301                           
 24302                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24303  018972  0012               	return		;funcret
 24304  018974                     __end_of_TMR5_Initialize:
 24305                           	opt callstack 0
 24306                           
 24307 ;; *************** function _TMR5_SetInterruptHandler *****************
 24308 ;; Defined at:
 24309 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 24310 ;; Parameters:    Size  Location     Type
 24311 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24312 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 24313 ;; Auto vars:     Size  Location     Type
 24314 ;;		None
 24315 ;; Return value:  Size  Location     Type
 24316 ;;                  1  [STACK] void 
 24317 ;; Registers used:
 24318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24319 ;; Tracked objects:
 24320 ;;		On entry : 3F/39
 24321 ;;		On exit  : 0/0
 24322 ;;		Unchanged: 0/0
 24323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24328 ;;Total ram usage:        0 bytes
 24329 ;; Hardware stack levels used:    1
 24330 ;; Hardware stack levels required when called:    7
 24331 ;; This function calls:
 24332 ;;		Nothing
 24333 ;; This function is called by:
 24334 ;;		_TMR5_Initialize
 24335 ;; This function uses a reentrant model
 24336 ;;
 24337                           
 24338                           	psect	text105
 24339  018FF2                     __ptext105:
 24340                           	opt callstack 0
 24341  018FF2                     _TMR5_SetInterruptHandler:
 24342                           	opt callstack 21
 24343                           
 24344                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 24345                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24346                           
 24347                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24348                           ;incstack = 0
 24349  018FF2  50E1               	movf	fsr1l,w,c
 24350  018FF4  0FFD               	addlw	-3
 24351  018FF6  6ED9               	movwf	fsr2l,c
 24352  018FF8  50E2               	movf	fsr1h,w,c
 24353  018FFA  6EDA               	movwf	fsr2h,c
 24354  018FFC  0EFF               	movlw	255
 24355  018FFE  22DA               	addwfc	fsr2h,f,c
 24356  019000  006F FF78  F0AC    	movff	postinc2,_TMR5_InterruptHandler
 24357  019006  006F FF78  F0AD    	movff	postinc2,_TMR5_InterruptHandler+1
 24358  01900C  006F FF74  F0AE    	movff	postdec2,_TMR5_InterruptHandler+2
 24359                           
 24360                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24361  019012  52E5               	movf	postdec1,f,c
 24362  019014  52E5               	movf	postdec1,f,c
 24363  019016  52E5               	movf	postdec1,f,c
 24364  019018  0012               	return		;funcret
 24365  01901A                     __end_of_TMR5_SetInterruptHandler:
 24366                           	opt callstack 0
 24367                           
 24368 ;; *************** function _TMR3_Initialize *****************
 24369 ;; Defined at:
 24370 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 24371 ;; Parameters:    Size  Location     Type
 24372 ;;		None
 24373 ;; Auto vars:     Size  Location     Type
 24374 ;;		None
 24375 ;; Return value:  Size  Location     Type
 24376 ;;                  1  [STACK] void 
 24377 ;; Registers used:
 24378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 24379 ;; Tracked objects:
 24380 ;;		On entry : 0/39
 24381 ;;		On exit  : 0/0
 24382 ;;		Unchanged: 0/0
 24383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24388 ;;Total ram usage:        0 bytes
 24389 ;; Hardware stack levels used:    1
 24390 ;; Hardware stack levels required when called:    8
 24391 ;; This function calls:
 24392 ;;		_TMR3_SetInterruptHandler
 24393 ;; This function is called by:
 24394 ;;		_SYSTEM_Initialize
 24395 ;; This function uses a reentrant model
 24396 ;;
 24397                           
 24398                           	psect	text106
 24399  018974                     __ptext106:
 24400                           	opt callstack 0
 24401  018974                     _TMR3_Initialize:
 24402                           	opt callstack 21
 24403                           
 24404                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 24405                           
 24406                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24407                           ;incstack = 0
 24408  018974  6AA7               	clrf	167,c	;volatile
 24409                           
 24410                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 24411  018976  6AA8               	clrf	168,c	;volatile
 24412                           
 24413                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 24414  018978  0E01               	movlw	1
 24415  01897A  6EA9               	movwf	169,c	;volatile
 24416                           
 24417                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 24418  01897C  0E3C               	movlw	60
 24419  01897E  6EA5               	movwf	165,c	;volatile
 24420                           
 24421                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 24422  018980  0EB0               	movlw	176
 24423  018982  6EA4               	movwf	164,c	;volatile
 24424                           
 24425                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 24426  018984  50A4               	movf	164,w,c	;volatile
 24427  018986  006F FE94  F025    	movff	16293,btemp	;volatile
 24428  01898C  6A26               	clrf	(btemp+1)^0,c
 24429  01898E  0060  F094  F026   	movff	btemp,btemp+1
 24430  018994  6A25               	clrf	btemp^0,c
 24431  018996  1025               	iorwf	btemp^0,w,c
 24432  018998  6E12               	movwf	_timer3ReloadVal^0,c	;volatile
 24433  01899A  5026               	movf	(btemp+1)^0,w,c
 24434  01899C  6E13               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 24435                           
 24436                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 24437  01899E  0139               	movlb	57	; () banked
 24438  0189A0  9DA6               	bcf	166,6,b	;volatile
 24439                           
 24440                           ; BSR set to: 57
 24441                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 24442  0189A2  8D96               	bsf	150,6,b	;volatile
 24443                           
 24444                           ; BSR set to: 57
 24445                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 24446  0189A4  0E30               	movlw	low _TMR3_DefaultInterruptHandler
 24447  0189A6  6EE6               	movwf	postinc1,c
 24448  0189A8  0E95               	movlw	high _TMR3_DefaultInterruptHandler
 24449  0189AA  6EE6               	movwf	postinc1,c
 24450  0189AC  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 24451  0189AE  6EE6               	movwf	postinc1,c
 24452  0189B0  EC0D  F0C8         	call	_TMR3_SetInterruptHandler	;wreg free
 24453                           
 24454                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 24455  0189B4  0E31               	movlw	49
 24456  0189B6  6EA6               	movwf	166,c	;volatile
 24457                           
 24458                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24459  0189B8  0012               	return		;funcret
 24460  0189BA                     __end_of_TMR3_Initialize:
 24461                           	opt callstack 0
 24462                           
 24463 ;; *************** function _TMR3_SetInterruptHandler *****************
 24464 ;; Defined at:
 24465 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 24466 ;; Parameters:    Size  Location     Type
 24467 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24468 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 24469 ;; Auto vars:     Size  Location     Type
 24470 ;;		None
 24471 ;; Return value:  Size  Location     Type
 24472 ;;                  1  [STACK] void 
 24473 ;; Registers used:
 24474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24475 ;; Tracked objects:
 24476 ;;		On entry : 0/1
 24477 ;;		On exit  : 0/0
 24478 ;;		Unchanged: 0/0
 24479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24484 ;;Total ram usage:        0 bytes
 24485 ;; Hardware stack levels used:    1
 24486 ;; Hardware stack levels required when called:    7
 24487 ;; This function calls:
 24488 ;;		Nothing
 24489 ;; This function is called by:
 24490 ;;		_TMR3_Initialize
 24491 ;;		_init_bsoc
 24492 ;; This function uses a reentrant model
 24493 ;;
 24494                           
 24495                           	psect	text107
 24496  01901A                     __ptext107:
 24497                           	opt callstack 0
 24498  01901A                     _TMR3_SetInterruptHandler:
 24499                           	opt callstack 22
 24500                           
 24501                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 24502                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24503                           
 24504                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24505                           ;incstack = 0
 24506  01901A  50E1               	movf	fsr1l,w,c
 24507  01901C  0FFD               	addlw	-3
 24508  01901E  6ED9               	movwf	fsr2l,c
 24509  019020  50E2               	movf	fsr1h,w,c
 24510  019022  6EDA               	movwf	fsr2h,c
 24511  019024  0EFF               	movlw	255
 24512  019026  22DA               	addwfc	fsr2h,f,c
 24513  019028  006F FF78  F0A9    	movff	postinc2,_TMR3_InterruptHandler
 24514  01902E  006F FF78  F0AA    	movff	postinc2,_TMR3_InterruptHandler+1
 24515  019034  006F FF74  F0AB    	movff	postdec2,_TMR3_InterruptHandler+2
 24516                           
 24517                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24518  01903A  52E5               	movf	postdec1,f,c
 24519  01903C  52E5               	movf	postdec1,f,c
 24520  01903E  52E5               	movf	postdec1,f,c
 24521  019040  0012               	return		;funcret
 24522  019042                     __end_of_TMR3_SetInterruptHandler:
 24523                           	opt callstack 0
 24524                           
 24525 ;; *************** function _TMR2_Initialize *****************
 24526 ;; Defined at:
 24527 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 24528 ;; Parameters:    Size  Location     Type
 24529 ;;		None
 24530 ;; Auto vars:     Size  Location     Type
 24531 ;;		None
 24532 ;; Return value:  Size  Location     Type
 24533 ;;                  1  [STACK] void 
 24534 ;; Registers used:
 24535 ;;		wreg, status,2
 24536 ;; Tracked objects:
 24537 ;;		On entry : 3F/3F
 24538 ;;		On exit  : 3F/39
 24539 ;;		Unchanged: 0/0
 24540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24545 ;;Total ram usage:        0 bytes
 24546 ;; Hardware stack levels used:    1
 24547 ;; Hardware stack levels required when called:    7
 24548 ;; This function calls:
 24549 ;;		Nothing
 24550 ;; This function is called by:
 24551 ;;		_SYSTEM_Initialize
 24552 ;; This function uses a reentrant model
 24553 ;;
 24554                           
 24555                           	psect	text108
 24556  0193DE                     __ptext108:
 24557                           	opt callstack 0
 24558  0193DE                     _TMR2_Initialize:
 24559                           	opt callstack 22
 24560                           
 24561                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 24562                           
 24563                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24564                           ;incstack = 0
 24565  0193DE  0E01               	movlw	1
 24566  0193E0  6EAE               	movwf	174,c	;volatile
 24567                           
 24568                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 24569  0193E2  6AAD               	clrf	173,c	;volatile
 24570                           
 24571                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 24572  0193E4  6AAF               	clrf	175,c	;volatile
 24573                           
 24574                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 24575  0193E6  0E63               	movlw	99
 24576  0193E8  6EAB               	movwf	171,c	;volatile
 24577                           
 24578                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 24579  0193EA  6AAA               	clrf	170,c	;volatile
 24580                           
 24581                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 24582  0193EC  0139               	movlb	57	; () banked
 24583  0193EE  95A4               	bcf	164,2,b	;volatile
 24584                           
 24585                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 24586  0193F0  0EC0               	movlw	192
 24587  0193F2  6EAC               	movwf	172,c	;volatile
 24588                           
 24589                           ; BSR set to: 57
 24590                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24591  0193F4  0012               	return		;funcret
 24592  0193F6                     __end_of_TMR2_Initialize:
 24593                           	opt callstack 0
 24594                           
 24595 ;; *************** function _SPI1_Initialize *****************
 24596 ;; Defined at:
 24597 ;;		line 64 in file "mcc_generated_files/spi1.c"
 24598 ;; Parameters:    Size  Location     Type
 24599 ;;		None
 24600 ;; Auto vars:     Size  Location     Type
 24601 ;;		None
 24602 ;; Return value:  Size  Location     Type
 24603 ;;                  1  [STACK] void 
 24604 ;; Registers used:
 24605 ;;		wreg, status,2
 24606 ;; Tracked objects:
 24607 ;;		On entry : 3F/39
 24608 ;;		On exit  : 3F/3D
 24609 ;;		Unchanged: 0/0
 24610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24615 ;;Total ram usage:        0 bytes
 24616 ;; Hardware stack levels used:    1
 24617 ;; Hardware stack levels required when called:    7
 24618 ;; This function calls:
 24619 ;;		Nothing
 24620 ;; This function is called by:
 24621 ;;		_SYSTEM_Initialize
 24622 ;; This function uses a reentrant model
 24623 ;;
 24624                           
 24625                           	psect	text109
 24626  0193F6                     __ptext109:
 24627                           	opt callstack 0
 24628  0193F6                     _SPI1_Initialize:
 24629                           	opt callstack 22
 24630                           
 24631                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 24632                           
 24633                           ; BSR set to: 57
 24634                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24635                           ;incstack = 0
 24636  0193F6  0E40               	movlw	64
 24637  0193F8  013D               	movlb	61	; () banked
 24638  0193FA  6F15               	movwf	21,b	;volatile
 24639                           
 24640                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 24641  0193FC  0E03               	movlw	3
 24642  0193FE  6F16               	movwf	22,b	;volatile
 24643                           
 24644                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 24645  019400  0E4F               	movlw	79
 24646  019402  6F19               	movwf	25,b	;volatile
 24647                           
 24648                           ; BSR set to: 61
 24649                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 24650  019404  6B1C               	clrf	28,b	;volatile
 24651                           
 24652                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 24653  019406  0E83               	movlw	131
 24654  019408  6F14               	movwf	20,b	;volatile
 24655                           
 24656                           ; BSR set to: 61
 24657                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24658  01940A  0012               	return		;funcret
 24659  01940C                     __end_of_SPI1_Initialize:
 24660                           	opt callstack 0
 24661                           
 24662 ;; *************** function _PWM8_Initialize *****************
 24663 ;; Defined at:
 24664 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 24665 ;; Parameters:    Size  Location     Type
 24666 ;;		None
 24667 ;; Auto vars:     Size  Location     Type
 24668 ;;		None
 24669 ;; Return value:  Size  Location     Type
 24670 ;;                  1  [STACK] void 
 24671 ;; Registers used:
 24672 ;;		wreg, status,2
 24673 ;; Tracked objects:
 24674 ;;		On entry : 0/3E
 24675 ;;		On exit  : 3F/3F
 24676 ;;		Unchanged: 0/0
 24677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24682 ;;Total ram usage:        0 bytes
 24683 ;; Hardware stack levels used:    1
 24684 ;; Hardware stack levels required when called:    7
 24685 ;; This function calls:
 24686 ;;		Nothing
 24687 ;; This function is called by:
 24688 ;;		_SYSTEM_Initialize
 24689 ;; This function uses a reentrant model
 24690 ;;
 24691                           
 24692                           	psect	text110
 24693  01940C                     __ptext110:
 24694                           	opt callstack 0
 24695  01940C                     _PWM8_Initialize:
 24696                           	opt callstack 22
 24697                           
 24698                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 24699                           
 24700                           ; BSR set to: 61
 24701                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24702                           ;incstack = 0
 24703  01940C  0E80               	movlw	128
 24704  01940E  6E62               	movwf	98,c	;volatile
 24705                           
 24706                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 24707  019410  6A61               	clrf	97,c	;volatile
 24708                           
 24709                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 24710  019412  0E40               	movlw	64
 24711  019414  6E60               	movwf	96,c	;volatile
 24712                           
 24713                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 24714  019416  013F               	movlb	63	; () banked
 24715  019418  515F               	movf	95,w,b	;volatile
 24716  01941A  0B3F               	andlw	-193
 24717  01941C  0940               	iorlw	64
 24718  01941E  6F5F               	movwf	95,b	;volatile
 24719                           
 24720                           ; BSR set to: 63
 24721                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24722  019420  0012               	return		;funcret
 24723  019422                     __end_of_PWM8_Initialize:
 24724                           	opt callstack 0
 24725                           
 24726 ;; *************** function _PMD_Initialize *****************
 24727 ;; Defined at:
 24728 ;;		line 90 in file "mcc_generated_files/mcc.c"
 24729 ;; Parameters:    Size  Location     Type
 24730 ;;		None
 24731 ;; Auto vars:     Size  Location     Type
 24732 ;;		None
 24733 ;; Return value:  Size  Location     Type
 24734 ;;                  1  [STACK] void 
 24735 ;; Registers used:
 24736 ;;		None
 24737 ;; Tracked objects:
 24738 ;;		On entry : 3F/39
 24739 ;;		On exit  : 3F/39
 24740 ;;		Unchanged: 0/0
 24741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24746 ;;Total ram usage:        0 bytes
 24747 ;; Hardware stack levels used:    1
 24748 ;; Hardware stack levels required when called:    7
 24749 ;; This function calls:
 24750 ;;		Nothing
 24751 ;; This function is called by:
 24752 ;;		_SYSTEM_Initialize
 24753 ;; This function uses a reentrant model
 24754 ;;
 24755                           
 24756                           	psect	text111
 24757  019438                     __ptext111:
 24758                           	opt callstack 0
 24759  019438                     _PMD_Initialize:
 24760                           	opt callstack 22
 24761                           
 24762                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 24763                           
 24764                           ; BSR set to: 63
 24765                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24766                           ;incstack = 0
 24767  019438  0139               	movlb	57	; () banked
 24768  01943A  6BC0               	clrf	192,b	;volatile
 24769                           
 24770                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 24771  01943C  6BC1               	clrf	193,b	;volatile
 24772                           
 24773                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 24774  01943E  6BC2               	clrf	194,b	;volatile
 24775                           
 24776                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 24777  019440  6BC3               	clrf	195,b	;volatile
 24778                           
 24779                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 24780  019442  6BC4               	clrf	196,b	;volatile
 24781                           
 24782                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 24783  019444  6BC5               	clrf	197,b	;volatile
 24784                           
 24785                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 24786  019446  6BC6               	clrf	198,b	;volatile
 24787                           
 24788                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 24789  019448  6BC7               	clrf	199,b	;volatile
 24790                           
 24791                           ; BSR set to: 57
 24792                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24793  01944A  0012               	return		;funcret
 24794  01944C                     __end_of_PMD_Initialize:
 24795                           	opt callstack 0
 24796                           
 24797 ;; *************** function _PIN_MANAGER_Initialize *****************
 24798 ;; Defined at:
 24799 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 24800 ;; Parameters:    Size  Location     Type
 24801 ;;		None
 24802 ;; Auto vars:     Size  Location     Type
 24803 ;;		None
 24804 ;; Return value:  Size  Location     Type
 24805 ;;                  1  [STACK] void 
 24806 ;; Registers used:
 24807 ;;		wreg, status,2
 24808 ;; Tracked objects:
 24809 ;;		On entry : 3F/39
 24810 ;;		On exit  : 3F/3A
 24811 ;;		Unchanged: 0/0
 24812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24817 ;;Total ram usage:        0 bytes
 24818 ;; Hardware stack levels used:    1
 24819 ;; Hardware stack levels required when called:    7
 24820 ;; This function calls:
 24821 ;;		Nothing
 24822 ;; This function is called by:
 24823 ;;		_SYSTEM_Initialize
 24824 ;; This function uses a reentrant model
 24825 ;;
 24826                           
 24827                           	psect	text112
 24828  017F50                     __ptext112:
 24829                           	opt callstack 0
 24830  017F50                     _PIN_MANAGER_Initialize:
 24831                           	opt callstack 22
 24832                           
 24833                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 24834                           
 24835                           ; BSR set to: 57
 24836                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24837                           ;incstack = 0
 24838  017F50  0E07               	movlw	7
 24839  017F52  6EBE               	movwf	190,c	;volatile
 24840                           
 24841                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 24842  017F54  0E80               	movlw	128
 24843  017F56  6EBD               	movwf	189,c	;volatile
 24844                           
 24845                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 24846  017F58  6ABA               	clrf	186,c	;volatile
 24847                           
 24848                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 24849  017F5A  6ABF               	clrf	191,c	;volatile
 24850                           
 24851                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 24852  017F5C  6ABB               	clrf	187,c	;volatile
 24853                           
 24854                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 24855  017F5E  0E07               	movlw	7
 24856  017F60  6EBC               	movwf	188,c	;volatile
 24857                           
 24858                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 24859  017F62  6AC6               	clrf	198,c	;volatile
 24860                           
 24861                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 24862  017F64  0E0F               	movlw	15
 24863  017F66  6EC7               	movwf	199,c	;volatile
 24864                           
 24865                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 24866  017F68  68C2               	setf	194,c	;volatile
 24867                           
 24868                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 24869  017F6A  0EBF               	movlw	191
 24870  017F6C  6EC3               	movwf	195,c	;volatile
 24871                           
 24872                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 24873  017F6E  0E90               	movlw	144
 24874  017F70  6EC4               	movwf	196,c	;volatile
 24875                           
 24876                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 24877  017F72  0E0C               	movlw	12
 24878  017F74  6EC5               	movwf	197,c	;volatile
 24879                           
 24880                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 24881  017F76  013A               	movlb	58	; () banked
 24882  017F78  6B70               	clrf	112,b	;volatile
 24883                           
 24884                           ; BSR set to: 58
 24885                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 24886  017F7A  6B60               	clrf	96,b	;volatile
 24887                           
 24888                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 24889  017F7C  0E3C               	movlw	60
 24890  017F7E  6F50               	movwf	80,b	;volatile
 24891                           
 24892                           ; BSR set to: 58
 24893                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 24894  017F80  6B80               	clrf	128,b	;volatile
 24895                           
 24896                           ; BSR set to: 58
 24897                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 24898  017F82  6B90               	clrf	144,b	;volatile
 24899                           
 24900                           ; BSR set to: 58
 24901                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 24902  017F84  6940               	setf	64,b	;volatile
 24903                           
 24904                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 24905  017F86  0E0C               	movlw	12
 24906  017F88  6F71               	movwf	113,b	;volatile
 24907                           
 24908                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 24909  017F8A  0E0F               	movlw	15
 24910  017F8C  6F91               	movwf	145,b	;volatile
 24911                           
 24912                           ; BSR set to: 58
 24913                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 24914  017F8E  6B81               	clrf	129,b	;volatile
 24915                           
 24916                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 24917  017F90  0E83               	movlw	131
 24918  017F92  6F51               	movwf	81,b	;volatile
 24919                           
 24920                           ; BSR set to: 58
 24921                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 24922  017F94  6B41               	clrf	65,b	;volatile
 24923                           
 24924                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 24925  017F96  0E97               	movlw	151
 24926  017F98  6F61               	movwf	97,b	;volatile
 24927                           
 24928                           ; BSR set to: 58
 24929                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 24930  017F9A  6B82               	clrf	130,b	;volatile
 24931                           
 24932                           ; BSR set to: 58
 24933                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 24934  017F9C  6B92               	clrf	146,b	;volatile
 24935                           
 24936                           ; BSR set to: 58
 24937                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 24938  017F9E  6B42               	clrf	66,b	;volatile
 24939                           
 24940                           ; BSR set to: 58
 24941                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 24942  017FA0  6B52               	clrf	82,b	;volatile
 24943                           
 24944                           ; BSR set to: 58
 24945                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 24946  017FA2  6B62               	clrf	98,b	;volatile
 24947                           
 24948                           ; BSR set to: 58
 24949                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 24950  017FA4  6B72               	clrf	114,b	;volatile
 24951                           
 24952                           ; BSR set to: 58
 24953                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 24954  017FA6  6943               	setf	67,b	;volatile
 24955                           
 24956                           ; BSR set to: 58
 24957                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 24958  017FA8  6953               	setf	83,b	;volatile
 24959                           
 24960                           ; BSR set to: 58
 24961                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 24962  017FAA  6963               	setf	99,b	;volatile
 24963                           
 24964                           ; BSR set to: 58
 24965                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 24966  017FAC  6973               	setf	115,b	;volatile
 24967                           
 24968                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 24969  017FAE  0E07               	movlw	7
 24970  017FB0  6F83               	movwf	131,b	;volatile
 24971                           
 24972                           ; BSR set to: 58
 24973                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 24974  017FB2  6993               	setf	147,b	;volatile
 24975                           
 24976                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 24977  017FB4  0E0F               	movlw	15
 24978  017FB6  6FE8               	movwf	232,b	;volatile
 24979                           
 24980                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 24981  017FB8  0E13               	movlw	19
 24982  017FBA  6FDE               	movwf	222,b	;volatile
 24983                           
 24984                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 24985  017FBC  0E16               	movlw	22
 24986  017FBE  6F0E               	movwf	14,b	;volatile
 24987                           
 24988                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 24989  017FC0  0E1E               	movlw	30
 24990  017FC2  6F13               	movwf	19,b	;volatile
 24991                           
 24992                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 24993  017FC4  0E08               	movlw	8
 24994  017FC6  6FC0               	movwf	192,b	;volatile
 24995                           
 24996                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 24997  017FC8  0E10               	movlw	16
 24998  017FCA  6F19               	movwf	25,b	;volatile
 24999                           
 25000                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 25001  017FCC  0E09               	movlw	9
 25002  017FCE  6FC1               	movwf	193,b	;volatile
 25003                           
 25004                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 25005  017FD0  0E1F               	movlw	31
 25006  017FD2  6F15               	movwf	21,b	;volatile
 25007                           
 25008                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 25009  017FD4  0E13               	movlw	19
 25010  017FD6  6F16               	movwf	22,b	;volatile
 25011                           
 25012                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 25013  017FD8  0E17               	movlw	23
 25014  017FDA  6FE5               	movwf	229,b	;volatile
 25015                           
 25016                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 25017  017FDC  0E14               	movlw	20
 25018  017FDE  6FDF               	movwf	223,b	;volatile
 25019                           
 25020                           ; BSR set to: 58
 25021                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 25022  017FE0  0012               	return		;funcret
 25023  017FE2                     __end_of_PIN_MANAGER_Initialize:
 25024                           	opt callstack 0
 25025                           
 25026 ;; *************** function _OSCILLATOR_Initialize *****************
 25027 ;; Defined at:
 25028 ;;		line 72 in file "mcc_generated_files/mcc.c"
 25029 ;; Parameters:    Size  Location     Type
 25030 ;;		None
 25031 ;; Auto vars:     Size  Location     Type
 25032 ;;		None
 25033 ;; Return value:  Size  Location     Type
 25034 ;;                  1  [STACK] void 
 25035 ;; Registers used:
 25036 ;;		wreg, status,2
 25037 ;; Tracked objects:
 25038 ;;		On entry : 3F/3A
 25039 ;;		On exit  : 3F/39
 25040 ;;		Unchanged: 0/0
 25041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25046 ;;Total ram usage:        0 bytes
 25047 ;; Hardware stack levels used:    1
 25048 ;; Hardware stack levels required when called:    7
 25049 ;; This function calls:
 25050 ;;		Nothing
 25051 ;; This function is called by:
 25052 ;;		_SYSTEM_Initialize
 25053 ;; This function uses a reentrant model
 25054 ;;
 25055                           
 25056                           	psect	text113
 25057  019422                     __ptext113:
 25058                           	opt callstack 0
 25059  019422                     _OSCILLATOR_Initialize:
 25060                           	opt callstack 22
 25061                           
 25062                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 25063                           
 25064                           ; BSR set to: 58
 25065                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25066                           ;incstack = 0
 25067  019422  0E20               	movlw	32
 25068  019424  0139               	movlb	57	; () banked
 25069  019426  6FD9               	movwf	217,b	;volatile
 25070                           
 25071                           ; BSR set to: 57
 25072                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 25073  019428  6BDB               	clrf	219,b	;volatile
 25074                           
 25075                           ; BSR set to: 57
 25076                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 25077  01942A  6BDD               	clrf	221,b	;volatile
 25078                           
 25079                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 25080  01942C  0E02               	movlw	2
 25081  01942E  6FDF               	movwf	223,b	;volatile
 25082                           
 25083                           ; BSR set to: 57
 25084                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 25085  019430  6BDE               	clrf	222,b	;volatile
 25086  019432                     l173:
 25087                           
 25088                           ; BSR set to: 57
 25089                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 25090  019432  B1DC               	btfsc	220,0,b	;volatile
 25091  019434  0012               	return	
 25092  019436  D7FD               	goto	l173
 25093  019438                     __end_of_OSCILLATOR_Initialize:
 25094                           	opt callstack 0
 25095                           
 25096 ;; *************** function _INTERRUPT_Initialize *****************
 25097 ;; Defined at:
 25098 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 25099 ;; Parameters:    Size  Location     Type
 25100 ;;		None
 25101 ;; Auto vars:     Size  Location     Type
 25102 ;;  state           1  [STACK] _Bool 
 25103 ;; Return value:  Size  Location     Type
 25104 ;;                  1  [STACK] void 
 25105 ;; Registers used:
 25106 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 25107 ;; Tracked objects:
 25108 ;;		On entry : 0/0
 25109 ;;		On exit  : 3F/39
 25110 ;;		Unchanged: 0/0
 25111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25116 ;;Total ram usage:        0 bytes
 25117 ;; Hardware stack levels used:    1
 25118 ;; Hardware stack levels required when called:    7
 25119 ;; This function calls:
 25120 ;;		Nothing
 25121 ;; This function is called by:
 25122 ;;		_SYSTEM_Initialize
 25123 ;; This function uses a reentrant model
 25124 ;;
 25125                           
 25126                           	psect	text114
 25127  0183BE                     __ptext114:
 25128                           	opt callstack 0
 25129  0183BE                     _INTERRUPT_Initialize:
 25130                           	opt callstack 0
 25131                           
 25132                           ; BSR set to: 57
 25133                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25134  0183BE  52E6               	movf	postinc1,f,c
 25135                           
 25136                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 25137                           
 25138                           ;incstack = 0
 25139  0183C0  8AD2               	bsf	210,5,c	;volatile
 25140                           
 25141                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 25142  0183C2  AED2               	btfss	16338,7,c	;volatile
 25143  0183C4  D003               	goto	u8150
 25144  0183C6  6A30               	clrf	(btemp+11)^0,c
 25145  0183C8  2A30               	incf	(btemp+11)^0,f,c
 25146  0183CA  D001               	goto	u8168
 25147  0183CC                     u8150:
 25148  0183CC  6A30               	clrf	(btemp+11)^0,c
 25149  0183CE                     u8168:
 25150                           
 25151                           ;stkvar	_state @ sp[(-1)+0]
 25152  0183CE  0EFF               	movlw	-1
 25153  0183D0  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 25154                           
 25155                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 25156  0183D6  9ED2               	bcf	16338,7,c	;volatile
 25157                           
 25158                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 25159  0183D8  0E55               	movlw	85
 25160  0183DA  6ED4               	movwf	212,c	;volatile
 25161                           
 25162                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 25163  0183DC  0EAA               	movlw	170
 25164  0183DE  6ED4               	movwf	212,c	;volatile
 25165                           
 25166                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 25167  0183E0  90D4               	bcf	212,0,c	;volatile
 25168                           
 25169                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 25170  0183E2  0138               	movlb	56	; () banked
 25171  0183E4  6B9F               	clrf	159,b	;volatile
 25172                           
 25173                           ; BSR set to: 56
 25174                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 25175  0183E6  6B9E               	clrf	158,b	;volatile
 25176                           
 25177                           ; BSR set to: 56
 25178                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 25179  0183E8  0E08               	movlw	8
 25180  0183EA  6F9D               	movwf	157,b	;volatile
 25181                           
 25182                           ; BSR set to: 56
 25183                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 25184  0183EC  0E55               	movlw	85
 25185  0183EE  6ED4               	movwf	212,c	;volatile
 25186                           
 25187                           ; BSR set to: 56
 25188                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 25189  0183F0  0EAA               	movlw	170
 25190  0183F2  6ED4               	movwf	212,c	;volatile
 25191                           
 25192                           ; BSR set to: 56
 25193                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 25194  0183F4  80D4               	bsf	212,0,c	;volatile
 25195                           
 25196                           ; BSR set to: 56
 25197                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 25198                           ;stkvar	_state @ sp[(-1)+0]
 25199  0183F6  0EFF               	movlw	-1
 25200  0183F8  B0E3               	btfsc	plusw1,0,c
 25201  0183FA  D002               	bra	u8175
 25202  0183FC  9ED2               	bcf	16338,7,c	;volatile
 25203  0183FE  D001               	bra	u8176
 25204  018400                     u8175:
 25205  018400  8ED2               	bsf	16338,7,c	;volatile
 25206  018402                     u8176:
 25207                           
 25208                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 25209  018402  0139               	movlb	57	; () banked
 25210  018404  8782               	bsf	130,3,b	;volatile
 25211                           
 25212                           ; BSR set to: 57
 25213                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 25214  018406  8382               	bsf	130,1,b	;volatile
 25215                           
 25216                           ; BSR set to: 57
 25217                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 25218  018408  8182               	bsf	130,0,b	;volatile
 25219                           
 25220                           ; BSR set to: 57
 25221                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 25222  01840A  8582               	bsf	130,2,b	;volatile
 25223                           
 25224                           ; BSR set to: 57
 25225                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 25226  01840C  8786               	bsf	134,3,b	;volatile
 25227                           
 25228                           ; BSR set to: 57
 25229                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 25230  01840E  8586               	bsf	134,2,b	;volatile
 25231                           
 25232                           ; BSR set to: 57
 25233                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 25234  018410  8983               	bsf	131,4,b	;volatile
 25235                           
 25236                           ; BSR set to: 57
 25237                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 25238  018412  8783               	bsf	131,3,b	;volatile
 25239                           
 25240                           ; BSR set to: 57
 25241                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 25242  018414  8181               	bsf	129,0,b	;volatile
 25243                           
 25244                           ; BSR set to: 57
 25245                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 25246  018416  9185               	bcf	133,0,b	;volatile
 25247                           
 25248                           ; BSR set to: 57
 25249                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 25250  018418  8189               	bsf	137,0,b	;volatile
 25251                           
 25252                           ; BSR set to: 57
 25253                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 25254  01841A  9D88               	bcf	136,6,b	;volatile
 25255                           
 25256                           ; BSR set to: 57
 25257                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 25258  01841C  8581               	bsf	129,2,b	;volatile
 25259                           
 25260                           ; BSR set to: 57
 25261                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 25262  01841E  8781               	bsf	129,3,b	;volatile
 25263                           
 25264                           ; BSR set to: 57
 25265                           ;mcc_generated_files/interrupt_manager.c: 86:     IPR6bits.TMR3IP = 0;
 25266  018420  9D86               	bcf	134,6,b	;volatile
 25267                           
 25268                           ; BSR set to: 57
 25269                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 25270  018422  52E5               	movf	postdec1,f,c
 25271  018424  0012               	return		;funcret
 25272  018426                     __end_of_INTERRUPT_Initialize:
 25273                           	opt callstack 0
 25274                           
 25275 ;; *************** function _FVR_Initialize *****************
 25276 ;; Defined at:
 25277 ;;		line 58 in file "mcc_generated_files/fvr.c"
 25278 ;; Parameters:    Size  Location     Type
 25279 ;;		None
 25280 ;; Auto vars:     Size  Location     Type
 25281 ;;		None
 25282 ;; Return value:  Size  Location     Type
 25283 ;;                  1  [STACK] void 
 25284 ;; Registers used:
 25285 ;;		wreg, status,2
 25286 ;; Tracked objects:
 25287 ;;		On entry : 3F/39
 25288 ;;		On exit  : 3F/3E
 25289 ;;		Unchanged: 0/0
 25290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25295 ;;Total ram usage:        0 bytes
 25296 ;; Hardware stack levels used:    1
 25297 ;; Hardware stack levels required when called:    7
 25298 ;; This function calls:
 25299 ;;		Nothing
 25300 ;; This function is called by:
 25301 ;;		_SYSTEM_Initialize
 25302 ;; This function uses a reentrant model
 25303 ;;
 25304                           
 25305                           	psect	text115
 25306  019506                     __ptext115:
 25307                           	opt callstack 0
 25308  019506                     _FVR_Initialize:
 25309                           	opt callstack 22
 25310                           
 25311                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 25312                           
 25313                           ; BSR set to: 57
 25314                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25315                           ;incstack = 0
 25316  019506  0EAF               	movlw	175
 25317  019508  013E               	movlb	62	; () banked
 25318  01950A  6FC1               	movwf	193,b	;volatile
 25319                           
 25320                           ; BSR set to: 62
 25321                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 25322  01950C  0012               	return		;funcret
 25323  01950E                     __end_of_FVR_Initialize:
 25324                           	opt callstack 0
 25325                           
 25326 ;; *************** function _EXT_INT_Initialize *****************
 25327 ;; Defined at:
 25328 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 25329 ;; Parameters:    Size  Location     Type
 25330 ;;		None
 25331 ;; Auto vars:     Size  Location     Type
 25332 ;;		None
 25333 ;; Return value:  Size  Location     Type
 25334 ;;                  1  [STACK] void 
 25335 ;; Registers used:
 25336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25337 ;; Tracked objects:
 25338 ;;		On entry : 3F/39
 25339 ;;		On exit  : 3F/39
 25340 ;;		Unchanged: 0/0
 25341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25346 ;;Total ram usage:        0 bytes
 25347 ;; Hardware stack levels used:    1
 25348 ;; Hardware stack levels required when called:    8
 25349 ;; This function calls:
 25350 ;;		_INT0_SetInterruptHandler
 25351 ;;		_INT1_SetInterruptHandler
 25352 ;; This function is called by:
 25353 ;;		_SYSTEM_Initialize
 25354 ;; This function uses a reentrant model
 25355 ;;
 25356                           
 25357                           	psect	text116
 25358  018CC0                     __ptext116:
 25359                           	opt callstack 0
 25360  018CC0                     _EXT_INT_Initialize:
 25361                           	opt callstack 21
 25362                           
 25363                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 25364                           
 25365                           ; BSR set to: 62
 25366                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25367                           ;incstack = 0
 25368  018CC0  0139               	movlb	57	; () banked
 25369  018CC2  91A1               	bcf	161,0,b	;volatile
 25370                           
 25371                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 25372  018CC4  90D2               	bcf	210,0,c	;volatile
 25373                           
 25374                           ; BSR set to: 57
 25375                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 25376  018CC6  0E32               	movlw	low _INT0_DefaultInterruptHandler
 25377  018CC8  6EE6               	movwf	postinc1,c
 25378  018CCA  0E95               	movlw	high _INT0_DefaultInterruptHandler
 25379  018CCC  6EE6               	movwf	postinc1,c
 25380  018CCE  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 25381  018CD0  6EE6               	movwf	postinc1,c
 25382  018CD2  EC35  F0C8         	call	_INT0_SetInterruptHandler	;wreg free
 25383                           
 25384                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 25385  018CD6  0139               	movlb	57	; () banked
 25386  018CD8  8191               	bsf	145,0,b	;volatile
 25387                           
 25388                           ; BSR set to: 57
 25389                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 25390  018CDA  91A5               	bcf	165,0,b	;volatile
 25391                           
 25392                           ; BSR set to: 57
 25393                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 25394  018CDC  92D2               	bcf	210,1,c	;volatile
 25395                           
 25396                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 25397  018CDE  0E2E               	movlw	low _INT1_DefaultInterruptHandler
 25398  018CE0  6EE6               	movwf	postinc1,c
 25399  018CE2  0E95               	movlw	high _INT1_DefaultInterruptHandler
 25400  018CE4  6EE6               	movwf	postinc1,c
 25401  018CE6  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 25402  018CE8  6EE6               	movwf	postinc1,c
 25403  018CEA  EC21  F0C8         	call	_INT1_SetInterruptHandler	;wreg free
 25404                           
 25405                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 25406  018CEE  0139               	movlb	57	; () banked
 25407  018CF0  8195               	bsf	149,0,b	;volatile
 25408                           
 25409                           ; BSR set to: 57
 25410                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25411  018CF2  0012               	return		;funcret
 25412  018CF4                     __end_of_EXT_INT_Initialize:
 25413                           	opt callstack 0
 25414                           
 25415 ;; *************** function _INT1_SetInterruptHandler *****************
 25416 ;; Defined at:
 25417 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 25418 ;; Parameters:    Size  Location     Type
 25419 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25420 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 25421 ;; Auto vars:     Size  Location     Type
 25422 ;;		None
 25423 ;; Return value:  Size  Location     Type
 25424 ;;                  1  [STACK] void 
 25425 ;; Registers used:
 25426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25427 ;; Tracked objects:
 25428 ;;		On entry : 3F/39
 25429 ;;		On exit  : 0/0
 25430 ;;		Unchanged: 0/0
 25431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25436 ;;Total ram usage:        0 bytes
 25437 ;; Hardware stack levels used:    1
 25438 ;; Hardware stack levels required when called:    7
 25439 ;; This function calls:
 25440 ;;		Nothing
 25441 ;; This function is called by:
 25442 ;;		_EXT_INT_Initialize
 25443 ;;		_start_switch_handler
 25444 ;; This function uses a reentrant model
 25445 ;;
 25446                           
 25447                           	psect	text117
 25448  019042                     __ptext117:
 25449                           	opt callstack 0
 25450  019042                     _INT1_SetInterruptHandler:
 25451                           	opt callstack 22
 25452                           
 25453                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 25454                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25455                           
 25456                           ; BSR set to: 57
 25457                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25458                           ;incstack = 0
 25459  019042  50E1               	movf	fsr1l,w,c
 25460  019044  0FFD               	addlw	-3
 25461  019046  6ED9               	movwf	fsr2l,c
 25462  019048  50E2               	movf	fsr1h,w,c
 25463  01904A  6EDA               	movwf	fsr2h,c
 25464  01904C  0EFF               	movlw	255
 25465  01904E  22DA               	addwfc	fsr2h,f,c
 25466  019050  006F FF78  F004    	movff	postinc2,_INT1_InterruptHandler
 25467  019056  006F FF78  F005    	movff	postinc2,_INT1_InterruptHandler+1
 25468  01905C  006F FF74  F006    	movff	postdec2,_INT1_InterruptHandler+2
 25469                           
 25470                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25471  019062  52E5               	movf	postdec1,f,c
 25472  019064  52E5               	movf	postdec1,f,c
 25473  019066  52E5               	movf	postdec1,f,c
 25474  019068  0012               	return		;funcret
 25475  01906A                     __end_of_INT1_SetInterruptHandler:
 25476                           	opt callstack 0
 25477                           
 25478 ;; *************** function _INT0_SetInterruptHandler *****************
 25479 ;; Defined at:
 25480 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 25481 ;; Parameters:    Size  Location     Type
 25482 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25483 ;;		 -> INT0_DefaultInterruptHandler(1), 
 25484 ;; Auto vars:     Size  Location     Type
 25485 ;;		None
 25486 ;; Return value:  Size  Location     Type
 25487 ;;                  1  [STACK] void 
 25488 ;; Registers used:
 25489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25490 ;; Tracked objects:
 25491 ;;		On entry : 3F/39
 25492 ;;		On exit  : 0/0
 25493 ;;		Unchanged: 0/0
 25494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25499 ;;Total ram usage:        0 bytes
 25500 ;; Hardware stack levels used:    1
 25501 ;; Hardware stack levels required when called:    7
 25502 ;; This function calls:
 25503 ;;		Nothing
 25504 ;; This function is called by:
 25505 ;;		_EXT_INT_Initialize
 25506 ;; This function uses a reentrant model
 25507 ;;
 25508                           
 25509                           	psect	text118
 25510  01906A                     __ptext118:
 25511                           	opt callstack 0
 25512  01906A                     _INT0_SetInterruptHandler:
 25513                           	opt callstack 21
 25514                           
 25515                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 25516                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25517                           
 25518                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25519                           ;incstack = 0
 25520  01906A  50E1               	movf	fsr1l,w,c
 25521  01906C  0FFD               	addlw	-3
 25522  01906E  6ED9               	movwf	fsr2l,c
 25523  019070  50E2               	movf	fsr1h,w,c
 25524  019072  6EDA               	movwf	fsr2h,c
 25525  019074  0EFF               	movlw	255
 25526  019076  22DA               	addwfc	fsr2h,f,c
 25527  019078  006F FF78  F007    	movff	postinc2,_INT0_InterruptHandler
 25528  01907E  006F FF78  F008    	movff	postinc2,_INT0_InterruptHandler+1
 25529  019084  006F FF74  F009    	movff	postdec2,_INT0_InterruptHandler+2
 25530                           
 25531                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25532  01908A  52E5               	movf	postdec1,f,c
 25533  01908C  52E5               	movf	postdec1,f,c
 25534  01908E  52E5               	movf	postdec1,f,c
 25535  019090  0012               	return		;funcret
 25536  019092                     __end_of_INT0_SetInterruptHandler:
 25537                           	opt callstack 0
 25538                           
 25539 ;; *************** function _DMA2_Initialize *****************
 25540 ;; Defined at:
 25541 ;;		line 61 in file "mcc_generated_files/dma2.c"
 25542 ;; Parameters:    Size  Location     Type
 25543 ;;		None
 25544 ;; Auto vars:     Size  Location     Type
 25545 ;;		None
 25546 ;; Return value:  Size  Location     Type
 25547 ;;                  1  [STACK] void 
 25548 ;; Registers used:
 25549 ;;		wreg, status,2
 25550 ;; Tracked objects:
 25551 ;;		On entry : 3F/3D
 25552 ;;		On exit  : 3F/3B
 25553 ;;		Unchanged: 0/0
 25554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25559 ;;Total ram usage:        0 bytes
 25560 ;; Hardware stack levels used:    1
 25561 ;; Hardware stack levels required when called:    7
 25562 ;; This function calls:
 25563 ;;		Nothing
 25564 ;; This function is called by:
 25565 ;;		_SYSTEM_Initialize
 25566 ;; This function uses a reentrant model
 25567 ;;
 25568                           
 25569                           	psect	text119
 25570  01866A                     __ptext119:
 25571                           	opt callstack 0
 25572  01866A                     _DMA2_Initialize:
 25573                           	opt callstack 22
 25574                           
 25575                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 25576                           
 25577                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25578                           ;incstack = 0
 25579  01866A  0E00               	movlw	0
 25580  01866C  013B               	movlb	59	; () banked
 25581  01866E  6FD9               	movwf	217,b	;volatile
 25582  018670  0E10               	movlw	16
 25583  018672  6FDA               	movwf	218,b	;volatile
 25584  018674  0E00               	movlw	0
 25585  018676  6FDB               	movwf	219,b	;volatile
 25586                           
 25587                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 25588  018678  0E3F               	movlw	63
 25589  01867A  6FD1               	movwf	209,b	;volatile
 25590  01867C  0EBB               	movlw	187
 25591  01867E  6FD0               	movwf	208,b	;volatile
 25592                           
 25593                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 25594  018680  0E03               	movlw	3
 25595  018682  6FDD               	movwf	221,b	;volatile
 25596                           
 25597                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 25598  018684  0E00               	movlw	0
 25599  018686  6FD8               	movwf	216,b	;volatile
 25600  018688  0E01               	movlw	1
 25601  01868A  6FD7               	movwf	215,b	;volatile
 25602                           
 25603                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 25604  01868C  0E00               	movlw	0
 25605  01868E  6FCF               	movwf	207,b	;volatile
 25606  018690  0E01               	movlw	1
 25607  018692  6FCE               	movwf	206,b	;volatile
 25608                           
 25609                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 25610  018694  0E46               	movlw	70
 25611  018696  6FDF               	movwf	223,b	;volatile
 25612                           
 25613                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 25614  018698  0E3D               	movlw	61
 25615  01869A  6FDE               	movwf	222,b	;volatile
 25616                           
 25617                           ; BSR set to: 59
 25618                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 25619  01869C  0139               	movlb	57	; () banked
 25620  01869E  97A5               	bcf	165,3,b	;volatile
 25621                           
 25622                           ; BSR set to: 57
 25623                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 25624  0186A0  95A5               	bcf	165,2,b	;volatile
 25625                           
 25626                           ; BSR set to: 57
 25627                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 25628  0186A2  9BA5               	bcf	165,5,b	;volatile
 25629                           
 25630                           ; BSR set to: 57
 25631                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 25632  0186A4  99A5               	bcf	165,4,b	;volatile
 25633                           
 25634                           ; BSR set to: 57
 25635                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 25636  0186A6  9795               	bcf	149,3,b	;volatile
 25637                           
 25638                           ; BSR set to: 57
 25639                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 25640  0186A8  9595               	bcf	149,2,b	;volatile
 25641                           
 25642                           ; BSR set to: 57
 25643                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 25644  0186AA  9B95               	bcf	149,5,b	;volatile
 25645                           
 25646                           ; BSR set to: 57
 25647                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 25648  0186AC  9995               	bcf	149,4,b	;volatile
 25649  0186AE  9ED2               	bcf	16338,7,c	;# 
 25650  0186B0  0139               	banksel	14831	;# 
 25651  0186B2  0E55               	movlw	85	;# 
 25652  0186B4  6FEF               	movwf	14831,b	;# 
 25653  0186B6  0EAA               	movlw	170	;# 
 25654  0186B8  6FEF               	movwf	14831,b	;# 
 25655  0186BA  81EF               	bsf	14831,0,b	;# 
 25656  0186BC  8ED2               	bsf	16338,7,c	;# 
 25657                           
 25658                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 25659  0186BE  013B               	movlb	59	; () banked
 25660  0186C0  6BDC               	clrf	220,b	;volatile
 25661                           
 25662                           ; BSR set to: 59
 25663                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25664  0186C2  0012               	return		;funcret
 25665  0186C4                     __end_of_DMA2_Initialize:
 25666                           	opt callstack 0
 25667                           
 25668 ;; *************** function _DMA1_Initialize *****************
 25669 ;; Defined at:
 25670 ;;		line 86 in file "mcc_generated_files/dma1.c"
 25671 ;; Parameters:    Size  Location     Type
 25672 ;;		None
 25673 ;; Auto vars:     Size  Location     Type
 25674 ;;		None
 25675 ;; Return value:  Size  Location     Type
 25676 ;;                  1  [STACK] void 
 25677 ;; Registers used:
 25678 ;;		wreg, status,2
 25679 ;; Tracked objects:
 25680 ;;		On entry : 3F/3B
 25681 ;;		On exit  : 3F/3B
 25682 ;;		Unchanged: 0/0
 25683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25688 ;;Total ram usage:        0 bytes
 25689 ;; Hardware stack levels used:    1
 25690 ;; Hardware stack levels required when called:    7
 25691 ;; This function calls:
 25692 ;;		Nothing
 25693 ;; This function is called by:
 25694 ;;		_SYSTEM_Initialize
 25695 ;; This function uses a reentrant model
 25696 ;;
 25697                           
 25698                           	psect	text120
 25699  018280                     __ptext120:
 25700                           	opt callstack 0
 25701  018280                     _DMA1_Initialize:
 25702                           	opt callstack 22
 25703                           
 25704                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 25705                           
 25706                           ; BSR set to: 59
 25707                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25708                           ;incstack = 0
 25709  018280  0E00               	movlw	0
 25710  018282  013B               	movlb	59	; () banked
 25711  018284  6FF9               	movwf	249,b	;volatile
 25712  018286  0E10               	movlw	16
 25713  018288  6FFA               	movwf	250,b	;volatile
 25714  01828A  0E00               	movlw	0
 25715  01828C  6FFB               	movwf	251,b	;volatile
 25716                           
 25717                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 25718  01828E  0E3D               	movlw	61
 25719  018290  6FF1               	movwf	241,b	;volatile
 25720  018292  0E11               	movlw	17
 25721  018294  6FF0               	movwf	240,b	;volatile
 25722                           
 25723                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 25724  018296  0E03               	movlw	3
 25725  018298  6FFD               	movwf	253,b	;volatile
 25726                           
 25727                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 25728  01829A  0E00               	movlw	0
 25729  01829C  6FF8               	movwf	248,b	;volatile
 25730  01829E  0E01               	movlw	1
 25731  0182A0  6FF7               	movwf	247,b	;volatile
 25732                           
 25733                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 25734  0182A2  0E00               	movlw	0
 25735  0182A4  6FEF               	movwf	239,b	;volatile
 25736  0182A6  0E01               	movlw	1
 25737  0182A8  6FEE               	movwf	238,b	;volatile
 25738                           
 25739                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 25740  0182AA  0E15               	movlw	21
 25741  0182AC  6FFF               	movwf	255,b	;volatile
 25742                           
 25743                           ; BSR set to: 59
 25744                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 25745  0182AE  6BFE               	clrf	254,b	;volatile
 25746                           
 25747                           ; BSR set to: 59
 25748                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 25749  0182B0  0139               	movlb	57	; () banked
 25750  0182B2  93A2               	bcf	162,1,b	;volatile
 25751                           
 25752                           ; BSR set to: 57
 25753                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 25754  0182B4  91A2               	bcf	162,0,b	;volatile
 25755                           
 25756                           ; BSR set to: 57
 25757                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 25758  0182B6  97A2               	bcf	162,3,b	;volatile
 25759                           
 25760                           ; BSR set to: 57
 25761                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 25762  0182B8  95A2               	bcf	162,2,b	;volatile
 25763                           
 25764                           ; BSR set to: 57
 25765                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 25766  0182BA  8392               	bsf	146,1,b	;volatile
 25767                           
 25768                           ; BSR set to: 57
 25769                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 25770  0182BC  8192               	bsf	146,0,b	;volatile
 25771                           
 25772                           ; BSR set to: 57
 25773                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 25774  0182BE  8792               	bsf	146,3,b	;volatile
 25775                           
 25776                           ; BSR set to: 57
 25777                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 25778  0182C0  8592               	bsf	146,2,b	;volatile
 25779                           
 25780                           ; BSR set to: 57
 25781                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 25782  0182C2  6BF1               	clrf	241,b	;volatile
 25783                           
 25784                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 25785  0182C4  0E01               	movlw	1
 25786  0182C6  6FF2               	movwf	242,b	;volatile
 25787                           
 25788                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 25789  0182C8  0E04               	movlw	4
 25790  0182CA  6FF3               	movwf	243,b	;volatile
 25791                           
 25792                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 25793  0182CC  0E02               	movlw	2
 25794  0182CE  6FF4               	movwf	244,b	;volatile
 25795                           
 25796                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 25797  0182D0  0E03               	movlw	3
 25798  0182D2  6FF7               	movwf	247,b	;volatile
 25799  0182D4  9ED2               	bcf	16338,7,c	;# 
 25800  0182D6  0139               	banksel	14831	;# 
 25801  0182D8  0E55               	movlw	85	;# 
 25802  0182DA  6FEF               	movwf	14831,b	;# 
 25803  0182DC  0EAA               	movlw	170	;# 
 25804  0182DE  6FEF               	movwf	14831,b	;# 
 25805  0182E0  81EF               	bsf	14831,0,b	;# 
 25806  0182E2  8ED2               	bsf	16338,7,c	;# 
 25807                           
 25808                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 25809  0182E4  013B               	movlb	59	; () banked
 25810  0182E6  6BFC               	clrf	252,b	;volatile
 25811                           
 25812                           ; BSR set to: 59
 25813                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25814  0182E8  0012               	return		;funcret
 25815  0182EA                     __end_of_DMA1_Initialize:
 25816                           	opt callstack 0
 25817                           
 25818 ;; *************** function _CLKREF_Initialize *****************
 25819 ;; Defined at:
 25820 ;;		line 58 in file "mcc_generated_files/clkref.c"
 25821 ;; Parameters:    Size  Location     Type
 25822 ;;		None
 25823 ;; Auto vars:     Size  Location     Type
 25824 ;;		None
 25825 ;; Return value:  Size  Location     Type
 25826 ;;                  1  [STACK] void 
 25827 ;; Registers used:
 25828 ;;		wreg, status,2
 25829 ;; Tracked objects:
 25830 ;;		On entry : 3F/3B
 25831 ;;		On exit  : 3F/3C
 25832 ;;		Unchanged: 0/0
 25833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25838 ;;Total ram usage:        0 bytes
 25839 ;; Hardware stack levels used:    1
 25840 ;; Hardware stack levels required when called:    7
 25841 ;; This function calls:
 25842 ;;		Nothing
 25843 ;; This function is called by:
 25844 ;;		_SYSTEM_Initialize
 25845 ;; This function uses a reentrant model
 25846 ;;
 25847                           
 25848                           	psect	text121
 25849  0194BA                     __ptext121:
 25850                           	opt callstack 0
 25851  0194BA                     _CLKREF_Initialize:
 25852                           	opt callstack 22
 25853                           
 25854                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 25855                           
 25856                           ; BSR set to: 59
 25857                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25858                           ;incstack = 0
 25859  0194BA  013C               	movlb	60	; () banked
 25860  0194BC  6BE6               	clrf	230,b	;volatile
 25861                           
 25862                           ; BSR set to: 60
 25863                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 25864  0194BE  0E94               	movlw	148
 25865  0194C0  6FE5               	movwf	229,b	;volatile
 25866                           
 25867                           ; BSR set to: 60
 25868                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25869  0194C2  0012               	return		;funcret
 25870  0194C4                     __end_of_CLKREF_Initialize:
 25871                           	opt callstack 0
 25872                           
 25873 ;; *************** function _ADCC_Initialize *****************
 25874 ;; Defined at:
 25875 ;;		line 65 in file "mcc_generated_files/adcc.c"
 25876 ;; Parameters:    Size  Location     Type
 25877 ;;		None
 25878 ;; Auto vars:     Size  Location     Type
 25879 ;;		None
 25880 ;; Return value:  Size  Location     Type
 25881 ;;                  1  [STACK] void 
 25882 ;; Registers used:
 25883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 25884 ;; Tracked objects:
 25885 ;;		On entry : 3F/3E
 25886 ;;		On exit  : 0/0
 25887 ;;		Unchanged: 0/0
 25888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25893 ;;Total ram usage:        0 bytes
 25894 ;; Hardware stack levels used:    1
 25895 ;; Hardware stack levels required when called:    8
 25896 ;; This function calls:
 25897 ;;		_ADCC_SetADIInterruptHandler
 25898 ;;		_ADCC_SetADTIInterruptHandler
 25899 ;; This function is called by:
 25900 ;;		_SYSTEM_Initialize
 25901 ;; This function uses a reentrant model
 25902 ;;
 25903                           
 25904                           	psect	text122
 25905  0182EA                     __ptext122:
 25906                           	opt callstack 0
 25907  0182EA                     _ADCC_Initialize:
 25908                           	opt callstack 21
 25909                           
 25910                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 25911                           
 25912                           ; BSR set to: 60
 25913                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25914                           ;incstack = 0
 25915  0182EA  013E               	movlb	62	; () banked
 25916  0182EC  6BDE               	clrf	222,b	;volatile
 25917                           
 25918                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 25919  0182EE  6BDF               	clrf	223,b	;volatile
 25920                           
 25921                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 25922  0182F0  6BE0               	clrf	224,b	;volatile
 25923                           
 25924                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 25925  0182F2  6BE1               	clrf	225,b	;volatile
 25926                           
 25927                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 25928  0182F4  6BE4               	clrf	228,b	;volatile
 25929                           
 25930                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 25931  0182F6  6BE5               	clrf	229,b	;volatile
 25932                           
 25933                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 25934  0182F8  6BEA               	clrf	234,b	;volatile
 25935                           
 25936                           ; BSR set to: 62
 25937                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 25938  0182FA  0E40               	movlw	64
 25939  0182FC  6FEC               	movwf	236,b	;volatile
 25940                           
 25941                           ; BSR set to: 62
 25942                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 25943  0182FE  6BF1               	clrf	241,b	;volatile
 25944                           
 25945                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 25946  018300  0E20               	movlw	32
 25947  018302  6FF3               	movwf	243,b	;volatile
 25948                           
 25949                           ; BSR set to: 62
 25950                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 25951  018304  6BF4               	clrf	244,b	;volatile
 25952                           
 25953                           ; BSR set to: 62
 25954                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 25955  018306  6BF5               	clrf	245,b	;volatile
 25956                           
 25957                           ; BSR set to: 62
 25958                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 25959  018308  6BF6               	clrf	246,b	;volatile
 25960                           
 25961                           ; BSR set to: 62
 25962                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 25963  01830A  6BF7               	clrf	247,b	;volatile
 25964                           
 25965                           ; BSR set to: 62
 25966                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 25967  01830C  6BF9               	clrf	249,b	;volatile
 25968                           
 25969                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 25970  01830E  0E5B               	movlw	91
 25971  018310  6FFA               	movwf	250,b	;volatile
 25972                           
 25973                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 25974  018312  0E27               	movlw	39
 25975  018314  6FFB               	movwf	251,b	;volatile
 25976                           
 25977                           ; BSR set to: 62
 25978                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 25979  018316  6BFC               	clrf	252,b	;volatile
 25980                           
 25981                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 25982  018318  0E02               	movlw	2
 25983  01831A  6FFD               	movwf	253,b	;volatile
 25984                           
 25985                           ; BSR set to: 62
 25986                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 25987  01831C  6BFE               	clrf	254,b	;volatile
 25988                           
 25989                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 25990  01831E  0E07               	movlw	7
 25991  018320  6FFF               	movwf	255,b	;volatile
 25992                           
 25993                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 25994  018322  0E84               	movlw	132
 25995  018324  6FF8               	movwf	248,b	;volatile
 25996                           
 25997                           ; BSR set to: 62
 25998                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 25999  018326  0139               	movlb	57	; () banked
 26000  018328  95A1               	bcf	161,2,b	;volatile
 26001                           
 26002                           ; BSR set to: 57
 26003                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 26004  01832A  8591               	bsf	145,2,b	;volatile
 26005                           
 26006                           ; BSR set to: 57
 26007                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 26008  01832C  0E34               	movlw	low _ADCC_DefaultInterruptHandler
 26009  01832E  6EE6               	movwf	postinc1,c
 26010  018330  0E95               	movlw	high _ADCC_DefaultInterruptHandler
 26011  018332  6EE6               	movwf	postinc1,c
 26012  018334  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 26013  018336  6EE6               	movwf	postinc1,c
 26014  018338  EC5D  F0C8         	call	_ADCC_SetADIInterruptHandler	;wreg free
 26015                           
 26016                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 26017  01833C  0139               	movlb	57	; () banked
 26018  01833E  97A1               	bcf	161,3,b	;volatile
 26019                           
 26020                           ; BSR set to: 57
 26021                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 26022  018340  8791               	bsf	145,3,b	;volatile
 26023                           
 26024                           ; BSR set to: 57
 26025                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 26026  018342  0E34               	movlw	low _ADCC_DefaultInterruptHandler
 26027  018344  6EE6               	movwf	postinc1,c
 26028  018346  0E95               	movlw	high _ADCC_DefaultInterruptHandler
 26029  018348  6EE6               	movwf	postinc1,c
 26030  01834A  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 26031  01834C  6EE6               	movwf	postinc1,c
 26032  01834E  EC49  F0C8         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 26033                           
 26034                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26035  018352  0012               	return		;funcret
 26036  018354                     __end_of_ADCC_Initialize:
 26037                           	opt callstack 0
 26038                           
 26039 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 26040 ;; Defined at:
 26041 ;;		line 336 in file "mcc_generated_files/adcc.c"
 26042 ;; Parameters:    Size  Location     Type
 26043 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26044 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 26045 ;; Auto vars:     Size  Location     Type
 26046 ;;		None
 26047 ;; Return value:  Size  Location     Type
 26048 ;;                  1  [STACK] void 
 26049 ;; Registers used:
 26050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26051 ;; Tracked objects:
 26052 ;;		On entry : 0/0
 26053 ;;		On exit  : 0/0
 26054 ;;		Unchanged: 0/0
 26055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26060 ;;Total ram usage:        0 bytes
 26061 ;; Hardware stack levels used:    1
 26062 ;; Hardware stack levels required when called:    7
 26063 ;; This function calls:
 26064 ;;		Nothing
 26065 ;; This function is called by:
 26066 ;;		_ADCC_Initialize
 26067 ;;		_start_adc_scan
 26068 ;; This function uses a reentrant model
 26069 ;;
 26070                           
 26071                           	psect	text123
 26072  019092                     __ptext123:
 26073                           	opt callstack 0
 26074  019092                     _ADCC_SetADTIInterruptHandler:
 26075                           	opt callstack 22
 26076                           
 26077                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 26078                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26079                           
 26080                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26081                           ;incstack = 0
 26082  019092  50E1               	movf	fsr1l,w,c
 26083  019094  0FFD               	addlw	-3
 26084  019096  6ED9               	movwf	fsr2l,c
 26085  019098  50E2               	movf	fsr1h,w,c
 26086  01909A  6EDA               	movwf	fsr2h,c
 26087  01909C  0EFF               	movlw	255
 26088  01909E  22DA               	addwfc	fsr2h,f,c
 26089  0190A0  006F FF78  F0B2    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 26090  0190A6  006F FF78  F0B3    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 26091  0190AC  006F FF74  F0B4    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 26092                           
 26093                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 26094  0190B2  52E5               	movf	postdec1,f,c
 26095  0190B4  52E5               	movf	postdec1,f,c
 26096  0190B6  52E5               	movf	postdec1,f,c
 26097  0190B8  0012               	return		;funcret
 26098  0190BA                     __end_of_ADCC_SetADTIInterruptHandler:
 26099                           	opt callstack 0
 26100                           
 26101 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 26102 ;; Defined at:
 26103 ;;		line 323 in file "mcc_generated_files/adcc.c"
 26104 ;; Parameters:    Size  Location     Type
 26105 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26106 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 26107 ;; Auto vars:     Size  Location     Type
 26108 ;;		None
 26109 ;; Return value:  Size  Location     Type
 26110 ;;                  1  [STACK] void 
 26111 ;; Registers used:
 26112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26113 ;; Tracked objects:
 26114 ;;		On entry : 6/0
 26115 ;;		On exit  : 0/0
 26116 ;;		Unchanged: 0/0
 26117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26122 ;;Total ram usage:        0 bytes
 26123 ;; Hardware stack levels used:    1
 26124 ;; Hardware stack levels required when called:    7
 26125 ;; This function calls:
 26126 ;;		Nothing
 26127 ;; This function is called by:
 26128 ;;		_ADCC_Initialize
 26129 ;;		_start_adc_scan
 26130 ;; This function uses a reentrant model
 26131 ;;
 26132                           
 26133                           	psect	text124
 26134  0190BA                     __ptext124:
 26135                           	opt callstack 0
 26136  0190BA                     _ADCC_SetADIInterruptHandler:
 26137                           	opt callstack 22
 26138                           
 26139                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 26140                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26141                           
 26142                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26143                           ;incstack = 0
 26144  0190BA  50E1               	movf	fsr1l,w,c
 26145  0190BC  0FFD               	addlw	-3
 26146  0190BE  6ED9               	movwf	fsr2l,c
 26147  0190C0  50E2               	movf	fsr1h,w,c
 26148  0190C2  6EDA               	movwf	fsr2h,c
 26149  0190C4  0EFF               	movlw	255
 26150  0190C6  22DA               	addwfc	fsr2h,f,c
 26151  0190C8  006F FF78  F0B5    	movff	postinc2,_ADCC_ADI_InterruptHandler
 26152  0190CE  006F FF78  F0B6    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 26153  0190D4  006F FF74  F0B7    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 26154                           
 26155                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 26156  0190DA  52E5               	movf	postdec1,f,c
 26157  0190DC  52E5               	movf	postdec1,f,c
 26158  0190DE  52E5               	movf	postdec1,f,c
 26159  0190E0  0012               	return		;funcret
 26160  0190E2                     __end_of_ADCC_SetADIInterruptHandler:
 26161                           	opt callstack 0
 26162                           
 26163 ;; *************** function _INT1_ISR *****************
 26164 ;; Defined at:
 26165 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 26166 ;; Parameters:    Size  Location     Type
 26167 ;;		None
 26168 ;; Auto vars:     Size  Location     Type
 26169 ;;		None
 26170 ;; Return value:  Size  Location     Type
 26171 ;;                  1    wreg      void 
 26172 ;; Registers used:
 26173 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 26174 ;; Tracked objects:
 26175 ;;		On entry : 0/0
 26176 ;;		On exit  : 0/0
 26177 ;;		Unchanged: 0/0
 26178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26181 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26182 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26183 ;;Total ram usage:        4 bytes
 26184 ;; Hardware stack levels used:    1
 26185 ;; Hardware stack levels required when called:    5
 26186 ;; This function calls:
 26187 ;;		_INT1_CallBack
 26188 ;; This function is called by:
 26189 ;;		Interrupt level 1
 26190 ;; This function uses a non-reentrant model
 26191 ;;
 26192                           
 26193                           	psect	text125
 26194  018B40                     __ptext125:
 26195                           	opt callstack 0
 26196  018B40                     _INT1_ISR:
 26197                           	opt callstack 12
 26198                           
 26199                           ;incstack = 0
 26200  018B40  006F FF60  F04B    	movff	status,??_INT1_ISR
 26201  018B46  0060  F094  F04C   	movff	btemp,??_INT1_ISR+1
 26202  018B4C  0060  F0BC  F04D   	movff	btemp+10,??_INT1_ISR+2
 26203  018B52  0060  F0C0  F04E   	movff	btemp+11,??_INT1_ISR+3
 26204  018B58  EE16  F00B         	lfsr	1,___intlo_sp
 26205                           
 26206                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 26207  018B5C  0139               	movlb	57	; () banked
 26208  018B5E  91A5               	bcf	165,0,b	;volatile
 26209                           
 26210                           ; BSR set to: 57
 26211                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 26212  018B60  EC2E  F0C9         	call	_INT1_CallBack	;wreg free
 26213  018B64  0060  F138  F030   	movff	??_INT1_ISR+3,btemp+11
 26214  018B6A  0060  F134  F02F   	movff	??_INT1_ISR+2,btemp+10
 26215  018B70  0060  F130  F025   	movff	??_INT1_ISR+1,btemp
 26216  018B76  0060  F12F  FFD8   	movff	??_INT1_ISR,status
 26217  018B7C  0011               	retfie		f
 26218  018B7E                     __end_of_INT1_ISR:
 26219                           	opt callstack 0
 26220                           
 26221 ;; *************** function _INT1_CallBack *****************
 26222 ;; Defined at:
 26223 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 26224 ;; Parameters:    Size  Location     Type
 26225 ;;		None
 26226 ;; Auto vars:     Size  Location     Type
 26227 ;;		None
 26228 ;; Return value:  Size  Location     Type
 26229 ;;                  1  [STACK] void 
 26230 ;; Registers used:
 26231 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 26232 ;; Tracked objects:
 26233 ;;		On entry : 3F/39
 26234 ;;		On exit  : 0/0
 26235 ;;		Unchanged: 0/0
 26236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26241 ;;Total ram usage:        0 bytes
 26242 ;; Hardware stack levels used:    1
 26243 ;; Hardware stack levels required when called:    4
 26244 ;; This function calls:
 26245 ;;		Absolute function
 26246 ;;		_INT1_DefaultInterruptHandler
 26247 ;;		_switch_handler
 26248 ;; This function is called by:
 26249 ;;		_INT1_ISR
 26250 ;; This function uses a reentrant model
 26251 ;;
 26252                           
 26253                           	psect	text126
 26254  01925C                     __ptext126:
 26255                           	opt callstack 0
 26256  01925C                     _INT1_CallBack:
 26257                           	opt callstack 12
 26258                           
 26259                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 26260                           
 26261                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26262                           ;incstack = 0
 26263  01925C  5004               	movf	_INT1_InterruptHandler^0,w,c
 26264  01925E  1005               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 26265  019260  1006               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 26266  019262  B4D8               	btfsc	status,2,c
 26267  019264  0012               	return	
 26268                           
 26269                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 26270  019266  D801               	call	u863_28
 26271  019268  0012               	return	
 26272  01926A                     u863_28:
 26273  01926A  0005               	push	
 26274  01926C  6EFA               	movwf	pclath,c
 26275  01926E  5004               	movf	_INT1_InterruptHandler^0,w,c
 26276  019270  6EFD               	movwf	tosl,c
 26277  019272  5005               	movf	(_INT1_InterruptHandler+1)^0,w,c
 26278  019274  6EFE               	movwf	tosh,c
 26279  019276  5006               	movf	(_INT1_InterruptHandler+2)^0,w,c
 26280  019278  6EFF               	movwf	tosu,c
 26281  01927A  50FA               	movf	pclath,w,c
 26282  01927C  0012               	return		;indir
 26283  01927E                     __end_of_INT1_CallBack:
 26284                           	opt callstack 0
 26285                           
 26286 ;; *************** function _INT1_DefaultInterruptHandler *****************
 26287 ;; Defined at:
 26288 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 26289 ;; Parameters:    Size  Location     Type
 26290 ;;		None
 26291 ;; Auto vars:     Size  Location     Type
 26292 ;;		None
 26293 ;; Return value:  Size  Location     Type
 26294 ;;                  1  [STACK] void 
 26295 ;; Registers used:
 26296 ;;		None
 26297 ;; Tracked objects:
 26298 ;;		On entry : 0/39
 26299 ;;		On exit  : 0/0
 26300 ;;		Unchanged: 0/0
 26301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26306 ;;Total ram usage:        0 bytes
 26307 ;; Hardware stack levels used:    1
 26308 ;; Hardware stack levels required when called:    3
 26309 ;; This function calls:
 26310 ;;		Nothing
 26311 ;; This function is called by:
 26312 ;;		_EXT_INT_Initialize
 26313 ;;		_INT1_CallBack
 26314 ;; This function uses a reentrant model
 26315 ;;
 26316                           
 26317                           	psect	text127
 26318  01952E                     __ptext127:
 26319                           	opt callstack 0
 26320  01952E                     _INT1_DefaultInterruptHandler:
 26321                           	opt callstack 12
 26322                           
 26323                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26324                           
 26325                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26326                           ;incstack = 0
 26327  01952E  0012               	return		;funcret
 26328  019530                     __end_of_INT1_DefaultInterruptHandler:
 26329                           	opt callstack 0
 26330                           
 26331 ;; *************** function _switch_handler *****************
 26332 ;; Defined at:
 26333 ;;		line 58 in file "dio.c"
 26334 ;; Parameters:    Size  Location     Type
 26335 ;;		None
 26336 ;; Auto vars:     Size  Location     Type
 26337 ;;  i               1  [STACK] unsigned char 
 26338 ;;  sw_value        1  [STACK] unsigned char 
 26339 ;; Return value:  Size  Location     Type
 26340 ;;                  1  [STACK] void 
 26341 ;; Registers used:
 26342 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 26343 ;; Tracked objects:
 26344 ;;		On entry : 0/39
 26345 ;;		On exit  : 0/0
 26346 ;;		Unchanged: 0/0
 26347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26352 ;;Total ram usage:        0 bytes
 26353 ;; Hardware stack levels used:    1
 26354 ;; Hardware stack levels required when called:    3
 26355 ;; This function calls:
 26356 ;;		Nothing
 26357 ;; This function is called by:
 26358 ;;		_start_switch_handler
 26359 ;;		_INT1_CallBack
 26360 ;; This function uses a reentrant model
 26361 ;;
 26362                           
 26363                           	psect	text128
 26364  016D7C                     __ptext128:
 26365                           	opt callstack 0
 26366  016D7C                     _switch_handler:
 26367                           	opt callstack 0
 26368                           
 26369                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26370  016D7C  52E6               	movf	postinc1,f,c
 26371  016D7E  52E6               	movf	postinc1,f,c
 26372                           
 26373                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 26374                           ;stkvar	_i @ sp[(-2)+0]
 26375                           
 26376                           ;incstack = 0
 26377  016D80  0EFE               	movlw	-2
 26378  016D82  6AE3               	clrf	plusw1,c
 26379  016D84  9EBD               	bcf	189,7,c	;volatile
 26380                           
 26381                           ;dio.c: 72:  __nop();
 26382  016D86  F000               	nop	
 26383                           
 26384                           ;dio.c: 73:  __nop();
 26385  016D88  F000               	nop	
 26386                           
 26387                           ;dio.c: 74:  __nop();
 26388  016D8A  F000               	nop	
 26389  016D8C  D019               	goto	l9165
 26390  016D8E                     l9153:
 26391                           
 26392                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 26393  016D8E  A6CF               	btfss	207,3,c	;volatile
 26394  016D90  D011               	goto	u847_20
 26395  016D92  D00D               	goto	u847_21
 26396  016D94                     u844_28:
 26397                           
 26398                           ;stkvar	_sw_value @ sp[(-2)+1]
 26399  016D94  0EFF               	movlw	-1
 26400  016D96  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 26401                           
 26402                           ;dio.c: 80:    break;
 26403  016D9C  D027               	goto	l9167
 26404  016D9E                     l9155:
 26405                           
 26406                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 26407  016D9E  A4CF               	btfss	207,2,c	;volatile
 26408  016DA0  D009               	goto	u847_20
 26409  016DA2  D005               	goto	u847_21
 26410  016DA4                     l9157:
 26411                           
 26412                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 26413  016DA4  A2CF               	btfss	207,1,c	;volatile
 26414  016DA6  D006               	goto	u847_20
 26415  016DA8  D002               	goto	u847_21
 26416  016DAA                     l9159:
 26417                           
 26418                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 26419  016DAA  A0CF               	btfss	207,0,c	;volatile
 26420  016DAC  D003               	goto	u847_20
 26421  016DAE                     u847_21:
 26422  016DAE  6A30               	clrf	(btemp+11)^0,c
 26423  016DB0  2A30               	incf	(btemp+11)^0,f,c
 26424  016DB2  D7F0               	goto	u844_28
 26425  016DB4                     u847_20:
 26426  016DB4  6A30               	clrf	(btemp+11)^0,c
 26427  016DB6  D7EE               	goto	u844_28
 26428  016DB8                     l9161:
 26429                           
 26430                           ;dio.c: 91:    sw_value = 1;
 26431                           ;stkvar	_sw_value @ sp[(-2)+1]
 26432  016DB8  0EFF               	movlw	-1
 26433  016DBA  6AE3               	clrf	plusw1,c
 26434  016DBC  2AE3               	incf	plusw1,f,c
 26435                           
 26436                           ;dio.c: 92:    break;
 26437  016DBE  D016               	goto	l9167
 26438  016DC0                     l9165:
 26439                           
 26440                           ;stkvar	_i @ sp[(-2)+0]
 26441  016DC0  0EFE               	movlw	-2
 26442  016DC2  50E3               	movf	plusw1,w,c
 26443  016DC4  6E2F               	movwf	(btemp+10)^0,c
 26444  016DC6  6A30               	clrf	(btemp+11)^0,c
 26445                           
 26446                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26447                           ; Switch size 1, requested type "simple"
 26448                           ; Number of cases is 1, Range of values is 0 to 0
 26449                           ; switch strategies available:
 26450                           ; Name         Instructions Cycles
 26451                           ; simple_byte            4     3 (average)
 26452                           ;	Chosen strategy is simple_byte
 26453  016DC8  5030               	movf	(btemp+11)^0,w,c
 26454  016DCA  0A00               	xorlw	0	; case 0
 26455  016DCC  A4D8               	btfss	status,2,c
 26456  016DCE  D7F4               	goto	l9161
 26457                           
 26458                           ; Switch size 1, requested type "simple"
 26459                           ; Number of cases is 4, Range of values is 0 to 3
 26460                           ; switch strategies available:
 26461                           ; Name         Instructions Cycles
 26462                           ; simple_byte           13     7 (average)
 26463                           ;	Chosen strategy is simple_byte
 26464  016DD0  502F               	movf	(btemp+10)^0,w,c
 26465  016DD2  0A00               	xorlw	0	; case 0
 26466  016DD4  B4D8               	btfsc	status,2,c
 26467  016DD6  D7E9               	goto	l9159
 26468  016DD8  0A01               	xorlw	1	; case 1
 26469  016DDA  B4D8               	btfsc	status,2,c
 26470  016DDC  D7E3               	goto	l9157
 26471  016DDE  0A03               	xorlw	3	; case 2
 26472  016DE0  B4D8               	btfsc	status,2,c
 26473  016DE2  D7DD               	goto	l9155
 26474  016DE4  0A01               	xorlw	1	; case 3
 26475  016DE6  B4D8               	btfsc	status,2,c
 26476  016DE8  D7D2               	goto	l9153
 26477  016DEA  D7E6               	goto	l9161
 26478  016DEC                     l9167:
 26479                           
 26480                           ;dio.c: 96:   if (sw_value) {
 26481                           ;stkvar	_sw_value @ sp[(-2)+1]
 26482  016DEC  0EFF               	movlw	-1
 26483  016DEE  50E3               	movf	plusw1,w,c
 26484  016DF0  B4D8               	btfsc	status,2,c
 26485  016DF2  D014               	goto	l9173
 26486                           
 26487                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 26488                           ;stkvar	_i @ sp[(-2)+0]
 26489  016DF4  0EFE               	movlw	-2
 26490  016DF6  50E3               	movf	plusw1,w,c
 26491  016DF8  0D05               	mullw	5
 26492  016DFA  50F3               	movf	243,w,c
 26493  016DFC  0F60               	addlw	low _S
 26494  016DFE  6ED9               	movwf	fsr2l,c
 26495  016E00  6ADA               	clrf	fsr2h,c
 26496  016E02  04DE               	decf	postinc2,w,c
 26497  016E04  A4D8               	btfss	status,2,c
 26498  016E06  D041               	goto	l9181
 26499                           
 26500                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 26501                           ;stkvar	_i @ sp[(-2)+0]
 26502  016E08  0EFE               	movlw	-2
 26503  016E0A  50E3               	movf	plusw1,w,c
 26504  016E0C  0D05               	mullw	5
 26505  016E0E  50F3               	movf	243,w,c
 26506  016E10  0F60               	addlw	low _S
 26507  016E12  6ED9               	movwf	fsr2l,c
 26508  016E14  6ADA               	clrf	fsr2h,c
 26509  016E16  0E00               	movlw	0
 26510  016E18  6EDF               	movwf	indf2,c
 26511  016E1A  D037               	goto	l9181
 26512  016E1C                     l9173:
 26513                           
 26514                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 26515                           ;stkvar	_i @ sp[(-2)+0]
 26516  016E1C  0EFE               	movlw	-2
 26517  016E1E  50E3               	movf	plusw1,w,c
 26518  016E20  0D05               	mullw	5
 26519  016E22  50F3               	movf	243,w,c
 26520  016E24  0F60               	addlw	low _S
 26521  016E26  6ED9               	movwf	fsr2l,c
 26522  016E28  6ADA               	clrf	fsr2h,c
 26523  016E2A  50DF               	movf	indf2,w,c
 26524  016E2C  A4D8               	btfss	status,2,c
 26525  016E2E  D02D               	goto	l9181
 26526                           
 26527                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 26528                           ;stkvar	_i @ sp[(-2)+0]
 26529  016E30  0EFE               	movlw	-2
 26530  016E32  50E3               	movf	plusw1,w,c
 26531  016E34  0D05               	mullw	5
 26532  016E36  50F3               	movf	243,w,c
 26533  016E38  0F60               	addlw	low _S
 26534  016E3A  6ED9               	movwf	fsr2l,c
 26535  016E3C  6ADA               	clrf	fsr2h,c
 26536  016E3E  0E01               	movlw	1
 26537  016E40  6EDF               	movwf	indf2,c
 26538                           
 26539                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 26540  016E42  EE20  F2B8         	lfsr	2,_V+184	;volatile
 26541                           
 26542                           ;stkvar	_i @ sp[(-2)+0]
 26543  016E46  0EFE               	movlw	-2
 26544  016E48  50E3               	movf	plusw1,w,c
 26545  016E4A  0D05               	mullw	5
 26546  016E4C  50F3               	movf	243,w,c
 26547  016E4E  0F61               	addlw	low (_S+1)
 26548  016E50  6EE9               	movwf	fsr0l,c
 26549  016E52  6AEA               	clrf	fsr0h,c
 26550  016E54  006F FF7B FFEE     	movff	postinc2,postinc0
 26551  016E5A  006F FF7B FFEE     	movff	postinc2,postinc0
 26552  016E60  006F FF7B FFEE     	movff	postinc2,postinc0
 26553  016E66  006F FF7B FFEE     	movff	postinc2,postinc0
 26554                           
 26555                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 26556                           ;stkvar	_i @ sp[(-2)+0]
 26557  016E6C  0EFE               	movlw	-2
 26558  016E6E  006F FF8C  F030    	movff	plusw1,btemp+11
 26559  016E74  0E01               	movlw	1
 26560  016E76  6E2F               	movwf	(btemp+10)^0,c
 26561  016E78  2A30               	incf	(btemp+11)^0,f,c
 26562  016E7A  D002               	goto	u851_24
 26563  016E7C                     u851_25:
 26564  016E7C  90D8               	bcf	status,0,c
 26565  016E7E  362F               	rlcf	(btemp+10)^0,f,c
 26566  016E80                     u851_24:
 26567  016E80  2E30               	decfsz	(btemp+11)^0,f,c
 26568  016E82  D7FC               	goto	u851_25
 26569  016E84  502F               	movf	(btemp+10)^0,w,c
 26570  016E86  0100               	movlb	0	; () banked
 26571  016E88  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 26572  016E8A                     l9181:
 26573                           
 26574                           ;dio.c: 107:  } while (++i < 4);
 26575                           ;stkvar	_i @ sp[(-2)+0]
 26576  016E8A  0EFE               	movlw	-2
 26577  016E8C  2AE3               	incf	plusw1,f,c
 26578  016E8E  0EFE               	movlw	-2
 26579  016E90  006F FF8C  F025    	movff	plusw1,btemp
 26580  016E96  0E03               	movlw	3
 26581  016E98  6425               	cpfsgt	btemp^0,c
 26582  016E9A  D792               	goto	l9165
 26583                           
 26584                           ;dio.c: 116:  do { LATDbits.LATD7 = 1; } while(0);
 26585  016E9C  8EBD               	bsf	189,7,c	;volatile
 26586                           
 26587                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 26588  016E9E  52E5               	movf	postdec1,f,c
 26589  016EA0  52E5               	movf	postdec1,f,c
 26590  016EA2  0012               	return		;funcret
 26591  016EA4                     __end_of_switch_handler:
 26592                           	opt callstack 0
 26593                           
 26594 ;; *************** function _TMR5_ISR *****************
 26595 ;; Defined at:
 26596 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 26597 ;; Parameters:    Size  Location     Type
 26598 ;;		None
 26599 ;; Auto vars:     Size  Location     Type
 26600 ;;		None
 26601 ;; Return value:  Size  Location     Type
 26602 ;;                  1    wreg      void 
 26603 ;; Registers used:
 26604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 26605 ;; Tracked objects:
 26606 ;;		On entry : 0/0
 26607 ;;		On exit  : 0/0
 26608 ;;		Unchanged: 0/0
 26609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26612 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26613 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26614 ;;Total ram usage:        4 bytes
 26615 ;; Hardware stack levels used:    1
 26616 ;; Hardware stack levels required when called:    5
 26617 ;; This function calls:
 26618 ;;		_TMR5_CallBack
 26619 ;;		_TMR5_WriteTimer
 26620 ;; This function is called by:
 26621 ;;		Interrupt level 1
 26622 ;; This function uses a non-reentrant model
 26623 ;;
 26624                           
 26625                           	psect	text129
 26626  0186C4                     __ptext129:
 26627                           	opt callstack 0
 26628  0186C4                     _TMR5_ISR:
 26629                           	opt callstack 12
 26630                           
 26631                           ;incstack = 0
 26632  0186C4  006F FF60  F051    	movff	status,??_TMR5_ISR+2
 26633  0186CA  0060  F0C0  F052   	movff	btemp+11,??_TMR5_ISR+3
 26634  0186D0  EE16  F00B         	lfsr	1,___intlo_sp
 26635                           
 26636                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 26637  0186D4  0139               	movlb	57	; () banked
 26638  0186D6  9DA8               	bcf	168,6,b	;volatile
 26639                           
 26640                           ; BSR set to: 57
 26641                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 26642  0186D8  0060  F05B  FFE6   	movff	_timer5ReloadVal,postinc1
 26643  0186DE  0060  F05F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 26644  0186E4  EC60  F0C5         	call	_TMR5_WriteTimer	;wreg free
 26645                           
 26646                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 26647  0186E8  0102               	movlb	2	; () banked
 26648  0186EA  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 26649  0186EC  6E4F               	movwf	??_TMR5_ISR^0,c
 26650  0186EE  6A50               	clrf	(??_TMR5_ISR+1)^0,c
 26651  0186F0  0E05               	movlw	5
 26652  0186F2  264F               	addwf	??_TMR5_ISR^0,f,c
 26653  0186F4  0E00               	movlw	0
 26654  0186F6  2250               	addwfc	(??_TMR5_ISR+1)^0,f,c
 26655  0186F8  4A14               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 26656  0186FA  2A15               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 26657  0186FC  504F               	movf	??_TMR5_ISR^0,w,c
 26658  0186FE  5C14               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 26659  018700  5050               	movf	(??_TMR5_ISR+1)^0,w,c
 26660  018702  5815               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 26661  018704  A0D8               	btfss	status,0,c
 26662  018706  D004               	goto	i1l1047
 26663                           
 26664                           ; BSR set to: 2
 26665                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 26666  018708  ECE7  F0C8         	call	_TMR5_CallBack	;wreg free
 26667                           
 26668                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 26669  01870C  6A14               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 26670  01870E  6A15               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 26671  018710                     i1l1047:
 26672  018710  0060  F148  F030   	movff	??_TMR5_ISR+3,btemp+11
 26673  018716  0060  F147  FFD8   	movff	??_TMR5_ISR+2,status
 26674  01871C  0011               	retfie		f
 26675  01871E                     __end_of_TMR5_ISR:
 26676                           	opt callstack 0
 26677                           
 26678 ;; *************** function _TMR5_WriteTimer *****************
 26679 ;; Defined at:
 26680 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 26681 ;; Parameters:    Size  Location     Type
 26682 ;;  timerVal        2  [STACK] unsigned short 
 26683 ;; Auto vars:     Size  Location     Type
 26684 ;;		None
 26685 ;; Return value:  Size  Location     Type
 26686 ;;                  1  [STACK] void 
 26687 ;; Registers used:
 26688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 26689 ;; Tracked objects:
 26690 ;;		On entry : 3F/39
 26691 ;;		On exit  : 0/0
 26692 ;;		Unchanged: 0/0
 26693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26698 ;;Total ram usage:        0 bytes
 26699 ;; Hardware stack levels used:    1
 26700 ;; Hardware stack levels required when called:    3
 26701 ;; This function calls:
 26702 ;;		Nothing
 26703 ;; This function is called by:
 26704 ;;		_TMR5_ISR
 26705 ;; This function uses a reentrant model
 26706 ;;
 26707                           
 26708                           	psect	text130
 26709  018AC0                     __ptext130:
 26710                           	opt callstack 0
 26711  018AC0                     _TMR5_WriteTimer:
 26712                           	opt callstack 13
 26713                           
 26714                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 26715                           
 26716                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26717                           ;incstack = 0
 26718  018AC0  A49A               	btfss	154,2,c	;volatile
 26719  018AC2  D00F               	goto	l9319
 26720                           
 26721                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 26722  018AC4  909A               	bcf	154,0,c	;volatile
 26723                           
 26724                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 26725                           ;stkvar	_timerVal @ sp[(0)+-2]
 26726  018AC6  0EFF               	movlw	255
 26727  018AC8  24E1               	addwf	fsr1l,w,c
 26728  018ACA  6ED9               	movwf	fsr2l,c
 26729  018ACC  0EFF               	movlw	255
 26730  018ACE  20E2               	addwfc	fsr1h,w,c
 26731  018AD0  6EDA               	movwf	fsr2h,c
 26732  018AD2  50DF               	movf	indf2,w,c
 26733  018AD4  6E99               	movwf	153,c	;volatile
 26734                           
 26735                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 26736                           ;stkvar	_timerVal @ sp[(0)+-2]
 26737  018AD6  0EFE               	movlw	-2
 26738  018AD8  006F FF8F FF98     	movff	plusw1,16280	;volatile
 26739                           
 26740                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 26741  018ADE  809A               	bsf	154,0,c	;volatile
 26742                           
 26743                           ;mcc_generated_files/tmr5.c: 142:  } else {
 26744  018AE0  D00C               	goto	l1030
 26745  018AE2                     l9319:
 26746                           
 26747                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 26748                           ;stkvar	_timerVal @ sp[(0)+-2]
 26749  018AE2  0EFF               	movlw	255
 26750  018AE4  24E1               	addwf	fsr1l,w,c
 26751  018AE6  6ED9               	movwf	fsr2l,c
 26752  018AE8  0EFF               	movlw	255
 26753  018AEA  20E2               	addwfc	fsr1h,w,c
 26754  018AEC  6EDA               	movwf	fsr2h,c
 26755  018AEE  50DF               	movf	indf2,w,c
 26756  018AF0  6E99               	movwf	153,c	;volatile
 26757                           
 26758                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 26759                           ;stkvar	_timerVal @ sp[(0)+-2]
 26760  018AF2  0EFE               	movlw	-2
 26761  018AF4  006F FF8F FF98     	movff	plusw1,16280	;volatile
 26762  018AFA                     l1030:
 26763                           
 26764                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 26765  018AFA  52E5               	movf	postdec1,f,c
 26766  018AFC  52E5               	movf	postdec1,f,c
 26767  018AFE  0012               	return		;funcret
 26768  018B00                     __end_of_TMR5_WriteTimer:
 26769                           	opt callstack 0
 26770                           
 26771 ;; *************** function _TMR5_CallBack *****************
 26772 ;; Defined at:
 26773 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 26774 ;; Parameters:    Size  Location     Type
 26775 ;;		None
 26776 ;; Auto vars:     Size  Location     Type
 26777 ;;		None
 26778 ;; Return value:  Size  Location     Type
 26779 ;;                  1  [STACK] void 
 26780 ;; Registers used:
 26781 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 26782 ;; Tracked objects:
 26783 ;;		On entry : 3F/2
 26784 ;;		On exit  : 0/0
 26785 ;;		Unchanged: 0/0
 26786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26791 ;;Total ram usage:        0 bytes
 26792 ;; Hardware stack levels used:    1
 26793 ;; Hardware stack levels required when called:    4
 26794 ;; This function calls:
 26795 ;;		Absolute function
 26796 ;;		_TMR5_DefaultInterruptHandler
 26797 ;; This function is called by:
 26798 ;;		_TMR5_ISR
 26799 ;; This function uses a reentrant model
 26800 ;;
 26801                           
 26802                           	psect	text131
 26803  0191CE                     __ptext131:
 26804                           	opt callstack 0
 26805  0191CE                     _TMR5_CallBack:
 26806                           	opt callstack 12
 26807                           
 26808                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 26809                           
 26810                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26811                           ;incstack = 0
 26812  0191CE  0100               	movlb	0	; () banked
 26813  0191D0  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26814  0191D2  11AD               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26815  0191D4  11AE               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26816  0191D6  B4D8               	btfsc	status,2,c
 26817  0191D8  0012               	return	
 26818                           
 26819                           ; BSR set to: 0
 26820                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 26821  0191DA  D801               	call	u874_28
 26822  0191DC  0012               	return	
 26823  0191DE                     u874_28:
 26824  0191DE  0005               	push	
 26825  0191E0  6EFA               	movwf	pclath,c
 26826  0191E2  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26827  0191E4  6EFD               	movwf	tosl,c
 26828  0191E6  51AD               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26829  0191E8  6EFE               	movwf	tosh,c
 26830  0191EA  51AE               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26831  0191EC  6EFF               	movwf	tosu,c
 26832  0191EE  50FA               	movf	pclath,w,c
 26833  0191F0  0012               	return		;indir
 26834  0191F2                     __end_of_TMR5_CallBack:
 26835                           	opt callstack 0
 26836                           
 26837 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 26838 ;; Defined at:
 26839 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 26840 ;; Parameters:    Size  Location     Type
 26841 ;;		None
 26842 ;; Auto vars:     Size  Location     Type
 26843 ;;		None
 26844 ;; Return value:  Size  Location     Type
 26845 ;;                  1  [STACK] void 
 26846 ;; Registers used:
 26847 ;;		wreg, status,2, status,0, btemp+11
 26848 ;; Tracked objects:
 26849 ;;		On entry : 3F/0
 26850 ;;		On exit  : 3F/2
 26851 ;;		Unchanged: 0/0
 26852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26857 ;;Total ram usage:        0 bytes
 26858 ;; Hardware stack levels used:    1
 26859 ;; Hardware stack levels required when called:    3
 26860 ;; This function calls:
 26861 ;;		Nothing
 26862 ;; This function is called by:
 26863 ;;		_TMR5_Initialize
 26864 ;;		_TMR5_CallBack
 26865 ;; This function uses a reentrant model
 26866 ;;
 26867                           
 26868                           	psect	text132
 26869  0190E2                     __ptext132:
 26870                           	opt callstack 0
 26871  0190E2                     _TMR5_DefaultInterruptHandler:
 26872                           	opt callstack 12
 26873                           
 26874                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 26875                           
 26876                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26877                           ;incstack = 0
 26878  0190E2  A0BE               	btfss	190,0,c	;volatile
 26879  0190E4  D002               	goto	u821_20
 26880  0190E6  0E01               	movlw	1
 26881  0190E8  D001               	goto	u821_26
 26882  0190EA                     u821_20:
 26883  0190EA  0E00               	movlw	0
 26884  0190EC                     u821_26:
 26885  0190EC  0AFF               	xorlw	255
 26886  0190EE  6E30               	movwf	(btemp+11)^0,c
 26887  0190F0  50BE               	movf	190,w,c	;volatile
 26888  0190F2  1830               	xorwf	(btemp+11)^0,w,c
 26889  0190F4  0BFE               	andlw	-2
 26890  0190F6  1830               	xorwf	(btemp+11)^0,w,c
 26891  0190F8  6EBE               	movwf	190,c	;volatile
 26892                           
 26893                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 26894  0190FA  0E01               	movlw	1
 26895  0190FC  0102               	movlb	2	; () banked
 26896  0190FE  27B8               	addwf	(_V+184)& (0+255),f,b	;volatile
 26897  019100  0E00               	movlw	0
 26898  019102  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 26899  019104  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 26900  019106  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 26901                           
 26902                           ; BSR set to: 2
 26903                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26904  019108  0012               	return		;funcret
 26905  01910A                     __end_of_TMR5_DefaultInterruptHandler:
 26906                           	opt callstack 0
 26907                           
 26908 ;; *************** function _TMR3_ISR *****************
 26909 ;; Defined at:
 26910 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 26911 ;; Parameters:    Size  Location     Type
 26912 ;;		None
 26913 ;; Auto vars:     Size  Location     Type
 26914 ;;		None
 26915 ;; Return value:  Size  Location     Type
 26916 ;;                  1    wreg      void 
 26917 ;; Registers used:
 26918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl
 26919 ;; Tracked objects:
 26920 ;;		On entry : 0/0
 26921 ;;		On exit  : 0/0
 26922 ;;		Unchanged: 0/0
 26923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26926 ;;      Temps:          0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26927 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26928 ;;Total ram usage:       13 bytes
 26929 ;; Hardware stack levels used:    1
 26930 ;; Hardware stack levels required when called:    6
 26931 ;; This function calls:
 26932 ;;		_TMR3_CallBack
 26933 ;;		_TMR3_WriteTimer
 26934 ;; This function is called by:
 26935 ;;		Interrupt level 1
 26936 ;; This function uses a non-reentrant model
 26937 ;;
 26938                           
 26939                           	psect	text133
 26940  0177CC                     __ptext133:
 26941                           	opt callstack 0
 26942  0177CC                     _TMR3_ISR:
 26943                           	opt callstack 11
 26944                           
 26945                           ; BSR set to: 2
 26946                           ;incstack = 0
 26947  0177CC  006F FF60  F1D5    	movff	status,??_TMR3_ISR
 26948  0177D2  0060  F094  F1D6   	movff	btemp,??_TMR3_ISR+1
 26949  0177D8  0060  F098  F1D7   	movff	btemp+1,??_TMR3_ISR+2
 26950  0177DE  0060  F09C  F1D8   	movff	btemp+2,??_TMR3_ISR+3
 26951  0177E4  0060  F0A0  F1D9   	movff	btemp+3,??_TMR3_ISR+4
 26952  0177EA  0060  F0A4  F1DA   	movff	btemp+4,??_TMR3_ISR+5
 26953  0177F0  0060  F0A8  F1DB   	movff	btemp+5,??_TMR3_ISR+6
 26954  0177F6  0060  F0AC  F1DC   	movff	btemp+6,??_TMR3_ISR+7
 26955  0177FC  0060  F0B0  F1DD   	movff	btemp+7,??_TMR3_ISR+8
 26956  017802  0060  F0B4  F1DE   	movff	btemp+8,??_TMR3_ISR+9
 26957  017808  0060  F0B8  F1DF   	movff	btemp+9,??_TMR3_ISR+10
 26958  01780E  0060  F0BC  F1E0   	movff	btemp+10,??_TMR3_ISR+11
 26959  017814  0060  F0C0  F1E1   	movff	btemp+11,??_TMR3_ISR+12
 26960  01781A  EE16  F00B         	lfsr	1,___intlo_sp
 26961                           
 26962                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 26963  01781E  0139               	movlb	57	; () banked
 26964  017820  9DA6               	bcf	166,6,b	;volatile
 26965                           
 26966                           ; BSR set to: 57
 26967                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 26968  017822  0060  F04B  FFE6   	movff	_timer3ReloadVal,postinc1
 26969  017828  0060  F04F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 26970  01782E  EC80  F0C5         	call	_TMR3_WriteTimer	;wreg free
 26971                           
 26972                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 26973  017832  4A10               	infsnz	TMR3_ISR@CountCallBack^0,f,c	;volatile
 26974  017834  2A11               	incf	(TMR3_ISR@CountCallBack+1)^0,f,c	;volatile
 26975  017836  5011               	movf	(TMR3_ISR@CountCallBack+1)^0,w,c	;volatile
 26976  017838  E104               	bnz	i1u1075_20
 26977  01783A  0E28               	movlw	40
 26978  01783C  5C10               	subwf	TMR3_ISR@CountCallBack^0,w,c	;volatile
 26979  01783E  A0D8               	btfss	status,0,c
 26980  017840  D004               	goto	i1l1235
 26981  017842                     i1u1075_20:
 26982                           
 26983                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 26984  017842  ECF9  F0C8         	call	_TMR3_CallBack	;wreg free
 26985                           
 26986                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 26987  017846  6A10               	clrf	TMR3_ISR@CountCallBack^0,c	;volatile
 26988  017848  6A11               	clrf	(TMR3_ISR@CountCallBack+1)^0,c	;volatile
 26989  01784A                     i1l1235:
 26990  01784A  0060  F784  F030   	movff	??_TMR3_ISR+12,btemp+11
 26991  017850  0060  F780  F02F   	movff	??_TMR3_ISR+11,btemp+10
 26992  017856  0060  F77C  F02E   	movff	??_TMR3_ISR+10,btemp+9
 26993  01785C  0060  F778  F02D   	movff	??_TMR3_ISR+9,btemp+8
 26994  017862  0060  F774  F02C   	movff	??_TMR3_ISR+8,btemp+7
 26995  017868  0060  F770  F02B   	movff	??_TMR3_ISR+7,btemp+6
 26996  01786E  0060  F76C  F02A   	movff	??_TMR3_ISR+6,btemp+5
 26997  017874  0060  F768  F029   	movff	??_TMR3_ISR+5,btemp+4
 26998  01787A  0060  F764  F028   	movff	??_TMR3_ISR+4,btemp+3
 26999  017880  0060  F760  F027   	movff	??_TMR3_ISR+3,btemp+2
 27000  017886  0060  F75C  F026   	movff	??_TMR3_ISR+2,btemp+1
 27001  01788C  0060  F758  F025   	movff	??_TMR3_ISR+1,btemp
 27002  017892  0060  F757  FFD8   	movff	??_TMR3_ISR,status
 27003  017898  0011               	retfie		f
 27004  01789A                     __end_of_TMR3_ISR:
 27005                           	opt callstack 0
 27006                           
 27007 ;; *************** function _TMR3_WriteTimer *****************
 27008 ;; Defined at:
 27009 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 27010 ;; Parameters:    Size  Location     Type
 27011 ;;  timerVal        2  [STACK] unsigned short 
 27012 ;; Auto vars:     Size  Location     Type
 27013 ;;		None
 27014 ;; Return value:  Size  Location     Type
 27015 ;;                  1  [STACK] void 
 27016 ;; Registers used:
 27017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 27018 ;; Tracked objects:
 27019 ;;		On entry : 3F/39
 27020 ;;		On exit  : 0/0
 27021 ;;		Unchanged: 0/0
 27022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27027 ;;Total ram usage:        0 bytes
 27028 ;; Hardware stack levels used:    1
 27029 ;; Hardware stack levels required when called:    3
 27030 ;; This function calls:
 27031 ;;		Nothing
 27032 ;; This function is called by:
 27033 ;;		_TMR3_ISR
 27034 ;; This function uses a reentrant model
 27035 ;;
 27036                           
 27037                           	psect	text134
 27038  018B00                     __ptext134:
 27039                           	opt callstack 0
 27040  018B00                     _TMR3_WriteTimer:
 27041                           	opt callstack 13
 27042                           
 27043                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 27044                           
 27045                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27046                           ;incstack = 0
 27047  018B00  A4A6               	btfss	166,2,c	;volatile
 27048  018B02  D00F               	goto	l5885
 27049                           
 27050                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 27051  018B04  90A6               	bcf	166,0,c	;volatile
 27052                           
 27053                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 27054                           ;stkvar	_timerVal @ sp[(0)+-2]
 27055  018B06  0EFF               	movlw	255
 27056  018B08  24E1               	addwf	fsr1l,w,c
 27057  018B0A  6ED9               	movwf	fsr2l,c
 27058  018B0C  0EFF               	movlw	255
 27059  018B0E  20E2               	addwfc	fsr1h,w,c
 27060  018B10  6EDA               	movwf	fsr2h,c
 27061  018B12  50DF               	movf	indf2,w,c
 27062  018B14  6EA5               	movwf	165,c	;volatile
 27063                           
 27064                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 27065                           ;stkvar	_timerVal @ sp[(0)+-2]
 27066  018B16  0EFE               	movlw	-2
 27067  018B18  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 27068                           
 27069                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 27070  018B1E  80A6               	bsf	166,0,c	;volatile
 27071                           
 27072                           ;mcc_generated_files/tmr3.c: 141:     }
 27073  018B20  D00C               	goto	l1218
 27074  018B22                     l5885:
 27075                           
 27076                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 27077                           ;stkvar	_timerVal @ sp[(0)+-2]
 27078  018B22  0EFF               	movlw	255
 27079  018B24  24E1               	addwf	fsr1l,w,c
 27080  018B26  6ED9               	movwf	fsr2l,c
 27081  018B28  0EFF               	movlw	255
 27082  018B2A  20E2               	addwfc	fsr1h,w,c
 27083  018B2C  6EDA               	movwf	fsr2h,c
 27084  018B2E  50DF               	movf	indf2,w,c
 27085  018B30  6EA5               	movwf	165,c	;volatile
 27086                           
 27087                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 27088                           ;stkvar	_timerVal @ sp[(0)+-2]
 27089  018B32  0EFE               	movlw	-2
 27090  018B34  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 27091  018B3A                     l1218:
 27092                           
 27093                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 27094  018B3A  52E5               	movf	postdec1,f,c
 27095  018B3C  52E5               	movf	postdec1,f,c
 27096  018B3E  0012               	return		;funcret
 27097  018B40                     __end_of_TMR3_WriteTimer:
 27098                           	opt callstack 0
 27099                           
 27100 ;; *************** function _TMR3_CallBack *****************
 27101 ;; Defined at:
 27102 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 27103 ;; Parameters:    Size  Location     Type
 27104 ;;		None
 27105 ;; Auto vars:     Size  Location     Type
 27106 ;;		None
 27107 ;; Return value:  Size  Location     Type
 27108 ;;                  1  [STACK] void 
 27109 ;; Registers used:
 27110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl
 27111 ;; Tracked objects:
 27112 ;;		On entry : 0/39
 27113 ;;		On exit  : 0/0
 27114 ;;		Unchanged: 0/0
 27115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27120 ;;Total ram usage:        0 bytes
 27121 ;; Hardware stack levels used:    1
 27122 ;; Hardware stack levels required when called:    5
 27123 ;; This function calls:
 27124 ;;		Absolute function
 27125 ;;		_TMR3_DefaultInterruptHandler
 27126 ;;		_calc_bsoc
 27127 ;; This function is called by:
 27128 ;;		_TMR3_ISR
 27129 ;; This function uses a reentrant model
 27130 ;;
 27131                           
 27132                           	psect	text135
 27133  0191F2                     __ptext135:
 27134                           	opt callstack 0
 27135  0191F2                     _TMR3_CallBack:
 27136                           	opt callstack 11
 27137                           
 27138                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 27139                           
 27140                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27141                           ;incstack = 0
 27142  0191F2  0100               	movlb	0	; () banked
 27143  0191F4  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 27144  0191F6  11AA               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 27145  0191F8  11AB               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 27146  0191FA  B4D8               	btfsc	status,2,c
 27147  0191FC  0012               	return	
 27148                           
 27149                           ; BSR set to: 0
 27150                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 27151  0191FE  D801               	call	u876_28
 27152  019200  0012               	return	
 27153  019202                     u876_28:
 27154  019202  0005               	push	
 27155  019204  6EFA               	movwf	pclath,c
 27156  019206  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 27157  019208  6EFD               	movwf	tosl,c
 27158  01920A  51AA               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 27159  01920C  6EFE               	movwf	tosh,c
 27160  01920E  51AB               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 27161  019210  6EFF               	movwf	tosu,c
 27162  019212  50FA               	movf	pclath,w,c
 27163  019214  0012               	return		;indir
 27164  019216                     __end_of_TMR3_CallBack:
 27165                           	opt callstack 0
 27166                           
 27167 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 27168 ;; Defined at:
 27169 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 27170 ;; Parameters:    Size  Location     Type
 27171 ;;		None
 27172 ;; Auto vars:     Size  Location     Type
 27173 ;;		None
 27174 ;; Return value:  Size  Location     Type
 27175 ;;                  1  [STACK] void 
 27176 ;; Registers used:
 27177 ;;		None
 27178 ;; Tracked objects:
 27179 ;;		On entry : 3F/0
 27180 ;;		On exit  : 0/0
 27181 ;;		Unchanged: 0/0
 27182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27187 ;;Total ram usage:        0 bytes
 27188 ;; Hardware stack levels used:    1
 27189 ;; Hardware stack levels required when called:    3
 27190 ;; This function calls:
 27191 ;;		Nothing
 27192 ;; This function is called by:
 27193 ;;		_TMR3_Initialize
 27194 ;;		_TMR3_CallBack
 27195 ;; This function uses a reentrant model
 27196 ;;
 27197                           
 27198                           	psect	text136
 27199  019530                     __ptext136:
 27200                           	opt callstack 0
 27201  019530                     _TMR3_DefaultInterruptHandler:
 27202                           	opt callstack 12
 27203                           
 27204                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27205                           
 27206                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27207                           ;incstack = 0
 27208  019530  0012               	return		;funcret
 27209  019532                     __end_of_TMR3_DefaultInterruptHandler:
 27210                           	opt callstack 0
 27211                           
 27212 ;; *************** function _calc_bsoc *****************
 27213 ;; Defined at:
 27214 ;;		line 7 in file "bsoc.c"
 27215 ;; Parameters:    Size  Location     Type
 27216 ;;		None
 27217 ;; Auto vars:     Size  Location     Type
 27218 ;;		None
 27219 ;; Return value:  Size  Location     Type
 27220 ;;                  1  [STACK] void 
 27221 ;; Registers used:
 27222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 27223 ;; Tracked objects:
 27224 ;;		On entry : 3F/0
 27225 ;;		On exit  : 3F/1
 27226 ;;		Unchanged: 0/0
 27227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27232 ;;Total ram usage:        0 bytes
 27233 ;; Hardware stack levels used:    1
 27234 ;; Hardware stack levels required when called:    4
 27235 ;; This function calls:
 27236 ;;		___fladd
 27237 ;;		___fldiv
 27238 ;;		___flge
 27239 ;; This function is called by:
 27240 ;;		_init_bsoc
 27241 ;;		_TMR3_CallBack
 27242 ;; This function uses a reentrant model
 27243 ;;
 27244                           
 27245                           	psect	text137
 27246  014BDA                     __ptext137:
 27247                           	opt callstack 0
 27248  014BDA                     _calc_bsoc:
 27249                           	opt callstack 11
 27250                           
 27251                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27252                           ;incstack = 0
 27253                           ;bsoc.c: 10:  do { LATEbits.LATE1 = 1; } while(0);
 27254  014BDA  82BE               	bsf	190,1,c	;volatile
 27255                           
 27256                           ;bsoc.c: 12:  C.dynamic_ah += (C.c_bat / 3600.0);
 27257  014BDC  0E00               	movlw	0
 27258  014BDE  6EE6               	movwf	postinc1,c
 27259  014BE0  0E00               	movlw	0
 27260  014BE2  6EE6               	movwf	postinc1,c
 27261  014BE4  0E61               	movlw	97
 27262  014BE6  6EE6               	movwf	postinc1,c
 27263  014BE8  0E45               	movlw	69
 27264  014BEA  6EE6               	movwf	postinc1,c
 27265  014BEC  0060  F513  FFE6   	movff	_C+68,postinc1
 27266  014BF2  0060  F517  FFE6   	movff	_C+69,postinc1
 27267  014BF8  0060  F51B  FFE6   	movff	_C+70,postinc1
 27268  014BFE  0060  F51F  FFE6   	movff	_C+71,postinc1
 27269  014C04  EC07  F09B         	call	___fldiv	;wreg free
 27270  014C08  0060  F097  FFE6   	movff	btemp,postinc1
 27271  014C0E  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27272  014C14  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27273  014C1A  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27274  014C20  0060  F613  FFE6   	movff	_C+132,postinc1
 27275  014C26  0060  F617  FFE6   	movff	_C+133,postinc1
 27276  014C2C  0060  F61B  FFE6   	movff	_C+134,postinc1
 27277  014C32  0060  F61F  FFE6   	movff	_C+135,postinc1
 27278  014C38  EC29  F097         	call	___fladd	;wreg free
 27279  014C3C  0060  F094  F184   	movff	btemp,_C+132	;volatile
 27280  014C42  0060  F098  F185   	movff	btemp+1,_C+133	;volatile
 27281  014C48  0060  F09C  F186   	movff	btemp+2,_C+134	;volatile
 27282  014C4E  0060  F0A0  F187   	movff	btemp+3,_C+135	;volatile
 27283                           
 27284                           ;bsoc.c: 13:  C.pv_ah += (C.c_pv / 3600.0);
 27285  014C54  0E00               	movlw	0
 27286  014C56  6EE6               	movwf	postinc1,c
 27287  014C58  0E00               	movlw	0
 27288  014C5A  6EE6               	movwf	postinc1,c
 27289  014C5C  0E61               	movlw	97
 27290  014C5E  6EE6               	movwf	postinc1,c
 27291  014C60  0E45               	movlw	69
 27292  014C62  6EE6               	movwf	postinc1,c
 27293  014C64  0060  F523  FFE6   	movff	_C+72,postinc1
 27294  014C6A  0060  F527  FFE6   	movff	_C+73,postinc1
 27295  014C70  0060  F52B  FFE6   	movff	_C+74,postinc1
 27296  014C76  0060  F52F  FFE6   	movff	_C+75,postinc1
 27297  014C7C  EC07  F09B         	call	___fldiv	;wreg free
 27298  014C80  0060  F097  FFE6   	movff	btemp,postinc1
 27299  014C86  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27300  014C8C  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27301  014C92  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27302  014C98  0060  F623  FFE6   	movff	_C+136,postinc1
 27303  014C9E  0060  F627  FFE6   	movff	_C+137,postinc1
 27304  014CA4  0060  F62B  FFE6   	movff	_C+138,postinc1
 27305  014CAA  0060  F62F  FFE6   	movff	_C+139,postinc1
 27306  014CB0  EC29  F097         	call	___fladd	;wreg free
 27307  014CB4  0060  F094  F188   	movff	btemp,_C+136	;volatile
 27308  014CBA  0060  F098  F189   	movff	btemp+1,_C+137	;volatile
 27309  014CC0  0060  F09C  F18A   	movff	btemp+2,_C+138	;volatile
 27310  014CC6  0060  F0A0  F18B   	movff	btemp+3,_C+139	;volatile
 27311                           
 27312                           ;bsoc.c: 14:  C.pvkw += (C.p_pv / 3600.0);
 27313  014CCC  0E00               	movlw	0
 27314  014CCE  6EE6               	movwf	postinc1,c
 27315  014CD0  0E00               	movlw	0
 27316  014CD2  6EE6               	movwf	postinc1,c
 27317  014CD4  0E61               	movlw	97
 27318  014CD6  6EE6               	movwf	postinc1,c
 27319  014CD8  0E45               	movlw	69
 27320  014CDA  6EE6               	movwf	postinc1,c
 27321  014CDC  0060  F5C3  FFE6   	movff	_C+112,postinc1
 27322  014CE2  0060  F5C7  FFE6   	movff	_C+113,postinc1
 27323  014CE8  0060  F5CB  FFE6   	movff	_C+114,postinc1
 27324  014CEE  0060  F5CF  FFE6   	movff	_C+115,postinc1
 27325  014CF4  EC07  F09B         	call	___fldiv	;wreg free
 27326  014CF8  0060  F097  FFE6   	movff	btemp,postinc1
 27327  014CFE  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27328  014D04  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27329  014D0A  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27330  014D10  0060  F663  FFE6   	movff	_C+152,postinc1
 27331  014D16  0060  F667  FFE6   	movff	_C+153,postinc1
 27332  014D1C  0060  F66B  FFE6   	movff	_C+154,postinc1
 27333  014D22  0060  F66F  FFE6   	movff	_C+155,postinc1
 27334  014D28  EC29  F097         	call	___fladd	;wreg free
 27335  014D2C  0060  F094  F198   	movff	btemp,_C+152	;volatile
 27336  014D32  0060  F098  F199   	movff	btemp+1,_C+153	;volatile
 27337  014D38  0060  F09C  F19A   	movff	btemp+2,_C+154	;volatile
 27338  014D3E  0060  F0A0  F19B   	movff	btemp+3,_C+155	;volatile
 27339                           
 27340                           ;bsoc.c: 15:  C.invkw += (C.p_inverter / 3600.0);
 27341  014D44  0E00               	movlw	0
 27342  014D46  6EE6               	movwf	postinc1,c
 27343  014D48  0E00               	movlw	0
 27344  014D4A  6EE6               	movwf	postinc1,c
 27345  014D4C  0E61               	movlw	97
 27346  014D4E  6EE6               	movwf	postinc1,c
 27347  014D50  0E45               	movlw	69
 27348  014D52  6EE6               	movwf	postinc1,c
 27349  014D54  0060  F5B3  FFE6   	movff	_C+108,postinc1
 27350  014D5A  0060  F5B7  FFE6   	movff	_C+109,postinc1
 27351  014D60  0060  F5BB  FFE6   	movff	_C+110,postinc1
 27352  014D66  0060  F5BF  FFE6   	movff	_C+111,postinc1
 27353  014D6C  EC07  F09B         	call	___fldiv	;wreg free
 27354  014D70  0060  F097  FFE6   	movff	btemp,postinc1
 27355  014D76  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27356  014D7C  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27357  014D82  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27358  014D88  0060  F673  FFE6   	movff	_C+156,postinc1
 27359  014D8E  0060  F677  FFE6   	movff	_C+157,postinc1
 27360  014D94  0060  F67B  FFE6   	movff	_C+158,postinc1
 27361  014D9A  0060  F67F  FFE6   	movff	_C+159,postinc1
 27362  014DA0  EC29  F097         	call	___fladd	;wreg free
 27363  014DA4  0060  F094  F19C   	movff	btemp,_C+156	;volatile
 27364  014DAA  0060  F098  F19D   	movff	btemp+1,_C+157	;volatile
 27365  014DB0  0060  F09C  F19E   	movff	btemp+2,_C+158	;volatile
 27366  014DB6  0060  F0A0  F19F   	movff	btemp+3,_C+159	;volatile
 27367                           
 27368                           ;bsoc.c: 16:  if (C.p_bat > 0.0)
 27369  014DBC  0060  F5D3  FFE6   	movff	_C+116,postinc1
 27370  014DC2  0060  F5D7  FFE6   	movff	_C+117,postinc1
 27371  014DC8  0060  F5DB  FFE6   	movff	_C+118,postinc1
 27372  014DCE  0060  F5DF  FFE6   	movff	_C+119,postinc1
 27373  014DD4  0E00               	movlw	0
 27374  014DD6  6EE6               	movwf	postinc1,c
 27375  014DD8  0E00               	movlw	0
 27376  014DDA  6EE6               	movwf	postinc1,c
 27377  014DDC  0E00               	movlw	0
 27378  014DDE  6EE6               	movwf	postinc1,c
 27379  014DE0  0E00               	movlw	0
 27380  014DE2  6EE6               	movwf	postinc1,c
 27381  014DE4  ECCF  F0B4         	call	___flge	;wreg free
 27382  014DE8  B025               	btfsc	btemp& (0+255),0,c
 27383  014DEA  D03C               	goto	l9207
 27384                           
 27385                           ;bsoc.c: 17:   C.bkwi += (C.p_bat / 3600.0);
 27386  014DEC  0E00               	movlw	0
 27387  014DEE  6EE6               	movwf	postinc1,c
 27388  014DF0  0E00               	movlw	0
 27389  014DF2  6EE6               	movwf	postinc1,c
 27390  014DF4  0E61               	movlw	97
 27391  014DF6  6EE6               	movwf	postinc1,c
 27392  014DF8  0E45               	movlw	69
 27393  014DFA  6EE6               	movwf	postinc1,c
 27394  014DFC  0060  F5D3  FFE6   	movff	_C+116,postinc1
 27395  014E02  0060  F5D7  FFE6   	movff	_C+117,postinc1
 27396  014E08  0060  F5DB  FFE6   	movff	_C+118,postinc1
 27397  014E0E  0060  F5DF  FFE6   	movff	_C+119,postinc1
 27398  014E14  EC07  F09B         	call	___fldiv	;wreg free
 27399  014E18  0060  F097  FFE6   	movff	btemp,postinc1
 27400  014E1E  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27401  014E24  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27402  014E2A  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27403  014E30  0060  F643  FFE6   	movff	_C+144,postinc1
 27404  014E36  0060  F647  FFE6   	movff	_C+145,postinc1
 27405  014E3C  0060  F64B  FFE6   	movff	_C+146,postinc1
 27406  014E42  0060  F64F  FFE6   	movff	_C+147,postinc1
 27407  014E48  EC29  F097         	call	___fladd	;wreg free
 27408  014E4C  0060  F094  F190   	movff	btemp,_C+144	;volatile
 27409  014E52  0060  F098  F191   	movff	btemp+1,_C+145	;volatile
 27410  014E58  0060  F09C  F192   	movff	btemp+2,_C+146	;volatile
 27411  014E5E  0060  F0A0  F193   	movff	btemp+3,_C+147	;volatile
 27412  014E64                     l9207:
 27413                           
 27414                           ;bsoc.c: 18:  if (C.p_bat < 0.0)
 27415  014E64  0101               	movlb	1	; () banked
 27416  014E66  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 27417  014E68  D03C               	goto	l9211
 27418                           
 27419                           ; BSR set to: 1
 27420                           ;bsoc.c: 19:   C.bkwo += (C.p_bat / 3600.0);
 27421  014E6A  0E00               	movlw	0
 27422  014E6C  6EE6               	movwf	postinc1,c
 27423  014E6E  0E00               	movlw	0
 27424  014E70  6EE6               	movwf	postinc1,c
 27425  014E72  0E61               	movlw	97
 27426  014E74  6EE6               	movwf	postinc1,c
 27427  014E76  0E45               	movlw	69
 27428  014E78  6EE6               	movwf	postinc1,c
 27429  014E7A  0060  F5D3  FFE6   	movff	_C+116,postinc1
 27430  014E80  0060  F5D7  FFE6   	movff	_C+117,postinc1
 27431  014E86  0060  F5DB  FFE6   	movff	_C+118,postinc1
 27432  014E8C  0060  F5DF  FFE6   	movff	_C+119,postinc1
 27433  014E92  EC07  F09B         	call	___fldiv	;wreg free
 27434  014E96  0060  F097  FFE6   	movff	btemp,postinc1
 27435  014E9C  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27436  014EA2  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27437  014EA8  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27438  014EAE  0060  F653  FFE6   	movff	_C+148,postinc1
 27439  014EB4  0060  F657  FFE6   	movff	_C+149,postinc1
 27440  014EBA  0060  F65B  FFE6   	movff	_C+150,postinc1
 27441  014EC0  0060  F65F  FFE6   	movff	_C+151,postinc1
 27442  014EC6  EC29  F097         	call	___fladd	;wreg free
 27443  014ECA  0060  F094  F194   	movff	btemp,_C+148	;volatile
 27444  014ED0  0060  F098  F195   	movff	btemp+1,_C+149	;volatile
 27445  014ED6  0060  F09C  F196   	movff	btemp+2,_C+150	;volatile
 27446  014EDC  0060  F0A0  F197   	movff	btemp+3,_C+151	;volatile
 27447  014EE2                     l9211:
 27448                           
 27449                           ;bsoc.c: 21:  if (C.dynamic_ah > (C.bank_ah))
 27450  014EE2  0060  F613  FFE6   	movff	_C+132,postinc1
 27451  014EE8  0060  F617  FFE6   	movff	_C+133,postinc1
 27452  014EEE  0060  F61B  FFE6   	movff	_C+134,postinc1
 27453  014EF4  0060  F61F  FFE6   	movff	_C+135,postinc1
 27454  014EFA  0060  F5F3  FFE6   	movff	_C+124,postinc1
 27455  014F00  0060  F5F7  FFE6   	movff	_C+125,postinc1
 27456  014F06  0060  F5FB  FFE6   	movff	_C+126,postinc1
 27457  014F0C  0060  F5FF  FFE6   	movff	_C+127,postinc1
 27458  014F12  ECCF  F0B4         	call	___flge	;wreg free
 27459  014F16  B025               	btfsc	btemp& (0+255),0,c
 27460  014F18  D008               	goto	l9215
 27461                           
 27462                           ;bsoc.c: 22:   C.dynamic_ah = C.bank_ah;
 27463  014F1A  C17C  F184         	movff	_C+124,_C+132	;volatile
 27464  014F1E  C17D  F185         	movff	_C+125,_C+133	;volatile
 27465  014F22  C17E  F186         	movff	_C+126,_C+134	;volatile
 27466  014F26  C17F  F187         	movff	_C+127,_C+135	;volatile
 27467  014F2A                     l9215:
 27468                           
 27469                           ;bsoc.c: 24:  V.lowint_count++;
 27470  014F2A  0E01               	movlw	1
 27471  014F2C  0102               	movlb	2	; () banked
 27472  014F2E  27B0               	addwf	(_V+176)& (0+255),f,b	;volatile
 27473  014F30  0E00               	movlw	0
 27474  014F32  23B1               	addwfc	(_V+177)& (0+255),f,b	;volatile
 27475  014F34  23B2               	addwfc	(_V+178)& (0+255),f,b	;volatile
 27476  014F36  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 27477                           
 27478                           ; BSR set to: 2
 27479                           ;bsoc.c: 25:  C.update = 0;
 27480  014F38  0101               	movlb	1	; () banked
 27481  014F3A  6BA4               	clrf	(_C+164)& (0+255),b	;volatile
 27482                           
 27483                           ; BSR set to: 1
 27484  014F3C  92BE               	bcf	190,1,c	;volatile
 27485                           
 27486                           ; BSR set to: 1
 27487                           ; _calc_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 27488  014F3E  0012               	return		;funcret
 27489  014F40                     __end_of_calc_bsoc:
 27490                           	opt callstack 0
 27491                           
 27492 ;; *************** function _INT0_ISR *****************
 27493 ;; Defined at:
 27494 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 27495 ;; Parameters:    Size  Location     Type
 27496 ;;		None
 27497 ;; Auto vars:     Size  Location     Type
 27498 ;;		None
 27499 ;; Return value:  Size  Location     Type
 27500 ;;                  1    wreg      void 
 27501 ;; Registers used:
 27502 ;;		wreg, status,2, status,0, pclath, tosl
 27503 ;; Tracked objects:
 27504 ;;		On entry : 0/0
 27505 ;;		On exit  : 0/0
 27506 ;;		Unchanged: 0/0
 27507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27512 ;;Total ram usage:        0 bytes
 27513 ;; Hardware stack levels used:    1
 27514 ;; Hardware stack levels required when called:    2
 27515 ;; This function calls:
 27516 ;;		_INT0_CallBack
 27517 ;; This function is called by:
 27518 ;;		Interrupt level 2
 27519 ;; This function uses a non-reentrant model
 27520 ;;
 27521                           
 27522                           	psect	text138
 27523  01949C                     __ptext138:
 27524                           	opt callstack 0
 27525  01949C                     _INT0_ISR:
 27526                           	opt callstack 11
 27527                           
 27528                           ; BSR set to: 1
 27529                           ;incstack = 0
 27530  01949C  EE14  F016         	lfsr	1,___inthi_sp
 27531                           
 27532                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 27533  0194A0  0139               	movlb	57	; () banked
 27534  0194A2  91A1               	bcf	161,0,b	;volatile
 27535                           
 27536                           ; BSR set to: 57
 27537                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 27538  0194A4  EC3F  F0C9         	call	_INT0_CallBack	;wreg free
 27539  0194A8  0011               	retfie		f
 27540  0194AA                     __end_of_INT0_ISR:
 27541                           	opt callstack 0
 27542                           
 27543 ;; *************** function _INT0_CallBack *****************
 27544 ;; Defined at:
 27545 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 27546 ;; Parameters:    Size  Location     Type
 27547 ;;		None
 27548 ;; Auto vars:     Size  Location     Type
 27549 ;;		None
 27550 ;; Return value:  Size  Location     Type
 27551 ;;                  1  [STACK] void 
 27552 ;; Registers used:
 27553 ;;		wreg, status,2, status,0, pclath, tosl
 27554 ;; Tracked objects:
 27555 ;;		On entry : 3F/39
 27556 ;;		On exit  : 0/0
 27557 ;;		Unchanged: 0/0
 27558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27563 ;;Total ram usage:        0 bytes
 27564 ;; Hardware stack levels used:    1
 27565 ;; Hardware stack levels required when called:    1
 27566 ;; This function calls:
 27567 ;;		Absolute function
 27568 ;;		_INT0_DefaultInterruptHandler
 27569 ;; This function is called by:
 27570 ;;		_INT0_ISR
 27571 ;; This function uses a reentrant model
 27572 ;;
 27573                           
 27574                           	psect	text139
 27575  01927E                     __ptext139:
 27576                           	opt callstack 0
 27577  01927E                     _INT0_CallBack:
 27578                           	opt callstack 11
 27579                           
 27580                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 27581                           
 27582                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27583                           ;incstack = 0
 27584  01927E  5007               	movf	_INT0_InterruptHandler^0,w,c
 27585  019280  1008               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 27586  019282  1009               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 27587  019284  B4D8               	btfsc	status,2,c
 27588  019286  0012               	return	
 27589                           
 27590                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 27591  019288  D801               	call	u401_48
 27592  01928A  0012               	return	
 27593  01928C                     u401_48:
 27594  01928C  0005               	push	
 27595  01928E  6EFA               	movwf	pclath,c
 27596  019290  5007               	movf	_INT0_InterruptHandler^0,w,c
 27597  019292  6EFD               	movwf	tosl,c
 27598  019294  5008               	movf	(_INT0_InterruptHandler+1)^0,w,c
 27599  019296  6EFE               	movwf	tosh,c
 27600  019298  5009               	movf	(_INT0_InterruptHandler+2)^0,w,c
 27601  01929A  6EFF               	movwf	tosu,c
 27602  01929C  50FA               	movf	pclath,w,c
 27603  01929E  0012               	return		;indir
 27604  0192A0                     __end_of_INT0_CallBack:
 27605                           	opt callstack 0
 27606                           
 27607 ;; *************** function _INT0_DefaultInterruptHandler *****************
 27608 ;; Defined at:
 27609 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 27610 ;; Parameters:    Size  Location     Type
 27611 ;;		None
 27612 ;; Auto vars:     Size  Location     Type
 27613 ;;		None
 27614 ;; Return value:  Size  Location     Type
 27615 ;;                  1  [STACK] void 
 27616 ;; Registers used:
 27617 ;;		None
 27618 ;; Tracked objects:
 27619 ;;		On entry : 0/39
 27620 ;;		On exit  : 0/0
 27621 ;;		Unchanged: 0/0
 27622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27627 ;;Total ram usage:        0 bytes
 27628 ;; Hardware stack levels used:    1
 27629 ;; This function calls:
 27630 ;;		Nothing
 27631 ;; This function is called by:
 27632 ;;		_EXT_INT_Initialize
 27633 ;;		_INT0_CallBack
 27634 ;; This function uses a reentrant model
 27635 ;;
 27636                           
 27637                           	psect	text140
 27638  019532                     __ptext140:
 27639                           	opt callstack 0
 27640  019532                     _INT0_DefaultInterruptHandler:
 27641                           	opt callstack 11
 27642                           
 27643                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27644                           
 27645                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27646                           ;incstack = 0
 27647  019532  0012               	return		;funcret
 27648  019534                     __end_of_INT0_DefaultInterruptHandler:
 27649                           	opt callstack 0
 27650                           
 27651 ;; *************** function _Default_ISR *****************
 27652 ;; Defined at:
 27653 ;;		line 89 in file "mcc_generated_files/interrupt_manager.c"
 27654 ;; Parameters:    Size  Location     Type
 27655 ;;		None
 27656 ;; Auto vars:     Size  Location     Type
 27657 ;;		None
 27658 ;; Return value:  Size  Location     Type
 27659 ;;                  1    wreg      void 
 27660 ;; Registers used:
 27661 ;;		None
 27662 ;; Tracked objects:
 27663 ;;		On entry : 0/0
 27664 ;;		On exit  : 0/0
 27665 ;;		Unchanged: 0/0
 27666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27671 ;;Total ram usage:        0 bytes
 27672 ;; Hardware stack levels used:    1
 27673 ;; This function calls:
 27674 ;;		Nothing
 27675 ;; This function is called by:
 27676 ;;		Interrupt level 2
 27677 ;; This function uses a non-reentrant model
 27678 ;;
 27679                           
 27680                           	psect	text141
 27681  019528                     __ptext141:
 27682                           	opt callstack 0
 27683  019528                     _Default_ISR:
 27684                           	opt callstack 13
 27685                           
 27686                           ;incstack = 0
 27687  019528  EE14  F016         	lfsr	1,___inthi_sp
 27688  01952C  0011               	retfie		f
 27689  01952E                     __end_of_Default_ISR:
 27690                           	opt callstack 0
 27691                           
 27692 ;; *************** function _ADCC_ISR *****************
 27693 ;; Defined at:
 27694 ;;		line 314 in file "mcc_generated_files/adcc.c"
 27695 ;; Parameters:    Size  Location     Type
 27696 ;;		None
 27697 ;; Auto vars:     Size  Location     Type
 27698 ;;		None
 27699 ;; Return value:  Size  Location     Type
 27700 ;;                  1    wreg      void 
 27701 ;; Registers used:
 27702 ;;		wreg, status,2, status,0, pclath, tosl
 27703 ;; Tracked objects:
 27704 ;;		On entry : 0/0
 27705 ;;		On exit  : 0/0
 27706 ;;		Unchanged: 0/0
 27707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27712 ;;Total ram usage:        0 bytes
 27713 ;; Hardware stack levels used:    1
 27714 ;; Hardware stack levels required when called:    1
 27715 ;; This function calls:
 27716 ;;		Absolute function
 27717 ;;		_ADCC_DefaultInterruptHandler
 27718 ;;		_adc_int_handler
 27719 ;; This function is called by:
 27720 ;;		Interrupt level 2
 27721 ;; This function uses a non-reentrant model
 27722 ;;
 27723                           
 27724                           	psect	text142
 27725  018DB4                     __ptext142:
 27726                           	opt callstack 0
 27727  018DB4                     _ADCC_ISR:
 27728                           	opt callstack 12
 27729                           
 27730                           ;incstack = 0
 27731  018DB4  EE14  F016         	lfsr	1,___inthi_sp
 27732                           
 27733                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 27734  018DB8  0139               	movlb	57	; () banked
 27735  018DBA  95A1               	bcf	161,2,b	;volatile
 27736                           
 27737                           ; BSR set to: 57
 27738                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 27739  018DBC  0100               	movlb	0	; () banked
 27740  018DBE  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 27741  018DC0  11B6               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 27742  018DC2  11B7               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 27743  018DC4  B4D8               	btfsc	status,2,c
 27744  018DC6  0011               	retfie		f
 27745                           
 27746                           ; BSR set to: 0
 27747                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 27748  018DC8  D801               	call	i2u898_48
 27749  018DCA  0011               	retfie		f
 27750  018DCC                     i2u898_48:
 27751  018DCC  0005               	push	
 27752  018DCE  6EFA               	movwf	pclath,c
 27753  018DD0  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 27754  018DD2  6EFD               	movwf	tosl,c
 27755  018DD4  51B6               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 27756  018DD6  6EFE               	movwf	tosh,c
 27757  018DD8  51B7               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 27758  018DDA  6EFF               	movwf	tosu,c
 27759  018DDC  50FA               	movf	pclath,w,c
 27760  018DDE  0012               	return		;indir
 27761  018DE0                     __end_of_ADCC_ISR:
 27762                           	opt callstack 0
 27763                           
 27764 ;; *************** function _adc_int_t_handler *****************
 27765 ;; Defined at:
 27766 ;;		line 128 in file "daq.c"
 27767 ;; Parameters:    Size  Location     Type
 27768 ;;		None
 27769 ;; Auto vars:     Size  Location     Type
 27770 ;;		None
 27771 ;; Return value:  Size  Location     Type
 27772 ;;                  1  [STACK] void 
 27773 ;; Registers used:
 27774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 27775 ;; Tracked objects:
 27776 ;;		On entry : 3F/0
 27777 ;;		On exit  : 1/0
 27778 ;;		Unchanged: 0/0
 27779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27784 ;;Total ram usage:        0 bytes
 27785 ;; Hardware stack levels used:    1
 27786 ;; Hardware stack levels required when called:    1
 27787 ;; This function calls:
 27788 ;;		_ADCC_DischargeSampleCapacitor
 27789 ;;		_ADCC_StartConversion
 27790 ;; This function is called by:
 27791 ;;		_start_adc_scan
 27792 ;;		_ADCC_ThresholdISR
 27793 ;; This function uses a reentrant model
 27794 ;;
 27795                           
 27796                           	psect	text143
 27797  018202                     __ptext143:
 27798                           	opt callstack 0
 27799  018202                     _adc_int_t_handler:
 27800                           	opt callstack 11
 27801                           
 27802                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 27803                           
 27804                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27805                           ;incstack = 0
 27806  018202  013E               	movlb	62	; () banked
 27807  018204  51E6               	movf	230,w,b	;volatile
 27808  018206  006F FB9C  F025    	movff	16103,btemp	;volatile
 27809  01820C  6A26               	clrf	(btemp+1)^0,c
 27810  01820E  0060  F094  F026   	movff	btemp,btemp+1
 27811  018214  6A25               	clrf	btemp^0,c
 27812  018216  2625               	addwf	btemp^0,f,c
 27813  018218  0E00               	movlw	0
 27814  01821A  2226               	addwfc	(btemp+1)^0,f,c
 27815  01821C  0100               	movlb	0	; () banked
 27816  01821E  51E7               	movf	(_R+36)& (0+255),w,b	;volatile
 27817  018220  0D02               	mullw	2
 27818  018222  50F3               	movf	243,w,c
 27819  018224  0FC3               	addlw	low _R
 27820  018226  6ED9               	movwf	fsr2l,c
 27821  018228  6ADA               	clrf	fsr2h,c
 27822  01822A  0060  F097  FFDE   	movff	btemp,postinc2
 27823  018230  0060  F09B  FFDD   	movff	btemp+1,postdec2
 27824  018236                     l9561:
 27825                           
 27826                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 27827  018236  0100               	movlb	0	; () banked
 27828  018238  2BE7               	incf	(_R+36)& (0+255),f,b	;volatile
 27829  01823A  0E0D               	movlw	13
 27830  01823C  65E7               	cpfsgt	(_R+36)& (0+255),b	;volatile
 27831  01823E  D003               	goto	l9567
 27832                           
 27833                           ; BSR set to: 0
 27834                           ;daq.c: 136:    R.done = 1;
 27835  018240  0E01               	movlw	1
 27836  018242  6FEA               	movwf	(_R+39)& (0+255),b	;volatile
 27837  018244  0012               	return	
 27838  018246                     l9567:
 27839                           
 27840                           ; BSR set to: 0
 27841                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 27842  018246  0060  F39C  F030   	movff	_R+36,btemp+11	;volatile
 27843  01824C  EE20  F0E8         	lfsr	2,_R+37	;volatile
 27844  018250  006F FF78  F02D    	movff	postinc2,btemp+8
 27845  018256  006F FF74  F02E    	movff	postdec2,btemp+9
 27846  01825C  2A30               	incf	(btemp+11)^0,f,c
 27847  01825E  D003               	goto	u895_44
 27848  018260                     u895_45:
 27849  018260  90D8               	bcf	status,0,c
 27850  018262  322E               	rrcf	(btemp+9)^0,f,c
 27851  018264  322D               	rrcf	(btemp+8)^0,f,c
 27852  018266                     u895_44:
 27853  018266  2E30               	decfsz	(btemp+11)^0,f,c
 27854  018268  D7FB               	goto	u895_45
 27855  01826A  A02D               	btfss	(btemp+8)^0,0,c
 27856  01826C  D7E4               	goto	l9561
 27857                           
 27858                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 27859  01826E  EC73  F0CA         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 27860                           
 27861                           ; BSR set to: 62
 27862                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 27863  018272  0100               	movlb	0	; () banked
 27864  018274  51E7               	movf	(_R+36)& (0+255),w,b	;volatile
 27865  018276  0B0F               	andlw	15
 27866  018278  6EE6               	movwf	postinc1,c
 27867  01827A  EC26  F0CA         	call	_ADCC_StartConversion	;wreg free
 27868                           
 27869                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 27870  01827E  0012               	return		;funcret
 27871  018280                     __end_of_adc_int_t_handler:
 27872                           	opt callstack 0
 27873                           
 27874 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 27875 ;; Defined at:
 27876 ;;		line 339 in file "mcc_generated_files/adcc.c"
 27877 ;; Parameters:    Size  Location     Type
 27878 ;;		None
 27879 ;; Auto vars:     Size  Location     Type
 27880 ;;		None
 27881 ;; Return value:  Size  Location     Type
 27882 ;;                  1  [STACK] void 
 27883 ;; Registers used:
 27884 ;;		None
 27885 ;; Tracked objects:
 27886 ;;		On entry : 3F/0
 27887 ;;		On exit  : 0/0
 27888 ;;		Unchanged: 0/0
 27889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27894 ;;Total ram usage:        0 bytes
 27895 ;; Hardware stack levels used:    1
 27896 ;; This function calls:
 27897 ;;		Nothing
 27898 ;; This function is called by:
 27899 ;;		_ADCC_Initialize
 27900 ;;		_ADCC_ISR
 27901 ;;		_ADCC_ThresholdISR
 27902 ;; This function uses a reentrant model
 27903 ;;
 27904                           
 27905                           	psect	text144
 27906  019534                     __ptext144:
 27907                           	opt callstack 0
 27908  019534                     _ADCC_DefaultInterruptHandler:
 27909                           	opt callstack 12
 27910                           
 27911                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27912                           
 27913                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27914                           ;incstack = 0
 27915  019534  0012               	return		;funcret
 27916  019536                     __end_of_ADCC_DefaultInterruptHandler:
 27917                           	opt callstack 0
 27918                           
 27919 ;; *************** function _adc_int_handler *****************
 27920 ;; Defined at:
 27921 ;;		line 118 in file "daq.c"
 27922 ;; Parameters:    Size  Location     Type
 27923 ;;		None
 27924 ;; Auto vars:     Size  Location     Type
 27925 ;;		None
 27926 ;; Return value:  Size  Location     Type
 27927 ;;                  1  [STACK] void 
 27928 ;; Registers used:
 27929 ;;		None
 27930 ;; Tracked objects:
 27931 ;;		On entry : 3F/0
 27932 ;;		On exit  : 0/0
 27933 ;;		Unchanged: 0/0
 27934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27939 ;;Total ram usage:        0 bytes
 27940 ;; Hardware stack levels used:    1
 27941 ;; This function calls:
 27942 ;;		Nothing
 27943 ;; This function is called by:
 27944 ;;		_start_adc_scan
 27945 ;;		_ADCC_ISR
 27946 ;; This function uses a reentrant model
 27947 ;;
 27948                           
 27949                           	psect	text145
 27950  019536                     __ptext145:
 27951                           	opt callstack 0
 27952  019536                     _adc_int_handler:
 27953                           	opt callstack 12
 27954                           
 27955                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27956                           
 27957                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27958                           ;incstack = 0
 27959  019536  0012               	return		;funcret
 27960  019538                     __end_of_adc_int_handler:
 27961                           	opt callstack 0
 27962                           
 27963 ;; *************** function _ADCC_ThresholdISR *****************
 27964 ;; Defined at:
 27965 ;;		line 327 in file "mcc_generated_files/adcc.c"
 27966 ;; Parameters:    Size  Location     Type
 27967 ;;		None
 27968 ;; Auto vars:     Size  Location     Type
 27969 ;;		None
 27970 ;; Return value:  Size  Location     Type
 27971 ;;                  1    wreg      void 
 27972 ;; Registers used:
 27973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 27974 ;; Tracked objects:
 27975 ;;		On entry : 0/0
 27976 ;;		On exit  : 0/0
 27977 ;;		Unchanged: 0/0
 27978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27981 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27982 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27983 ;;Total ram usage:        5 bytes
 27984 ;; Hardware stack levels used:    1
 27985 ;; Hardware stack levels required when called:    2
 27986 ;; This function calls:
 27987 ;;		Absolute function
 27988 ;;		_ADCC_DefaultInterruptHandler
 27989 ;;		_adc_int_t_handler
 27990 ;; This function is called by:
 27991 ;;		Interrupt level 2
 27992 ;; This function uses a non-reentrant model
 27993 ;;
 27994                           
 27995                           	psect	text146
 27996  018354                     __ptext146:
 27997                           	opt callstack 0
 27998  018354                     _ADCC_ThresholdISR:
 27999                           	opt callstack 11
 28000                           
 28001                           ;incstack = 0
 28002  018354  0060  F094  F045   	movff	btemp,??_ADCC_ThresholdISR
 28003  01835A  0060  F098  F046   	movff	btemp+1,??_ADCC_ThresholdISR+1
 28004  018360  0060  F0B4  F047   	movff	btemp+8,??_ADCC_ThresholdISR+2
 28005  018366  0060  F0B8  F048   	movff	btemp+9,??_ADCC_ThresholdISR+3
 28006  01836C  0060  F0C0  F049   	movff	btemp+11,??_ADCC_ThresholdISR+4
 28007  018372  EE14  F016         	lfsr	1,___inthi_sp
 28008                           
 28009                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 28010  018376  0139               	movlb	57	; () banked
 28011  018378  97A1               	bcf	161,3,b	;volatile
 28012                           
 28013                           ; BSR set to: 57
 28014                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 28015  01837A  0100               	movlb	0	; () banked
 28016  01837C  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 28017  01837E  11B3               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 28018  018380  11B4               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 28019  018382  B4D8               	btfsc	status,2,c
 28020  018384  D00C               	goto	i2u900_49
 28021                           
 28022                           ; BSR set to: 0
 28023                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 28024  018386  D801               	call	i2u900_48
 28025  018388  D00A               	goto	i2u900_49
 28026  01838A                     i2u900_48:
 28027  01838A  0005               	push	
 28028  01838C  6EFA               	movwf	pclath,c
 28029  01838E  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 28030  018390  6EFD               	movwf	tosl,c
 28031  018392  51B3               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 28032  018394  6EFE               	movwf	tosh,c
 28033  018396  51B4               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 28034  018398  6EFF               	movwf	tosu,c
 28035  01839A  50FA               	movf	pclath,w,c
 28036  01839C  0012               	return		;indir
 28037  01839E                     i2u900_49:
 28038  01839E  0060  F124  F030   	movff	??_ADCC_ThresholdISR+4,btemp+11
 28039  0183A4  0060  F120  F02E   	movff	??_ADCC_ThresholdISR+3,btemp+9
 28040  0183AA  0060  F11C  F02D   	movff	??_ADCC_ThresholdISR+2,btemp+8
 28041  0183B0  0060  F118  F026   	movff	??_ADCC_ThresholdISR+1,btemp+1
 28042  0183B6  0060  F114  F025   	movff	??_ADCC_ThresholdISR,btemp
 28043  0183BC  0011               	retfie		f
 28044  0183BE                     __end_of_ADCC_ThresholdISR:
 28045                           	opt callstack 0
 28046                           
 28047 ;; *************** function _UART1_tx_vect_isr *****************
 28048 ;; Defined at:
 28049 ;;		line 199 in file "mcc_generated_files/uart1.c"
 28050 ;; Parameters:    Size  Location     Type
 28051 ;;		None
 28052 ;; Auto vars:     Size  Location     Type
 28053 ;;		None
 28054 ;; Return value:  Size  Location     Type
 28055 ;;                  1    wreg      void 
 28056 ;; Registers used:
 28057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28058 ;; Tracked objects:
 28059 ;;		On entry : 0/0
 28060 ;;		On exit  : 0/0
 28061 ;;		Unchanged: 0/0
 28062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28067 ;;Total ram usage:        0 bytes
 28068 ;; Hardware stack levels used:    1
 28069 ;; Hardware stack levels required when called:    1
 28070 ;; This function calls:
 28071 ;;		Absolute function
 28072 ;;		_UART1_Transmit_ISR
 28073 ;; This function is called by:
 28074 ;;		Interrupt level 2
 28075 ;; This function uses a non-reentrant model
 28076 ;;
 28077                           
 28078                           	psect	text147
 28079  01910C                     __ptext147:
 28080                           	opt callstack 0
 28081  01910C                     _UART1_tx_vect_isr:
 28082                           	opt callstack 12
 28083                           
 28084                           ;incstack = 0
 28085  01910C  EE14  F016         	lfsr	1,___inthi_sp
 28086                           
 28087                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 28088  019110  0100               	movlb	0	; () banked
 28089  019112  51B8               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 28090  019114  11B9               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 28091  019116  11BA               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 28092  019118  B4D8               	btfsc	status,2,c
 28093  01911A  0011               	retfie		f
 28094                           
 28095                           ; BSR set to: 0
 28096                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 28097  01911C  D801               	call	i2u902_48
 28098  01911E  0011               	retfie		f
 28099  019120                     i2u902_48:
 28100  019120  0005               	push	
 28101  019122  6EFA               	movwf	pclath,c
 28102  019124  51B8               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 28103  019126  6EFD               	movwf	tosl,c
 28104  019128  51B9               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 28105  01912A  6EFE               	movwf	tosh,c
 28106  01912C  51BA               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 28107  01912E  6EFF               	movwf	tosu,c
 28108  019130  50FA               	movf	pclath,w,c
 28109  019132  0012               	return		;indir
 28110  019134                     __end_of_UART1_tx_vect_isr:
 28111                           	opt callstack 0
 28112                           
 28113 ;; *************** function _UART1_Transmit_ISR *****************
 28114 ;; Defined at:
 28115 ;;		line 213 in file "mcc_generated_files/uart1.c"
 28116 ;; Parameters:    Size  Location     Type
 28117 ;;		None
 28118 ;; Auto vars:     Size  Location     Type
 28119 ;;		None
 28120 ;; Return value:  Size  Location     Type
 28121 ;;                  1  [STACK] void 
 28122 ;; Registers used:
 28123 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28124 ;; Tracked objects:
 28125 ;;		On entry : 3F/0
 28126 ;;		On exit  : 3B/39
 28127 ;;		Unchanged: 0/0
 28128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28133 ;;Total ram usage:        0 bytes
 28134 ;; Hardware stack levels used:    1
 28135 ;; This function calls:
 28136 ;;		Nothing
 28137 ;; This function is called by:
 28138 ;;		_UART1_Initialize
 28139 ;;		_UART1_tx_vect_isr
 28140 ;; This function uses a reentrant model
 28141 ;;
 28142                           
 28143                           	psect	text148
 28144  018DE0                     __ptext148:
 28145                           	opt callstack 0
 28146  018DE0                     _UART1_Transmit_ISR:
 28147                           	opt callstack 12
 28148                           
 28149                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 28150                           
 28151                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28152                           ;incstack = 0
 28153  018DE0  0E40               	movlw	64
 28154  018DE2  6022               	cpfslt	_uart1TxBufferRemaining^0,c
 28155  018DE4  D010               	goto	l583
 28156                           
 28157                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 28158  018DE6  0EBC               	movlw	low _uart1TxBuffer
 28159  018DE8  2423               	addwf	_uart1TxTail^0,w,c	;volatile
 28160  018DEA  6ED9               	movwf	fsr2l,c
 28161  018DEC  6ADA               	clrf	fsr2h,c
 28162  018DEE  0E02               	movlw	high _uart1TxBuffer
 28163  018DF0  22DA               	addwfc	fsr2h,f,c
 28164  018DF2  50DF               	movf	indf2,w,c
 28165  018DF4  013D               	movlb	61	; () banked
 28166  018DF6  6FEA               	movwf	234,b	;volatile
 28167                           
 28168                           ; BSR set to: 61
 28169  018DF8  2A23               	incf	_uart1TxTail^0,f,c	;volatile
 28170                           
 28171                           ; BSR set to: 61
 28172                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 28173  018DFA  0E3F               	movlw	63
 28174  018DFC  6423               	cpfsgt	_uart1TxTail^0,c
 28175  018DFE  D001               	goto	l9271
 28176                           
 28177                           ; BSR set to: 61
 28178                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 28179  018E00  6A23               	clrf	_uart1TxTail^0,c	;volatile
 28180  018E02                     l9271:
 28181                           
 28182                           ; BSR set to: 61
 28183                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 28184  018E02  2A22               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 28185                           
 28186                           ;mcc_generated_files/uart1.c: 222:  } else {
 28187  018E04  0012               	return	
 28188  018E06                     l583:
 28189                           
 28190                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 28191  018E06  0139               	movlb	57	; () banked
 28192  018E08  9993               	bcf	147,4,b	;volatile
 28193                           
 28194                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 28195  018E0A  0012               	return		;funcret
 28196  018E0C                     __end_of_UART1_Transmit_ISR:
 28197                           	opt callstack 0
 28198                           
 28199 ;; *************** function _UART1_rx_vect_isr *****************
 28200 ;; Defined at:
 28201 ;;		line 206 in file "mcc_generated_files/uart1.c"
 28202 ;; Parameters:    Size  Location     Type
 28203 ;;		None
 28204 ;; Auto vars:     Size  Location     Type
 28205 ;;		None
 28206 ;; Return value:  Size  Location     Type
 28207 ;;                  1    wreg      void 
 28208 ;; Registers used:
 28209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28210 ;; Tracked objects:
 28211 ;;		On entry : 0/0
 28212 ;;		On exit  : 0/0
 28213 ;;		Unchanged: 0/0
 28214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28219 ;;Total ram usage:        0 bytes
 28220 ;; Hardware stack levels used:    1
 28221 ;; Hardware stack levels required when called:    1
 28222 ;; This function calls:
 28223 ;;		Absolute function
 28224 ;;		_UART1_Receive_ISR
 28225 ;; This function is called by:
 28226 ;;		Interrupt level 2
 28227 ;; This function uses a non-reentrant model
 28228 ;;
 28229                           
 28230                           	psect	text149
 28231  019134                     __ptext149:
 28232                           	opt callstack 0
 28233  019134                     _UART1_rx_vect_isr:
 28234                           	opt callstack 12
 28235                           
 28236                           ;incstack = 0
 28237  019134  EE14  F016         	lfsr	1,___inthi_sp
 28238                           
 28239                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 28240  019138  0100               	movlb	0	; () banked
 28241  01913A  51BB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 28242  01913C  11BC               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 28243  01913E  11BD               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 28244  019140  B4D8               	btfsc	status,2,c
 28245  019142  0011               	retfie		f
 28246                           
 28247                           ; BSR set to: 0
 28248                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 28249  019144  D801               	call	i2u904_48
 28250  019146  0011               	retfie		f
 28251  019148                     i2u904_48:
 28252  019148  0005               	push	
 28253  01914A  6EFA               	movwf	pclath,c
 28254  01914C  51BB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 28255  01914E  6EFD               	movwf	tosl,c
 28256  019150  51BC               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 28257  019152  6EFE               	movwf	tosh,c
 28258  019154  51BD               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 28259  019156  6EFF               	movwf	tosu,c
 28260  019158  50FA               	movf	pclath,w,c
 28261  01915A  0012               	return		;indir
 28262  01915C                     __end_of_UART1_rx_vect_isr:
 28263                           	opt callstack 0
 28264                           
 28265 ;; *************** function _UART1_Receive_ISR *****************
 28266 ;; Defined at:
 28267 ;;		line 229 in file "mcc_generated_files/uart1.c"
 28268 ;; Parameters:    Size  Location     Type
 28269 ;;		None
 28270 ;; Auto vars:     Size  Location     Type
 28271 ;;		None
 28272 ;; Return value:  Size  Location     Type
 28273 ;;                  1  [STACK] void 
 28274 ;; Registers used:
 28275 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28276 ;; Tracked objects:
 28277 ;;		On entry : 3F/0
 28278 ;;		On exit  : 0/0
 28279 ;;		Unchanged: 0/0
 28280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28285 ;;Total ram usage:        0 bytes
 28286 ;; Hardware stack levels used:    1
 28287 ;; This function calls:
 28288 ;;		Nothing
 28289 ;; This function is called by:
 28290 ;;		_UART1_Initialize
 28291 ;;		_UART1_rx_vect_isr
 28292 ;; This function uses a reentrant model
 28293 ;;
 28294                           
 28295                           	psect	text150
 28296  019338                     __ptext150:
 28297                           	opt callstack 0
 28298  019338                     _UART1_Receive_ISR:
 28299                           	opt callstack 12
 28300                           
 28301                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 28302                           
 28303                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28304                           ;incstack = 0
 28305  019338  0E00               	movlw	low _uart1RxBuffer
 28306  01933A  2421               	addwf	_uart1RxHead^0,w,c	;volatile
 28307  01933C  6ED9               	movwf	fsr2l,c
 28308  01933E  6ADA               	clrf	fsr2h,c
 28309  019340  0E05               	movlw	high _uart1RxBuffer
 28310  019342  22DA               	addwfc	fsr2h,f,c
 28311  019344  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 28312  01934A  2A21               	incf	_uart1RxHead^0,f,c	;volatile
 28313                           
 28314                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 28315  01934C  2821               	incf	_uart1RxHead^0,w,c
 28316  01934E  B4D8               	btfsc	status,2,c
 28317                           
 28318                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 28319  019350  6A21               	clrf	_uart1RxHead^0,c	;volatile
 28320                           
 28321                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 28322  019352  2A1F               	incf	_uart1RxCount^0,f,c	;volatile
 28323                           
 28324                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28325  019354  0012               	return		;funcret
 28326  019356                     __end_of_UART1_Receive_ISR:
 28327                           	opt callstack 0
 28328                           
 28329 ;; *************** function _UART2_tx_vect_isr *****************
 28330 ;; Defined at:
 28331 ;;		line 195 in file "mcc_generated_files/uart2.c"
 28332 ;; Parameters:    Size  Location     Type
 28333 ;;		None
 28334 ;; Auto vars:     Size  Location     Type
 28335 ;;		None
 28336 ;; Return value:  Size  Location     Type
 28337 ;;                  1    wreg      void 
 28338 ;; Registers used:
 28339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28340 ;; Tracked objects:
 28341 ;;		On entry : 0/0
 28342 ;;		On exit  : 0/0
 28343 ;;		Unchanged: 0/0
 28344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28349 ;;Total ram usage:        0 bytes
 28350 ;; Hardware stack levels used:    1
 28351 ;; Hardware stack levels required when called:    1
 28352 ;; This function calls:
 28353 ;;		Absolute function
 28354 ;;		_UART2_Transmit_ISR
 28355 ;; This function is called by:
 28356 ;;		Interrupt level 2
 28357 ;; This function uses a non-reentrant model
 28358 ;;
 28359                           
 28360                           	psect	text151
 28361  01915C                     __ptext151:
 28362                           	opt callstack 0
 28363  01915C                     _UART2_tx_vect_isr:
 28364                           	opt callstack 12
 28365                           
 28366                           ;incstack = 0
 28367  01915C  EE14  F016         	lfsr	1,___inthi_sp
 28368                           
 28369                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 28370  019160  0100               	movlb	0	; () banked
 28371  019162  51BE               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 28372  019164  11BF               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 28373  019166  11C0               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 28374  019168  B4D8               	btfsc	status,2,c
 28375  01916A  0011               	retfie		f
 28376                           
 28377                           ; BSR set to: 0
 28378                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 28379  01916C  D801               	call	i2u906_48
 28380  01916E  0011               	retfie		f
 28381  019170                     i2u906_48:
 28382  019170  0005               	push	
 28383  019172  6EFA               	movwf	pclath,c
 28384  019174  51BE               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 28385  019176  6EFD               	movwf	tosl,c
 28386  019178  51BF               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 28387  01917A  6EFE               	movwf	tosh,c
 28388  01917C  51C0               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 28389  01917E  6EFF               	movwf	tosu,c
 28390  019180  50FA               	movf	pclath,w,c
 28391  019182  0012               	return		;indir
 28392  019184                     __end_of_UART2_tx_vect_isr:
 28393                           	opt callstack 0
 28394                           
 28395 ;; *************** function _UART2_Transmit_ISR *****************
 28396 ;; Defined at:
 28397 ;;		line 213 in file "mcc_generated_files/uart2.c"
 28398 ;; Parameters:    Size  Location     Type
 28399 ;;		None
 28400 ;; Auto vars:     Size  Location     Type
 28401 ;;		None
 28402 ;; Return value:  Size  Location     Type
 28403 ;;                  1  [STACK] void 
 28404 ;; Registers used:
 28405 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28406 ;; Tracked objects:
 28407 ;;		On entry : 3F/0
 28408 ;;		On exit  : 3B/39
 28409 ;;		Unchanged: 0/0
 28410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28415 ;;Total ram usage:        0 bytes
 28416 ;; Hardware stack levels used:    1
 28417 ;; This function calls:
 28418 ;;		Nothing
 28419 ;; This function is called by:
 28420 ;;		_UART2_Initialize
 28421 ;;		_UART2_tx_vect_isr
 28422 ;; This function uses a reentrant model
 28423 ;;
 28424                           
 28425                           	psect	text152
 28426  018E0C                     __ptext152:
 28427                           	opt callstack 0
 28428  018E0C                     _UART2_Transmit_ISR:
 28429                           	opt callstack 12
 28430                           
 28431                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 28432                           
 28433                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28434                           ;incstack = 0
 28435  018E0C  0E40               	movlw	64
 28436  018E0E  601C               	cpfslt	_uart2TxBufferRemaining^0,c
 28437  018E10  D010               	goto	l703
 28438                           
 28439                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 28440  018E12  0E54               	movlw	low _uart2TxBuffer
 28441  018E14  241D               	addwf	_uart2TxTail^0,w,c	;volatile
 28442  018E16  6ED9               	movwf	fsr2l,c
 28443  018E18  6ADA               	clrf	fsr2h,c
 28444  018E1A  0E03               	movlw	high _uart2TxBuffer
 28445  018E1C  22DA               	addwfc	fsr2h,f,c
 28446  018E1E  50DF               	movf	indf2,w,c
 28447  018E20  013D               	movlb	61	; () banked
 28448  018E22  6FD2               	movwf	210,b	;volatile
 28449                           
 28450                           ; BSR set to: 61
 28451  018E24  2A1D               	incf	_uart2TxTail^0,f,c	;volatile
 28452                           
 28453                           ; BSR set to: 61
 28454                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 28455  018E26  0E3F               	movlw	63
 28456  018E28  641D               	cpfsgt	_uart2TxTail^0,c
 28457  018E2A  D001               	goto	l9293
 28458                           
 28459                           ; BSR set to: 61
 28460                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 28461  018E2C  6A1D               	clrf	_uart2TxTail^0,c	;volatile
 28462  018E2E                     l9293:
 28463                           
 28464                           ; BSR set to: 61
 28465                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 28466  018E2E  2A1C               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 28467                           
 28468                           ;mcc_generated_files/uart2.c: 224:     }
 28469  018E30  0012               	return	
 28470  018E32                     l703:
 28471                           
 28472                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 28473  018E32  0139               	movlb	57	; () banked
 28474  018E34  9796               	bcf	150,3,b	;volatile
 28475                           
 28476                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 28477  018E36  0012               	return		;funcret
 28478  018E38                     __end_of_UART2_Transmit_ISR:
 28479                           	opt callstack 0
 28480                           
 28481 ;; *************** function _UART2_rx_vect_isr *****************
 28482 ;; Defined at:
 28483 ;;		line 203 in file "mcc_generated_files/uart2.c"
 28484 ;; Parameters:    Size  Location     Type
 28485 ;;		None
 28486 ;; Auto vars:     Size  Location     Type
 28487 ;;		None
 28488 ;; Return value:  Size  Location     Type
 28489 ;;                  1    wreg      void 
 28490 ;; Registers used:
 28491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28492 ;; Tracked objects:
 28493 ;;		On entry : 0/0
 28494 ;;		On exit  : 0/0
 28495 ;;		Unchanged: 0/0
 28496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28501 ;;Total ram usage:        0 bytes
 28502 ;; Hardware stack levels used:    1
 28503 ;; Hardware stack levels required when called:    1
 28504 ;; This function calls:
 28505 ;;		Absolute function
 28506 ;;		_UART2_Receive_ISR
 28507 ;; This function is called by:
 28508 ;;		Interrupt level 2
 28509 ;; This function uses a non-reentrant model
 28510 ;;
 28511                           
 28512                           	psect	text153
 28513  019184                     __ptext153:
 28514                           	opt callstack 0
 28515  019184                     _UART2_rx_vect_isr:
 28516                           	opt callstack 12
 28517                           
 28518                           ;incstack = 0
 28519  019184  EE14  F016         	lfsr	1,___inthi_sp
 28520                           
 28521                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 28522  019188  5001               	movf	_UART2_RxInterruptHandler^0,w,c
 28523  01918A  1002               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 28524  01918C  1003               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 28525  01918E  B4D8               	btfsc	status,2,c
 28526  019190  0011               	retfie		f
 28527                           
 28528                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 28529  019192  D801               	call	i2u908_48
 28530  019194  0011               	retfie		f
 28531  019196                     i2u908_48:
 28532  019196  0005               	push	
 28533  019198  6EFA               	movwf	pclath,c
 28534  01919A  5001               	movf	_UART2_RxInterruptHandler^0,w,c
 28535  01919C  6EFD               	movwf	tosl,c
 28536  01919E  5002               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 28537  0191A0  6EFE               	movwf	tosh,c
 28538  0191A2  5003               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 28539  0191A4  6EFF               	movwf	tosu,c
 28540  0191A6  50FA               	movf	pclath,w,c
 28541  0191A8  0012               	return		;indir
 28542  0191AA                     __end_of_UART2_rx_vect_isr:
 28543                           	opt callstack 0
 28544                           
 28545 ;; *************** function _UART2_Receive_ISR *****************
 28546 ;; Defined at:
 28547 ;;		line 233 in file "mcc_generated_files/uart2.c"
 28548 ;; Parameters:    Size  Location     Type
 28549 ;;		None
 28550 ;; Auto vars:     Size  Location     Type
 28551 ;;		None
 28552 ;; Return value:  Size  Location     Type
 28553 ;;                  1  [STACK] void 
 28554 ;; Registers used:
 28555 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28556 ;; Tracked objects:
 28557 ;;		On entry : 0/0
 28558 ;;		On exit  : 0/0
 28559 ;;		Unchanged: 0/0
 28560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28565 ;;Total ram usage:        0 bytes
 28566 ;; Hardware stack levels used:    1
 28567 ;; This function calls:
 28568 ;;		Nothing
 28569 ;; This function is called by:
 28570 ;;		_UART2_Initialize
 28571 ;;		_UART2_rx_vect_isr
 28572 ;; This function uses a reentrant model
 28573 ;;
 28574                           
 28575                           	psect	text154
 28576  019356                     __ptext154:
 28577                           	opt callstack 0
 28578  019356                     _UART2_Receive_ISR:
 28579                           	opt callstack 12
 28580                           
 28581                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 28582                           
 28583                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28584                           ;incstack = 0
 28585  019356  0E00               	movlw	low _uart2RxBuffer
 28586  019358  241B               	addwf	_uart2RxHead^0,w,c	;volatile
 28587  01935A  6ED9               	movwf	fsr2l,c
 28588  01935C  6ADA               	clrf	fsr2h,c
 28589  01935E  0E06               	movlw	high _uart2RxBuffer
 28590  019360  22DA               	addwfc	fsr2h,f,c
 28591  019362  006F F743 FFDF     	movff	15824,indf2	;volatile
 28592  019368  2A1B               	incf	_uart2RxHead^0,f,c	;volatile
 28593                           
 28594                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 28595  01936A  281B               	incf	_uart2RxHead^0,w,c
 28596  01936C  B4D8               	btfsc	status,2,c
 28597                           
 28598                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 28599  01936E  6A1B               	clrf	_uart2RxHead^0,c	;volatile
 28600                           
 28601                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 28602  019370  2A19               	incf	_uart2RxCount^0,f,c	;volatile
 28603                           
 28604                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28605  019372  0012               	return		;funcret
 28606  019374                     __end_of_UART2_Receive_ISR:
 28607                           	opt callstack 0
 28608                           
 28609 ;; *************** function _TMR6_ISR *****************
 28610 ;; Defined at:
 28611 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 28612 ;; Parameters:    Size  Location     Type
 28613 ;;		None
 28614 ;; Auto vars:     Size  Location     Type
 28615 ;;		None
 28616 ;; Return value:  Size  Location     Type
 28617 ;;                  1    wreg      void 
 28618 ;; Registers used:
 28619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 28620 ;; Tracked objects:
 28621 ;;		On entry : 0/0
 28622 ;;		On exit  : 0/0
 28623 ;;		Unchanged: 0/0
 28624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28627 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28628 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28629 ;;Total ram usage:        1 bytes
 28630 ;; Hardware stack levels used:    1
 28631 ;; Hardware stack levels required when called:    2
 28632 ;; This function calls:
 28633 ;;		_TMR6_CallBack
 28634 ;; This function is called by:
 28635 ;;		Interrupt level 2
 28636 ;; This function uses a non-reentrant model
 28637 ;;
 28638                           
 28639                           	psect	text155
 28640  0193AC                     __ptext155:
 28641                           	opt callstack 0
 28642  0193AC                     _TMR6_ISR:
 28643                           	opt callstack 11
 28644                           
 28645                           ;incstack = 0
 28646  0193AC  0060  F094  F04A   	movff	btemp,??_TMR6_ISR
 28647  0193B2  EE14  F016         	lfsr	1,___inthi_sp
 28648                           
 28649                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 28650  0193B6  0139               	movlb	57	; () banked
 28651  0193B8  91A9               	bcf	169,0,b	;volatile
 28652                           
 28653                           ; BSR set to: 57
 28654                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 28655  0193BA  EC0B  F0C9         	call	_TMR6_CallBack	;wreg free
 28656  0193BE  0060  F128  F025   	movff	??_TMR6_ISR,btemp
 28657  0193C4  0011               	retfie		f
 28658  0193C6                     __end_of_TMR6_ISR:
 28659                           	opt callstack 0
 28660                           
 28661 ;; *************** function _TMR6_CallBack *****************
 28662 ;; Defined at:
 28663 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 28664 ;; Parameters:    Size  Location     Type
 28665 ;;		None
 28666 ;; Auto vars:     Size  Location     Type
 28667 ;;		None
 28668 ;; Return value:  Size  Location     Type
 28669 ;;                  1  [STACK] void 
 28670 ;; Registers used:
 28671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 28672 ;; Tracked objects:
 28673 ;;		On entry : 3F/39
 28674 ;;		On exit  : 0/0
 28675 ;;		Unchanged: 0/0
 28676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28681 ;;Total ram usage:        0 bytes
 28682 ;; Hardware stack levels used:    1
 28683 ;; Hardware stack levels required when called:    1
 28684 ;; This function calls:
 28685 ;;		Absolute function
 28686 ;;		_TMR6_DefaultInterruptHandler
 28687 ;; This function is called by:
 28688 ;;		_TMR6_ISR
 28689 ;; This function uses a reentrant model
 28690 ;;
 28691                           
 28692                           	psect	text156
 28693  019216                     __ptext156:
 28694                           	opt callstack 0
 28695  019216                     _TMR6_CallBack:
 28696                           	opt callstack 11
 28697                           
 28698                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 28699                           
 28700                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28701                           ;incstack = 0
 28702  019216  0100               	movlb	0	; () banked
 28703  019218  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 28704  01921A  11B0               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 28705  01921C  11B1               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 28706  01921E  B4D8               	btfsc	status,2,c
 28707  019220  0012               	return	
 28708                           
 28709                           ; BSR set to: 0
 28710                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 28711  019222  D801               	call	u871_48
 28712  019224  0012               	return	
 28713  019226                     u871_48:
 28714  019226  0005               	push	
 28715  019228  6EFA               	movwf	pclath,c
 28716  01922A  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 28717  01922C  6EFD               	movwf	tosl,c
 28718  01922E  51B0               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 28719  019230  6EFE               	movwf	tosh,c
 28720  019232  51B1               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 28721  019234  6EFF               	movwf	tosu,c
 28722  019236  50FA               	movf	pclath,w,c
 28723  019238  0012               	return		;indir
 28724  01923A                     __end_of_TMR6_CallBack:
 28725                           	opt callstack 0
 28726                           
 28727 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 28728 ;; Defined at:
 28729 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 28730 ;; Parameters:    Size  Location     Type
 28731 ;;		None
 28732 ;; Auto vars:     Size  Location     Type
 28733 ;;  i               1  [STACK] unsigned char 
 28734 ;; Return value:  Size  Location     Type
 28735 ;;                  1  [STACK] void 
 28736 ;; Registers used:
 28737 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 28738 ;; Tracked objects:
 28739 ;;		On entry : 3F/0
 28740 ;;		On exit  : 0/0
 28741 ;;		Unchanged: 0/0
 28742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28747 ;;Total ram usage:        0 bytes
 28748 ;; Hardware stack levels used:    1
 28749 ;; This function calls:
 28750 ;;		Nothing
 28751 ;; This function is called by:
 28752 ;;		_TMR6_Initialize
 28753 ;;		_TMR6_CallBack
 28754 ;; This function uses a reentrant model
 28755 ;;
 28756                           
 28757                           	psect	text157
 28758  0187C2                     __ptext157:
 28759                           	opt callstack 0
 28760  0187C2                     _TMR6_DefaultInterruptHandler:
 28761                           	opt callstack 0
 28762                           
 28763                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28764  0187C2  52E6               	movf	postinc1,f,c
 28765                           
 28766                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 28767                           ;stkvar	_i @ sp[(-1)+0]
 28768                           
 28769                           ;incstack = 0
 28770  0187C4  0EFF               	movlw	-1
 28771  0187C6  6AE3               	clrf	plusw1,c
 28772  0187C8                     l8935:
 28773                           
 28774                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 28775                           ;stkvar	_i @ sp[(-1)+0]
 28776  0187C8  0EFF               	movlw	-1
 28777  0187CA  50E3               	movf	plusw1,w,c
 28778  0187CC  0D02               	mullw	2
 28779  0187CE  0EB5               	movlw	low _tickCount
 28780  0187D0  24F3               	addwf	243,w,c
 28781  0187D2  6ED9               	movwf	fsr2l,c
 28782  0187D4  0E01               	movlw	high _tickCount
 28783  0187D6  20F4               	addwfc	prodh,w,c
 28784  0187D8  6EDA               	movwf	fsr2h,c
 28785  0187DA  50DE               	movf	postinc2,w,c
 28786  0187DC  10DE               	iorwf	postinc2,w,c
 28787  0187DE  B4D8               	btfsc	status,2,c
 28788  0187E0  D00C               	goto	l8939
 28789                           
 28790                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 28791                           ;stkvar	_i @ sp[(-1)+0]
 28792  0187E2  0EFF               	movlw	-1
 28793  0187E4  50E3               	movf	plusw1,w,c
 28794  0187E6  0D02               	mullw	2
 28795  0187E8  0EB5               	movlw	low _tickCount
 28796  0187EA  24F3               	addwf	243,w,c
 28797  0187EC  6ED9               	movwf	fsr2l,c
 28798  0187EE  0E01               	movlw	high _tickCount
 28799  0187F0  20F4               	addwfc	prodh,w,c
 28800  0187F2  6EDA               	movwf	fsr2h,c
 28801  0187F4  06DE               	decf	postinc2,f,c
 28802  0187F6  0E00               	movlw	0
 28803  0187F8  5ADD               	subwfb	postdec2,f,c
 28804  0187FA                     l8939:
 28805                           
 28806                           ;mcc_generated_files/tmr6.c: 207:  }
 28807                           ;stkvar	_i @ sp[(-1)+0]
 28808  0187FA  0EFF               	movlw	-1
 28809  0187FC  2AE3               	incf	plusw1,f,c
 28810                           
 28811                           ;stkvar	_i @ sp[(-1)+0]
 28812  0187FE  0EFF               	movlw	-1
 28813  018800  006F FF8C  F025    	movff	plusw1,btemp
 28814  018806  0E0B               	movlw	11
 28815  018808  6425               	cpfsgt	btemp^0,c
 28816  01880A  D7DE               	goto	l8935
 28817                           
 28818                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 28819  01880C  52E5               	movf	postdec1,f,c
 28820  01880E  0012               	return		;funcret
 28821  018810                     __end_of_TMR6_DefaultInterruptHandler:
 28822                           	opt callstack 0
 28823                           
 28824 ;; *************** function _DMA1_DMASCNT_ISR *****************
 28825 ;; Defined at:
 28826 ;;		line 126 in file "mcc_generated_files/dma1.c"
 28827 ;; Parameters:    Size  Location     Type
 28828 ;;		None
 28829 ;; Auto vars:     Size  Location     Type
 28830 ;;		None
 28831 ;; Return value:  Size  Location     Type
 28832 ;;                  1    wreg      void 
 28833 ;; Registers used:
 28834 ;;		None
 28835 ;; Tracked objects:
 28836 ;;		On entry : 0/0
 28837 ;;		On exit  : 3F/0
 28838 ;;		Unchanged: 0/0
 28839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28844 ;;Total ram usage:        0 bytes
 28845 ;; Hardware stack levels used:    1
 28846 ;; This function calls:
 28847 ;;		Nothing
 28848 ;; This function is called by:
 28849 ;;		Interrupt level 2
 28850 ;; This function uses a non-reentrant model
 28851 ;;
 28852                           
 28853                           	psect	text158
 28854  0194AC                     __ptext158:
 28855                           	opt callstack 0
 28856  0194AC                     _DMA1_DMASCNT_ISR:
 28857                           	opt callstack 13
 28858                           
 28859                           ;incstack = 0
 28860  0194AC  EE14  F016         	lfsr	1,___inthi_sp
 28861                           
 28862                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 28863  0194B0  0139               	movlb	57	; () banked
 28864  0194B2  91A2               	bcf	162,0,b	;volatile
 28865                           
 28866                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 28867  0194B4  0100               	movlb	0	; () banked
 28868  0194B6  9789               	bcf	_spi_link& (0+255),3,b	;volatile
 28869                           
 28870                           ; BSR set to: 0
 28871  0194B8  0011               	retfie		f
 28872  0194BA                     __end_of_DMA1_DMASCNT_ISR:
 28873                           	opt callstack 0
 28874                           
 28875 ;; *************** function _DMA1_DMADCNT_ISR *****************
 28876 ;; Defined at:
 28877 ;;		line 134 in file "mcc_generated_files/dma1.c"
 28878 ;; Parameters:    Size  Location     Type
 28879 ;;		None
 28880 ;; Auto vars:     Size  Location     Type
 28881 ;;		None
 28882 ;; Return value:  Size  Location     Type
 28883 ;;                  1    wreg      void 
 28884 ;; Registers used:
 28885 ;;		None
 28886 ;; Tracked objects:
 28887 ;;		On entry : 0/0
 28888 ;;		On exit  : 3F/39
 28889 ;;		Unchanged: 0/0
 28890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28895 ;;Total ram usage:        0 bytes
 28896 ;; Hardware stack levels used:    1
 28897 ;; This function calls:
 28898 ;;		Nothing
 28899 ;; This function is called by:
 28900 ;;		Interrupt level 2
 28901 ;; This function uses a non-reentrant model
 28902 ;;
 28903                           
 28904                           	psect	text159
 28905  0194C4                     __ptext159:
 28906                           	opt callstack 0
 28907  0194C4                     _DMA1_DMADCNT_ISR:
 28908                           	opt callstack 13
 28909                           
 28910                           ; BSR set to: 0
 28911                           ;incstack = 0
 28912  0194C4  EE14  F016         	lfsr	1,___inthi_sp
 28913                           
 28914                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 28915  0194C8  0139               	movlb	57	; () banked
 28916  0194CA  93A2               	bcf	162,1,b	;volatile
 28917                           
 28918                           ; BSR set to: 57
 28919  0194CC  0011               	retfie		f
 28920  0194CE                     __end_of_DMA1_DMADCNT_ISR:
 28921                           	opt callstack 0
 28922                           
 28923 ;; *************** function _DMA1_DMAA_ISR *****************
 28924 ;; Defined at:
 28925 ;;		line 144 in file "mcc_generated_files/dma1.c"
 28926 ;; Parameters:    Size  Location     Type
 28927 ;;		None
 28928 ;; Auto vars:     Size  Location     Type
 28929 ;;		None
 28930 ;; Return value:  Size  Location     Type
 28931 ;;                  1    wreg      void 
 28932 ;; Registers used:
 28933 ;;		None
 28934 ;; Tracked objects:
 28935 ;;		On entry : 0/0
 28936 ;;		On exit  : 3F/39
 28937 ;;		Unchanged: 0/0
 28938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28943 ;;Total ram usage:        0 bytes
 28944 ;; Hardware stack levels used:    1
 28945 ;; This function calls:
 28946 ;;		Nothing
 28947 ;; This function is called by:
 28948 ;;		Interrupt level 2
 28949 ;; This function uses a non-reentrant model
 28950 ;;
 28951                           
 28952                           	psect	text160
 28953  0194D0                     __ptext160:
 28954                           	opt callstack 0
 28955  0194D0                     _DMA1_DMAA_ISR:
 28956                           	opt callstack 13
 28957                           
 28958                           ; BSR set to: 57
 28959                           ;incstack = 0
 28960  0194D0  EE14  F016         	lfsr	1,___inthi_sp
 28961                           
 28962                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 28963  0194D4  0139               	movlb	57	; () banked
 28964  0194D6  97A2               	bcf	162,3,b	;volatile
 28965                           
 28966                           ; BSR set to: 57
 28967  0194D8  0011               	retfie		f
 28968  0194DA                     __end_of_DMA1_DMAA_ISR:
 28969                           	opt callstack 0
 28970                           
 28971 ;; *************** function _DMA1_DMAOR_ISR *****************
 28972 ;; Defined at:
 28973 ;;		line 155 in file "mcc_generated_files/dma1.c"
 28974 ;; Parameters:    Size  Location     Type
 28975 ;;		None
 28976 ;; Auto vars:     Size  Location     Type
 28977 ;;		None
 28978 ;; Return value:  Size  Location     Type
 28979 ;;                  1    wreg      void 
 28980 ;; Registers used:
 28981 ;;		None
 28982 ;; Tracked objects:
 28983 ;;		On entry : 0/0
 28984 ;;		On exit  : 3F/39
 28985 ;;		Unchanged: 0/0
 28986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28991 ;;Total ram usage:        0 bytes
 28992 ;; Hardware stack levels used:    1
 28993 ;; This function calls:
 28994 ;;		Nothing
 28995 ;; This function is called by:
 28996 ;;		Interrupt level 2
 28997 ;; This function uses a non-reentrant model
 28998 ;;
 28999                           
 29000                           	psect	text161
 29001  0194DC                     __ptext161:
 29002                           	opt callstack 0
 29003  0194DC                     _DMA1_DMAOR_ISR:
 29004                           	opt callstack 13
 29005                           
 29006                           ; BSR set to: 57
 29007                           ;incstack = 0
 29008  0194DC  EE14  F016         	lfsr	1,___inthi_sp
 29009                           
 29010                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 29011  0194E0  0139               	movlb	57	; () banked
 29012  0194E2  95A2               	bcf	162,2,b	;volatile
 29013                           
 29014                           ; BSR set to: 57
 29015  0194E4  0011               	retfie		f
 29016  0194E6                     __end_of_DMA1_DMAOR_ISR:
 29017                           	opt callstack 0
 29018                           
 29019                           ;
 29020                           ; Interrupt Vector Table @ 0x8
 29021                           ;
 29022                           
 29023                           	psect	ivt0x8
 29024  000008                     __pivt0x8:
 29025                           	opt callstack 0
 29026  000008                     ivt0x8_base:
 29027                           	opt callstack 0
 29028                           
 29029                           ; Vector 0 : SWINT
 29030  000008  654A               	dw	_Default_ISR shr (0+2)
 29031                           
 29032                           ; Vector 1 : HLVD
 29033  00000A  654A               	dw	_Default_ISR shr (0+2)
 29034                           
 29035                           ; Vector 2 : OSF
 29036  00000C  654A               	dw	_Default_ISR shr (0+2)
 29037                           
 29038                           ; Vector 3 : CSW
 29039  00000E  654A               	dw	_Default_ISR shr (0+2)
 29040                           
 29041                           ; Vector 4 : NVM
 29042  000010  654A               	dw	_Default_ISR shr (0+2)
 29043                           
 29044                           ; Vector 5 : SCAN
 29045  000012  654A               	dw	_Default_ISR shr (0+2)
 29046                           
 29047                           ; Vector 6 : CRC
 29048  000014  654A               	dw	_Default_ISR shr (0+2)
 29049                           
 29050                           ; Vector 7 : IOC
 29051  000016  654A               	dw	_Default_ISR shr (0+2)
 29052                           
 29053                           ; Vector 8 : INT0
 29054  000018  6527               	dw	_INT0_ISR shr (0+2)
 29055                           
 29056                           ; Vector 9 : ZCD
 29057  00001A  654A               	dw	_Default_ISR shr (0+2)
 29058                           
 29059                           ; Vector 10 : AD
 29060  00001C  636D               	dw	_ADCC_ISR shr (0+2)
 29061                           
 29062                           ; Vector 11 : ADT
 29063  00001E  60D5               	dw	_ADCC_ThresholdISR shr (0+2)
 29064                           
 29065                           ; Vector 12 : CMP1
 29066  000020  654A               	dw	_Default_ISR shr (0+2)
 29067                           
 29068                           ; Vector 13 : SMT1
 29069  000022  654A               	dw	_Default_ISR shr (0+2)
 29070                           
 29071                           ; Vector 14 : SMT1PRA
 29072  000024  654A               	dw	_Default_ISR shr (0+2)
 29073                           
 29074                           ; Vector 15 : SMT1PRW
 29075  000026  654A               	dw	_Default_ISR shr (0+2)
 29076                           
 29077                           ; Vector 16 : DMA1SCNT
 29078  000028  652B               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 29079                           
 29080                           ; Vector 17 : DMA1DCNT
 29081  00002A  6531               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 29082                           
 29083                           ; Vector 18 : DMA1OR
 29084  00002C  6537               	dw	_DMA1_DMAOR_ISR shr (0+2)
 29085                           
 29086                           ; Vector 19 : DMA1A
 29087  00002E  6534               	dw	_DMA1_DMAA_ISR shr (0+2)
 29088                           
 29089                           ; Vector 20 : SPI1RX
 29090  000030  654A               	dw	_Default_ISR shr (0+2)
 29091                           
 29092                           ; Vector 21 : SPI1TX
 29093  000032  654A               	dw	_Default_ISR shr (0+2)
 29094                           
 29095                           ; Vector 22 : SPI1
 29096  000034  654A               	dw	_Default_ISR shr (0+2)
 29097                           
 29098                           ; Vector 23 : I2C1RX
 29099  000036  654A               	dw	_Default_ISR shr (0+2)
 29100                           
 29101                           ; Vector 24 : I2C1TX
 29102  000038  654A               	dw	_Default_ISR shr (0+2)
 29103                           
 29104                           ; Vector 25 : I2C1
 29105  00003A  654A               	dw	_Default_ISR shr (0+2)
 29106                           
 29107                           ; Vector 26 : I2C1E
 29108  00003C  654A               	dw	_Default_ISR shr (0+2)
 29109                           
 29110                           ; Vector 27 : U1RX
 29111  00003E  644D               	dw	_UART1_rx_vect_isr shr (0+2)
 29112                           
 29113                           ; Vector 28 : U1TX
 29114  000040  6443               	dw	_UART1_tx_vect_isr shr (0+2)
 29115                           
 29116                           ; Vector 29 : U1E
 29117  000042  654A               	dw	_Default_ISR shr (0+2)
 29118                           
 29119                           ; Vector 30 : U1
 29120  000044  654A               	dw	_Default_ISR shr (0+2)
 29121                           
 29122                           ; Vector 31 : TMR0
 29123  000046  654A               	dw	_Default_ISR shr (0+2)
 29124                           
 29125                           ; Vector 32 : TMR1
 29126  000048  654A               	dw	_Default_ISR shr (0+2)
 29127                           
 29128                           ; Vector 33 : TMR1G
 29129  00004A  654A               	dw	_Default_ISR shr (0+2)
 29130                           
 29131                           ; Vector 34 : TMR2
 29132  00004C  654A               	dw	_Default_ISR shr (0+2)
 29133                           
 29134                           ; Vector 35 : CCP1
 29135  00004E  654A               	dw	_Default_ISR shr (0+2)
 29136                           
 29137                           ; Vector 36 : Undefined
 29138  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 29139                           
 29140                           ; Vector 37 : NCO1
 29141  000052  654A               	dw	_Default_ISR shr (0+2)
 29142                           
 29143                           ; Vector 38 : CWG1
 29144  000054  654A               	dw	_Default_ISR shr (0+2)
 29145                           
 29146                           ; Vector 39 : CLC1
 29147  000056  654A               	dw	_Default_ISR shr (0+2)
 29148                           
 29149                           ; Vector 40 : INT1
 29150  000058  62D0               	dw	_INT1_ISR shr (0+2)
 29151                           
 29152                           ; Vector 41 : CMP2
 29153  00005A  654A               	dw	_Default_ISR shr (0+2)
 29154                           
 29155                           ; Vector 42 : DMA2SCNT
 29156  00005C  654A               	dw	_Default_ISR shr (0+2)
 29157                           
 29158                           ; Vector 43 : DMA2DCNT
 29159  00005E  654A               	dw	_Default_ISR shr (0+2)
 29160                           
 29161                           ; Vector 44 : DMA2OR
 29162  000060  654A               	dw	_Default_ISR shr (0+2)
 29163                           
 29164                           ; Vector 45 : DMA2A
 29165  000062  654A               	dw	_Default_ISR shr (0+2)
 29166                           
 29167                           ; Vector 46 : I2C2RX
 29168  000064  654A               	dw	_Default_ISR shr (0+2)
 29169                           
 29170                           ; Vector 47 : I2C2TX
 29171  000066  654A               	dw	_Default_ISR shr (0+2)
 29172                           
 29173                           ; Vector 48 : I2C2
 29174  000068  654A               	dw	_Default_ISR shr (0+2)
 29175                           
 29176                           ; Vector 49 : I2C2E
 29177  00006A  654A               	dw	_Default_ISR shr (0+2)
 29178                           
 29179                           ; Vector 50 : U2RX
 29180  00006C  6461               	dw	_UART2_rx_vect_isr shr (0+2)
 29181                           
 29182                           ; Vector 51 : U2TX
 29183  00006E  6457               	dw	_UART2_tx_vect_isr shr (0+2)
 29184                           
 29185                           ; Vector 52 : U2E
 29186  000070  654A               	dw	_Default_ISR shr (0+2)
 29187                           
 29188                           ; Vector 53 : U2
 29189  000072  654A               	dw	_Default_ISR shr (0+2)
 29190                           
 29191                           ; Vector 54 : TMR3
 29192  000074  5DF3               	dw	_TMR3_ISR shr (0+2)
 29193                           
 29194                           ; Vector 55 : TMR3G
 29195  000076  654A               	dw	_Default_ISR shr (0+2)
 29196                           
 29197                           ; Vector 56 : TMR4
 29198  000078  654A               	dw	_Default_ISR shr (0+2)
 29199                           
 29200                           ; Vector 57 : CCP2
 29201  00007A  654A               	dw	_Default_ISR shr (0+2)
 29202                           
 29203                           ; Vector 58 : Undefined
 29204  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 29205                           
 29206                           ; Vector 59 : CWG2
 29207  00007E  654A               	dw	_Default_ISR shr (0+2)
 29208                           
 29209                           ; Vector 60 : CLC2
 29210  000080  654A               	dw	_Default_ISR shr (0+2)
 29211                           
 29212                           ; Vector 61 : INT2
 29213  000082  654A               	dw	_Default_ISR shr (0+2)
 29214                           
 29215                           ; Vector 62 : Undefined
 29216  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 29217                           
 29218                           ; Vector 63 : Undefined
 29219  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 29220                           
 29221                           ; Vector 64 : Undefined
 29222  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 29223                           
 29224                           ; Vector 65 : Undefined
 29225  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 29226                           
 29227                           ; Vector 66 : Undefined
 29228  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 29229                           
 29230                           ; Vector 67 : Undefined
 29231  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 29232                           
 29233                           ; Vector 68 : Undefined
 29234  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 29235                           
 29236                           ; Vector 69 : Undefined
 29237  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 29238                           
 29239                           ; Vector 70 : TMR5
 29240  000094  61B1               	dw	_TMR5_ISR shr (0+2)
 29241                           
 29242                           ; Vector 71 : TMR5G
 29243  000096  654A               	dw	_Default_ISR shr (0+2)
 29244                           
 29245                           ; Vector 72 : TMR6
 29246  000098  64EB               	dw	_TMR6_ISR shr (0+2)
 29247                           
 29248                           ; Vector 73 : CCP3
 29249  00009A  654A               	dw	_Default_ISR shr (0+2)
 29250                           
 29251                           ; Vector 74 : CWG3
 29252  00009C  654A               	dw	_Default_ISR shr (0+2)
 29253                           
 29254                           ; Vector 75 : CLC3
 29255  00009E  654A               	dw	_Default_ISR shr (0+2)
 29256                           
 29257                           ; Vector 76 : Undefined
 29258  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 29259                           
 29260                           ; Vector 77 : Undefined
 29261  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 29262                           
 29263                           ; Vector 78 : Undefined
 29264  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 29265                           
 29266                           ; Vector 79 : Undefined
 29267  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 29268                           
 29269                           ; Vector 80 : CCP4
 29270  0000A8  654A               	dw	_Default_ISR shr (0+2)
 29271                           
 29272                           ; Vector 81 : CLC4
 29273  0000AA  654A               	dw	_Default_ISR shr (0+2)
 29274  0000AC                     ivt0x8_undefint:
 29275                           	opt callstack 0
 29276  0000AC  00FF               	reset	
 29277                           
 29278                           	psect	text162
 29279  000000                     __ptext162:
 29280                           	opt callstack 0
 29281                           
 29282                           	psect	rparam
 29283  0000                     
 29284                           	psect	temp
 29285  000025                     btemp:
 29286                           	opt callstack 0
 29287  000025                     	ds	32
 29288  0000                     wtemp0	set	btemp
 29289  0000                     wtemp1	set	btemp+2
 29290  0000                     wtemp2	set	btemp+4
 29291  0000                     wtemp3	set	btemp+6
 29292  0000                     wtemp4	set	btemp+8
 29293  0000                     wtemp5	set	btemp+10
 29294  0000                     wtemp8	set	btemp+1
 29295  0000                     ttemp0	set	btemp
 29296  0000                     ttemp1	set	btemp+3
 29297  0000                     ttemp2	set	btemp+6
 29298  0000                     ttemp3	set	btemp+9
 29299  0000                     ttemp5	set	btemp+1
 29300  0000                     ttemp6	set	btemp+4
 29301  0000                     ttemp7	set	btemp+8
 29302  0000                     ltemp0	set	btemp
 29303  0000                     ltemp1	set	btemp+4
 29304  0000                     ltemp2	set	btemp+8
 29305  0000                     lltemp0	set	btemp
 29306  0000                     lltemp1	set	btemp+8
 29307  0000                     lltemp2	set	btemp+16
 29308  0000                     lltemp3	set	btemp+24
 29309                           tosu	equ	0x3FFF
 29310                           tosh	equ	0x3FFE
 29311                           tosl	equ	0x3FFD
 29312                           stkptr	equ	0x3FFC
 29313                           pclatu	equ	0x3FFB
 29314                           pclath	equ	0x3FFA
 29315                           pcl	equ	0x3FF9
 29316                           tblptru	equ	0x3FF8
 29317                           tblptrh	equ	0x3FF7
 29318                           tblptrl	equ	0x3FF6
 29319                           tablat	equ	0x3FF5
 29320                           prodh	equ	0x3FF4
 29321                           prodl	equ	0x3FF3
 29322                           indf0	equ	0x3FEF
 29323                           postinc0	equ	0x3FEE
 29324                           postdec0	equ	0x3FED
 29325                           preinc0	equ	0x3FEC
 29326                           plusw0	equ	0x3FEB
 29327                           fsr0h	equ	0x3FEA
 29328                           fsr0l	equ	0x3FE9
 29329                           wreg	equ	0x3FE8
 29330                           indf1	equ	0x3FE7
 29331                           postinc1	equ	0x3FE6
 29332                           postdec1	equ	0x3FE5
 29333                           preinc1	equ	0x3FE4
 29334                           plusw1	equ	0x3FE3
 29335                           fsr1h	equ	0x3FE2
 29336                           fsr1l	equ	0x3FE1
 29337                           bsr	equ	0x3FE0
 29338                           indf2	equ	0x3FDF
 29339                           postinc2	equ	0x3FDE
 29340                           postdec2	equ	0x3FDD
 29341                           preinc2	equ	0x3FDC
 29342                           plusw2	equ	0x3FDB
 29343                           fsr2h	equ	0x3FDA
 29344                           fsr2l	equ	0x3FD9
 29345                           status	equ	0x3FD8


Data Sizes:
    Strings     446
    Constant    144
    Data        423
    BSS         1393
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     14      50
    BANK0           160      0     153
    BANK1           256     13     226
    BANK2           256      0     252
    BANK3           256      0     228
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_45(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 290
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    a	PTR const unsigned char  size(2) Largest target is 290
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_51(CODE[4]), STR_50(CODE[4]), STR_47(CODE[4]), STR_46(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_51(CODE[4]), STR_50(CODE[4]), STR_47(CODE[4]), STR_46(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5585_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D(BIGRAM[290]), V(BANK2[188]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D(BIGRAM[290]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_28(CODE[9]), 
		 -> STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), 
		 -> STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4308tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_28(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_27(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1934spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1934spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  309323
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                    _calc_model_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (20) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (20) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   27976
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  166948
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83221
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   26923
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56386
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56122
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   27945
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28084
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26698
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26569
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26237
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (17) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (17) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     265
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           13    13      0    3303
                                              0 BANK1     13    13      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0    3243
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           0     0      0    3243
                            ___fladd
                            ___fldiv
                             ___flge
 ---------------------------------------------------------------------------------
 (17) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (17) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (19) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (20) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (19) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (19) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (20) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (20) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (19) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (20) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       ___fladd
       ___fldiv
       ___flge
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     122      69        3.5%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E4      11       89.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FC       9       98.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      D      E2       7       88.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      99       5       95.6%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      E      32       1       79.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     611      58        0.0%
DATA                 0      0     733       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Dec  5 16:20:19 2019

                     _SPI1_Exchange8bit 92C0                __end_of_set_display_info 9338  
                                     _C 0100                                       _D 06FF  
                                     _H 00F2                                       _P 00A5  
                                     _R 00C3                                       _S 0060  
                                     _T FDB1                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler 901A            __end_of_start_switch_handler 92C0  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                __end_of_FVR_Initialize 950E                             __CFG_LVP$ON 000000  
                                   l173 9432                                     l703 8E32  
                                   l583 8E06                                     l837 92CE  
                                   _GIE 01FE97                                     _abs 88A2  
                                   _pad 70E0                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize 93DE                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack 927E                      _UART1_Transmit_ISR 8DE0  
                         __CFG_BBEN$OFF 000000                           _INT1_CallBack 925C  
                          __CFG_ZCD$OFF 000000                                    l1030 8AFA  
                                  l2008 4112                                    l1218 8B3A  
                                  l2044 123A                                    l3006 6FBE  
                                  l2126 55F0                                    l2073 066A  
                                  l1346 1F98                                    l1338 1DE0  
                                  l2147 44F8                                    l1363 25EC  
                       _timer3ReloadVal 0012                                    l3052 64CC  
                                  l1444 861A                                    l1356 2036  
                                  l1348 1F9E                                    l1358 20FC  
                                  l1359 220A                                    l2088 0B1A  
                                  l3080 8174                                    l3067 81F8  
                                  l1660 8B9A                                    l1580 7CD6  
                                  l1717 9334                                    l2197 1D78  
                                  l1670 6106                                    l2519 6994  
                                  l1808 668C                                    l1584 7F48  
                                  l2481 7954                                    l2804 3B7E  
                                  l2492 6AF6                                    l2485 6A22  
                                  l1677 7300                                    l1669 5FAA  
                                  l1765 402E                    _ADCC_StartConversion 944C  
                                  l2911 88E2                                    l2903 6822  
                                  l1599 8C04                                    l2840 2E48  
                                  l2771 3494                                    l7005 6B5A  
                                  l1885 806E                                    l2942 5CAE  
                                  l1894 750C                                    l2759 3604  
                                  l2880 6304                                    l7027 6C34  
                                  l7019 6C00                                    l7043 6FFA  
                                  l7123 692C                                    l7115 6900  
                                  l1988 713C                                    l7125 6942  
                                  l7117 691C                                    l8111 2EA8  
                                  l7143 87B2                                    l7047 7012  
                                  l7039 6FE8                                    l8121 2EFE  
                                  l7065 70C6                                    l7057 7092  
                                  l7081 7952                                    l7073 78DC  
                                  l8203 322C                                    l8123 2F2E  
                                  l9003 6552                                    l8141 2FD8  
                                  l8117 2EE8                                    l7077 791E  
                                  l8061 8C0E                                    l9101 3DE4  
                                  l8311 35A4                                    l8231 3314  
                                  l8207 325C                                    l8135 2F98  
                                  l8313 35B4                                    l8225 32F8  
                                  l8153 3040                                    l8145 2FEE  
                                  l8129 2F66                                    l8401 3920  
                                  l7089 8878                                    l6713 4B42  
                                  l9113 3F60                                    l9105 3E80  
                                  l9211 4EE2                                    l8307 358C  
                                  l8227 330A                                    l8235 3346  
                                  l8147 301E                                    l6811 5E4A  
                                  l6803 5D9E                                    l8403 3932  
                                  l8411 398A                                    l8331 3664  
                                  l7099 687E                                    l6651 67C0  
                                  l6707 4AAA                                    l8091 8EEC  
                                  l9037 8BB0                                    l6637 88D2  
                                  l8341 36BA                                    l8501 6AF4  
                                  l6661 681A                                    l6717 4BB0  
                                  l6709 4AFA                                    l9215 4F2A  
                                  l9207 4E64                                    l6831 267E  
                                  l8319 35E4                                    l8271 34D4  
                                  l8247 341E                                    l8183 317E  
                                  l6751 5826                                    l8423 39D4  
                                  l8351 3742                                    l8343 36EA  
                                  l6655 67C4                                    l7711 6402  
                                  l6735 8164                                    l8511 6154  
                                  l9119 3FFC                                    l9127 400E  
                                  l9161 6DB8                                    l9153 6D8E  
                                  l6841 26F4                                    l8281 34FC  
                                  l8265 34B6                                    l8257 3478  
                                  l8249 3444                                    l8193 31F0  
                                  l8441 3A4A                                    l8417 39B8  
                                  l8409 3986                                    l8361 3798  
                                  l8337 36A4                                    l8521 61CE  
                                  l9073 3B8A                                    l9155 6D9E  
                                  l8267 34C8                                    l6587 7DAA  
                                  l6763 58C0                                    l8451 3ABE  
                                  l8427 39FA                                    l8363 37C8  
                                  l8531 6230                                    l8523 61E4  
                                  l5885 8B22                                    l9181 6E8A  
                                  l9173 6E1C                                    l9157 6DA4  
                                  l9165 6DC0                                    l6925 2C58  
                                  l6837 26BE                                    l8285 3502  
                                  l8197 3210                                    l6589 7DCC  
                                  l6757 587A                                    l8437 3A44  
                                  l8357 3782                                    l6693 498C  
                                  l7709 6396                                    l8533 624E  
                                  l8525 6202                                    l9093 3DB2  
                                  l9271 8E02                                    l9319 8AE2  
                                  l9159 6DAA                                    l9167 6DEC  
                                  l6943 2CCE                                    l6919 2C3C  
                                  l6855 278C                                    l6839 26C4  
                                  l8199 3222                                    l6775 5992  
                                  l8471 3B62                                    l8463 3B2A  
                                  l8383 385A                                    l8375 3840  
                                  l6679 81E8                                    l8543 6282  
                                  l8535 6264                                    l8519 61C0  
                                  l9079 3BBA                                    l6953 2D42  
                                  l6929 2C7E                                    l6857 2792  
                                  l6849 274C                                    l8297 3560  
                                  l7673 5B20                                    l7657 5A5E  
                                  l8457 3AFA                                    l8393 38EA  
                                  l8369 3806                                    l8553 62E4  
                                  l9089 3CD8                                    l9433 7A20  
                                  l9193 8028                                    l6971 2DF6  
                                  l6963 2DB2                                    l6939 2CC8  
                                  l6867 27E4                                    l6859 27C2  
                                  l7683 5C02                                    l7675 5B38  
                                  l7667 5AF4                                    l7659 5A80  
                                  l6795 5D16                                    l8483 69E0  
                                  l9293 8E2E                                    l6973 2E10  
                                  l6957 2D88                                    l7693 5C9E  
                                  l7677 5B5C                                    l8469 3B52  
                                  l8493 6ABE                                    l9437 7A5E  
                                  l9461 741A                                    l9455 54FA  
                                  l7679 5B9A                                    l9561 8236  
                                  l6993 6B24                                    l8489 6A70  
                                  l9473 7476                                    l9555 8AB8  
                                  l9483 74E6                                    l8935 87C8  
                                  l9567 8246                                    l6999 6B3A  
                                  l8939 87FA                                    l7979 8F22  
                                  l8991 650E                                    STR_1 FF60  
                                  STR_2 FFB2                                    STR_3 FFE0  
                                  STR_4 FF4F                                    STR_5 FF71  
                                  STR_6 FFB2                                    STR_7 FFE0  
                                  STR_8 FF3E                                    l8999 653A  
                                  STR_9 FF93                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u5100 5820                                    u5020 89F2  
                                  u5030 89F4                                    u5120 5876  
                                  u5040 8122                                    u5050 8124  
                                  u5131 5880                                    u5140 58BA  
                                  u5300 5ED4                                    u5220 5D10  
                                  u5070 8D78                                    u5150 58EC  
                                  u5080 8D7A                                    u5240 5D66  
                                  u5170 59CA                                    u5250 5D98  
                                  _T6PR 003F93                                    u5500 2D1C  
                                  u5260 5DCA                                    _PMD0 0039C0  
                                  u5405 2966                                    _PMD1 0039C1  
                                  u5510 2D56                                    u5190 5A1C  
                                  u4710 8D48                                    _PMD2 0039C2  
                                  u5415 2A2E                                    _PMD3 0039C3  
                                  u5520 2D9C                                    u5280 5E82  
                                  u4800 6744                                    u4720 8D4A  
                                  _PMD4 0039C4                                    u5505 2D0C  
                                  u5425 2BF6                                    _PMD5 0039C5  
                                  u4730 8D18                                    _PMD6 0039C6  
                                  _PMD7 0039C7                                    u5460 2CC0  
                                  u5700 794E                                    u4900 81A8  
                                  u4740 8D1A                                    u4805 673A  
                                  u5390 27D2                                    u5710 8874  
                                  u8110 6278                                    u4680 7DFA  
                                  u5640 703E                                    u5720 685E  
                                  u4920 4924                                    u5570 6B86  
                                  u5810 6974                                    u5730 6872  
                                  u4850 6812                                    u4930 4970  
                                  u7315 8A2E                                    u5820 878E  
                                  u5660 70B2                                    u5740 68AC  
                                  u4860 6814                                    u5725 6854  
                                  u4845 67F4                                    u4925 491A  
                                  u8150 83CC                                    u7430 31A4  
                                  u5830 87AE                                    u4790 88B6  
                                  u5590 6C20                                    u4687 7DEC  
                                  u7440 31C4                                    u7441 31BE  
                                  u5745 68A2                                    u8250 64EC  
                                  u4970 4A50                                    u4890 81A6  
                                  u8314 3BA4                                    u4955 49AA  
                                  u8315 3B9E                                    u4956 49B0  
                                  u8420 3EC4                                    u4957 49BE  
                                  u7630 34DA                                    u7550 333C  
                                  u8430 9246                                    u6830 5AF0  
                                  u5790 694A                                    u4990 4B28  
                                  u8414 3EBC                                    u8334 3BD4  
                                  u8175 8400                                    u4975 4A46  
                                  u8415 3EB6                                    u8335 3BCE  
                                  u8176 8402                                    u8168 83CE  
                                  u7720 3570                                    u7480 3254  
                                  u9240 6EC8                                    u9320 77B8  
                                  u7650 34F4                                    u7490 3274  
                                  u7458 31C6                                    u6850 5C48  
                                  u9410 40E8                                    u6930 648E  
                                  u8354 3BF6                                    u7555 332C  
                                  u4995 4B1E                                    u8355 3BF0  
                                  u8436 9248                                    u6860 5C4A  
                                  u9260 6F44                                    u9500 4404  
                                  u8540 8014                                    u7485 3244  
                                  u7590 3466                                    u9430 4138  
                                  u8374 3DCC                                    u9327 77AA  
                                  u8375 3DC6                                    u9440 4390  
                                  u9360 4064                                    u7920 3A3C  
                                  u7690 3550                                    u9370 4066  
                                  u9610 02A6                                    u8394 3E9A  
                                  u8570 805A                                    u9451 43C0  
                                  u8395 3E94                                    u9460 43D6  
                                  u9620 02A8                                    u9540 00DA  
                                  u9461 43D4                                    u9470 43EA  
                                  u9390 40D6                                    u8558 8016  
                                  u7695 3540                                    u9480 43EE  
                                  u7960 3A98                                    u7880 39B2  
                                  u9720 05C6                                    u7970 3AD2  
                                  u9570 0194                                    _PLLR 01CEE0  
                                  u7980 3B0E                                    u9660 050E  
                                  u9580 0196                                    u8588 805C  
                                  u7965 3A88                                    u9830 0A18  
                                  u9760 0648                                    u9930 0EE4  
                                  u9690 0562                                    u9990 10B8  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR 8DE0                           __CFG_FCMEN$ON 000000  
                                  _dbuf 0394                                    _atoi 5A44  
                                  _ctoa 8072                                    _main 1D82  
                                  _dtoa 4034                                    _nanf 84EE  
                                  _seed 01CD                                    _prec 000C  
                                  _nout 00C1                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 5506                                    btemp 0025  
                                  _xtoa 44B4                  __end_of_check_adc_scan 9506  
                         ___fpclassifyf 6696                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 0016               __end_of_SPI1_Exchange8bit 92DE  
             __size_of_clear_hid_pflags 0024                         _TMR3_Initialize 8974  
                         __CFG_CSWEN$ON 000000                       _UART1_rx_vect_isr 9134  
                          ___param_bank 000000                      ?_UART1_rx_vect_isr 0045  
                      __end_of_INT0_ISR 94AA                        __end_of_INT1_ISR 8B7E  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma 7CDE  
         __end_of_OSCILLATOR_Initialize 9438                                   l10101 4102  
                                 l10113 416A                                   l10027 6ED4  
                                 l10043 7E74                                   l10123 437C  
                                 l10053 7134                                   l10109 414C  
                                 l10039 7E36                                   l10063 71CC  
                                 l10055 7146                                   l10143 442E  
                                 l10231 0470                                   l11007 60A2  
                                 l11111 1FD0                                   l10049 710C  
                                 l10305 0926                                   l10225 0396  
                                 l10209 02FC                                   l10217 032A  
                                 l10161 00AC                                   l10059 7182  
                                 l10075 8090                                   l10147 446A  
                                 l10251 057C                                   l10235 04D2  
                                 l11203 2616                                   l11131 2028  
                                 l11123 2004                                   l10077 80BC  
                                 l10069 773E                                   l10405 0FD6  
                                 l10253 058E                                   l10229 0406  
                                 l10173 00F0                                   l10181 0146  
                                 l10501 5784                                   l11109 1FA2  
                                 l11061 1DE8                                   l10407 0FF0  
                                 l10343 0C32                                   l10327 0B12  
                                 l10319 0A48                                   l10247 0554  
                                 l10191 01EA                                   l11143 22E8  
                                 l11063 1DFA                                   l11055 1DC2  
                                 l10417 1092                                   l10329 0B34  
                                 l10193 0216                                   l10521 4522  
                                 l10601 1376                                   l11057 1DCA  
                                 l10443 119A                                   l10427 10E2  
                                 l10355 0CBA                                   l10363 0D24  
                                 l10371 0D90                                   l10267 05F6  
                                 l10259 0594                                   l10195 022C  
                                 l10515 44E8                                   l11147 234A  
                                 l10285 06B8                                   l10269 0602  
                                 l10621 14E2                                   l11181 2566  
                                 l11157 24C6                                   l11165 2510  
                                 l10391 0F3A                                   l10295 077A  
                                 l10199 0258                                   l10463 5572  
                                 l10551 46B4                                   l10535 45BE  
                                 l10527 455E                                   l10703 1B2A  
                                 l10623 14F8                                   l11183 257E  
                                 l11175 2554                                   l11159 24F0  
                                 l10289 06F0                                   l11193 25C2  
                                 l10379 0EA2                                   l10483 5662  
                                 l10723 1D00                                   l10619 14A8  
                                 l10493 571C                                   l10717 1CA6  
                                 l10661 1830                                   l10733 1D24  
                                 l11189 259C                                   l10487 5692  
                                 l10479 5626                                   l10575 4824  
                                 l10559 473A                                   l10727 1D04  
                                 l10639 165C                                   l10497 5748  
                                 l10673 191C                                   l10649 16F2  
                                 l10761 5096                                   l10755 4FD8  
                                 l10693 1A7C                                   l10669 18E8  
                                 l10597 1326                                   PRLOCK 0039EF  
                                 l10599 1360                                   l10775 51AE  
                                 l10767 5100                                   l10839 7D36  
                                 l10873 7218                                   l10787 7BB4  
                                 l10789 7BF6                                   l10993 5F7A  
                       __end_of___aodiv 5A44                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 360E  
                                 _ADCLK 003EFF                         __end_of___aomod 5EF8  
                                 _ADPCH 003EF1                         __end_of___fldiv 3B88  
                                 _ADREF 003EFD                         __end_of___awdiv 6C4E  
                       __end_of___flneg 88A2                                   STR_11 FF82  
                                 STR_12 FEB9                                   STR_20 FEA6  
                                 STR_21 FF93                                   STR_13 FEDF  
                                 STR_30 FE80                                   STR_22 FF93  
                                 STR_14 FECC                                   STR_23 FF82  
                                 STR_31 FFCD                                   STR_15 FF2B  
                                 STR_32 FFCD                                   STR_24 FFFC  
                                 STR_16 FF05                                   STR_25 FFF9  
                                 STR_33 FFA3                                   STR_17 FF18  
                         __CFG_WDTE$OFF 000000                                   STR_34 FFA3  
                                 STR_50 FFEA                                   STR_18 FEF2  
                                 STR_35 FFA3                                   STR_51 FFF2  
                                 STR_27 FFC1                                   STR_19 FE59  
                                 STR_28 FFD7                                   STR_36 FE41  
                       __end_of___awmod 70E0                                   STR_45 FE7F  
                                 STR_29 FE80                                   STR_54 FFF6  
                                 STR_46 FFE6                                   STR_38 FE93  
                                 STR_47 FFEE                                   STR_39 FE6D  
                                 STR_56 FFF6                                   _ADRPT 003EEC  
                       __end_of___flmul 2E52                         __end_of___flsub 892E  
                       __end_of___fltol 699E                                   u10010 116E  
                                 u10020 1170                                   u10100 56CE  
                                 u10200 460C                                   u10130 57AA  
                                 u10107 56C0                                   u10300 47B4  
                                 u10220 466A                                   u10230 466C  
                                 u10150 44CE                                   u10400 1540  
                                 u10090 5688                                   u10250 4736  
                                 u10410 1542                                   u10260 4756  
                                 u10180 45B6                                   u10500 19D6  
                                 u10420 1568                                   u10190 460A  
                                 u10510 19D8                                   u10350 13BE  
                                 u10271 4786                                   u10255 4718  
                                 u10280 479C                                   u10360 13C0  
                                 u10281 479A                                   u10290 47B0  
                                 u10370 13E6                                   u10610 5222  
                                 u10550 1B7E                                   u10470 1746  
                                 u10640 7D16                                   u10730 60F2  
                                 _U1P1H 003DED                                   u10740 60F4  
                                 _U1P2H 003DEF                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   _T3CLK 003FA9  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 _U1P3L 003DF0                                   _U2P1L 003DD4  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 _U2P3L 003DD8                                   _T5CLK 003F9D  
                                 _T2HLT 003FAD                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 00B2  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U1TXB 003DEA  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 004A                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR 9528  
               __size_of_clear_adc_scan 0006       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                       _UART1_tx_vect_isr 910C  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 789A  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR 871E                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR 93C6                            _DMA1CON1bits 003BFD  
                                 _flags 000E                __size_of_calc_model_data 02DA  
                                 _fputc 6EA4              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha 89FE                                   _fputs 7E26  
                       __end_of_isdigit 8D84                      __CFG_MCLRE$EXTMCLR 000000  
                    ?_UART1_tx_vect_isr 0045                                   _srand 8C8C  
                                 _width 000A                                   _putch 9390  
                       __end_of_islower 8D24                         __end_of_isspace 87C2  
              _INT1_SetInterruptHandler 9042                         __end_of_isupper 8D54  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0025                                   ltemp1 0029  
                                 ltemp2 002D                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0025                                   ttemp1 0028  
                                 ttemp2 002B                                   ttemp3 002E  
                                 ttemp5 0026                                   ttemp6 0029  
                                 ttemp7 002D                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler 8FCA             _UART1_SetRxInterruptHandler 8FA2  
                                 wtemp0 0025                                   wtemp1 0027  
                                 wtemp2 0029                                   wtemp3 002B  
                                 wtemp4 002D                                   wtemp5 002F  
                                 wtemp8 0026                         __end_of_sprintf 740E  
                       __end_of_tolower 8202                         __end_of_strncmp 64D6  
                       __end_of_toupper 817E                     ??_UART1_tx_vect_isr 004A  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr 915C  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize 892E  
                 __end_of_ringBufS_init 8EDA                         __initialization 7510  
                     _UART2_rx_vect_isr 9184                            __end_of_atoi 5CB8  
                          __end_of_ctoa 80FA                            __end_of_main 2628  
                          __end_of_dtoa 44B4                            __end_of_nanf 8550  
                          __end_of_stoa 57C4                            __end_of_xtoa 486E  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0045  
               __end_of_TMR2_Initialize 93F6                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button 8AC0                _TMR5_SetInterruptHandler 8FF2  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
                 _TMR3_InterruptHandler 00A9    __size_of_UART1_SetTxInterruptHandler 0028  
                   ??_UART2_rx_vect_isr 004A               __end_of_UART1_tx_vect_isr 9134  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize 8E38  
                       _PWM8_Initialize 940C                        _UART1_Initialize 848A  
                     _UART2_tx_vect_isr 915C                      _UART2_Transmit_ISR 8E0C  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan 8426  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue 89FE  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0045                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                _RB6PPS 003A0E                                  i1l1047 8710  
                  _start_switch_handler 92A0                                  i1l1235 784A  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize 89BA                          __CFG_WDTCCS$SC 000000  
                                u401_48 928C                                  _FVRCON 003EC1  
                      _mode_lamp_bright 948E                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u821_20 90EA  
                                u821_26 90EC                                  u851_24 6E80  
                                u851_25 6E7C                                  u844_28 6D94  
                                u847_20 6DB4                                  u847_21 6DAE  
                                u863_28 926A                                  u871_48 9226  
                                u874_28 91DE                    __size_of_hid_display 0102  
                                u876_28 9202                                  u895_44 8266  
                                u895_45 8260                        __end_of___xxtofl 630E  
 __end_of_ADCC_DischargeSampleCapacitor 94EE  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor 94E6                __end_of_send_lcd_cmd_dma 8770  
                       _TMR3_WriteTimer 8B00                     ??_UART2_tx_vect_isr 004A  
             __end_of_UART2_rx_vect_isr 91AA              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize 94BA                        _UART2_Initialize 85B2  
                                _WaitMs 8BEC                         _conv_raw_result 3B88  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 699E                                  ___fleq 789A  
                     _ADCC_ThresholdISR 8354                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush 7EBE                                  _efgtoa 0000  
                                _floorf 486E                      ?_ADCC_ThresholdISR 0045  
                                _memset 4F40                    __size_of_help_button 0038  
                                clear_0 757E                                  clear_1 7592  
                                clear_2 75A6                                  clear_3 75B8  
                                clear_4 75C4                                  clear_5 75D0  
                                clear_6 75DC                                  clear_7 75E8  
                                clear_8 75F4                                  _printf 8550  
                    _eaDogM_WriteString 7CDE                                  _strcpy 76F6  
                             ?_ADCC_ISR 0045                                  _strlen 7D84  
                    __size_of_TimerDone 0028                         _ADCC_Initialize 82EA  
                        _PMD_Initialize 9438               __end_of_UART2_tx_vect_isr 9184  
                                lltemp0 0025                                  lltemp1 002D  
                                lltemp2 0035                                  lltemp3 003D  
                   ??_ADCC_ThresholdISR 0045                  __end_of_start_adc_scan 848A  
                          __mediumconst FDB0                                  preinc2 003FDC  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay 866A  
                      __end_of_vfprintf 7C34                              _StartTimer 8A40  
         __size_of_INTERRUPT_Initialize 0068                 __end_of_TMR5_Initialize 8974  
                     _SYSTEM_Initialize 8810                              __accesstop 0060  
               __end_of__initialization 7606                               ?_INT0_ISR 0045  
                             ?_INT1_ISR 0045                    __end_of_display_help 94FE  
                  __end_of_display_info 94F6               __end_of_CLKREF_Initialize 94C4  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer 8AC0                   _set_temp_display_help 9470  
                      _clear_hid_pflags 91AA                   __end_of_TMR3_CallBack 9216  
             __end_of_ADCC_ThresholdISR 83BE                      __size_of_calc_bsoc 0366  
                __end_of_ringBufS_flush 7F50                          __pcstackCOMRAM 0045  
                            ___inthi_sp 1016                              ___intlo_sp 180B  
                          __pidataBANK0 8BB6                            __pidataBANK1 7AD2  
                          __pidataBANK2 795E                               ?_TMR3_ISR 0045  
                             ?_TMR5_ISR 0045                               ?_TMR6_ISR 0045  
                        ivt0x8_undefint 00AC                           __end_of_fputc 6FC8  
                         __end_of_fputs 7EBE                           __end_of_srand 8CC0  
                 __end_of_TMR5_CallBack 91F2                           __end_of_putch 93AA  
               __end_of_PWM8_Initialize 9422                 __end_of_TMR6_Initialize 8E62  
                     _adc_int_t_handler 8202                  __end_of_PMD_Initialize 944C  
                            ??_ADCC_ISR 0045                   __end_of_TMR6_CallBack 923A  
           __size_of_EXT_INT_Initialize 0034              __size_of_UART1_tx_vect_isr 0028  
                         _DMA1_DMAA_ISR 94D0                   TMR3_ISR@CountCallBack 0010  
                        _clear_adc_scan 950E                      __size_of_hid_input 0090  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 0001  
             __end_of_SYSTEM_Initialize 885A                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer 8B40  
                            __pbssBANK0 0060                              __pbssBANK1 01B5  
                            __pbssBANK2 02BC                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            __pbssBANK6 0600                              _check_help 5EF8  
               __end_of_conv_raw_result 4034                   _INT0_InterruptHandler 0007  
                            ??_INT0_ISR 0045                              ??_INT1_ISR 004B  
                     __end_of_TimerDone 8F2A                        _DMA1_DMADCNT_ISR 94C4  
                    __size_of_init_bsoc 0012              __size_of_UART2_rx_vect_isr 0026  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01C0  
                 __end_of_wait_lcd_done 9390        __end_of_TMR3_SetInterruptHandler 9042  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler 8FF2  
                            ??_TMR3_ISR 01D5                 __end_of_ADCC_Initialize 8354  
                            ??_TMR5_ISR 004F               __end_of_adc_int_t_handler 8280  
                            ??_TMR6_ISR 004A                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler 90BA  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler 9092  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR 9338                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan 9514  
                        ?_DMA1_DMAA_ISR 0045                        _DMA1_DMASCNT_ISR 94AC  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0045              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0B3E  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 4F40                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch 8EDA                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer 8B00                 __size_of_switch_handler 0128  
                    __size_of_stop_bsoc 0006       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim 93C6                                 __Lparam 0000  
              __end_of_UART1_Initialize 84EE                       __end_of_hid_input 8072  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 57C4  
                               ___fladd 2E52                                 ___aomod 5CB8  
                               ___fldiv 360E                                 ___awdiv 6B00  
                               ___flneg 885A                                 ___awmod 6FC8  
                               ___flmul 2628                                 ___flsub 88E8  
                               ___fltol 682C               __end_of_UART1_Receive_ISR 9356  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 76F6                                 __pcinit 7510  
              __end_of_mode_lamp_bright 949C                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand 9480  
                               __ramtop 2000             __size_of_UART1_Transmit_ISR 002C  
                               __ptext0 1D82                                 __ptext1 8C58  
                               __ptext2 92A0                                 __ptext3 8426  
                               __ptext4 944C                                 __ptext5 94E6  
                               __ptext6 8C8C                                 __ptext7 760C  
                               __ptext8 8E62                                 __ptext9 8E8A  
                     _UART2_Receive_ISR 9356                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                                 us520999 5A2E  
                               us531999 5EE6                   _OSCILLATOR_Initialize 9422  
                          __size_of_abs 0046                            __size_of_pad 0114  
                     __end_of_init_bsoc 9470                                 _isalpha 89BA  
                               _isdigit 8D54                               _T3CONbits 003FA6  
                               us935999 404E                                 _mode_sw 0018  
                     __end_of_lp_filter 6696                                 _islower 8CF4  
                               _isspace 8770                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize 8610  
                               _isupper 8D24              __size_of_SYSTEM_Initialize 004A  
                               _sprintf 7304                                 _tolower 817E  
                 __size_of_display_help 0008                                 _utctime 009D  
                 __size_of_display_info 0008                                 _strncmp 630E  
                               _toupper 80FA                    end_of_initialization 7606  
             __size_of_convert_adc_data 00B8                      _check_enter_button 8A80  
                             i1u1075_20 7842     __end_of_UART1_SetTxInterruptHandler 8FA2  
           _UART1_SetTxInterruptHandler 8F7A     __end_of_UART2_SetRxInterruptHandler 8F7A  
           _UART2_SetRxInterruptHandler 8F52                       __end_of_set_vterm 931A  
                     __end_of_vfpfcnvrt 1D82                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 0040  
                     __end_of_start_lcd 9520               __end_of_UART2_Receive_ISR 9374  
                        wdtdelay@dcount 00A1                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 004B                   _INT1_InterruptHandler 0004  
                             _PORTBbits 003FCB                       __end_of_stop_bsoc 9526  
              _TMR3_SetInterruptHandler 901A                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler 8FCA                            _display_help 94F6  
                 _TMR5_InterruptHandler 00AC                            _display_info 94EE  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags 91CE  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler 90E2  
           _ADCC_SetADIInterruptHandler 90BA                              _update_lcd 71F4  
                       _calc_model_data 522C                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc 8C58  
                       _DMA1_Initialize 8280                              _start_bsoc 923A  
                       _SPI1_Initialize 93F6                   __end_of_get_vterm_ptr 8DB2  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs 8C22            __end_of_INTERRUPT_Initialize 8426  
                            _vterm_dump 6C4E                          __end_of___flge 6B00  
                        __end_of___fleq 795E    __end_of_INT0_DefaultInterruptHandler 9534  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler 9532  
            __size_of_UART1_Receive_ISR 001E                         _DMA2_Initialize 866A  
                        __end_of_efgtoa 1244                       __size_of_TMR3_ISR 00CE  
                     __size_of_TMR5_ISR 005A                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 4BDA  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 0095  
                        __end_of_memset 522C                          __end_of_printf 85B2  
              __end_of_DMA1_DMADCNT_ISR 94CE             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack 92A0                          __end_of_strcpy 77CA  
                        __end_of_strlen 7E26                     start_initialization 7510  
  __end_of_TMR5_DefaultInterruptHandler 910A   __size_of_TMR5_DefaultInterruptHandler 0028  
          _TMR5_DefaultInterruptHandler 90E2         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs 88E8                   __end_of_INT1_CallBack 927E  
             __size_of_set_display_info 001E                             __end_of_pad 71F4  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd 8EB2  
                        _switch_handler 6D7C           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 0500  
                 __end_of___fpclassifyf 682C                           _uart2RxBuffer 0600  
                         _uart1TxBuffer 02BC                __end_of_DMA1_DMASCNT_ISR 94BA  
                         _uart2TxBuffer 0354                          _DMA1_DMAOR_ISR 94DC  
                   __end_of_hid_display 7510                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone 8F02                           _ringBufS_init 8EB2  
                           __pdataBANK0 00C3                             __pdataBANK1 0100  
                           __pdataBANK2 0200              __size_of_UART2_Receive_ISR 001E  
                   __size_of_get_switch 0028              __end_of_EXT_INT_Initialize 8CF4  
               __end_of_calc_model_data 5506                     __end_of_help_button 8BB6  
       __end_of_eaDogM_WriteStringAtPos 8C58                             __pbssBIGRAM 06FF  
               __end_of_DMA1_Initialize 82EA                             __pbssCOMRAM 0001  
      __end_of_INT0_SetInterruptHandler 9092                           __pcstackBANK1 01D5  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler 6EA4                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize 940C                _UART1_RxInterruptHandler 00BB  
              _UART2_TxInterruptHandler 00BE                               __end_of_T FE41  
                      _convert_adc_data 7A1A                               _calc_bsoc 4BDA  
             __size_of_ringBufS_put_dma 00AA                            _init_display 760C  
                __end_of_DMA1_DMAOR_ISR 94E6                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 00AF                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize 86C4                  _PIN_MANAGER_Initialize 7F50  
              __size_of_TMR3_Initialize 0046                    __end_of_wait_lcd_set 951A  
                         __pmediumconst FDB0                               __ptext100 8F7A  
                             __ptext101 8FA2                               __ptext110 940C  
                             __ptext102 8E38                               __ptext111 9438  
                             __ptext103 8FCA                               __ptext120 8280  
                             __ptext112 7F50                               __ptext104 892E  
                             __ptext121 94BA                               __ptext113 9422  
                             __ptext105 8FF2                               __ptext130 8AC0  
                             __ptext122 82EA                               __ptext114 83BE  
                             __ptext106 8974                               __ptext131 91CE  
                             __ptext123 9092                               __ptext115 9506  
                             __ptext107 901A                               __ptext140 9532  
                             __ptext132 90E2                               __ptext124 90BA  
                             __ptext116 8CC0                               __ptext108 93DE  
                             __ptext141 9528                               __ptext133 77CC  
                             __ptext125 8B40                               __ptext117 9042  
                             __ptext109 93F6                               __ptext150 9338  
                             __ptext142 8DB4                               __ptext134 8B00  
                             __ptext126 925C                               __ptext118 906A  
                             __ptext151 915C                               __ptext143 8202  
                             __ptext135 91F2                               __ptext127 952E  
                             __ptext119 866A                               __ptext160 94D0  
                             __ptext152 8E0C                               __ptext144 9534  
                             __ptext136 9530                               __ptext128 6D7C  
                             __ptext161 94DC                               __ptext153 9184  
                             __ptext145 9536                               __ptext137 4BDA  
                             __ptext129 86C4                               __ptext162 0000  
                             __ptext154 9356                               __ptext146 8354  
                             __ptext138 949C                               __ptext155 93AC  
                             __ptext147 910C                               __ptext139 927E  
                             __ptext156 9216                               __ptext148 8DE0  
                             __ptext157 87C2                               __ptext149 9134  
                             __ptext158 94AC                               __ptext159 94C4  
                             _hid_input 7FE2                      __end_of_StartTimer 8A80  
                     __size_of_wdtdelay 005A                       __size_of_vfprintf 00AC  
                              _ADCC_ISR 8DB4                  __CFG_BBSIZE$BBSIZE_512 000000  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
               __size_of_get_raw_result 001E                               _init_bsoc 945E  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 64D6                             _hid_display 740E  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize 83BE                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0045  
                              _INT0_ISR 949C                                _INT1_ISR 8B40  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 01B5  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0443                               _ring_buf2 0400  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack 91F2  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              i2u900_48 838A                                i2u900_49 839E  
                              i2u902_48 9120                                _PIR8bits 0039A8  
                              i2u904_48 9148                                _PIR9bits 0039A9  
                              i2u906_48 9170                                i2u908_48 9196  
              __size_of_TMR5_Initialize 0046                                i2u898_48 8DCC  
                             _set_vterm 92FC                     __size_of_update_lcd 0110  
                           _help_button 8B7E                                _TMR3_ISR 77CC  
            __end_of_UART1_Transmit_ISR 8E0C                                _TMR5_ISR 86C4  
                              _TMR6_ISR 93AC                               _port_data 01A5  
                   __size_of_static_soc 0034                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0022  
                         _TMR5_CallBack 91CE                              _ADCON0bits 003EF8  
                    __end_of_check_help 610A                               _start_lcd 951A  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 0052  
                         _TMR6_CallBack 9216                   __size_of_send_lcd_cmd 0028  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc 9520  
                      _set_display_info 931A                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 7524                               copy_data1 7546  
                             copy_data2 7568                _INT0_SetInterruptHandler 906A  
                   __size_of_vterm_dump 012E                  _uart1TxBufferRemaining 0022  
   __end_of_UART2_SetTxInterruptHandler 8F52             _UART2_SetTxInterruptHandler 8F2A  
                          _uart1RxCount 001F                            _uart2RxCount 0019  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 04AC  
                         _wait_lcd_done 9374                            _send_lcd_cmd 8E8A  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
                      __size_of___aomod 0240                         _adc_int_handler 9536  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                      __end_of_get_switch 8F02  
                 __end_of_DMA1_DMAA_ISR 94DA                      ___fpclassifyf@F463 0099  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0300  
                              ___xxtofl 610A                       ?_DMA1_DMADCNT_ISR 0045  
           __size_of_check_enter_button 0040                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand 948E                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 004B                                __ptext10 92C0  
                              __ptext11 8EB2                                __ptext20 92DE  
                              __ptext12 945E                                __ptext21 610A  
                              __ptext13 740E                                __ptext30 8C22  
                              __ptext22 91AA                                __ptext14 7FE2  
                              __ptext31 871E                                __ptext23 950E  
                              __ptext15 8EDA                                __ptext40 7B88  
                              __ptext32 9374                                __ptext24 5EF8  
                              __ptext16 9480                                __ptext41 1244  
                              __ptext33 8610                                __ptext25 6C4E  
                              __ptext17 7A1A                                __ptext50 8D24  
                              __ptext42 44B4                                __ptext34 7CDE  
                              __ptext26 7304                                __ptext18 3B88  
                              __ptext51 76F6                                __ptext43 80FA  
                              __ptext35 9514                                __ptext27 8D84  
                              __ptext19 84EE                                __ptext60 6B00  
                              __ptext52 486E                                __ptext44 8CF4  
                              __ptext36 951A                                __ptext28 8BEC  
                              __ptext61 4034                                __ptext53 6696  
                              __ptext45 89BA                                __ptext37 7EBE  
                              __ptext29 71F4                                __ptext70 9390  
                              __ptext62 88A2                                __ptext54 682C  
                              __ptext46 630E                                __ptext38 4F40  
                              __ptext71 7C34                                __ptext63 5CB8  
                              __ptext55 885A                                __ptext47 5506  
                              __ptext39 8550                                __ptext80 89FE  
                              __ptext72 5A44                                __ptext64 57C4  
                              __ptext56 699E                                __ptext48 0000  
                              __ptext81 8B7E                                __ptext73 8770  
                              __ptext65 8072                                __ptext57 789A  
                              __ptext49 817E                                __ptext90 923A  
                              __ptext82 8F02                                __ptext74 8D54  
                              __ptext66 70E0                                __ptext58 360E  
                              __ptext91 64D6                                __ptext83 8A40  
                              __ptext75 92FC                                __ptext67 7D84  
                              __ptext59 6FC8                                __ptext92 88E8  
                              __ptext84 94EE                                __ptext76 9470  
                              __ptext68 7E26                                __ptext93 2E52  
                              __ptext85 94F6                                __ptext77 931A  
                              __ptext69 6EA4                                __ptext94 2628  
                              __ptext86 8A80                                __ptext78 93C6  
                              __ptext95 8810                                __ptext87 94FE  
                              __ptext79 948E                                __ptext96 85B2  
                              __ptext88 522C                                __ptext97 8F2A  
                              __ptext89 9520                                __ptext98 8F52  
                              __ptext99 848A                        __size_of_isupper 0030  
                              us1004999 5518                                us1017999 4534  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                      __size_of_strncmp 01C8                        __size_of_toupper 0084  
                      _ringBufS_put_dma 7C34                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 08A6  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0045                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 00B5  
                             stoa@F1166 00EB                      ??_DMA1_DMASCNT_ISR 004B  
          __end_of_ADCC_StartConversion 945E                                _spi_link 0089  
                              _wdtdelay 8610              __end_of_UART2_Transmit_ISR 8E38  
                              _vfprintf 7B88                __end_of_convert_adc_data 7AD2  
            __end_of_PWM8_LoadDutyValue 8A40    __end_of_TMR3_DefaultInterruptHandler 9532  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler 9530  
  __end_of_INT1_DefaultInterruptHandler 9530   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler 952E                           ??_Default_ISR 0045  
                           _uart1RxHead 0021                  __size_of_get_vterm_ptr 002E  
                           _uart1TxHead 0024                             _uart2RxHead 001B  
                           _uart1RxTail 0020                          _get_raw_result 92DE  
                           _uart2TxHead 001E                             _uart1TxTail 0023  
                           _uart2RxTail 001A                             _uart2TxTail 001D  
                          _wait_lcd_set 9514                      _EXT_INT_Initialize 8CC0  
  __end_of_TMR6_DefaultInterruptHandler 8810   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler 87C2    __end_of_ADCC_DefaultInterruptHandler 9536  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler 9534  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long 8E62          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help 9480                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString 7D84                   __end_of_mode_lamp_dim 93DE  
               __end_of_adc_int_handler 9538                  __size_of_INT0_CallBack 0022  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0022                      __end_of_update_lcd 7304  
                _uart2TxBufferRemaining 001C                      __end_of_static_soc 8C8C  
                    __end_of_start_bsoc 925C                          _FVR_Initialize 9506  
                __end_of_get_raw_result 92FC                        _send_lcd_cmd_dma 871E  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 0014  
      __end_of_INT1_SetInterruptHandler 906A               __size_of_UART1_Initialize 0064  
                      ??_DMA1_DMAOR_ISR 004B                _UART1_TxInterruptHandler 00B8  
             __end_of_send_lcd_cmd_long 8E8A                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR 952E          __end_of_PIN_MANAGER_Initialize 7FE2  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 6D7C  
               _eaDogM_WriteStringAtPos 8C22                           _get_vterm_ptr 8D84  
                        _check_adc_scan 94FE               __size_of_UART2_Initialize 005E  
