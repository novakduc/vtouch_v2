

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Dec 21 03:28:27 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=4,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=4,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=4,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=4,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=4,class=CODE,delta=1
   180                           	psect	text156,global,reloc=4,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=4,class=CODE,delta=1
   185                           	psect	text161,global,reloc=4,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=4,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=4,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=4,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=4,class=CODE,delta=1
   195                           	psect	text171,global,reloc=4,class=CODE,delta=1
   196                           	psect	text172,global,reloc=4,class=CODE,delta=1
   197                           	psect	text173,global,reloc=4,class=CODE,delta=1
   198                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   199                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   200                           	psect	text174,global,reloc=4,class=CODE,delta=1
   201                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   202                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   203  0000                     
   204                           ; Version 2.10
   205                           ; Generated 31/07/2019 GMT
   206                           ; 
   207                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   208                           ; All rights reserved.
   209                           ; 
   210                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   211                           ; 
   212                           ; Redistribution and use in source and binary forms, with or without modification, are
   213                           ; permitted provided that the following conditions are met:
   214                           ; 
   215                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   216                           ;        conditions and the following disclaimer.
   217                           ; 
   218                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   219                           ;        of conditions and the following disclaimer in the documentation and/or other
   220                           ;        materials provided with the distribution.
   221                           ; 
   222                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   223                           ;        software without specific prior written permission.
   224                           ; 
   225                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   226                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   227                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   228                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   229                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   230                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   231                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   232                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   233                           ; 
   234                           ; 
   235                           ; Code-generator required, PIC18F57K42 Definitions
   236                           ; 
   237                           ; SFR Addresses
   238  0000                     
   239 ;;_esr_temp	offset	0
   240 ;;_i_esr	offset	4
   241 ;;_shape	offset	6
   242 ;;_k	offset	7
   243 ;;_j	offset	8
   244 ;;_i	offset	9
   245 ;;_inp_index	offset	10
   246 ;;_mode	offset	11
   247 ;;_i_ror	offset	12
   248 ;;_s	offset=-2 (param)
   249 ;;_c	offset	0
   250 ;;_shape	offset=-1 (param)
   251 ;;_reset	offset=-2 (param)
   252 ;;_cmd	offset=-1 (param)
   253 ;;_cmd	offset=-1 (param)
   254 ;;_data	offset=-1 (param)
   255 ;;__this	offset=-2 (param)
   256 ;;_cvoltage	offset=-4 (param)
   257 ;;_h	offset=-1 (param)
   258 ;;_h	offset=-1 (param)
   259 ;;_i	offset=-1 (param)
   260 ;;_fsm	offset=-1 (param)
   261 ;;_channel	offset=-1 (param)
   262 ;;_mode	offset=-1 (param)
   263 ;;_mode	offset=-1 (param)
   264 ;;_cmd	offset=-1 (param)
   265 ;;_i	offset	0
   266 ;;_h	offset=-1 (param)
   267 ;;_flipper	offset=-1 (param)
   268 ;;_f	offset	0
   269 ;;_ap	offset	6
   270 ;;_s	offset=-3 (param)
   271 ;;_fmt	offset=-5 (param)
   272 ;;_line	offset=-1 (param)
   273 ;;_vterm	offset=-2 (param)
   274 ;;_numMilliseconds	offset=-2 (param)
   275 ;;_vterm	offset=-1 (param)
   276 ;;_r	offset=-1 (param)
   277 ;;_c	offset=-2 (param)
   278 ;;_strPtr	offset=-4 (param)
   279 ;;_strPtr	offset=-1 (param)
   280 ;;_delay	offset=-4 (param)
   281 ;;_strPtr	offset=-2 (param)
   282 ;;__this	offset=-2 (param)
   283 ;;_clearBuffer	offset=-3 (param)
   284 ;;_s	offset	0
   285 ;;_k	offset	2
   286 ;;_dest	offset=-2 (param)
   287 ;;_c	offset=-4 (param)
   288 ;;_n	offset=-6 (param)
   289 ;;_ap	offset	0
   290 ;;_fmt	offset=-3 (param)
   291 ;;_cfmt	offset	0
   292 ;;_fp	offset=-2 (param)
   293 ;;_fmt	offset=-4 (param)
   294 ;;_ap	offset=-6 (param)
   295 ;;_vfpfcnvrt$5461	offset	0
   296 ;;_vfpfcnvrt$5472	offset	2
   297 ;;_vfpfcnvrt$5460	offset	4
   298 ;;_llu	offset	6
   299 ;;_ll	offset	14
   300 ;;_f	offset	22
   301 ;;_ct	offset	26
   302 ;;_cp	offset	29
   303 ;;_c	offset	31
   304 ;;_fp	offset=-2 (param)
   305 ;;_fmt	offset=-4 (param)
   306 ;;_ap	offset=-6 (param)
   307 ;;_xtoa$5446	offset	0
   308 ;;_xtoa$5445	offset	2
   309 ;;_n	offset	4
   310 ;;_c	offset	12
   311 ;;_i	offset	14
   312 ;;_w	offset	16
   313 ;;_p	offset	18
   314 ;;_fp	offset=-2 (param)
   315 ;;_d	offset=-10 (param)
   316 ;;_x	offset=-11 (param)
   317 ;;_toupper$6252	offset	0
   318 ;;_c	offset=-2 (param)
   319 ;;_c	offset=-2 (param)
   320 ;;_c	offset=-2 (param)
   321 ;;_n	offset	0
   322 ;;_i	offset	8
   323 ;;_w	offset	10
   324 ;;_p	offset	12
   325 ;;_fp	offset=-2 (param)
   326 ;;_d	offset=-10 (param)
   327 ;;_counter	offset	0
   328 ;;_dividend	offset=-8 (param)
   329 ;;_divisor	offset=-16 (param)
   330 ;;_quotient	offset	0
   331 ;;_counter	offset	8
   332 ;;_dividend	offset=-8 (param)
   333 ;;_divisor	offset=-16 (param)
   334 ;;_r	offset	0
   335 ;;_l	offset	2
   336 ;;__l	offset=-2 (param)
   337 ;;__r	offset=-4 (param)
   338 ;;_n	offset=-6 (param)
   339 ;;_nuls	offset	0
   340 ;;_l	offset	7
   341 ;;_p	offset	9
   342 ;;_cp	offset	11
   343 ;;_w	offset	13
   344 ;;_i	offset	15
   345 ;;_fp	offset=-2 (param)
   346 ;;_s	offset=-4 (param)
   347 ;;_efgtoa$5418	offset	0
   348 ;;_efgtoa$5417	offset	2
   349 ;;_efgtoa$5416	offset	4
   350 ;;_efgtoa$5412	offset	6
   351 ;;_efgtoa$5408	offset	8
   352 ;;_efgtoa$5407	offset	10
   353 ;;_u	offset	12
   354 ;;_g	offset	16
   355 ;;_l	offset	20
   356 ;;_h	offset	24
   357 ;;_ou	offset	28
   358 ;;_n	offset	32
   359 ;;_e	offset	34
   360 ;;_i	offset	36
   361 ;;_w	offset	38
   362 ;;_p	offset	40
   363 ;;_sign	offset	42
   364 ;;_d	offset	44
   365 ;;_ne	offset	46
   366 ;;_m	offset	48
   367 ;;_pp	offset	50
   368 ;;_t	offset	52
   369 ;;_mode	offset	54
   370 ;;_nmode	offset	55
   371 ;;_fp	offset=-2 (param)
   372 ;;_f	offset=-6 (param)
   373 ;;_c	offset=-7 (param)
   374 ;;_tolower$6237	offset	0
   375 ;;_c	offset=-2 (param)
   376 ;;_c	offset=-2 (param)
   377 ;;_d	offset	0
   378 ;;_s	offset	2
   379 ;;_dest	offset=-2 (param)
   380 ;;_src	offset=-4 (param)
   381 ;;_u	offset	0
   382 ;;_m	offset	4
   383 ;;_e	offset	8
   384 ;;_x	offset=-4 (param)
   385 ;;_u	offset	0
   386 ;;_e	offset	4
   387 ;;_x	offset=-4 (param)
   388 ;;_exp1	offset	0
   389 ;;_sign1	offset	1
   390 ;;_f1	offset=-4 (param)
   391 ;;_f1	offset=-4 (param)
   392 ;;_ff1	offset=-4 (param)
   393 ;;_ff2	offset=-8 (param)
   394 ;;_sign	offset	0
   395 ;;_counter	offset	1
   396 ;;_dividend	offset=-2 (param)
   397 ;;_divisor	offset=-4 (param)
   398 ;;_quotient	offset	0
   399 ;;_sign	offset	2
   400 ;;_counter	offset	3
   401 ;;_dividend	offset=-2 (param)
   402 ;;_divisor	offset=-4 (param)
   403 ;;_dtoa$5384	offset	0
   404 ;;_n	offset	2
   405 ;;_i	offset	10
   406 ;;_s	offset	12
   407 ;;_w	offset	14
   408 ;;_p	offset	16
   409 ;;_fp	offset=-2 (param)
   410 ;;_d	offset=-10 (param)
   411 ;;_a	offset=-2 (param)
   412 ;;_sign	offset	0
   413 ;;_counter	offset	1
   414 ;;_dividend	offset=-8 (param)
   415 ;;_divisor	offset=-16 (param)
   416 ;;_quotient	offset	0
   417 ;;_sign	offset	8
   418 ;;_counter	offset	9
   419 ;;_dividend	offset=-8 (param)
   420 ;;_divisor	offset=-16 (param)
   421 ;;_w	offset	0
   422 ;;_fp	offset=-2 (param)
   423 ;;_c	offset=-3 (param)
   424 ;;_w	offset	0
   425 ;;_i	offset	2
   426 ;;_fp	offset=-2 (param)
   427 ;;_buf	offset=-4 (param)
   428 ;;_p	offset=-6 (param)
   429 ;;_a	offset	0
   430 ;;_s	offset=-2 (param)
   431 ;;_i	offset	0
   432 ;;_c	offset	2
   433 ;;_s	offset=-2 (param)
   434 ;;_fp	offset=-4 (param)
   435 ;;_c	offset=-2 (param)
   436 ;;_fp	offset=-4 (param)
   437 ;;_c	offset=-1 (param)
   438 ;;__this	offset=-2 (param)
   439 ;;_c	offset=-3 (param)
   440 ;;_atoi$5968	offset	0
   441 ;;_atoi$5966	offset	2
   442 ;;_atoi$5967	offset	4
   443 ;;_n	offset	5
   444 ;;_neg	offset	7
   445 ;;_s	offset=-2 (param)
   446 ;;_isspace$6017	offset	0
   447 ;;_c	offset=-2 (param)
   448 ;;_c	offset=-2 (param)
   449 ;;_vterm	offset=-1 (param)
   450 ;;_new_response_info	offset=-1 (param)
   451 ;;_new_response_info	offset=-1 (param)
   452 ;;_level	offset=-2 (param)
   453 ;;_dutyValue	offset=-2 (param)
   454 ;;_timer	offset=-1 (param)
   455 ;;_timer	offset=-1 (param)
   456 ;;_count	offset=-3 (param)
   457 ;;_h	offset=-1 (param)
   458 ;;_u	offset	0
   459 ;;_x	offset=-4 (param)
   460 ;;_chan	offset=-1 (param)
   461 ;;_to_what	offset=-2 (param)
   462 ;;_u	offset	0
   463 ;;_s	offset=-2 (param)
   464 ;;_index	offset=-1 (param)
   465 ;;_arg	offset	0
   466 ;;_exp	offset	4
   467 ;;_sign	offset=-1 (param)
   468 ;;_val	offset=-5 (param)
   469 ;;_grs	offset	0
   470 ;;_rem	offset	4
   471 ;;_new_exp	offset	8
   472 ;;_aexp	offset	10
   473 ;;_bexp	offset	11
   474 ;;_sign	offset	12
   475 ;;_b	offset=-4 (param)
   476 ;;_a	offset=-8 (param)
   477 ;;_ff1	offset=-4 (param)
   478 ;;_ff2	offset=-8 (param)
   479 ;;_lp_speed	offset	0
   480 ;;_new	offset=-4 (param)
   481 ;;_bn	offset=-5 (param)
   482 ;;_slow	offset=-6 (param)
   483 ;;_b	offset=-4 (param)
   484 ;;_a	offset=-8 (param)
   485 ;;_grs	offset	0
   486 ;;_bexp	offset	1
   487 ;;_aexp	offset	2
   488 ;;_signs	offset	3
   489 ;;_b	offset=-4 (param)
   490 ;;_a	offset=-8 (param)
   491 ;;_prod	offset	0
   492 ;;_grs	offset	4
   493 ;;_temp	offset	8
   494 ;;_bexp	offset	10
   495 ;;_aexp	offset	11
   496 ;;_sign	offset	12
   497 ;;_b	offset=-4 (param)
   498 ;;_a	offset=-8 (param)
   499 ;;_InterruptHandler	offset=-3 (param)
   500 ;;_InterruptHandler	offset=-3 (param)
   501 ;;_InterruptHandler	offset=-3 (param)
   502 ;;_InterruptHandler	offset=-3 (param)
   503 ;;_InterruptHandler	offset=-3 (param)
   504 ;;_InterruptHandler	offset=-3 (param)
   505 ;;_state	offset	0
   506 ;;_InterruptHandler	offset=-3 (param)
   507 ;;_InterruptHandler	offset=-3 (param)
   508 ;;_InterruptHandler	offset=-3 (param)
   509 ;;_InterruptHandler	offset=-3 (param)
   510 ;;_i	offset	0
   511 ;;_sw_value	offset	1
   512 ;;_timerVal	offset=-2 (param)
   513 ;;_chan	offset=-1 (param)
   514 ;;_to_what	offset=-2 (param)
   515 ;;_u	offset	0
   516 ;;_s	offset=-2 (param)
   517 ;;_index	offset=-1 (param)
   518 ;;_arg	offset	0
   519 ;;_exp	offset	4
   520 ;;_sign	offset=-1 (param)
   521 ;;_val	offset=-5 (param)
   522 ;;_b	offset=-4 (param)
   523 ;;_a	offset=-8 (param)
   524 ;;_grs	offset	0
   525 ;;_bexp	offset	1
   526 ;;_aexp	offset	2
   527 ;;_signs	offset	3
   528 ;;_b	offset=-4 (param)
   529 ;;_a	offset=-8 (param)
   530 ;;_prod	offset	0
   531 ;;_grs	offset	4
   532 ;;_temp	offset	8
   533 ;;_bexp	offset	10
   534 ;;_aexp	offset	11
   535 ;;_sign	offset	12
   536 ;;_b	offset=-4 (param)
   537 ;;_a	offset=-8 (param)
   538 ;;_grs	offset	0
   539 ;;_rem	offset	4
   540 ;;_new_exp	offset	8
   541 ;;_aexp	offset	10
   542 ;;_bexp	offset	11
   543 ;;_sign	offset	12
   544 ;;_b	offset=-4 (param)
   545 ;;_a	offset=-8 (param)
   546 ;;_ff1	offset=-4 (param)
   547 ;;_ff2	offset=-8 (param)
   548 ;;_timerVal	offset=-2 (param)
   549 ;;_log_ptr	offset	0
   550 ;;_f	offset	0
   551 ;;_ap	offset	6
   552 ;;_s	offset=-3 (param)
   553 ;;_fmt	offset=-5 (param)
   554 ;;_cfmt	offset	0
   555 ;;_fp	offset=-2 (param)
   556 ;;_fmt	offset=-4 (param)
   557 ;;_ap	offset=-6 (param)
   558 ;;_vfpfcnvrt$5461	offset	0
   559 ;;_vfpfcnvrt$5472	offset	2
   560 ;;_vfpfcnvrt$5460	offset	4
   561 ;;_llu	offset	6
   562 ;;_ll	offset	14
   563 ;;_f	offset	22
   564 ;;_ct	offset	26
   565 ;;_cp	offset	29
   566 ;;_c	offset	31
   567 ;;_fp	offset=-2 (param)
   568 ;;_fmt	offset=-4 (param)
   569 ;;_ap	offset=-6 (param)
   570 ;;_xtoa$5446	offset	0
   571 ;;_xtoa$5445	offset	2
   572 ;;_n	offset	4
   573 ;;_c	offset	12
   574 ;;_i	offset	14
   575 ;;_w	offset	16
   576 ;;_p	offset	18
   577 ;;_fp	offset=-2 (param)
   578 ;;_d	offset=-10 (param)
   579 ;;_x	offset=-11 (param)
   580 ;;_toupper$6252	offset	0
   581 ;;_c	offset=-2 (param)
   582 ;;_c	offset=-2 (param)
   583 ;;_c	offset=-2 (param)
   584 ;;_n	offset	0
   585 ;;_i	offset	8
   586 ;;_w	offset	10
   587 ;;_p	offset	12
   588 ;;_fp	offset=-2 (param)
   589 ;;_d	offset=-10 (param)
   590 ;;_counter	offset	0
   591 ;;_dividend	offset=-8 (param)
   592 ;;_divisor	offset=-16 (param)
   593 ;;_quotient	offset	0
   594 ;;_counter	offset	8
   595 ;;_dividend	offset=-8 (param)
   596 ;;_divisor	offset=-16 (param)
   597 ;;_r	offset	0
   598 ;;_l	offset	2
   599 ;;__l	offset=-2 (param)
   600 ;;__r	offset=-4 (param)
   601 ;;_n	offset=-6 (param)
   602 ;;_nuls	offset	0
   603 ;;_l	offset	7
   604 ;;_p	offset	9
   605 ;;_cp	offset	11
   606 ;;_w	offset	13
   607 ;;_i	offset	15
   608 ;;_fp	offset=-2 (param)
   609 ;;_s	offset=-4 (param)
   610 ;;_efgtoa$5418	offset	0
   611 ;;_efgtoa$5417	offset	2
   612 ;;_efgtoa$5416	offset	4
   613 ;;_efgtoa$5412	offset	6
   614 ;;_efgtoa$5408	offset	8
   615 ;;_efgtoa$5407	offset	10
   616 ;;_u	offset	12
   617 ;;_g	offset	16
   618 ;;_l	offset	20
   619 ;;_h	offset	24
   620 ;;_ou	offset	28
   621 ;;_n	offset	32
   622 ;;_e	offset	34
   623 ;;_i	offset	36
   624 ;;_w	offset	38
   625 ;;_p	offset	40
   626 ;;_sign	offset	42
   627 ;;_d	offset	44
   628 ;;_ne	offset	46
   629 ;;_m	offset	48
   630 ;;_pp	offset	50
   631 ;;_t	offset	52
   632 ;;_mode	offset	54
   633 ;;_nmode	offset	55
   634 ;;_fp	offset=-2 (param)
   635 ;;_f	offset=-6 (param)
   636 ;;_c	offset=-7 (param)
   637 ;;_tolower$6237	offset	0
   638 ;;_c	offset=-2 (param)
   639 ;;_c	offset=-2 (param)
   640 ;;_d	offset	0
   641 ;;_s	offset	2
   642 ;;_dest	offset=-2 (param)
   643 ;;_src	offset=-4 (param)
   644 ;;_u	offset	0
   645 ;;_m	offset	4
   646 ;;_e	offset	8
   647 ;;_x	offset=-4 (param)
   648 ;;_u	offset	0
   649 ;;_e	offset	4
   650 ;;_x	offset=-4 (param)
   651 ;;_exp1	offset	0
   652 ;;_sign1	offset	1
   653 ;;_f1	offset=-4 (param)
   654 ;;_f1	offset=-4 (param)
   655 ;;_ff1	offset=-4 (param)
   656 ;;_ff2	offset=-8 (param)
   657 ;;_sign	offset	0
   658 ;;_counter	offset	1
   659 ;;_dividend	offset=-2 (param)
   660 ;;_divisor	offset=-4 (param)
   661 ;;_quotient	offset	0
   662 ;;_sign	offset	2
   663 ;;_counter	offset	3
   664 ;;_dividend	offset=-2 (param)
   665 ;;_divisor	offset=-4 (param)
   666 ;;_dtoa$5384	offset	0
   667 ;;_n	offset	2
   668 ;;_i	offset	10
   669 ;;_s	offset	12
   670 ;;_w	offset	14
   671 ;;_p	offset	16
   672 ;;_fp	offset=-2 (param)
   673 ;;_d	offset=-10 (param)
   674 ;;_a	offset=-2 (param)
   675 ;;_sign	offset	0
   676 ;;_counter	offset	1
   677 ;;_dividend	offset=-8 (param)
   678 ;;_divisor	offset=-16 (param)
   679 ;;_quotient	offset	0
   680 ;;_sign	offset	8
   681 ;;_counter	offset	9
   682 ;;_dividend	offset=-8 (param)
   683 ;;_divisor	offset=-16 (param)
   684 ;;_w	offset	0
   685 ;;_fp	offset=-2 (param)
   686 ;;_c	offset=-3 (param)
   687 ;;_w	offset	0
   688 ;;_i	offset	2
   689 ;;_fp	offset=-2 (param)
   690 ;;_buf	offset=-4 (param)
   691 ;;_p	offset=-6 (param)
   692 ;;_a	offset	0
   693 ;;_s	offset=-2 (param)
   694 ;;_i	offset	0
   695 ;;_c	offset	2
   696 ;;_s	offset=-2 (param)
   697 ;;_fp	offset=-4 (param)
   698 ;;_c	offset=-2 (param)
   699 ;;_fp	offset=-4 (param)
   700 ;;_c	offset=-1 (param)
   701 ;;__this	offset=-2 (param)
   702 ;;_c	offset=-3 (param)
   703 ;;_atoi$5968	offset	0
   704 ;;_atoi$5966	offset	2
   705 ;;_atoi$5967	offset	4
   706 ;;_n	offset	5
   707 ;;_neg	offset	7
   708 ;;_s	offset=-2 (param)
   709 ;;_isspace$6017	offset	0
   710 ;;_c	offset=-2 (param)
   711 ;;_c	offset=-2 (param)
   712 ;;_dsize	offset=-2 (param)
   713 ;;_u	offset	0
   714 ;;_x	offset=-4 (param)
   715 ;;_timer	offset=-1 (param)
   716 ;;_count	offset=-3 (param)
   717 ;;_channel	offset=-1 (param)
   718 ;;_i	offset	0
   719                           
   720                           	psect	idataBIGRAM
   721  017BC8                     __pidataBIGRAM:
   722                           	opt callstack 0
   723                           
   724                           ;initializer for _port_data
   725  017BC8  FF                 	db	255
   726  017BC9  00                 	db	0
   727  017BCA  FF                 	db	255
   728  017BCB  00                 	db	0
   729  017BCC  FF                 	db	255
   730  017BCD  00                 	db	0
   731  017BCE  FF                 	db	255
   732  017BCF  00                 	db	0
   733  017BD0  FF                 	db	255
   734  017BD1  00                 	db	0
   735  017BD2  FF                 	db	255
   736  017BD3  00                 	db	0
   737  017BD4  FF                 	db	255
   738  017BD5  00                 	db	0
   739  017BD6  FF                 	db	255
   740  017BD7  00                 	db	0
   741  017BD8  00                 	db	0
   742  017BD9  00                 	db	0
   743  017BDA  00                 	db	0
   744  017BDB  00                 	db	0
   745  017BDC  00                 	db	0
   746  017BDD  00                 	db	0
   747  017BDE  00                 	db	0
   748  017BDF  00                 	db	0
   749  017BE0  00                 	db	0
   750  017BE1  00                 	db	0
   751  017BE2  00                 	db	0
   752  017BE3  00                 	db	0
   753  017BE4  00                 	db	0
   754  017BE5  00                 	db	0
   755  017BE6  00                 	db	0
   756  017BE7  00                 	db	0
   757  017BE8  00                 	db	0
   758  017BE9  00                 	db	0
   759  017BEA  00                 	db	0
   760  017BEB  00                 	db	0
   761  017BEC  00                 	db	0
   762  017BED  00                 	db	0
   763  017BEE  00                 	db	0
   764  017BEF  00                 	db	0
   765  017BF0  00                 	db	0
   766  017BF1  00                 	db	0
   767  017BF2  00                 	db	0
   768  017BF3  00                 	db	0
   769  017BF4  00                 	db	0
   770  017BF5  00                 	db	0
   771  017BF6  00                 	db	0
   772  017BF7  00                 	db	0
   773  017BF8  00                 	db	0
   774  017BF9  00                 	db	0
   775  017BFA  00                 	db	0
   776  017BFB  00                 	db	0
   777  017BFC  00                 	db	0
   778  017BFD  00                 	db	0
   779  017BFE  00                 	db	0
   780  017BFF  00                 	db	0
   781  017C00  00                 	db	0
   782  017C01  00                 	db	0
   783  017C02  00                 	db	0
   784  017C03  00                 	db	0
   785  017C04  00                 	db	0
   786  017C05  00                 	db	0
   787  017C06  00                 	db	0
   788  017C07  00                 	db	0
   789  017C08  00                 	db	0
   790  017C09  00                 	db	0
   791  017C0A  00                 	db	0
   792  017C0B  00                 	db	0
   793  017C0C  00                 	db	0
   794  017C0D  00                 	db	0
   795  017C0E  00                 	db	0
   796  017C0F  00                 	db	0
   797  017C10  00                 	db	0
   798  017C11  00                 	db	0
   799  017C12  00                 	db	0
   800  017C13  00                 	db	0
   801  017C14  00                 	db	0
   802  017C15  00                 	db	0
   803  017C16  00                 	db	0
   804  017C17  00                 	db	0
   805  017C18  00                 	db	0
   806  017C19  00                 	db	0
   807  017C1A  00                 	db	0
   808  017C1B  00                 	db	0
   809  017C1C  00                 	db	0
   810  017C1D  00                 	db	0
   811  017C1E  00                 	db	0
   812  017C1F  00                 	db	0
   813  017C20  00                 	db	0
   814  017C21  00                 	db	0
   815  017C22  00                 	db	0
   816  017C23  00                 	db	0
   817  017C24  00                 	db	0
   818  017C25  00                 	db	0
   819  017C26  00                 	db	0
   820  017C27  00                 	db	0
   821  017C28  00                 	db	0
   822  017C29  00                 	db	0
   823  017C2A  00                 	db	0
   824  017C2B  00                 	db	0
   825  017C2C  00                 	db	0
   826  017C2D  00                 	db	0
   827  017C2E  00                 	db	0
   828  017C2F  00                 	db	0
   829  017C30  00                 	db	0
   830  017C31  00                 	db	0
   831  017C32  00                 	db	0
   832  017C33  00                 	db	0
   833  017C34  00                 	db	0
   834  017C35  00                 	db	0
   835  017C36  00                 	db	0
   836  017C37  00                 	db	0
   837  017C38  00                 	db	0
   838  017C39  00                 	db	0
   839  017C3A  00                 	db	0
   840  017C3B  00                 	db	0
   841  017C3C  00                 	db	0
   842  017C3D  00                 	db	0
   843  017C3E  00                 	db	0
   844  017C3F  00                 	db	0
   845  017C40  00                 	db	0
   846  017C41  00                 	db	0
   847  017C42  00                 	db	0
   848  017C43  00                 	db	0
   849  017C44  00                 	db	0
   850  017C45  00                 	db	0
   851  017C46  00                 	db	0
   852  017C47  00                 	db	0
   853  017C48  00                 	db	0
   854  017C49  00                 	db	0
   855  017C4A  00                 	db	0
   856  017C4B  00                 	db	0
   857  017C4C  00                 	db	0
   858  017C4D  00                 	db	0
   859  017C4E  00                 	db	0
   860  017C4F  00                 	db	0
   861  017C50  00                 	db	0
   862  017C51  00                 	db	0
   863  017C52  00                 	db	0
   864  017C53  00                 	db	0
   865  017C54  00                 	db	0
   866  017C55  00                 	db	0
   867  017C56  00                 	db	0
   868  017C57  00                 	db	0
   869  017C58  00                 	db	0
   870  017C59  00                 	db	0
   871  017C5A  00                 	db	0
   872  017C5B  00                 	db	0
   873  017C5C  00                 	db	0
   874  017C5D  00                 	db	0
   875  017C5E  00                 	db	0
   876  017C5F  00                 	db	0
   877  017C60  00                 	db	0
   878  017C61  00                 	db	0
   879  017C62  00                 	db	0
   880  017C63  00                 	db	0
   881  017C64  00                 	db	0
   882  017C65  00                 	db	0
   883  017C66  00                 	db	0
   884  017C67  00                 	db	0
   885  017C68  00                 	db	0
   886  017C69  00                 	db	0
   887  017C6A  00                 	db	0
   888  017C6B  00                 	db	0
   889  017C6C  00                 	db	0
   890  017C6D  00                 	db	0
   891  017C6E  00                 	db	0
   892  017C6F  00                 	db	0
   893  017C70  00                 	db	0
   894  017C71  00                 	db	0
   895  017C72  00                 	db	0
   896  017C73  00                 	db	0
   897  017C74  00                 	db	0
   898  017C75  00                 	db	0
   899  017C76  00                 	db	0
   900  017C77  00                 	db	0
   901  017C78  00                 	db	0
   902  017C79  00                 	db	0
   903  017C7A  00                 	db	0
   904  017C7B  00                 	db	0
   905  017C7C  00                 	db	0
   906  017C7D  00                 	db	0
   907  017C7E  00                 	db	0
   908  017C7F  00                 	db	0
   909  017C80  00                 	db	0
   910  017C81  00                 	db	0
   911  017C82  00                 	db	0
   912  017C83  00                 	db	0
   913  017C84  00                 	db	0
   914  017C85  00                 	db	0
   915  017C86  00                 	db	0
   916  017C87  00                 	db	0
   917  017C88  00                 	db	0
   918  017C89  00                 	db	0
   919  017C8A  00                 	db	0
   920  017C8B  00                 	db	0
   921  017C8C  00                 	db	0
   922  017C8D  00                 	db	0
   923  017C8E  00                 	db	0
   924  017C8F  00                 	db	0
   925  017C90  00                 	db	0
   926  017C91  00                 	db	0
   927  017C92  00                 	db	0
   928  017C93  00                 	db	0
   929  017C94  00                 	db	0
   930  017C95  00                 	db	0
   931  017C96  00                 	db	0
   932  017C97  00                 	db	0
   933  017C98  00                 	db	0
   934  017C99  00                 	db	0
   935  017C9A  00                 	db	0
   936  017C9B  00                 	db	0
   937  017C9C  00                 	db	0
   938  017C9D  00                 	db	0
   939  017C9E  00                 	db	0
   940  017C9F  00                 	db	0
   941  017CA0  00                 	db	0
   942  017CA1  00                 	db	0
   943  017CA2  00                 	db	0
   944  017CA3  00                 	db	0
   945  017CA4  00                 	db	0
   946  017CA5  00                 	db	0
   947  017CA6  00                 	db	0
   948  017CA7  00                 	db	0
   949  017CA8  00                 	db	0
   950  017CA9  00                 	db	0
   951  017CAA  00                 	db	0
   952  017CAB  00                 	db	0
   953  017CAC  00                 	db	0
   954  017CAD  00                 	db	0
   955  017CAE  00                 	db	0
   956  017CAF  00                 	db	0
   957  017CB0  00                 	db	0
   958  017CB1  00                 	db	0
   959  017CB2  00                 	db	0
   960  017CB3  00                 	db	0
   961  017CB4  00                 	db	0
   962  017CB5  00                 	db	0
   963  017CB6  00                 	db	0
   964  017CB7  00                 	db	0
   965  017CB8  00                 	db	0
   966  017CB9  00                 	db	0
   967  017CBA  00                 	db	0
   968  017CBB  00                 	db	0
   969  017CBC  00                 	db	0
   970  017CBD  00                 	db	0
   971  017CBE  00                 	db	0
   972  017CBF  00                 	db	0
   973  017CC0  00                 	db	0
   974  017CC1  00                 	db	0
   975  017CC2  00                 	db	0
   976  017CC3  00                 	db	0
   977  017CC4  00                 	db	0
   978  017CC5  00                 	db	0
   979  017CC6  00                 	db	0
   980  017CC7  00                 	db	0
   981  017CC8  00                 	db	0
   982  017CC9  00                 	db	0
   983  017CCA  00                 	db	0
   984  017CCB  00                 	db	0
   985  017CCC  00                 	db	0
   986  017CCD  00                 	db	0
   987  017CCE  00                 	db	0
   988  017CCF  00                 	db	0
   989  017CD0  00                 	db	0
   990  017CD1  00                 	db	0
   991  017CD2  00                 	db	0
   992  017CD3  00                 	db	0
   993  017CD4  00                 	db	0
   994  017CD5  00                 	db	0
   995  017CD6  00                 	db	0
   996  017CD7  00                 	db	0
   997  017CD8  00                 	db	0
   998  017CD9  00                 	db	0
   999  017CDA  00                 	db	0
  1000  017CDB  00                 	db	0
  1001  017CDC  00                 	db	0
  1002  017CDD  00                 	db	0
  1003  017CDE  00                 	db	0
  1004  017CDF  00                 	db	0
  1005  017CE0  00                 	db	0
  1006  017CE1  00                 	db	0
  1007  017CE2  00                 	db	0
  1008  017CE3  00                 	db	0
  1009  017CE4  00                 	db	0
  1010  017CE5  00                 	db	0
  1011  017CE6  00                 	db	0
  1012  017CE7  00                 	db	0
  1013  017CE8  00                 	db	0
  1014  017CE9  00                 	db	0
  1015  017CEA  00                 	db	0
  1016  017CEB  00                 	db	0
  1017  017CEC  00                 	db	0
  1018  017CED  00                 	db	0
  1019  017CEE  00                 	db	0
  1020  017CEF  00                 	db	0
  1021  017CF0  00                 	db	0
  1022  017CF1  00                 	db	0
  1023  017CF2  00                 	db	0
  1024  017CF3  00                 	db	0
  1025  017CF4  00                 	db	0
  1026  017CF5  00                 	db	0
  1027  017CF6  00                 	db	0
  1028  017CF7  00                 	db	0
  1029  017CF8  00                 	db	0
  1030  017CF9  00                 	db	0
  1031  017CFA  00                 	db	0
  1032  017CFB  00                 	db	0
  1033  017CFC  00                 	db	0
  1034  017CFD  00                 	db	0
  1035  017CFE  00                 	db	0
  1036  017CFF  00                 	db	0
  1037  017D00  00                 	db	0
  1038  017D01  00                 	db	0
  1039  017D02  00                 	db	0
  1040  017D03  00                 	db	0
  1041  017D04  00                 	db	0
  1042  017D05  00                 	db	0
  1043  017D06  00                 	db	0
  1044  017D07  00                 	db	0
  1045  017D08  00                 	db	0
  1046  017D09  00                 	db	0
  1047  017D0A  00                 	db	0
  1048  017D0B  00                 	db	0
  1049  017D0C  00                 	db	0
  1050  017D0D  00                 	db	0
  1051  017D0E  00                 	db	0
  1052  017D0F  00                 	db	0
  1053  017D10  00                 	db	0
  1054  017D11  00                 	db	0
  1055  017D12  00                 	db	0
  1056  017D13  00                 	db	0
  1057  017D14  00                 	db	0
  1058  017D15  00                 	db	0
  1059  017D16  00                 	db	0
  1060  017D17  00                 	db	0
  1061  017D18  00                 	db	0
  1062  017D19  00                 	db	0
  1063  017D1A  00                 	db	0
  1064  017D1B  00                 	db	0
  1065  017D1C  00                 	db	0
  1066  017D1D  00                 	db	0
  1067  017D1E  00                 	db	0
  1068  017D1F  00                 	db	0
  1069  017D20  00                 	db	0
  1070  017D21  00                 	db	0
  1071  017D22  00                 	db	0
  1072  017D23  00                 	db	0
  1073  017D24  00                 	db	0
  1074  017D25  00                 	db	0
  1075  017D26  00                 	db	0
  1076  017D27  00                 	db	0
  1077  017D28  00                 	db	0
  1078  017D29  00                 	db	0
  1079  017D2A  00                 	db	0
  1080  017D2B  00                 	db	0
  1081  017D2C  00                 	db	0
  1082  017D2D  00                 	db	0
  1083  017D2E  00                 	db	0
  1084  017D2F  00                 	db	0
  1085  017D30  00                 	db	0
  1086  017D31  00                 	db	0
  1087  017D32  00                 	db	0
  1088  017D33  00                 	db	0
  1089  017D34  00                 	db	0
  1090  017D35  00                 	db	0
  1091  017D36  00                 	db	0
  1092  017D37  00                 	db	0
  1093  017D38  00                 	db	0
  1094  017D39  00                 	db	0
  1095  017D3A  00                 	db	0
  1096  017D3B  00                 	db	0
  1097  017D3C  00                 	db	0
  1098  017D3D  00                 	db	0
  1099  017D3E  00                 	db	0
  1100  017D3F  00                 	db	0
  1101  017D40  00                 	db	0
  1102  017D41  00                 	db	0
  1103  017D42  00                 	db	0
  1104  017D43  00                 	db	0
  1105  017D44  00                 	db	0
  1106  017D45  00                 	db	0
  1107  017D46  00                 	db	0
  1108  017D47  00                 	db	0
  1109  017D48  00                 	db	0
  1110  017D49  00                 	db	0
  1111  017D4A  00                 	db	0
  1112  017D4B  00                 	db	0
  1113  017D4C  00                 	db	0
  1114  017D4D  00                 	db	0
  1115  017D4E  00                 	db	0
  1116  017D4F  00                 	db	0
  1117  017D50  00                 	db	0
  1118  017D51  00                 	db	0
  1119  017D52  00                 	db	0
  1120  017D53  00                 	db	0
  1121  017D54  00                 	db	0
  1122  017D55  00                 	db	0
  1123  017D56  00                 	db	0
  1124  017D57  00                 	db	0
  1125  017D58  00                 	db	0
  1126  017D59  00                 	db	0
  1127  017D5A  00                 	db	0
  1128  017D5B  00                 	db	0
  1129  017D5C  00                 	db	0
  1130  017D5D  00                 	db	0
  1131  017D5E  00                 	db	0
  1132  017D5F  00                 	db	0
  1133  017D60  00                 	db	0
  1134  017D61  00                 	db	0
  1135  017D62  00                 	db	0
  1136  017D63  00                 	db	0
  1137  017D64  00                 	db	0
  1138  017D65  00                 	db	0
  1139  017D66  00                 	db	0
  1140  017D67  00                 	db	0
  1141  017D68  00                 	db	0
  1142  017D69  00                 	db	0
  1143  017D6A  00                 	db	0
  1144  017D6B  00                 	db	0
  1145  017D6C  00                 	db	0
  1146  017D6D  00                 	db	0
  1147  017D6E  00                 	db	0
  1148  017D6F  00                 	db	0
  1149  017D70  00                 	db	0
  1150  017D71  00                 	db	0
  1151  017D72  00                 	db	0
  1152  017D73  00                 	db	0
  1153  017D74  00                 	db	0
  1154  017D75  00                 	db	0
  1155  017D76  00                 	db	0
  1156  017D77  00                 	db	0
  1157  017D78  00                 	db	0
  1158  017D79  00                 	db	0
  1159  017D7A  00                 	db	0
  1160  017D7B  00                 	db	0
  1161  017D7C  00                 	db	0
  1162  017D7D  00                 	db	0
  1163  017D7E  00                 	db	0
  1164  017D7F  00                 	db	0
  1165  017D80  00                 	db	0
  1166  017D81  00                 	db	0
  1167  017D82  00                 	db	0
  1168  017D83  00                 	db	0
  1169  017D84  00                 	db	0
  1170  017D85  00                 	db	0
  1171  017D86  00                 	db	0
  1172  017D87  00                 	db	0
  1173  017D88  00                 	db	0
  1174  017D89  00                 	db	0
  1175  017D8A  00                 	db	0
  1176  017D8B  00                 	db	0
  1177  017D8C  00                 	db	0
  1178  017D8D  00                 	db	0
  1179  017D8E  00                 	db	0
  1180  017D8F  00                 	db	0
  1181  017D90  00                 	db	0
  1182  017D91  00                 	db	0
  1183  017D92  00                 	db	0
  1184  017D93  00                 	db	0
  1185  017D94  00                 	db	0
  1186  017D95  00                 	db	0
  1187  017D96  00                 	db	0
  1188  017D97  00                 	db	0
  1189  017D98  00                 	db	0
  1190  017D99  00                 	db	0
  1191  017D9A  00                 	db	0
  1192  017D9B  00                 	db	0
  1193  017D9C  00                 	db	0
  1194  017D9D  00                 	db	0
  1195  017D9E  00                 	db	0
  1196  017D9F  00                 	db	0
  1197  017DA0  00                 	db	0
  1198  017DA1  00                 	db	0
  1199  017DA2  00                 	db	0
  1200  017DA3  00                 	db	0
  1201  017DA4  00                 	db	0
  1202  017DA5  00                 	db	0
  1203  017DA6  00                 	db	0
  1204  017DA7  00                 	db	0
  1205  017DA8  00                 	db	0
  1206  017DA9  00                 	db	0
  1207  017DAA  00                 	db	0
  1208  017DAB  00                 	db	0
  1209  017DAC  00                 	db	0
  1210  017DAD  00                 	db	0
  1211  017DAE  00                 	db	0
  1212  017DAF  00                 	db	0
  1213  017DB0  00                 	db	0
  1214  017DB1  00                 	db	0
  1215  017DB2  00                 	db	0
  1216  017DB3  00                 	db	0
  1217  017DB4  00                 	db	0
  1218  017DB5  00                 	db	0
  1219  017DB6  00                 	db	0
  1220  017DB7  00                 	db	0
  1221  017DB8  00                 	db	0
  1222  017DB9  00                 	db	0
  1223  017DBA  00                 	db	0
  1224  017DBB  00                 	db	0
  1225  017DBC  00                 	db	0
  1226  017DBD  00                 	db	0
  1227  017DBE  00                 	db	0
  1228  017DBF  00                 	db	0
  1229  017DC0  00                 	db	0
  1230  017DC1  00                 	db	0
  1231  017DC2  00                 	db	0
  1232  017DC3  00                 	db	0
  1233  017DC4  00                 	db	0
  1234  017DC5  00                 	db	0
  1235  017DC6  00                 	db	0
  1236  017DC7  00                 	db	0
  1237                           
  1238                           	psect	idataBANK0
  1239  01B0F4                     __pidataBANK0:
  1240                           	opt callstack 0
  1241                           
  1242                           ;initializer for _R
  1243  01B0F4  0000               	dw	0
  1244  01B0F6  0000               	dw	0
  1245  01B0F8  0000               	dw	0
  1246  01B0FA  0000               	dw	0
  1247  01B0FC  0000               	dw	0
  1248  01B0FE  0000               	dw	0
  1249  01B100  0000               	dw	0
  1250  01B102  0000               	dw	0
  1251  01B104  0000               	dw	0
  1252  01B106  0000               	dw	0
  1253  01B108  0000               	dw	0
  1254  01B10A  0000               	dw	0
  1255  01B10C  0000               	dw	0
  1256  01B10E  0000               	dw	0
  1257  01B110  0000               	dw	0
  1258  01B112  0000               	dw	0
  1259  01B114  0F67               	dw	3943
  1260  01B116  0F8F               	dw	3983
  1261  01B118  00                 	db	0
  1262  01B119  0000               	dw	0
  1263  01B11B  00                 	db	0
  1264                           
  1265                           ;initializer for _H
  1266  01B11C  00                 	db	0
  1267  01B11D  00                 	db	0
  1268  01B11E  01                 	db	1
  1269  01B11F  00                 	db	0
  1270  01B120  01                 	db	1
  1271  01B121  00                 	db	0
  1272  01B122  00                 	db	0
  1273                           
  1274                           	psect	idataBANK1
  1275  019620                     __pidataBANK1:
  1276                           	opt callstack 0
  1277                           
  1278                           ;initializer for _C
  1279  019620  0000               	dw	0
  1280  019622  0000               	dw	0
  1281  019624  0000               	dw	0
  1282  019626  0000               	dw	0
  1283  019628  0000               	dw	0
  1284  01962A  0000               	dw	0
  1285  01962C  0000               	dw	0
  1286  01962E  0000               	dw	0
  1287  019630  0000               	dw	0
  1288  019632  0000               	dw	0
  1289  019634  0000               	dw	0
  1290  019636  0000               	dw	0
  1291  019638  0000               	dw	0
  1292  01963A  0000               	dw	0
  1293  01963C  0000               	dw	0
  1294  01963E  0000               	dw	0
  1295  019640  0000               	dw	0
  1296  019642  0000               	dw	0
  1297  019644  0000               	dw	0
  1298  019646  0000               	dw	0
  1299  019648  0000               	dw	0
  1300  01964A  0000               	dw	0
  1301  01964C  0000               	dw	0
  1302  01964E  0000               	dw	0
  1303  019650  0000               	dw	0
  1304  019652  0000               	dw	0
  1305  019654  0000               	dw	0
  1306  019656  0000               	dw	0
  1307  019658  0000               	dw	0
  1308  01965A  0000               	dw	0
  1309  01965C  0000               	dw	0
  1310  01965E  0000               	dw	0
  1311  019660  0000               	dw	0
  1312  019662  0000               	dw	0
  1313  019664  0000               	dw	0
  1314  019666  0000               	dw	0
  1315  019668  0000               	dw	0
  1316  01966A  0000               	dw	0
  1317  01966C  0000               	dw	0
  1318  01966E  0000               	dw	0
  1319  019670  0000               	dw	0
  1320  019672  0000               	dw	0
  1321  019674  0000               	dw	0
  1322  019676  0000               	dw	0
  1323  019678  0000               	dw	0
  1324  01967A  0000               	dw	0
  1325  01967C  0000               	dw	0
  1326  01967E  0000               	dw	0
  1327  019680  0000               	dw	0
  1328  019682  0000               	dw	0
  1329  019684  0000               	dw	0
  1330  019686  0000               	dw	0
  1331  019688  0000               	dw	0
  1332  01968A  0000               	dw	0
  1333  01968C  0000               	dw	0
  1334  01968E  0000               	dw	0
  1335  019690  0000               	dw	0
  1336  019692  0000               	dw	0
  1337  019694  0000               	dw	0
  1338  019696  0000               	dw	0
  1339  019698  0000               	dw	0
  1340  01969A  0000               	dw	0
  1341  01969C  0000               	dw	0
  1342  01969E  0000               	dw	0
  1343  0196A0  0000               	dw	0
  1344  0196A2  0000               	dw	0
  1345  0196A4  0000               	dw	0
  1346  0196A6  0000               	dw	0
  1347  0196A8  0000               	dw	0
  1348  0196AA  42FA               	dw	17146
  1349  0196AC  0000               	dw	0
  1350  0196AE  0000               	dw	0
  1351  0196B0  0000               	dw	0
  1352  0196B2  0000               	dw	0
  1353  0196B4  0000               	dw	0
  1354  0196B6  0000               	dw	0
  1355  0196B8  0000               	dw	0
  1356  0196BA  0000               	dw	0
  1357  0196BC  0000               	dw	0
  1358  0196BE  0000               	dw	0
  1359  0196C0  0000               	dw	0
  1360  0196C2  0000               	dw	0
  1361  0196C4  0000               	dw	0
  1362  0196C6  0000               	dw	0
  1363  0196C8  0000               	dw	0
  1364  0196CA  0000               	dw	0
  1365  0196CC  0000               	dw	0
  1366  0196CE  0000               	dw	0
  1367  0196D0  00                 	db	0
  1368  0196D1  0000               	dw	0
  1369  0196D3  0000               	dw	0
  1370  0196D5  0000               	dw	0
  1371  0196D7  0000               	dw	0
  1372  0196D9  0000               	dw	0
  1373  0196DB  0000               	dw	0
  1374  0196DD  0000               	dw	0
  1375  0196DF  0000               	dw	0
  1376  0196E1  0000               	dw	0
  1377  0196E3  0000               	dw	0
  1378  0196E5  0000               	dw	0
  1379  0196E7  0000               	dw	0
  1380  0196E9  0000               	dw	0
  1381  0196EB  0000               	dw	0
  1382  0196ED  0000               	dw	0
  1383  0196EF  0000               	dw	0
  1384  0196F1  0000               	dw	0
  1385  0196F3  0000               	dw	0
  1386  0196F5  0000               	dw	0
  1387  0196F7  0000               	dw	0
  1388  0196F9  0000               	dw	0
  1389  0196FB  0000               	dw	0
  1390  0196FD  0000               	dw	0
  1391  0196FF  0000               	dw	0
  1392  019701  0000               	dw	0
  1393  019703  0000               	dw	0
  1394  019705  0000               	dw	0
  1395  019707  0000               	dw	0
  1396  019709  0000               	dw	0
  1397  01970B  0000               	dw	0
  1398  01970D  0000               	dw	0
  1399  01970F  0000               	dw	0
  1400  019711  0000               	dw	0
  1401  019713  0000               	dw	0
  1402  019715  0000               	dw	0
  1403  019717  00                 	db	0
  1404  019718  00                 	db	0
  1405  019719  00                 	db	0
  1406  01971A  00                 	db	0
  1407  01971B  00                 	db	0
  1408  01971C  00                 	db	0
  1409  01971D  00                 	db	0
  1410  01971E  00                 	db	0
  1411  01971F  00                 	db	0
  1412                           
  1413                           	psect	idataBANK2
  1414  019AA2                     __pidataBANK2:
  1415                           	opt callstack 0
  1416                           
  1417                           ;initializer for stoa@F1166
  1418  019AA2  28                 	db	40
  1419  019AA3  6E                 	db	110
  1420  019AA4  75                 	db	117
  1421  019AA5  6C                 	db	108
  1422  019AA6  6C                 	db	108
  1423  019AA7  29                 	db	41
  1424  019AA8  00                 	db	0
  1425                           
  1426                           ;initializer for _V
  1427  019AA9  00                 	db	0
  1428  019AAA  00                 	db	0
  1429  019AAB  00                 	db	0
  1430  019AAC  00                 	db	0
  1431  019AAD  00                 	db	0
  1432  019AAE  00                 	db	0
  1433  019AAF  00                 	db	0
  1434  019AB0  00                 	db	0
  1435  019AB1  00                 	db	0
  1436  019AB2  00                 	db	0
  1437  019AB3  00                 	db	0
  1438  019AB4  00                 	db	0
  1439  019AB5  00                 	db	0
  1440  019AB6  00                 	db	0
  1441  019AB7  00                 	db	0
  1442  019AB8  00                 	db	0
  1443  019AB9  00                 	db	0
  1444  019ABA  00                 	db	0
  1445  019ABB  00                 	db	0
  1446  019ABC  00                 	db	0
  1447  019ABD  00                 	db	0
  1448  019ABE  00                 	db	0
  1449  019ABF  00                 	db	0
  1450  019AC0  00                 	db	0
  1451  019AC1  00                 	db	0
  1452  019AC2  00                 	db	0
  1453  019AC3  00                 	db	0
  1454  019AC4  00                 	db	0
  1455  019AC5  00                 	db	0
  1456  019AC6  00                 	db	0
  1457  019AC7  00                 	db	0
  1458  019AC8  00                 	db	0
  1459  019AC9  00                 	db	0
  1460  019ACA  00                 	db	0
  1461  019ACB  00                 	db	0
  1462  019ACC  00                 	db	0
  1463  019ACD  00                 	db	0
  1464  019ACE  00                 	db	0
  1465  019ACF  00                 	db	0
  1466  019AD0  00                 	db	0
  1467  019AD1  00                 	db	0
  1468  019AD2  00                 	db	0
  1469  019AD3  00                 	db	0
  1470  019AD4  00                 	db	0
  1471  019AD5  00                 	db	0
  1472  019AD6  00                 	db	0
  1473  019AD7  00                 	db	0
  1474  019AD8  00                 	db	0
  1475  019AD9  00                 	db	0
  1476  019ADA  00                 	db	0
  1477  019ADB  00                 	db	0
  1478  019ADC  00                 	db	0
  1479  019ADD  00                 	db	0
  1480  019ADE  00                 	db	0
  1481  019ADF  00                 	db	0
  1482  019AE0  00                 	db	0
  1483  019AE1  00                 	db	0
  1484  019AE2  00                 	db	0
  1485  019AE3  00                 	db	0
  1486  019AE4  00                 	db	0
  1487  019AE5  00                 	db	0
  1488  019AE6  00                 	db	0
  1489  019AE7  00                 	db	0
  1490  019AE8  00                 	db	0
  1491  019AE9  00                 	db	0
  1492  019AEA  00                 	db	0
  1493  019AEB  00                 	db	0
  1494  019AEC  00                 	db	0
  1495  019AED  00                 	db	0
  1496  019AEE  00                 	db	0
  1497  019AEF  00                 	db	0
  1498  019AF0  00                 	db	0
  1499  019AF1  00                 	db	0
  1500  019AF2  00                 	db	0
  1501  019AF3  00                 	db	0
  1502  019AF4  00                 	db	0
  1503  019AF5  00                 	db	0
  1504  019AF6  00                 	db	0
  1505  019AF7  00                 	db	0
  1506  019AF8  00                 	db	0
  1507  019AF9  00                 	db	0
  1508  019AFA  00                 	db	0
  1509  019AFB  00                 	db	0
  1510  019AFC  00                 	db	0
  1511  019AFD  00                 	db	0
  1512  019AFE  00                 	db	0
  1513  019AFF  00                 	db	0
  1514  019B00  00                 	db	0
  1515  019B01  00                 	db	0
  1516  019B02  00                 	db	0
  1517  019B03  00                 	db	0
  1518  019B04  00                 	db	0
  1519  019B05  00                 	db	0
  1520  019B06  00                 	db	0
  1521  019B07  00                 	db	0
  1522  019B08  00                 	db	0
  1523  019B09  00                 	db	0
  1524  019B0A  00                 	db	0
  1525  019B0B  00                 	db	0
  1526  019B0C  00                 	db	0
  1527  019B0D  00                 	db	0
  1528  019B0E  00                 	db	0
  1529  019B0F  00                 	db	0
  1530  019B10  00                 	db	0
  1531  019B11  00                 	db	0
  1532  019B12  00                 	db	0
  1533  019B13  00                 	db	0
  1534  019B14  00                 	db	0
  1535  019B15  00                 	db	0
  1536  019B16  00                 	db	0
  1537  019B17  00                 	db	0
  1538  019B18  00                 	db	0
  1539  019B19  00                 	db	0
  1540  019B1A  00                 	db	0
  1541  019B1B  00                 	db	0
  1542  019B1C  00                 	db	0
  1543  019B1D  00                 	db	0
  1544  019B1E  00                 	db	0
  1545  019B1F  00                 	db	0
  1546  019B20  00                 	db	0
  1547  019B21  00                 	db	0
  1548  019B22  00                 	db	0
  1549  019B23  00                 	db	0
  1550  019B24  00                 	db	0
  1551  019B25  00                 	db	0
  1552  019B26  00                 	db	0
  1553  019B27  00                 	db	0
  1554  019B28  00                 	db	0
  1555  019B29  00                 	db	0
  1556  019B2A  0000               	dw	0
  1557  019B2C  0000               	dw	0
  1558  019B2E  0000               	dw	0
  1559  019B30  0000               	dw	0
  1560  019B32  00                 	db	0
  1561  019B33  00                 	db	0
  1562  019B34  00                 	db	0
  1563  019B35  00                 	db	0
  1564  019B36  00                 	db	0
  1565  019B37  00                 	db	0
  1566  019B38  0000               	dw	0
  1567  019B3A  0000               	dw	0
  1568  019B3C  0000               	dw	0
  1569  019B3E  0000               	dw	0
  1570  019B40  0000               	dw	0
  1571  019B42  0000               	dw	0
  1572  019B44  00                 	db	0
  1573  019B45  00                 	db	0
  1574  019B46  00                 	db	0
  1575  019B47  00                 	db	0
  1576  019B48  00                 	db	0
  1577  019B49  00                 	db	0
  1578  019B4A  00                 	db	0
  1579  019B4B  00                 	db	0
  1580  019B4C  00                 	db	0
  1581  019B4D  00                 	db	0
  1582  019B4E  00                 	db	0
  1583  019B4F  0000               	dw	0
  1584  019B51  0000               	dw	0
  1585  019B53  2D                 	db	45
  1586  019B54  00                 	db	0
  1587  019B55  00                 	db	0
  1588  019B56  00                 	db	0
  1589  019B57  0000               	dw	0
  1590  019B59  0000               	dw	0
  1591  019B5B  0000               	dw	0
  1592  019B5D  0000               	dw	0
  1593  019B5F  0000               	dw	0
  1594  019B61  0000               	dw	0
  1595  019B63  0000               	dw	0
  1596  019B65  0000               	dw	0
  1597                           
  1598                           	psect	mediumconst
  1599  00FA7A                     __pmediumconst:
  1600                           	opt callstack 0
  1601  00FA7A  00                 	db	0
  1602  00FA7B                     _BVSOC_TABLE:
  1603                           	opt callstack 0
  1604  00FA7B  59D8               	dw	23000
  1605  00FA7D  0000               	dw	0
  1606  00FA7F  0005               	dw	5
  1607  00FA81  0000               	dw	0
  1608  00FA83  5B68               	dw	23400
  1609  00FA85  0000               	dw	0
  1610  00FA87  000A               	dw	10
  1611  00FA89  0000               	dw	0
  1612  00FA8B  5C30               	dw	23600
  1613  00FA8D  0000               	dw	0
  1614  00FA8F  0014               	dw	20
  1615  00FA91  0000               	dw	0
  1616  00FA93  5E38               	dw	24120
  1617  00FA95  0000               	dw	0
  1618  00FA97  0019               	dw	25
  1619  00FA99  0000               	dw	0
  1620  00FA9B  5E88               	dw	24200
  1621  00FA9D  0000               	dw	0
  1622  00FA9F  001E               	dw	30
  1623  00FAA1  0000               	dw	0
  1624  00FAA3  5F78               	dw	24440
  1625  00FAA5  0000               	dw	0
  1626  00FAA7  0028               	dw	40
  1627  00FAA9  0000               	dw	0
  1628  00FAAB  5FDC               	dw	24540
  1629  00FAAD  0000               	dw	0
  1630  00FAAF  002D               	dw	45
  1631  00FAB1  0000               	dw	0
  1632  00FAB3  6018               	dw	24600
  1633  00FAB5  0000               	dw	0
  1634  00FAB7  0032               	dw	50
  1635  00FAB9  0000               	dw	0
  1636  00FABB  6046               	dw	24646
  1637  00FABD  0000               	dw	0
  1638  00FABF  0035               	dw	53
  1639  00FAC1  0000               	dw	0
  1640  00FAC3  607C               	dw	24700
  1641  00FAC5  0000               	dw	0
  1642  00FAC7  0037               	dw	55
  1643  00FAC9  0000               	dw	0
  1644  00FACB  60AE               	dw	24750
  1645  00FACD  0000               	dw	0
  1646  00FACF  0039               	dw	57
  1647  00FAD1  0000               	dw	0
  1648  00FAD3  60E0               	dw	24800
  1649  00FAD5  0000               	dw	0
  1650  00FAD7  003C               	dw	60
  1651  00FAD9  0000               	dw	0
  1652  00FADB  6112               	dw	24850
  1653  00FADD  0000               	dw	0
  1654  00FADF  003F               	dw	63
  1655  00FAE1  0000               	dw	0
  1656  00FAE3  615D               	dw	24925
  1657  00FAE5  0000               	dw	0
  1658  00FAE7  0043               	dw	67
  1659  00FAE9  0000               	dw	0
  1660  00FAEB  61A8               	dw	25000
  1661  00FAED  0000               	dw	0
  1662  00FAEF  0046               	dw	70
  1663  00FAF1  0000               	dw	0
  1664  00FAF3  61BC               	dw	25020
  1665  00FAF5  0000               	dw	0
  1666  00FAF7  0048               	dw	72
  1667  00FAF9  0000               	dw	0
  1668  00FAFB  61D0               	dw	25040
  1669  00FAFD  0000               	dw	0
  1670  00FAFF  004B               	dw	75
  1671  00FB01  0000               	dw	0
  1672  00FB03  61DA               	dw	25050
  1673  00FB05  0000               	dw	0
  1674  00FB07  0050               	dw	80
  1675  00FB09  0000               	dw	0
  1676  00FB0B  61E4               	dw	25060
  1677  00FB0D  0000               	dw	0
  1678  00FB0F  0055               	dw	85
  1679  00FB11  0000               	dw	0
  1680  00FB13  61F8               	dw	25080
  1681  00FB15  0000               	dw	0
  1682  00FB17  005A               	dw	90
  1683  00FB19  0000               	dw	0
  1684  00FB1B  6208               	dw	25096
  1685  00FB1D  0000               	dw	0
  1686  00FB1F  005C               	dw	92
  1687  00FB21  0000               	dw	0
  1688  00FB23  6222               	dw	25122
  1689  00FB25  0000               	dw	0
  1690  00FB27  005D               	dw	93
  1691  00FB29  0000               	dw	0
  1692  00FB2B  6234               	dw	25140
  1693  00FB2D  0000               	dw	0
  1694  00FB2F  005F               	dw	95
  1695  00FB31  0000               	dw	0
  1696  00FB33  6248               	dw	25160
  1697  00FB35  0000               	dw	0
  1698  00FB37  0061               	dw	97
  1699  00FB39  0000               	dw	0
  1700  00FB3B  625C               	dw	25180
  1701  00FB3D  0000               	dw	0
  1702  00FB3F  0064               	dw	100
  1703  00FB41  0000               	dw	0
  1704  00FB43  6784               	dw	26500
  1705  00FB45  0000               	dw	0
  1706  00FB47  0062               	dw	98
  1707  00FB49  0000               	dw	0
  1708  00FB4B                     __end_of_BVSOC_TABLE:
  1709                           	opt callstack 0
  1710  00FB4B                     _T:
  1711                           	opt callstack 0
  1712  00FB4B  63                 	db	99
  1713  00FB4C  6F                 	db	111
  1714  00FB4D  6D                 	db	109
  1715  00FB4E  6D                 	db	109
  1716  00FB4F  61                 	db	97
  1717  00FB50  6E                 	db	110
  1718  00FB51  64                 	db	100
  1719  00FB52  73                 	db	115
  1720  00FB53  20                 	db	32
  1721  00FB54  31                 	db	49
  1722  00FB55  00                 	db	0
  1723  00FB56  00                 	db	0
  1724  00FB57  00                 	db	0
  1725  00FB58  00                 	db	0
  1726  00FB59  00                 	db	0
  1727  00FB5A  00                 	db	0
  1728  00FB5B  00                 	db	0
  1729  00FB5C  00                 	db	0
  1730  00FB5D  64                 	db	100
  1731  00FB5E  69                 	db	105
  1732  00FB5F  73                 	db	115
  1733  00FB60  70                 	db	112
  1734  00FB61  6C                 	db	108
  1735  00FB62  61                 	db	97
  1736  00FB63  79                 	db	121
  1737  00FB64  73                 	db	115
  1738  00FB65  20                 	db	32
  1739  00FB66  31                 	db	49
  1740  00FB67  00                 	db	0
  1741  00FB68  00                 	db	0
  1742  00FB69  00                 	db	0
  1743  00FB6A  00                 	db	0
  1744  00FB6B  00                 	db	0
  1745  00FB6C  00                 	db	0
  1746  00FB6D  00                 	db	0
  1747  00FB6E  00                 	db	0
  1748  00FB6F  63                 	db	99
  1749  00FB70  6F                 	db	111
  1750  00FB71  6D                 	db	109
  1751  00FB72  6D                 	db	109
  1752  00FB73  61                 	db	97
  1753  00FB74  6E                 	db	110
  1754  00FB75  64                 	db	100
  1755  00FB76  73                 	db	115
  1756  00FB77  20                 	db	32
  1757  00FB78  32                 	db	50
  1758  00FB79  00                 	db	0
  1759  00FB7A  00                 	db	0
  1760  00FB7B  00                 	db	0
  1761  00FB7C  00                 	db	0
  1762  00FB7D  00                 	db	0
  1763  00FB7E  00                 	db	0
  1764  00FB7F  00                 	db	0
  1765  00FB80  00                 	db	0
  1766  00FB81  64                 	db	100
  1767  00FB82  69                 	db	105
  1768  00FB83  73                 	db	115
  1769  00FB84  70                 	db	112
  1770  00FB85  6C                 	db	108
  1771  00FB86  61                 	db	97
  1772  00FB87  79                 	db	121
  1773  00FB88  73                 	db	115
  1774  00FB89  20                 	db	32
  1775  00FB8A  32                 	db	50
  1776  00FB8B  00                 	db	0
  1777  00FB8C  00                 	db	0
  1778  00FB8D  00                 	db	0
  1779  00FB8E  00                 	db	0
  1780  00FB8F  00                 	db	0
  1781  00FB90  00                 	db	0
  1782  00FB91  00                 	db	0
  1783  00FB92  00                 	db	0
  1784  00FB93  63                 	db	99
  1785  00FB94  6F                 	db	111
  1786  00FB95  6D                 	db	109
  1787  00FB96  6D                 	db	109
  1788  00FB97  61                 	db	97
  1789  00FB98  6E                 	db	110
  1790  00FB99  64                 	db	100
  1791  00FB9A  73                 	db	115
  1792  00FB9B  20                 	db	32
  1793  00FB9C  33                 	db	51
  1794  00FB9D  00                 	db	0
  1795  00FB9E  00                 	db	0
  1796  00FB9F  00                 	db	0
  1797  00FBA0  00                 	db	0
  1798  00FBA1  00                 	db	0
  1799  00FBA2  00                 	db	0
  1800  00FBA3  00                 	db	0
  1801  00FBA4  00                 	db	0
  1802  00FBA5  64                 	db	100
  1803  00FBA6  69                 	db	105
  1804  00FBA7  73                 	db	115
  1805  00FBA8  70                 	db	112
  1806  00FBA9  6C                 	db	108
  1807  00FBAA  61                 	db	97
  1808  00FBAB  79                 	db	121
  1809  00FBAC  73                 	db	115
  1810  00FBAD  20                 	db	32
  1811  00FBAE  33                 	db	51
  1812  00FBAF  00                 	db	0
  1813  00FBB0  00                 	db	0
  1814  00FBB1  00                 	db	0
  1815  00FBB2  00                 	db	0
  1816  00FBB3  00                 	db	0
  1817  00FBB4  00                 	db	0
  1818  00FBB5  00                 	db	0
  1819  00FBB6  00                 	db	0
  1820  00FBB7  63                 	db	99
  1821  00FBB8  6F                 	db	111
  1822  00FBB9  6D                 	db	109
  1823  00FBBA  6D                 	db	109
  1824  00FBBB  61                 	db	97
  1825  00FBBC  6E                 	db	110
  1826  00FBBD  64                 	db	100
  1827  00FBBE  73                 	db	115
  1828  00FBBF  20                 	db	32
  1829  00FBC0  34                 	db	52
  1830  00FBC1  00                 	db	0
  1831  00FBC2  00                 	db	0
  1832  00FBC3  00                 	db	0
  1833  00FBC4  00                 	db	0
  1834  00FBC5  00                 	db	0
  1835  00FBC6  00                 	db	0
  1836  00FBC7  00                 	db	0
  1837  00FBC8  00                 	db	0
  1838  00FBC9  64                 	db	100
  1839  00FBCA  69                 	db	105
  1840  00FBCB  73                 	db	115
  1841  00FBCC  70                 	db	112
  1842  00FBCD  6C                 	db	108
  1843  00FBCE  61                 	db	97
  1844  00FBCF  79                 	db	121
  1845  00FBD0  73                 	db	115
  1846  00FBD1  20                 	db	32
  1847  00FBD2  34                 	db	52
  1848  00FBD3  00                 	db	0
  1849  00FBD4  00                 	db	0
  1850  00FBD5  00                 	db	0
  1851  00FBD6  00                 	db	0
  1852  00FBD7  00                 	db	0
  1853  00FBD8  00                 	db	0
  1854  00FBD9  00                 	db	0
  1855  00FBDA  00                 	db	0
  1856  00FBDB                     __end_of_T:
  1857                           	opt callstack 0
  1858  00FBDB                     _spin:
  1859                           	opt callstack 0
  1860  00FBDB  7C                 	db	124
  1861  00FBDC  7C                 	db	124
  1862  00FBDD  2F                 	db	47
  1863  00FBDE  2F                 	db	47
  1864  00FBDF  2D                 	db	45
  1865  00FBE0  2D                 	db	45
  1866  00FBE1  00                 	db	0
  1867  00FBE2  00                 	db	0
  1868  00FBE3  00                 	db	0
  1869  00FBE4  00                 	db	0
  1870  00FBE5  00                 	db	0
  1871  00FBE6  00                 	db	0
  1872  00FBE7  00                 	db	0
  1873  00FBE8  00                 	db	0
  1874  00FBE9  00                 	db	0
  1875  00FBEA  00                 	db	0
  1876  00FBEB  00                 	db	0
  1877  00FBEC  00                 	db	0
  1878  00FBED  00                 	db	0
  1879  00FBEE  00                 	db	0
  1880  00FBEF  7C                 	db	124
  1881  00FBF0  7C                 	db	124
  1882  00FBF1  2F                 	db	47
  1883  00FBF2  2F                 	db	47
  1884  00FBF3  2D                 	db	45
  1885  00FBF4  2D                 	db	45
  1886  00FBF5  5C                 	db	92
  1887  00FBF6  5C                 	db	92
  1888  00FBF7  00                 	db	0
  1889  00FBF8  00                 	db	0
  1890  00FBF9  00                 	db	0
  1891  00FBFA  00                 	db	0
  1892  00FBFB  00                 	db	0
  1893  00FBFC  00                 	db	0
  1894  00FBFD  00                 	db	0
  1895  00FBFE  00                 	db	0
  1896  00FBFF  00                 	db	0
  1897  00FC00  00                 	db	0
  1898  00FC01  00                 	db	0
  1899  00FC02  00                 	db	0
  1900  00FC03  4F                 	db	79
  1901  00FC04  4F                 	db	79
  1902  00FC05  4F                 	db	79
  1903  00FC06  4F                 	db	79
  1904  00FC07  4F                 	db	79
  1905  00FC08  4F                 	db	79
  1906  00FC09  2D                 	db	45
  1907  00FC0A  2D                 	db	45
  1908  00FC0B  5F                 	db	95
  1909  00FC0C  5F                 	db	95
  1910  00FC0D  2D                 	db	45
  1911  00FC0E  00                 	db	0
  1912  00FC0F  00                 	db	0
  1913  00FC10  00                 	db	0
  1914  00FC11  00                 	db	0
  1915  00FC12  00                 	db	0
  1916  00FC13  00                 	db	0
  1917  00FC14  00                 	db	0
  1918  00FC15  00                 	db	0
  1919  00FC16  00                 	db	0
  1920  00FC17  76                 	db	118
  1921  00FC18  76                 	db	118
  1922  00FC19  3C                 	db	60
  1923  00FC1A  3C                 	db	60
  1924  00FC1B  5E                 	db	94
  1925  00FC1C  5E                 	db	94
  1926  00FC1D  3E                 	db	62
  1927  00FC1E  3E                 	db	62
  1928  00FC1F  00                 	db	0
  1929  00FC20  00                 	db	0
  1930  00FC21  00                 	db	0
  1931  00FC22  00                 	db	0
  1932  00FC23  00                 	db	0
  1933  00FC24  00                 	db	0
  1934  00FC25  00                 	db	0
  1935  00FC26  00                 	db	0
  1936  00FC27  00                 	db	0
  1937  00FC28  00                 	db	0
  1938  00FC29  00                 	db	0
  1939  00FC2A  00                 	db	0
  1940  00FC2B  2E                 	db	46
  1941  00FC2C  2E                 	db	46
  1942  00FC2D  2A                 	db	42
  1943  00FC2E  2A                 	db	42
  1944  00FC2F  78                 	db	120
  1945  00FC30  23                 	db	35
  1946  00FC31  78                 	db	120
  1947  00FC32  23                 	db	35
  1948  00FC33  58                 	db	88
  1949  00FC34  58                 	db	88
  1950  00FC35  7C                 	db	124
  1951  00FC36  7C                 	db	124
  1952  00FC37  2D                 	db	45
  1953  00FC38  2D                 	db	45
  1954  00FC39  00                 	db	0
  1955  00FC3A  00                 	db	0
  1956  00FC3B  00                 	db	0
  1957  00FC3C  00                 	db	0
  1958  00FC3D  00                 	db	0
  1959  00FC3E  00                 	db	0
  1960  00FC3F  2E                 	db	46
  1961  00FC40  2E                 	db	46
  1962  00FC41  6F                 	db	111
  1963  00FC42  6F                 	db	111
  1964  00FC43  4F                 	db	79
  1965  00FC44  4F                 	db	79
  1966  00FC45  6F                 	db	111
  1967  00FC46  6F                 	db	111
  1968  00FC47  00                 	db	0
  1969  00FC48  00                 	db	0
  1970  00FC49  00                 	db	0
  1971  00FC4A  00                 	db	0
  1972  00FC4B  00                 	db	0
  1973  00FC4C  00                 	db	0
  1974  00FC4D  00                 	db	0
  1975  00FC4E  00                 	db	0
  1976  00FC4F  00                 	db	0
  1977  00FC50  00                 	db	0
  1978  00FC51  00                 	db	0
  1979  00FC52  00                 	db	0
  1980  00FC53                     __end_of_spin:
  1981                           	opt callstack 0
  1982  00FC53  0000               	dw	0
  1983  00FC55  3F80               	dw	16256
  1984  00FC57  0000               	dw	0
  1985  00FC59  3FC0               	dw	16320
  1986  00FC5B                     __end_of_bp:
  1987                           	opt callstack 0
  1988  00FC5B  AA00               	dw	43520
  1989  00FC5D  3FB8               	dw	16312
  1990  00FC5F                     __end_of_ivln2_h:
  1991                           	opt callstack 0
  1992  00FC5F  23C6               	dw	9158
  1993  00FC61  B8F6               	dw	47350
  1994  00FC63                     __end_of_cp_l:
  1995                           	opt callstack 0
  1996  00FC63  4000               	dw	16384
  1997  00FC65  3F76               	dw	16246
  1998  00FC67                     __end_of_cp_h:
  1999                           	opt callstack 0
  2000  0000                     _IVTADL	set	14493
  2001  0000                     _IVTADH	set	14494
  2002  0000                     _IVTADU	set	14495
  2003  0000                     _PIR6bits	set	14758
  2004  0000                     _PIR4bits	set	14756
  2005  0000                     _PIE8bits	set	14744
  2006  0000                     _PIR8bits	set	14760
  2007  0000                     _SCANPR	set	14839
  2008  0000                     _DMA2PR	set	14836
  2009  0000                     _DMA1PR	set	14835
  2010  0000                     _MAINPR	set	14834
  2011  0000                     _ISRPR	set	14833
  2012  0000                     _PIE2bits	set	14738
  2013  0000                     _PIR2bits	set	14754
  2014  0000                     _PIE9bits	set	14745
  2015  0000                     _PIR9bits	set	14761
  2016  0000                     _PIE6bits	set	14742
  2017  0000                     _PIE3bits	set	14739
  2018  0000                     _PMD7	set	14791
  2019  0000                     _PMD6	set	14790
  2020  0000                     _PMD5	set	14789
  2021  0000                     _PMD4	set	14788
  2022  0000                     _PMD3	set	14787
  2023  0000                     _PMD2	set	14786
  2024  0000                     _PMD1	set	14785
  2025  0000                     _PMD0	set	14784
  2026  0000                     _OSCTUNE	set	14814
  2027  0000                     _OSCFRQ	set	14815
  2028  0000                     _OSCEN	set	14813
  2029  0000                     _OSCCON3	set	14811
  2030  0000                     _OSCCON1	set	14809
  2031  0000                     _IPR8bits	set	14728
  2032  0000                     _IPR9bits	set	14729
  2033  0000                     _IPR5bits	set	14725
  2034  0000                     _IPR1bits	set	14721
  2035  0000                     _IPR3bits	set	14723
  2036  0000                     _IPR6bits	set	14726
  2037  0000                     _IPR2bits	set	14722
  2038  0000                     _PIE5bits	set	14741
  2039  0000                     _PIE1bits	set	14737
  2040  0000                     _PIR5bits	set	14757
  2041  0000                     _PIR1bits	set	14753
  2042  0000                     _PLLR	set	118496
  2043  0000                     _SPI1SDIPPS	set	15071
  2044  0000                     _U1RXPPS	set	15077
  2045  0000                     _RC6PPS	set	14870
  2046  0000                     _RC5PPS	set	14869
  2047  0000                     _INT1PPS	set	15041
  2048  0000                     _RD1PPS	set	14873
  2049  0000                     _INT0PPS	set	15040
  2050  0000                     _RC3PPS	set	14867
  2051  0000                     _RB6PPS	set	14862
  2052  0000                     _SPI1SCKPPS	set	15070
  2053  0000                     _U2RXPPS	set	15080
  2054  0000                     _SLRCONF	set	14995
  2055  0000                     _SLRCONE	set	14979
  2056  0000                     _SLRCOND	set	14963
  2057  0000                     _SLRCONC	set	14947
  2058  0000                     _SLRCONB	set	14931
  2059  0000                     _SLRCONA	set	14915
  2060  0000                     _ODCOND	set	14962
  2061  0000                     _ODCONC	set	14946
  2062  0000                     _ODCONB	set	14930
  2063  0000                     _ODCONA	set	14914
  2064  0000                     _ODCONF	set	14994
  2065  0000                     _ODCONE	set	14978
  2066  0000                     _WPUC	set	14945
  2067  0000                     _WPUA	set	14913
  2068  0000                     _WPUB	set	14929
  2069  0000                     _WPUE	set	14977
  2070  0000                     _WPUF	set	14993
  2071  0000                     _WPUD	set	14961
  2072  0000                     _ANSELA	set	14912
  2073  0000                     _ANSELF	set	14992
  2074  0000                     _ANSELE	set	14976
  2075  0000                     _ANSELB	set	14928
  2076  0000                     _ANSELC	set	14944
  2077  0000                     _ANSELD	set	14960
  2078  0000                     _DMA2SSA	set	15321
  2079  0000                     _DMA1SSA	set	15353
  2080  0000                     _DMA2DSZ	set	15310
  2081  0000                     _DMA2SSZ	set	15319
  2082  0000                     _DMA2DSA	set	15312
  2083  0000                     _DMA1DSZ	set	15342
  2084  0000                     _DMA1SSZ	set	15351
  2085  0000                     _DMA1DSA	set	15344
  2086  0000                     _DMA2CON0bits	set	15324
  2087  0000                     _DMA2CON1bits	set	15325
  2088  0000                     _DMA1CON0bits	set	15356
  2089  0000                     _DMA1CON1bits	set	15357
  2090  0000                     _DMA2CON0	set	15324
  2091  0000                     _DMA2AIRQ	set	15326
  2092  0000                     _DMA2SIRQ	set	15327
  2093  0000                     _DMA2CON1	set	15325
  2094  0000                     _DMA1CON0	set	15356
  2095  0000                     _DMA1AIRQ	set	15358
  2096  0000                     _DMA1SIRQ	set	15359
  2097  0000                     _DMA1CON1	set	15357
  2098  0000                     _CLKRCON	set	15589
  2099  0000                     _CLKRCLK	set	15590
  2100  0000                     _SPI1INTFbits	set	15642
  2101  0000                     _SPI1RXB	set	15632
  2102  0000                     _SPI1TXB	set	15633
  2103  0000                     _SPI1TCNTL	set	15634
  2104  0000                     _SPI1CON0	set	15636
  2105  0000                     _SPI1CLK	set	15644
  2106  0000                     _SPI1BAUD	set	15641
  2107  0000                     _SPI1CON2	set	15638
  2108  0000                     _SPI1CON1	set	15637
  2109  0000                     _U2RXB	set	15824
  2110  0000                     _U2TXB	set	15826
  2111  0000                     _U2ERRIE	set	15842
  2112  0000                     _U2ERRIR	set	15841
  2113  0000                     _U2UIR	set	15840
  2114  0000                     _U2FIFO	set	15839
  2115  0000                     _U2BRGH	set	15838
  2116  0000                     _U2BRGL	set	15837
  2117  0000                     _U2CON2	set	15836
  2118  0000                     _U2CON1	set	15835
  2119  0000                     _U2CON0	set	15834
  2120  0000                     _U2P3L	set	15832
  2121  0000                     _U2P2L	set	15830
  2122  0000                     _U2P1L	set	15828
  2123  0000                     _U1RXB	set	15848
  2124  0000                     _U1ERRIE	set	15866
  2125  0000                     _U1ERRIR	set	15865
  2126  0000                     _U1UIR	set	15864
  2127  0000                     _U1FIFO	set	15863
  2128  0000                     _U1BRGH	set	15862
  2129  0000                     _U1BRGL	set	15861
  2130  0000                     _U1CON2	set	15860
  2131  0000                     _U1CON1	set	15859
  2132  0000                     _U1CON0	set	15858
  2133  0000                     _U1P3H	set	15857
  2134  0000                     _U1P3L	set	15856
  2135  0000                     _U1P2H	set	15855
  2136  0000                     _U1P2L	set	15854
  2137  0000                     _U1P1H	set	15853
  2138  0000                     _U1P1L	set	15852
  2139  0000                     _FVRCON	set	16065
  2140  0000                     _ADFLTRL	set	16102
  2141  0000                     _ADFLTRH	set	16103
  2142  0000                     _ADCON0bits	set	16120
  2143  0000                     _ADCON0	set	16120
  2144  0000                     _ADCLK	set	16127
  2145  0000                     _ADACT	set	16126
  2146  0000                     _ADREF	set	16125
  2147  0000                     _ADSTAT	set	16124
  2148  0000                     _ADCON3	set	16123
  2149  0000                     _ADCON2	set	16122
  2150  0000                     _ADCON1	set	16121
  2151  0000                     _ADPREH	set	16119
  2152  0000                     _ADPREL	set	16118
  2153  0000                     _ADCAP	set	16117
  2154  0000                     _ADACQH	set	16116
  2155  0000                     _ADACQL	set	16115
  2156  0000                     _ADPCH	set	16113
  2157  0000                     _ADRPT	set	16108
  2158  0000                     _ADACCU	set	16106
  2159  0000                     _ADSTPTH	set	16101
  2160  0000                     _ADSTPTL	set	16100
  2161  0000                     _ADUTHH	set	16097
  2162  0000                     _ADUTHL	set	16096
  2163  0000                     _ADLTHH	set	16095
  2164  0000                     _ADLTHL	set	16094
  2165  0000                     _CCPTMRS1bits	set	16223
  2166  0000                     _PORTFbits	set	16335
  2167  0000                     _LATFbits	set	16319
  2168  0000                     _LATCbits	set	16316
  2169  0000                     _LATDbits	set	16317
  2170  0000                     _PORTBbits	set	16331
  2171  0000                     _T3CONbits	set	16294
  2172  0000                     _T3CON	set	16294
  2173  0000                     _TMR3L	set	16292
  2174  0000                     _TMR3H	set	16293
  2175  0000                     _T3CLK	set	16297
  2176  0000                     _T3GATE	set	16296
  2177  0000                     _T3GCON	set	16295
  2178  0000                     _T2CON	set	16300
  2179  0000                     _T2TMR	set	16298
  2180  0000                     _T2PR	set	16299
  2181  0000                     _T2RST	set	16303
  2182  0000                     _T2HLT	set	16301
  2183  0000                     _T2CLKCON	set	16302
  2184  0000                     _PWM8DCL	set	16224
  2185  0000                     _PWM8DCH	set	16225
  2186  0000                     _PWM8CON	set	16226
  2187  0000                     _LATEbits	set	16318
  2188  0000                     _T5CONbits	set	16282
  2189  0000                     _T5CON	set	16282
  2190  0000                     _TMR5L	set	16280
  2191  0000                     _TMR5H	set	16281
  2192  0000                     _T5CLK	set	16285
  2193  0000                     _T5GATE	set	16284
  2194  0000                     _T5GCON	set	16283
  2195  0000                     _T6CON	set	16276
  2196  0000                     _T6TMR	set	16274
  2197  0000                     _T6PR	set	16275
  2198  0000                     _T6RST	set	16279
  2199  0000                     _T6HLT	set	16277
  2200  0000                     _T6CLKCON	set	16278
  2201  0000                     _TRISD	set	16325
  2202  0000                     _TRISC	set	16324
  2203  0000                     _TRISB	set	16323
  2204  0000                     _TRISA	set	16322
  2205  0000                     _TRISF	set	16327
  2206  0000                     _TRISE	set	16326
  2207  0000                     _LATC	set	16316
  2208  0000                     _LATB	set	16315
  2209  0000                     _LATF	set	16319
  2210  0000                     _LATA	set	16314
  2211  0000                     _LATD	set	16317
  2212  0000                     _LATE	set	16318
  2213  0000                     _IVTLOCKbits	set	16340
  2214  0000                     _IVTLOCK	set	16340
  2215  0000                     _INTCON0bits	set	16338
  2216  0000                     _GIE	set	130711
  2217  00FC67                     STR_65:
  2218                           
  2219                           ; BSR set to: 57
  2220  00FC67  20                 	db	32
  2221  00FC68  25                 	db	37
  2222  00FC69  6C                 	db	108	;'l'
  2223  00FC6A  75                 	db	117	;'u'
  2224  00FC6B  2C                 	db	44
  2225  00FC6C  25                 	db	37
  2226  00FC6D  34                 	db	52	;'4'
  2227  00FC6E  2E                 	db	46
  2228  00FC6F  34                 	db	52	;'4'
  2229  00FC70  66                 	db	102	;'f'
  2230  00FC71  2C                 	db	44
  2231  00FC72  25                 	db	37
  2232  00FC73  34                 	db	52	;'4'
  2233  00FC74  2E                 	db	46
  2234  00FC75  34                 	db	52	;'4'
  2235  00FC76  66                 	db	102	;'f'
  2236  00FC77  2C                 	db	44
  2237  00FC78  25                 	db	37
  2238  00FC79  34                 	db	52	;'4'
  2239  00FC7A  2E                 	db	46
  2240  00FC7B  34                 	db	52	;'4'
  2241  00FC7C  66                 	db	102	;'f'
  2242  00FC7D  2C                 	db	44
  2243  00FC7E  25                 	db	37
  2244  00FC7F  34                 	db	52	;'4'
  2245  00FC80  2E                 	db	46
  2246  00FC81  34                 	db	52	;'4'
  2247  00FC82  66                 	db	102	;'f'
  2248  00FC83  2C                 	db	44
  2249  00FC84  25                 	db	37
  2250  00FC85  34                 	db	52	;'4'
  2251  00FC86  2E                 	db	46
  2252  00FC87  33                 	db	51	;'3'
  2253  00FC88  66                 	db	102	;'f'
  2254  00FC89  2C                 	db	44
  2255  00FC8A  25                 	db	37
  2256  00FC8B  34                 	db	52	;'4'
  2257  00FC8C  2E                 	db	46
  2258  00FC8D  33                 	db	51	;'3'
  2259  00FC8E  66                 	db	102	;'f'
  2260  00FC8F  2C                 	db	44
  2261  00FC90  25                 	db	37
  2262  00FC91  34                 	db	52	;'4'
  2263  00FC92  2E                 	db	46
  2264  00FC93  33                 	db	51	;'3'
  2265  00FC94  66                 	db	102	;'f'
  2266  00FC95  2C                 	db	44
  2267  00FC96  25                 	db	37
  2268  00FC97  34                 	db	52	;'4'
  2269  00FC98  2E                 	db	46
  2270  00FC99  33                 	db	51	;'3'
  2271  00FC9A  66                 	db	102	;'f'
  2272  00FC9B  2C                 	db	44
  2273  00FC9C  25                 	db	37
  2274  00FC9D  34                 	db	52	;'4'
  2275  00FC9E  2E                 	db	46
  2276  00FC9F  33                 	db	51	;'3'
  2277  00FCA0  66                 	db	102	;'f'
  2278  00FCA1  2C                 	db	44
  2279  00FCA2  25                 	db	37
  2280  00FCA3  34                 	db	52	;'4'
  2281  00FCA4  2E                 	db	46
  2282  00FCA5  33                 	db	51	;'3'
  2283  00FCA6  66                 	db	102	;'f'
  2284  00FCA7  2C                 	db	44
  2285  00FCA8  25                 	db	37
  2286  00FCA9  34                 	db	52	;'4'
  2287  00FCAA  2E                 	db	46
  2288  00FCAB  33                 	db	51	;'3'
  2289  00FCAC  64                 	db	100	;'d'
  2290  00FCAD  2C                 	db	44
  2291  00FCAE  25                 	db	37
  2292  00FCAF  34                 	db	52	;'4'
  2293  00FCB0  2E                 	db	46
  2294  00FCB1  33                 	db	51	;'3'
  2295  00FCB2  64                 	db	100	;'d'
  2296  00FCB3  2C                 	db	44
  2297  00FCB4  25                 	db	37
  2298  00FCB5  32                 	db	50	;'2'
  2299  00FCB6  2E                 	db	46
  2300  00FCB7  36                 	db	54	;'6'
  2301  00FCB8  66                 	db	102	;'f'
  2302  00FCB9  0D                 	db	13
  2303  00FCBA  0A                 	db	10
  2304  00FCBB  00                 	db	0
  2305  00FCBC                     STR_17:
  2306                           
  2307                           ; BSR set to: 57
  2308  00FCBC  52                 	db	82	;'R'
  2309  00FCBD  31                 	db	49	;'1'
  2310  00FCBE  20                 	db	32
  2311  00FCBF  25                 	db	37
  2312  00FCC0  32                 	db	50	;'2'
  2313  00FCC1  2E                 	db	46
  2314  00FCC2  33                 	db	51	;'3'
  2315  00FCC3  66                 	db	102	;'f'
  2316  00FCC4  20                 	db	32
  2317  00FCC5  25                 	db	37
  2318  00FCC6  33                 	db	51	;'3'
  2319  00FCC7  2E                 	db	46
  2320  00FCC8  34                 	db	52	;'4'
  2321  00FCC9  66                 	db	102	;'f'
  2322  00FCCA  20                 	db	32
  2323  00FCCB  20                 	db	32
  2324  00FCCC  20                 	db	32
  2325  00FCCD  20                 	db	32
  2326  00FCCE  20                 	db	32
  2327  00FCCF  20                 	db	32
  2328  00FCD0  20                 	db	32
  2329  00FCD1  20                 	db	32
  2330  00FCD2  20                 	db	32
  2331  00FCD3  20                 	db	32
  2332  00FCD4  20                 	db	32
  2333  00FCD5  00                 	db	0
  2334  00FCD6                     STR_18:
  2335                           
  2336                           ; BSR set to: 57
  2337  00FCD6  52                 	db	82	;'R'
  2338  00FCD7  32                 	db	50	;'2'
  2339  00FCD8  20                 	db	32
  2340  00FCD9  25                 	db	37
  2341  00FCDA  32                 	db	50	;'2'
  2342  00FCDB  2E                 	db	46
  2343  00FCDC  33                 	db	51	;'3'
  2344  00FCDD  66                 	db	102	;'f'
  2345  00FCDE  20                 	db	32
  2346  00FCDF  25                 	db	37
  2347  00FCE0  33                 	db	51	;'3'
  2348  00FCE1  2E                 	db	46
  2349  00FCE2  34                 	db	52	;'4'
  2350  00FCE3  66                 	db	102	;'f'
  2351  00FCE4  20                 	db	32
  2352  00FCE5  20                 	db	32
  2353  00FCE6  20                 	db	32
  2354  00FCE7  20                 	db	32
  2355  00FCE8  20                 	db	32
  2356  00FCE9  20                 	db	32
  2357  00FCEA  20                 	db	32
  2358  00FCEB  20                 	db	32
  2359  00FCEC  20                 	db	32
  2360  00FCED  20                 	db	32
  2361  00FCEE  20                 	db	32
  2362  00FCEF  00                 	db	0
  2363  00FCF0                     
  2364                           ; BSR set to: 57
  2365  00FCF0  20                 	db	32
  2366  00FCF1  4D                 	db	77	;'M'
  2367  00FCF2  65                 	db	101	;'e'
  2368  00FCF3  73                 	db	115	;'s'
  2369  00FCF4  67                 	db	103	;'g'
  2370  00FCF5  20                 	db	32
  2371  00FCF6  25                 	db	37
  2372  00FCF7  64                 	db	100	;'d'
  2373  00FCF8  20                 	db	32
  2374  00FCF9  53                 	db	83	;'S'
  2375  00FCFA  74                 	db	116	;'t'
  2376  00FCFB  61                 	db	97	;'a'
  2377  00FCFC  63                 	db	99	;'c'
  2378  00FCFD  6B                 	db	107	;'k'
  2379  00FCFE  20                 	db	32
  2380  00FCFF  25                 	db	37
  2381  00FD00  64                 	db	100	;'d'
  2382  00FD01  20                 	db	32
  2383  00FD02  20                 	db	32
  2384  00FD03  20                 	db	32
  2385  00FD04  20                 	db	32
  2386  00FD05  20                 	db	32
  2387  00FD06  20                 	db	32
  2388  00FD07  00                 	db	0
  2389  00FD08                     STR_9:
  2390                           
  2391                           ; BSR set to: 57
  2392  00FD08  53                 	db	83	;'S'
  2393  00FD09  20                 	db	32
  2394  00FD0A  53                 	db	83	;'S'
  2395  00FD0B  25                 	db	37
  2396  00FD0C  63                 	db	99	;'c'
  2397  00FD0D  43                 	db	67	;'C'
  2398  00FD0E  20                 	db	32
  2399  00FD0F  25                 	db	37
  2400  00FD10  64                 	db	100	;'d'
  2401  00FD11  20                 	db	32
  2402  00FD12  25                 	db	37
  2403  00FD13  32                 	db	50	;'2'
  2404  00FD14  2E                 	db	46
  2405  00FD15  34                 	db	52	;'4'
  2406  00FD16  66                 	db	102	;'f'
  2407  00FD17  20                 	db	32
  2408  00FD18  20                 	db	32
  2409  00FD19  20                 	db	32
  2410  00FD1A  20                 	db	32
  2411  00FD1B  20                 	db	32
  2412  00FD1C  20                 	db	32
  2413  00FD1D  20                 	db	32
  2414  00FD1E  00                 	db	0
  2415  00FD1F                     STR_16:
  2416                           
  2417                           ; BSR set to: 57
  2418  00FD1F  45                 	db	69	;'E'
  2419  00FD20  53                 	db	83	;'S'
  2420  00FD21  52                 	db	82	;'R'
  2421  00FD22  20                 	db	32
  2422  00FD23  20                 	db	32
  2423  00FD24  25                 	db	37
  2424  00FD25  32                 	db	50	;'2'
  2425  00FD26  2E                 	db	46
  2426  00FD27  36                 	db	54	;'6'
  2427  00FD28  66                 	db	102	;'f'
  2428  00FD29  20                 	db	32
  2429  00FD2A  20                 	db	32
  2430  00FD2B  20                 	db	32
  2431  00FD2C  20                 	db	32
  2432  00FD2D  20                 	db	32
  2433  00FD2E  20                 	db	32
  2434  00FD2F  20                 	db	32
  2435  00FD30  20                 	db	32
  2436  00FD31  20                 	db	32
  2437  00FD32  20                 	db	32
  2438  00FD33  20                 	db	32
  2439  00FD34  00                 	db	0
  2440  00FD35                     STR_10:
  2441                           
  2442                           ; BSR set to: 57
  2443  00FD35  53                 	db	83	;'S'
  2444  00FD36  74                 	db	116	;'t'
  2445  00FD37  61                 	db	97	;'a'
  2446  00FD38  74                 	db	116	;'t'
  2447  00FD39  69                 	db	105	;'i'
  2448  00FD3A  63                 	db	99	;'c'
  2449  00FD3B  20                 	db	32
  2450  00FD3C  53                 	db	83	;'S'
  2451  00FD3D  4F                 	db	79	;'O'
  2452  00FD3E  43                 	db	67	;'C'
  2453  00FD3F  20                 	db	32
  2454  00FD40  25                 	db	37
  2455  00FD41  64                 	db	100	;'d'
  2456  00FD42  20                 	db	32
  2457  00FD43  20                 	db	32
  2458  00FD44  20                 	db	32
  2459  00FD45  20                 	db	32
  2460  00FD46  20                 	db	32
  2461  00FD47  20                 	db	32
  2462  00FD48  20                 	db	32
  2463  00FD49  20                 	db	32
  2464  00FD4A  00                 	db	0
  2465  00FD4B                     STR_11:
  2466                           
  2467                           ; BSR set to: 57
  2468  00FD4B  42                 	db	66	;'B'
  2469  00FD4C  61                 	db	97	;'a'
  2470  00FD4D  74                 	db	116	;'t'
  2471  00FD4E  74                 	db	116	;'t'
  2472  00FD4F  65                 	db	101	;'e'
  2473  00FD50  72                 	db	114	;'r'
  2474  00FD51  79                 	db	121	;'y'
  2475  00FD52  20                 	db	32
  2476  00FD53  41                 	db	65	;'A'
  2477  00FD54  68                 	db	104	;'h'
  2478  00FD55  20                 	db	32
  2479  00FD56  25                 	db	37
  2480  00FD57  33                 	db	51	;'3'
  2481  00FD58  2E                 	db	46
  2482  00FD59  32                 	db	50	;'2'
  2483  00FD5A  66                 	db	102	;'f'
  2484  00FD5B  20                 	db	32
  2485  00FD5C  20                 	db	32
  2486  00FD5D  20                 	db	32
  2487  00FD5E  20                 	db	32
  2488  00FD5F  20                 	db	32
  2489  00FD60  00                 	db	0
  2490  00FD61                     STR_15:
  2491                           
  2492                           ; BSR set to: 57
  2493  00FD61  43                 	db	67	;'C'
  2494  00FD62  68                 	db	104	;'h'
  2495  00FD63  65                 	db	101	;'e'
  2496  00FD64  63                 	db	99	;'c'
  2497  00FD65  6B                 	db	107	;'k'
  2498  00FD66  69                 	db	105	;'i'
  2499  00FD67  6E                 	db	110	;'n'
  2500  00FD68  67                 	db	103	;'g'
  2501  00FD69  20                 	db	32
  2502  00FD6A  25                 	db	37
  2503  00FD6B  63                 	db	99	;'c'
  2504  00FD6C  20                 	db	32
  2505  00FD6D  25                 	db	37
  2506  00FD6E  63                 	db	99	;'c'
  2507  00FD6F  20                 	db	32
  2508  00FD70  20                 	db	32
  2509  00FD71  20                 	db	32
  2510  00FD72  20                 	db	32
  2511  00FD73  20                 	db	32
  2512  00FD74  20                 	db	32
  2513  00FD75  00                 	db	0
  2514  00FD76                     STR_37:
  2515                           
  2516                           ; BSR set to: 57
  2517  00FD76  45                 	db	69	;'E'
  2518  00FD77  53                 	db	83	;'S'
  2519  00FD78  52                 	db	82	;'R'
  2520  00FD79  20                 	db	32
  2521  00FD7A  20                 	db	32
  2522  00FD7B  25                 	db	37
  2523  00FD7C  32                 	db	50	;'2'
  2524  00FD7D  2E                 	db	46
  2525  00FD7E  36                 	db	54	;'6'
  2526  00FD7F  66                 	db	102	;'f'
  2527  00FD80  20                 	db	32
  2528  00FD81  20                 	db	32
  2529  00FD82  20                 	db	32
  2530  00FD83  20                 	db	32
  2531  00FD84  20                 	db	32
  2532  00FD85  20                 	db	32
  2533  00FD86  20                 	db	32
  2534  00FD87  20                 	db	32
  2535  00FD88  20                 	db	32
  2536  00FD89  00                 	db	0
  2537  00FD8A                     STR_36:
  2538                           
  2539                           ; BSR set to: 57
  2540  00FD8A  53                 	db	83	;'S'
  2541  00FD8B  25                 	db	37
  2542  00FD8C  63                 	db	99	;'c'
  2543  00FD8D  43                 	db	67	;'C'
  2544  00FD8E  20                 	db	32
  2545  00FD8F  25                 	db	37
  2546  00FD90  64                 	db	100	;'d'
  2547  00FD91  20                 	db	32
  2548  00FD92  52                 	db	82	;'R'
  2549  00FD93  55                 	db	85	;'U'
  2550  00FD94  4E                 	db	78	;'N'
  2551  00FD95  20                 	db	32
  2552  00FD96  25                 	db	37
  2553  00FD97  64                 	db	100	;'d'
  2554  00FD98  20                 	db	32
  2555  00FD99  20                 	db	32
  2556  00FD9A  20                 	db	32
  2557  00FD9B  20                 	db	32
  2558  00FD9C  20                 	db	32
  2559  00FD9D  00                 	db	0
  2560  00FD9E                     STR_34:
  2561                           
  2562                           ; BSR set to: 57
  2563  00FD9E  42                 	db	66	;'B'
  2564  00FD9F  41                 	db	65	;'A'
  2565  00FDA0  54                 	db	84	;'T'
  2566  00FDA1  54                 	db	84	;'T'
  2567  00FDA2  20                 	db	32
  2568  00FDA3  50                 	db	80	;'P'
  2569  00FDA4  57                 	db	87	;'W'
  2570  00FDA5  52                 	db	82	;'R'
  2571  00FDA6  20                 	db	32
  2572  00FDA7  25                 	db	37
  2573  00FDA8  33                 	db	51	;'3'
  2574  00FDA9  2E                 	db	46
  2575  00FDAA  32                 	db	50	;'2'
  2576  00FDAB  66                 	db	102	;'f'
  2577  00FDAC  20                 	db	32
  2578  00FDAD  20                 	db	32
  2579  00FDAE  20                 	db	32
  2580  00FDAF  20                 	db	32
  2581  00FDB0  20                 	db	32
  2582  00FDB1  00                 	db	0
  2583  00FDB2                     STR_38:
  2584                           
  2585                           ; BSR set to: 57
  2586  00FDB2  52                 	db	82	;'R'
  2587  00FDB3  31                 	db	49	;'1'
  2588  00FDB4  20                 	db	32
  2589  00FDB5  25                 	db	37
  2590  00FDB6  32                 	db	50	;'2'
  2591  00FDB7  2E                 	db	46
  2592  00FDB8  33                 	db	51	;'3'
  2593  00FDB9  66                 	db	102	;'f'
  2594  00FDBA  20                 	db	32
  2595  00FDBB  25                 	db	37
  2596  00FDBC  33                 	db	51	;'3'
  2597  00FDBD  2E                 	db	46
  2598  00FDBE  34                 	db	52	;'4'
  2599  00FDBF  66                 	db	102	;'f'
  2600  00FDC0  20                 	db	32
  2601  00FDC1  20                 	db	32
  2602  00FDC2  20                 	db	32
  2603  00FDC3  20                 	db	32
  2604  00FDC4  20                 	db	32
  2605  00FDC5  00                 	db	0
  2606  00FDC6                     STR_39:
  2607                           
  2608                           ; BSR set to: 57
  2609  00FDC6  52                 	db	82	;'R'
  2610  00FDC7  32                 	db	50	;'2'
  2611  00FDC8  20                 	db	32
  2612  00FDC9  25                 	db	37
  2613  00FDCA  32                 	db	50	;'2'
  2614  00FDCB  2E                 	db	46
  2615  00FDCC  33                 	db	51	;'3'
  2616  00FDCD  66                 	db	102	;'f'
  2617  00FDCE  20                 	db	32
  2618  00FDCF  25                 	db	37
  2619  00FDD0  33                 	db	51	;'3'
  2620  00FDD1  2E                 	db	46
  2621  00FDD2  34                 	db	52	;'4'
  2622  00FDD3  66                 	db	102	;'f'
  2623  00FDD4  20                 	db	32
  2624  00FDD5  20                 	db	32
  2625  00FDD6  20                 	db	32
  2626  00FDD7  20                 	db	32
  2627  00FDD8  20                 	db	32
  2628  00FDD9  00                 	db	0
  2629  00FDDA                     STR_35:
  2630                           
  2631                           ; BSR set to: 57
  2632  00FDDA  42                 	db	66	;'B'
  2633  00FDDB  41                 	db	65	;'A'
  2634  00FDDC  48                 	db	72	;'H'
  2635  00FDDD  20                 	db	32
  2636  00FDDE  25                 	db	37
  2637  00FDDF  33                 	db	51	;'3'
  2638  00FDE0  2E                 	db	46
  2639  00FDE1  32                 	db	50	;'2'
  2640  00FDE2  66                 	db	102	;'f'
  2641  00FDE3  20                 	db	32
  2642  00FDE4  50                 	db	80	;'P'
  2643  00FDE5  25                 	db	37
  2644  00FDE6  33                 	db	51	;'3'
  2645  00FDE7  2E                 	db	46
  2646  00FDE8  32                 	db	50	;'2'
  2647  00FDE9  66                 	db	102	;'f'
  2648  00FDEA  20                 	db	32
  2649  00FDEB  20                 	db	32
  2650  00FDEC  20                 	db	32
  2651  00FDED  00                 	db	0
  2652  00FDEE                     STR_58:
  2653                           
  2654                           ; BSR set to: 57
  2655  00FDEE  20                 	db	32
  2656  00FDEF  20                 	db	32
  2657  00FDF0  20                 	db	32
  2658  00FDF1  20                 	db	32
  2659  00FDF2  20                 	db	32
  2660  00FDF3  20                 	db	32
  2661  00FDF4  20                 	db	32
  2662  00FDF5  20                 	db	32
  2663  00FDF6  20                 	db	32
  2664  00FDF7  20                 	db	32
  2665  00FDF8  20                 	db	32
  2666  00FDF9  20                 	db	32
  2667  00FDFA  20                 	db	32
  2668  00FDFB  20                 	db	32
  2669  00FDFC  20                 	db	32
  2670  00FDFD  20                 	db	32
  2671  00FDFE  20                 	db	32
  2672  00FDFF  20                 	db	32
  2673  00FE00  00                 	db	0
  2674  00FE01                     STR_48:
  2675                           
  2676                           ; BSR set to: 57
  2677  00FE01  48                 	db	72	;'H'
  2678  00FE02  45                 	db	69	;'E'
  2679  00FE03  4C                 	db	76	;'L'
  2680  00FE04  50                 	db	80	;'P'
  2681  00FE05  20                 	db	32
  2682  00FE06  25                 	db	37
  2683  00FE07  73                 	db	115	;'s'
  2684  00FE08  20                 	db	32
  2685  00FE09  20                 	db	32
  2686  00FE0A  20                 	db	32
  2687  00FE0B  20                 	db	32
  2688  00FE0C  20                 	db	32
  2689  00FE0D  20                 	db	32
  2690  00FE0E  20                 	db	32
  2691  00FE0F  20                 	db	32
  2692  00FE10  20                 	db	32
  2693  00FE11  20                 	db	32
  2694  00FE12  20                 	db	32
  2695  00FE13  00                 	db	0
  2696  00FE14                     
  2697                           ; BSR set to: 57
  2698  00FE14  44                 	db	68	;'D'
  2699  00FE15  49                 	db	73	;'I'
  2700  00FE16  53                 	db	83	;'S'
  2701  00FE17  50                 	db	80	;'P'
  2702  00FE18  4C                 	db	76	;'L'
  2703  00FE19  41                 	db	65	;'A'
  2704  00FE1A  59                 	db	89	;'Y'
  2705  00FE1B  20                 	db	32
  2706  00FE1C  25                 	db	37
  2707  00FE1D  73                 	db	115	;'s'
  2708  00FE1E  20                 	db	32
  2709  00FE1F  20                 	db	32
  2710  00FE20  20                 	db	32
  2711  00FE21  20                 	db	32
  2712  00FE22  20                 	db	32
  2713  00FE23  20                 	db	32
  2714  00FE24  20                 	db	32
  2715  00FE25  20                 	db	32
  2716  00FE26  00                 	db	0
  2717  00FE27                     STR_31:
  2718                           
  2719                           ; BSR set to: 57
  2720  00FE27  42                 	db	66	;'B'
  2721  00FE28  41                 	db	65	;'A'
  2722  00FE29  54                 	db	84	;'T'
  2723  00FE2A  20                 	db	32
  2724  00FE2B  49                 	db	73	;'I'
  2725  00FE2C  57                 	db	87	;'W'
  2726  00FE2D  48                 	db	72	;'H'
  2727  00FE2E  20                 	db	32
  2728  00FE2F  25                 	db	37
  2729  00FE30  34                 	db	52	;'4'
  2730  00FE31  2E                 	db	46
  2731  00FE32  31                 	db	49	;'1'
  2732  00FE33  66                 	db	102	;'f'
  2733  00FE34  20                 	db	32
  2734  00FE35  20                 	db	32
  2735  00FE36  20                 	db	32
  2736  00FE37  20                 	db	32
  2737  00FE38  20                 	db	32
  2738  00FE39  00                 	db	0
  2739  00FE3A                     STR_32:
  2740                           
  2741                           ; BSR set to: 57
  2742  00FE3A  42                 	db	66	;'B'
  2743  00FE3B  41                 	db	65	;'A'
  2744  00FE3C  54                 	db	84	;'T'
  2745  00FE3D  20                 	db	32
  2746  00FE3E  4F                 	db	79	;'O'
  2747  00FE3F  57                 	db	87	;'W'
  2748  00FE40  48                 	db	72	;'H'
  2749  00FE41  20                 	db	32
  2750  00FE42  25                 	db	37
  2751  00FE43  34                 	db	52	;'4'
  2752  00FE44  2E                 	db	46
  2753  00FE45  31                 	db	49	;'1'
  2754  00FE46  66                 	db	102	;'f'
  2755  00FE47  20                 	db	32
  2756  00FE48  20                 	db	32
  2757  00FE49  20                 	db	32
  2758  00FE4A  20                 	db	32
  2759  00FE4B  20                 	db	32
  2760  00FE4C  00                 	db	0
  2761  00FE4D                     STR_33:
  2762                           
  2763                           ; BSR set to: 57
  2764  00FE4D  42                 	db	66	;'B'
  2765  00FE4E  41                 	db	65	;'A'
  2766  00FE4F  54                 	db	84	;'T'
  2767  00FE50  20                 	db	32
  2768  00FE51  54                 	db	84	;'T'
  2769  00FE52  57                 	db	87	;'W'
  2770  00FE53  48                 	db	72	;'H'
  2771  00FE54  20                 	db	32
  2772  00FE55  25                 	db	37
  2773  00FE56  34                 	db	52	;'4'
  2774  00FE57  2E                 	db	46
  2775  00FE58  31                 	db	49	;'1'
  2776  00FE59  66                 	db	102	;'f'
  2777  00FE5A  20                 	db	32
  2778  00FE5B  20                 	db	32
  2779  00FE5C  20                 	db	32
  2780  00FE5D  20                 	db	32
  2781  00FE5E  20                 	db	32
  2782  00FE5F  00                 	db	0
  2783  00FE60                     STR_25:
  2784                           
  2785                           ; BSR set to: 57
  2786  00FE60  50                 	db	80	;'P'
  2787  00FE61  56                 	db	86	;'V'
  2788  00FE62  20                 	db	32
  2789  00FE63  20                 	db	32
  2790  00FE64  20                 	db	32
  2791  00FE65  57                 	db	87	;'W'
  2792  00FE66  48                 	db	72	;'H'
  2793  00FE67  20                 	db	32
  2794  00FE68  25                 	db	37
  2795  00FE69  33                 	db	51	;'3'
  2796  00FE6A  2E                 	db	46
  2797  00FE6B  32                 	db	50	;'2'
  2798  00FE6C  66                 	db	102	;'f'
  2799  00FE6D  20                 	db	32
  2800  00FE6E  20                 	db	32
  2801  00FE6F  20                 	db	32
  2802  00FE70  20                 	db	32
  2803  00FE71  20                 	db	32
  2804  00FE72  00                 	db	0
  2805  00FE73                     STR_27:
  2806                           
  2807                           ; BSR set to: 57
  2808  00FE73  49                 	db	73	;'I'
  2809  00FE74  4E                 	db	78	;'N'
  2810  00FE75  56                 	db	86	;'V'
  2811  00FE76  20                 	db	32
  2812  00FE77  20                 	db	32
  2813  00FE78  57                 	db	87	;'W'
  2814  00FE79  48                 	db	72	;'H'
  2815  00FE7A  20                 	db	32
  2816  00FE7B  25                 	db	37
  2817  00FE7C  33                 	db	51	;'3'
  2818  00FE7D  2E                 	db	46
  2819  00FE7E  32                 	db	50	;'2'
  2820  00FE7F  66                 	db	102	;'f'
  2821  00FE80  20                 	db	32
  2822  00FE81  20                 	db	32
  2823  00FE82  20                 	db	32
  2824  00FE83  20                 	db	32
  2825  00FE84  20                 	db	32
  2826  00FE85  00                 	db	0
  2827  00FE86                     STR_26:
  2828                           
  2829                           ; BSR set to: 57
  2830  00FE86  4C                 	db	76	;'L'
  2831  00FE87  4F                 	db	79	;'O'
  2832  00FE88  41                 	db	65	;'A'
  2833  00FE89  44                 	db	68	;'D'
  2834  00FE8A  20                 	db	32
  2835  00FE8B  57                 	db	87	;'W'
  2836  00FE8C  48                 	db	72	;'H'
  2837  00FE8D  20                 	db	32
  2838  00FE8E  25                 	db	37
  2839  00FE8F  33                 	db	51	;'3'
  2840  00FE90  2E                 	db	46
  2841  00FE91  32                 	db	50	;'2'
  2842  00FE92  66                 	db	102	;'f'
  2843  00FE93  20                 	db	32
  2844  00FE94  20                 	db	32
  2845  00FE95  20                 	db	32
  2846  00FE96  20                 	db	32
  2847  00FE97  20                 	db	32
  2848  00FE98  00                 	db	0
  2849  00FE99                     STR_22:
  2850                           
  2851                           ; BSR set to: 57
  2852  00FE99  50                 	db	80	;'P'
  2853  00FE9A  56                 	db	86	;'V'
  2854  00FE9B  20                 	db	32
  2855  00FE9C  20                 	db	32
  2856  00FE9D  20                 	db	32
  2857  00FE9E  50                 	db	80	;'P'
  2858  00FE9F  57                 	db	87	;'W'
  2859  00FEA0  52                 	db	82	;'R'
  2860  00FEA1  20                 	db	32
  2861  00FEA2  25                 	db	37
  2862  00FEA3  33                 	db	51	;'3'
  2863  00FEA4  2E                 	db	46
  2864  00FEA5  32                 	db	50	;'2'
  2865  00FEA6  66                 	db	102	;'f'
  2866  00FEA7  20                 	db	32
  2867  00FEA8  20                 	db	32
  2868  00FEA9  20                 	db	32
  2869  00FEAA  20                 	db	32
  2870  00FEAB  00                 	db	0
  2871  00FEAC                     STR_24:
  2872                           
  2873                           ; BSR set to: 57
  2874  00FEAC  49                 	db	73	;'I'
  2875  00FEAD  4E                 	db	78	;'N'
  2876  00FEAE  56                 	db	86	;'V'
  2877  00FEAF  20                 	db	32
  2878  00FEB0  20                 	db	32
  2879  00FEB1  50                 	db	80	;'P'
  2880  00FEB2  57                 	db	87	;'W'
  2881  00FEB3  52                 	db	82	;'R'
  2882  00FEB4  20                 	db	32
  2883  00FEB5  25                 	db	37
  2884  00FEB6  33                 	db	51	;'3'
  2885  00FEB7  2E                 	db	46
  2886  00FEB8  32                 	db	50	;'2'
  2887  00FEB9  66                 	db	102	;'f'
  2888  00FEBA  20                 	db	32
  2889  00FEBB  20                 	db	32
  2890  00FEBC  20                 	db	32
  2891  00FEBD  20                 	db	32
  2892  00FEBE  00                 	db	0
  2893  00FEBF                     STR_23:
  2894                           
  2895                           ; BSR set to: 57
  2896  00FEBF  4C                 	db	76	;'L'
  2897  00FEC0  4F                 	db	79	;'O'
  2898  00FEC1  41                 	db	65	;'A'
  2899  00FEC2  44                 	db	68	;'D'
  2900  00FEC3  20                 	db	32
  2901  00FEC4  50                 	db	80	;'P'
  2902  00FEC5  57                 	db	87	;'W'
  2903  00FEC6  52                 	db	82	;'R'
  2904  00FEC7  20                 	db	32
  2905  00FEC8  25                 	db	37
  2906  00FEC9  33                 	db	51	;'3'
  2907  00FECA  2E                 	db	46
  2908  00FECB  32                 	db	50	;'2'
  2909  00FECC  66                 	db	102	;'f'
  2910  00FECD  20                 	db	32
  2911  00FECE  20                 	db	32
  2912  00FECF  20                 	db	32
  2913  00FED0  20                 	db	32
  2914  00FED1  00                 	db	0
  2915  00FED2                     STR_29:
  2916                           
  2917                           ; BSR set to: 57
  2918  00FED2  42                 	db	66	;'B'
  2919  00FED3  56                 	db	86	;'V'
  2920  00FED4  20                 	db	32
  2921  00FED5  25                 	db	37
  2922  00FED6  32                 	db	50	;'2'
  2923  00FED7  2E                 	db	46
  2924  00FED8  32                 	db	50	;'2'
  2925  00FED9  66                 	db	102	;'f'
  2926  00FEDA  20                 	db	32
  2927  00FEDB  42                 	db	66	;'B'
  2928  00FEDC  41                 	db	65	;'A'
  2929  00FEDD  20                 	db	32
  2930  00FEDE  25                 	db	37
  2931  00FEDF  32                 	db	50	;'2'
  2932  00FEE0  2E                 	db	46
  2933  00FEE1  32                 	db	50	;'2'
  2934  00FEE2  66                 	db	102	;'f'
  2935  00FEE3  20                 	db	32
  2936  00FEE4  00                 	db	0
  2937  00FEE5                     STR_30:
  2938                           
  2939                           ; BSR set to: 57
  2940  00FEE5  43                 	db	67	;'C'
  2941  00FEE6  56                 	db	86	;'V'
  2942  00FEE7  20                 	db	32
  2943  00FEE8  25                 	db	37
  2944  00FEE9  32                 	db	50	;'2'
  2945  00FEEA  2E                 	db	46
  2946  00FEEB  32                 	db	50	;'2'
  2947  00FEEC  66                 	db	102	;'f'
  2948  00FEED  20                 	db	32
  2949  00FEEE  4C                 	db	76	;'L'
  2950  00FEEF  41                 	db	65	;'A'
  2951  00FEF0  20                 	db	32
  2952  00FEF1  25                 	db	37
  2953  00FEF2  32                 	db	50	;'2'
  2954  00FEF3  2E                 	db	46
  2955  00FEF4  32                 	db	50	;'2'
  2956  00FEF5  66                 	db	102	;'f'
  2957  00FEF6  20                 	db	32
  2958  00FEF7  00                 	db	0
  2959  00FEF8                     STR_28:
  2960                           
  2961                           ; BSR set to: 57
  2962  00FEF8  50                 	db	80	;'P'
  2963  00FEF9  56                 	db	86	;'V'
  2964  00FEFA  20                 	db	32
  2965  00FEFB  25                 	db	37
  2966  00FEFC  32                 	db	50	;'2'
  2967  00FEFD  2E                 	db	46
  2968  00FEFE  32                 	db	50	;'2'
  2969  00FEFF  66                 	db	102	;'f'
  2970  00FF00  20                 	db	32
  2971  00FF01  50                 	db	80	;'P'
  2972  00FF02  41                 	db	65	;'A'
  2973  00FF03  20                 	db	32
  2974  00FF04  25                 	db	37
  2975  00FF05  32                 	db	50	;'2'
  2976  00FF06  2E                 	db	46
  2977  00FF07  32                 	db	50	;'2'
  2978  00FF08  66                 	db	102	;'f'
  2979  00FF09  20                 	db	32
  2980  00FF0A  00                 	db	0
  2981  00FF0B                     STR_8:
  2982                           
  2983                           ; BSR set to: 57
  2984  00FF0B  42                 	db	66	;'B'
  2985  00FF0C  56                 	db	86	;'V'
  2986  00FF0D  20                 	db	32
  2987  00FF0E  25                 	db	37
  2988  00FF0F  32                 	db	50	;'2'
  2989  00FF10  2E                 	db	46
  2990  00FF11  34                 	db	52	;'4'
  2991  00FF12  66                 	db	102	;'f'
  2992  00FF13  20                 	db	32
  2993  00FF14  20                 	db	32
  2994  00FF15  20                 	db	32
  2995  00FF16  20                 	db	32
  2996  00FF17  20                 	db	32
  2997  00FF18  20                 	db	32
  2998  00FF19  20                 	db	32
  2999  00FF1A  20                 	db	32
  3000  00FF1B  20                 	db	32
  3001  00FF1C  00                 	db	0
  3002  00FF1D                     STR_4:
  3003                           
  3004                           ; BSR set to: 57
  3005  00FF1D  20                 	db	32
  3006  00FF1E  4E                 	db	78	;'N'
  3007  00FF1F  53                 	db	83	;'S'
  3008  00FF20  41                 	db	65	;'A'
  3009  00FF21  53                 	db	83	;'S'
  3010  00FF22  50                 	db	80	;'P'
  3011  00FF23  4F                 	db	79	;'O'
  3012  00FF24  4F                 	db	79	;'O'
  3013  00FF25  4B                 	db	75	;'K'
  3014  00FF26  20                 	db	32
  3015  00FF27  20                 	db	32
  3016  00FF28  20                 	db	32
  3017  00FF29  20                 	db	32
  3018  00FF2A  20                 	db	32
  3019  00FF2B  20                 	db	32
  3020  00FF2C  20                 	db	32
  3021  00FF2D  00                 	db	0
  3022  00FF2E                     STR_12:
  3023                           
  3024                           ; BSR set to: 57
  3025  00FF2E  42                 	db	66	;'B'
  3026  00FF2F  61                 	db	97	;'a'
  3027  00FF30  74                 	db	116	;'t'
  3028  00FF31  74                 	db	116	;'t'
  3029  00FF32  65                 	db	101	;'e'
  3030  00FF33  72                 	db	114	;'r'
  3031  00FF34  79                 	db	121	;'y'
  3032  00FF35  20                 	db	32
  3033  00FF36  45                 	db	69	;'E'
  3034  00FF37  53                 	db	83	;'S'
  3035  00FF38  52                 	db	82	;'R'
  3036  00FF39  20                 	db	32
  3037  00FF3A  20                 	db	32
  3038  00FF3B  20                 	db	32
  3039  00FF3C  20                 	db	32
  3040  00FF3D  20                 	db	32
  3041  00FF3E  00                 	db	0
  3042  00FF3F                     STR_13:
  3043                           
  3044                           ; BSR set to: 57
  3045  00FF3F  43                 	db	67	;'C'
  3046  00FF40  61                 	db	97	;'a'
  3047  00FF41  6C                 	db	108	;'l'
  3048  00FF42  63                 	db	99	;'c'
  3049  00FF43  75                 	db	117	;'u'
  3050  00FF44  6C                 	db	108	;'l'
  3051  00FF45  61                 	db	97	;'a'
  3052  00FF46  74                 	db	116	;'t'
  3053  00FF47  69                 	db	105	;'i'
  3054  00FF48  6F                 	db	111	;'o'
  3055  00FF49  6E                 	db	110	;'n'
  3056  00FF4A  20                 	db	32
  3057  00FF4B  20                 	db	32
  3058  00FF4C  20                 	db	32
  3059  00FF4D  20                 	db	32
  3060  00FF4E  20                 	db	32
  3061  00FF4F  00                 	db	0
  3062  00FF50                     STR_1:
  3063                           
  3064                           ; BSR set to: 57
  3065  00FF50  20                 	db	32
  3066  00FF51  4D                 	db	77	;'M'
  3067  00FF52  42                 	db	66	;'B'
  3068  00FF53  4D                 	db	77	;'M'
  3069  00FF54  43                 	db	67	;'C'
  3070  00FF55  20                 	db	32
  3071  00FF56  53                 	db	83	;'S'
  3072  00FF57  4F                 	db	79	;'O'
  3073  00FF58  4C                 	db	76	;'L'
  3074  00FF59  41                 	db	65	;'A'
  3075  00FF5A  52                 	db	82	;'R'
  3076  00FF5B  4D                 	db	77	;'M'
  3077  00FF5C  4F                 	db	79	;'O'
  3078  00FF5D  4E                 	db	78	;'N'
  3079  00FF5E  20                 	db	32
  3080  00FF5F  20                 	db	32
  3081  00FF60  00                 	db	0
  3082  00FF61                     STR_21:
  3083                           
  3084                           ; BSR set to: 57
  3085  00FF61  25                 	db	37
  3086  00FF62  64                 	db	100	;'d'
  3087  00FF63  20                 	db	32
  3088  00FF64  25                 	db	37
  3089  00FF65  32                 	db	50	;'2'
  3090  00FF66  2E                 	db	46
  3091  00FF67  34                 	db	52	;'4'
  3092  00FF68  66                 	db	102	;'f'
  3093  00FF69  2C                 	db	44
  3094  00FF6A  20                 	db	32
  3095  00FF6B  25                 	db	37
  3096  00FF6C  64                 	db	100	;'d'
  3097  00FF6D  20                 	db	32
  3098  00FF6E  20                 	db	32
  3099  00FF6F  20                 	db	32
  3100  00FF70  23                 	db	35
  3101  00FF71  00                 	db	0
  3102  00FF72                     STR_14:
  3103                           
  3104                           ; BSR set to: 57
  3105  00FF72  43                 	db	67	;'C'
  3106  00FF73  68                 	db	104	;'h'
  3107  00FF74  65                 	db	101	;'e'
  3108  00FF75  63                 	db	99	;'c'
  3109  00FF76  6B                 	db	107	;'k'
  3110  00FF77  20                 	db	32
  3111  00FF78  33                 	db	51	;'3'
  3112  00FF79  30                 	db	48	;'0'
  3113  00FF7A  20                 	db	32
  3114  00FF7B  73                 	db	115	;'s'
  3115  00FF7C  65                 	db	101	;'e'
  3116  00FF7D  63                 	db	99	;'c'
  3117  00FF7E  6F                 	db	111	;'o'
  3118  00FF7F  6E                 	db	110	;'n'
  3119  00FF80  64                 	db	100	;'d'
  3120  00FF81  73                 	db	115	;'s'
  3121  00FF82  00                 	db	0
  3122  00FF83                     STR_19:
  3123                           
  3124                           ; BSR set to: 57
  3125  00FF83  25                 	db	37
  3126  00FF84  64                 	db	100	;'d'
  3127  00FF85  20                 	db	32
  3128  00FF86  25                 	db	37
  3129  00FF87  32                 	db	50	;'2'
  3130  00FF88  2E                 	db	46
  3131  00FF89  34                 	db	52	;'4'
  3132  00FF8A  66                 	db	102	;'f'
  3133  00FF8B  20                 	db	32
  3134  00FF8C  20                 	db	32
  3135  00FF8D  20                 	db	32
  3136  00FF8E  25                 	db	37
  3137  00FF8F  64                 	db	100	;'d'
  3138  00FF90  20                 	db	32
  3139  00FF91  20                 	db	32
  3140  00FF92  00                 	db	0
  3141  00FF93                     STR_52:
  3142                           
  3143                           ; BSR set to: 57
  3144  00FF93  76                 	db	118	;'v'
  3145  00FF94  74                 	db	116	;'t'
  3146  00FF95  65                 	db	101	;'e'
  3147  00FF96  72                 	db	114	;'r'
  3148  00FF97  6D                 	db	109	;'m'
  3149  00FF98  20                 	db	32
  3150  00FF99  25                 	db	37
  3151  00FF9A  78                 	db	120	;'x'
  3152  00FF9B  3A                 	db	58	;':'
  3153  00FF9C  25                 	db	37
  3154  00FF9D  78                 	db	120	;'x'
  3155  00FF9E  20                 	db	32
  3156  00FF9F  20                 	db	32
  3157  00FFA0  20                 	db	32
  3158  00FFA1  00                 	db	0
  3159  00FFA2                     STR_2:
  3160                           
  3161                           ; BSR set to: 57
  3162  00FFA2  20                 	db	32
  3163  00FFA3  56                 	db	86	;'V'
  3164  00FFA4  65                 	db	101	;'e'
  3165  00FFA5  72                 	db	114	;'r'
  3166  00FFA6  73                 	db	115	;'s'
  3167  00FFA7  69                 	db	105	;'i'
  3168  00FFA8  6F                 	db	111	;'o'
  3169  00FFA9  6E                 	db	110	;'n'
  3170  00FFAA  20                 	db	32
  3171  00FFAB  25                 	db	37
  3172  00FFAC  73                 	db	115	;'s'
  3173  00FFAD  20                 	db	32
  3174  00FFAE  20                 	db	32
  3175  00FFAF  20                 	db	32
  3176  00FFB0  00                 	db	0
  3177  00FFB1                     STR_46:
  3178                           
  3179                           ; BSR set to: 57
  3180  00FFB1  44                 	db	68	;'D'
  3181  00FFB2  65                 	db	101	;'e'
  3182  00FFB3  63                 	db	99	;'c'
  3183  00FFB4  20                 	db	32
  3184  00FFB5  32                 	db	50	;'2'
  3185  00FFB6  30                 	db	48	;'0'
  3186  00FFB7  20                 	db	32
  3187  00FFB8  32                 	db	50	;'2'
  3188  00FFB9  30                 	db	48	;'0'
  3189  00FFBA  31                 	db	49	;'1'
  3190  00FFBB  39                 	db	57	;'9'
  3191  00FFBC  00                 	db	0
  3192  00FFBD                     STR_50:
  3193                           
  3194                           ; BSR set to: 57
  3195  00FFBD  25                 	db	37
  3196  00FFBE  73                 	db	115	;'s'
  3197  00FFBF  20                 	db	32
  3198  00FFC0  20                 	db	32
  3199  00FFC1  20                 	db	32
  3200  00FFC2  20                 	db	32
  3201  00FFC3  20                 	db	32
  3202  00FFC4  20                 	db	32
  3203  00FFC5  20                 	db	32
  3204  00FFC6  00                 	db	0
  3205  00FFC7                     STR_47:
  3206                           
  3207                           ; BSR set to: 57
  3208  00FFC7  31                 	db	49	;'1'
  3209  00FFC8  38                 	db	56	;'8'
  3210  00FFC9  3A                 	db	58	;':'
  3211  00FFCA  34                 	db	52	;'4'
  3212  00FFCB  38                 	db	56	;'8'
  3213  00FFCC  3A                 	db	58	;':'
  3214  00FFCD  31                 	db	49	;'1'
  3215  00FFCE  33                 	db	51	;'3'
  3216  00FFCF  00                 	db	0
  3217  00FFD0                     STR_3:
  3218                           
  3219                           ; BSR set to: 57
  3220  00FFD0  31                 	db	49	;'1'
  3221  00FFD1  2E                 	db	46
  3222  00FFD2  30                 	db	48	;'0'
  3223  00FFD3  30                 	db	48	;'0'
  3224  00FFD4  37                 	db	55	;'7'
  3225  00FFD5  00                 	db	0
  3226  00FFD6                     STR_66:
  3227                           
  3228                           ; BSR set to: 57
  3229  00FFD6  49                 	db	73	;'I'
  3230  00FFD7  4E                 	db	78	;'N'
  3231  00FFD8  46                 	db	70	;'F'
  3232  00FFD9  00                 	db	0
  3233  00FFDA                     STR_70:
  3234                           
  3235                           ; BSR set to: 57
  3236  00FFDA  4E                 	db	78	;'N'
  3237  00FFDB  41                 	db	65	;'A'
  3238  00FFDC  4E                 	db	78	;'N'
  3239  00FFDD  00                 	db	0
  3240  00FFDE                     STR_67:
  3241                           
  3242                           ; BSR set to: 57
  3243  00FFDE  69                 	db	105	;'i'
  3244  00FFDF  6E                 	db	110	;'n'
  3245  00FFE0  66                 	db	102	;'f'
  3246  00FFE1  00                 	db	0
  3247  00FFE2                     STR_71:
  3248                           
  3249                           ; BSR set to: 57
  3250  00FFE2  6E                 	db	110	;'n'
  3251  00FFE3  61                 	db	97	;'a'
  3252  00FFE4  6E                 	db	110	;'n'
  3253  00FFE5  00                 	db	0
  3254  00FFE6                     STR_97:
  3255                           
  3256                           ; BSR set to: 57
  3257  00FFE6  6C                 	db	108	;'l'
  3258  00FFE7  58                 	db	88	;'X'
  3259  00FFE8  00                 	db	0
  3260  00FFE9                     STR_74:
  3261                           
  3262                           ; BSR set to: 57
  3263  00FFE9  6C                 	db	108	;'l'
  3264  00FFEA  64                 	db	100	;'d'
  3265  00FFEB  00                 	db	0
  3266  00FFEC                     STR_83:
  3267                           
  3268                           ; BSR set to: 57
  3269  00FFEC  6C                 	db	108	;'l'
  3270  00FFED  66                 	db	102	;'f'
  3271  00FFEE  00                 	db	0
  3272  00FFEF                     STR_78:
  3273                           
  3274                           ; BSR set to: 57
  3275  00FFEF  6C                 	db	108	;'l'
  3276  00FFF0  69                 	db	105	;'i'
  3277  00FFF1  00                 	db	0
  3278  00FFF2                     STR_88:
  3279                           
  3280                           ; BSR set to: 57
  3281  00FFF2  6C                 	db	108	;'l'
  3282  00FFF3  75                 	db	117	;'u'
  3283  00FFF4  00                 	db	0
  3284  00FFF5                     STR_93:
  3285                           
  3286                           ; BSR set to: 57
  3287  00FFF5  6C                 	db	108	;'l'
  3288  00FFF6  78                 	db	120	;'x'
  3289  00FFF7  00                 	db	0
  3290  00FFF8                     STR_44:
  3291                           
  3292                           ; BSR set to: 57
  3293  00FFF8  25                 	db	37
  3294  00FFF9  63                 	db	99	;'c'
  3295  00FFFA  00                 	db	0
  3296  00FFFB                     STR_43:
  3297                           
  3298                           ; BSR set to: 57
  3299  00FFFB  25                 	db	37
  3300  00FFFC  73                 	db	115	;'s'
  3301  00FFFD  00                 	db	0
  3302  0000                     
  3303                           ; #config settings
  3304  00FFFE  00                 	db	0	; dummy byte at the end
  3305  0000                     
  3306                           	psect	cinit
  3307  019418                     __pcinit:
  3308                           	opt callstack 0
  3309  019418                     start_initialization:
  3310                           	opt callstack 0
  3311  019418                     __initialization:
  3312                           	opt callstack 0
  3313                           
  3314                           ; Initialize objects allocated to BIGRAM (512 bytes)
  3315                           ; load TBLPTR registers with __pidataBIGRAM
  3316  019418  0EC8               	movlw	low __pidataBIGRAM
  3317  01941A  6EF6               	movwf	tblptrl,c
  3318  01941C  0E7B               	movlw	high __pidataBIGRAM
  3319  01941E  6EF7               	movwf	tblptrh,c
  3320  019420  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3321  019422  6EF8               	movwf	tblptru,c
  3322  019424  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  3323  019428  EE20 F200          	lfsr	2,512
  3324  01942C                     copy_data0:
  3325  01942C  0009               	tblrd		*+
  3326  01942E  006F FFD7 FFEE     	movff	tablat,postinc0
  3327  019434  50DD               	movf	postdec2,w,c
  3328  019436  50D9               	movf	fsr2l,w,c
  3329  019438  E1F9               	bnz	copy_data0
  3330  01943A  50DA               	movf	fsr2h,w,c
  3331  01943C  E1F7               	bnz	copy_data0
  3332                           
  3333                           ; Initialize objects allocated to BANK2 (197 bytes)
  3334                           ; load TBLPTR registers with __pidataBANK2
  3335  01943E  0EA2               	movlw	low __pidataBANK2
  3336  019440  6EF6               	movwf	tblptrl,c
  3337  019442  0E9A               	movlw	high __pidataBANK2
  3338  019444  6EF7               	movwf	tblptrh,c
  3339  019446  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  3340  019448  6EF8               	movwf	tblptru,c
  3341  01944A  EE00  F200         	lfsr	0,__pdataBANK2
  3342  01944E  EE20 F0C5          	lfsr	2,197
  3343  019452                     copy_data1:
  3344  019452  0009               	tblrd		*+
  3345  019454  006F FFD7 FFEE     	movff	tablat,postinc0
  3346  01945A  50DD               	movf	postdec2,w,c
  3347  01945C  50D9               	movf	fsr2l,w,c
  3348  01945E  E1F9               	bnz	copy_data1
  3349                           
  3350                           ; Initialize objects allocated to BANK1 (256 bytes)
  3351                           ; load TBLPTR registers with __pidataBANK1
  3352  019460  0E20               	movlw	low __pidataBANK1
  3353  019462  6EF6               	movwf	tblptrl,c
  3354  019464  0E96               	movlw	high __pidataBANK1
  3355  019466  6EF7               	movwf	tblptrh,c
  3356  019468  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3357  01946A  6EF8               	movwf	tblptru,c
  3358  01946C  EE00  F100         	lfsr	0,__pdataBANK1
  3359  019470  EE20 F100          	lfsr	2,256
  3360  019474                     copy_data2:
  3361  019474  0009               	tblrd		*+
  3362  019476  006F FFD7 FFEE     	movff	tablat,postinc0
  3363  01947C  50DD               	movf	postdec2,w,c
  3364  01947E  50D9               	movf	fsr2l,w,c
  3365  019480  E1F9               	bnz	copy_data2
  3366  019482  50DA               	movf	fsr2h,w,c
  3367  019484  E1F7               	bnz	copy_data2
  3368                           
  3369                           ; Initialize objects allocated to BANK0 (47 bytes)
  3370                           ; load TBLPTR registers with __pidataBANK0
  3371  019486  0EF4               	movlw	low __pidataBANK0
  3372  019488  6EF6               	movwf	tblptrl,c
  3373  01948A  0EB0               	movlw	high __pidataBANK0
  3374  01948C  6EF7               	movwf	tblptrh,c
  3375  01948E  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3376  019490  6EF8               	movwf	tblptru,c
  3377  019492  EE00  F0B1         	lfsr	0,__pdataBANK0
  3378  019496  EE20 F02F          	lfsr	2,47
  3379  01949A                     copy_data3:
  3380  01949A  0009               	tblrd		*+
  3381  01949C  006F FFD7 FFEE     	movff	tablat,postinc0
  3382  0194A2  50DD               	movf	postdec2,w,c
  3383  0194A4  50D9               	movf	fsr2l,w,c
  3384  0194A6  E1F9               	bnz	copy_data3
  3385                           
  3386                           ; Clear objects allocated to BIGRAM (482 bytes)
  3387  0194A8  EE01  F3FF         	lfsr	0,__pbssBIGRAM
  3388  0194AC  EE20 F1E2          	lfsr	2,482
  3389  0194B0                     clear_0:
  3390  0194B0  6AEE               	clrf	postinc0,c
  3391  0194B2  50DD               	movf	postdec2,w,c
  3392  0194B4  50D9               	movf	fsr2l,w,c
  3393  0194B6  E1FC               	bnz	clear_0
  3394  0194B8  50DA               	movf	fsr2h,w,c
  3395  0194BA  E1FA               	bnz	clear_0
  3396                           
  3397                           ; Clear objects allocated to BANK5 (255 bytes)
  3398  0194BC  EE01  F100         	lfsr	0,__pbssBANK5
  3399  0194C0  EE20 F0FF          	lfsr	2,255
  3400  0194C4                     clear_1:
  3401  0194C4  6AEE               	clrf	postinc0,c
  3402  0194C6  50DD               	movf	postdec2,w,c
  3403  0194C8  50D9               	movf	fsr2l,w,c
  3404  0194CA  E1FC               	bnz	clear_1
  3405  0194CC  50DA               	movf	fsr2h,w,c
  3406  0194CE  E1FA               	bnz	clear_1
  3407                           
  3408                           ; Clear objects allocated to BANK4 (134 bytes)
  3409  0194D0  EE01  F000         	lfsr	0,__pbssBANK4
  3410  0194D4  0E86               	movlw	134
  3411  0194D6                     clear_2:
  3412  0194D6  6AEE               	clrf	postinc0,c
  3413  0194D8  06E8               	decf	wreg,f,c
  3414  0194DA  E1FD               	bnz	clear_2
  3415                           
  3416                           ; Clear objects allocated to BANK3 (254 bytes)
  3417  0194DC  EE00  F300         	lfsr	0,__pbssBANK3
  3418  0194E0  0EFE               	movlw	254
  3419  0194E2                     clear_3:
  3420  0194E2  6AEE               	clrf	postinc0,c
  3421  0194E4  06E8               	decf	wreg,f,c
  3422  0194E6  E1FD               	bnz	clear_3
  3423                           
  3424                           ; Clear objects allocated to BANK2 (57 bytes)
  3425  0194E8  EE00  F2C5         	lfsr	0,__pbssBANK2
  3426  0194EC  0E39               	movlw	57
  3427  0194EE                     clear_4:
  3428  0194EE  6AEE               	clrf	postinc0,c
  3429  0194F0  06E8               	decf	wreg,f,c
  3430  0194F2  E1FD               	bnz	clear_4
  3431                           
  3432                           ; Clear objects allocated to BANK0 (81 bytes)
  3433  0194F4  EE00  F060         	lfsr	0,__pbssBANK0
  3434  0194F8  0E51               	movlw	81
  3435  0194FA                     clear_5:
  3436  0194FA  6AEE               	clrf	postinc0,c
  3437  0194FC  06E8               	decf	wreg,f,c
  3438  0194FE  E1FD               	bnz	clear_5
  3439                           
  3440                           ; Clear objects allocated to COMRAM (37 bytes)
  3441  019500  EE00  F001         	lfsr	0,__pbssCOMRAM
  3442  019504  0E25               	movlw	37
  3443  019506                     clear_6:
  3444  019506  6AEE               	clrf	postinc0,c
  3445  019508  06E8               	decf	wreg,f,c
  3446  01950A  E1FD               	bnz	clear_6
  3447                           
  3448                           ;
  3449                           ; Setup IVTBASE
  3450                           ;
  3451  01950C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3452  01950E  6ED5               	movwf	213,c
  3453  019510  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3454  019512  6ED6               	movwf	214,c
  3455  019514  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3456  019516  6ED7               	movwf	215,c
  3457  019518                     end_of_initialization:
  3458                           	opt callstack 0
  3459  019518                     __end_of__initialization:
  3460                           	opt callstack 0
  3461  019518  0100               	movlb	0
  3462  01951A  EF22  F089         	goto	_main	;jump to C main() function
  3463                           
  3464                           	psect	bssCOMRAM
  3465  000001                     __pbssCOMRAM:
  3466                           	opt callstack 0
  3467  000001                     _UART2_RxInterruptHandler:
  3468                           	opt callstack 0
  3469  000001                     	ds	3
  3470  000004                     _INT1_InterruptHandler:
  3471                           	opt callstack 0
  3472  000004                     	ds	3
  3473  000007                     _INT0_InterruptHandler:
  3474                           	opt callstack 0
  3475  000007                     	ds	3
  3476  00000A                     _width:
  3477                           	opt callstack 0
  3478  00000A                     	ds	2
  3479  00000C                     _prec:
  3480                           	opt callstack 0
  3481  00000C                     	ds	2
  3482  00000E                     _flags:
  3483                           	opt callstack 0
  3484  00000E                     	ds	2
  3485  000010                     TMR3_ISR@CountCallBack:
  3486                           	opt callstack 0
  3487  000010                     	ds	2
  3488  000012                     _timer3ReloadVal:
  3489                           	opt callstack 0
  3490  000012                     	ds	2
  3491  000014                     TMR5_ISR@CountCallBack:
  3492                           	opt callstack 0
  3493  000014                     	ds	2
  3494  000016                     _timer5ReloadVal:
  3495                           	opt callstack 0
  3496  000016                     	ds	2
  3497  000018                     esr_check@esr_state:
  3498                           	opt callstack 0
  3499  000018                     	ds	1
  3500  000019                     Volts_to_SOC@slot:
  3501                           	opt callstack 0
  3502  000019                     	ds	1
  3503  00001A                     calc_bsoc@log_update_wait:
  3504                           	opt callstack 0
  3505  00001A                     	ds	1
  3506  00001B                     check_day_time@day_delay:
  3507                           	opt callstack 0
  3508  00001B                     	ds	1
  3509  00001C                     _mode_sw:
  3510                           	opt callstack 0
  3511  00001C                     	ds	1
  3512  00001D                     _uart2RxCount:
  3513                           	opt callstack 0
  3514  00001D                     	ds	1
  3515  00001E                     _uart2RxTail:
  3516                           	opt callstack 0
  3517  00001E                     	ds	1
  3518  00001F                     _uart2RxHead:
  3519                           	opt callstack 0
  3520  00001F                     	ds	1
  3521  000020                     _uart2TxBufferRemaining:
  3522                           	opt callstack 0
  3523  000020                     	ds	1
  3524  000021                     _uart2TxTail:
  3525                           	opt callstack 0
  3526  000021                     	ds	1
  3527  000022                     _uart2TxHead:
  3528                           	opt callstack 0
  3529  000022                     	ds	1
  3530  000023                     _uart1RxCount:
  3531                           	opt callstack 0
  3532  000023                     	ds	1
  3533  000024                     _uart1RxTail:
  3534                           	opt callstack 0
  3535  000024                     	ds	1
  3536  000025                     _uart1RxHead:
  3537                           	opt callstack 0
  3538  000025                     	ds	1
  3539                           
  3540                           	psect	bssBANK0
  3541  000060                     __pbssBANK0:
  3542                           	opt callstack 0
  3543  000060                     _spi_link:
  3544                           	opt callstack 0
  3545  000060                     	ds	12
  3546  00006C                     spinners@s:
  3547                           	opt callstack 0
  3548  00006C                     	ds	6
  3549  000072                     floorf@F524:
  3550                           	opt callstack 0
  3551  000072                     	ds	4
  3552  000076                     fabsf@F463:
  3553                           	opt callstack 0
  3554  000076                     	ds	4
  3555  00007A                     ___fpclassifyf@F463:
  3556                           	opt callstack 0
  3557  00007A                     	ds	4
  3558  00007E                     calc_ror_data@bcror:
  3559                           	opt callstack 0
  3560  00007E                     	ds	4
  3561  000082                     calc_ror_data@bvror:
  3562                           	opt callstack 0
  3563  000082                     	ds	4
  3564  000086                     calc_model_data@bcror:
  3565                           	opt callstack 0
  3566  000086                     	ds	4
  3567  00008A                     calc_model_data@bvror:
  3568                           	opt callstack 0
  3569  00008A                     	ds	4
  3570  00008E                     _utctime:
  3571                           	opt callstack 0
  3572  00008E                     	ds	4
  3573  000092                     wdtdelay@dcount:
  3574                           	opt callstack 0
  3575  000092                     	ds	4
  3576  000096                     _P:
  3577                           	opt callstack 0
  3578  000096                     	ds	4
  3579  00009A                     _TMR3_InterruptHandler:
  3580                           	opt callstack 0
  3581  00009A                     	ds	3
  3582  00009D                     _TMR5_InterruptHandler:
  3583                           	opt callstack 0
  3584  00009D                     	ds	3
  3585  0000A0                     _TMR6_InterruptHandler:
  3586                           	opt callstack 0
  3587  0000A0                     	ds	3
  3588  0000A3                     _ADCC_ADTI_InterruptHandler:
  3589                           	opt callstack 0
  3590  0000A3                     	ds	3
  3591  0000A6                     _ADCC_ADI_InterruptHandler:
  3592                           	opt callstack 0
  3593  0000A6                     	ds	3
  3594  0000A9                     _UART1_RxInterruptHandler:
  3595                           	opt callstack 0
  3596  0000A9                     	ds	3
  3597  0000AC                     _UART2_TxInterruptHandler:
  3598                           	opt callstack 0
  3599  0000AC                     	ds	3
  3600  0000AF                     _nout:
  3601                           	opt callstack 0
  3602  0000AF                     	ds	2
  3603                           
  3604                           	psect	dataBANK0
  3605  0000B1                     __pdataBANK0:
  3606                           	opt callstack 0
  3607  0000B1                     _R:
  3608                           	opt callstack 0
  3609  0000B1                     	ds	40
  3610  0000D9                     _H:
  3611                           	opt callstack 0
  3612  0000D9                     	ds	7
  3613                           
  3614                           	psect	dataBANK1
  3615  000100                     __pdataBANK1:
  3616                           	opt callstack 0
  3617  000100                     _C:
  3618                           	opt callstack 0
  3619  000100                     	ds	256
  3620                           
  3621                           	psect	bssBANK2
  3622  0002C5                     __pbssBANK2:
  3623                           	opt callstack 0
  3624  0002C5                     _S:
  3625                           	opt callstack 0
  3626  0002C5                     	ds	41
  3627  0002EE                     _uart1RxBuffer:
  3628                           	opt callstack 0
  3629  0002EE                     	ds	8
  3630  0002F6                     _seed:
  3631                           	opt callstack 0
  3632  0002F6                     	ds	8
  3633                           
  3634                           	psect	dataBANK2
  3635  000200                     __pdataBANK2:
  3636                           	opt callstack 0
  3637  000200                     stoa@F1166:
  3638                           	opt callstack 0
  3639  000200                     	ds	7
  3640  000207                     _V:
  3641                           	opt callstack 0
  3642  000207                     	ds	190
  3643                           
  3644                           	psect	bssBANK3
  3645  000300                     __pbssBANK3:
  3646                           	opt callstack 0
  3647  000300                     lp_filter@smooth:
  3648                           	opt callstack 0
  3649  000300                     	ds	84
  3650  000354                     _uart2TxBuffer:
  3651                           	opt callstack 0
  3652  000354                     	ds	64
  3653  000394                     _tickCount:
  3654                           	opt callstack 0
  3655  000394                     	ds	26
  3656  0003AE                     _dbuf:
  3657                           	opt callstack 0
  3658  0003AE                     	ds	80
  3659                           
  3660                           	psect	bssBANK4
  3661  000400                     __pbssBANK4:
  3662                           	opt callstack 0
  3663  000400                     _ring_buf2:
  3664                           	opt callstack 0
  3665  000400                     	ds	67
  3666  000443                     _ring_buf1:
  3667                           	opt callstack 0
  3668  000443                     	ds	67
  3669                           
  3670                           	psect	bssBANK5
  3671  000500                     __pbssBANK5:
  3672                           	opt callstack 0
  3673  000500                     _uart2RxBuffer:
  3674                           	opt callstack 0
  3675  000500                     	ds	255
  3676                           
  3677                           	psect	bssBIGRAM
  3678  0007FF                     __pbssBIGRAM:
  3679                           	opt callstack 0
  3680  0007FF                     _D:
  3681                           	opt callstack 0
  3682  0007FF                     	ds	482
  3683                           
  3684                           	psect	dataBIGRAM
  3685  0005FF                     __pdataBIGRAM:
  3686                           	opt callstack 0
  3687  0005FF                     _port_data:
  3688                           	opt callstack 0
  3689  0005FF                     	ds	512
  3690                           
  3691                           	psect	cstackBANK0
  3692  0000E0                     __pcstackBANK0:
  3693                           	opt callstack 0
  3694  0000E0                     ??_TMR3_ISR:
  3695                           
  3696                           ; 1 bytes @ 0x0
  3697  0000E0                     	ds	25
  3698                           
  3699                           	psect	cstackCOMRAM
  3700  000046                     __pcstackCOMRAM:
  3701                           	opt callstack 0
  3702  000046                     ??_ADCC_ThresholdISR:
  3703  000046                     
  3704                           ; 1 bytes @ 0x0
  3705  000046                     	ds	5
  3706  00004B                     ??_TMR6_ISR:
  3707                           
  3708                           ; 1 bytes @ 0x5
  3709  00004B                     	ds	1
  3710  00004C                     ??_INT1_ISR:
  3711  00004C                     
  3712                           ; 1 bytes @ 0x6
  3713  00004C                     	ds	4
  3714  000050                     ??_TMR5_ISR:
  3715                           
  3716                           ; 1 bytes @ 0xA
  3717  000050                     	ds	15
  3718                           
  3719 ;;
  3720 ;;Main: autosize = 13, tempsize = 0, incstack = 0, save=0
  3721 ;;
  3722 ;; *************** function _main *****************
  3723 ;; Defined at:
  3724 ;;		line 183 in file "main.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;		None
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;  esr_temp        4  [STACK] float 
  3729 ;;  i_esr           2  [STACK] unsigned short 
  3730 ;;  shape           1  [STACK] unsigned char 
  3731 ;;  k               1  [STACK] unsigned char 
  3732 ;;  j               1  [STACK] unsigned char 
  3733 ;;  i               1  [STACK] unsigned char 
  3734 ;;  inp_index       1  [STACK] unsigned char 
  3735 ;;  mode            1  [STACK] enum E17013
  3736 ;;  i_ror           1  [STACK] unsigned char 
  3737 ;; Return value:  Size  Location     Type
  3738 ;;                  1  [STACK] void 
  3739 ;; Registers used:
  3740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3741 ;; Tracked objects:
  3742 ;;		On entry : 0/0
  3743 ;;		On exit  : 0/0
  3744 ;;		Unchanged: 0/0
  3745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3750 ;;Total ram usage:        0 bytes
  3751 ;; Hardware stack levels required when called:   28
  3752 ;; This function calls:
  3753 ;;		_SYSTEM_Initialize
  3754 ;;		_StartTimer
  3755 ;;		_TimerDone
  3756 ;;		_WaitMs
  3757 ;;		___fladd
  3758 ;;		___flge
  3759 ;;		___fltol
  3760 ;;		_calc_model_data
  3761 ;;		_calc_ror_data
  3762 ;;		_check_adc_scan
  3763 ;;		_check_enter_button
  3764 ;;		_check_help
  3765 ;;		_clear_adc_scan
  3766 ;;		_clear_hid_pflags
  3767 ;;		_conv_raw_result
  3768 ;;		_convert_adc_data
  3769 ;;		_eaDogM_WriteCommand
  3770 ;;		_esr_check
  3771 ;;		_fabsf
  3772 ;;		_get_raw_result
  3773 ;;		_get_switch
  3774 ;;		_get_vterm_ptr
  3775 ;;		_hid_display
  3776 ;;		_init_bsoc
  3777 ;;		_init_display
  3778 ;;		_init_port_dma
  3779 ;;		_lp_filter
  3780 ;;		_mode_lamp_dim
  3781 ;;		_set_display_info
  3782 ;;		_set_load_relay_one
  3783 ;;		_set_load_relay_two
  3784 ;;		_set_vterm
  3785 ;;		_spinners
  3786 ;;		_sprintf
  3787 ;;		_srand
  3788 ;;		_start_adc_scan
  3789 ;;		_start_switch_handler
  3790 ;;		_static_soc
  3791 ;;		_update_lcd
  3792 ;; This function is called by:
  3793 ;;		Startup code after reset
  3794 ;; This function uses a reentrant model
  3795 ;;
  3796                           
  3797                           	psect	text0
  3798  011244                     __ptext0:
  3799                           	opt callstack 0
  3800  011244                     _main:
  3801                           	opt callstack 0
  3802                           
  3803                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3804  011244  0E0D               	movlw	13
  3805  011246  26E1               	addwf	fsr1l,f,c
  3806  011248  0E00               	movlw	0
  3807  01124A  22E2               	addwfc	fsr1h,f,c
  3808                           
  3809                           ;main.c: 185:  UI_STATES mode;;main.c: 186:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  3810                           ;stkvar	_inp_index @ sp[(-13)+10]
  3811                           
  3812                           ;incstack = 0
  3813  01124C  0EFD               	movlw	-3
  3814  01124E  6AE3               	clrf	plusw1,c
  3815                           
  3816                           ;stkvar	_i @ sp[(-13)+9]
  3817  011250  0EFC               	movlw	-4
  3818  011252  6AE3               	clrf	plusw1,c
  3819                           
  3820                           ;stkvar	_j @ sp[(-13)+8]
  3821  011254  0EFB               	movlw	-5
  3822  011256  6AE3               	clrf	plusw1,c
  3823  011258  2AE3               	incf	plusw1,f,c
  3824                           
  3825                           ;stkvar	_k @ sp[(-13)+7]
  3826  01125A  0EFA               	movlw	-6
  3827  01125C  6AE3               	clrf	plusw1,c
  3828  01125E  82E3               	bsf	plusw1,1,c
  3829                           
  3830                           ;main.c: 189:  SYSTEM_Initialize();
  3831  011260  EC81  F0D5         	call	_SYSTEM_Initialize	;wreg free
  3832                           
  3833                           ; BSR set to: 60
  3834                           ;main.c: 192:  (INTCON0bits.GIEH = 1);
  3835  011264  8ED2               	bsf	210,7,c	;volatile
  3836                           
  3837                           ; BSR set to: 60
  3838                           ;main.c: 195:  (INTCON0bits.GIEL = 1);
  3839  011266  8CD2               	bsf	210,6,c	;volatile
  3840                           
  3841                           ; BSR set to: 60
  3842                           ;main.c: 197:  V.ui_state = UI_STATE_INIT;
  3843  011268  0102               	movlb	2	; () banked
  3844  01126A  6B07               	clrf	_V& (0+255),b	;volatile
  3845                           
  3846                           ; BSR set to: 2
  3847                           ;main.c: 202:  WaitMs(300);
  3848  01126C  0E2C               	movlw	44
  3849  01126E  6EE6               	movwf	postinc1,c
  3850  011270  0E01               	movlw	1
  3851  011272  6EE6               	movwf	postinc1,c
  3852  011274  ECB0  F0D7         	call	_WaitMs	;wreg free
  3853                           
  3854                           ;main.c: 203:  if (PORTBbits.RB0) {
  3855  011278  A0CB               	btfss	203,0,c	;volatile
  3856  01127A  D004               	goto	l12743
  3857                           
  3858                           ;main.c: 204:   mode = UI_STATE_HOST;
  3859                           ;stkvar	_mode @ sp[(-13)+11]
  3860  01127C  0EFE               	movlw	-2
  3861  01127E  6AE3               	clrf	plusw1,c
  3862  011280  2AE3               	incf	plusw1,f,c
  3863                           
  3864                           ;main.c: 205:  } else {
  3865  011282  D004               	goto	l12745
  3866  011284                     l12743:
  3867                           
  3868                           ;main.c: 206:   mode = UI_STATE_LOG;
  3869                           ;stkvar	_mode @ sp[(-13)+11]
  3870  011284  0EFE               	movlw	-2
  3871  011286  6AE3               	clrf	plusw1,c
  3872  011288  80E3               	bsf	plusw1,0,c
  3873  01128A  82E3               	bsf	plusw1,1,c	;indir
  3874  01128C                     l12745:
  3875                           
  3876                           ;main.c: 209:  if (mode == UI_STATE_HOST) {
  3877                           ;stkvar	_mode @ sp[(-13)+11]
  3878  01128C  0EFE               	movlw	-2
  3879  01128E  04E3               	decf	plusw1,w,c
  3880  011290  A4D8               	btfss	status,2,c
  3881  011292  D007               	goto	l1324
  3882                           
  3883                           ;main.c: 210:   do { LATDbits.LATD0 = 1; } while(0);
  3884  011294  80BD               	bsf	189,0,c	;volatile
  3885                           
  3886                           ;main.c: 211:   V.mode_pwm = 70;
  3887  011296  0E00               	movlw	0
  3888  011298  0102               	movlb	2	; () banked
  3889  01129A  6F9D               	movwf	(_V+150)& (0+255),b	;volatile
  3890  01129C  0E46               	movlw	70
  3891  01129E  6F9C               	movwf	(_V+149)& (0+255),b	;volatile
  3892                           
  3893                           ;main.c: 212:  } else {
  3894  0112A0  D004               	goto	l12749
  3895  0112A2                     l1324:
  3896  0112A2  90BD               	bcf	189,0,c	;volatile
  3897                           
  3898                           ;main.c: 214:   V.mode_pwm = 0;
  3899  0112A4  0102               	movlb	2	; () banked
  3900  0112A6  6B9C               	clrf	(_V+149)& (0+255),b	;volatile
  3901  0112A8  6B9D               	clrf	(_V+150)& (0+255),b	;volatile
  3902  0112AA                     l12749:
  3903                           
  3904                           ; BSR set to: 2
  3905                           ;main.c: 216:  mode_lamp_dim(V.mode_pwm);
  3906  0112AA  0060  FA73  FFE6   	movff	_V+149,postinc1
  3907  0112B0  0060  FA77  FFE6   	movff	_V+150,postinc1
  3908  0112B6  EC75  F0DB         	call	_mode_lamp_dim	;wreg free
  3909  0112BA  D311               	goto	l12869
  3910  0112BC                     l12751:
  3911                           
  3912                           ; BSR set to: 2
  3913                           ;main.c: 224:    init_port_dma();
  3914  0112BC  EC1A  F0D8         	call	_init_port_dma	;wreg free
  3915                           
  3916                           ; BSR set to: 59
  3917                           ;main.c: 226:    init_display();
  3918  0112C0  EC90  F0CB         	call	_init_display	;wreg free
  3919                           
  3920                           ; BSR set to: 61
  3921                           ;main.c: 227:    eaDogM_WriteCommand(0b00001100);
  3922  0112C4  0E0C               	movlw	12
  3923  0112C6  6EE6               	movwf	postinc1,c
  3924  0112C8  ECD9  F0DB         	call	_eaDogM_WriteCommand	;wreg free
  3925                           
  3926                           ; BSR set to: 0
  3927                           ;main.c: 231:    set_load_relay_one(1);
  3928  0112CC  0E01               	movlw	1
  3929  0112CE  6EE6               	movwf	postinc1,c
  3930  0112D0  ECC9  F0DB         	call	_set_load_relay_one	;wreg free
  3931                           
  3932                           ;main.c: 232:    set_load_relay_two(1);
  3933  0112D4  0E01               	movlw	1
  3934  0112D6  6EE6               	movwf	postinc1,c
  3935  0112D8  ECC1  F0DB         	call	_set_load_relay_two	;wreg free
  3936                           
  3937                           ;main.c: 234:    V.ui_state = mode;
  3938                           ;stkvar	_mode @ sp[(-13)+11]
  3939  0112DC  0EFE               	movlw	-2
  3940  0112DE  006F FF8C  F207    	movff	plusw1,_V	;volatile
  3941                           
  3942                           ;main.c: 235:    srand(1957);
  3943  0112E4  0EA5               	movlw	165
  3944  0112E6  6EE6               	movwf	postinc1,c
  3945  0112E8  0E07               	movlw	7
  3946  0112EA  6EE6               	movwf	postinc1,c
  3947  0112EC  ECE6  F0D7         	call	_srand	;wreg free
  3948                           
  3949                           ; BSR set to: 2
  3950                           ;main.c: 236:    set_vterm(0);
  3951  0112F0  0E00               	movlw	0
  3952  0112F2  6EE6               	movwf	postinc1,c
  3953  0112F4  EC11  F0DB         	call	_set_vterm	;wreg free
  3954                           
  3955                           ;main.c: 237:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  3956  0112F8  0E50               	movlw	low STR_1
  3957  0112FA  6EE6               	movwf	postinc1,c
  3958  0112FC  0EFF               	movlw	high STR_1
  3959  0112FE  6EE6               	movwf	postinc1,c
  3960  011300  0E00               	movlw	0
  3961  011302  6EE6               	movwf	postinc1,c
  3962  011304  0E00               	movlw	0
  3963  011306  6EE6               	movwf	postinc1,c
  3964  011308  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  3965  01130C  0060  F09B  FFE6   	movff	btemp,postinc1
  3966  011312  0060  F09F  FFE6   	movff	btemp+1,postinc1
  3967  011318  0E04               	movlw	4
  3968  01131A  6EE6               	movwf	postinc1,c
  3969  01131C  EC87  F0C9         	call	_sprintf	;wreg free
  3970                           
  3971                           ; BSR set to: 0
  3972                           ;main.c: 238:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.007");
  3973  011320  0ED0               	movlw	low STR_3
  3974  011322  6EE6               	movwf	postinc1,c
  3975  011324  0EFF               	movlw	high STR_3
  3976  011326  6EE6               	movwf	postinc1,c
  3977  011328  0EA2               	movlw	low STR_2
  3978  01132A  6EE6               	movwf	postinc1,c
  3979  01132C  0EFF               	movlw	high STR_2
  3980  01132E  6EE6               	movwf	postinc1,c
  3981  011330  0E00               	movlw	0
  3982  011332  6EE6               	movwf	postinc1,c
  3983  011334  0E01               	movlw	1
  3984  011336  6EE6               	movwf	postinc1,c
  3985  011338  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  3986  01133C  0060  F09B  FFE6   	movff	btemp,postinc1
  3987  011342  0060  F09F  FFE6   	movff	btemp+1,postinc1
  3988  011348  0E06               	movlw	6
  3989  01134A  6EE6               	movwf	postinc1,c
  3990  01134C  EC87  F0C9         	call	_sprintf	;wreg free
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;main.c: 239:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  3994  011350  0E1D               	movlw	low STR_4
  3995  011352  6EE6               	movwf	postinc1,c
  3996  011354  0EFF               	movlw	high STR_4
  3997  011356  6EE6               	movwf	postinc1,c
  3998  011358  0E00               	movlw	0
  3999  01135A  6EE6               	movwf	postinc1,c
  4000  01135C  0E02               	movlw	2
  4001  01135E  6EE6               	movwf	postinc1,c
  4002  011360  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  4003  011364  0060  F09B  FFE6   	movff	btemp,postinc1
  4004  01136A  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4005  011370  0E04               	movlw	4
  4006  011372  6EE6               	movwf	postinc1,c
  4007  011374  EC87  F0C9         	call	_sprintf	;wreg free
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;main.c: 240:    sprintf(get_vterm_ptr(0, 2), "                ");
  4011  011378  0EF0               	movlw	low (STR_58+2)
  4012  01137A  6EE6               	movwf	postinc1,c
  4013  01137C  0EFD               	movlw	high (STR_58+2)
  4014  01137E  6EE6               	movwf	postinc1,c
  4015  011380  0E02               	movlw	2
  4016  011382  6EE6               	movwf	postinc1,c
  4017  011384  0E00               	movlw	0
  4018  011386  6EE6               	movwf	postinc1,c
  4019  011388  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  4020  01138C  0060  F09B  FFE6   	movff	btemp,postinc1
  4021  011392  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4022  011398  0E04               	movlw	4
  4023  01139A  6EE6               	movwf	postinc1,c
  4024  01139C  EC87  F0C9         	call	_sprintf	;wreg free
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;main.c: 241:    sprintf(get_vterm_ptr(1, 2), "                ");
  4028  0113A0  0EF0               	movlw	low (STR_58+2)
  4029  0113A2  6EE6               	movwf	postinc1,c
  4030  0113A4  0EFD               	movlw	high (STR_58+2)
  4031  0113A6  6EE6               	movwf	postinc1,c
  4032  0113A8  0E02               	movlw	2
  4033  0113AA  6EE6               	movwf	postinc1,c
  4034  0113AC  0E01               	movlw	1
  4035  0113AE  6EE6               	movwf	postinc1,c
  4036  0113B0  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  4037  0113B4  0060  F09B  FFE6   	movff	btemp,postinc1
  4038  0113BA  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4039  0113C0  0E04               	movlw	4
  4040  0113C2  6EE6               	movwf	postinc1,c
  4041  0113C4  EC87  F0C9         	call	_sprintf	;wreg free
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;main.c: 242:    sprintf(get_vterm_ptr(2, 2), "                ");
  4045  0113C8  0EF0               	movlw	low (STR_58+2)
  4046  0113CA  6EE6               	movwf	postinc1,c
  4047  0113CC  0EFD               	movlw	high (STR_58+2)
  4048  0113CE  6EE6               	movwf	postinc1,c
  4049  0113D0  0E02               	movlw	2
  4050  0113D2  6EE6               	movwf	postinc1,c
  4051  0113D4  0E02               	movlw	2
  4052  0113D6  6EE6               	movwf	postinc1,c
  4053  0113D8  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  4054  0113DC  0060  F09B  FFE6   	movff	btemp,postinc1
  4055  0113E2  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4056  0113E8  0E04               	movlw	4
  4057  0113EA  6EE6               	movwf	postinc1,c
  4058  0113EC  EC87  F0C9         	call	_sprintf	;wreg free
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;main.c: 243:    update_lcd(0);
  4062  0113F0  0E00               	movlw	0
  4063  0113F2  6EE6               	movwf	postinc1,c
  4064  0113F4  ECFF  F0C8         	call	_update_lcd	;wreg free
  4065                           
  4066                           ;main.c: 244:    WaitMs(1000);
  4067  0113F8  0EE8               	movlw	232
  4068  0113FA  6EE6               	movwf	postinc1,c
  4069  0113FC  0E03               	movlw	3
  4070  0113FE  6EE6               	movwf	postinc1,c
  4071  011400  ECB0  F0D7         	call	_WaitMs	;wreg free
  4072                           
  4073                           ;main.c: 245:    StartTimer(TMR_DISPLAY, 250);
  4074  011404  0EFA               	movlw	250
  4075  011406  6EE6               	movwf	postinc1,c
  4076  011408  0E00               	movlw	0
  4077  01140A  6EE6               	movwf	postinc1,c
  4078  01140C  0E0A               	movlw	10
  4079  01140E  6EE6               	movwf	postinc1,c
  4080  011410  ECBC  F0D6         	call	_StartTimer	;wreg free
  4081                           
  4082                           ;main.c: 246:    StartTimer(TMR_ADC, 200);
  4083  011414  0EC8               	movlw	200
  4084  011416  6EE6               	movwf	postinc1,c
  4085  011418  0E00               	movlw	0
  4086  01141A  6EE6               	movwf	postinc1,c
  4087  01141C  0E01               	movlw	1
  4088  01141E  6EE6               	movwf	postinc1,c
  4089  011420  ECBC  F0D6         	call	_StartTimer	;wreg free
  4090                           
  4091                           ;main.c: 247:    StartTimer(TMR_INFO, 3000);
  4092  011424  0EB8               	movlw	184
  4093  011426  6EE6               	movwf	postinc1,c
  4094  011428  0E0B               	movlw	11
  4095  01142A  6EE6               	movwf	postinc1,c
  4096  01142C  0E07               	movlw	7
  4097  01142E  6EE6               	movwf	postinc1,c
  4098  011430  ECBC  F0D6         	call	_StartTimer	;wreg free
  4099                           
  4100                           ;main.c: 248:    StartTimer(TMR_FLIPPER, 1500);
  4101  011434  0EDC               	movlw	220
  4102  011436  6EE6               	movwf	postinc1,c
  4103  011438  0E05               	movlw	5
  4104  01143A  6EE6               	movwf	postinc1,c
  4105  01143C  0E0B               	movlw	11
  4106  01143E  6EE6               	movwf	postinc1,c
  4107  011440  ECBC  F0D6         	call	_StartTimer	;wreg free
  4108                           
  4109                           ;main.c: 249:    StartTimer(TMR_HELPDIS, 3000);
  4110  011444  0EB8               	movlw	184
  4111  011446  6EE6               	movwf	postinc1,c
  4112  011448  0E0B               	movlw	11
  4113  01144A  6EE6               	movwf	postinc1,c
  4114  01144C  0E09               	movlw	9
  4115  01144E  6EE6               	movwf	postinc1,c
  4116  011450  ECBC  F0D6         	call	_StartTimer	;wreg free
  4117                           
  4118                           ;main.c: 251:    start_adc_scan();
  4119  011454  ECC2  F0D3         	call	_start_adc_scan	;wreg free
  4120                           
  4121                           ;main.c: 252:    start_switch_handler();
  4122  011458  ECE2  F0DA         	call	_start_switch_handler	;wreg free
  4123                           
  4124                           ; BSR set to: 57
  4125                           ;main.c: 253:    WaitMs(1000);
  4126  01145C  0EE8               	movlw	232
  4127  01145E  6EE6               	movwf	postinc1,c
  4128  011460  0E03               	movlw	3
  4129  011462  6EE6               	movwf	postinc1,c
  4130  011464  ECB0  F0D7         	call	_WaitMs	;wreg free
  4131                           
  4132                           ;main.c: 258:    i_ror = 1;
  4133                           ;stkvar	_i_ror @ sp[(-13)+12]
  4134  011468  0EFF               	movlw	-1
  4135  01146A  6AE3               	clrf	plusw1,c
  4136  01146C  2AE3               	incf	plusw1,f,c
  4137  01146E                     l12801:
  4138                           
  4139                           ;main.c: 260:     calc_ror_data();
  4140  01146E  EC4D  F0C1         	call	_calc_ror_data	;wreg free
  4141                           
  4142                           ;main.c: 261:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f         ", conv_raw_result(V_BA
      +                          T, CONV));
  4143  011472  0E00               	movlw	0
  4144  011474  6EE6               	movwf	postinc1,c
  4145  011476  0E04               	movlw	4
  4146  011478  6EE6               	movwf	postinc1,c
  4147  01147A  EC60  F0A7         	call	_conv_raw_result	;wreg free
  4148  01147E  0060  F09B  FFE6   	movff	btemp,postinc1
  4149  011484  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4150  01148A  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  4151  011490  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  4152  011496  0E0B               	movlw	low STR_8
  4153  011498  6EE6               	movwf	postinc1,c
  4154  01149A  0EFF               	movlw	high STR_8
  4155  01149C  6EE6               	movwf	postinc1,c
  4156  01149E  0E00               	movlw	0
  4157  0114A0  6EE6               	movwf	postinc1,c
  4158  0114A2  0E01               	movlw	1
  4159  0114A4  6EE6               	movwf	postinc1,c
  4160  0114A6  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  4161  0114AA  0060  F09B  FFE6   	movff	btemp,postinc1
  4162  0114B0  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4163  0114B6  0E08               	movlw	8
  4164  0114B8  6EE6               	movwf	postinc1,c
  4165  0114BA  EC87  F0C9         	call	_sprintf	;wreg free
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;main.c: 262:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f       ", spinners(5, 0),
      +                           i_ror, C.bv_ror);
  4169  0114BE  0060  F5A3  FFE6   	movff	_C+104,postinc1
  4170  0114C4  0060  F5A7  FFE6   	movff	_C+105,postinc1
  4171  0114CA  0060  F5AB  FFE6   	movff	_C+106,postinc1
  4172  0114D0  0060  F5AF  FFE6   	movff	_C+107,postinc1
  4173                           
  4174                           ;stkvar	_i_ror @ sp[(-17)+12]
  4175  0114D6  0EFB               	movlw	-5
  4176  0114D8  50E3               	movf	plusw1,w,c
  4177  0114DA  6EE6               	movwf	postinc1,c
  4178  0114DC  0E00               	movlw	0
  4179  0114DE  6EE6               	movwf	postinc1,c
  4180  0114E0  0E00               	movlw	0
  4181  0114E2  6EE6               	movwf	postinc1,c
  4182  0114E4  0E05               	movlw	5
  4183  0114E6  6EE6               	movwf	postinc1,c
  4184  0114E8  EC05  F0CC         	call	_spinners	;wreg free
  4185  0114EC  5026               	movf	btemp^0,w,c
  4186  0114EE  6EE6               	movwf	postinc1,c
  4187  0114F0  0E00               	movlw	0
  4188  0114F2  6EE6               	movwf	postinc1,c
  4189  0114F4  0E08               	movlw	low STR_9
  4190  0114F6  6EE6               	movwf	postinc1,c
  4191  0114F8  0EFD               	movlw	high STR_9
  4192  0114FA  6EE6               	movwf	postinc1,c
  4193  0114FC  0E00               	movlw	0
  4194  0114FE  6EE6               	movwf	postinc1,c
  4195  011500  0E02               	movlw	2
  4196  011502  6EE6               	movwf	postinc1,c
  4197  011504  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  4198  011508  0060  F09B  FFE6   	movff	btemp,postinc1
  4199  01150E  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4200  011514  0E0C               	movlw	12
  4201  011516  6EE6               	movwf	postinc1,c
  4202  011518  EC87  F0C9         	call	_sprintf	;wreg free
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;main.c: 263:     update_lcd(0);
  4206  01151C  0E00               	movlw	0
  4207  01151E  6EE6               	movwf	postinc1,c
  4208  011520  ECFF  F0C8         	call	_update_lcd	;wreg free
  4209                           
  4210                           ;main.c: 264:     WaitMs(2000);
  4211  011524  0ED0               	movlw	208
  4212  011526  6EE6               	movwf	postinc1,c
  4213  011528  0E07               	movlw	7
  4214  01152A  6EE6               	movwf	postinc1,c
  4215  01152C  ECB0  F0D7         	call	_WaitMs	;wreg free
  4216                           
  4217                           ;main.c: 265:     clear_adc_scan();
  4218  011530  EC27  F0DC         	call	_clear_adc_scan	;wreg free
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;main.c: 266:     start_adc_scan();
  4222  011534  ECC2  F0D3         	call	_start_adc_scan	;wreg free
  4223                           
  4224                           ;main.c: 267:     WaitMs(500);
  4225  011538  0EF4               	movlw	244
  4226  01153A  6EE6               	movwf	postinc1,c
  4227  01153C  0E01               	movlw	1
  4228  01153E  6EE6               	movwf	postinc1,c
  4229  011540  ECB0  F0D7         	call	_WaitMs	;wreg free
  4230                           
  4231                           ;main.c: 268:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4232                           ;stkvar	_i_ror @ sp[(-13)+12]
  4233  011544  0EFF               	movlw	-1
  4234  011546  006F FF8C  F031    	movff	plusw1,btemp+11
  4235  01154C  2A31               	incf	(btemp+11)^0,f,c
  4236  01154E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  4237  011554  0631               	decf	(btemp+11)^0,f,c
  4238  011556  0E1E               	movlw	30
  4239  011558  6031               	cpfslt	(btemp+11)^0,c
  4240  01155A  D018               	goto	u12250
  4241  01155C  0060  F5A3  FFE6   	movff	_C+104,postinc1
  4242  011562  0060  F5A7  FFE6   	movff	_C+105,postinc1
  4243  011568  0060  F5AB  FFE6   	movff	_C+106,postinc1
  4244  01156E  0060  F5AF  FFE6   	movff	_C+107,postinc1
  4245  011574  0E42               	movlw	66
  4246  011576  6EE6               	movwf	postinc1,c
  4247  011578  0E60               	movlw	96
  4248  01157A  6EE6               	movwf	postinc1,c
  4249  01157C  0E65               	movlw	101
  4250  01157E  6EE6               	movwf	postinc1,c
  4251  011580  0E3C               	movlw	60
  4252  011582  6EE6               	movwf	postinc1,c
  4253  011584  EC78  F0C3         	call	___flge	;wreg free
  4254  011588  A026               	btfss	btemp& (0+255),0,c
  4255  01158A  D771               	goto	l12801
  4256  01158C                     u12250:
  4257                           
  4258                           ;main.c: 270:    static_soc();
  4259  01158C  EC55  F0DA         	call	_static_soc	;wreg free
  4260                           
  4261                           ; BSR set to: 1
  4262                           ;main.c: 271:    init_bsoc();
  4263  011590  ECC0  F0C2         	call	_init_bsoc	;wreg free
  4264                           
  4265                           ;main.c: 272:    set_load_relay_one(0);
  4266  011594  0E00               	movlw	0
  4267  011596  6EE6               	movwf	postinc1,c
  4268  011598  ECC9  F0DB         	call	_set_load_relay_one	;wreg free
  4269                           
  4270                           ;main.c: 273:    set_load_relay_two(0);
  4271  01159C  0E00               	movlw	0
  4272  01159E  6EE6               	movwf	postinc1,c
  4273  0115A0  ECC1  F0DB         	call	_set_load_relay_two	;wreg free
  4274                           
  4275                           ;main.c: 274:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4276  0115A4  0060  F6BB  FFE6   	movff	_C+174,postinc1
  4277  0115AA  0060  F6BF  FFE6   	movff	_C+175,postinc1
  4278  0115B0  0E35               	movlw	low STR_10
  4279  0115B2  6EE6               	movwf	postinc1,c
  4280  0115B4  0EFD               	movlw	high STR_10
  4281  0115B6  6EE6               	movwf	postinc1,c
  4282  0115B8  0E00               	movlw	0
  4283  0115BA  6EE6               	movwf	postinc1,c
  4284  0115BC  0E00               	movlw	0
  4285  0115BE  6EE6               	movwf	postinc1,c
  4286  0115C0  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  4287  0115C4  0060  F09B  FFE6   	movff	btemp,postinc1
  4288  0115CA  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4289  0115D0  0E06               	movlw	6
  4290  0115D2  6EE6               	movwf	postinc1,c
  4291  0115D4  EC87  F0C9         	call	_sprintf	;wreg free
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;main.c: 275:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4295  0115D8  0060  F633  FFE6   	movff	_C+140,postinc1
  4296  0115DE  0060  F637  FFE6   	movff	_C+141,postinc1
  4297  0115E4  0060  F63B  FFE6   	movff	_C+142,postinc1
  4298  0115EA  0060  F63F  FFE6   	movff	_C+143,postinc1
  4299  0115F0  0E4B               	movlw	low STR_11
  4300  0115F2  6EE6               	movwf	postinc1,c
  4301  0115F4  0EFD               	movlw	high STR_11
  4302  0115F6  6EE6               	movwf	postinc1,c
  4303  0115F8  0E00               	movlw	0
  4304  0115FA  6EE6               	movwf	postinc1,c
  4305  0115FC  0E01               	movlw	1
  4306  0115FE  6EE6               	movwf	postinc1,c
  4307  011600  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  4308  011604  0060  F09B  FFE6   	movff	btemp,postinc1
  4309  01160A  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4310  011610  0E08               	movlw	8
  4311  011612  6EE6               	movwf	postinc1,c
  4312  011614  EC87  F0C9         	call	_sprintf	;wreg free
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;main.c: 276:    update_lcd(0);
  4316  011618  0E00               	movlw	0
  4317  01161A  6EE6               	movwf	postinc1,c
  4318  01161C  ECFF  F0C8         	call	_update_lcd	;wreg free
  4319                           
  4320                           ;main.c: 277:    WaitMs(2000);
  4321  011620  0ED0               	movlw	208
  4322  011622  6EE6               	movwf	postinc1,c
  4323  011624  0E07               	movlw	7
  4324  011626  6EE6               	movwf	postinc1,c
  4325  011628  ECB0  F0D7         	call	_WaitMs	;wreg free
  4326                           
  4327                           ;main.c: 278:    sprintf(get_vterm_ptr(0, 0), "Battery ESR     ");
  4328  01162C  0E2E               	movlw	low STR_12
  4329  01162E  6EE6               	movwf	postinc1,c
  4330  011630  0EFF               	movlw	high STR_12
  4331  011632  6EE6               	movwf	postinc1,c
  4332  011634  0E00               	movlw	0
  4333  011636  6EE6               	movwf	postinc1,c
  4334  011638  0E00               	movlw	0
  4335  01163A  6EE6               	movwf	postinc1,c
  4336  01163C  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  4337  011640  0060  F09B  FFE6   	movff	btemp,postinc1
  4338  011646  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4339  01164C  0E04               	movlw	4
  4340  01164E  6EE6               	movwf	postinc1,c
  4341  011650  EC87  F0C9         	call	_sprintf	;wreg free
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;main.c: 279:    sprintf(get_vterm_ptr(1, 0), "Calculation     ");
  4345  011654  0E3F               	movlw	low STR_13
  4346  011656  6EE6               	movwf	postinc1,c
  4347  011658  0EFF               	movlw	high STR_13
  4348  01165A  6EE6               	movwf	postinc1,c
  4349  01165C  0E00               	movlw	0
  4350  01165E  6EE6               	movwf	postinc1,c
  4351  011660  0E01               	movlw	1
  4352  011662  6EE6               	movwf	postinc1,c
  4353  011664  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  4354  011668  0060  F09B  FFE6   	movff	btemp,postinc1
  4355  01166E  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4356  011674  0E04               	movlw	4
  4357  011676  6EE6               	movwf	postinc1,c
  4358  011678  EC87  F0C9         	call	_sprintf	;wreg free
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;main.c: 280:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds");
  4362  01167C  0E72               	movlw	low STR_14
  4363  01167E  6EE6               	movwf	postinc1,c
  4364  011680  0EFF               	movlw	high STR_14
  4365  011682  6EE6               	movwf	postinc1,c
  4366  011684  0E00               	movlw	0
  4367  011686  6EE6               	movwf	postinc1,c
  4368  011688  0E02               	movlw	2
  4369  01168A  6EE6               	movwf	postinc1,c
  4370  01168C  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  4371  011690  0060  F09B  FFE6   	movff	btemp,postinc1
  4372  011696  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4373  01169C  0E04               	movlw	4
  4374  01169E  6EE6               	movwf	postinc1,c
  4375  0116A0  EC87  F0C9         	call	_sprintf	;wreg free
  4376                           
  4377                           ; BSR set to: 0
  4378                           ;main.c: 281:    update_lcd(0);
  4379  0116A4  0E00               	movlw	0
  4380  0116A6  6EE6               	movwf	postinc1,c
  4381  0116A8  ECFF  F0C8         	call	_update_lcd	;wreg free
  4382                           
  4383                           ;main.c: 282:    uint16_t i_esr = 1;
  4384  0116AC  0E01               	movlw	1
  4385  0116AE  6E30               	movwf	(btemp+10)^0,c
  4386  0116B0  0E00               	movlw	0
  4387  0116B2  6E31               	movwf	(btemp+11)^0,c
  4388                           
  4389                           ;stkvar	_i_esr @ sp[(-13)+4]
  4390  0116B4  0EF7               	movlw	-9
  4391  0116B6  0060  F0C3  FFE3   	movff	btemp+10,plusw1
  4392  0116BC  0EF8               	movlw	-8
  4393  0116BE  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  4394                           
  4395                           ;main.c: 284:    float esr_temp;;main.c: 285:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4396  0116C4  D06D               	goto	l12861
  4397  0116C6                     l12849:
  4398                           
  4399                           ;main.c: 286:     WaitMs(110);
  4400  0116C6  0E6E               	movlw	110
  4401  0116C8  6EE6               	movwf	postinc1,c
  4402  0116CA  0E00               	movlw	0
  4403  0116CC  6EE6               	movwf	postinc1,c
  4404  0116CE  ECB0  F0D7         	call	_WaitMs	;wreg free
  4405                           
  4406                           ;main.c: 287:     shape = (uint8_t) fabsf(esr_temp);
  4407                           ;stkvar	_esr_temp @ sp[(-13)+0]
  4408  0116D2  0EF3               	movlw	-13
  4409  0116D4  006F FF8F FFE6     	movff	plusw1,postinc1
  4410  0116DA  006F FF8F FFE6     	movff	plusw1,postinc1
  4411  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  4412  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  4413  0116EC  ECD2  F0CE         	call	_fabsf	;wreg free
  4414  0116F0  0060  F09B  FFE6   	movff	btemp,postinc1
  4415  0116F6  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4416  0116FC  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  4417  011702  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  4418  011708  EC07  F0C2         	call	___fltol	;wreg free
  4419  01170C  0060  F098  F031   	movff	btemp,btemp+11
  4420                           
  4421                           ;stkvar	_shape @ sp[(-13)+6]
  4422  011712  0EF9               	movlw	-7
  4423  011714  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  4424                           
  4425                           ;main.c: 288:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4426  01171A  0E00               	movlw	0
  4427  01171C  6EE6               	movwf	postinc1,c
  4428                           
  4429                           ;stkvar	_shape @ sp[(-14)+6]
  4430  01171E  0EF8               	movlw	-8
  4431  011720  50E3               	movf	plusw1,w,c
  4432  011722  6EE6               	movwf	postinc1,c
  4433  011724  EC05  F0CC         	call	_spinners	;wreg free
  4434  011728  5026               	movf	btemp^0,w,c
  4435  01172A  6EE6               	movwf	postinc1,c
  4436  01172C  0E00               	movlw	0
  4437  01172E  6EE6               	movwf	postinc1,c
  4438  011730  0E00               	movlw	0
  4439  011732  6EE6               	movwf	postinc1,c
  4440  011734  0E00               	movlw	0
  4441  011736  6EE6               	movwf	postinc1,c
  4442  011738  EC05  F0CC         	call	_spinners	;wreg free
  4443  01173C  5026               	movf	btemp^0,w,c
  4444  01173E  6EE6               	movwf	postinc1,c
  4445  011740  0E00               	movlw	0
  4446  011742  6EE6               	movwf	postinc1,c
  4447  011744  0E61               	movlw	low STR_15
  4448  011746  6EE6               	movwf	postinc1,c
  4449  011748  0EFD               	movlw	high STR_15
  4450  01174A  6EE6               	movwf	postinc1,c
  4451  01174C  0E00               	movlw	0
  4452  01174E  6EE6               	movwf	postinc1,c
  4453  011750  0E02               	movlw	2
  4454  011752  6EE6               	movwf	postinc1,c
  4455  011754  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  4456  011758  0060  F09B  FFE6   	movff	btemp,postinc1
  4457  01175E  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4458  011764  0E08               	movlw	8
  4459  011766  6EE6               	movwf	postinc1,c
  4460  011768  EC87  F0C9         	call	_sprintf	;wreg free
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;main.c: 289:     update_lcd(0);
  4464  01176C  0E00               	movlw	0
  4465  01176E  6EE6               	movwf	postinc1,c
  4466  011770  ECFF  F0C8         	call	_update_lcd	;wreg free
  4467                           
  4468                           ;main.c: 291:     if (i_esr++ > 512)
  4469                           ;stkvar	_i_esr @ sp[(-13)+4]
  4470  011774  50E1               	movf	fsr1l,w,c
  4471  011776  0FF7               	addlw	-9
  4472  011778  6ED9               	movwf	fsr2l,c
  4473  01177A  50E2               	movf	fsr1h,w,c
  4474  01177C  6EDA               	movwf	fsr2h,c
  4475  01177E  0EFF               	movlw	255
  4476  011780  22DA               	addwfc	fsr2h,f,c
  4477  011782  006F FF7C  F030    	movff	indf2,btemp+10
  4478  011788  0E01               	movlw	1
  4479  01178A  26DE               	addwf	postinc2,f,c
  4480  01178C  006F FF7C  F031    	movff	indf2,btemp+11
  4481  011792  0E00               	movlw	0
  4482  011794  22DD               	addwfc	postdec2,f,c
  4483  011796  0430               	decf	(btemp+10)^0,w,c
  4484  011798  0E02               	movlw	2
  4485  01179A  5831               	subwfb	(btemp+11)^0,w,c
  4486  01179C  B0D8               	btfsc	status,0,c
  4487  01179E  D017               	goto	u12270
  4488  0117A0                     l12861:
  4489                           
  4490                           ;main.c: 285:    while ((esr_temp = esr_check(0)) < 0.0) {
  4491  0117A0  0E00               	movlw	0
  4492  0117A2  6EE6               	movwf	postinc1,c
  4493  0117A4  EC70  F0B4         	call	_esr_check	;wreg free
  4494                           
  4495                           ;stkvar	_esr_temp @ sp[(-13)+0]
  4496  0117A8  0EF3               	movlw	-13
  4497  0117AA  0060  F09B  FFE3   	movff	btemp,plusw1
  4498  0117B0  0EF4               	movlw	-12
  4499  0117B2  0060  F09F  FFE3   	movff	btemp+1,plusw1
  4500  0117B8  0EF5               	movlw	-11
  4501  0117BA  0060  F0A3  FFE3   	movff	btemp+2,plusw1
  4502  0117C0  0EF6               	movlw	-10
  4503  0117C2  0060  F0A7  FFE3   	movff	btemp+3,plusw1
  4504  0117C8  0EF6               	movlw	-10
  4505  0117CA  BEE3               	btfsc	plusw1,7,c
  4506  0117CC  D77C               	goto	l12849
  4507  0117CE                     u12270:
  4508                           
  4509                           ;main.c: 294:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4510  0117CE  0060  F613  FFE6   	movff	_C+132,postinc1
  4511  0117D4  0060  F617  FFE6   	movff	_C+133,postinc1
  4512  0117DA  0060  F61B  FFE6   	movff	_C+134,postinc1
  4513  0117E0  0060  F61F  FFE6   	movff	_C+135,postinc1
  4514  0117E6  0E1F               	movlw	low STR_16
  4515  0117E8  6EE6               	movwf	postinc1,c
  4516  0117EA  0EFD               	movlw	high STR_16
  4517  0117EC  6EE6               	movwf	postinc1,c
  4518  0117EE  0E00               	movlw	0
  4519  0117F0  6EE6               	movwf	postinc1,c
  4520  0117F2  0E00               	movlw	0
  4521  0117F4  6EE6               	movwf	postinc1,c
  4522  0117F6  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  4523  0117FA  0060  F09B  FFE6   	movff	btemp,postinc1
  4524  011800  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4525  011806  0E08               	movlw	8
  4526  011808  6EE6               	movwf	postinc1,c
  4527  01180A  EC87  F0C9         	call	_sprintf	;wreg free
  4528                           
  4529                           ;main.c: 295:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4530  01180E  0060  F78F  FFE6   	movff	_C+227,postinc1
  4531  011814  0060  F793  FFE6   	movff	_C+228,postinc1
  4532  01181A  0060  F797  FFE6   	movff	_C+229,postinc1
  4533  011820  0060  F79B  FFE6   	movff	_C+230,postinc1
  4534  011826  0060  F7BF  FFE6   	movff	_C+239,postinc1
  4535  01182C  0060  F7C3  FFE6   	movff	_C+240,postinc1
  4536  011832  0060  F7C7  FFE6   	movff	_C+241,postinc1
  4537  011838  0060  F7CB  FFE6   	movff	_C+242,postinc1
  4538  01183E  0EBC               	movlw	low STR_17
  4539  011840  6EE6               	movwf	postinc1,c
  4540  011842  0EFC               	movlw	high STR_17
  4541  011844  6EE6               	movwf	postinc1,c
  4542  011846  0E00               	movlw	0
  4543  011848  6EE6               	movwf	postinc1,c
  4544  01184A  0E01               	movlw	1
  4545  01184C  6EE6               	movwf	postinc1,c
  4546  01184E  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  4547  011852  0060  F09B  FFE6   	movff	btemp,postinc1
  4548  011858  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4549  01185E  0E0C               	movlw	12
  4550  011860  6EE6               	movwf	postinc1,c
  4551  011862  EC87  F0C9         	call	_sprintf	;wreg free
  4552                           
  4553                           ;main.c: 296:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4554  011866  0060  F79F  FFE6   	movff	_C+231,postinc1
  4555  01186C  0060  F7A3  FFE6   	movff	_C+232,postinc1
  4556  011872  0060  F7A7  FFE6   	movff	_C+233,postinc1
  4557  011878  0060  F7AB  FFE6   	movff	_C+234,postinc1
  4558  01187E  0060  F7CF  FFE6   	movff	_C+243,postinc1
  4559  011884  0060  F7D3  FFE6   	movff	_C+244,postinc1
  4560  01188A  0060  F7D7  FFE6   	movff	_C+245,postinc1
  4561  011890  0060  F7DB  FFE6   	movff	_C+246,postinc1
  4562  011896  0ED6               	movlw	low STR_18
  4563  011898  6EE6               	movwf	postinc1,c
  4564  01189A  0EFC               	movlw	high STR_18
  4565  01189C  6EE6               	movwf	postinc1,c
  4566  01189E  0E00               	movlw	0
  4567  0118A0  6EE6               	movwf	postinc1,c
  4568  0118A2  0E02               	movlw	2
  4569  0118A4  6EE6               	movwf	postinc1,c
  4570  0118A6  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  4571  0118AA  0060  F09B  FFE6   	movff	btemp,postinc1
  4572  0118B0  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4573  0118B6  0E0C               	movlw	12
  4574  0118B8  6EE6               	movwf	postinc1,c
  4575  0118BA  EC87  F0C9         	call	_sprintf	;wreg free
  4576                           
  4577                           ;main.c: 297:    update_lcd(0);
  4578  0118BE  0E00               	movlw	0
  4579  0118C0  6EE6               	movwf	postinc1,c
  4580  0118C2  ECFF  F0C8         	call	_update_lcd	;wreg free
  4581                           
  4582                           ;main.c: 298:    WaitMs(5000);
  4583  0118C6  0E88               	movlw	136
  4584  0118C8  6EE6               	movwf	postinc1,c
  4585  0118CA  0E13               	movlw	19
  4586  0118CC  6EE6               	movwf	postinc1,c
  4587  0118CE  ECB0  F0D7         	call	_WaitMs	;wreg free
  4588                           
  4589                           ;main.c: 299:    break;
  4590  0118D2  D01C               	goto	l12871
  4591  0118D4                     l1340:
  4592                           
  4593                           ; BSR set to: 2
  4594                           ;main.c: 305:    P.SYSTEM_STABLE = 1;
  4595  0118D4  0100               	movlb	0	; () banked
  4596  0118D6  8197               	bsf	(_P+1)& (0+255),0,b	;volatile
  4597                           
  4598                           ;main.c: 306:    break;
  4599  0118D8  D019               	goto	l12871
  4600  0118DA                     l1342:
  4601                           
  4602                           ; BSR set to: 2
  4603                           ;main.c: 309:    V.ui_state = UI_STATE_INIT;
  4604  0118DA  6B07               	clrf	_V& (0+255),b	;volatile
  4605                           
  4606                           ;main.c: 310:    break;
  4607  0118DC  D017               	goto	l12871
  4608  0118DE                     l12869:
  4609  0118DE  0102               	movlb	2	; () banked
  4610  0118E0  5107               	movf	_V& (0+255),w,b	;volatile
  4611  0118E2  6E30               	movwf	(btemp+10)^0,c
  4612  0118E4  6A31               	clrf	(btemp+11)^0,c
  4613                           
  4614                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4615                           ; Switch size 1, requested type "simple"
  4616                           ; Number of cases is 1, Range of values is 0 to 0
  4617                           ; switch strategies available:
  4618                           ; Name         Instructions Cycles
  4619                           ; simple_byte            4     3 (average)
  4620                           ;	Chosen strategy is simple_byte
  4621  0118E6  5031               	movf	(btemp+11)^0,w,c
  4622  0118E8  0A00               	xorlw	0	; case 0
  4623  0118EA  A4D8               	btfss	status,2,c
  4624  0118EC  D7F6               	goto	l1342
  4625                           
  4626                           ; BSR set to: 2
  4627                           ; Switch size 1, requested type "simple"
  4628                           ; Number of cases is 5, Range of values is 0 to 5
  4629                           ; switch strategies available:
  4630                           ; Name         Instructions Cycles
  4631                           ; simple_byte           16     9 (average)
  4632                           ;	Chosen strategy is simple_byte
  4633  0118EE  5030               	movf	(btemp+10)^0,w,c
  4634  0118F0  0A00               	xorlw	0	; case 0
  4635  0118F2  B4D8               	btfsc	status,2,c
  4636  0118F4  D4E3               	goto	l12751
  4637  0118F6  0A01               	xorlw	1	; case 1
  4638  0118F8  B4D8               	btfsc	status,2,c
  4639  0118FA  D008               	goto	l12871
  4640  0118FC  0A02               	xorlw	2	; case 3
  4641  0118FE  B4D8               	btfsc	status,2,c
  4642  011900  D005               	goto	l12871
  4643  011902  0A07               	xorlw	7	; case 4
  4644  011904  B4D8               	btfsc	status,2,c
  4645  011906  D7E6               	goto	l1340
  4646  011908  0A01               	xorlw	1	; case 5
  4647  01190A  D7E7               	goto	l1342
  4648  01190C                     l12871:
  4649                           
  4650                           ;main.c: 313:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4651  01190C  0E01               	movlw	1
  4652  01190E  6EE6               	movwf	postinc1,c
  4653  011910  EC3D  F0D9         	call	_TimerDone	;wreg free
  4654  011914  5026               	movf	btemp^0,w,c
  4655  011916  B4D8               	btfsc	status,2,c
  4656  011918  D013               	goto	l12883
  4657  01191A  EC17  F0DC         	call	_check_adc_scan	;wreg free
  4658  01191E  5026               	movf	btemp^0,w,c
  4659  011920  B4D8               	btfsc	status,2,c
  4660  011922  D00E               	goto	l12883
  4661                           
  4662                           ;main.c: 317:    convert_adc_data();
  4663  011924  EC76  F0CE         	call	_convert_adc_data	;wreg free
  4664                           
  4665                           ;main.c: 321:    clear_adc_scan();
  4666  011928  EC27  F0DC         	call	_clear_adc_scan	;wreg free
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;main.c: 322:    start_adc_scan();
  4670  01192C  ECC2  F0D3         	call	_start_adc_scan	;wreg free
  4671                           
  4672                           ;main.c: 323:    StartTimer(TMR_ADC, 200);
  4673  011930  0EC8               	movlw	200
  4674  011932  6EE6               	movwf	postinc1,c
  4675  011934  0E00               	movlw	0
  4676  011936  6EE6               	movwf	postinc1,c
  4677  011938  0E01               	movlw	1
  4678  01193A  6EE6               	movwf	postinc1,c
  4679  01193C  ECBC  F0D6         	call	_StartTimer	;wreg free
  4680  011940                     l12883:
  4681                           
  4682                           ;main.c: 330:   if (TimerDone(TMR_DISPLAY)) {
  4683                           
  4684                           ;main.c: 326:   if (V.ticks) {
  4685  011940  0E0A               	movlw	10
  4686  011942  6EE6               	movwf	postinc1,c
  4687  011944  EC3D  F0D9         	call	_TimerDone	;wreg free
  4688  011948  5026               	movf	btemp^0,w,c
  4689  01194A  B4D8               	btfsc	status,2,c
  4690  01194C  EFAE  F090         	goto	l12937
  4691                           
  4692                           ;main.c: 331:    if (TimerDone(TMR_HELPDIS)) {
  4693  011950  0E09               	movlw	9
  4694  011952  6EE6               	movwf	postinc1,c
  4695  011954  EC3D  F0D9         	call	_TimerDone	;wreg free
  4696  011958  5026               	movf	btemp^0,w,c
  4697  01195A  B4D8               	btfsc	status,2,c
  4698  01195C  D004               	goto	l12891
  4699                           
  4700                           ;main.c: 332:     set_display_info(DIS_STR);
  4701  01195E  0E00               	movlw	0
  4702  011960  6EE6               	movwf	postinc1,c
  4703  011962  EC20  F0DB         	call	_set_display_info	;wreg free
  4704  011966                     l12891:
  4705                           
  4706                           ;main.c: 334:    calc_model_data();
  4707  011966  ECD3  F0AD         	call	_calc_model_data	;wreg free
  4708                           
  4709                           ; BSR set to: 1
  4710                           ;main.c: 341:     hid_display(&H);
  4711                           
  4712                           ;main.c: 336:    if (0) {
  4713  01196A  0ED9               	movlw	_H& (0+255)
  4714  01196C  6EE6               	movwf	postinc1,c
  4715  01196E  EC8F  F0CA         	call	_hid_display	;wreg free
  4716                           
  4717                           ;main.c: 342:     switch (H.hid_display) {
  4718  011972  D3A4               	goto	l12917
  4719  011974                     l1350:
  4720                           
  4721                           ; BSR set to: 0
  4722                           ;main.c: 344:      V.calib = 0;
  4723  011974  0102               	movlb	2	; () banked
  4724  011976  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  4725                           
  4726                           ; BSR set to: 2
  4727                           ;main.c: 345:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  4728  011978  0060  F5E3  FFE6   	movff	_C+120,postinc1
  4729  01197E  0060  F5E7  FFE6   	movff	_C+121,postinc1
  4730  011984  0060  F5EB  FFE6   	movff	_C+122,postinc1
  4731  01198A  0060  F5EF  FFE6   	movff	_C+123,postinc1
  4732  011990  0E99               	movlw	low STR_22
  4733  011992  6EE6               	movwf	postinc1,c
  4734  011994  0EFE               	movlw	high STR_22
  4735  011996  6EE6               	movwf	postinc1,c
  4736  011998  0E00               	movlw	0
  4737  01199A  6EE6               	movwf	postinc1,c
  4738  01199C  0E00               	movlw	0
  4739  01199E  6EE6               	movwf	postinc1,c
  4740  0119A0  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  4741  0119A4  0060  F09B  FFE6   	movff	btemp,postinc1
  4742  0119AA  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4743  0119B0  0E08               	movlw	8
  4744  0119B2  6EE6               	movwf	postinc1,c
  4745  0119B4  EC87  F0C9         	call	_sprintf	;wreg free
  4746                           
  4747                           ;main.c: 346:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  4748  0119B8  0060  F5C3  FFE6   	movff	_C+112,postinc1
  4749  0119BE  0060  F5C7  FFE6   	movff	_C+113,postinc1
  4750  0119C4  0060  F5CB  FFE6   	movff	_C+114,postinc1
  4751  0119CA  0060  F5CF  FFE6   	movff	_C+115,postinc1
  4752  0119D0  0EBF               	movlw	low STR_23
  4753  0119D2  6EE6               	movwf	postinc1,c
  4754  0119D4  0EFE               	movlw	high STR_23
  4755  0119D6  6EE6               	movwf	postinc1,c
  4756  0119D8  0E00               	movlw	0
  4757  0119DA  6EE6               	movwf	postinc1,c
  4758  0119DC  0E01               	movlw	1
  4759  0119DE  6EE6               	movwf	postinc1,c
  4760  0119E0  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  4761  0119E4  0060  F09B  FFE6   	movff	btemp,postinc1
  4762  0119EA  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4763  0119F0  0E08               	movlw	8
  4764  0119F2  6EE6               	movwf	postinc1,c
  4765  0119F4  EC87  F0C9         	call	_sprintf	;wreg free
  4766                           
  4767                           ;main.c: 347:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  4768  0119F8  0060  F5D3  FFE6   	movff	_C+116,postinc1
  4769  0119FE  0060  F5D7  FFE6   	movff	_C+117,postinc1
  4770  011A04  0060  F5DB  FFE6   	movff	_C+118,postinc1
  4771  011A0A  0060  F5DF  FFE6   	movff	_C+119,postinc1
  4772  011A10  0EAC               	movlw	low STR_24
  4773  011A12  6EE6               	movwf	postinc1,c
  4774  011A14  0EFE               	movlw	high STR_24
  4775  011A16  6EE6               	movwf	postinc1,c
  4776  011A18  0E00               	movlw	0
  4777  011A1A  6EE6               	movwf	postinc1,c
  4778  011A1C  0E02               	movlw	2
  4779  011A1E  6EE6               	movwf	postinc1,c
  4780  011A20  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  4781  011A24  0060  F09B  FFE6   	movff	btemp,postinc1
  4782  011A2A  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4783  011A30  0E08               	movlw	8
  4784  011A32  6EE6               	movwf	postinc1,c
  4785  011A34  EC87  F0C9         	call	_sprintf	;wreg free
  4786                           
  4787                           ;main.c: 349:      sprintf(get_vterm_ptr(0, 1), "PV   WH %3.2f     ", C.pvkw);
  4788  011A38  0060  F683  FFE6   	movff	_C+160,postinc1
  4789  011A3E  0060  F687  FFE6   	movff	_C+161,postinc1
  4790  011A44  0060  F68B  FFE6   	movff	_C+162,postinc1
  4791  011A4A  0060  F68F  FFE6   	movff	_C+163,postinc1
  4792  011A50  0E60               	movlw	low STR_25
  4793  011A52  6EE6               	movwf	postinc1,c
  4794  011A54  0EFE               	movlw	high STR_25
  4795  011A56  6EE6               	movwf	postinc1,c
  4796  011A58  0E01               	movlw	1
  4797  011A5A  6EE6               	movwf	postinc1,c
  4798  011A5C  0E00               	movlw	0
  4799  011A5E  6EE6               	movwf	postinc1,c
  4800  011A60  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  4801  011A64  0060  F09B  FFE6   	movff	btemp,postinc1
  4802  011A6A  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4803  011A70  0E08               	movlw	8
  4804  011A72  6EE6               	movwf	postinc1,c
  4805  011A74  EC87  F0C9         	call	_sprintf	;wreg free
  4806                           
  4807                           ;main.c: 350:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f     ", C.loadkw);
  4808  011A78  0060  F6A3  FFE6   	movff	_C+168,postinc1
  4809  011A7E  0060  F6A7  FFE6   	movff	_C+169,postinc1
  4810  011A84  0060  F6AB  FFE6   	movff	_C+170,postinc1
  4811  011A8A  0060  F6AF  FFE6   	movff	_C+171,postinc1
  4812  011A90  0E86               	movlw	low STR_26
  4813  011A92  6EE6               	movwf	postinc1,c
  4814  011A94  0EFE               	movlw	high STR_26
  4815  011A96  6EE6               	movwf	postinc1,c
  4816  011A98  0E01               	movlw	1
  4817  011A9A  6EE6               	movwf	postinc1,c
  4818  011A9C  0E01               	movlw	1
  4819  011A9E  6EE6               	movwf	postinc1,c
  4820  011AA0  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  4821  011AA4  0060  F09B  FFE6   	movff	btemp,postinc1
  4822  011AAA  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4823  011AB0  0E08               	movlw	8
  4824  011AB2  6EE6               	movwf	postinc1,c
  4825  011AB4  EC87  F0C9         	call	_sprintf	;wreg free
  4826                           
  4827                           ;main.c: 351:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f     ", C.invkw);
  4828  011AB8  0060  F693  FFE6   	movff	_C+164,postinc1
  4829  011ABE  0060  F697  FFE6   	movff	_C+165,postinc1
  4830  011AC4  0060  F69B  FFE6   	movff	_C+166,postinc1
  4831  011ACA  0060  F69F  FFE6   	movff	_C+167,postinc1
  4832  011AD0  0E73               	movlw	low STR_27
  4833  011AD2  6EE6               	movwf	postinc1,c
  4834  011AD4  0EFE               	movlw	high STR_27
  4835  011AD6  6EE6               	movwf	postinc1,c
  4836  011AD8  0E01               	movlw	1
  4837  011ADA  6EE6               	movwf	postinc1,c
  4838  011ADC  0E02               	movlw	2
  4839  011ADE  6EE6               	movwf	postinc1,c
  4840  011AE0  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  4841  011AE4  0060  F09B  FFE6   	movff	btemp,postinc1
  4842  011AEA  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4843  011AF0  0E08               	movlw	8
  4844  011AF2  6EE6               	movwf	postinc1,c
  4845  011AF4  EC87  F0C9         	call	_sprintf	;wreg free
  4846                           
  4847                           ;main.c: 352:      break;
  4848  011AF8  D2F6               	goto	l12919
  4849  011AFA                     l1352:
  4850                           
  4851                           ; BSR set to: 0
  4852                           ;main.c: 354:      V.calib = 0;
  4853  011AFA  0102               	movlb	2	; () banked
  4854  011AFC  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  4855                           
  4856                           ; BSR set to: 2
  4857                           ;main.c: 355:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  4858  011AFE  0060  F413  FFE6   	movff	_C+4,postinc1
  4859  011B04  0060  F417  FFE6   	movff	_C+5,postinc1
  4860  011B0A  0060  F41B  FFE6   	movff	_C+6,postinc1
  4861  011B10  0060  F41F  FFE6   	movff	_C+7,postinc1
  4862  011B16  0060  F453  FFE6   	movff	_C+20,postinc1
  4863  011B1C  0060  F457  FFE6   	movff	_C+21,postinc1
  4864  011B22  0060  F45B  FFE6   	movff	_C+22,postinc1
  4865  011B28  0060  F45F  FFE6   	movff	_C+23,postinc1
  4866  011B2E  0EF8               	movlw	low STR_28
  4867  011B30  6EE6               	movwf	postinc1,c
  4868  011B32  0EFE               	movlw	high STR_28
  4869  011B34  6EE6               	movwf	postinc1,c
  4870  011B36  0E00               	movlw	0
  4871  011B38  6EE6               	movwf	postinc1,c
  4872  011B3A  0E00               	movlw	0
  4873  011B3C  6EE6               	movwf	postinc1,c
  4874  011B3E  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  4875  011B42  0060  F09B  FFE6   	movff	btemp,postinc1
  4876  011B48  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4877  011B4E  0E0C               	movlw	12
  4878  011B50  6EE6               	movwf	postinc1,c
  4879  011B52  EC87  F0C9         	call	_sprintf	;wreg free
  4880                           
  4881                           ;main.c: 356:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  4882  011B56  0060  F403  FFE6   	movff	_C,postinc1
  4883  011B5C  0060  F407  FFE6   	movff	_C+1,postinc1
  4884  011B62  0060  F40B  FFE6   	movff	_C+2,postinc1
  4885  011B68  0060  F40F  FFE6   	movff	_C+3,postinc1
  4886  011B6E  0060  F443  FFE6   	movff	_C+16,postinc1
  4887  011B74  0060  F447  FFE6   	movff	_C+17,postinc1
  4888  011B7A  0060  F44B  FFE6   	movff	_C+18,postinc1
  4889  011B80  0060  F44F  FFE6   	movff	_C+19,postinc1
  4890  011B86  0ED2               	movlw	low STR_29
  4891  011B88  6EE6               	movwf	postinc1,c
  4892  011B8A  0EFE               	movlw	high STR_29
  4893  011B8C  6EE6               	movwf	postinc1,c
  4894  011B8E  0E00               	movlw	0
  4895  011B90  6EE6               	movwf	postinc1,c
  4896  011B92  0E01               	movlw	1
  4897  011B94  6EE6               	movwf	postinc1,c
  4898  011B96  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  4899  011B9A  0060  F09B  FFE6   	movff	btemp,postinc1
  4900  011BA0  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4901  011BA6  0E0C               	movlw	12
  4902  011BA8  6EE6               	movwf	postinc1,c
  4903  011BAA  EC87  F0C9         	call	_sprintf	;wreg free
  4904                           
  4905                           ;main.c: 357:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  4906  011BAE  0060  F503  FFE6   	movff	_C+64,postinc1
  4907  011BB4  0060  F507  FFE6   	movff	_C+65,postinc1
  4908  011BBA  0060  F50B  FFE6   	movff	_C+66,postinc1
  4909  011BC0  0060  F50F  FFE6   	movff	_C+67,postinc1
  4910  011BC6  0060  F423  FFE6   	movff	_C+8,postinc1
  4911  011BCC  0060  F427  FFE6   	movff	_C+9,postinc1
  4912  011BD2  0060  F42B  FFE6   	movff	_C+10,postinc1
  4913  011BD8  0060  F42F  FFE6   	movff	_C+11,postinc1
  4914  011BDE  0EE5               	movlw	low STR_30
  4915  011BE0  6EE6               	movwf	postinc1,c
  4916  011BE2  0EFE               	movlw	high STR_30
  4917  011BE4  6EE6               	movwf	postinc1,c
  4918  011BE6  0E00               	movlw	0
  4919  011BE8  6EE6               	movwf	postinc1,c
  4920  011BEA  0E02               	movlw	2
  4921  011BEC  6EE6               	movwf	postinc1,c
  4922  011BEE  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  4923  011BF2  0060  F09B  FFE6   	movff	btemp,postinc1
  4924  011BF8  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4925  011BFE  0E0C               	movlw	12
  4926  011C00  6EE6               	movwf	postinc1,c
  4927  011C02  EC87  F0C9         	call	_sprintf	;wreg free
  4928                           
  4929                           ;main.c: 359:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f     ", C.bkwi);
  4930  011C06  0060  F663  FFE6   	movff	_C+152,postinc1
  4931  011C0C  0060  F667  FFE6   	movff	_C+153,postinc1
  4932  011C12  0060  F66B  FFE6   	movff	_C+154,postinc1
  4933  011C18  0060  F66F  FFE6   	movff	_C+155,postinc1
  4934  011C1E  0E27               	movlw	low STR_31
  4935  011C20  6EE6               	movwf	postinc1,c
  4936  011C22  0EFE               	movlw	high STR_31
  4937  011C24  6EE6               	movwf	postinc1,c
  4938  011C26  0E01               	movlw	1
  4939  011C28  6EE6               	movwf	postinc1,c
  4940  011C2A  0E00               	movlw	0
  4941  011C2C  6EE6               	movwf	postinc1,c
  4942  011C2E  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  4943  011C32  0060  F09B  FFE6   	movff	btemp,postinc1
  4944  011C38  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4945  011C3E  0E08               	movlw	8
  4946  011C40  6EE6               	movwf	postinc1,c
  4947  011C42  EC87  F0C9         	call	_sprintf	;wreg free
  4948                           
  4949                           ;main.c: 360:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f     ", C.bkwo);
  4950  011C46  0060  F673  FFE6   	movff	_C+156,postinc1
  4951  011C4C  0060  F677  FFE6   	movff	_C+157,postinc1
  4952  011C52  0060  F67B  FFE6   	movff	_C+158,postinc1
  4953  011C58  0060  F67F  FFE6   	movff	_C+159,postinc1
  4954  011C5E  0E3A               	movlw	low STR_32
  4955  011C60  6EE6               	movwf	postinc1,c
  4956  011C62  0EFE               	movlw	high STR_32
  4957  011C64  6EE6               	movwf	postinc1,c
  4958  011C66  0E01               	movlw	1
  4959  011C68  6EE6               	movwf	postinc1,c
  4960  011C6A  0E01               	movlw	1
  4961  011C6C  6EE6               	movwf	postinc1,c
  4962  011C6E  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  4963  011C72  0060  F09B  FFE6   	movff	btemp,postinc1
  4964  011C78  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4965  011C7E  0E08               	movlw	8
  4966  011C80  6EE6               	movwf	postinc1,c
  4967  011C82  EC87  F0C9         	call	_sprintf	;wreg free
  4968                           
  4969                           ;main.c: 361:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f     ", C.bkwi + C.bkwo);
  4970  011C86  0060  F673  FFE6   	movff	_C+156,postinc1
  4971  011C8C  0060  F677  FFE6   	movff	_C+157,postinc1
  4972  011C92  0060  F67B  FFE6   	movff	_C+158,postinc1
  4973  011C98  0060  F67F  FFE6   	movff	_C+159,postinc1
  4974  011C9E  0060  F663  FFE6   	movff	_C+152,postinc1
  4975  011CA4  0060  F667  FFE6   	movff	_C+153,postinc1
  4976  011CAA  0060  F66B  FFE6   	movff	_C+154,postinc1
  4977  011CB0  0060  F66F  FFE6   	movff	_C+155,postinc1
  4978  011CB6  EC24  F09D         	call	___fladd	;wreg free
  4979  011CBA  0060  F09B  FFE6   	movff	btemp,postinc1
  4980  011CC0  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4981  011CC6  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  4982  011CCC  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  4983  011CD2  0E4D               	movlw	low STR_33
  4984  011CD4  6EE6               	movwf	postinc1,c
  4985  011CD6  0EFE               	movlw	high STR_33
  4986  011CD8  6EE6               	movwf	postinc1,c
  4987  011CDA  0E01               	movlw	1
  4988  011CDC  6EE6               	movwf	postinc1,c
  4989  011CDE  0E02               	movlw	2
  4990  011CE0  6EE6               	movwf	postinc1,c
  4991  011CE2  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  4992  011CE6  0060  F09B  FFE6   	movff	btemp,postinc1
  4993  011CEC  0060  F09F  FFE6   	movff	btemp+1,postinc1
  4994  011CF2  0E08               	movlw	8
  4995  011CF4  6EE6               	movwf	postinc1,c
  4996  011CF6  EC87  F0C9         	call	_sprintf	;wreg free
  4997                           
  4998                           ;main.c: 362:      break;
  4999  011CFA  D1F5               	goto	l12919
  5000  011CFC                     l1353:
  5001                           
  5002                           ; BSR set to: 0
  5003                           ;main.c: 364:      V.calib = 0;
  5004  011CFC  0102               	movlb	2	; () banked
  5005  011CFE  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5006                           
  5007                           ; BSR set to: 2
  5008                           ;main.c: 365:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f     ", C.p_bat);
  5009  011D00  0060  F5F3  FFE6   	movff	_C+124,postinc1
  5010  011D06  0060  F5F7  FFE6   	movff	_C+125,postinc1
  5011  011D0C  0060  F5FB  FFE6   	movff	_C+126,postinc1
  5012  011D12  0060  F5FF  FFE6   	movff	_C+127,postinc1
  5013  011D18  0E9E               	movlw	low STR_34
  5014  011D1A  6EE6               	movwf	postinc1,c
  5015  011D1C  0EFD               	movlw	high STR_34
  5016  011D1E  6EE6               	movwf	postinc1,c
  5017  011D20  0E00               	movlw	0
  5018  011D22  6EE6               	movwf	postinc1,c
  5019  011D24  0E00               	movlw	0
  5020  011D26  6EE6               	movwf	postinc1,c
  5021  011D28  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  5022  011D2C  0060  F09B  FFE6   	movff	btemp,postinc1
  5023  011D32  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5024  011D38  0E08               	movlw	8
  5025  011D3A  6EE6               	movwf	postinc1,c
  5026  011D3C  EC87  F0C9         	call	_sprintf	;wreg free
  5027                           
  5028                           ;main.c: 366:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  5029  011D40  0060  F643  FFE6   	movff	_C+144,postinc1
  5030  011D46  0060  F647  FFE6   	movff	_C+145,postinc1
  5031  011D4C  0060  F64B  FFE6   	movff	_C+146,postinc1
  5032  011D52  0060  F64F  FFE6   	movff	_C+147,postinc1
  5033  011D58  0060  F633  FFE6   	movff	_C+140,postinc1
  5034  011D5E  0060  F637  FFE6   	movff	_C+141,postinc1
  5035  011D64  0060  F63B  FFE6   	movff	_C+142,postinc1
  5036  011D6A  0060  F63F  FFE6   	movff	_C+143,postinc1
  5037  011D70  0EDA               	movlw	low STR_35
  5038  011D72  6EE6               	movwf	postinc1,c
  5039  011D74  0EFD               	movlw	high STR_35
  5040  011D76  6EE6               	movwf	postinc1,c
  5041  011D78  0E00               	movlw	0
  5042  011D7A  6EE6               	movwf	postinc1,c
  5043  011D7C  0E01               	movlw	1
  5044  011D7E  6EE6               	movwf	postinc1,c
  5045  011D80  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  5046  011D84  0060  F09B  FFE6   	movff	btemp,postinc1
  5047  011D8A  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5048  011D90  0E0C               	movlw	12
  5049  011D92  6EE6               	movwf	postinc1,c
  5050  011D94  EC87  F0C9         	call	_sprintf	;wreg free
  5051                           
  5052                           ;main.c: 367:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d     ", spinners(5, 0), C
      +                          .soc, C.runtime);
  5053  011D98  0060  F6B3  FFE6   	movff	_C+172,postinc1
  5054  011D9E  0060  F6B7  FFE6   	movff	_C+173,postinc1
  5055  011DA4  0060  F6BB  FFE6   	movff	_C+174,postinc1
  5056  011DAA  0060  F6BF  FFE6   	movff	_C+175,postinc1
  5057  011DB0  0E00               	movlw	0
  5058  011DB2  6EE6               	movwf	postinc1,c
  5059  011DB4  0E05               	movlw	5
  5060  011DB6  6EE6               	movwf	postinc1,c
  5061  011DB8  EC05  F0CC         	call	_spinners	;wreg free
  5062  011DBC  5026               	movf	btemp^0,w,c
  5063  011DBE  6EE6               	movwf	postinc1,c
  5064  011DC0  0E00               	movlw	0
  5065  011DC2  6EE6               	movwf	postinc1,c
  5066  011DC4  0E8A               	movlw	low STR_36
  5067  011DC6  6EE6               	movwf	postinc1,c
  5068  011DC8  0EFD               	movlw	high STR_36
  5069  011DCA  6EE6               	movwf	postinc1,c
  5070  011DCC  0E00               	movlw	0
  5071  011DCE  6EE6               	movwf	postinc1,c
  5072  011DD0  0E02               	movlw	2
  5073  011DD2  6EE6               	movwf	postinc1,c
  5074  011DD4  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  5075  011DD8  0060  F09B  FFE6   	movff	btemp,postinc1
  5076  011DDE  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5077  011DE4  0E0A               	movlw	10
  5078  011DE6  6EE6               	movwf	postinc1,c
  5079  011DE8  EC87  F0C9         	call	_sprintf	;wreg free
  5080                           
  5081                           ;main.c: 369:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f         ", C.esr);
  5082  011DEC  0060  F613  FFE6   	movff	_C+132,postinc1
  5083  011DF2  0060  F617  FFE6   	movff	_C+133,postinc1
  5084  011DF8  0060  F61B  FFE6   	movff	_C+134,postinc1
  5085  011DFE  0060  F61F  FFE6   	movff	_C+135,postinc1
  5086  011E04  0E76               	movlw	low STR_37
  5087  011E06  6EE6               	movwf	postinc1,c
  5088  011E08  0EFD               	movlw	high STR_37
  5089  011E0A  6EE6               	movwf	postinc1,c
  5090  011E0C  0E01               	movlw	1
  5091  011E0E  6EE6               	movwf	postinc1,c
  5092  011E10  0E00               	movlw	0
  5093  011E12  6EE6               	movwf	postinc1,c
  5094  011E14  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  5095  011E18  0060  F09B  FFE6   	movff	btemp,postinc1
  5096  011E1E  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5097  011E24  0E08               	movlw	8
  5098  011E26  6EE6               	movwf	postinc1,c
  5099  011E28  EC87  F0C9         	call	_sprintf	;wreg free
  5100                           
  5101                           ;main.c: 370:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f     ", C.bv_one_load, C.
      +                          load_i1);
  5102  011E2C  0060  F78F  FFE6   	movff	_C+227,postinc1
  5103  011E32  0060  F793  FFE6   	movff	_C+228,postinc1
  5104  011E38  0060  F797  FFE6   	movff	_C+229,postinc1
  5105  011E3E  0060  F79B  FFE6   	movff	_C+230,postinc1
  5106  011E44  0060  F7BF  FFE6   	movff	_C+239,postinc1
  5107  011E4A  0060  F7C3  FFE6   	movff	_C+240,postinc1
  5108  011E50  0060  F7C7  FFE6   	movff	_C+241,postinc1
  5109  011E56  0060  F7CB  FFE6   	movff	_C+242,postinc1
  5110  011E5C  0EB2               	movlw	low STR_38
  5111  011E5E  6EE6               	movwf	postinc1,c
  5112  011E60  0EFD               	movlw	high STR_38
  5113  011E62  6EE6               	movwf	postinc1,c
  5114  011E64  0E01               	movlw	1
  5115  011E66  6EE6               	movwf	postinc1,c
  5116  011E68  0E01               	movlw	1
  5117  011E6A  6EE6               	movwf	postinc1,c
  5118  011E6C  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  5119  011E70  0060  F09B  FFE6   	movff	btemp,postinc1
  5120  011E76  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5121  011E7C  0E0C               	movlw	12
  5122  011E7E  6EE6               	movwf	postinc1,c
  5123  011E80  EC87  F0C9         	call	_sprintf	;wreg free
  5124                           
  5125                           ;main.c: 371:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f     ", C.bv_full_load, C
      +                          .load_i2);
  5126  011E84  0060  F79F  FFE6   	movff	_C+231,postinc1
  5127  011E8A  0060  F7A3  FFE6   	movff	_C+232,postinc1
  5128  011E90  0060  F7A7  FFE6   	movff	_C+233,postinc1
  5129  011E96  0060  F7AB  FFE6   	movff	_C+234,postinc1
  5130  011E9C  0060  F7CF  FFE6   	movff	_C+243,postinc1
  5131  011EA2  0060  F7D3  FFE6   	movff	_C+244,postinc1
  5132  011EA8  0060  F7D7  FFE6   	movff	_C+245,postinc1
  5133  011EAE  0060  F7DB  FFE6   	movff	_C+246,postinc1
  5134  011EB4  0EC6               	movlw	low STR_39
  5135  011EB6  6EE6               	movwf	postinc1,c
  5136  011EB8  0EFD               	movlw	high STR_39
  5137  011EBA  6EE6               	movwf	postinc1,c
  5138  011EBC  0E01               	movlw	1
  5139  011EBE  6EE6               	movwf	postinc1,c
  5140  011EC0  0E02               	movlw	2
  5141  011EC2  6EE6               	movwf	postinc1,c
  5142  011EC4  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  5143  011EC8  0060  F09B  FFE6   	movff	btemp,postinc1
  5144  011ECE  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5145  011ED4  0E0C               	movlw	12
  5146  011ED6  6EE6               	movwf	postinc1,c
  5147  011ED8  EC87  F0C9         	call	_sprintf	;wreg free
  5148                           
  5149                           ;main.c: 372:      break;
  5150  011EDC  D104               	goto	l12919
  5151  011EDE                     l12903:
  5152                           
  5153                           ; BSR set to: 0
  5154                           ;main.c: 374:      if (!V.calib) {
  5155  011EDE  0102               	movlb	2	; () banked
  5156  011EE0  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  5157  011EE2  A4D8               	btfss	status,2,c
  5158  011EE4  D02D               	goto	l12907
  5159                           
  5160                           ; BSR set to: 2
  5161                           ;main.c: 375:       lp_filter(0.0, i, -1);
  5162  011EE6  0EFF               	movlw	255
  5163  011EE8  6EE6               	movwf	postinc1,c
  5164                           
  5165                           ;stkvar	_i @ sp[(-14)+9]
  5166  011EEA  0EFB               	movlw	-5
  5167  011EEC  50E3               	movf	plusw1,w,c
  5168  011EEE  6EE6               	movwf	postinc1,c
  5169  011EF0  0E00               	movlw	0
  5170  011EF2  6EE6               	movwf	postinc1,c
  5171  011EF4  0E00               	movlw	0
  5172  011EF6  6EE6               	movwf	postinc1,c
  5173  011EF8  0E00               	movlw	0
  5174  011EFA  6EE6               	movwf	postinc1,c
  5175  011EFC  0E00               	movlw	0
  5176  011EFE  6EE6               	movwf	postinc1,c
  5177  011F00  ECE4  F0BE         	call	_lp_filter	;wreg free
  5178                           
  5179                           ;main.c: 376:       lp_filter(0.0, j, -1);
  5180  011F04  0EFF               	movlw	255
  5181  011F06  6EE6               	movwf	postinc1,c
  5182                           
  5183                           ;stkvar	_j @ sp[(-14)+8]
  5184  011F08  0EFA               	movlw	-6
  5185  011F0A  50E3               	movf	plusw1,w,c
  5186  011F0C  6EE6               	movwf	postinc1,c
  5187  011F0E  0E00               	movlw	0
  5188  011F10  6EE6               	movwf	postinc1,c
  5189  011F12  0E00               	movlw	0
  5190  011F14  6EE6               	movwf	postinc1,c
  5191  011F16  0E00               	movlw	0
  5192  011F18  6EE6               	movwf	postinc1,c
  5193  011F1A  0E00               	movlw	0
  5194  011F1C  6EE6               	movwf	postinc1,c
  5195  011F1E  ECE4  F0BE         	call	_lp_filter	;wreg free
  5196                           
  5197                           ;main.c: 377:       lp_filter(0.0, k, -1);
  5198  011F22  0EFF               	movlw	255
  5199  011F24  6EE6               	movwf	postinc1,c
  5200                           
  5201                           ;stkvar	_k @ sp[(-14)+7]
  5202  011F26  0EF9               	movlw	-7
  5203  011F28  50E3               	movf	plusw1,w,c
  5204  011F2A  6EE6               	movwf	postinc1,c
  5205  011F2C  0E00               	movlw	0
  5206  011F2E  6EE6               	movwf	postinc1,c
  5207  011F30  0E00               	movlw	0
  5208  011F32  6EE6               	movwf	postinc1,c
  5209  011F34  0E00               	movlw	0
  5210  011F36  6EE6               	movwf	postinc1,c
  5211  011F38  0E00               	movlw	0
  5212  011F3A  6EE6               	movwf	postinc1,c
  5213  011F3C  ECE4  F0BE         	call	_lp_filter	;wreg free
  5214  011F40                     l12907:
  5215                           
  5216                           ;main.c: 379:      V.calib = 1;
  5217  011F40  0E01               	movlw	1
  5218  011F42  0102               	movlb	2	; () banked
  5219  011F44  6FB3               	movwf	(_V+172)& (0+255),b	;volatile
  5220                           
  5221                           ; BSR set to: 2
  5222                           ;main.c: 380:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  5223  011F46  0E02               	movlw	2
  5224  011F48  6EE6               	movwf	postinc1,c
  5225  011F4A  ECA9  F0D8         	call	_get_switch	;wreg free
  5226  011F4E  5026               	movf	btemp^0,w,c
  5227  011F50  6EE6               	movwf	postinc1,c
  5228  011F52  0E00               	movlw	0
  5229  011F54  6EE6               	movwf	postinc1,c
  5230                           
  5231                           ;stkvar	_i @ sp[(-15)+9]
  5232  011F56  0EFA               	movlw	-6
  5233  011F58  50E3               	movf	plusw1,w,c
  5234  011F5A  0D04               	mullw	4
  5235  011F5C  0E00               	movlw	low _C
  5236  011F5E  24F3               	addwf	243,w,c
  5237  011F60  6ED9               	movwf	fsr2l,c
  5238  011F62  0E01               	movlw	high _C
  5239  011F64  20F4               	addwfc	prodh,w,c
  5240  011F66  6EDA               	movwf	fsr2h,c
  5241  011F68  006F FF7B FFE6     	movff	postinc2,postinc1
  5242  011F6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5243  011F74  006F FF7B FFE6     	movff	postinc2,postinc1
  5244  011F7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5245                           
  5246                           ;stkvar	_i @ sp[(-19)+9]
  5247  011F80  0EF6               	movlw	-10
  5248  011F82  50E3               	movf	plusw1,w,c
  5249  011F84  6EE6               	movwf	postinc1,c
  5250  011F86  EC2F  F0DB         	call	_get_raw_result	;wreg free
  5251  011F8A  0060  F09B  FFE6   	movff	btemp,postinc1
  5252  011F90  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5253  011F96  0E83               	movlw	low STR_19
  5254  011F98  6EE6               	movwf	postinc1,c
  5255  011F9A  0EFF               	movlw	high STR_19
  5256  011F9C  6EE6               	movwf	postinc1,c
  5257  011F9E  0E00               	movlw	0
  5258  011FA0  6EE6               	movwf	postinc1,c
  5259  011FA2  0E00               	movlw	0
  5260  011FA4  6EE6               	movwf	postinc1,c
  5261  011FA6  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  5262  011FAA  0060  F09B  FFE6   	movff	btemp,postinc1
  5263  011FB0  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5264  011FB6  0E0C               	movlw	12
  5265  011FB8  6EE6               	movwf	postinc1,c
  5266  011FBA  EC87  F0C9         	call	_sprintf	;wreg free
  5267                           
  5268                           ; BSR set to: 0
  5269                           ;main.c: 381:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  5270  011FBE  0E03               	movlw	3
  5271  011FC0  6EE6               	movwf	postinc1,c
  5272  011FC2  ECA9  F0D8         	call	_get_switch	;wreg free
  5273  011FC6  5026               	movf	btemp^0,w,c
  5274  011FC8  6EE6               	movwf	postinc1,c
  5275  011FCA  0E00               	movlw	0
  5276  011FCC  6EE6               	movwf	postinc1,c
  5277                           
  5278                           ;stkvar	_j @ sp[(-15)+8]
  5279  011FCE  0EF9               	movlw	-7
  5280  011FD0  50E3               	movf	plusw1,w,c
  5281  011FD2  0D04               	mullw	4
  5282  011FD4  0E00               	movlw	low _C
  5283  011FD6  24F3               	addwf	243,w,c
  5284  011FD8  6ED9               	movwf	fsr2l,c
  5285  011FDA  0E01               	movlw	high _C
  5286  011FDC  20F4               	addwfc	prodh,w,c
  5287  011FDE  6EDA               	movwf	fsr2h,c
  5288  011FE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5289  011FE6  006F FF7B FFE6     	movff	postinc2,postinc1
  5290  011FEC  006F FF7B FFE6     	movff	postinc2,postinc1
  5291  011FF2  006F FF7B FFE6     	movff	postinc2,postinc1
  5292                           
  5293                           ;stkvar	_j @ sp[(-19)+8]
  5294  011FF8  0EF5               	movlw	-11
  5295  011FFA  50E3               	movf	plusw1,w,c
  5296  011FFC  6EE6               	movwf	postinc1,c
  5297  011FFE  EC2F  F0DB         	call	_get_raw_result	;wreg free
  5298  012002  0060  F09B  FFE6   	movff	btemp,postinc1
  5299  012008  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5300  01200E  0E83               	movlw	low STR_19
  5301  012010  6EE6               	movwf	postinc1,c
  5302  012012  0EFF               	movlw	high STR_19
  5303  012014  6EE6               	movwf	postinc1,c
  5304  012016  0E00               	movlw	0
  5305  012018  6EE6               	movwf	postinc1,c
  5306  01201A  0E01               	movlw	1
  5307  01201C  6EE6               	movwf	postinc1,c
  5308  01201E  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  5309  012022  0060  F09B  FFE6   	movff	btemp,postinc1
  5310  012028  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5311  01202E  0E0C               	movlw	12
  5312  012030  6EE6               	movwf	postinc1,c
  5313  012032  EC87  F0C9         	call	_sprintf	;wreg free
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;main.c: 382:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  5317                           ;stkvar	_inp_index @ sp[(-13)+10]
  5318  012036  0EFD               	movlw	-3
  5319  012038  50E3               	movf	plusw1,w,c
  5320  01203A  6E30               	movwf	(btemp+10)^0,c
  5321  01203C  6A31               	clrf	(btemp+11)^0,c
  5322  01203E  0E01               	movlw	1
  5323  012040  2630               	addwf	(btemp+10)^0,f,c
  5324  012042  0E00               	movlw	0
  5325  012044  2231               	addwfc	(btemp+11)^0,f,c
  5326  012046  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  5327  01204C  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  5328                           
  5329                           ;stkvar	_k @ sp[(-15)+7]
  5330  012052  0EF8               	movlw	-8
  5331  012054  50E3               	movf	plusw1,w,c
  5332  012056  0D04               	mullw	4
  5333  012058  0E00               	movlw	low _C
  5334  01205A  24F3               	addwf	243,w,c
  5335  01205C  6ED9               	movwf	fsr2l,c
  5336  01205E  0E01               	movlw	high _C
  5337  012060  20F4               	addwfc	prodh,w,c
  5338  012062  6EDA               	movwf	fsr2h,c
  5339  012064  006F FF7B FFE6     	movff	postinc2,postinc1
  5340  01206A  006F FF7B FFE6     	movff	postinc2,postinc1
  5341  012070  006F FF7B FFE6     	movff	postinc2,postinc1
  5342  012076  006F FF7B FFE6     	movff	postinc2,postinc1
  5343                           
  5344                           ;stkvar	_k @ sp[(-19)+7]
  5345  01207C  0EF4               	movlw	-12
  5346  01207E  50E3               	movf	plusw1,w,c
  5347  012080  6EE6               	movwf	postinc1,c
  5348  012082  EC2F  F0DB         	call	_get_raw_result	;wreg free
  5349  012086  0060  F09B  FFE6   	movff	btemp,postinc1
  5350  01208C  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5351  012092  0E61               	movlw	low STR_21
  5352  012094  6EE6               	movwf	postinc1,c
  5353  012096  0EFF               	movlw	high STR_21
  5354  012098  6EE6               	movwf	postinc1,c
  5355  01209A  0E00               	movlw	0
  5356  01209C  6EE6               	movwf	postinc1,c
  5357  01209E  0E02               	movlw	2
  5358  0120A0  6EE6               	movwf	postinc1,c
  5359  0120A2  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  5360  0120A6  0060  F09B  FFE6   	movff	btemp,postinc1
  5361  0120AC  0060  F09F  FFE6   	movff	btemp+1,postinc1
  5362  0120B2  0E0C               	movlw	12
  5363  0120B4  6EE6               	movwf	postinc1,c
  5364  0120B6  EC87  F0C9         	call	_sprintf	;wreg free
  5365                           
  5366                           ;main.c: 383:      break;
  5367  0120BA  D015               	goto	l12919
  5368  0120BC                     l12917:
  5369  0120BC  0100               	movlb	0	; () banked
  5370  0120BE  51D9               	movf	_H& (0+255),w,b
  5371  0120C0  6E30               	movwf	(btemp+10)^0,c
  5372  0120C2  6A31               	clrf	(btemp+11)^0,c
  5373                           
  5374                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5375                           ; Switch size 1, requested type "simple"
  5376                           ; Number of cases is 1, Range of values is 0 to 0
  5377                           ; switch strategies available:
  5378                           ; Name         Instructions Cycles
  5379                           ; simple_byte            4     3 (average)
  5380                           ;	Chosen strategy is simple_byte
  5381  0120C4  5031               	movf	(btemp+11)^0,w,c
  5382  0120C6  0A00               	xorlw	0	; case 0
  5383  0120C8  A4D8               	btfss	status,2,c
  5384  0120CA  D00D               	goto	l12919
  5385                           
  5386                           ; BSR set to: 0
  5387                           ; Switch size 1, requested type "simple"
  5388                           ; Number of cases is 4, Range of values is 0 to 3
  5389                           ; switch strategies available:
  5390                           ; Name         Instructions Cycles
  5391                           ; simple_byte           13     7 (average)
  5392                           ;	Chosen strategy is simple_byte
  5393  0120CC  5030               	movf	(btemp+10)^0,w,c
  5394  0120CE  0A00               	xorlw	0	; case 0
  5395  0120D0  B4D8               	btfsc	status,2,c
  5396  0120D2  D513               	goto	l1352
  5397  0120D4  0A01               	xorlw	1	; case 1
  5398  0120D6  B4D8               	btfsc	status,2,c
  5399  0120D8  D44D               	goto	l1350
  5400  0120DA  0A03               	xorlw	3	; case 2
  5401  0120DC  B4D8               	btfsc	status,2,c
  5402  0120DE  D60E               	goto	l1353
  5403  0120E0  0A01               	xorlw	1	; case 3
  5404  0120E2  B4D8               	btfsc	status,2,c
  5405  0120E4  D6FC               	goto	l12903
  5406  0120E6                     l12919:
  5407                           
  5408                           ; BSR set to: 0
  5409                           ;main.c: 387:     clear_hid_pflags(&H);
  5410  0120E6  0ED9               	movlw	_H& (0+255)
  5411  0120E8  6EE6               	movwf	postinc1,c
  5412  0120EA  EC67  F0DA         	call	_clear_hid_pflags	;wreg free
  5413                           
  5414                           ;main.c: 389:    StartTimer(TMR_DISPLAY, 250);
  5415  0120EE  0EFA               	movlw	250
  5416  0120F0  6EE6               	movwf	postinc1,c
  5417  0120F2  0E00               	movlw	0
  5418  0120F4  6EE6               	movwf	postinc1,c
  5419  0120F6  0E0A               	movlw	10
  5420  0120F8  6EE6               	movwf	postinc1,c
  5421  0120FA  ECBC  F0D6         	call	_StartTimer	;wreg free
  5422                           
  5423                           ;main.c: 390:    V.enter = check_enter_button(&H);
  5424  0120FE  0ED9               	movlw	_H& (0+255)
  5425  012100  6EE6               	movwf	postinc1,c
  5426  012102  ECDC  F0D6         	call	_check_enter_button	;wreg free
  5427  012106  5026               	movf	btemp^0,w,c
  5428  012108  0102               	movlb	2	; () banked
  5429  01210A  6FB4               	movwf	(_V+173)& (0+255),b	;volatile
  5430                           
  5431                           ; BSR set to: 2
  5432                           ;main.c: 391:    if (V.enter && (H.hid_display != HID_AUX)) {
  5433  01210C  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  5434  01210E  B4D8               	btfsc	status,2,c
  5435  012110  D013               	goto	l12933
  5436                           
  5437                           ; BSR set to: 2
  5438  012112  0E03               	movlw	3
  5439  012114  0100               	movlb	0	; () banked
  5440  012116  19D9               	xorwf	_H& (0+255),w,b
  5441  012118  B4D8               	btfsc	status,2,c
  5442  01211A  D00E               	goto	l12933
  5443                           
  5444                           ; BSR set to: 0
  5445                           ;main.c: 392:     V.enter = 0;
  5446  01211C  0102               	movlb	2	; () banked
  5447  01211E  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  5448                           
  5449                           ; BSR set to: 2
  5450                           ;main.c: 393:     V.screen = ~V.screen;
  5451  012120  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5452  012122  D002               	goto	u12350
  5453  012124  0E01               	movlw	1
  5454  012126  D001               	goto	u12356
  5455  012128                     u12350:
  5456  012128  0E00               	movlw	0
  5457  01212A                     u12356:
  5458  01212A  0AFF               	xorlw	255
  5459  01212C  6E31               	movwf	(btemp+11)^0,c
  5460  01212E  51A3               	movf	(_V+156)& (0+255),w,b	;volatile
  5461  012130  1831               	xorwf	(btemp+11)^0,w,c
  5462  012132  0BFE               	andlw	-2
  5463  012134  1831               	xorwf	(btemp+11)^0,w,c
  5464  012136  6FA3               	movwf	(_V+156)& (0+255),b	;volatile
  5465  012138                     l12933:
  5466                           
  5467                           ;main.c: 395:    set_vterm(V.screen);
  5468  012138  0102               	movlb	2	; () banked
  5469  01213A  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5470  01213C  D002               	goto	u12360
  5471  01213E  0E01               	movlw	1
  5472  012140  D001               	goto	u12366
  5473  012142                     u12360:
  5474  012142  0E00               	movlw	0
  5475  012144                     u12366:
  5476  012144  6EE6               	movwf	postinc1,c
  5477  012146  EC11  F0DB         	call	_set_vterm	;wreg free
  5478                           
  5479                           ;main.c: 396:    update_lcd(V.screen);
  5480  01214A  0102               	movlb	2	; () banked
  5481  01214C  A1A3               	btfss	(_V+156)& (0+255),0,b	;volatile
  5482  01214E  D002               	goto	u12370
  5483  012150  0E01               	movlw	1
  5484  012152  D001               	goto	u12376
  5485  012154                     u12370:
  5486  012154  0E00               	movlw	0
  5487  012156                     u12376:
  5488  012156  6EE6               	movwf	postinc1,c
  5489  012158  ECFF  F0C8         	call	_update_lcd	;wreg free
  5490  01215C                     l12937:
  5491                           
  5492                           ;main.c: 402:   check_help(V.flipper);
  5493  01215C  0102               	movlb	2	; () banked
  5494  01215E  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  5495  012160  6EE6               	movwf	postinc1,c
  5496  012162  ECD9  F0BB         	call	_check_help	;wreg free
  5497                           
  5498                           ;main.c: 404:   if (V.enter) {
  5499  012166  0102               	movlb	2	; () banked
  5500  012168  51B4               	movf	(_V+173)& (0+255),w,b	;volatile
  5501  01216A  B4D8               	btfsc	status,2,c
  5502  01216C  D062               	goto	l1358
  5503                           
  5504                           ; BSR set to: 2
  5505                           ;main.c: 405:    V.enter = 0;
  5506  01216E  6BB4               	clrf	(_V+173)& (0+255),b	;volatile
  5507                           
  5508                           ;main.c: 406:    V.calib = 0;
  5509  012170  6BB3               	clrf	(_V+172)& (0+255),b	;volatile
  5510                           
  5511                           ; BSR set to: 2
  5512                           ;main.c: 407:    inp_index += 3;
  5513                           ;stkvar	_inp_index @ sp[(-13)+10]
  5514  012172  0EFD               	movlw	-3
  5515  012174  006F FF8C  F026    	movff	plusw1,btemp
  5516  01217A  0E03               	movlw	3
  5517  01217C  2626               	addwf	btemp^0,f,c
  5518  01217E  0EFD               	movlw	-3
  5519  012180  0060  F09B  FFE3   	movff	btemp,plusw1
  5520                           
  5521                           ;main.c: 408:    if (inp_index > 9)
  5522                           ;stkvar	_inp_index @ sp[(-13)+10]
  5523  012186  0EFD               	movlw	-3
  5524  012188  006F FF8C  F026    	movff	plusw1,btemp
  5525  01218E  0E09               	movlw	9
  5526  012190  6426               	cpfsgt	btemp^0,c
  5527  012192  D03A               	goto	l12965
  5528                           
  5529                           ; BSR set to: 2
  5530                           ;main.c: 409:     inp_index = 0;
  5531                           ;stkvar	_inp_index @ sp[(-13)+10]
  5532  012194  0EFD               	movlw	-3
  5533  012196  6AE3               	clrf	plusw1,c
  5534  012198  D037               	goto	l12965
  5535  01219A                     l12947:
  5536                           
  5537                           ; BSR set to: 2
  5538                           ;main.c: 412:     i = C_BATT;
  5539                           ;stkvar	_i @ sp[(-13)+9]
  5540  01219A  0EFC               	movlw	-4
  5541  01219C  6AE3               	clrf	plusw1,c
  5542                           
  5543                           ; BSR set to: 2
  5544                           ;main.c: 413:     j = C_PV;
  5545                           ;stkvar	_j @ sp[(-13)+8]
  5546  01219E  0EFB               	movlw	-5
  5547  0121A0  6AE3               	clrf	plusw1,c
  5548  0121A2  2AE3               	incf	plusw1,f,c
  5549                           
  5550                           ; BSR set to: 2
  5551                           ;main.c: 414:     k = V_CC;
  5552                           ;stkvar	_k @ sp[(-13)+7]
  5553  0121A4  0EFA               	movlw	-6
  5554  0121A6  6AE3               	clrf	plusw1,c
  5555  0121A8  82E3               	bsf	plusw1,1,c
  5556                           
  5557                           ;main.c: 415:     break;
  5558  0121AA  D043               	goto	l1358
  5559  0121AC                     l12953:
  5560                           
  5561                           ; BSR set to: 2
  5562                           ;main.c: 417:     i = V_BAT;
  5563                           ;stkvar	_i @ sp[(-13)+9]
  5564  0121AC  0EFC               	movlw	-4
  5565  0121AE  6AE3               	clrf	plusw1,c
  5566  0121B0  84E3               	bsf	plusw1,2,c
  5567                           
  5568                           ;main.c: 418:     j = V_PV;
  5569                           ;stkvar	_j @ sp[(-13)+8]
  5570  0121B2  0EFB               	movlw	-5
  5571  0121B4  6AE3               	clrf	plusw1,c
  5572  0121B6  80E3               	bsf	plusw1,0,c
  5573  0121B8  84E3               	bsf	plusw1,2,c	;indir
  5574                           
  5575                           ;main.c: 419:     k = V_CBUS;
  5576                           ;stkvar	_k @ sp[(-13)+7]
  5577  0121BA  0EFA               	movlw	-6
  5578  0121BC  6AE3               	clrf	plusw1,c
  5579  0121BE  82E3               	bsf	plusw1,1,c
  5580  0121C0  84E3               	bsf	plusw1,2,c	;indir
  5581                           
  5582                           ;main.c: 420:     break;
  5583  0121C2  D037               	goto	l1358
  5584  0121C4                     l12955:
  5585                           
  5586                           ; BSR set to: 2
  5587                           ;main.c: 422:     i = V_BBAT;
  5588                           ;stkvar	_i @ sp[(-13)+9]
  5589  0121C4  0EFC               	movlw	-4
  5590  0121C6  6AE3               	clrf	plusw1,c
  5591  0121C8  82E3               	bsf	plusw1,1,c
  5592  0121CA  86E3               	bsf	plusw1,3,c	;indir
  5593                           
  5594                           ; BSR set to: 2
  5595                           ;main.c: 423:     j = V_TEMP;
  5596  0121CC  0E0B               	movlw	11
  5597  0121CE  6E31               	movwf	(btemp+11)^0,c
  5598                           
  5599                           ;stkvar	_j @ sp[(-13)+8]
  5600  0121D0  0EFB               	movlw	-5
  5601  0121D2  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  5602                           
  5603                           ; BSR set to: 2
  5604                           ;main.c: 424:     k = V_INVERTER;
  5605                           ;stkvar	_k @ sp[(-13)+7]
  5606  0121D8  0EFA               	movlw	-6
  5607  0121DA  6AE3               	clrf	plusw1,c
  5608  0121DC  84E3               	bsf	plusw1,2,c
  5609  0121DE  86E3               	bsf	plusw1,3,c	;indir
  5610                           
  5611                           ;main.c: 425:     break;
  5612  0121E0  D028               	goto	l1358
  5613  0121E2                     l12961:
  5614                           
  5615                           ; BSR set to: 2
  5616                           ;main.c: 427:     i = V_LIGHT_SENSOR;
  5617  0121E2  0E0D               	movlw	13
  5618  0121E4  6E31               	movwf	(btemp+11)^0,c
  5619                           
  5620                           ;stkvar	_i @ sp[(-13)+9]
  5621  0121E6  0EFC               	movlw	-4
  5622  0121E8  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  5623                           
  5624                           ;main.c: 428:     j = V_LIGHT_SENSOR;
  5625  0121EE  0E0D               	movlw	13
  5626  0121F0  6E31               	movwf	(btemp+11)^0,c
  5627                           
  5628                           ;stkvar	_j @ sp[(-13)+8]
  5629  0121F2  0EFB               	movlw	-5
  5630  0121F4  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  5631                           
  5632                           ;main.c: 429:     k = V_LIGHT_SENSOR;
  5633  0121FA  0E0D               	movlw	13
  5634  0121FC  6E31               	movwf	(btemp+11)^0,c
  5635                           
  5636                           ;stkvar	_k @ sp[(-13)+7]
  5637  0121FE  0EFA               	movlw	-6
  5638  012200  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  5639                           
  5640                           ;main.c: 430:     break;
  5641  012206  D015               	goto	l1358
  5642  012208                     l12965:
  5643                           
  5644                           ; BSR set to: 2
  5645                           ;stkvar	_inp_index @ sp[(-13)+10]
  5646  012208  0EFD               	movlw	-3
  5647  01220A  50E3               	movf	plusw1,w,c
  5648  01220C  6E30               	movwf	(btemp+10)^0,c
  5649  01220E  6A31               	clrf	(btemp+11)^0,c
  5650                           
  5651                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5652                           ; Switch size 1, requested type "simple"
  5653                           ; Number of cases is 1, Range of values is 0 to 0
  5654                           ; switch strategies available:
  5655                           ; Name         Instructions Cycles
  5656                           ; simple_byte            4     3 (average)
  5657                           ;	Chosen strategy is simple_byte
  5658  012210  5031               	movf	(btemp+11)^0,w,c
  5659  012212  0A00               	xorlw	0	; case 0
  5660  012214  A4D8               	btfss	status,2,c
  5661  012216  D00D               	goto	l1358
  5662                           
  5663                           ; BSR set to: 2
  5664                           ; Switch size 1, requested type "simple"
  5665                           ; Number of cases is 4, Range of values is 0 to 9
  5666                           ; switch strategies available:
  5667                           ; Name         Instructions Cycles
  5668                           ; simple_byte           13     7 (average)
  5669                           ;	Chosen strategy is simple_byte
  5670  012218  5030               	movf	(btemp+10)^0,w,c
  5671  01221A  0A00               	xorlw	0	; case 0
  5672  01221C  B4D8               	btfsc	status,2,c
  5673  01221E  D7BD               	goto	l12947
  5674  012220  0A03               	xorlw	3	; case 3
  5675  012222  B4D8               	btfsc	status,2,c
  5676  012224  D7C3               	goto	l12953
  5677  012226  0A05               	xorlw	5	; case 6
  5678  012228  B4D8               	btfsc	status,2,c
  5679  01222A  D7CC               	goto	l12955
  5680  01222C  0A0F               	xorlw	15	; case 9
  5681  01222E  B4D8               	btfsc	status,2,c
  5682  012230  D7D8               	goto	l12961
  5683  012232                     l1358:
  5684                           
  5685                           ; BSR set to: 2
  5686                           ;main.c: 439:   if (V.set_sequ) {
  5687  012232  A1A2               	btfss	(_V+155)& (0+255),0,b	;volatile
  5688  012234  EF6F  F08C         	goto	l12869
  5689                           
  5690                           ; BSR set to: 2
  5691                           ;main.c: 440:    if (TimerDone(TMR_INFO)) {
  5692  012238  0E07               	movlw	7
  5693  01223A  6EE6               	movwf	postinc1,c
  5694  01223C  EC3D  F0D9         	call	_TimerDone	;wreg free
  5695  012240  5026               	movf	btemp^0,w,c
  5696  012242  B4D8               	btfsc	status,2,c
  5697  012244  D00C               	goto	l12975
  5698                           
  5699                           ;main.c: 441:     V.set_sequ = 0;
  5700  012246  0102               	movlb	2	; () banked
  5701  012248  91A2               	bcf	(_V+155)& (0+255),0,b	;volatile
  5702                           
  5703                           ; BSR set to: 2
  5704                           ;main.c: 442:     set_vterm(0);
  5705  01224A  0E00               	movlw	0
  5706  01224C  6EE6               	movwf	postinc1,c
  5707  01224E  EC11  F0DB         	call	_set_vterm	;wreg free
  5708                           
  5709                           ;main.c: 443:     update_lcd(0);
  5710  012252  0E00               	movlw	0
  5711  012254  6EE6               	movwf	postinc1,c
  5712  012256  ECFF  F0C8         	call	_update_lcd	;wreg free
  5713                           
  5714                           ;main.c: 444:    } else {
  5715  01225A  EF6F  F08C         	goto	l12869
  5716  01225E                     l12975:
  5717                           
  5718                           ;main.c: 445:     set_vterm(2);
  5719  01225E  0E02               	movlw	2
  5720  012260  6EE6               	movwf	postinc1,c
  5721  012262  EC11  F0DB         	call	_set_vterm	;wreg free
  5722                           
  5723                           ;main.c: 446:     update_lcd(2);
  5724  012266  0E02               	movlw	2
  5725  012268  6EE6               	movwf	postinc1,c
  5726  01226A  ECFF  F0C8         	call	_update_lcd	;wreg free
  5727  01226E  EF6F  F08C         	goto	l12869
  5728  012272                     __end_of_main:
  5729                           	opt callstack 0
  5730                           
  5731 ;; *************** function _static_soc *****************
  5732 ;; Defined at:
  5733 ;;		line 116 in file "mbmc.c"
  5734 ;; Parameters:    Size  Location     Type
  5735 ;;		None
  5736 ;; Auto vars:     Size  Location     Type
  5737 ;;		None
  5738 ;; Return value:  Size  Location     Type
  5739 ;;                  1  [STACK] void 
  5740 ;; Registers used:
  5741 ;;		wreg, status,2
  5742 ;; Tracked objects:
  5743 ;;		On entry : 0/0
  5744 ;;		On exit  : 3F/1
  5745 ;;		Unchanged: 0/0
  5746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5751 ;;Total ram usage:        0 bytes
  5752 ;; Hardware stack levels used:    1
  5753 ;; Hardware stack levels required when called:   15
  5754 ;; This function calls:
  5755 ;;		Nothing
  5756 ;; This function is called by:
  5757 ;;		_main
  5758 ;; This function uses a reentrant model
  5759 ;;
  5760                           
  5761                           	psect	text1
  5762  01B4AA                     __ptext1:
  5763                           	opt callstack 0
  5764  01B4AA                     _static_soc:
  5765                           	opt callstack 15
  5766                           
  5767                           ;mbmc.c: 118:  C.runtime = 120;
  5768                           
  5769                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5770                           ;incstack = 0
  5771  01B4AA  0E00               	movlw	0
  5772  01B4AC  0101               	movlb	1	; () banked
  5773  01B4AE  6FAD               	movwf	(_C+173)& (0+255),b	;volatile
  5774  01B4B0  0E78               	movlw	120
  5775  01B4B2  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
  5776                           
  5777                           ;mbmc.c: 119:  C.soc = 100;
  5778  01B4B4  0E00               	movlw	0
  5779  01B4B6  6FAF               	movwf	(_C+175)& (0+255),b	;volatile
  5780  01B4B8  0E64               	movlw	100
  5781  01B4BA  6FAE               	movwf	(_C+174)& (0+255),b	;volatile
  5782                           
  5783                           ; BSR set to: 1
  5784                           ;mbmc.c: 120:  C.dynamic_ah = C.bank_ah;
  5785  01B4BC  C188  F18C         	movff	_C+136,_C+140	;volatile
  5786  01B4C0  C189  F18D         	movff	_C+137,_C+141	;volatile
  5787  01B4C4  C18A  F18E         	movff	_C+138,_C+142	;volatile
  5788  01B4C8  C18B  F18F         	movff	_C+139,_C+143	;volatile
  5789                           
  5790                           ; BSR set to: 1
  5791                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5792  01B4CC  0012               	return		;funcret
  5793  01B4CE                     __end_of_static_soc:
  5794                           	opt callstack 0
  5795                           
  5796 ;; *************** function _start_switch_handler *****************
  5797 ;; Defined at:
  5798 ;;		line 121 in file "dio.c"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;		None
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;		None
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  1  [STACK] void 
  5805 ;; Registers used:
  5806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  5807 ;; Tracked objects:
  5808 ;;		On entry : 1/0
  5809 ;;		On exit  : 3F/39
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5816 ;;Total ram usage:        0 bytes
  5817 ;; Hardware stack levels used:    1
  5818 ;; Hardware stack levels required when called:   16
  5819 ;; This function calls:
  5820 ;;		_INT1_SetInterruptHandler
  5821 ;; This function is called by:
  5822 ;;		_main
  5823 ;; This function uses a reentrant model
  5824 ;;
  5825                           
  5826                           	psect	text2
  5827  01B5C4                     __ptext2:
  5828                           	opt callstack 0
  5829  01B5C4                     _start_switch_handler:
  5830                           	opt callstack 14
  5831                           
  5832                           ;dio.c: 123:  (PIE5bits.INT1IE = 0);
  5833                           
  5834                           ; BSR set to: 1
  5835                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5836                           ;incstack = 0
  5837  01B5C4  0139               	movlb	57	; () banked
  5838  01B5C6  9195               	bcf	149,0,b	;volatile
  5839                           
  5840                           ; BSR set to: 57
  5841                           ;dio.c: 124:  INT1_SetInterruptHandler(switch_handler);
  5842  01B5C8  0E40               	movlw	low _switch_handler
  5843  01B5CA  6EE6               	movwf	postinc1,c
  5844  01B5CC  0E8C               	movlw	high _switch_handler
  5845  01B5CE  6EE6               	movwf	postinc1,c
  5846  01B5D0  0E01               	movlw	low (_switch_handler shr (0+16))
  5847  01B5D2  6EE6               	movwf	postinc1,c
  5848  01B5D4  ECC9  F0D9         	call	_INT1_SetInterruptHandler	;wreg free
  5849                           
  5850                           ;dio.c: 125:  S.button[SNULL].sw = SW_INVALID;
  5851  01B5D8  0E02               	movlw	2
  5852  01B5DA  0102               	movlb	2	; () banked
  5853  01B5DC  6FE8               	movwf	(_S+35)& (0+255),b	;volatile
  5854                           
  5855                           ; BSR set to: 2
  5856                           ;dio.c: 126:  (PIE5bits.INT1IE = 1);
  5857  01B5DE  0139               	movlb	57	; () banked
  5858  01B5E0  8195               	bsf	149,0,b	;volatile
  5859                           
  5860                           ; BSR set to: 57
  5861                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  5862  01B5E2  0012               	return		;funcret
  5863  01B5E4                     __end_of_start_switch_handler:
  5864                           	opt callstack 0
  5865                           
  5866 ;; *************** function _srand *****************
  5867 ;; Defined at:
  5868 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  5869 ;; Parameters:    Size  Location     Type
  5870 ;;  s               2  [STACK] unsigned int 
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;		None
  5873 ;; Return value:  Size  Location     Type
  5874 ;;                  1  [STACK] void 
  5875 ;; Registers used:
  5876 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  5877 ;; Tracked objects:
  5878 ;;		On entry : 0/0
  5879 ;;		On exit  : 3F/2
  5880 ;;		Unchanged: 0/0
  5881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5886 ;;Total ram usage:        0 bytes
  5887 ;; Hardware stack levels used:    1
  5888 ;; Hardware stack levels required when called:   15
  5889 ;; This function calls:
  5890 ;;		Nothing
  5891 ;; This function is called by:
  5892 ;;		_main
  5893 ;; This function uses a reentrant model
  5894 ;;
  5895                           
  5896                           	psect	text3
  5897  01AFCC                     __ptext3:
  5898                           	opt callstack 0
  5899  01AFCC                     _srand:
  5900                           	opt callstack 15
  5901                           
  5902                           ;stkvar	_s @ sp[(0)+-2]
  5903                           
  5904                           ; BSR set to: 57
  5905                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5906                           ;incstack = 0
  5907  01AFCC  0EFE               	movlw	-2
  5908  01AFCE  50E3               	movf	plusw1,w,c
  5909  01AFD0  0FFF               	addlw	255
  5910  01AFD2  6E30               	movwf	(btemp+10)^0,c
  5911  01AFD4  0EFF               	movlw	-1
  5912  01AFD6  006F FF8C  F031    	movff	plusw1,btemp+11
  5913  01AFDC  0EFF               	movlw	255
  5914  01AFDE  2231               	addwfc	(btemp+11)^0,f,c
  5915  01AFE0  0060  F0C0  F2F6   	movff	btemp+10,_seed
  5916  01AFE6  0060  F0C4  F2F7   	movff	btemp+11,_seed+1
  5917  01AFEC  0102               	movlb	2	; () banked
  5918  01AFEE  6BF8               	clrf	(_seed+2)& (0+255),b
  5919  01AFF0  6BF9               	clrf	(_seed+3)& (0+255),b
  5920  01AFF2  6BFA               	clrf	(_seed+4)& (0+255),b
  5921  01AFF4  6BFB               	clrf	(_seed+5)& (0+255),b
  5922  01AFF6  6BFC               	clrf	(_seed+6)& (0+255),b
  5923  01AFF8  6BFD               	clrf	(_seed+7)& (0+255),b
  5924                           
  5925                           ; BSR set to: 2
  5926                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  5927  01AFFA  52E5               	movf	postdec1,f,c
  5928  01AFFC  52E5               	movf	postdec1,f,c
  5929  01AFFE  0012               	return		;funcret
  5930  01B000                     __end_of_srand:
  5931                           	opt callstack 0
  5932                           
  5933 ;; *************** function _spinners *****************
  5934 ;; Defined at:
  5935 ;;		line 134 in file "mbmc.c"
  5936 ;; Parameters:    Size  Location     Type
  5937 ;;  shape           1  [STACK] unsigned char 
  5938 ;;  reset           1  [STACK] unsigned char 
  5939 ;; Auto vars:     Size  Location     Type
  5940 ;;  c               1  [STACK] unsigned char 
  5941 ;; Return value:  Size  Location     Type
  5942 ;;                  1  [STACK] unsigned char 
  5943 ;; Registers used:
  5944 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
  5945 ;; Tracked objects:
  5946 ;;		On entry : 0/0
  5947 ;;		On exit  : 0/0
  5948 ;;		Unchanged: 0/0
  5949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5954 ;;Total ram usage:        0 bytes
  5955 ;; Hardware stack levels used:    1
  5956 ;; Hardware stack levels required when called:   16
  5957 ;; This function calls:
  5958 ;;		_strlen
  5959 ;; This function is called by:
  5960 ;;		_main
  5961 ;; This function uses a reentrant model
  5962 ;;
  5963                           
  5964                           	psect	text4
  5965  01980A                     __ptext4:
  5966                           	opt callstack 0
  5967  01980A                     _spinners:
  5968                           	opt callstack 0
  5969                           
  5970                           ; BSR set to: 2
  5971                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5972  01980A  52E6               	movf	postinc1,f,c
  5973                           
  5974                           ;mbmc.c: 134: char spinners(uint8_t shape, uint8_t reset);mbmc.c: 135: {;mbmc.c: 136:  s
      +                          tatic uint8_t s[6];;mbmc.c: 137:  char c;;mbmc.c: 139:  if (shape > (6 - 1))
  5975                           ;stkvar	_shape @ sp[(-1)+-1]
  5976                           
  5977                           ;incstack = 0
  5978  01980C  0EFE               	movlw	-2
  5979  01980E  006F FF8C  F026    	movff	plusw1,btemp
  5980  019814  0E05               	movlw	5
  5981  019816  6426               	cpfsgt	btemp^0,c
  5982  019818  D002               	goto	l1868
  5983                           
  5984                           ;mbmc.c: 140:   shape = 0;
  5985                           ;stkvar	_shape @ sp[(-1)+-1]
  5986  01981A  0EFE               	movlw	-2
  5987  01981C  6AE3               	clrf	plusw1,c
  5988  01981E                     l1868:
  5989                           
  5990                           ;mbmc.c: 141:  if (reset)
  5991                           ;stkvar	_reset @ sp[(-1)+-2]
  5992  01981E  0EFD               	movlw	-3
  5993  019820  50E3               	movf	plusw1,w,c
  5994  019822  B4D8               	btfsc	status,2,c
  5995  019824  D00A               	goto	l10627
  5996                           
  5997                           ;mbmc.c: 142:   s[shape] = 0;
  5998                           ;stkvar	_shape @ sp[(-1)+-1]
  5999  019826  0EFE               	movlw	-2
  6000  019828  006F FF8C  F031    	movff	plusw1,btemp+11
  6001  01982E  5031               	movf	(btemp+11)^0,w,c
  6002  019830  0F6C               	addlw	low spinners@s
  6003  019832  6ED9               	movwf	fsr2l,c
  6004  019834  6ADA               	clrf	fsr2h,c
  6005  019836  0E00               	movlw	0
  6006  019838  6EDF               	movwf	indf2,c
  6007  01983A                     l10627:
  6008                           
  6009                           ;mbmc.c: 143:  c = spin[shape][s[shape]];
  6010                           ;stkvar	_shape @ sp[(-1)+-1]
  6011  01983A  0EFE               	movlw	-2
  6012  01983C  50E3               	movf	plusw1,w,c
  6013  01983E  0D14               	mullw	20
  6014  019840  0EDB               	movlw	low _spin
  6015  019842  6E30               	movwf	(btemp+10)^0,c
  6016  019844  0EFB               	movlw	high _spin
  6017  019846  6E31               	movwf	(btemp+11)^0,c
  6018  019848  50F3               	movf	243,w,c
  6019  01984A  2630               	addwf	(btemp+10)^0,f,c
  6020  01984C  50F4               	movf	244,w,c
  6021  01984E  2231               	addwfc	(btemp+11)^0,f,c
  6022                           
  6023                           ;stkvar	_shape @ sp[(-1)+-1]
  6024  019850  0EFE               	movlw	-2
  6025  019852  006F FF8C  F02F    	movff	plusw1,btemp+9
  6026  019858  502F               	movf	(btemp+9)^0,w,c
  6027  01985A  0F6C               	addlw	low spinners@s
  6028  01985C  6ED9               	movwf	fsr2l,c
  6029  01985E  6ADA               	clrf	fsr2h,c
  6030  019860  50DF               	movf	indf2,w,c
  6031  019862  2630               	addwf	(btemp+10)^0,f,c
  6032  019864  0E00               	movlw	0
  6033  019866  2231               	addwfc	(btemp+11)^0,f,c
  6034  019868  0060  F0C3  FFF6   	movff	btemp+10,tblptrl
  6035  01986E  0060  F0C7  FFF7   	movff	btemp+11,tblptrh
  6036  019874                     	if	0	;tblptru may be non-zero
  6037  019874                     	endif
  6038  019874                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6039  019874  0E00               	movlw	low (__mediumconst shr (0+16))
  6040  019876  6EF8               	movwf	tblptru,c
  6041  019878                     	endif
  6042                           
  6043                           ;stkvar	_c @ sp[(-1)+0]
  6044  019878  0008               	tblrd		*
  6045  01987A  0EFF               	movlw	-1
  6046  01987C  006F FFD7 FFE3     	movff	tablat,plusw1
  6047                           
  6048                           ;mbmc.c: 144:  if (++s[shape] >= strlen(spin[shape]))
  6049                           ;stkvar	_shape @ sp[(-1)+-1]
  6050  019882  0EFE               	movlw	-2
  6051  019884  50E3               	movf	plusw1,w,c
  6052  019886  0D14               	mullw	20
  6053  019888  0EDB               	movlw	low _spin
  6054  01988A  6E30               	movwf	(btemp+10)^0,c
  6055  01988C  0EFB               	movlw	high _spin
  6056  01988E  6E31               	movwf	(btemp+11)^0,c
  6057  019890  50F3               	movf	243,w,c
  6058  019892  2630               	addwf	(btemp+10)^0,f,c
  6059  019894  50F4               	movf	244,w,c
  6060  019896  2231               	addwfc	(btemp+11)^0,f,c
  6061  019898  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  6062  01989E  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  6063  0198A4  EC27  F0D0         	call	_strlen	;wreg free
  6064                           
  6065                           ;stkvar	_shape @ sp[(-1)+-1]
  6066  0198A8  0EFE               	movlw	-2
  6067  0198AA  006F FF8C  F031    	movff	plusw1,btemp+11
  6068  0198B0  5031               	movf	(btemp+11)^0,w,c
  6069  0198B2  0F6C               	addlw	low spinners@s
  6070  0198B4  6ED9               	movwf	fsr2l,c
  6071  0198B6  6ADA               	clrf	fsr2h,c
  6072  0198B8  2ADF               	incf	indf2,f,c
  6073  0198BA  50DF               	movf	indf2,w,c
  6074  0198BC  6E30               	movwf	(btemp+10)^0,c
  6075  0198BE  6A31               	clrf	(btemp+11)^0,c
  6076  0198C0  5026               	movf	btemp^0,w,c
  6077  0198C2  5C30               	subwf	(btemp+10)^0,w,c
  6078  0198C4  5027               	movf	(btemp+1)^0,w,c
  6079  0198C6  5831               	subwfb	(btemp+11)^0,w,c
  6080  0198C8  A0D8               	btfss	status,0,c
  6081  0198CA  D00A               	goto	l10633
  6082                           
  6083                           ;mbmc.c: 145:   s[shape] = 0;
  6084                           ;stkvar	_shape @ sp[(-1)+-1]
  6085  0198CC  0EFE               	movlw	-2
  6086  0198CE  006F FF8C  F031    	movff	plusw1,btemp+11
  6087  0198D4  5031               	movf	(btemp+11)^0,w,c
  6088  0198D6  0F6C               	addlw	low spinners@s
  6089  0198D8  6ED9               	movwf	fsr2l,c
  6090  0198DA  6ADA               	clrf	fsr2h,c
  6091  0198DC  0E00               	movlw	0
  6092  0198DE  6EDF               	movwf	indf2,c
  6093  0198E0                     l10633:
  6094                           
  6095                           ;mbmc.c: 146:  return c;
  6096                           ;stkvar	_c @ sp[(-1)+0]
  6097  0198E0  0EFF               	movlw	-1
  6098  0198E2  006F FF8C  F026    	movff	plusw1,btemp
  6099                           
  6100                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6101  0198E8  52E5               	movf	postdec1,f,c
  6102  0198EA  52E5               	movf	postdec1,f,c
  6103  0198EC  52E5               	movf	postdec1,f,c
  6104  0198EE  0012               	return		;funcret
  6105  0198F0                     __end_of_spinners:
  6106                           	opt callstack 0
  6107                           
  6108 ;; *************** function _init_port_dma *****************
  6109 ;; Defined at:
  6110 ;;		line 90 in file "eadog.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;		None
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;		None
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  1  [STACK] void 
  6117 ;; Registers used:
  6118 ;;		wreg, status,2
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/2
  6121 ;;		On exit  : 3F/3B
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6128 ;;Total ram usage:        0 bytes
  6129 ;; Hardware stack levels used:    1
  6130 ;; Hardware stack levels required when called:   15
  6131 ;; This function calls:
  6132 ;;		Nothing
  6133 ;; This function is called by:
  6134 ;;		_main
  6135 ;; This function uses a reentrant model
  6136 ;;
  6137                           
  6138                           	psect	text5
  6139  01B034                     __ptext5:
  6140                           	opt callstack 0
  6141  01B034                     _init_port_dma:
  6142                           	opt callstack 15
  6143                           
  6144                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  6145                           
  6146                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6147                           ;incstack = 0
  6148  01B034  0E3F               	movlw	-193
  6149  01B036  013B               	movlb	59	; () banked
  6150  01B038  17DD               	andwf	221,f,b	;volatile
  6151                           
  6152                           ; BSR set to: 59
  6153                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  6154  01B03A  9BDD               	bcf	221,5,b	;volatile
  6155                           
  6156                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  6157  01B03C  51DD               	movf	221,w,b	;volatile
  6158  01B03E  0BF9               	andlw	-7
  6159  01B040  0902               	iorlw	2
  6160  01B042  6FDD               	movwf	221,b	;volatile
  6161                           
  6162                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  6163  01B044  0EE7               	movlw	-25
  6164  01B046  17DD               	andwf	221,f,b	;volatile
  6165                           
  6166                           ; BSR set to: 59
  6167                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  6168  01B048  81DD               	bsf	221,0,b	;volatile
  6169                           
  6170                           ; BSR set to: 59
  6171                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  6172  01B04A  9DDC               	bcf	220,6,b	;volatile
  6173                           
  6174                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  6175  01B04C  0E3D               	movlw	61
  6176  01B04E  6FD1               	movwf	209,b	;volatile
  6177  01B050  0EEA               	movlw	234
  6178  01B052  6FD0               	movwf	208,b	;volatile
  6179                           
  6180                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  6181  01B054  0EFF               	movlw	low _port_data
  6182  01B056  6FD9               	movwf	217,b	;volatile
  6183  01B058  0E05               	movlw	high _port_data
  6184  01B05A  6FDA               	movwf	218,b	;volatile
  6185  01B05C  0E00               	movlw	low (_port_data shr (0+16))
  6186  01B05E  6FDB               	movwf	219,b	;volatile
  6187                           
  6188                           ; BSR set to: 59
  6189                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  6190  01B060  9BDC               	bcf	220,5,b	;volatile
  6191                           
  6192                           ; BSR set to: 59
  6193                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6194  01B062  0012               	return		;funcret
  6195  01B064                     __end_of_init_port_dma:
  6196                           	opt callstack 0
  6197                           
  6198 ;; *************** function _init_display *****************
  6199 ;; Defined at:
  6200 ;;		line 38 in file "eadog.c"
  6201 ;; Parameters:    Size  Location     Type
  6202 ;;		None
  6203 ;; Auto vars:     Size  Location     Type
  6204 ;;		None
  6205 ;; Return value:  Size  Location     Type
  6206 ;;                  1  [STACK] void 
  6207 ;; Registers used:
  6208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6209 ;; Tracked objects:
  6210 ;;		On entry : 3F/3B
  6211 ;;		On exit  : 3F/3D
  6212 ;;		Unchanged: 0/0
  6213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6218 ;;Total ram usage:        0 bytes
  6219 ;; Hardware stack levels used:    1
  6220 ;; Hardware stack levels required when called:   17
  6221 ;; This function calls:
  6222 ;;		_ringBufS_init
  6223 ;;		_send_lcd_cmd
  6224 ;;		_send_lcd_cmd_long
  6225 ;;		_wdtdelay
  6226 ;; This function is called by:
  6227 ;;		_main
  6228 ;; This function uses a reentrant model
  6229 ;;
  6230                           
  6231                           	psect	text6
  6232  019720                     __ptext6:
  6233                           	opt callstack 0
  6234  019720                     _init_display:
  6235                           	opt callstack 13
  6236                           
  6237                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  6238                           
  6239                           ; BSR set to: 59
  6240                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6241                           ;incstack = 0
  6242  019720  0E43               	movlw	low _ring_buf1
  6243  019722  0100               	movlb	0	; () banked
  6244  019724  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  6245  019726  0E04               	movlw	high _ring_buf1
  6246  019728  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  6247                           
  6248                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  6249  01972A  0E00               	movlw	low _ring_buf2
  6250  01972C  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  6251  01972E  0E04               	movlw	high _ring_buf2
  6252  019730  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  6253                           
  6254                           ; BSR set to: 0
  6255                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  6256  019732  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  6257  019738  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  6258  01973E  EC29  F0D9         	call	_ringBufS_init	;wreg free
  6259                           
  6260                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  6261  019742  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  6262  019748  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  6263  01974E  EC29  F0D9         	call	_ringBufS_init	;wreg free
  6264                           
  6265                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  6266  019752  84BE               	bsf	190,2,c	;volatile
  6267  019754  84BC               	bsf	188,2,c	;volatile
  6268                           
  6269                           ;eadog.c: 59:  wdtdelay(350000);
  6270  019756  0E30               	movlw	48
  6271  019758  6EE6               	movwf	postinc1,c
  6272  01975A  0E57               	movlw	87
  6273  01975C  6EE6               	movwf	postinc1,c
  6274  01975E  0E05               	movlw	5
  6275  019760  6EE6               	movwf	postinc1,c
  6276  019762  0E00               	movlw	0
  6277  019764  6EE6               	movwf	postinc1,c
  6278  019766  EC85  F0D4         	call	_wdtdelay	;wreg free
  6279                           
  6280                           ; BSR set to: 0
  6281                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  6282  01976A  0E39               	movlw	57
  6283  01976C  6EE6               	movwf	postinc1,c
  6284  01976E  EC15  F0D9         	call	_send_lcd_cmd	;wreg free
  6285                           
  6286                           ; BSR set to: 0
  6287                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  6288  019772  0E1D               	movlw	29
  6289  019774  6EE6               	movwf	postinc1,c
  6290  019776  EC15  F0D9         	call	_send_lcd_cmd	;wreg free
  6291                           
  6292                           ; BSR set to: 0
  6293                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  6294  01977A  0E50               	movlw	80
  6295  01977C  6EE6               	movwf	postinc1,c
  6296  01977E  EC15  F0D9         	call	_send_lcd_cmd	;wreg free
  6297                           
  6298                           ; BSR set to: 0
  6299                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  6300  019782  0E6C               	movlw	108
  6301  019784  6EE6               	movwf	postinc1,c
  6302  019786  EC15  F0D9         	call	_send_lcd_cmd	;wreg free
  6303                           
  6304                           ; BSR set to: 0
  6305                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  6306  01978A  0E76               	movlw	118
  6307  01978C  6EE6               	movwf	postinc1,c
  6308  01978E  EC15  F0D9         	call	_send_lcd_cmd	;wreg free
  6309                           
  6310                           ; BSR set to: 0
  6311                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  6312  019792  0E38               	movlw	56
  6313  019794  6EE6               	movwf	postinc1,c
  6314  019796  EC01  F0D9         	call	_send_lcd_cmd_long	;wreg free
  6315                           
  6316                           ; BSR set to: 0
  6317                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  6318  01979A  0E0F               	movlw	15
  6319  01979C  6EE6               	movwf	postinc1,c
  6320  01979E  EC15  F0D9         	call	_send_lcd_cmd	;wreg free
  6321                           
  6322                           ; BSR set to: 0
  6323                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  6324  0197A2  0E01               	movlw	1
  6325  0197A4  6EE6               	movwf	postinc1,c
  6326  0197A6  EC01  F0D9         	call	_send_lcd_cmd_long	;wreg free
  6327                           
  6328                           ; BSR set to: 0
  6329                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  6330  0197AA  0E02               	movlw	2
  6331  0197AC  6EE6               	movwf	postinc1,c
  6332  0197AE  EC15  F0D9         	call	_send_lcd_cmd	;wreg free
  6333                           
  6334                           ; BSR set to: 0
  6335                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  6336  0197B2  0E06               	movlw	6
  6337  0197B4  6EE6               	movwf	postinc1,c
  6338  0197B6  EC15  F0D9         	call	_send_lcd_cmd	;wreg free
  6339                           
  6340                           ; BSR set to: 0
  6341                           ;eadog.c: 70:  wdtdelay(30);
  6342  0197BA  0E1E               	movlw	30
  6343  0197BC  6EE6               	movwf	postinc1,c
  6344  0197BE  0E00               	movlw	0
  6345  0197C0  6EE6               	movwf	postinc1,c
  6346  0197C2  0E00               	movlw	0
  6347  0197C4  6EE6               	movwf	postinc1,c
  6348  0197C6  0E00               	movlw	0
  6349  0197C8  6EE6               	movwf	postinc1,c
  6350  0197CA  EC85  F0D4         	call	_wdtdelay	;wreg free
  6351                           
  6352                           ; BSR set to: 0
  6353                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  6354  0197CE  0E02               	movlw	2
  6355  0197D0  013D               	movlb	61	; () banked
  6356  0197D2  6F16               	movwf	22,b	;volatile
  6357                           
  6358                           ; BSR set to: 61
  6359                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  6360  0197D4  0E40               	movlw	64
  6361  0197D6  6F15               	movwf	21,b	;volatile
  6362                           
  6363                           ; BSR set to: 61
  6364                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  6365  0197D8  0E83               	movlw	131
  6366  0197DA  6F14               	movwf	20,b	;volatile
  6367                           
  6368                           ; BSR set to: 61
  6369                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  6370  0197DC  931A               	bcf	26,1,b	;volatile
  6371                           
  6372                           ; BSR set to: 61
  6373                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  6374  0197DE  0E3F               	movlw	-193
  6375  0197E0  013B               	movlb	59	; () banked
  6376  0197E2  17FD               	andwf	253,f,b	;volatile
  6377                           
  6378                           ; BSR set to: 59
  6379                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  6380  0197E4  9BFD               	bcf	253,5,b	;volatile
  6381                           
  6382                           ; BSR set to: 59
  6383                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  6384  0197E6  51FD               	movf	253,w,b	;volatile
  6385  0197E8  0BF9               	andlw	-7
  6386  0197EA  0902               	iorlw	2
  6387  0197EC  6FFD               	movwf	253,b	;volatile
  6388                           
  6389                           ; BSR set to: 59
  6390                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  6391  0197EE  0EE7               	movlw	-25
  6392  0197F0  17FD               	andwf	253,f,b	;volatile
  6393                           
  6394                           ; BSR set to: 59
  6395                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  6396  0197F2  81FD               	bsf	253,0,b	;volatile
  6397                           
  6398                           ; BSR set to: 59
  6399                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  6400  0197F4  0E43               	movlw	low _ring_buf1
  6401  0197F6  6FF9               	movwf	249,b	;volatile
  6402  0197F8  0E04               	movlw	high _ring_buf1
  6403  0197FA  6FFA               	movwf	250,b	;volatile
  6404  0197FC  0E00               	movlw	low (_ring_buf1 shr (0+16))
  6405  0197FE  6FFB               	movwf	251,b	;volatile
  6406                           
  6407                           ; BSR set to: 59
  6408                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  6409  019800  9BFC               	bcf	252,5,b	;volatile
  6410                           
  6411                           ; BSR set to: 59
  6412                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  6413  019802  013D               	movlb	61	; () banked
  6414  019804  831A               	bsf	26,1,b	;volatile
  6415                           
  6416                           ; BSR set to: 61
  6417                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  6418  019806  94BE               	bcf	190,2,c	;volatile
  6419                           
  6420                           ; BSR set to: 61
  6421                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6422  019808  0012               	return		;funcret
  6423  01980A                     __end_of_init_display:
  6424                           	opt callstack 0
  6425                           
  6426 ;; *************** function _send_lcd_cmd_long *****************
  6427 ;; Defined at:
  6428 ;;		line 129 in file "eadog.c"
  6429 ;; Parameters:    Size  Location     Type
  6430 ;;  cmd             1  [STACK] const unsigned char 
  6431 ;; Auto vars:     Size  Location     Type
  6432 ;;		None
  6433 ;; Return value:  Size  Location     Type
  6434 ;;                  1  [STACK] void 
  6435 ;; Registers used:
  6436 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6437 ;; Tracked objects:
  6438 ;;		On entry : 3F/0
  6439 ;;		On exit  : 3F/0
  6440 ;;		Unchanged: 0/0
  6441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6446 ;;Total ram usage:        0 bytes
  6447 ;; Hardware stack levels used:    1
  6448 ;; Hardware stack levels required when called:   16
  6449 ;; This function calls:
  6450 ;;		_SPI1_Exchange8bit
  6451 ;;		_wdtdelay
  6452 ;; This function is called by:
  6453 ;;		_init_display
  6454 ;; This function uses a reentrant model
  6455 ;;
  6456                           
  6457                           	psect	text7
  6458  01B202                     __ptext7:
  6459                           	opt callstack 0
  6460  01B202                     _send_lcd_cmd_long:
  6461                           	opt callstack 13
  6462                           
  6463                           ; BSR set to: 61
  6464                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6465                           ;incstack = 0
  6466                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  6467  01B202  92BC               	bcf	188,1,c	;volatile
  6468                           
  6469                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  6470  01B204  94BC               	bcf	188,2,c	;volatile
  6471                           
  6472                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  6473                           ;stkvar	_cmd @ sp[(0)+-1]
  6474  01B206  0EFF               	movlw	-1
  6475  01B208  50E3               	movf	plusw1,w,c
  6476  01B20A  6EE6               	movwf	postinc1,c
  6477  01B20C  EC02  F0DB         	call	_SPI1_Exchange8bit	;wreg free
  6478                           
  6479                           ; BSR set to: 57
  6480                           ;eadog.c: 134:  wdtdelay(800);
  6481  01B210  0E20               	movlw	32
  6482  01B212  6EE6               	movwf	postinc1,c
  6483  01B214  0E03               	movlw	3
  6484  01B216  6EE6               	movwf	postinc1,c
  6485  01B218  0E00               	movlw	0
  6486  01B21A  6EE6               	movwf	postinc1,c
  6487  01B21C  0E00               	movlw	0
  6488  01B21E  6EE6               	movwf	postinc1,c
  6489  01B220  EC85  F0D4         	call	_wdtdelay	;wreg free
  6490                           
  6491                           ; BSR set to: 0
  6492  01B224  82BC               	bsf	188,1,c	;volatile
  6493                           
  6494                           ; BSR set to: 0
  6495                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6496  01B226  52E5               	movf	postdec1,f,c
  6497  01B228  0012               	return		;funcret
  6498  01B22A                     __end_of_send_lcd_cmd_long:
  6499                           	opt callstack 0
  6500                           
  6501 ;; *************** function _send_lcd_cmd *****************
  6502 ;; Defined at:
  6503 ;;		line 117 in file "eadog.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;  cmd             1  [STACK] const unsigned char 
  6506 ;; Auto vars:     Size  Location     Type
  6507 ;;		None
  6508 ;; Return value:  Size  Location     Type
  6509 ;;                  1  [STACK] void 
  6510 ;; Registers used:
  6511 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6512 ;; Tracked objects:
  6513 ;;		On entry : 3F/0
  6514 ;;		On exit  : 3F/0
  6515 ;;		Unchanged: 0/0
  6516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6521 ;;Total ram usage:        0 bytes
  6522 ;; Hardware stack levels used:    1
  6523 ;; Hardware stack levels required when called:   16
  6524 ;; This function calls:
  6525 ;;		_SPI1_Exchange8bit
  6526 ;;		_wdtdelay
  6527 ;; This function is called by:
  6528 ;;		_init_display
  6529 ;; This function uses a reentrant model
  6530 ;;
  6531                           
  6532                           	psect	text8
  6533  01B22A                     __ptext8:
  6534                           	opt callstack 0
  6535  01B22A                     _send_lcd_cmd:
  6536                           	opt callstack 13
  6537                           
  6538                           ; BSR set to: 0
  6539                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6540                           ;incstack = 0
  6541                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  6542  01B22A  92BC               	bcf	188,1,c	;volatile
  6543                           
  6544                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  6545  01B22C  94BC               	bcf	188,2,c	;volatile
  6546                           
  6547                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  6548                           ;stkvar	_cmd @ sp[(0)+-1]
  6549  01B22E  0EFF               	movlw	-1
  6550  01B230  50E3               	movf	plusw1,w,c
  6551  01B232  6EE6               	movwf	postinc1,c
  6552  01B234  EC02  F0DB         	call	_SPI1_Exchange8bit	;wreg free
  6553                           
  6554                           ; BSR set to: 57
  6555                           ;eadog.c: 122:  wdtdelay(30);
  6556  01B238  0E1E               	movlw	30
  6557  01B23A  6EE6               	movwf	postinc1,c
  6558  01B23C  0E00               	movlw	0
  6559  01B23E  6EE6               	movwf	postinc1,c
  6560  01B240  0E00               	movlw	0
  6561  01B242  6EE6               	movwf	postinc1,c
  6562  01B244  0E00               	movlw	0
  6563  01B246  6EE6               	movwf	postinc1,c
  6564  01B248  EC85  F0D4         	call	_wdtdelay	;wreg free
  6565                           
  6566                           ; BSR set to: 0
  6567  01B24C  82BC               	bsf	188,1,c	;volatile
  6568                           
  6569                           ; BSR set to: 0
  6570                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  6571  01B24E  52E5               	movf	postdec1,f,c
  6572  01B250  0012               	return		;funcret
  6573  01B252                     __end_of_send_lcd_cmd:
  6574                           	opt callstack 0
  6575                           
  6576 ;; *************** function _SPI1_Exchange8bit *****************
  6577 ;; Defined at:
  6578 ;;		line 79 in file "mcc_generated_files/spi1.c"
  6579 ;; Parameters:    Size  Location     Type
  6580 ;;  data            1  [STACK] unsigned char 
  6581 ;; Auto vars:     Size  Location     Type
  6582 ;;		None
  6583 ;; Return value:  Size  Location     Type
  6584 ;;                  1  [STACK] unsigned char 
  6585 ;; Registers used:
  6586 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  6587 ;; Tracked objects:
  6588 ;;		On entry : 0/0
  6589 ;;		On exit  : 3F/39
  6590 ;;		Unchanged: 0/0
  6591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6596 ;;Total ram usage:        0 bytes
  6597 ;; Hardware stack levels used:    1
  6598 ;; Hardware stack levels required when called:   15
  6599 ;; This function calls:
  6600 ;;		Nothing
  6601 ;; This function is called by:
  6602 ;;		_send_lcd_cmd
  6603 ;;		_send_lcd_cmd_long
  6604 ;; This function uses a reentrant model
  6605 ;;
  6606                           
  6607                           	psect	text9
  6608  01B604                     __ptext9:
  6609                           	opt callstack 0
  6610  01B604                     _SPI1_Exchange8bit:
  6611                           	opt callstack 13
  6612                           
  6613                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  6614                           
  6615                           ; BSR set to: 0
  6616                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6617                           ;incstack = 0
  6618  01B604  0E01               	movlw	1
  6619  01B606  013D               	movlb	61	; () banked
  6620  01B608  6F12               	movwf	18,b	;volatile
  6621                           
  6622                           ; BSR set to: 61
  6623                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  6624                           ;stkvar	_data @ sp[(0)+-1]
  6625  01B60A  0EFF               	movlw	-1
  6626  01B60C  006F FF8F FD11     	movff	plusw1,15633	;volatile
  6627  01B612                     l807:
  6628                           
  6629                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  6630  01B612  0139               	movlb	57	; () banked
  6631  01B614  A9A2               	btfss	162,4,b	;volatile
  6632  01B616  D7FD               	goto	l807
  6633                           
  6634                           ; BSR set to: 57
  6635                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  6636  01B618  006F F440  F026    	movff	15632,btemp	;volatile
  6637                           
  6638                           ; BSR set to: 57
  6639                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6640  01B61E  52E5               	movf	postdec1,f,c
  6641  01B620  0012               	return		;funcret
  6642  01B622                     __end_of_SPI1_Exchange8bit:
  6643                           	opt callstack 0
  6644                           
  6645 ;; *************** function _ringBufS_init *****************
  6646 ;; Defined at:
  6647 ;;		line 22 in file "ringbufs.c"
  6648 ;; Parameters:    Size  Location     Type
  6649 ;;  _this           2  [STACK] PTR volatile struct ring
  6650 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6651 ;; Auto vars:     Size  Location     Type
  6652 ;;		None
  6653 ;; Return value:  Size  Location     Type
  6654 ;;                  1  [STACK] void 
  6655 ;; Registers used:
  6656 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6657 ;; Tracked objects:
  6658 ;;		On entry : 0/0
  6659 ;;		On exit  : 0/0
  6660 ;;		Unchanged: 0/0
  6661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6666 ;;Total ram usage:        0 bytes
  6667 ;; Hardware stack levels used:    1
  6668 ;; Hardware stack levels required when called:   16
  6669 ;; This function calls:
  6670 ;;		_memset
  6671 ;; This function is called by:
  6672 ;;		_init_display
  6673 ;; This function uses a reentrant model
  6674 ;;
  6675                           
  6676                           	psect	text10
  6677  01B252                     __ptext10:
  6678                           	opt callstack 0
  6679  01B252                     _ringBufS_init:
  6680                           	opt callstack 13
  6681                           
  6682                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  6683                           
  6684                           ; BSR set to: 57
  6685                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6686                           ;incstack = 0
  6687  01B252  0E43               	movlw	67
  6688  01B254  6EE6               	movwf	postinc1,c
  6689  01B256  0E00               	movlw	0
  6690  01B258  6EE6               	movwf	postinc1,c
  6691  01B25A  0E00               	movlw	0
  6692  01B25C  6EE6               	movwf	postinc1,c
  6693  01B25E  0E00               	movlw	0
  6694  01B260  6EE6               	movwf	postinc1,c
  6695                           
  6696                           ;stkvar	__this @ sp[(-4)+-2]
  6697  01B262  0EFA               	movlw	-6
  6698  01B264  006F FF8F FFE6     	movff	plusw1,postinc1
  6699  01B26A  006F FF8F FFE6     	movff	plusw1,postinc1
  6700  01B270  ECFA  F0B2         	call	_memset	;wreg free
  6701                           
  6702                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6703  01B274  52E5               	movf	postdec1,f,c
  6704  01B276  52E5               	movf	postdec1,f,c
  6705  01B278  0012               	return		;funcret
  6706  01B27A                     __end_of_ringBufS_init:
  6707                           	opt callstack 0
  6708                           
  6709 ;; *************** function _init_bsoc *****************
  6710 ;; Defined at:
  6711 ;;		line 95 in file "bsoc.c"
  6712 ;; Parameters:    Size  Location     Type
  6713 ;;		None
  6714 ;; Auto vars:     Size  Location     Type
  6715 ;;		None
  6716 ;; Return value:  Size  Location     Type
  6717 ;;                  1  [STACK] void 
  6718 ;; Registers used:
  6719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6720 ;; Tracked objects:
  6721 ;;		On entry : 3F/1
  6722 ;;		On exit  : 0/0
  6723 ;;		Unchanged: 0/0
  6724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6729 ;;Total ram usage:        0 bytes
  6730 ;; Hardware stack levels used:    1
  6731 ;; Hardware stack levels required when called:   18
  6732 ;; This function calls:
  6733 ;;		_TMR3_SetInterruptHandler
  6734 ;;		_Volts_to_SOC
  6735 ;;		___fldiv
  6736 ;;		___flmul
  6737 ;;		___fltol
  6738 ;;		___xxtofl
  6739 ;;		_conv_raw_result
  6740 ;; This function is called by:
  6741 ;;		_main
  6742 ;; This function uses a reentrant model
  6743 ;;
  6744                           
  6745                           	psect	text11
  6746  018580                     __ptext11:
  6747                           	opt callstack 0
  6748  018580                     _init_bsoc:
  6749                           	opt callstack 12
  6750                           
  6751                           ;bsoc.c: 100:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  6752                           
  6753                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6754                           ;incstack = 0
  6755  018580  0E00               	movlw	0
  6756  018582  6EE6               	movwf	postinc1,c
  6757  018584  0E00               	movlw	0
  6758  018586  6EE6               	movwf	postinc1,c
  6759  018588  0E7A               	movlw	122
  6760  01858A  6EE6               	movwf	postinc1,c
  6761  01858C  0E44               	movlw	68
  6762  01858E  6EE6               	movwf	postinc1,c
  6763  018590  0E00               	movlw	0
  6764  018592  6EE6               	movwf	postinc1,c
  6765  018594  0E04               	movlw	4
  6766  018596  6EE6               	movwf	postinc1,c
  6767  018598  EC60  F0A7         	call	_conv_raw_result	;wreg free
  6768  01859C  0060  F09B  FFE6   	movff	btemp,postinc1
  6769  0185A2  0060  F09F  FFE6   	movff	btemp+1,postinc1
  6770  0185A8  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  6771  0185AE  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  6772  0185B4  EC07  F0C2         	call	___fltol	;wreg free
  6773  0185B8  0060  F09B  FFE6   	movff	btemp,postinc1
  6774  0185BE  0060  F09F  FFE6   	movff	btemp+1,postinc1
  6775  0185C4  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  6776  0185CA  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  6777  0185D0  0E00               	movlw	0
  6778  0185D2  6EE6               	movwf	postinc1,c
  6779  0185D4  ECE2  F0BC         	call	___xxtofl	;wreg free
  6780  0185D8  0060  F09B  FFE6   	movff	btemp,postinc1
  6781  0185DE  0060  F09F  FFE6   	movff	btemp+1,postinc1
  6782  0185E4  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  6783  0185EA  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  6784  0185F0  EC0F  F099         	call	___flmul	;wreg free
  6785  0185F4  0060  F09B  FFE6   	movff	btemp,postinc1
  6786  0185FA  0060  F09F  FFE6   	movff	btemp+1,postinc1
  6787  018600  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  6788  018606  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  6789  01860C  EC07  F0C2         	call	___fltol	;wreg free
  6790  018610  0060  F09B  FFE6   	movff	btemp,postinc1
  6791  018616  0060  F09F  FFE6   	movff	btemp+1,postinc1
  6792  01861C  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  6793  018622  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  6794  018628  EC0E  F0D1         	call	_Volts_to_SOC	;wreg free
  6795  01862C  0060  F098  F1AE   	movff	btemp,_C+174	;volatile
  6796  018632  0060  F09C  F1AF   	movff	btemp+1,_C+175	;volatile
  6797                           
  6798                           ;bsoc.c: 101:  C.dynamic_ah = C.bank_ah * (C.soc / 100.0);
  6799  018638  0060  F623  FFE6   	movff	_C+136,postinc1
  6800  01863E  0060  F627  FFE6   	movff	_C+137,postinc1
  6801  018644  0060  F62B  FFE6   	movff	_C+138,postinc1
  6802  01864A  0060  F62F  FFE6   	movff	_C+139,postinc1
  6803  018650  0E00               	movlw	0
  6804  018652  6EE6               	movwf	postinc1,c
  6805  018654  0E00               	movlw	0
  6806  018656  6EE6               	movwf	postinc1,c
  6807  018658  0EC8               	movlw	200
  6808  01865A  6EE6               	movwf	postinc1,c
  6809  01865C  0E42               	movlw	66
  6810  01865E  6EE6               	movwf	postinc1,c
  6811  018660  0101               	movlb	1	; () banked
  6812  018662  51AE               	movf	(_C+174)& (0+255),w,b	;volatile
  6813  018664  6E2E               	movwf	(btemp+8)^0,c
  6814  018666  51AF               	movf	(_C+175)& (0+255),w,b	;volatile
  6815  018668  6E2F               	movwf	(btemp+9)^0,c
  6816  01866A  6A30               	clrf	(btemp+10)^0,c
  6817  01866C  6A31               	clrf	(btemp+11)^0,c
  6818  01866E  0060  F0BB  FFE6   	movff	btemp+8,postinc1
  6819  018674  0060  F0BF  FFE6   	movff	btemp+9,postinc1
  6820  01867A  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  6821  018680  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  6822  018686  0E00               	movlw	0
  6823  018688  6EE6               	movwf	postinc1,c
  6824  01868A  ECE2  F0BC         	call	___xxtofl	;wreg free
  6825  01868E  0060  F09B  FFE6   	movff	btemp,postinc1
  6826  018694  0060  F09F  FFE6   	movff	btemp+1,postinc1
  6827  01869A  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  6828  0186A0  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  6829  0186A6  ECA3  F0A4         	call	___fldiv	;wreg free
  6830  0186AA  0060  F09B  FFE6   	movff	btemp,postinc1
  6831  0186B0  0060  F09F  FFE6   	movff	btemp+1,postinc1
  6832  0186B6  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  6833  0186BC  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  6834  0186C2  EC0F  F099         	call	___flmul	;wreg free
  6835  0186C6  0060  F098  F18C   	movff	btemp,_C+140	;volatile
  6836  0186CC  0060  F09C  F18D   	movff	btemp+1,_C+141	;volatile
  6837  0186D2  0060  F0A0  F18E   	movff	btemp+2,_C+142	;volatile
  6838  0186D8  0060  F0A4  F18F   	movff	btemp+3,_C+143	;volatile
  6839                           
  6840                           ;bsoc.c: 102:  TMR3_SetInterruptHandler(calc_bsoc);
  6841  0186DE  0E04               	movlw	low _calc_bsoc
  6842  0186E0  6EE6               	movwf	postinc1,c
  6843  0186E2  0E42               	movlw	high _calc_bsoc
  6844  0186E4  6EE6               	movwf	postinc1,c
  6845  0186E6  0E01               	movlw	low (_calc_bsoc shr (0+16))
  6846  0186E8  6EE6               	movwf	postinc1,c
  6847  0186EA  ECB5  F0D9         	call	_TMR3_SetInterruptHandler	;wreg free
  6848                           
  6849                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6850  0186EE  0012               	return		;funcret
  6851  0186F0                     __end_of_init_bsoc:
  6852                           	opt callstack 0
  6853                           
  6854 ;; *************** function _Volts_to_SOC *****************
  6855 ;; Defined at:
  6856 ;;		line 159 in file "bsoc.c"
  6857 ;; Parameters:    Size  Location     Type
  6858 ;;  cvoltage        4  [STACK] unsigned long 
  6859 ;; Auto vars:     Size  Location     Type
  6860 ;;		None
  6861 ;; Return value:  Size  Location     Type
  6862 ;;                  2  [STACK] unsigned short 
  6863 ;; Registers used:
  6864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, tblptrl, tblptrh, tblptru, prodl, prodh
  6865 ;; Tracked objects:
  6866 ;;		On entry : 0/1
  6867 ;;		On exit  : 0/0
  6868 ;;		Unchanged: 0/0
  6869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6874 ;;Total ram usage:        0 bytes
  6875 ;; Hardware stack levels used:    1
  6876 ;; Hardware stack levels required when called:   15
  6877 ;; This function calls:
  6878 ;;		Nothing
  6879 ;; This function is called by:
  6880 ;;		_init_bsoc
  6881 ;; This function uses a reentrant model
  6882 ;;
  6883                           
  6884                           	psect	text12
  6885  01A21C                     __ptext12:
  6886                           	opt callstack 0
  6887  01A21C                     _Volts_to_SOC:
  6888                           	opt callstack 14
  6889                           
  6890                           ;bsoc.c: 159: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 160: {;bsoc.c: 161:  stat
      +                          ic uint8_t slot;;bsoc.c: 163:  C.soc = 0;
  6891                           
  6892                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6893                           ;incstack = 0
  6894  01A21C  0101               	movlb	1	; () banked
  6895  01A21E  6BAE               	clrf	(_C+174)& (0+255),b	;volatile
  6896  01A220  6BAF               	clrf	(_C+175)& (0+255),b	;volatile
  6897                           
  6898                           ;bsoc.c: 164:  for (slot = 0; slot < 26; slot++) {
  6899  01A222  6A19               	clrf	Volts_to_SOC@slot^0,c
  6900  01A224                     l10421:
  6901                           
  6902                           ;bsoc.c: 165:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  6903                           ;stkvar	_cvoltage @ sp[(0)+-4]
  6904  01A224  5019               	movf	Volts_to_SOC@slot^0,w,c
  6905  01A226  0D08               	mullw	8
  6906  01A228  0E7B               	movlw	low _BVSOC_TABLE
  6907  01A22A  24F3               	addwf	243,w,c
  6908  01A22C  6EF6               	movwf	tblptrl,c
  6909  01A22E  0EFA               	movlw	high _BVSOC_TABLE
  6910  01A230  20F4               	addwfc	244,w,c
  6911  01A232  6EF7               	movwf	tblptrh,c
  6912  01A234                     	if	1	;There are 3 active tblptr bytes
  6913  01A234  6AF8               	clrf	tblptru,c
  6914  01A236  0E00               	movlw	low (__mediumconst shr (0+16))
  6915  01A238  22F8               	addwfc	tblptru,f,c
  6916  01A23A                     	endif
  6917  01A23A  0EFC               	movlw	-4
  6918  01A23C  50E3               	movf	plusw1,w,c
  6919  01A23E  0009               	tblrd		*+
  6920  01A240  5CF5               	subwf	tablat,w,c
  6921  01A242  0EFD               	movlw	-3
  6922  01A244  50E3               	movf	plusw1,w,c
  6923  01A246  0009               	tblrd		*+
  6924  01A248  58F5               	subwfb	tablat,w,c
  6925  01A24A  0EFE               	movlw	-2
  6926  01A24C  50E3               	movf	plusw1,w,c
  6927  01A24E  0009               	tblrd		*+
  6928  01A250  58F5               	subwfb	tablat,w,c
  6929  01A252  0EFF               	movlw	-1
  6930  01A254  50E3               	movf	plusw1,w,c
  6931  01A256  0009               	tblrd		*+
  6932  01A258  58F5               	subwfb	tablat,w,c
  6933  01A25A  B0D8               	btfsc	status,0,c
  6934  01A25C  D017               	goto	l10425
  6935                           
  6936                           ;bsoc.c: 166:    C.soc = BVSOC_TABLE[slot][1];
  6937  01A25E  5019               	movf	Volts_to_SOC@slot^0,w,c
  6938  01A260  0D08               	mullw	8
  6939  01A262  0E04               	movlw	4
  6940  01A264  26F3               	addwf	243,f,c
  6941  01A266  0E00               	movlw	0
  6942  01A268  22F4               	addwfc	244,f,c
  6943  01A26A  0E7B               	movlw	low _BVSOC_TABLE
  6944  01A26C  24F3               	addwf	243,w,c
  6945  01A26E  6EF6               	movwf	tblptrl,c
  6946  01A270  0EFA               	movlw	high _BVSOC_TABLE
  6947  01A272  20F4               	addwfc	244,w,c
  6948  01A274  6EF7               	movwf	tblptrh,c
  6949  01A276                     	if	1	;There are 3 active tblptr bytes
  6950  01A276  6AF8               	clrf	tblptru,c
  6951  01A278  0E00               	movlw	low (__mediumconst shr (0+16))
  6952  01A27A  22F8               	addwfc	tblptru,f,c
  6953  01A27C                     	endif
  6954  01A27C  0009               	tblrd		*+
  6955  01A27E  006F FFD4  F1AE    	movff	tablat,_C+174	;volatile
  6956  01A284  000A               	tblrd		*-
  6957  01A286  006F FFD4  F1AF    	movff	tablat,_C+175	;volatile
  6958  01A28C                     l10425:
  6959                           
  6960                           ;bsoc.c: 168:  }
  6961  01A28C  2A19               	incf	Volts_to_SOC@slot^0,f,c
  6962  01A28E  0E19               	movlw	25
  6963  01A290  6419               	cpfsgt	Volts_to_SOC@slot^0,c
  6964  01A292  D7C8               	goto	l10421
  6965                           
  6966                           ;bsoc.c: 170:  return C.soc;
  6967  01A294  EE20  F1AE         	lfsr	2,_C+174	;volatile
  6968  01A298  006F FF78  F026    	movff	postinc2,btemp
  6969  01A29E  006F FF74  F027    	movff	postdec2,btemp+1
  6970                           
  6971                           ; _Volts_to_SOC: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  6972  01A2A4  52E5               	movf	postdec1,f,c
  6973  01A2A6  52E5               	movf	postdec1,f,c
  6974  01A2A8  52E5               	movf	postdec1,f,c
  6975  01A2AA  52E5               	movf	postdec1,f,c
  6976  01A2AC  0012               	return		;funcret
  6977  01A2AE                     __end_of_Volts_to_SOC:
  6978                           	opt callstack 0
  6979                           
  6980 ;; *************** function _hid_display *****************
  6981 ;; Defined at:
  6982 ;;		line 17 in file "hid.c"
  6983 ;; Parameters:    Size  Location     Type
  6984 ;;  h               1  [STACK] PTR struct H_data
  6985 ;;		 -> H(7), 
  6986 ;; Auto vars:     Size  Location     Type
  6987 ;;		None
  6988 ;; Return value:  Size  Location     Type
  6989 ;;                  1  [STACK] PTR struct H_data
  6990 ;; Registers used:
  6991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  6992 ;; Tracked objects:
  6993 ;;		On entry : 3F/1
  6994 ;;		On exit  : 0/0
  6995 ;;		Unchanged: 0/0
  6996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7001 ;;Total ram usage:        0 bytes
  7002 ;; Hardware stack levels used:    1
  7003 ;; Hardware stack levels required when called:   17
  7004 ;; This function calls:
  7005 ;;		_hid_input
  7006 ;; This function is called by:
  7007 ;;		_main
  7008 ;; This function uses a reentrant model
  7009 ;;
  7010                           
  7011                           	psect	text13
  7012  01951E                     __ptext13:
  7013                           	opt callstack 0
  7014  01951E                     _hid_display:
  7015                           	opt callstack 13
  7016                           
  7017                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  7018                           ;stkvar	_h @ sp[(0)+-1]
  7019                           
  7020                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7021                           ;incstack = 0
  7022  01951E  0EFF               	movlw	-1
  7023  019520  50E3               	movf	plusw1,w,c
  7024  019522  6EE6               	movwf	postinc1,c
  7025  019524  ECA0  F0D1         	call	_hid_input	;wreg free
  7026                           
  7027                           ;hid.c: 21:  switch (h->h_state) {
  7028  019528  D066               	goto	l10807
  7029  01952A                     l10785:
  7030                           
  7031                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  7032                           ;stkvar	_h @ sp[(0)+-1]
  7033  01952A  0EFF               	movlw	-1
  7034  01952C  50E3               	movf	plusw1,w,c
  7035  01952E  6ED9               	movwf	fsr2l,c
  7036  019530  6ADA               	clrf	fsr2h,c
  7037  019532  0E01               	movlw	1
  7038  019534  26D9               	addwf	fsr2l,f,c
  7039  019536  0E01               	movlw	1
  7040  019538  6EDF               	movwf	indf2,c
  7041                           
  7042                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  7043                           ;stkvar	_h @ sp[(0)+-1]
  7044  01953A  0EFF               	movlw	-1
  7045  01953C  50E3               	movf	plusw1,w,c
  7046  01953E  6ED9               	movwf	fsr2l,c
  7047  019540  6ADA               	clrf	fsr2h,c
  7048  019542  0E00               	movlw	0
  7049  019544  6EDF               	movwf	indf2,c
  7050                           
  7051                           ;hid.c: 25:   h->wait_enter = 1;
  7052                           ;stkvar	_h @ sp[(0)+-1]
  7053  019546  0EFF               	movlw	-1
  7054  019548  50E3               	movf	plusw1,w,c
  7055  01954A  6ED9               	movwf	fsr2l,c
  7056  01954C  6ADA               	clrf	fsr2h,c
  7057  01954E  0E04               	movlw	4
  7058  019550  26D9               	addwf	fsr2l,f,c
  7059  019552  0E01               	movlw	1
  7060  019554  6EDF               	movwf	indf2,c
  7061                           
  7062                           ;hid.c: 26:   h->wait_select = 1;
  7063                           ;stkvar	_h @ sp[(0)+-1]
  7064  019556  0EFF               	movlw	-1
  7065  019558  50E3               	movf	plusw1,w,c
  7066  01955A  6ED9               	movwf	fsr2l,c
  7067  01955C  6ADA               	clrf	fsr2h,c
  7068  01955E  0E02               	movlw	2
  7069  019560  26D9               	addwf	fsr2l,f,c
  7070  019562  0E01               	movlw	1
  7071  019564  6EDF               	movwf	indf2,c
  7072                           
  7073                           ;hid.c: 27:   h->select_p = SW_OFF;
  7074                           ;stkvar	_h @ sp[(0)+-1]
  7075  019566  0EFF               	movlw	-1
  7076  019568  50E3               	movf	plusw1,w,c
  7077  01956A  6ED9               	movwf	fsr2l,c
  7078  01956C  6ADA               	clrf	fsr2h,c
  7079  01956E  0E03               	movlw	3
  7080  019570  26D9               	addwf	fsr2l,f,c
  7081  019572  0E00               	movlw	0
  7082  019574  6EDF               	movwf	indf2,c
  7083                           
  7084                           ;hid.c: 28:   h->enter_p = SW_OFF;
  7085                           ;stkvar	_h @ sp[(0)+-1]
  7086  019576  0EFF               	movlw	-1
  7087  019578  50E3               	movf	plusw1,w,c
  7088  01957A  6ED9               	movwf	fsr2l,c
  7089  01957C  6ADA               	clrf	fsr2h,c
  7090  01957E  0E05               	movlw	5
  7091  019580  26D9               	addwf	fsr2l,f,c
  7092  019582  0E00               	movlw	0
  7093  019584  D036               	goto	L1
  7094  019586                     l10797:
  7095                           
  7096                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  7097                           ;stkvar	_h @ sp[(0)+-1]
  7098  019586  0EFF               	movlw	-1
  7099  019588  50E3               	movf	plusw1,w,c
  7100  01958A  6ED9               	movwf	fsr2l,c
  7101  01958C  6ADA               	clrf	fsr2h,c
  7102  01958E  0E02               	movlw	2
  7103  019590  26D9               	addwf	fsr2l,f,c
  7104  019592  50DF               	movf	indf2,w,c
  7105  019594  A4D8               	btfss	status,2,c
  7106  019596  D042               	goto	l1956
  7107                           
  7108                           ;stkvar	_h @ sp[(0)+-1]
  7109  019598  0EFF               	movlw	-1
  7110  01959A  50E3               	movf	plusw1,w,c
  7111  01959C  6ED9               	movwf	fsr2l,c
  7112  01959E  6ADA               	clrf	fsr2h,c
  7113  0195A0  0E03               	movlw	3
  7114  0195A2  26D9               	addwf	fsr2l,f,c
  7115  0195A4  50DF               	movf	indf2,w,c
  7116  0195A6  A4D8               	btfss	status,2,c
  7117  0195A8  D039               	goto	l1956
  7118                           
  7119                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  7120                           ;stkvar	_h @ sp[(0)+-1]
  7121  0195AA  0EFF               	movlw	-1
  7122  0195AC  50E3               	movf	plusw1,w,c
  7123  0195AE  6ED9               	movwf	fsr2l,c
  7124  0195B0  6ADA               	clrf	fsr2h,c
  7125  0195B2  0E06               	movlw	6
  7126  0195B4  26D9               	addwf	fsr2l,f,c
  7127                           
  7128                           ;stkvar	_h @ sp[(0)+-1]
  7129  0195B6  0EFF               	movlw	-1
  7130  0195B8  50E3               	movf	plusw1,w,c
  7131  0195BA  6EE9               	movwf	fsr0l,c
  7132  0195BC  6AEA               	clrf	fsr0h,c
  7133  0195BE  0E06               	movlw	6
  7134  0195C0  26E9               	addwf	fsr0l,f,c
  7135  0195C2  2AEF               	incf	indf0,f,c
  7136  0195C4  50EF               	movf	indf0,w,c
  7137  0195C6  0B03               	andlw	3
  7138  0195C8  6EDF               	movwf	indf2,c
  7139                           
  7140                           ;hid.c: 34:    h->hid_display = h->sequence;
  7141                           ;stkvar	_h @ sp[(0)+-1]
  7142  0195CA  0EFF               	movlw	-1
  7143  0195CC  50E3               	movf	plusw1,w,c
  7144  0195CE  6ED9               	movwf	fsr2l,c
  7145  0195D0  6ADA               	clrf	fsr2h,c
  7146  0195D2  0E06               	movlw	6
  7147  0195D4  26D9               	addwf	fsr2l,f,c
  7148                           
  7149                           ;stkvar	_h @ sp[(0)+-1]
  7150  0195D6  0EFF               	movlw	-1
  7151  0195D8  50E3               	movf	plusw1,w,c
  7152  0195DA  6EE9               	movwf	fsr0l,c
  7153  0195DC  6AEA               	clrf	fsr0h,c
  7154  0195DE  006F FF7F FFEF     	movff	indf2,indf0
  7155                           
  7156                           ;hid.c: 35:    h->wait_select = 1;
  7157                           ;stkvar	_h @ sp[(0)+-1]
  7158  0195E4  0EFF               	movlw	-1
  7159  0195E6  50E3               	movf	plusw1,w,c
  7160  0195E8  6ED9               	movwf	fsr2l,c
  7161  0195EA  6ADA               	clrf	fsr2h,c
  7162  0195EC  0E02               	movlw	2
  7163  0195EE  26D9               	addwf	fsr2l,f,c
  7164  0195F0  0E01               	movlw	1
  7165  0195F2                     L1:
  7166  0195F2  6EDF               	movwf	indf2,c
  7167  0195F4  D013               	goto	l1956
  7168  0195F6                     l10807:
  7169                           
  7170                           ;stkvar	_h @ sp[(0)+-1]
  7171  0195F6  0EFF               	movlw	-1
  7172  0195F8  50E3               	movf	plusw1,w,c
  7173  0195FA  6ED9               	movwf	fsr2l,c
  7174  0195FC  6ADA               	clrf	fsr2h,c
  7175  0195FE  0E01               	movlw	1
  7176  019600  26D9               	addwf	fsr2l,f,c
  7177  019602  50DF               	movf	indf2,w,c
  7178  019604  6E30               	movwf	(btemp+10)^0,c
  7179  019606  6A31               	clrf	(btemp+11)^0,c
  7180                           
  7181                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7182                           ; Switch size 1, requested type "simple"
  7183                           ; Number of cases is 1, Range of values is 0 to 0
  7184                           ; switch strategies available:
  7185                           ; Name         Instructions Cycles
  7186                           ; simple_byte            4     3 (average)
  7187                           ;	Chosen strategy is simple_byte
  7188  019608  5031               	movf	(btemp+11)^0,w,c
  7189  01960A  0A00               	xorlw	0	; case 0
  7190  01960C  A4D8               	btfss	status,2,c
  7191  01960E  D7BB               	goto	l10797
  7192                           
  7193                           ; Switch size 1, requested type "simple"
  7194                           ; Number of cases is 2, Range of values is 0 to 1
  7195                           ; switch strategies available:
  7196                           ; Name         Instructions Cycles
  7197                           ; simple_byte            7     4 (average)
  7198                           ;	Chosen strategy is simple_byte
  7199  019610  5030               	movf	(btemp+10)^0,w,c
  7200  019612  0A00               	xorlw	0	; case 0
  7201  019614  B4D8               	btfsc	status,2,c
  7202  019616  D789               	goto	l10785
  7203  019618  0A01               	xorlw	1	; case 1
  7204  01961A  D7B5               	goto	l10797
  7205  01961C                     l1956:
  7206                           
  7207                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  7208  01961C  52E5               	movf	postdec1,f,c
  7209  01961E  0012               	return		;funcret
  7210  019620                     __end_of_hid_display:
  7211                           	opt callstack 0
  7212                           
  7213 ;; *************** function _hid_input *****************
  7214 ;; Defined at:
  7215 ;;		line 3 in file "hid.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;  h               1  [STACK] PTR struct H_data
  7218 ;;		 -> H(7), 
  7219 ;; Auto vars:     Size  Location     Type
  7220 ;;		None
  7221 ;; Return value:  Size  Location     Type
  7222 ;;                  1  [STACK] PTR struct H_data
  7223 ;; Registers used:
  7224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  7225 ;; Tracked objects:
  7226 ;;		On entry : 0/1
  7227 ;;		On exit  : 0/0
  7228 ;;		Unchanged: 0/0
  7229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7234 ;;Total ram usage:        0 bytes
  7235 ;; Hardware stack levels used:    1
  7236 ;; Hardware stack levels required when called:   16
  7237 ;; This function calls:
  7238 ;;		_get_switch
  7239 ;; This function is called by:
  7240 ;;		_hid_display
  7241 ;; This function uses a reentrant model
  7242 ;;
  7243                           
  7244                           	psect	text14
  7245  01A340                     __ptext14:
  7246                           	opt callstack 0
  7247  01A340                     _hid_input:
  7248                           	opt callstack 13
  7249                           
  7250                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  7251                           
  7252                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7253                           ;incstack = 0
  7254  01A340  0E02               	movlw	2
  7255  01A342  6EE6               	movwf	postinc1,c
  7256  01A344  ECA9  F0D8         	call	_get_switch	;wreg free
  7257  01A348  5026               	movf	btemp^0,w,c
  7258  01A34A  B4D8               	btfsc	status,2,c
  7259  01A34C  D01C               	goto	l10349
  7260                           
  7261                           ;hid.c: 6:   h->wait_select = 0;
  7262                           ;stkvar	_h @ sp[(0)+-1]
  7263  01A34E  0EFF               	movlw	-1
  7264  01A350  50E3               	movf	plusw1,w,c
  7265  01A352  6ED9               	movwf	fsr2l,c
  7266  01A354  6ADA               	clrf	fsr2h,c
  7267  01A356  0E02               	movlw	2
  7268  01A358  26D9               	addwf	fsr2l,f,c
  7269  01A35A  0E00               	movlw	0
  7270  01A35C  6EDF               	movwf	indf2,c
  7271                           
  7272                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  7273  01A35E  0E02               	movlw	2
  7274  01A360  6EE6               	movwf	postinc1,c
  7275  01A362  ECA9  F0D8         	call	_get_switch	;wreg free
  7276  01A366  5026               	movf	btemp^0,w,c
  7277  01A368  B4D8               	btfsc	status,2,c
  7278  01A36A  D003               	goto	u9520
  7279  01A36C  6A31               	clrf	(btemp+11)^0,c
  7280  01A36E  2A31               	incf	(btemp+11)^0,f,c
  7281  01A370  D001               	goto	u9538
  7282  01A372                     u9520:
  7283  01A372  6A31               	clrf	(btemp+11)^0,c
  7284  01A374                     u9538:
  7285                           
  7286                           ;stkvar	_h @ sp[(0)+-1]
  7287  01A374  0EFF               	movlw	-1
  7288  01A376  50E3               	movf	plusw1,w,c
  7289  01A378  6ED9               	movwf	fsr2l,c
  7290  01A37A  6ADA               	clrf	fsr2h,c
  7291  01A37C  0E03               	movlw	3
  7292  01A37E  26D9               	addwf	fsr2l,f,c
  7293  01A380  0060  F0C7  FFDF   	movff	btemp+11,indf2
  7294  01A386                     l10349:
  7295                           
  7296                           ;hid.c: 10:  if (get_switch(SENTER)) {
  7297  01A386  0E03               	movlw	3
  7298  01A388  6EE6               	movwf	postinc1,c
  7299  01A38A  ECA9  F0D8         	call	_get_switch	;wreg free
  7300  01A38E  5026               	movf	btemp^0,w,c
  7301  01A390  B4D8               	btfsc	status,2,c
  7302  01A392  D01C               	goto	l1947
  7303                           
  7304                           ;hid.c: 11:   h->wait_enter = 0;
  7305                           ;stkvar	_h @ sp[(0)+-1]
  7306  01A394  0EFF               	movlw	-1
  7307  01A396  50E3               	movf	plusw1,w,c
  7308  01A398  6ED9               	movwf	fsr2l,c
  7309  01A39A  6ADA               	clrf	fsr2h,c
  7310  01A39C  0E04               	movlw	4
  7311  01A39E  26D9               	addwf	fsr2l,f,c
  7312  01A3A0  0E00               	movlw	0
  7313  01A3A2  6EDF               	movwf	indf2,c
  7314                           
  7315                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  7316  01A3A4  0E03               	movlw	3
  7317  01A3A6  6EE6               	movwf	postinc1,c
  7318  01A3A8  ECA9  F0D8         	call	_get_switch	;wreg free
  7319  01A3AC  5026               	movf	btemp^0,w,c
  7320  01A3AE  B4D8               	btfsc	status,2,c
  7321  01A3B0  D003               	goto	u9550
  7322  01A3B2  6A31               	clrf	(btemp+11)^0,c
  7323  01A3B4  2A31               	incf	(btemp+11)^0,f,c
  7324  01A3B6  D001               	goto	u9568
  7325  01A3B8                     u9550:
  7326  01A3B8  6A31               	clrf	(btemp+11)^0,c
  7327  01A3BA                     u9568:
  7328                           
  7329                           ;stkvar	_h @ sp[(0)+-1]
  7330  01A3BA  0EFF               	movlw	-1
  7331  01A3BC  50E3               	movf	plusw1,w,c
  7332  01A3BE  6ED9               	movwf	fsr2l,c
  7333  01A3C0  6ADA               	clrf	fsr2h,c
  7334  01A3C2  0E05               	movlw	5
  7335  01A3C4  26D9               	addwf	fsr2l,f,c
  7336  01A3C6  0060  F0C7  FFDF   	movff	btemp+11,indf2
  7337  01A3CC                     l1947:
  7338                           
  7339                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7340  01A3CC  52E5               	movf	postdec1,f,c
  7341  01A3CE  0012               	return		;funcret
  7342  01A3D0                     __end_of_hid_input:
  7343                           	opt callstack 0
  7344                           
  7345 ;; *************** function _get_switch *****************
  7346 ;; Defined at:
  7347 ;;		line 18 in file "dio.c"
  7348 ;; Parameters:    Size  Location     Type
  7349 ;;  i               1  [STACK] unsigned char 
  7350 ;; Auto vars:     Size  Location     Type
  7351 ;;		None
  7352 ;; Return value:  Size  Location     Type
  7353 ;;                  1  [STACK] enum E17021
  7354 ;; Registers used:
  7355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  7356 ;; Tracked objects:
  7357 ;;		On entry : 0/2
  7358 ;;		On exit  : 0/0
  7359 ;;		Unchanged: 0/0
  7360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7365 ;;Total ram usage:        0 bytes
  7366 ;; Hardware stack levels used:    1
  7367 ;; Hardware stack levels required when called:   15
  7368 ;; This function calls:
  7369 ;;		Nothing
  7370 ;; This function is called by:
  7371 ;;		_main
  7372 ;;		_hid_input
  7373 ;; This function uses a reentrant model
  7374 ;;
  7375                           
  7376                           	psect	text15
  7377  01B152                     __ptext15:
  7378                           	opt callstack 0
  7379  01B152                     _get_switch:
  7380                           	opt callstack 13
  7381                           
  7382                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  7383                           ;stkvar	_i @ sp[(0)+-1]
  7384                           
  7385                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7386                           ;incstack = 0
  7387  01B152  0EFF               	movlw	-1
  7388  01B154  006F FF8C  F026    	movff	plusw1,btemp
  7389  01B15A  0E03               	movlw	3
  7390  01B15C  6426               	cpfsgt	btemp^0,c
  7391  01B15E  D002               	goto	l9743
  7392                           
  7393                           ;dio.c: 21:   return SW_OFF;
  7394  01B160  0E00               	movlw	0
  7395  01B162  D00A               	goto	L2
  7396  01B164                     l9743:
  7397                           
  7398                           ;dio.c: 23:  return S.button[i].sw;
  7399                           ;stkvar	_i @ sp[(0)+-1]
  7400  01B164  0EFF               	movlw	-1
  7401  01B166  50E3               	movf	plusw1,w,c
  7402  01B168  0D05               	mullw	5
  7403  01B16A  0EC5               	movlw	low _S
  7404  01B16C  24F3               	addwf	243,w,c
  7405  01B16E  6ED9               	movwf	fsr2l,c
  7406  01B170  0E02               	movlw	high _S
  7407  01B172  20F4               	addwfc	prodh,w,c
  7408  01B174  6EDA               	movwf	fsr2h,c
  7409  01B176  50DF               	movf	indf2,w,c
  7410  01B178                     L2:
  7411  01B178  6E26               	movwf	btemp^0,c
  7412                           
  7413                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7414  01B17A  52E5               	movf	postdec1,f,c
  7415  01B17C  0012               	return		;funcret
  7416  01B17E                     __end_of_get_switch:
  7417                           	opt callstack 0
  7418                           
  7419 ;; *************** function _esr_check *****************
  7420 ;; Defined at:
  7421 ;;		line 179 in file "bsoc.c"
  7422 ;; Parameters:    Size  Location     Type
  7423 ;;  fsm             1  [STACK] unsigned char 
  7424 ;; Auto vars:     Size  Location     Type
  7425 ;;		None
  7426 ;; Return value:  Size  Location     Type
  7427 ;;                  4  [STACK] float 
  7428 ;; Registers used:
  7429 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7430 ;; Tracked objects:
  7431 ;;		On entry : 0/0
  7432 ;;		On exit  : 0/0
  7433 ;;		Unchanged: 0/0
  7434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7439 ;;Total ram usage:        0 bytes
  7440 ;; Hardware stack levels used:    1
  7441 ;; Hardware stack levels required when called:   18
  7442 ;; This function calls:
  7443 ;;		_StartTimer
  7444 ;;		_TimerDone
  7445 ;;		___fldiv
  7446 ;;		___flsub
  7447 ;;		_conv_raw_result
  7448 ;;		_fabsf
  7449 ;;		_set_load_relay_one
  7450 ;;		_set_load_relay_two
  7451 ;;		_update_adc_result
  7452 ;; This function is called by:
  7453 ;;		_main
  7454 ;; This function uses a reentrant model
  7455 ;;
  7456                           
  7457                           	psect	text16
  7458  0168E0                     __ptext16:
  7459                           	opt callstack 0
  7460  0168E0                     _esr_check:
  7461                           	opt callstack 12
  7462                           
  7463                           ;bsoc.c: 179: float esr_check(uint8_t fsm);bsoc.c: 180: {;bsoc.c: 181:  static uint8_t e
      +                          sr_state = 0;;bsoc.c: 183:  if (fsm) {
  7464                           ;stkvar	_fsm @ sp[(0)+-1]
  7465                           
  7466                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7467                           ;incstack = 0
  7468  0168E0  0EFF               	movlw	-1
  7469  0168E2  50E3               	movf	plusw1,w,c
  7470  0168E4  B4D8               	btfsc	status,2,c
  7471  0168E6  D13E               	goto	l10723
  7472                           
  7473                           ;bsoc.c: 184:   esr_state = 0;
  7474  0168E8  6A18               	clrf	esr_check@esr_state^0,c
  7475                           
  7476                           ;bsoc.c: 185:   return -10.0;
  7477  0168EA  0E00               	movlw	0
  7478  0168EC  6E26               	movwf	btemp^0,c
  7479  0168EE  0E00               	movlw	0
  7480  0168F0  6E27               	movwf	(btemp+1)^0,c
  7481  0168F2  0E20               	movlw	32
  7482  0168F4  6E28               	movwf	(btemp+2)^0,c
  7483  0168F6  0EC1               	movlw	193
  7484  0168F8  D150               	goto	L3
  7485  0168FA                     l10655:
  7486                           
  7487                           ;bsoc.c: 190:   StartTimer(TMR_ESR, 10000);
  7488  0168FA  0E10               	movlw	16
  7489  0168FC  6EE6               	movwf	postinc1,c
  7490  0168FE  0E27               	movlw	39
  7491  016900  6EE6               	movwf	postinc1,c
  7492  016902  0E0C               	movlw	12
  7493  016904  6EE6               	movwf	postinc1,c
  7494  016906  ECBC  F0D6         	call	_StartTimer	;wreg free
  7495  01690A                     l10657:
  7496                           
  7497                           ;bsoc.c: 191:   esr_state++;
  7498  01690A  2A18               	incf	esr_check@esr_state^0,f,c
  7499                           
  7500                           ;bsoc.c: 192:   break;
  7501  01690C  D13F               	goto	l10725
  7502  01690E                     l10659:
  7503                           
  7504                           ;bsoc.c: 197:   set_load_relay_one(0);
  7505  01690E  0E00               	movlw	0
  7506  016910  6EE6               	movwf	postinc1,c
  7507  016912  ECC9  F0DB         	call	_set_load_relay_one	;wreg free
  7508                           
  7509                           ;bsoc.c: 198:   set_load_relay_two(0);
  7510  016916  0E00               	movlw	0
  7511  016918  6EE6               	movwf	postinc1,c
  7512  01691A  ECC1  F0DB         	call	_set_load_relay_two	;wreg free
  7513                           
  7514                           ;bsoc.c: 199:   if (TimerDone(TMR_ESR)) {
  7515  01691E  0E0C               	movlw	12
  7516  016920  6EE6               	movwf	postinc1,c
  7517  016922  EC3D  F0D9         	call	_TimerDone	;wreg free
  7518  016926  5026               	movf	btemp^0,w,c
  7519  016928  B4D8               	btfsc	status,2,c
  7520  01692A  D009               	goto	l10665
  7521                           
  7522                           ;bsoc.c: 200:    StartTimer(TMR_ESR, 10000);
  7523  01692C  0E10               	movlw	16
  7524  01692E  6EE6               	movwf	postinc1,c
  7525  016930  0E27               	movlw	39
  7526  016932  6EE6               	movwf	postinc1,c
  7527  016934  0E0C               	movlw	12
  7528  016936  6EE6               	movwf	postinc1,c
  7529  016938  ECBC  F0D6         	call	_StartTimer	;wreg free
  7530                           
  7531                           ;bsoc.c: 201:   } else {
  7532  01693C  D006               	goto	l10669
  7533  01693E                     l10665:
  7534                           
  7535                           ;bsoc.c: 202:    return -2.0;
  7536  01693E  0E00               	movlw	0
  7537  016940  6E26               	movwf	btemp^0,c
  7538  016942  0E00               	movlw	0
  7539  016944  6E27               	movwf	(btemp+1)^0,c
  7540  016946  0E00               	movlw	0
  7541  016948  D066               	goto	L5
  7542  01694A                     l10669:
  7543                           
  7544                           ;bsoc.c: 207:   update_adc_result();
  7545  01694A  EC5B  F0D7         	call	_update_adc_result	;wreg free
  7546                           
  7547                           ;bsoc.c: 208:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  7548  01694E  0E00               	movlw	0
  7549  016950  6EE6               	movwf	postinc1,c
  7550  016952  0E04               	movlw	4
  7551  016954  6EE6               	movwf	postinc1,c
  7552  016956  EC60  F0A7         	call	_conv_raw_result	;wreg free
  7553  01695A  0060  F098  F1EB   	movff	btemp,_C+235	;volatile
  7554  016960  0060  F09C  F1EC   	movff	btemp+1,_C+236	;volatile
  7555  016966  0060  F0A0  F1ED   	movff	btemp+2,_C+237	;volatile
  7556  01696C  0060  F0A4  F1EE   	movff	btemp+3,_C+238	;volatile
  7557  016972  D7CB               	goto	l10657
  7558  016974                     l10675:
  7559                           
  7560                           ;bsoc.c: 212:   set_load_relay_one(1);
  7561  016974  0E01               	movlw	1
  7562  016976  6EE6               	movwf	postinc1,c
  7563  016978  ECC9  F0DB         	call	_set_load_relay_one	;wreg free
  7564                           
  7565                           ;bsoc.c: 213:   if (TimerDone(TMR_ESR)) {
  7566  01697C  0E0C               	movlw	12
  7567  01697E  6EE6               	movwf	postinc1,c
  7568  016980  EC3D  F0D9         	call	_TimerDone	;wreg free
  7569  016984  5026               	movf	btemp^0,w,c
  7570  016986  B4D8               	btfsc	status,2,c
  7571  016988  D009               	goto	l10681
  7572                           
  7573                           ;bsoc.c: 214:    StartTimer(TMR_ESR, 10000);
  7574  01698A  0E10               	movlw	16
  7575  01698C  6EE6               	movwf	postinc1,c
  7576  01698E  0E27               	movlw	39
  7577  016990  6EE6               	movwf	postinc1,c
  7578  016992  0E0C               	movlw	12
  7579  016994  6EE6               	movwf	postinc1,c
  7580  016996  ECBC  F0D6         	call	_StartTimer	;wreg free
  7581                           
  7582                           ;bsoc.c: 215:   } else {
  7583  01699A  D006               	goto	l10685
  7584  01699C                     l10681:
  7585                           
  7586                           ;bsoc.c: 216:    return -3.0;
  7587  01699C  0E00               	movlw	0
  7588  01699E  6E26               	movwf	btemp^0,c
  7589  0169A0  0E00               	movlw	0
  7590  0169A2  6E27               	movwf	(btemp+1)^0,c
  7591  0169A4  0E40               	movlw	64
  7592  0169A6  D037               	goto	L5
  7593  0169A8                     l10685:
  7594                           
  7595                           ;bsoc.c: 219:   update_adc_result();
  7596  0169A8  EC5B  F0D7         	call	_update_adc_result	;wreg free
  7597                           
  7598                           ;bsoc.c: 220:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  7599  0169AC  0E00               	movlw	0
  7600  0169AE  6EE6               	movwf	postinc1,c
  7601  0169B0  0E04               	movlw	4
  7602  0169B2  6EE6               	movwf	postinc1,c
  7603  0169B4  EC60  F0A7         	call	_conv_raw_result	;wreg free
  7604  0169B8  0060  F098  F1EF   	movff	btemp,_C+239	;volatile
  7605  0169BE  0060  F09C  F1F0   	movff	btemp+1,_C+240	;volatile
  7606  0169C4  0060  F0A0  F1F1   	movff	btemp+2,_C+241	;volatile
  7607  0169CA  0060  F0A4  F1F2   	movff	btemp+3,_C+242	;volatile
  7608                           
  7609                           ;bsoc.c: 221:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  7610  0169D0  0E00               	movlw	0
  7611  0169D2  6EE6               	movwf	postinc1,c
  7612  0169D4  0E00               	movlw	0
  7613  0169D6  6EE6               	movwf	postinc1,c
  7614  0169D8  EC60  F0A7         	call	_conv_raw_result	;wreg free
  7615  0169DC  0060  F098  F1E3   	movff	btemp,_C+227	;volatile
  7616  0169E2  0060  F09C  F1E4   	movff	btemp+1,_C+228	;volatile
  7617  0169E8  0060  F0A0  F1E5   	movff	btemp+2,_C+229	;volatile
  7618  0169EE  0060  F0A4  F1E6   	movff	btemp+3,_C+230	;volatile
  7619  0169F4  D78A               	goto	l10657
  7620  0169F6                     l10693:
  7621                           
  7622                           ;bsoc.c: 225:   set_load_relay_two(1);
  7623  0169F6  0E01               	movlw	1
  7624  0169F8  6EE6               	movwf	postinc1,c
  7625  0169FA  ECC1  F0DB         	call	_set_load_relay_two	;wreg free
  7626                           
  7627                           ;bsoc.c: 226:   if (!TimerDone(TMR_ESR))
  7628  0169FE  0E0C               	movlw	12
  7629  016A00  6EE6               	movwf	postinc1,c
  7630  016A02  EC3D  F0D9         	call	_TimerDone	;wreg free
  7631  016A06  5026               	movf	btemp^0,w,c
  7632  016A08  A4D8               	btfss	status,2,c
  7633  016A0A  D008               	goto	l10701
  7634                           
  7635                           ;bsoc.c: 227:    return -4.0;
  7636  016A0C  0E00               	movlw	0
  7637  016A0E  6E26               	movwf	btemp^0,c
  7638  016A10  0E00               	movlw	0
  7639  016A12  6E27               	movwf	(btemp+1)^0,c
  7640  016A14  0E80               	movlw	128
  7641  016A16                     L5:
  7642  016A16  6E28               	movwf	(btemp+2)^0,c
  7643  016A18  0EC0               	movlw	192
  7644  016A1A  D0BF               	goto	L3
  7645  016A1C                     l10701:
  7646                           
  7647                           ;bsoc.c: 229:   update_adc_result();
  7648  016A1C  EC5B  F0D7         	call	_update_adc_result	;wreg free
  7649                           
  7650                           ;bsoc.c: 230:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  7651  016A20  0E00               	movlw	0
  7652  016A22  6EE6               	movwf	postinc1,c
  7653  016A24  0E04               	movlw	4
  7654  016A26  6EE6               	movwf	postinc1,c
  7655  016A28  EC60  F0A7         	call	_conv_raw_result	;wreg free
  7656  016A2C  0060  F098  F1F3   	movff	btemp,_C+243	;volatile
  7657  016A32  0060  F09C  F1F4   	movff	btemp+1,_C+244	;volatile
  7658  016A38  0060  F0A0  F1F5   	movff	btemp+2,_C+245	;volatile
  7659  016A3E  0060  F0A4  F1F6   	movff	btemp+3,_C+246	;volatile
  7660                           
  7661                           ;bsoc.c: 231:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  7662  016A44  0E00               	movlw	0
  7663  016A46  6EE6               	movwf	postinc1,c
  7664  016A48  0E00               	movlw	0
  7665  016A4A  6EE6               	movwf	postinc1,c
  7666  016A4C  EC60  F0A7         	call	_conv_raw_result	;wreg free
  7667  016A50  0060  F098  F1E7   	movff	btemp,_C+231	;volatile
  7668  016A56  0060  F09C  F1E8   	movff	btemp+1,_C+232	;volatile
  7669  016A5C  0060  F0A0  F1E9   	movff	btemp+2,_C+233	;volatile
  7670  016A62  0060  F0A4  F1EA   	movff	btemp+3,_C+234	;volatile
  7671                           
  7672                           ;bsoc.c: 233:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  7673  016A68  0060  F79F  FFE6   	movff	_C+231,postinc1
  7674  016A6E  0060  F7A3  FFE6   	movff	_C+232,postinc1
  7675  016A74  0060  F7A7  FFE6   	movff	_C+233,postinc1
  7676  016A7A  0060  F7AB  FFE6   	movff	_C+234,postinc1
  7677  016A80  0060  F78F  FFE6   	movff	_C+227,postinc1
  7678  016A86  0060  F793  FFE6   	movff	_C+228,postinc1
  7679  016A8C  0060  F797  FFE6   	movff	_C+229,postinc1
  7680  016A92  0060  F79B  FFE6   	movff	_C+230,postinc1
  7681  016A98  ECED  F0D5         	call	___flsub	;wreg free
  7682  016A9C  0060  F09B  FFE6   	movff	btemp,postinc1
  7683  016AA2  0060  F09F  FFE6   	movff	btemp+1,postinc1
  7684  016AA8  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  7685  016AAE  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  7686  016AB4  0060  F7CF  FFE6   	movff	_C+243,postinc1
  7687  016ABA  0060  F7D3  FFE6   	movff	_C+244,postinc1
  7688  016AC0  0060  F7D7  FFE6   	movff	_C+245,postinc1
  7689  016AC6  0060  F7DB  FFE6   	movff	_C+246,postinc1
  7690  016ACC  0060  F7BF  FFE6   	movff	_C+239,postinc1
  7691  016AD2  0060  F7C3  FFE6   	movff	_C+240,postinc1
  7692  016AD8  0060  F7C7  FFE6   	movff	_C+241,postinc1
  7693  016ADE  0060  F7CB  FFE6   	movff	_C+242,postinc1
  7694  016AE4  ECED  F0D5         	call	___flsub	;wreg free
  7695  016AE8  0060  F09B  FFE6   	movff	btemp,postinc1
  7696  016AEE  0060  F09F  FFE6   	movff	btemp+1,postinc1
  7697  016AF4  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  7698  016AFA  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  7699  016B00  ECA3  F0A4         	call	___fldiv	;wreg free
  7700  016B04  0060  F09B  FFE6   	movff	btemp,postinc1
  7701  016B0A  0060  F09F  FFE6   	movff	btemp+1,postinc1
  7702  016B10  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  7703  016B16  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  7704  016B1C  ECD2  F0CE         	call	_fabsf	;wreg free
  7705  016B20  0060  F098  F184   	movff	btemp,_C+132	;volatile
  7706  016B26  0060  F09C  F185   	movff	btemp+1,_C+133	;volatile
  7707  016B2C  0060  F0A0  F186   	movff	btemp+2,_C+134	;volatile
  7708  016B32  0060  F0A4  F187   	movff	btemp+3,_C+135	;volatile
  7709                           
  7710                           ;bsoc.c: 234:   set_load_relay_one(0);
  7711  016B38  0E00               	movlw	0
  7712  016B3A  6EE6               	movwf	postinc1,c
  7713  016B3C  ECC9  F0DB         	call	_set_load_relay_one	;wreg free
  7714                           
  7715                           ;bsoc.c: 235:   set_load_relay_two(0);
  7716  016B40  0E00               	movlw	0
  7717  016B42  6EE6               	movwf	postinc1,c
  7718  016B44  ECC1  F0DB         	call	_set_load_relay_two	;wreg free
  7719                           
  7720                           ;bsoc.c: 236:   esr_state = 0;
  7721  016B48  6A18               	clrf	esr_check@esr_state^0,c
  7722                           
  7723                           ;bsoc.c: 237:   return C.esr;
  7724  016B4A  0060  F610  F026   	movff	_C+132,btemp	;volatile
  7725  016B50  0060  F614  F027   	movff	_C+133,btemp+1	;volatile
  7726  016B56  0060  F618  F028   	movff	_C+134,btemp+2	;volatile
  7727  016B5C  0060  F61C  F029   	movff	_C+135,btemp+3	;volatile
  7728  016B62  D01C               	goto	l2064
  7729  016B64                     l10723:
  7730  016B64  5018               	movf	esr_check@esr_state^0,w,c
  7731  016B66  6E30               	movwf	(btemp+10)^0,c
  7732  016B68  6A31               	clrf	(btemp+11)^0,c
  7733                           
  7734                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7735                           ; Switch size 1, requested type "simple"
  7736                           ; Number of cases is 1, Range of values is 0 to 0
  7737                           ; switch strategies available:
  7738                           ; Name         Instructions Cycles
  7739                           ; simple_byte            4     3 (average)
  7740                           ;	Chosen strategy is simple_byte
  7741  016B6A  5031               	movf	(btemp+11)^0,w,c
  7742  016B6C  0A00               	xorlw	0	; case 0
  7743  016B6E  A4D8               	btfss	status,2,c
  7744  016B70  D00D               	goto	l10725
  7745                           
  7746                           ; Switch size 1, requested type "simple"
  7747                           ; Number of cases is 4, Range of values is 0 to 3
  7748                           ; switch strategies available:
  7749                           ; Name         Instructions Cycles
  7750                           ; simple_byte           13     7 (average)
  7751                           ;	Chosen strategy is simple_byte
  7752  016B72  5030               	movf	(btemp+10)^0,w,c
  7753  016B74  0A00               	xorlw	0	; case 0
  7754  016B76  B4D8               	btfsc	status,2,c
  7755  016B78  D6C0               	goto	l10655
  7756  016B7A  0A01               	xorlw	1	; case 1
  7757  016B7C  B4D8               	btfsc	status,2,c
  7758  016B7E  D6C7               	goto	l10659
  7759  016B80  0A03               	xorlw	3	; case 2
  7760  016B82  B4D8               	btfsc	status,2,c
  7761  016B84  D6F7               	goto	l10675
  7762  016B86  0A01               	xorlw	1	; case 3
  7763  016B88  B4D8               	btfsc	status,2,c
  7764  016B8A  D735               	goto	l10693
  7765  016B8C                     l10725:
  7766                           
  7767                           ;bsoc.c: 242:  return -1.0;
  7768  016B8C  0E00               	movlw	0
  7769  016B8E  6E26               	movwf	btemp^0,c
  7770  016B90  0E00               	movlw	0
  7771  016B92  6E27               	movwf	(btemp+1)^0,c
  7772  016B94  0E80               	movlw	128
  7773  016B96  6E28               	movwf	(btemp+2)^0,c
  7774  016B98  0EBF               	movlw	191
  7775  016B9A                     L3:
  7776  016B9A  6E29               	movwf	(btemp+3)^0,c
  7777  016B9C                     l2064:
  7778                           
  7779                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7780  016B9C  52E5               	movf	postdec1,f,c
  7781  016B9E  0012               	return		;funcret
  7782  016BA0                     __end_of_esr_check:
  7783                           	opt callstack 0
  7784                           
  7785 ;; *************** function _update_adc_result *****************
  7786 ;; Defined at:
  7787 ;;		line 71 in file "daq.c"
  7788 ;; Parameters:    Size  Location     Type
  7789 ;;		None
  7790 ;; Auto vars:     Size  Location     Type
  7791 ;;		None
  7792 ;; Return value:  Size  Location     Type
  7793 ;;                  1  [STACK] _Bool 
  7794 ;; Registers used:
  7795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  7796 ;; Tracked objects:
  7797 ;;		On entry : 0/0
  7798 ;;		On exit  : 0/0
  7799 ;;		Unchanged: 0/0
  7800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7805 ;;Total ram usage:        0 bytes
  7806 ;; Hardware stack levels used:    1
  7807 ;; Hardware stack levels required when called:   17
  7808 ;; This function calls:
  7809 ;;		_StartTimer
  7810 ;;		_TimerDone
  7811 ;;		_check_adc_scan
  7812 ;;		_clear_adc_scan
  7813 ;;		_start_adc_scan
  7814 ;; This function is called by:
  7815 ;;		_esr_check
  7816 ;; This function uses a reentrant model
  7817 ;;
  7818                           
  7819                           	psect	text17
  7820  01AEB6                     __ptext17:
  7821                           	opt callstack 0
  7822  01AEB6                     _update_adc_result:
  7823                           	opt callstack 12
  7824                           
  7825                           ;daq.c: 73:  if (R.done) {
  7826                           
  7827                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7828                           ;incstack = 0
  7829  01AEB6  0100               	movlb	0	; () banked
  7830  01AEB8  51D8               	movf	(_R+39)& (0+255),w,b	;volatile
  7831  01AEBA  B4D8               	btfsc	status,2,c
  7832  01AEBC  0012               	return	
  7833                           
  7834                           ; BSR set to: 0
  7835                           ;daq.c: 74:   clear_adc_scan();
  7836  01AEBE  EC27  F0DC         	call	_clear_adc_scan	;wreg free
  7837                           
  7838                           ; BSR set to: 0
  7839                           ;daq.c: 75:   start_adc_scan();
  7840  01AEC2  ECC2  F0D3         	call	_start_adc_scan	;wreg free
  7841                           
  7842                           ;daq.c: 76:   StartTimer(TMR_ADC, 200);
  7843  01AEC6  0EC8               	movlw	200
  7844  01AEC8  6EE6               	movwf	postinc1,c
  7845  01AECA  0E00               	movlw	0
  7846  01AECC  6EE6               	movwf	postinc1,c
  7847  01AECE  0E01               	movlw	1
  7848  01AED0  6EE6               	movwf	postinc1,c
  7849  01AED2  ECBC  F0D6         	call	_StartTimer	;wreg free
  7850  01AED6                     l10285:
  7851  01AED6  0E01               	movlw	1
  7852  01AED8  6EE6               	movwf	postinc1,c
  7853  01AEDA  EC3D  F0D9         	call	_TimerDone	;wreg free
  7854  01AEDE  5026               	movf	btemp^0,w,c
  7855  01AEE0  A4D8               	btfss	status,2,c
  7856  01AEE2  0012               	return	
  7857  01AEE4  EC17  F0DC         	call	_check_adc_scan	;wreg free
  7858  01AEE8  5026               	movf	btemp^0,w,c
  7859  01AEEA  A4D8               	btfss	status,2,c
  7860  01AEEC  0012               	return	
  7861  01AEEE  D7F3               	goto	l10285
  7862  01AEF0                     __end_of_update_adc_result:
  7863                           	opt callstack 0
  7864                           
  7865 ;; *************** function _start_adc_scan *****************
  7866 ;; Defined at:
  7867 ;;		line 32 in file "daq.c"
  7868 ;; Parameters:    Size  Location     Type
  7869 ;;		None
  7870 ;; Auto vars:     Size  Location     Type
  7871 ;;		None
  7872 ;; Return value:  Size  Location     Type
  7873 ;;                  1  [STACK] _Bool 
  7874 ;; Registers used:
  7875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  7876 ;; Tracked objects:
  7877 ;;		On entry : 0/0
  7878 ;;		On exit  : 1/0
  7879 ;;		Unchanged: 0/0
  7880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7885 ;;Total ram usage:        0 bytes
  7886 ;; Hardware stack levels used:    1
  7887 ;; Hardware stack levels required when called:   16
  7888 ;; This function calls:
  7889 ;;		_ADCC_DischargeSampleCapacitor
  7890 ;;		_ADCC_SetADIInterruptHandler
  7891 ;;		_ADCC_SetADTIInterruptHandler
  7892 ;;		_ADCC_StartConversion
  7893 ;; This function is called by:
  7894 ;;		_main
  7895 ;;		_update_adc_result
  7896 ;; This function uses a reentrant model
  7897 ;;
  7898                           
  7899                           	psect	text18
  7900  01A784                     __ptext18:
  7901                           	opt callstack 0
  7902  01A784                     _start_adc_scan:
  7903                           	opt callstack 14
  7904                           
  7905                           ;daq.c: 34:  if (R.done)
  7906                           
  7907                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7908                           ;incstack = 0
  7909  01A784  0100               	movlb	0	; () banked
  7910  01A786  51D8               	movf	(_R+39)& (0+255),w,b	;volatile
  7911  01A788  A4D8               	btfss	status,2,c
  7912  01A78A  0012               	return	
  7913                           
  7914                           ; BSR set to: 0
  7915                           ;daq.c: 37:  R.scan_index = 0;
  7916  01A78C  6BD5               	clrf	(_R+36)& (0+255),b	;volatile
  7917                           
  7918                           ; BSR set to: 0
  7919                           ;daq.c: 38:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  7920  01A78E  013A               	movlb	58	; () banked
  7921  01A790  5140               	movf	64,w,b	;volatile
  7922  01A792  006E F940  F026    	movff	14928,btemp	;volatile
  7923  01A798  6A27               	clrf	(btemp+1)^0,c
  7924  01A79A  0060  F098  F027   	movff	btemp,btemp+1
  7925  01A7A0  6A26               	clrf	btemp^0,c
  7926  01A7A2  2626               	addwf	btemp^0,f,c
  7927  01A7A4  0E00               	movlw	0
  7928  01A7A6  2227               	addwfc	(btemp+1)^0,f,c
  7929  01A7A8  0E77               	movlw	119
  7930  01A7AA  1426               	andwf	btemp^0,w,c
  7931  01A7AC  0100               	movlb	0	; () banked
  7932  01A7AE  6FD6               	movwf	(_R+37)& (0+255),b	;volatile
  7933  01A7B0  0E3C               	movlw	60
  7934  01A7B2  1427               	andwf	(btemp+1)^0,w,c
  7935  01A7B4  6FD7               	movwf	(_R+38)& (0+255),b	;volatile
  7936                           
  7937                           ; BSR set to: 0
  7938                           ;daq.c: 39:  ADCC_SetADIInterruptHandler(adc_int_handler);
  7939  01A7B6  0E76               	movlw	low _adc_int_handler
  7940  01A7B8  6EE6               	movwf	postinc1,c
  7941  01A7BA  0EB8               	movlw	high _adc_int_handler
  7942  01A7BC  6EE6               	movwf	postinc1,c
  7943  01A7BE  0E01               	movlw	low (_adc_int_handler shr (0+16))
  7944  01A7C0  6EE6               	movwf	postinc1,c
  7945  01A7C2  EC05  F0DA         	call	_ADCC_SetADIInterruptHandler	;wreg free
  7946                           
  7947                           ;daq.c: 40:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  7948  01A7C6  0E60               	movlw	low _adc_int_t_handler
  7949  01A7C8  6EE6               	movwf	postinc1,c
  7950  01A7CA  0EA5               	movlw	high _adc_int_t_handler
  7951  01A7CC  6EE6               	movwf	postinc1,c
  7952  01A7CE  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  7953  01A7D0  6EE6               	movwf	postinc1,c
  7954  01A7D2  ECF1  F0D9         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  7955                           
  7956                           ;daq.c: 41:  ADCC_DischargeSampleCapacitor();
  7957  01A7D6  EC13  F0DC         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  7958                           
  7959                           ; BSR set to: 62
  7960                           ;daq.c: 42:  ADCC_StartConversion(R.scan_index & 0xf);
  7961  01A7DA  0100               	movlb	0	; () banked
  7962  01A7DC  51D5               	movf	(_R+36)& (0+255),w,b	;volatile
  7963  01A7DE  0B0F               	andlw	15
  7964  01A7E0  6EE6               	movwf	postinc1,c
  7965  01A7E2  ECB8  F0DB         	call	_ADCC_StartConversion	;wreg free
  7966                           
  7967                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  7968  01A7E6  0012               	return		;funcret
  7969  01A7E8                     __end_of_start_adc_scan:
  7970                           	opt callstack 0
  7971                           
  7972 ;; *************** function _ADCC_StartConversion *****************
  7973 ;; Defined at:
  7974 ;;		line 128 in file "mcc_generated_files/adcc.c"
  7975 ;; Parameters:    Size  Location     Type
  7976 ;;  channel         1  [STACK] enum E16136
  7977 ;; Auto vars:     Size  Location     Type
  7978 ;;		None
  7979 ;; Return value:  Size  Location     Type
  7980 ;;                  1  [STACK] void 
  7981 ;; Registers used:
  7982 ;;		fsr1l, fsr1h
  7983 ;; Tracked objects:
  7984 ;;		On entry : 3F/0
  7985 ;;		On exit  : 3F/3E
  7986 ;;		Unchanged: 0/0
  7987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7992 ;;Total ram usage:        0 bytes
  7993 ;; Hardware stack levels used:    1
  7994 ;; Hardware stack levels required when called:   15
  7995 ;; This function calls:
  7996 ;;		Nothing
  7997 ;; This function is called by:
  7998 ;;		_start_adc_scan
  7999 ;;		_adc_int_t_handler
  8000 ;; This function uses a reentrant model
  8001 ;;
  8002                           
  8003                           	psect	text19
  8004  01B770                     __ptext19:
  8005                           	opt callstack 0
  8006  01B770                     _ADCC_StartConversion:
  8007                           	opt callstack 0
  8008                           
  8009                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  8010                           ;stkvar	_channel @ sp[(0)+-1]
  8011                           
  8012                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8013                           ;incstack = 0
  8014 ;; hardware stack exceeded
  8015  01B770  0EFF               	movlw	-1
  8016  01B772  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  8017                           
  8018                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  8019  01B778  013E               	movlb	62	; () banked
  8020  01B77A  8FF8               	bsf	248,7,b	;volatile
  8021                           
  8022                           ; BSR set to: 62
  8023                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  8024  01B77C  81F8               	bsf	248,0,b	;volatile
  8025                           
  8026                           ; BSR set to: 62
  8027                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  8028  01B77E  52E5               	movf	postdec1,f,c
  8029  01B780  0012               	return		;funcret
  8030  01B782                     __end_of_ADCC_StartConversion:
  8031                           	opt callstack 0
  8032                           
  8033 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  8034 ;; Defined at:
  8035 ;;		line 189 in file "mcc_generated_files/adcc.c"
  8036 ;; Parameters:    Size  Location     Type
  8037 ;;		None
  8038 ;; Auto vars:     Size  Location     Type
  8039 ;;		None
  8040 ;; Return value:  Size  Location     Type
  8041 ;;                  1  [STACK] void 
  8042 ;; Registers used:
  8043 ;;		wreg, status,2
  8044 ;; Tracked objects:
  8045 ;;		On entry : 0/0
  8046 ;;		On exit  : 3F/3E
  8047 ;;		Unchanged: 0/0
  8048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8053 ;;Total ram usage:        0 bytes
  8054 ;; Hardware stack levels used:    1
  8055 ;; Hardware stack levels required when called:   15
  8056 ;; This function calls:
  8057 ;;		Nothing
  8058 ;; This function is called by:
  8059 ;;		_start_adc_scan
  8060 ;;		_adc_int_t_handler
  8061 ;; This function uses a reentrant model
  8062 ;;
  8063                           
  8064                           	psect	text20
  8065  01B826                     __ptext20:
  8066                           	opt callstack 0
  8067  01B826                     _ADCC_DischargeSampleCapacitor:
  8068                           	opt callstack 0
  8069                           
  8070                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  8071                           
  8072                           ; BSR set to: 62
  8073                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8074                           ;incstack = 0
  8075 ;; hardware stack exceeded
  8076  01B826  0E3B               	movlw	59
  8077  01B828  013E               	movlb	62	; () banked
  8078  01B82A  6FF1               	movwf	241,b	;volatile
  8079                           
  8080                           ; BSR set to: 62
  8081                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  8082  01B82C  0012               	return		;funcret
  8083  01B82E                     __end_of_ADCC_DischargeSampleCapacitor:
  8084                           	opt callstack 0
  8085                           
  8086 ;; *************** function _clear_adc_scan *****************
  8087 ;; Defined at:
  8088 ;;		line 63 in file "daq.c"
  8089 ;; Parameters:    Size  Location     Type
  8090 ;;		None
  8091 ;; Auto vars:     Size  Location     Type
  8092 ;;		None
  8093 ;; Return value:  Size  Location     Type
  8094 ;;                  1  [STACK] void 
  8095 ;; Registers used:
  8096 ;;		None
  8097 ;; Tracked objects:
  8098 ;;		On entry : 0/0
  8099 ;;		On exit  : 3F/0
  8100 ;;		Unchanged: 0/0
  8101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8106 ;;Total ram usage:        0 bytes
  8107 ;; Hardware stack levels used:    1
  8108 ;; Hardware stack levels required when called:   15
  8109 ;; This function calls:
  8110 ;;		Nothing
  8111 ;; This function is called by:
  8112 ;;		_main
  8113 ;;		_update_adc_result
  8114 ;; This function uses a reentrant model
  8115 ;;
  8116                           
  8117                           	psect	text21
  8118  01B84E                     __ptext21:
  8119                           	opt callstack 0
  8120  01B84E                     _clear_adc_scan:
  8121                           	opt callstack 13
  8122                           
  8123                           ;daq.c: 65:  R.done = 0;
  8124                           
  8125                           ; BSR set to: 62
  8126                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8127                           ;incstack = 0
  8128  01B84E  0100               	movlb	0	; () banked
  8129  01B850  6BD8               	clrf	(_R+39)& (0+255),b	;volatile
  8130                           
  8131                           ; BSR set to: 0
  8132                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8133  01B852  0012               	return		;funcret
  8134  01B854                     __end_of_clear_adc_scan:
  8135                           	opt callstack 0
  8136                           
  8137 ;; *************** function _check_adc_scan *****************
  8138 ;; Defined at:
  8139 ;;		line 55 in file "daq.c"
  8140 ;; Parameters:    Size  Location     Type
  8141 ;;		None
  8142 ;; Auto vars:     Size  Location     Type
  8143 ;;		None
  8144 ;; Return value:  Size  Location     Type
  8145 ;;                  1  [STACK] _Bool 
  8146 ;; Registers used:
  8147 ;;		btemp
  8148 ;; Tracked objects:
  8149 ;;		On entry : 0/0
  8150 ;;		On exit  : 0/0
  8151 ;;		Unchanged: 0/0
  8152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8157 ;;Total ram usage:        0 bytes
  8158 ;; Hardware stack levels used:    1
  8159 ;; Hardware stack levels required when called:   15
  8160 ;; This function calls:
  8161 ;;		Nothing
  8162 ;; This function is called by:
  8163 ;;		_main
  8164 ;;		_update_adc_result
  8165 ;; This function uses a reentrant model
  8166 ;;
  8167                           
  8168                           	psect	text22
  8169  01B82E                     __ptext22:
  8170                           	opt callstack 0
  8171  01B82E                     _check_adc_scan:
  8172                           	opt callstack 13
  8173                           
  8174                           ;daq.c: 57:  return R.done;
  8175                           
  8176                           ; BSR set to: 0
  8177                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8178                           ;incstack = 0
  8179  01B82E  0060  F360  F026   	movff	_R+39,btemp	;volatile
  8180                           
  8181                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8182  01B834  0012               	return		;funcret
  8183  01B836                     __end_of_check_adc_scan:
  8184                           	opt callstack 0
  8185                           
  8186 ;; *************** function _set_load_relay_two *****************
  8187 ;; Defined at:
  8188 ;;		line 128 in file "mbmc.c"
  8189 ;; Parameters:    Size  Location     Type
  8190 ;;  mode            1  [STACK] _Bool 
  8191 ;; Auto vars:     Size  Location     Type
  8192 ;;		None
  8193 ;; Return value:  Size  Location     Type
  8194 ;;                  1  [STACK] void 
  8195 ;; Registers used:
  8196 ;;		wreg, fsr1l, fsr1h
  8197 ;; Tracked objects:
  8198 ;;		On entry : 0/0
  8199 ;;		On exit  : 0/0
  8200 ;;		Unchanged: 0/0
  8201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8206 ;;Total ram usage:        0 bytes
  8207 ;; Hardware stack levels used:    1
  8208 ;; Hardware stack levels required when called:   15
  8209 ;; This function calls:
  8210 ;;		Nothing
  8211 ;; This function is called by:
  8212 ;;		_main
  8213 ;;		_esr_check
  8214 ;; This function uses a reentrant model
  8215 ;;
  8216                           
  8217                           	psect	text23
  8218  01B782                     __ptext23:
  8219                           	opt callstack 0
  8220  01B782                     _set_load_relay_two:
  8221                           	opt callstack 15
  8222                           
  8223                           ;mbmc.c: 128: void set_load_relay_two(_Bool mode);mbmc.c: 129: {;mbmc.c: 130:  LATDbits.
      +                          LATD5 = mode;
  8224                           ;stkvar	_mode @ sp[(0)+-1]
  8225                           
  8226                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8227                           ;incstack = 0
  8228  01B782  0EFF               	movlw	-1
  8229  01B784  B0E3               	btfsc	plusw1,0,c
  8230  01B786  D002               	bra	u9285
  8231  01B788  9ABD               	bcf	189,5,c	;volatile
  8232  01B78A  D001               	bra	u9286
  8233  01B78C                     u9285:
  8234  01B78C  8ABD               	bsf	189,5,c	;volatile
  8235  01B78E                     u9286:
  8236                           
  8237                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8238  01B78E  52E5               	movf	postdec1,f,c
  8239  01B790  0012               	return		;funcret
  8240  01B792                     __end_of_set_load_relay_two:
  8241                           	opt callstack 0
  8242                           
  8243 ;; *************** function _set_load_relay_one *****************
  8244 ;; Defined at:
  8245 ;;		line 123 in file "mbmc.c"
  8246 ;; Parameters:    Size  Location     Type
  8247 ;;  mode            1  [STACK] _Bool 
  8248 ;; Auto vars:     Size  Location     Type
  8249 ;;		None
  8250 ;; Return value:  Size  Location     Type
  8251 ;;                  1  [STACK] void 
  8252 ;; Registers used:
  8253 ;;		wreg, fsr1l, fsr1h
  8254 ;; Tracked objects:
  8255 ;;		On entry : 0/0
  8256 ;;		On exit  : 0/0
  8257 ;;		Unchanged: 0/0
  8258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8263 ;;Total ram usage:        0 bytes
  8264 ;; Hardware stack levels used:    1
  8265 ;; Hardware stack levels required when called:   15
  8266 ;; This function calls:
  8267 ;;		Nothing
  8268 ;; This function is called by:
  8269 ;;		_main
  8270 ;;		_esr_check
  8271 ;; This function uses a reentrant model
  8272 ;;
  8273                           
  8274                           	psect	text24
  8275  01B792                     __ptext24:
  8276                           	opt callstack 0
  8277  01B792                     _set_load_relay_one:
  8278                           	opt callstack 15
  8279                           
  8280                           ;mbmc.c: 123: void set_load_relay_one(_Bool mode);mbmc.c: 124: {;mbmc.c: 125:  LATDbits.
      +                          LATD4 = mode;
  8281                           ;stkvar	_mode @ sp[(0)+-1]
  8282                           
  8283                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8284                           ;incstack = 0
  8285  01B792  0EFF               	movlw	-1
  8286  01B794  B0E3               	btfsc	plusw1,0,c
  8287  01B796  D002               	bra	u9275
  8288  01B798  98BD               	bcf	189,4,c	;volatile
  8289  01B79A  D001               	bra	u9276
  8290  01B79C                     u9275:
  8291  01B79C  88BD               	bsf	189,4,c	;volatile
  8292  01B79E                     u9276:
  8293                           
  8294                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8295  01B79E  52E5               	movf	postdec1,f,c
  8296  01B7A0  0012               	return		;funcret
  8297  01B7A2                     __end_of_set_load_relay_one:
  8298                           	opt callstack 0
  8299                           
  8300 ;; *************** function _eaDogM_WriteCommand *****************
  8301 ;; Defined at:
  8302 ;;		line 175 in file "eadog.c"
  8303 ;; Parameters:    Size  Location     Type
  8304 ;;  cmd             1  [STACK] const unsigned char 
  8305 ;; Auto vars:     Size  Location     Type
  8306 ;;		None
  8307 ;; Return value:  Size  Location     Type
  8308 ;;                  1  [STACK] void 
  8309 ;; Registers used:
  8310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8311 ;; Tracked objects:
  8312 ;;		On entry : 3F/3D
  8313 ;;		On exit  : 3F/0
  8314 ;;		Unchanged: 0/0
  8315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8320 ;;Total ram usage:        0 bytes
  8321 ;; Hardware stack levels used:    1
  8322 ;; Hardware stack levels required when called:   25
  8323 ;; This function calls:
  8324 ;;		_send_lcd_cmd_dma
  8325 ;; This function is called by:
  8326 ;;		_main
  8327 ;; This function uses a reentrant model
  8328 ;;
  8329                           
  8330                           	psect	text25
  8331  01B7B2                     __ptext25:
  8332                           	opt callstack 0
  8333  01B7B2                     _eaDogM_WriteCommand:
  8334                           	opt callstack 5
  8335                           
  8336                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  8337                           ;stkvar	_cmd @ sp[(0)+-1]
  8338                           
  8339                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8340                           ;incstack = 0
  8341  01B7B2  0EFF               	movlw	-1
  8342  01B7B4  50E3               	movf	plusw1,w,c
  8343  01B7B6  6EE6               	movwf	postinc1,c
  8344  01B7B8  ECDF  F0D4         	call	_send_lcd_cmd_dma	;wreg free
  8345                           
  8346                           ; BSR set to: 0
  8347                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  8348  01B7BC  52E5               	movf	postdec1,f,c
  8349  01B7BE  0012               	return		;funcret
  8350  01B7C0                     __end_of_eaDogM_WriteCommand:
  8351                           	opt callstack 0
  8352                           
  8353 ;; *************** function _convert_adc_data *****************
  8354 ;; Defined at:
  8355 ;;		line 51 in file "mbmc.c"
  8356 ;; Parameters:    Size  Location     Type
  8357 ;;		None
  8358 ;; Auto vars:     Size  Location     Type
  8359 ;;  i               1  [STACK] unsigned char 
  8360 ;; Return value:  Size  Location     Type
  8361 ;;                  1  [STACK] void 
  8362 ;; Registers used:
  8363 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8364 ;; Tracked objects:
  8365 ;;		On entry : 0/0
  8366 ;;		On exit  : 0/0
  8367 ;;		Unchanged: 0/0
  8368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8373 ;;Total ram usage:        0 bytes
  8374 ;; Hardware stack levels used:    1
  8375 ;; Hardware stack levels required when called:   18
  8376 ;; This function calls:
  8377 ;;		_conv_raw_result
  8378 ;;		_lp_filter
  8379 ;; This function is called by:
  8380 ;;		_main
  8381 ;; This function uses a reentrant model
  8382 ;;
  8383                           
  8384                           	psect	text26
  8385  019CEC                     __ptext26:
  8386                           	opt callstack 0
  8387  019CEC                     _convert_adc_data:
  8388                           	opt callstack 0
  8389                           
  8390                           ; BSR set to: 0
  8391                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8392  019CEC  52E6               	movf	postinc1,f,c
  8393                           
  8394                           ;mbmc.c: 53:  uint8_t i = 0;
  8395                           ;stkvar	_i @ sp[(-1)+0]
  8396                           
  8397                           ;incstack = 0
  8398  019CEE  0EFF               	movlw	-1
  8399  019CF0  6AE3               	clrf	plusw1,c
  8400  019CF2                     l10735:
  8401                           
  8402                           ;mbmc.c: 56:   if (V.calib) {
  8403  019CF2  0102               	movlb	2	; () banked
  8404  019CF4  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
  8405  019CF6  B4D8               	btfsc	status,2,c
  8406  019CF8  D01B               	goto	l10739
  8407                           
  8408                           ; BSR set to: 2
  8409                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  8410  019CFA  0E01               	movlw	1
  8411  019CFC  6EE6               	movwf	postinc1,c
  8412                           
  8413                           ;stkvar	_i @ sp[(-2)+0]
  8414  019CFE  0EFE               	movlw	-2
  8415  019D00  50E3               	movf	plusw1,w,c
  8416  019D02  6EE6               	movwf	postinc1,c
  8417  019D04  0E01               	movlw	1
  8418  019D06  6EE6               	movwf	postinc1,c
  8419                           
  8420                           ;stkvar	_i @ sp[(-4)+0]
  8421  019D08  0EFC               	movlw	-4
  8422  019D0A  50E3               	movf	plusw1,w,c
  8423  019D0C  6EE6               	movwf	postinc1,c
  8424  019D0E  EC60  F0A7         	call	_conv_raw_result	;wreg free
  8425  019D12  0060  F09B  FFE6   	movff	btemp,postinc1
  8426  019D18  0060  F09F  FFE6   	movff	btemp+1,postinc1
  8427  019D1E  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  8428  019D24  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  8429  019D2A  ECE4  F0BE         	call	_lp_filter	;wreg free
  8430  019D2E  D01A               	goto	L6
  8431  019D30                     l10739:
  8432                           
  8433                           ; BSR set to: 2
  8434                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  8435  019D30  0E00               	movlw	0
  8436  019D32  6EE6               	movwf	postinc1,c
  8437                           
  8438                           ;stkvar	_i @ sp[(-2)+0]
  8439  019D34  0EFE               	movlw	-2
  8440  019D36  50E3               	movf	plusw1,w,c
  8441  019D38  6EE6               	movwf	postinc1,c
  8442  019D3A  0E00               	movlw	0
  8443  019D3C  6EE6               	movwf	postinc1,c
  8444                           
  8445                           ;stkvar	_i @ sp[(-4)+0]
  8446  019D3E  0EFC               	movlw	-4
  8447  019D40  50E3               	movf	plusw1,w,c
  8448  019D42  6EE6               	movwf	postinc1,c
  8449  019D44  EC60  F0A7         	call	_conv_raw_result	;wreg free
  8450  019D48  0060  F09B  FFE6   	movff	btemp,postinc1
  8451  019D4E  0060  F09F  FFE6   	movff	btemp+1,postinc1
  8452  019D54  0060  F0A3  FFE6   	movff	btemp+2,postinc1
  8453  019D5A  0060  F0A7  FFE6   	movff	btemp+3,postinc1
  8454  019D60  ECE4  F0BE         	call	_lp_filter	;wreg free
  8455  019D64                     L6:
  8456                           
  8457                           ;stkvar	_i @ sp[(-1)+0]
  8458  019D64  0EFF               	movlw	-1
  8459  019D66  50E3               	movf	plusw1,w,c
  8460  019D68  0D04               	mullw	4
  8461  019D6A  0E00               	movlw	low _C
  8462  019D6C  24F3               	addwf	243,w,c
  8463  019D6E  6ED9               	movwf	fsr2l,c
  8464  019D70  0E01               	movlw	high _C
  8465  019D72  20F4               	addwfc	prodh,w,c
  8466  019D74  6EDA               	movwf	fsr2h,c
  8467  019D76  0060  F09B  FFDE   	movff	btemp,postinc2
  8468  019D7C  0060  F09F  FFDE   	movff	btemp+1,postinc2
  8469  019D82  0060  F0A3  FFDE   	movff	btemp+2,postinc2
  8470  019D88  0060  F0A7  FFDE   	movff	btemp+3,postinc2
  8471                           
  8472                           ;mbmc.c: 61:  } while (++i < 16);
  8473                           ;stkvar	_i @ sp[(-1)+0]
  8474  019D8E  0EFF               	movlw	-1
  8475  019D90  2AE3               	incf	plusw1,f,c
  8476  019D92  0EFF               	movlw	-1
  8477  019D94  006F FF8C  F026    	movff	plusw1,btemp
  8478  019D9A  0E0F               	movlw	15
  8479  019D9C  6426               	cpfsgt	btemp^0,c
  8480  019D9E  D7A9               	goto	l10735
  8481                           
  8482                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  8483  019DA0  52E5               	movf	postdec1,f,c
  8484  019DA2  0012               	return		;funcret
  8485  019DA4                     __end_of_convert_adc_data:
  8486                           	opt callstack 0
  8487                           
  8488 ;; *************** function _clear_hid_pflags *****************
  8489 ;; Defined at:
  8490 ;;		line 51 in file "hid.c"
  8491 ;; Parameters:    Size  Location     Type
  8492 ;;  h               1  [STACK] PTR struct H_data
  8493 ;;		 -> H(7), 
  8494 ;; Auto vars:     Size  Location     Type
  8495 ;;		None
  8496 ;; Return value:  Size  Location     Type
  8497 ;;                  1  [STACK] void 
  8498 ;; Registers used:
  8499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8500 ;; Tracked objects:
  8501 ;;		On entry : 3F/0
  8502 ;;		On exit  : 0/0
  8503 ;;		Unchanged: 0/0
  8504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8509 ;;Total ram usage:        0 bytes
  8510 ;; Hardware stack levels used:    1
  8511 ;; Hardware stack levels required when called:   15
  8512 ;; This function calls:
  8513 ;;		Nothing
  8514 ;; This function is called by:
  8515 ;;		_main
  8516 ;; This function uses a reentrant model
  8517 ;;
  8518                           
  8519                           	psect	text27
  8520  01B4CE                     __ptext27:
  8521                           	opt callstack 0
  8522  01B4CE                     _clear_hid_pflags:
  8523                           	opt callstack 15
  8524                           
  8525                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  8526                           ;stkvar	_h @ sp[(0)+-1]
  8527                           
  8528                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8529                           ;incstack = 0
  8530  01B4CE  0EFF               	movlw	-1
  8531  01B4D0  50E3               	movf	plusw1,w,c
  8532  01B4D2  6ED9               	movwf	fsr2l,c
  8533  01B4D4  6ADA               	clrf	fsr2h,c
  8534  01B4D6  0E03               	movlw	3
  8535  01B4D8  26D9               	addwf	fsr2l,f,c
  8536  01B4DA  0E00               	movlw	0
  8537  01B4DC  6EDF               	movwf	indf2,c
  8538                           
  8539                           ;hid.c: 54:  h->enter_p = SW_OFF;
  8540                           ;stkvar	_h @ sp[(0)+-1]
  8541  01B4DE  0EFF               	movlw	-1
  8542  01B4E0  50E3               	movf	plusw1,w,c
  8543  01B4E2  6ED9               	movwf	fsr2l,c
  8544  01B4E4  6ADA               	clrf	fsr2h,c
  8545  01B4E6  0E05               	movlw	5
  8546  01B4E8  26D9               	addwf	fsr2l,f,c
  8547  01B4EA  0E00               	movlw	0
  8548  01B4EC  6EDF               	movwf	indf2,c
  8549                           
  8550                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8551  01B4EE  52E5               	movf	postdec1,f,c
  8552  01B4F0  0012               	return		;funcret
  8553  01B4F2                     __end_of_clear_hid_pflags:
  8554                           	opt callstack 0
  8555                           
  8556 ;; *************** function _check_help *****************
  8557 ;; Defined at:
  8558 ;;		line 40 in file "mconfig.c"
  8559 ;; Parameters:    Size  Location     Type
  8560 ;;  flipper         1  [STACK] const _Bool 
  8561 ;; Auto vars:     Size  Location     Type
  8562 ;;  estatus         1    0        _Bool 
  8563 ;; Return value:  Size  Location     Type
  8564 ;;                  1  [STACK] _Bool 
  8565 ;; Registers used:
  8566 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8567 ;; Tracked objects:
  8568 ;;		On entry : 3F/2
  8569 ;;		On exit  : 0/0
  8570 ;;		Unchanged: 0/0
  8571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8576 ;;Total ram usage:        0 bytes
  8577 ;; Hardware stack levels used:    1
  8578 ;; Hardware stack levels required when called:   27
  8579 ;; This function calls:
  8580 ;;		_StartTimer
  8581 ;;		_TimerDone
  8582 ;;		_display_help
  8583 ;;		_display_info
  8584 ;;		_get_vterm_ptr
  8585 ;;		_help_button
  8586 ;;		_mode_lamp_bright
  8587 ;;		_mode_lamp_dim
  8588 ;;		_set_display_info
  8589 ;;		_set_temp_display_help
  8590 ;;		_set_vterm
  8591 ;;		_sprintf
  8592 ;;		_update_lcd
  8593 ;;		_vterm_dump
  8594 ;; This function is called by:
  8595 ;;		_main
  8596 ;; This function uses a reentrant model
  8597 ;;
  8598                           
  8599                           	psect	text28
  8600  0177B2                     __ptext28:
  8601                           	opt callstack 0
  8602  0177B2                     _check_help:
  8603                           	opt callstack 3
  8604                           
  8605                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  8606                           
  8607                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8608                           ;incstack = 0
  8609  0177B2  EC78  F0D7         	call	_help_button	;wreg free
  8610  0177B6  5026               	movf	btemp^0,w,c
  8611  0177B8  B4D8               	btfsc	status,2,c
  8612  0177BA  D0D0               	goto	l12691
  8613  0177BC  EC1B  F0DC         	call	_display_info	;wreg free
  8614  0177C0  0426               	decf	btemp^0,w,c
  8615  0177C2  B4D8               	btfsc	status,2,c
  8616  0177C4  D0CB               	goto	l12691
  8617                           
  8618                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  8619  0177C6  0EDC               	movlw	220
  8620  0177C8  6EE6               	movwf	postinc1,c
  8621  0177CA  0E05               	movlw	5
  8622  0177CC  6EE6               	movwf	postinc1,c
  8623  0177CE  0E0B               	movlw	11
  8624  0177D0  6EE6               	movwf	postinc1,c
  8625  0177D2  ECBC  F0D6         	call	_StartTimer	;wreg free
  8626                           
  8627                           ;mconfig.c: 48:   if (V.debug)
  8628  0177D6  0102               	movlb	2	; () banked
  8629  0177D8  B3A2               	btfsc	(_V+155)& (0+255),1,b	;volatile
  8630                           
  8631                           ; BSR set to: 2
  8632                           ;mconfig.c: 49:    vterm_dump();
  8633  0177DA  ECC0  F0C6         	call	_vterm_dump	;wreg free
  8634                           
  8635                           ;mconfig.c: 51:   set_vterm(1);
  8636  0177DE  0E01               	movlw	1
  8637  0177E0  6EE6               	movwf	postinc1,c
  8638  0177E2  EC11  F0DB         	call	_set_vterm	;wreg free
  8639                           
  8640                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  8641  0177E6  EC1B  F0DC         	call	_display_info	;wreg free
  8642  0177EA  5026               	movf	btemp^0,w,c
  8643  0177EC  6EE6               	movwf	postinc1,c
  8644  0177EE  ECD1  F0DB         	call	_set_temp_display_help	;wreg free
  8645                           
  8646                           ; BSR set to: 2
  8647                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  8648  0177F2  0E01               	movlw	1
  8649  0177F4  6EE6               	movwf	postinc1,c
  8650  0177F6  EC20  F0DB         	call	_set_display_info	;wreg free
  8651                           
  8652                           ;mconfig.c: 54:   if (flipper) {
  8653                           ;stkvar	_flipper @ sp[(0)+-1]
  8654  0177FA  0EFF               	movlw	-1
  8655  0177FC  50E3               	movf	plusw1,w,c
  8656  0177FE  B4D8               	btfsc	status,2,c
  8657  017800  D019               	goto	l12677
  8658                           
  8659                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  8660  017802  0EB1               	movlw	low STR_46
  8661  017804  6EE6               	movwf	postinc1,c
  8662  017806  0EFF               	movlw	high STR_46
  8663  017808  6EE6               	movwf	postinc1,c
  8664  01780A  0E01               	movlw	low STR_48
  8665  01780C  6EE6               	movwf	postinc1,c
  8666  01780E  0EFE               	movlw	high STR_48
  8667  017810  6EE6               	movwf	postinc1,c
  8668  017812  0E01               	movlw	1
  8669  017814  6EE6               	movwf	postinc1,c
  8670  017816  0E00               	movlw	0
  8671  017818  6EE6               	movwf	postinc1,c
  8672  01781A  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  8673  01781E  0060  F09B  FFE6   	movff	btemp,postinc1
  8674  017824  0060  F09F  FFE6   	movff	btemp+1,postinc1
  8675  01782A  0E06               	movlw	6
  8676  01782C  6EE6               	movwf	postinc1,c
  8677  01782E  EC87  F0C9         	call	_sprintf	;wreg free
  8678                           
  8679                           ;mconfig.c: 56:   } else {
  8680  017832  D018               	goto	l1666
  8681  017834                     l12677:
  8682                           
  8683                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  8684  017834  0EC7               	movlw	low STR_47
  8685  017836  6EE6               	movwf	postinc1,c
  8686  017838  0EFF               	movlw	high STR_47
  8687  01783A  6EE6               	movwf	postinc1,c
  8688  01783C  0E01               	movlw	low STR_48
  8689  01783E  6EE6               	movwf	postinc1,c
  8690  017840  0EFE               	movlw	high STR_48
  8691  017842  6EE6               	movwf	postinc1,c
  8692  017844  0E01               	movlw	1
  8693  017846  6EE6               	movwf	postinc1,c
  8694  017848  0E00               	movlw	0
  8695  01784A  6EE6               	movwf	postinc1,c
  8696  01784C  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  8697  017850  0060  F09B  FFE6   	movff	btemp,postinc1
  8698  017856  0060  F09F  FFE6   	movff	btemp+1,postinc1
  8699  01785C  0E06               	movlw	6
  8700  01785E  6EE6               	movwf	postinc1,c
  8701  017860  EC87  F0C9         	call	_sprintf	;wreg free
  8702  017864                     l1666:
  8703                           
  8704                           ; BSR set to: 0
  8705                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  8706  017864  0102               	movlb	2	; () banked
  8707  017866  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
  8708  017868  32E8               	rrcf	wreg,f,c
  8709  01786A  32E8               	rrcf	wreg,f,c
  8710  01786C  0B03               	andlw	3
  8711  01786E  0D24               	mullw	36
  8712  017870  0E12               	movlw	18
  8713  017872  26F3               	addwf	243,f,c
  8714  017874  0E00               	movlw	0
  8715  017876  22F4               	addwfc	244,f,c
  8716  017878  0E4B               	movlw	low _T
  8717  01787A  6E30               	movwf	(btemp+10)^0,c
  8718  01787C  0EFB               	movlw	high _T
  8719  01787E  6E31               	movwf	(btemp+11)^0,c
  8720  017880  50F3               	movf	243,w,c
  8721  017882  2630               	addwf	(btemp+10)^0,f,c
  8722  017884  50F4               	movf	244,w,c
  8723  017886  2231               	addwfc	(btemp+11)^0,f,c
  8724  017888  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  8725  01788E  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  8726  017894  0EBD               	movlw	low STR_50
  8727  017896  6EE6               	movwf	postinc1,c
  8728  017898  0EFF               	movlw	high STR_50
  8729  01789A  6EE6               	movwf	postinc1,c
  8730  01789C  0E01               	movlw	1
  8731  01789E  6EE6               	movwf	postinc1,c
  8732  0178A0  0E01               	movlw	1
  8733  0178A2  6EE6               	movwf	postinc1,c
  8734  0178A4  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  8735  0178A8  0060  F09B  FFE6   	movff	btemp,postinc1
  8736  0178AE  0060  F09F  FFE6   	movff	btemp+1,postinc1
  8737  0178B4  0E06               	movlw	6
  8738  0178B6  6EE6               	movwf	postinc1,c
  8739  0178B8  EC87  F0C9         	call	_sprintf	;wreg free
  8740                           
  8741                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  8742  0178BC  0102               	movlb	2	; () banked
  8743  0178BE  39A2               	swapf	(_V+155)& (0+255),w,b	;volatile
  8744  0178C0  32E8               	rrcf	wreg,f,c
  8745  0178C2  32E8               	rrcf	wreg,f,c
  8746  0178C4  0B03               	andlw	3
  8747  0178C6  0D24               	mullw	36
  8748  0178C8  0E4B               	movlw	low _T
  8749  0178CA  6E30               	movwf	(btemp+10)^0,c
  8750  0178CC  0EFB               	movlw	high _T
  8751  0178CE  6E31               	movwf	(btemp+11)^0,c
  8752  0178D0  50F3               	movf	243,w,c
  8753  0178D2  2630               	addwf	(btemp+10)^0,f,c
  8754  0178D4  50F4               	movf	244,w,c
  8755  0178D6  2231               	addwfc	(btemp+11)^0,f,c
  8756  0178D8  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  8757  0178DE  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  8758  0178E4  0EBD               	movlw	low STR_50
  8759  0178E6  6EE6               	movwf	postinc1,c
  8760  0178E8  0EFF               	movlw	high STR_50
  8761  0178EA  6EE6               	movwf	postinc1,c
  8762  0178EC  0E01               	movlw	1
  8763  0178EE  6EE6               	movwf	postinc1,c
  8764  0178F0  0E02               	movlw	2
  8765  0178F2  6EE6               	movwf	postinc1,c
  8766  0178F4  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  8767  0178F8  0060  F09B  FFE6   	movff	btemp,postinc1
  8768  0178FE  0060  F09F  FFE6   	movff	btemp+1,postinc1
  8769  017904  0E06               	movlw	6
  8770  017906  6EE6               	movwf	postinc1,c
  8771  017908  EC87  F0C9         	call	_sprintf	;wreg free
  8772                           
  8773                           ; BSR set to: 0
  8774                           ;mconfig.c: 61:   V.help_id++;
  8775  01790C  EE20  F2A2         	lfsr	2,_V+155	;volatile
  8776  017910  38DF               	swapf	223,w,c
  8777  017912  6E31               	movwf	(btemp+11)^0,c
  8778  017914  3231               	rrcf	(btemp+11)^0,f,c
  8779  017916  3031               	rrcf	(btemp+11)^0,w,c
  8780  017918  0B03               	andlw	3
  8781  01791A  6E31               	movwf	(btemp+11)^0,c
  8782  01791C  2A31               	incf	(btemp+11)^0,f,c
  8783  01791E  3A31               	swapf	(btemp+11)^0,f,c
  8784  017920  3631               	rlcf	(btemp+11)^0,f,c
  8785  017922  3631               	rlcf	(btemp+11)^0,f,c
  8786  017924  50DF               	movf	223,w,c
  8787  017926  1831               	xorwf	(btemp+11)^0,w,c
  8788  017928  0B3F               	andlw	-193
  8789  01792A  1831               	xorwf	(btemp+11)^0,w,c
  8790  01792C  6EDF               	movwf	223,c
  8791                           
  8792                           ; BSR set to: 0
  8793                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  8794  01792E  0EB8               	movlw	184
  8795  017930  6EE6               	movwf	postinc1,c
  8796  017932  0E0B               	movlw	11
  8797  017934  6EE6               	movwf	postinc1,c
  8798  017936  0E09               	movlw	9
  8799  017938  6EE6               	movwf	postinc1,c
  8800  01793A  ECBC  F0D6         	call	_StartTimer	;wreg free
  8801                           
  8802                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  8803  01793E  0EB8               	movlw	184
  8804  017940  6EE6               	movwf	postinc1,c
  8805  017942  0E0B               	movlw	11
  8806  017944  6EE6               	movwf	postinc1,c
  8807  017946  0E07               	movlw	7
  8808  017948  6EE6               	movwf	postinc1,c
  8809  01794A  ECBC  F0D6         	call	_StartTimer	;wreg free
  8810                           
  8811                           ;mconfig.c: 64:   mode_lamp_bright();
  8812  01794E  ECE0  F0DB         	call	_mode_lamp_bright	;wreg free
  8813                           
  8814                           ;mconfig.c: 65:   update_lcd(1);
  8815  017952  0E01               	movlw	1
  8816  017954  6EE6               	movwf	postinc1,c
  8817  017956  ECFF  F0C8         	call	_update_lcd	;wreg free
  8818                           
  8819                           ;mconfig.c: 67:  } else {
  8820  01795A  D032               	goto	l1667
  8821  01795C                     l12691:
  8822                           
  8823                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  8824  01795C  0E09               	movlw	9
  8825  01795E  6EE6               	movwf	postinc1,c
  8826  017960  EC3D  F0D9         	call	_TimerDone	;wreg free
  8827  017964  5026               	movf	btemp^0,w,c
  8828  017966  B4D8               	btfsc	status,2,c
  8829  017968  D02B               	goto	l1667
  8830                           
  8831                           ;mconfig.c: 69:    set_vterm(0);
  8832  01796A  0E00               	movlw	0
  8833  01796C  6EE6               	movwf	postinc1,c
  8834  01796E  EC11  F0DB         	call	_set_vterm	;wreg free
  8835                           
  8836                           ;mconfig.c: 70:    V.help = 0;
  8837  017972  0102               	movlb	2	; () banked
  8838  017974  95A2               	bcf	(_V+155)& (0+255),2,b	;volatile
  8839                           
  8840                           ; BSR set to: 2
  8841                           ;mconfig.c: 71:    set_display_info(display_help());
  8842  017976  EC1F  F0DC         	call	_display_help	;wreg free
  8843  01797A  5026               	movf	btemp^0,w,c
  8844  01797C  6EE6               	movwf	postinc1,c
  8845  01797E  EC20  F0DB         	call	_set_display_info	;wreg free
  8846                           
  8847                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  8848  017982  0060  FA73  FFE6   	movff	_V+149,postinc1
  8849  017988  0060  FA77  FFE6   	movff	_V+150,postinc1
  8850  01798E  EC75  F0DB         	call	_mode_lamp_dim	;wreg free
  8851                           
  8852                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  8853  017992  0E0B               	movlw	11
  8854  017994  6EE6               	movwf	postinc1,c
  8855  017996  EC3D  F0D9         	call	_TimerDone	;wreg free
  8856  01799A  5026               	movf	btemp^0,w,c
  8857  01799C  B4D8               	btfsc	status,2,c
  8858  01799E  D010               	goto	l1667
  8859                           
  8860                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  8861  0179A0  0102               	movlb	2	; () banked
  8862  0179A2  51B2               	movf	(_V+171)& (0+255),w,b	;volatile
  8863  0179A4  A4D8               	btfss	status,2,c
  8864  0179A6  D002               	goto	u12170
  8865  0179A8  0E01               	movlw	1
  8866  0179AA  D001               	goto	u12180
  8867  0179AC                     u12170:
  8868  0179AC  0E00               	movlw	0
  8869  0179AE                     u12180:
  8870  0179AE  6FB2               	movwf	(_V+171)& (0+255),b	;volatile
  8871                           
  8872                           ; BSR set to: 2
  8873                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  8874  0179B0  0EDC               	movlw	220
  8875  0179B2  6EE6               	movwf	postinc1,c
  8876  0179B4  0E05               	movlw	5
  8877  0179B6  6EE6               	movwf	postinc1,c
  8878  0179B8  0E0B               	movlw	11
  8879  0179BA  6EE6               	movwf	postinc1,c
  8880  0179BC  ECBC  F0D6         	call	_StartTimer	;wreg free
  8881  0179C0                     l1667:
  8882                           
  8883                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8884  0179C0  52E5               	movf	postdec1,f,c
  8885  0179C2  0012               	return		;funcret
  8886  0179C4                     __end_of_check_help:
  8887                           	opt callstack 0
  8888                           
  8889 ;; *************** function _vterm_dump *****************
  8890 ;; Defined at:
  8891 ;;		line 121 in file "mconfig.c"
  8892 ;; Parameters:    Size  Location     Type
  8893 ;;		None
  8894 ;; Auto vars:     Size  Location     Type
  8895 ;;		None
  8896 ;; Return value:  Size  Location     Type
  8897 ;;                  1  [STACK] void 
  8898 ;; Registers used:
  8899 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8900 ;; Tracked objects:
  8901 ;;		On entry : 3F/2
  8902 ;;		On exit  : 0/0
  8903 ;;		Unchanged: 0/0
  8904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8909 ;;Total ram usage:        0 bytes
  8910 ;; Hardware stack levels used:    1
  8911 ;; Hardware stack levels required when called:   26
  8912 ;; This function calls:
  8913 ;;		_WaitMs
  8914 ;;		_eaDogM_WriteStringAtPos
  8915 ;;		_get_vterm_ptr
  8916 ;;		_sprintf
  8917 ;;		_wait_lcd_done
  8918 ;; This function is called by:
  8919 ;;		_check_help
  8920 ;; This function uses a reentrant model
  8921 ;;
  8922                           
  8923                           	psect	text29
  8924  018D80                     __ptext29:
  8925                           	opt callstack 0
  8926  018D80                     _vterm_dump:
  8927                           	opt callstack 3
  8928                           
  8929                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  8930                           
  8931                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8932                           ;incstack = 0
  8933  018D80  0E01               	movlw	1
  8934  018D82  6EE6               	movwf	postinc1,c
  8935  018D84  0E00               	movlw	0
  8936  018D86  6EE6               	movwf	postinc1,c
  8937  018D88  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  8938  018D8C  0060  F09B  FFE6   	movff	btemp,postinc1
  8939  018D92  0060  F09F  FFE6   	movff	btemp+1,postinc1
  8940  018D98  0E00               	movlw	0
  8941  018D9A  6EE6               	movwf	postinc1,c
  8942  018D9C  0E00               	movlw	0
  8943  018D9E  6EE6               	movwf	postinc1,c
  8944  018DA0  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  8945  018DA4  0060  F09B  FFE6   	movff	btemp,postinc1
  8946  018DAA  0060  F09F  FFE6   	movff	btemp+1,postinc1
  8947  018DB0  0E93               	movlw	low STR_52
  8948  018DB2  6EE6               	movwf	postinc1,c
  8949  018DB4  0EFF               	movlw	high STR_52
  8950  018DB6  6EE6               	movwf	postinc1,c
  8951  018DB8  0E08               	movlw	low (_V+1)
  8952  018DBA  6EE6               	movwf	postinc1,c
  8953  018DBC  0E02               	movlw	high (_V+1)
  8954  018DBE  6EE6               	movwf	postinc1,c
  8955  018DC0  0E08               	movlw	8
  8956  018DC2  6EE6               	movwf	postinc1,c
  8957  018DC4  EC87  F0C9         	call	_sprintf	;wreg free
  8958                           
  8959                           ; BSR set to: 0
  8960                           ;mconfig.c: 124:  wait_lcd_done();
  8961  018DC8  EC4D  F0DB         	call	_wait_lcd_done	;wreg free
  8962                           
  8963                           ; BSR set to: 0
  8964                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  8965  018DCC  0E08               	movlw	low (_V+1)
  8966  018DCE  6EE6               	movwf	postinc1,c
  8967  018DD0  0E02               	movlw	high (_V+1)
  8968  018DD2  6EE6               	movwf	postinc1,c
  8969  018DD4  0E00               	movlw	0
  8970  018DD6  6EE6               	movwf	postinc1,c
  8971  018DD8  0E00               	movlw	0
  8972  018DDA  6EE6               	movwf	postinc1,c
  8973  018DDC  ECCB  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  8974                           
  8975                           ; BSR set to: 59
  8976                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  8977  018DE0  0E01               	movlw	1
  8978  018DE2  6EE6               	movwf	postinc1,c
  8979  018DE4  0E01               	movlw	1
  8980  018DE6  6EE6               	movwf	postinc1,c
  8981  018DE8  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  8982  018DEC  0060  F09B  FFE6   	movff	btemp,postinc1
  8983  018DF2  0060  F09F  FFE6   	movff	btemp+1,postinc1
  8984  018DF8  0E00               	movlw	0
  8985  018DFA  6EE6               	movwf	postinc1,c
  8986  018DFC  0E01               	movlw	1
  8987  018DFE  6EE6               	movwf	postinc1,c
  8988  018E00  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  8989  018E04  0060  F09B  FFE6   	movff	btemp,postinc1
  8990  018E0A  0060  F09F  FFE6   	movff	btemp+1,postinc1
  8991  018E10  0E93               	movlw	low STR_52
  8992  018E12  6EE6               	movwf	postinc1,c
  8993  018E14  0EFF               	movlw	high STR_52
  8994  018E16  6EE6               	movwf	postinc1,c
  8995  018E18  0E08               	movlw	low (_V+1)
  8996  018E1A  6EE6               	movwf	postinc1,c
  8997  018E1C  0E02               	movlw	high (_V+1)
  8998  018E1E  6EE6               	movwf	postinc1,c
  8999  018E20  0E08               	movlw	8
  9000  018E22  6EE6               	movwf	postinc1,c
  9001  018E24  EC87  F0C9         	call	_sprintf	;wreg free
  9002                           
  9003                           ; BSR set to: 0
  9004                           ;mconfig.c: 127:  wait_lcd_done();
  9005  018E28  EC4D  F0DB         	call	_wait_lcd_done	;wreg free
  9006                           
  9007                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  9008  018E2C  0E08               	movlw	low (_V+1)
  9009  018E2E  6EE6               	movwf	postinc1,c
  9010  018E30  0E02               	movlw	high (_V+1)
  9011  018E32  6EE6               	movwf	postinc1,c
  9012  018E34  0E00               	movlw	0
  9013  018E36  6EE6               	movwf	postinc1,c
  9014  018E38  0E01               	movlw	1
  9015  018E3A  6EE6               	movwf	postinc1,c
  9016  018E3C  ECCB  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9017                           
  9018                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  9019  018E40  0E01               	movlw	1
  9020  018E42  6EE6               	movwf	postinc1,c
  9021  018E44  0E02               	movlw	2
  9022  018E46  6EE6               	movwf	postinc1,c
  9023  018E48  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  9024  018E4C  0060  F09B  FFE6   	movff	btemp,postinc1
  9025  018E52  0060  F09F  FFE6   	movff	btemp+1,postinc1
  9026  018E58  0E00               	movlw	0
  9027  018E5A  6EE6               	movwf	postinc1,c
  9028  018E5C  0E02               	movlw	2
  9029  018E5E  6EE6               	movwf	postinc1,c
  9030  018E60  EC92  F0D8         	call	_get_vterm_ptr	;wreg free
  9031  018E64  0060  F09B  FFE6   	movff	btemp,postinc1
  9032  018E6A  0060  F09F  FFE6   	movff	btemp+1,postinc1
  9033  018E70  0E93               	movlw	low STR_52
  9034  018E72  6EE6               	movwf	postinc1,c
  9035  018E74  0EFF               	movlw	high STR_52
  9036  018E76  6EE6               	movwf	postinc1,c
  9037  018E78  0E08               	movlw	low (_V+1)
  9038  018E7A  6EE6               	movwf	postinc1,c
  9039  018E7C  0E02               	movlw	high (_V+1)
  9040  018E7E  6EE6               	movwf	postinc1,c
  9041  018E80  0E08               	movlw	8
  9042  018E82  6EE6               	movwf	postinc1,c
  9043  018E84  EC87  F0C9         	call	_sprintf	;wreg free
  9044                           
  9045                           ; BSR set to: 0
  9046                           ;mconfig.c: 130:  wait_lcd_done();
  9047  018E88  EC4D  F0DB         	call	_wait_lcd_done	;wreg free
  9048                           
  9049                           ; BSR set to: 0
  9050                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  9051  018E8C  0E08               	movlw	low (_V+1)
  9052  018E8E  6EE6               	movwf	postinc1,c
  9053  018E90  0E02               	movlw	high (_V+1)
  9054  018E92  6EE6               	movwf	postinc1,c
  9055  018E94  0E00               	movlw	0
  9056  018E96  6EE6               	movwf	postinc1,c
  9057  018E98  0E02               	movlw	2
  9058  018E9A  6EE6               	movwf	postinc1,c
  9059  018E9C  ECCB  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9060                           
  9061                           ; BSR set to: 59
  9062                           ;mconfig.c: 132:  WaitMs(3000);
  9063  018EA0  0EB8               	movlw	184
  9064  018EA2  6EE6               	movwf	postinc1,c
  9065  018EA4  0E0B               	movlw	11
  9066  018EA6  6EE6               	movwf	postinc1,c
  9067  018EA8  ECB0  F0D7         	call	_WaitMs	;wreg free
  9068                           
  9069                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  9070  018EAC  0012               	return		;funcret
  9071  018EAE                     __end_of_vterm_dump:
  9072                           	opt callstack 0
  9073                           
  9074 ;; *************** function _sprintf *****************
  9075 ;; Defined at:
  9076 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  9077 ;; Parameters:    Size  Location     Type
  9078 ;;  s               2  [STACK] PTR unsigned char 
  9079 ;;		 -> D.lcd(480), D(482), port_data(512), V(190), 
  9080 ;;  fmt             2  [STACK] PTR const unsigned char 
  9081 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
  9082 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
  9083 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
  9084 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
  9085 ;;		 -> STR_48(19), STR_42(17), STR_41(16), STR_40(16), 
  9086 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
  9087 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
  9088 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  9089 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  9090 ;;		 -> STR_23(19), STR_22(19), STR_21(17), STR_20(16), 
  9091 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
  9092 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
  9093 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
  9094 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  9095 ;;		 -> STR_2(15), STR_1(17), 
  9096 ;; Auto vars:     Size  Location     Type
  9097 ;;  f               6  [STACK] struct _IO_FILE
  9098 ;;  ap              2  [STACK] PTR void [1]
  9099 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9100 ;;  ret             2    0        int 
  9101 ;; Return value:  Size  Location     Type
  9102 ;;                  2  [STACK] int 
  9103 ;; Registers used:
  9104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9105 ;; Tracked objects:
  9106 ;;		On entry : 0/2
  9107 ;;		On exit  : 3F/0
  9108 ;;		Unchanged: 0/0
  9109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9114 ;;Total ram usage:        0 bytes
  9115 ;; Hardware stack levels used:    1
  9116 ;; Hardware stack levels required when called:   23
  9117 ;; This function calls:
  9118 ;;		_vfprintf
  9119 ;; This function is called by:
  9120 ;;		_main
  9121 ;;		_check_help
  9122 ;;		_vterm_dump
  9123 ;;		_calc_bsoc
  9124 ;; This function uses a reentrant model
  9125 ;;
  9126                           
  9127                           	psect	text30
  9128  01930E                     __ptext30:
  9129                           	opt callstack 0
  9130  01930E                     _sprintf:
  9131                           	opt callstack 0
  9132                           
  9133                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 56, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9134  01930E  0E08               	movlw	8
  9135  019310  26E1               	addwf	fsr1l,f,c
  9136  019312  0E00               	movlw	0
  9137  019314  22E2               	addwfc	fsr1h,f,c
  9138                           
  9139                           ;incstack = 0
  9140 ;; hardware stack exceeded
  9141  019316  0EFE               	movlw	254
  9142  019318  6E30               	movwf	(btemp+10)^0,c
  9143  01931A  0EFF               	movlw	255
  9144  01931C  6E31               	movwf	(btemp+11)^0,c
  9145                           
  9146                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  9147  01931E  0EF5               	movlw	245
  9148  019320  24E1               	addwf	fsr1l,w,c
  9149  019322  6E2E               	movwf	(btemp+8)^0,c
  9150  019324  0EFF               	movlw	255
  9151  019326  20E2               	addwfc	fsr1h,w,c
  9152  019328  6E2F               	movwf	(btemp+9)^0,c
  9153  01932A  5030               	movf	(btemp+10)^0,w,c
  9154  01932C  262E               	addwf	(btemp+8)^0,f,c
  9155  01932E  5031               	movf	(btemp+11)^0,w,c
  9156  019330  222F               	addwfc	(btemp+9)^0,f,c
  9157                           
  9158                           ;stkvar	_ap @ sp[(-8)+6]
  9159  019332  0EFF               	movlw	-1
  9160  019334  0060  F0BF  FFE3   	movff	btemp+9,plusw1
  9161  01933A  0EFE               	movlw	-2
  9162  01933C  0060  F0BB  FFE3   	movff	btemp+8,plusw1
  9163                           
  9164                           ;stkvar	_s @ sp[(-8)+-3]
  9165  019342  0EF5               	movlw	-11
  9166  019344  006F FF8C  F030    	movff	plusw1,btemp+10
  9167  01934A  0EF6               	movlw	-10
  9168  01934C  006F FF8C  F031    	movff	plusw1,btemp+11
  9169                           
  9170                           ;stkvar	_f @ sp[(-8)+0]
  9171  019352  0EF9               	movlw	-7
  9172  019354  0060  F0C7  FFE3   	movff	btemp+11,plusw1
  9173  01935A  0EF8               	movlw	-8
  9174  01935C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
  9175                           
  9176                           ;stkvar	_f @ sp[(-8)+0]
  9177  019362  0EFA               	movlw	250
  9178  019364  24E1               	addwf	fsr1l,w,c
  9179  019366  6ED9               	movwf	fsr2l,c
  9180  019368  0EFF               	movlw	255
  9181  01936A  20E2               	addwfc	fsr1h,w,c
  9182  01936C  6EDA               	movwf	fsr2h,c
  9183  01936E  0E00               	movlw	0
  9184  019370  6EDE               	movwf	postinc2,c
  9185  019372  0E00               	movlw	0
  9186  019374  6EDD               	movwf	postdec2,c
  9187                           
  9188                           ;stkvar	_f @ sp[(-8)+0]
  9189  019376  0EFC               	movlw	252
  9190  019378  24E1               	addwf	fsr1l,w,c
  9191  01937A  6ED9               	movwf	fsr2l,c
  9192  01937C  0EFF               	movlw	255
  9193  01937E  20E2               	addwfc	fsr1h,w,c
  9194  019380  6EDA               	movwf	fsr2h,c
  9195  019382  0E00               	movlw	0
  9196  019384  6EDE               	movwf	postinc2,c
  9197  019386  0E00               	movlw	0
  9198  019388  6EDD               	movwf	postdec2,c
  9199                           
  9200                           ;stkvar	_ap @ sp[(-8)+6]
  9201  01938A  0EFE               	movlw	254
  9202  01938C  24E1               	addwf	fsr1l,w,c
  9203  01938E  6E26               	movwf	btemp^0,c
  9204  019390  0EFF               	movlw	255
  9205  019392  20E2               	addwfc	fsr1h,w,c
  9206  019394  6E27               	movwf	(btemp+1)^0,c
  9207  019396  0060  F09B  FFE6   	movff	btemp,postinc1
  9208  01939C  0060  F09F  FFE6   	movff	btemp+1,postinc1
  9209                           
  9210                           ;stkvar	_fmt @ sp[(-10)+-5]
  9211  0193A2  0EF1               	movlw	-15
  9212  0193A4  006F FF8F FFE6     	movff	plusw1,postinc1
  9213  0193AA  006F FF8F FFE6     	movff	plusw1,postinc1
  9214                           
  9215                           ;stkvar	_f @ sp[(-12)+0]
  9216  0193B0  0EF4               	movlw	244
  9217  0193B2  24E1               	addwf	fsr1l,w,c
  9218  0193B4  6E26               	movwf	btemp^0,c
  9219  0193B6  0EFF               	movlw	255
  9220  0193B8  20E2               	addwfc	fsr1h,w,c
  9221  0193BA  6E27               	movwf	(btemp+1)^0,c
  9222  0193BC  0060  F09B  FFE6   	movff	btemp,postinc1
  9223  0193C2  0060  F09F  FFE6   	movff	btemp+1,postinc1
  9224  0193C8  EC29  F0CF         	call	_vfprintf	;wreg free
  9225                           
  9226                           ; BSR set to: 0
  9227                           ;stkvar	_f @ sp[(-8)+0]
  9228  0193CC  0EFA               	movlw	250
  9229  0193CE  24E1               	addwf	fsr1l,w,c
  9230  0193D0  6ED9               	movwf	fsr2l,c
  9231  0193D2  0EFF               	movlw	255
  9232  0193D4  20E2               	addwfc	fsr1h,w,c
  9233  0193D6  6EDA               	movwf	fsr2h,c
  9234  0193D8  006F FF78  F030    	movff	postinc2,btemp+10
  9235  0193DE  006F FF74  F031    	movff	postdec2,btemp+11
  9236                           
  9237                           ;stkvar	_s @ sp[(-8)+-3]
  9238  0193E4  0EF5               	movlw	-11
  9239  0193E6  006F FF8C  F02E    	movff	plusw1,btemp+8
  9240  0193EC  0EF6               	movlw	-10
  9241  0193EE  006F FF8C  F02F    	movff	plusw1,btemp+9
  9242  0193F4  5030               	movf	(btemp+10)^0,w,c
  9243  0193F6  242E               	addwf	(btemp+8)^0,w,c
  9244  0193F8  6ED9               	movwf	fsr2l,c
  9245  0193FA  5031               	movf	(btemp+11)^0,w,c
  9246  0193FC  202F               	addwfc	(btemp+9)^0,w,c
  9247  0193FE  6EDA               	movwf	fsr2h,c
  9248  019400  0E00               	movlw	0
  9249  019402  6EDF               	movwf	indf2,c
  9250                           
  9251                           ; BSR set to: 0
  9252                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 56, args
      +                          ize = 4, vargsize = 0
  9253  019404  0EF8               	movlw	248
  9254  019406  26E1               	addwf	fsr1l,f,c
  9255  019408  0EFF               	movlw	255
  9256  01940A  22E2               	addwfc	fsr1h,f,c
  9257  01940C  52E5               	movf	postdec1,f,c
  9258  01940E  50E7               	movf	indf1,w,c
  9259  019410  5EE1               	subwf	fsr1l,f,c
  9260  019412  0E00               	movlw	0
  9261  019414  5AE2               	subwfb	fsr1h,f,c
  9262  019416  0012               	return		;funcret
  9263  019418                     __end_of_sprintf:
  9264                           	opt callstack 0
  9265                           
  9266 ;; *************** function _get_vterm_ptr *****************
  9267 ;; Defined at:
  9268 ;;		line 116 in file "mconfig.c"
  9269 ;; Parameters:    Size  Location     Type
  9270 ;;  line            1  [STACK] const unsigned char 
  9271 ;;  vterm           1  [STACK] const unsigned char 
  9272 ;; Auto vars:     Size  Location     Type
  9273 ;;		None
  9274 ;; Return value:  Size  Location     Type
  9275 ;;                  2  [STACK] PTR unsigned char 
  9276 ;; Registers used:
  9277 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  9278 ;; Tracked objects:
  9279 ;;		On entry : 0/2
  9280 ;;		On exit  : 0/0
  9281 ;;		Unchanged: 0/0
  9282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9287 ;;Total ram usage:        0 bytes
  9288 ;; Hardware stack levels used:    1
  9289 ;; Hardware stack levels required when called:   15
  9290 ;; This function calls:
  9291 ;;		Nothing
  9292 ;; This function is called by:
  9293 ;;		_main
  9294 ;;		_check_help
  9295 ;;		_vterm_dump
  9296 ;; This function uses a reentrant model
  9297 ;;
  9298                           
  9299                           	psect	text31
  9300  01B124                     __ptext31:
  9301                           	opt callstack 0
  9302  01B124                     _get_vterm_ptr:
  9303                           	opt callstack 15
  9304                           
  9305                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  9306                           ;stkvar	_vterm @ sp[(0)+-2]
  9307                           
  9308                           ; BSR set to: 0
  9309                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9310                           ;incstack = 0
  9311  01B124  0EFE               	movlw	-2
  9312  01B126  50E3               	movf	plusw1,w,c
  9313  01B128  0B03               	andlw	3
  9314  01B12A  0D78               	mullw	120
  9315  01B12C  0EFF               	movlw	low _D
  9316  01B12E  6E26               	movwf	btemp^0,c
  9317  01B130  0E07               	movlw	high _D
  9318  01B132  6E27               	movwf	(btemp+1)^0,c
  9319  01B134  50F3               	movf	243,w,c
  9320  01B136  2626               	addwf	btemp^0,f,c
  9321  01B138  50F4               	movf	244,w,c
  9322  01B13A  2227               	addwfc	(btemp+1)^0,f,c
  9323                           
  9324                           ;stkvar	_line @ sp[(0)+-1]
  9325  01B13C  0EFF               	movlw	-1
  9326  01B13E  50E3               	movf	plusw1,w,c
  9327  01B140  0B03               	andlw	3
  9328  01B142  0D28               	mullw	40
  9329  01B144  50F3               	movf	243,w,c
  9330  01B146  2626               	addwf	btemp^0,f,c
  9331  01B148  50F4               	movf	244,w,c
  9332  01B14A  2227               	addwfc	(btemp+1)^0,f,c
  9333                           
  9334                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9335  01B14C  52E5               	movf	postdec1,f,c
  9336  01B14E  52E5               	movf	postdec1,f,c
  9337  01B150  0012               	return		;funcret
  9338  01B152                     __end_of_get_vterm_ptr:
  9339                           	opt callstack 0
  9340                           
  9341 ;; *************** function _WaitMs *****************
  9342 ;; Defined at:
  9343 ;;		line 32 in file "timers.c"
  9344 ;; Parameters:    Size  Location     Type
  9345 ;;  numMilliseco    2  [STACK] const unsigned short 
  9346 ;; Auto vars:     Size  Location     Type
  9347 ;;		None
  9348 ;; Return value:  Size  Location     Type
  9349 ;;                  1  [STACK] void 
  9350 ;; Registers used:
  9351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9352 ;; Tracked objects:
  9353 ;;		On entry : 0/2
  9354 ;;		On exit  : 0/0
  9355 ;;		Unchanged: 0/0
  9356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9361 ;;Total ram usage:        0 bytes
  9362 ;; Hardware stack levels used:    1
  9363 ;; Hardware stack levels required when called:   16
  9364 ;; This function calls:
  9365 ;;		_StartTimer
  9366 ;;		_TimerDone
  9367 ;; This function is called by:
  9368 ;;		_main
  9369 ;;		_vterm_dump
  9370 ;; This function uses a reentrant model
  9371 ;;
  9372                           
  9373                           	psect	text32
  9374  01AF60                     __ptext32:
  9375                           	opt callstack 0
  9376  01AF60                     _WaitMs:
  9377                           	opt callstack 12
  9378                           
  9379                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  9380                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  9381                           
  9382                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9383                           ;incstack = 0
  9384  01AF60  0EFE               	movlw	-2
  9385  01AF62  006F FF8F FFE6     	movff	plusw1,postinc1
  9386  01AF68  006F FF8F FFE6     	movff	plusw1,postinc1
  9387  01AF6E  0E00               	movlw	0
  9388  01AF70  6EE6               	movwf	postinc1,c
  9389  01AF72  ECBC  F0D6         	call	_StartTimer	;wreg free
  9390                           
  9391                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9392  01AF76  D005               	goto	l9685
  9393  01AF78                     l1598:
  9394                           
  9395                           ;timers.c: 36:   __nop();
  9396  01AF78  F000               	nop	
  9397                           
  9398                           ;timers.c: 37:   __nop();
  9399  01AF7A  F000               	nop	
  9400                           
  9401                           ;timers.c: 38:   __nop();
  9402  01AF7C  F000               	nop	
  9403                           
  9404                           ;timers.c: 39:   __nop();
  9405  01AF7E  F000               	nop	
  9406  01AF80  0004               	clrwdt		;# 
  9407  01AF82                     l9685:
  9408                           
  9409                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9410  01AF82  0E00               	movlw	0
  9411  01AF84  6EE6               	movwf	postinc1,c
  9412  01AF86  EC3D  F0D9         	call	_TimerDone	;wreg free
  9413  01AF8A  5026               	movf	btemp^0,w,c
  9414  01AF8C  B4D8               	btfsc	status,2,c
  9415  01AF8E  D7F4               	goto	l1598
  9416                           
  9417                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  9418  01AF90  52E5               	movf	postdec1,f,c
  9419  01AF92  52E5               	movf	postdec1,f,c
  9420  01AF94  0012               	return		;funcret
  9421  01AF96                     __end_of_WaitMs:
  9422                           	opt callstack 0
  9423                           
  9424 ;; *************** function _update_lcd *****************
  9425 ;; Defined at:
  9426 ;;		line 85 in file "mconfig.c"
  9427 ;; Parameters:    Size  Location     Type
  9428 ;;  vterm           1  [STACK] unsigned char 
  9429 ;; Auto vars:     Size  Location     Type
  9430 ;;		None
  9431 ;; Return value:  Size  Location     Type
  9432 ;;                  1  [STACK] unsigned char 
  9433 ;; Registers used:
  9434 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9435 ;; Tracked objects:
  9436 ;;		On entry : 0/0
  9437 ;;		On exit  : 0/0
  9438 ;;		Unchanged: 0/0
  9439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9444 ;;Total ram usage:        0 bytes
  9445 ;; Hardware stack levels used:    1
  9446 ;; Hardware stack levels required when called:   26
  9447 ;; This function calls:
  9448 ;;		_eaDogM_WriteStringAtPos
  9449 ;;		_wait_lcd_done
  9450 ;; This function is called by:
  9451 ;;		_main
  9452 ;;		_check_help
  9453 ;; This function uses a reentrant model
  9454 ;;
  9455                           
  9456                           	psect	text33
  9457  0191FE                     __ptext33:
  9458                           	opt callstack 0
  9459  0191FE                     _update_lcd:
  9460                           	opt callstack 4
  9461                           
  9462                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  9463                           ;stkvar	_vterm @ sp[(0)+-1]
  9464                           
  9465                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9466                           ;incstack = 0
  9467  0191FE  0EFF               	movlw	-1
  9468  019200  006F FF8C  F026    	movff	plusw1,btemp
  9469  019206  0E03               	movlw	3
  9470  019208  1626               	andwf	btemp^0,f,c
  9471  01920A  0EFF               	movlw	-1
  9472  01920C  0060  F09B  FFE3   	movff	btemp,plusw1
  9473                           
  9474                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  9475  019212  EE22  F1DF         	lfsr	2,_D+480
  9476  019216  A0DF               	btfss	indf2,0,c
  9477  019218  D004               	goto	l12445
  9478                           
  9479                           ;stkvar	_vterm @ sp[(0)+-1]
  9480  01921A  0EFF               	movlw	-1
  9481  01921C  50E3               	movf	plusw1,w,c
  9482  01921E  B4D8               	btfsc	status,2,c
  9483  019220  D074               	goto	l1674
  9484  019222                     l12445:
  9485                           
  9486                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  9487                           ;stkvar	_vterm @ sp[(0)+-1]
  9488  019222  0EFF               	movlw	-1
  9489  019224  50E3               	movf	plusw1,w,c
  9490  019226  0D78               	mullw	120
  9491  019228  0E0F               	movlw	low (_D+16)
  9492  01922A  24F3               	addwf	243,w,c
  9493  01922C  6ED9               	movwf	fsr2l,c
  9494  01922E  0E08               	movlw	high (_D+16)
  9495  019230  20F4               	addwfc	prodh,w,c
  9496  019232  6EDA               	movwf	fsr2h,c
  9497  019234  0E00               	movlw	0
  9498  019236  6EDF               	movwf	indf2,c
  9499                           
  9500                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  9501                           ;stkvar	_vterm @ sp[(0)+-1]
  9502  019238  0EFF               	movlw	-1
  9503  01923A  50E3               	movf	plusw1,w,c
  9504  01923C  0D78               	mullw	120
  9505  01923E  0E37               	movlw	low (_D+56)
  9506  019240  24F3               	addwf	243,w,c
  9507  019242  6ED9               	movwf	fsr2l,c
  9508  019244  0E08               	movlw	high (_D+56)
  9509  019246  20F4               	addwfc	prodh,w,c
  9510  019248  6EDA               	movwf	fsr2h,c
  9511  01924A  0E00               	movlw	0
  9512  01924C  6EDF               	movwf	indf2,c
  9513                           
  9514                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  9515                           ;stkvar	_vterm @ sp[(0)+-1]
  9516  01924E  0EFF               	movlw	-1
  9517  019250  50E3               	movf	plusw1,w,c
  9518  019252  0D78               	mullw	120
  9519  019254  0E5F               	movlw	low (_D+96)
  9520  019256  24F3               	addwf	243,w,c
  9521  019258  6ED9               	movwf	fsr2l,c
  9522  01925A  0E08               	movlw	high (_D+96)
  9523  01925C  20F4               	addwfc	prodh,w,c
  9524  01925E  6EDA               	movwf	fsr2h,c
  9525  019260  0E00               	movlw	0
  9526  019262  6EDF               	movwf	indf2,c
  9527                           
  9528                           ;mconfig.c: 95:  wait_lcd_done();
  9529  019264  EC4D  F0DB         	call	_wait_lcd_done	;wreg free
  9530                           
  9531                           ; BSR set to: 0
  9532                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  9533                           ;stkvar	_vterm @ sp[(0)+-1]
  9534  019268  0EFF               	movlw	-1
  9535  01926A  50E3               	movf	plusw1,w,c
  9536  01926C  0D78               	mullw	120
  9537  01926E  0EFF               	movlw	low _D
  9538  019270  6E30               	movwf	(btemp+10)^0,c
  9539  019272  0E07               	movlw	high _D
  9540  019274  6E31               	movwf	(btemp+11)^0,c
  9541  019276  50F3               	movf	243,w,c
  9542  019278  2630               	addwf	(btemp+10)^0,f,c
  9543  01927A  50F4               	movf	244,w,c
  9544  01927C  2231               	addwfc	(btemp+11)^0,f,c
  9545  01927E  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  9546  019284  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  9547  01928A  0E00               	movlw	0
  9548  01928C  6EE6               	movwf	postinc1,c
  9549  01928E  0E00               	movlw	0
  9550  019290  6EE6               	movwf	postinc1,c
  9551  019292  ECCB  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9552                           
  9553                           ; BSR set to: 59
  9554                           ;mconfig.c: 97:  wait_lcd_done();
  9555  019296  EC4D  F0DB         	call	_wait_lcd_done	;wreg free
  9556                           
  9557                           ; BSR set to: 0
  9558                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  9559                           ;stkvar	_vterm @ sp[(0)+-1]
  9560  01929A  0EFF               	movlw	-1
  9561  01929C  50E3               	movf	plusw1,w,c
  9562  01929E  0D78               	mullw	120
  9563  0192A0  0EFF               	movlw	low _D
  9564  0192A2  6E30               	movwf	(btemp+10)^0,c
  9565  0192A4  0E07               	movlw	high _D
  9566  0192A6  6E31               	movwf	(btemp+11)^0,c
  9567  0192A8  0E28               	movlw	40
  9568  0192AA  2630               	addwf	(btemp+10)^0,f,c
  9569  0192AC  0E00               	movlw	0
  9570  0192AE  2231               	addwfc	(btemp+11)^0,f,c
  9571  0192B0  50F3               	movf	243,w,c
  9572  0192B2  2630               	addwf	(btemp+10)^0,f,c
  9573  0192B4  50F4               	movf	244,w,c
  9574  0192B6  2231               	addwfc	(btemp+11)^0,f,c
  9575  0192B8  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  9576  0192BE  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  9577  0192C4  0E00               	movlw	0
  9578  0192C6  6EE6               	movwf	postinc1,c
  9579  0192C8  0E01               	movlw	1
  9580  0192CA  6EE6               	movwf	postinc1,c
  9581  0192CC  ECCB  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9582                           
  9583                           ; BSR set to: 59
  9584                           ;mconfig.c: 99:  wait_lcd_done();
  9585  0192D0  EC4D  F0DB         	call	_wait_lcd_done	;wreg free
  9586                           
  9587                           ; BSR set to: 0
  9588                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  9589                           ;stkvar	_vterm @ sp[(0)+-1]
  9590  0192D4  0EFF               	movlw	-1
  9591  0192D6  50E3               	movf	plusw1,w,c
  9592  0192D8  0D78               	mullw	120
  9593  0192DA  0EFF               	movlw	low _D
  9594  0192DC  6E30               	movwf	(btemp+10)^0,c
  9595  0192DE  0E07               	movlw	high _D
  9596  0192E0  6E31               	movwf	(btemp+11)^0,c
  9597  0192E2  0E50               	movlw	80
  9598  0192E4  2630               	addwf	(btemp+10)^0,f,c
  9599  0192E6  0E00               	movlw	0
  9600  0192E8  2231               	addwfc	(btemp+11)^0,f,c
  9601  0192EA  50F3               	movf	243,w,c
  9602  0192EC  2630               	addwf	(btemp+10)^0,f,c
  9603  0192EE  50F4               	movf	244,w,c
  9604  0192F0  2231               	addwfc	(btemp+11)^0,f,c
  9605  0192F2  0060  F0C3  FFE6   	movff	btemp+10,postinc1
  9606  0192F8  0060  F0C7  FFE6   	movff	btemp+11,postinc1
  9607  0192FE  0E00               	movlw	0
  9608  019300  6EE6               	movwf	postinc1,c
  9609  019302  0E02               	movlw	2
  9610  019304  6EE6               	movwf	postinc1,c
  9611  019306  ECCB  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9612  01930A                     l1674:
  9613                           
  9614                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  9615  01930A  52E5               	movf	postdec1,f,c
  9616  01930C  0012               	return		;funcret
  9617  01930E                     __end_of_update_lcd:
  9618                           	opt callstack 0
  9619                           
  9620 ;; *************** function _eaDogM_WriteStringAtPos *****************
  9621 ;; Defined at:
  9622 ;;		line 278 in file "eadog.c"
  9623 ;; Parameters:    Size  Location     Type
  9624 ;;  r               1  [STACK] const unsigned char 
  9625 ;;  c               1  [STACK] const unsigned char 
  9626 ;;  strPtr          2  [STACK] PTR unsigned char 
  9627 ;;		 -> D.lcd(480), D(482), V(190), 
  9628 ;; Auto vars:     Size  Location     Type
  9629 ;;		None
  9630 ;; Return value:  Size  Location     Type
  9631 ;;                  1  [STACK] void 
  9632 ;; Registers used:
  9633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9634 ;; Tracked objects:
  9635 ;;		On entry : 3F/0
  9636 ;;		On exit  : 3F/3B
  9637 ;;		Unchanged: 0/0
  9638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9643 ;;Total ram usage:        0 bytes
  9644 ;; Hardware stack levels used:    1
  9645 ;; Hardware stack levels required when called:   25
  9646 ;; This function calls:
  9647 ;;		_eaDogM_WriteString
  9648 ;;		_send_lcd_cmd_dma
  9649 ;; This function is called by:
  9650 ;;		_update_lcd
  9651 ;;		_vterm_dump
  9652 ;; This function uses a reentrant model
  9653 ;;
  9654                           
  9655                           	psect	text34
  9656  01AF96                     __ptext34:
  9657                           	opt callstack 0
  9658  01AF96                     _eaDogM_WriteStringAtPos:
  9659                           	opt callstack 4
  9660                           
  9661                           ;eadog.c: 278: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 279: {;eadog.c: 280:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  9662                           ;stkvar	_c @ sp[(0)+-2]
  9663                           
  9664                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9665                           ;incstack = 0
  9666  01AF96  0EFE               	movlw	-2
  9667  01AF98  006F FF8C  F031    	movff	plusw1,btemp+11
  9668                           
  9669                           ;stkvar	_r @ sp[(0)+-1]
  9670  01AF9E  0EFF               	movlw	-1
  9671  01AFA0  50E3               	movf	plusw1,w,c
  9672  01AFA2  0D10               	mullw	16
  9673  01AFA4  50F3               	movf	243,w,c
  9674  01AFA6  2431               	addwf	(btemp+11)^0,w,c
  9675  01AFA8  0F80               	addlw	128
  9676  01AFAA  6EE6               	movwf	postinc1,c
  9677  01AFAC  ECDF  F0D4         	call	_send_lcd_cmd_dma	;wreg free
  9678                           
  9679                           ;eadog.c: 281:  eaDogM_WriteString(strPtr);
  9680                           ;stkvar	_strPtr @ sp[(0)+-4]
  9681  01AFB0  0EFC               	movlw	-4
  9682  01AFB2  006F FF8F FFE6     	movff	plusw1,postinc1
  9683  01AFB8  006F FF8F FFE6     	movff	plusw1,postinc1
  9684  01AFBE  ECD4  F0CF         	call	_eaDogM_WriteString	;wreg free
  9685                           
  9686                           ; BSR set to: 59
  9687                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  9688  01AFC2  52E5               	movf	postdec1,f,c
  9689  01AFC4  52E5               	movf	postdec1,f,c
  9690  01AFC6  52E5               	movf	postdec1,f,c
  9691  01AFC8  52E5               	movf	postdec1,f,c
  9692  01AFCA  0012               	return		;funcret
  9693  01AFCC                     __end_of_eaDogM_WriteStringAtPos:
  9694                           	opt callstack 0
  9695                           
  9696 ;; *************** function _send_lcd_cmd_dma *****************
  9697 ;; Defined at:
  9698 ;;		line 220 in file "eadog.c"
  9699 ;; Parameters:    Size  Location     Type
  9700 ;;  strPtr          1  [STACK] unsigned char 
  9701 ;; Auto vars:     Size  Location     Type
  9702 ;;		None
  9703 ;; Return value:  Size  Location     Type
  9704 ;;                  1  [STACK] void 
  9705 ;; Registers used:
  9706 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9707 ;; Tracked objects:
  9708 ;;		On entry : 0/3D
  9709 ;;		On exit  : 3F/0
  9710 ;;		Unchanged: 0/0
  9711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9716 ;;Total ram usage:        0 bytes
  9717 ;; Hardware stack levels used:    1
  9718 ;; Hardware stack levels required when called:   24
  9719 ;; This function calls:
  9720 ;;		_printf
  9721 ;;		_ringBufS_flush
  9722 ;;		_start_lcd
  9723 ;;		_wait_lcd_done
  9724 ;;		_wait_lcd_set
  9725 ;; This function is called by:
  9726 ;;		_eaDogM_WriteCommand
  9727 ;;		_eaDogM_WriteStringAtPos
  9728 ;; This function uses a reentrant model
  9729 ;;
  9730                           
  9731                           	psect	text35
  9732  01A9BE                     __ptext35:
  9733                           	opt callstack 0
  9734  01A9BE                     _send_lcd_cmd_dma:
  9735                           	opt callstack 4
  9736                           
  9737                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
  9738                           
  9739                           ; BSR set to: 59
  9740                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9741                           ;incstack = 0
  9742  01A9BE  EC2A  F0DC         	call	_wait_lcd_set	;wreg free
  9743                           
  9744                           ; BSR set to: 0
  9745                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
  9746  01A9C2  0E00               	movlw	0
  9747  01A9C4  6EE6               	movwf	postinc1,c
  9748  01A9C6  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  9749  01A9CC  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  9750  01A9D2  EC57  F0D1         	call	_ringBufS_flush	;wreg free
  9751  01A9D6  92BC               	bcf	188,1,c	;volatile
  9752  01A9D8  94BC               	bcf	188,2,c	;volatile
  9753                           
  9754                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
  9755  01A9DA  013B               	movlb	59	; () banked
  9756  01A9DC  9FFC               	bcf	252,7,b	;volatile
  9757                           
  9758                           ; BSR set to: 59
  9759                           ;eadog.c: 229:  DMA1SSZ = 1;
  9760  01A9DE  0E00               	movlw	0
  9761  01A9E0  6FF8               	movwf	248,b	;volatile
  9762  01A9E2  0E01               	movlw	1
  9763  01A9E4  6FF7               	movwf	247,b	;volatile
  9764                           
  9765                           ; BSR set to: 59
  9766                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
  9767  01A9E6  8FFC               	bsf	252,7,b	;volatile
  9768                           
  9769                           ; BSR set to: 59
  9770                           ;eadog.c: 231:  printf("%c", strPtr);
  9771                           ;stkvar	_strPtr @ sp[(0)+-1]
  9772  01A9E8  0EFF               	movlw	-1
  9773  01A9EA  50E3               	movf	plusw1,w,c
  9774  01A9EC  6EE6               	movwf	postinc1,c
  9775  01A9EE  0E00               	movlw	0
  9776  01A9F0  6EE6               	movwf	postinc1,c
  9777  01A9F2  0EF8               	movlw	low STR_44
  9778  01A9F4  6EE6               	movwf	postinc1,c
  9779  01A9F6  0EFF               	movlw	high STR_44
  9780  01A9F8  6EE6               	movwf	postinc1,c
  9781  01A9FA  0E04               	movlw	4
  9782  01A9FC  6EE6               	movwf	postinc1,c
  9783  01A9FE  ECF4  F0D3         	call	_printf	;wreg free
  9784                           
  9785                           ; BSR set to: 0
  9786                           ;eadog.c: 232:  start_lcd();
  9787  01AA02  EC2D  F0DC         	call	_start_lcd	;wreg free
  9788                           
  9789                           ; BSR set to: 59
  9790                           ;eadog.c: 233:  wait_lcd_done();
  9791  01AA06  EC4D  F0DB         	call	_wait_lcd_done	;wreg free
  9792                           
  9793                           ; BSR set to: 0
  9794  01AA0A  82BC               	bsf	188,1,c	;volatile
  9795                           
  9796                           ; BSR set to: 0
  9797                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  9798  01AA0C  52E5               	movf	postdec1,f,c
  9799  01AA0E  0012               	return		;funcret
  9800  01AA10                     __end_of_send_lcd_cmd_dma:
  9801                           	opt callstack 0
  9802                           
  9803 ;; *************** function _wait_lcd_done *****************
  9804 ;; Defined at:
  9805 ;;		line 156 in file "eadog.c"
  9806 ;; Parameters:    Size  Location     Type
  9807 ;;		None
  9808 ;; Auto vars:     Size  Location     Type
  9809 ;;		None
  9810 ;; Return value:  Size  Location     Type
  9811 ;;                  1  [STACK] void 
  9812 ;; Registers used:
  9813 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9814 ;; Tracked objects:
  9815 ;;		On entry : 0/0
  9816 ;;		On exit  : 3F/0
  9817 ;;		Unchanged: 0/0
  9818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9823 ;;Total ram usage:        0 bytes
  9824 ;; Hardware stack levels used:    1
  9825 ;; Hardware stack levels required when called:   16
  9826 ;; This function calls:
  9827 ;;		_wdtdelay
  9828 ;; This function is called by:
  9829 ;;		_send_lcd_cmd_dma
  9830 ;;		_update_lcd
  9831 ;;		_vterm_dump
  9832 ;; This function uses a reentrant model
  9833 ;;
  9834                           
  9835                           	psect	text36
  9836  01B69A                     __ptext36:
  9837                           	opt callstack 0
  9838  01B69A                     _wait_lcd_done:
  9839                           	opt callstack 13
  9840                           
  9841                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
  9842                           
  9843                           ; BSR set to: 0
  9844                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9845                           ;incstack = 0
  9846  01B69A  0100               	movlb	0	; () banked
  9847  01B69C  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
  9848  01B69E  D7FD               	goto	_wait_lcd_done
  9849                           
  9850                           ; BSR set to: 0
  9851                           ;eadog.c: 159:  wdtdelay(50);
  9852  01B6A0  0E32               	movlw	50
  9853  01B6A2  6EE6               	movwf	postinc1,c
  9854  01B6A4  0E00               	movlw	0
  9855  01B6A6  6EE6               	movwf	postinc1,c
  9856  01B6A8  0E00               	movlw	0
  9857  01B6AA  6EE6               	movwf	postinc1,c
  9858  01B6AC  0E00               	movlw	0
  9859  01B6AE  6EE6               	movwf	postinc1,c
  9860  01B6B0  EC85  F0D4         	call	_wdtdelay	;wreg free
  9861                           
  9862                           ; BSR set to: 0
  9863                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9864  01B6B4  0012               	return		;funcret
  9865  01B6B6                     __end_of_wait_lcd_done:
  9866                           	opt callstack 0
  9867                           
  9868 ;; *************** function _wdtdelay *****************
  9869 ;; Defined at:
  9870 ;;		line 23 in file "eadog.c"
  9871 ;; Parameters:    Size  Location     Type
  9872 ;;  delay           4  [STACK] const unsigned long 
  9873 ;; Auto vars:     Size  Location     Type
  9874 ;;		None
  9875 ;; Return value:  Size  Location     Type
  9876 ;;                  1  [STACK] void 
  9877 ;; Registers used:
  9878 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9879 ;; Tracked objects:
  9880 ;;		On entry : 0/0
  9881 ;;		On exit  : 3F/0
  9882 ;;		Unchanged: 0/0
  9883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9888 ;;Total ram usage:        0 bytes
  9889 ;; Hardware stack levels used:    1
  9890 ;; Hardware stack levels required when called:   15
  9891 ;; This function calls:
  9892 ;;		Nothing
  9893 ;; This function is called by:
  9894 ;;		_init_display
  9895 ;;		_send_lcd_cmd
  9896 ;;		_send_lcd_cmd_long
  9897 ;;		_wait_lcd_done
  9898 ;; This function uses a reentrant model
  9899 ;;
  9900                           
  9901                           	psect	text37
  9902  01A90A                     __ptext37:
  9903                           	opt callstack 0
  9904  01A90A                     _wdtdelay:
  9905                           	opt callstack 13
  9906                           
  9907                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
  9908                           
  9909                           ; BSR set to: 0
  9910                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9911                           ;incstack = 0
  9912  01A90A  0100               	movlb	0	; () banked
  9913  01A90C  6B92               	clrf	wdtdelay@dcount& (0+255),b
  9914  01A90E  6B93               	clrf	(wdtdelay@dcount+1)& (0+255),b
  9915  01A910  6B94               	clrf	(wdtdelay@dcount+2)& (0+255),b
  9916  01A912  6B95               	clrf	(wdtdelay@dcount+3)& (0+255),b
  9917  01A914                     l1439:
  9918                           
  9919                           ; BSR set to: 0
  9920                           ;eadog.c: 28:   __nop();
  9921  01A914  F000               	nop	
  9922  01A916  0004               	clrwdt		;# 
  9923                           
  9924                           ;eadog.c: 30:  };
  9925  01A918  0E01               	movlw	1
  9926  01A91A  0100               	movlb	0	; () banked
  9927  01A91C  2792               	addwf	wdtdelay@dcount& (0+255),f,b
  9928  01A91E  0E00               	movlw	0
  9929  01A920  2393               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  9930  01A922  2394               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  9931  01A924  2395               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  9932                           
  9933                           ; BSR set to: 0
  9934                           ;stkvar	_delay @ sp[(0)+-4]
  9935  01A926  0EFC               	movlw	-4
  9936  01A928  006F FF8C  F026    	movff	plusw1,btemp
  9937  01A92E  5192               	movf	wdtdelay@dcount& (0+255),w,b
  9938  01A930  5C26               	subwf	btemp^0,w,c
  9939  01A932  0EFD               	movlw	-3
  9940  01A934  006F FF8C  F026    	movff	plusw1,btemp
  9941  01A93A  5193               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  9942  01A93C  5826               	subwfb	btemp^0,w,c
  9943  01A93E  0EFE               	movlw	-2
  9944  01A940  006F FF8C  F026    	movff	plusw1,btemp
  9945  01A946  5194               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  9946  01A948  5826               	subwfb	btemp^0,w,c
  9947  01A94A  0EFF               	movlw	-1
  9948  01A94C  006F FF8C  F026    	movff	plusw1,btemp
  9949  01A952  5195               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  9950  01A954  5826               	subwfb	btemp^0,w,c
  9951  01A956  B0D8               	btfsc	status,0,c
  9952  01A958  D7DD               	goto	l1439
  9953                           
  9954                           ; BSR set to: 0
  9955                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  9956  01A95A  52E5               	movf	postdec1,f,c
  9957  01A95C  52E5               	movf	postdec1,f,c
  9958  01A95E  52E5               	movf	postdec1,f,c
  9959  01A960  52E5               	movf	postdec1,f,c
  9960  01A962  0012               	return		;funcret
  9961  01A964                     __end_of_wdtdelay:
  9962                           	opt callstack 0
  9963                           
  9964 ;; *************** function _eaDogM_WriteString *****************
  9965 ;; Defined at:
  9966 ;;		line 199 in file "eadog.c"
  9967 ;; Parameters:    Size  Location     Type
  9968 ;;  strPtr          2  [STACK] PTR unsigned char 
  9969 ;;		 -> D.lcd(480), D(482), V(190), 
  9970 ;; Auto vars:     Size  Location     Type
  9971 ;;		None
  9972 ;; Return value:  Size  Location     Type
  9973 ;;                  1  [STACK] void 
  9974 ;; Registers used:
  9975 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9976 ;; Tracked objects:
  9977 ;;		On entry : 3F/0
  9978 ;;		On exit  : 3F/3B
  9979 ;;		Unchanged: 0/0
  9980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9985 ;;Total ram usage:        0 bytes
  9986 ;; Hardware stack levels used:    1
  9987 ;; Hardware stack levels required when called:   24
  9988 ;; This function calls:
  9989 ;;		_printf
  9990 ;;		_ringBufS_flush
  9991 ;;		_start_lcd
  9992 ;;		_strlen
  9993 ;;		_wait_lcd_set
  9994 ;; This function is called by:
  9995 ;;		_eaDogM_WriteStringAtPos
  9996 ;; This function uses a reentrant model
  9997 ;;
  9998                           
  9999                           	psect	text38
 10000  019FA8                     __ptext38:
 10001                           	opt callstack 0
 10002  019FA8                     _eaDogM_WriteString:
 10003                           	opt callstack 4
 10004                           
 10005                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
 10006                           
 10007                           ; BSR set to: 0
 10008                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10009                           ;incstack = 0
 10010  019FA8  EC2A  F0DC         	call	_wait_lcd_set	;wreg free
 10011                           
 10012                           ; BSR set to: 0
 10013                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
 10014  019FAC  0E00               	movlw	0
 10015  019FAE  6EE6               	movwf	postinc1,c
 10016  019FB0  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10017  019FB6  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10018  019FBC  EC57  F0D1         	call	_ringBufS_flush	;wreg free
 10019  019FC0  94BC               	bcf	188,2,c	;volatile
 10020                           
 10021                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 10022                           ;stkvar	_strPtr @ sp[(0)+-2]
 10023  019FC2  0EFE               	movlw	-2
 10024  019FC4  006F FF8F FFE6     	movff	plusw1,postinc1
 10025  019FCA  006F FF8F FFE6     	movff	plusw1,postinc1
 10026  019FD0  EC27  F0D0         	call	_strlen	;wreg free
 10027  019FD4  5027               	movf	(btemp+1)^0,w,c
 10028  019FD6  E104               	bnz	u11950
 10029  019FD8  0E41               	movlw	65
 10030  019FDA  5C26               	subwf	btemp^0,w,c
 10031  019FDC  A0D8               	btfss	status,0,c
 10032  019FDE  D010               	goto	l12357
 10033  019FE0                     u11950:
 10034                           
 10035                           ;stkvar	_strPtr @ sp[(0)+-2]
 10036  019FE0  0EFE               	movlw	-2
 10037  019FE2  006F FF8C  F030    	movff	plusw1,btemp+10
 10038  019FE8  0EFF               	movlw	-1
 10039  019FEA  006F FF8C  F031    	movff	plusw1,btemp+11
 10040  019FF0  0E40               	movlw	64
 10041  019FF2  2430               	addwf	(btemp+10)^0,w,c
 10042  019FF4  6ED9               	movwf	fsr2l,c
 10043  019FF6  0E00               	movlw	0
 10044  019FF8  2031               	addwfc	(btemp+11)^0,w,c
 10045  019FFA  6EDA               	movwf	fsr2h,c
 10046  019FFC  0E00               	movlw	0
 10047  019FFE  6EDF               	movwf	indf2,c
 10048  01A000                     l12357:
 10049                           
 10050                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
 10051  01A000  013B               	movlb	59	; () banked
 10052  01A002  9FFC               	bcf	252,7,b	;volatile
 10053                           
 10054                           ; BSR set to: 59
 10055                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
 10056                           ;stkvar	_strPtr @ sp[(0)+-2]
 10057  01A004  0EFE               	movlw	-2
 10058  01A006  006F FF8F FFE6     	movff	plusw1,postinc1
 10059  01A00C  006F FF8F FFE6     	movff	plusw1,postinc1
 10060  01A012  EC27  F0D0         	call	_strlen	;wreg free
 10061  01A016  0060  F09B  FBF7   	movff	btemp,15351	;volatile
 10062  01A01C  0060  F09F  FBF8   	movff	btemp+1,15352	;volatile
 10063                           
 10064                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
 10065  01A022  013B               	movlb	59	; () banked
 10066  01A024  8FFC               	bsf	252,7,b	;volatile
 10067                           
 10068                           ; BSR set to: 59
 10069                           ;eadog.c: 210:  printf("%s", strPtr);
 10070                           ;stkvar	_strPtr @ sp[(0)+-2]
 10071  01A026  0EFE               	movlw	-2
 10072  01A028  006F FF8F FFE6     	movff	plusw1,postinc1
 10073  01A02E  006F FF8F FFE6     	movff	plusw1,postinc1
 10074  01A034  0EFB               	movlw	low STR_43
 10075  01A036  6EE6               	movwf	postinc1,c
 10076  01A038  0EFF               	movlw	high STR_43
 10077  01A03A  6EE6               	movwf	postinc1,c
 10078  01A03C  0E04               	movlw	4
 10079  01A03E  6EE6               	movwf	postinc1,c
 10080  01A040  ECF4  F0D3         	call	_printf	;wreg free
 10081                           
 10082                           ; BSR set to: 0
 10083                           ;eadog.c: 211:  start_lcd();
 10084  01A044  EC2D  F0DC         	call	_start_lcd	;wreg free
 10085                           
 10086                           ; BSR set to: 59
 10087                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 10088  01A048  52E5               	movf	postdec1,f,c
 10089  01A04A  52E5               	movf	postdec1,f,c
 10090  01A04C  0012               	return		;funcret
 10091  01A04E                     __end_of_eaDogM_WriteString:
 10092                           	opt callstack 0
 10093                           
 10094 ;; *************** function _wait_lcd_set *****************
 10095 ;; Defined at:
 10096 ;;		line 146 in file "eadog.c"
 10097 ;; Parameters:    Size  Location     Type
 10098 ;;		None
 10099 ;; Auto vars:     Size  Location     Type
 10100 ;;		None
 10101 ;; Return value:  Size  Location     Type
 10102 ;;                  1  [STACK] void 
 10103 ;; Registers used:
 10104 ;;		None
 10105 ;; Tracked objects:
 10106 ;;		On entry : 0/3D
 10107 ;;		On exit  : 3F/0
 10108 ;;		Unchanged: 0/0
 10109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10114 ;;Total ram usage:        0 bytes
 10115 ;; Hardware stack levels used:    1
 10116 ;; Hardware stack levels required when called:   15
 10117 ;; This function calls:
 10118 ;;		Nothing
 10119 ;; This function is called by:
 10120 ;;		_eaDogM_WriteString
 10121 ;;		_send_lcd_cmd_dma
 10122 ;; This function uses a reentrant model
 10123 ;;
 10124                           
 10125                           	psect	text39
 10126  01B854                     __ptext39:
 10127                           	opt callstack 0
 10128  01B854                     _wait_lcd_set:
 10129                           	opt callstack 12
 10130                           
 10131                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
 10132                           
 10133                           ; BSR set to: 59
 10134                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10135                           ;incstack = 0
 10136  01B854  0100               	movlb	0	; () banked
 10137  01B856  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 10138                           
 10139                           ; BSR set to: 0
 10140                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 10141  01B858  0012               	return		;funcret
 10142  01B85A                     __end_of_wait_lcd_set:
 10143                           	opt callstack 0
 10144                           
 10145 ;; *************** function _start_lcd *****************
 10146 ;; Defined at:
 10147 ;;		line 141 in file "eadog.c"
 10148 ;; Parameters:    Size  Location     Type
 10149 ;;		None
 10150 ;; Auto vars:     Size  Location     Type
 10151 ;;		None
 10152 ;; Return value:  Size  Location     Type
 10153 ;;                  1  [STACK] void 
 10154 ;; Registers used:
 10155 ;;		None
 10156 ;; Tracked objects:
 10157 ;;		On entry : 3F/0
 10158 ;;		On exit  : 3F/3B
 10159 ;;		Unchanged: 0/0
 10160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10165 ;;Total ram usage:        0 bytes
 10166 ;; Hardware stack levels used:    1
 10167 ;; Hardware stack levels required when called:   15
 10168 ;; This function calls:
 10169 ;;		Nothing
 10170 ;; This function is called by:
 10171 ;;		_eaDogM_WriteString
 10172 ;;		_send_lcd_cmd_dma
 10173 ;; This function uses a reentrant model
 10174 ;;
 10175                           
 10176                           	psect	text40
 10177  01B85A                     __ptext40:
 10178                           	opt callstack 0
 10179  01B85A                     _start_lcd:
 10180                           	opt callstack 12
 10181                           
 10182                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
 10183                           
 10184                           ; BSR set to: 0
 10185                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10186                           ;incstack = 0
 10187  01B85A  013B               	movlb	59	; () banked
 10188  01B85C  8DFC               	bsf	252,6,b	;volatile
 10189                           
 10190                           ; BSR set to: 59
 10191                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10192  01B85E  0012               	return		;funcret
 10193  01B860                     __end_of_start_lcd:
 10194                           	opt callstack 0
 10195                           
 10196 ;; *************** function _ringBufS_flush *****************
 10197 ;; Defined at:
 10198 ;;		line 76 in file "ringbufs.c"
 10199 ;; Parameters:    Size  Location     Type
 10200 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10201 ;;		 -> ring_buf1(67), 
 10202 ;;  clearBuffer     1  [STACK] const char 
 10203 ;; Auto vars:     Size  Location     Type
 10204 ;;		None
 10205 ;; Return value:  Size  Location     Type
 10206 ;;                  1  [STACK] void 
 10207 ;; Registers used:
 10208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10209 ;; Tracked objects:
 10210 ;;		On entry : 3F/0
 10211 ;;		On exit  : 0/0
 10212 ;;		Unchanged: 0/0
 10213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10218 ;;Total ram usage:        0 bytes
 10219 ;; Hardware stack levels used:    1
 10220 ;; Hardware stack levels required when called:   16
 10221 ;; This function calls:
 10222 ;;		_memset
 10223 ;; This function is called by:
 10224 ;;		_eaDogM_WriteString
 10225 ;;		_send_lcd_cmd_dma
 10226 ;; This function uses a reentrant model
 10227 ;;
 10228                           
 10229                           	psect	text41
 10230  01A2AE                     __ptext41:
 10231                           	opt callstack 0
 10232  01A2AE                     _ringBufS_flush:
 10233                           	opt callstack 11
 10234                           
 10235                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 10236                           ;stkvar	__this @ sp[(0)+-2]
 10237                           
 10238                           ; BSR set to: 59
 10239                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10240                           ;incstack = 0
 10241  01A2AE  0EFE               	movlw	-2
 10242  01A2B0  006F FF8C  F030    	movff	plusw1,btemp+10
 10243  01A2B6  0EFF               	movlw	-1
 10244  01A2B8  006F FF8C  F031    	movff	plusw1,btemp+11
 10245  01A2BE  0E42               	movlw	66
 10246  01A2C0  2430               	addwf	(btemp+10)^0,w,c
 10247  01A2C2  6ED9               	movwf	fsr2l,c
 10248  01A2C4  0E00               	movlw	0
 10249  01A2C6  2031               	addwfc	(btemp+11)^0,w,c
 10250  01A2C8  6EDA               	movwf	fsr2h,c
 10251  01A2CA  0E00               	movlw	0
 10252  01A2CC  6EDF               	movwf	indf2,c
 10253                           
 10254                           ;ringbufs.c: 79:  _this->head = 0;
 10255                           ;stkvar	__this @ sp[(0)+-2]
 10256  01A2CE  0EFE               	movlw	-2
 10257  01A2D0  006F FF8C  F030    	movff	plusw1,btemp+10
 10258  01A2D6  0EFF               	movlw	-1
 10259  01A2D8  006F FF8C  F031    	movff	plusw1,btemp+11
 10260  01A2DE  0E40               	movlw	64
 10261  01A2E0  2430               	addwf	(btemp+10)^0,w,c
 10262  01A2E2  6ED9               	movwf	fsr2l,c
 10263  01A2E4  0E00               	movlw	0
 10264  01A2E6  2031               	addwfc	(btemp+11)^0,w,c
 10265  01A2E8  6EDA               	movwf	fsr2h,c
 10266  01A2EA  0E00               	movlw	0
 10267  01A2EC  6EDF               	movwf	indf2,c
 10268                           
 10269                           ;ringbufs.c: 80:  _this->tail = 0;
 10270                           ;stkvar	__this @ sp[(0)+-2]
 10271  01A2EE  0EFE               	movlw	-2
 10272  01A2F0  006F FF8C  F030    	movff	plusw1,btemp+10
 10273  01A2F6  0EFF               	movlw	-1
 10274  01A2F8  006F FF8C  F031    	movff	plusw1,btemp+11
 10275  01A2FE  0E41               	movlw	65
 10276  01A300  2430               	addwf	(btemp+10)^0,w,c
 10277  01A302  6ED9               	movwf	fsr2l,c
 10278  01A304  0E00               	movlw	0
 10279  01A306  2031               	addwfc	(btemp+11)^0,w,c
 10280  01A308  6EDA               	movwf	fsr2h,c
 10281  01A30A  0E00               	movlw	0
 10282  01A30C  6EDF               	movwf	indf2,c
 10283                           
 10284                           ;ringbufs.c: 81:  if (clearBuffer) {
 10285                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 10286  01A30E  0EFD               	movlw	-3
 10287  01A310  50E3               	movf	plusw1,w,c
 10288  01A312  B4D8               	btfsc	status,2,c
 10289  01A314  D011               	goto	l1583
 10290                           
 10291                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 10292  01A316  0E40               	movlw	64
 10293  01A318  6EE6               	movwf	postinc1,c
 10294  01A31A  0E00               	movlw	0
 10295  01A31C  6EE6               	movwf	postinc1,c
 10296  01A31E  0E00               	movlw	0
 10297  01A320  6EE6               	movwf	postinc1,c
 10298  01A322  0E00               	movlw	0
 10299  01A324  6EE6               	movwf	postinc1,c
 10300                           
 10301                           ;stkvar	__this @ sp[(-4)+-2]
 10302  01A326  0EFA               	movlw	-6
 10303  01A328  006F FF8F FFE6     	movff	plusw1,postinc1
 10304  01A32E  006F FF8F FFE6     	movff	plusw1,postinc1
 10305  01A334  ECFA  F0B2         	call	_memset	;wreg free
 10306  01A338                     l1583:
 10307                           
 10308                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 10309  01A338  52E5               	movf	postdec1,f,c
 10310  01A33A  52E5               	movf	postdec1,f,c
 10311  01A33C  52E5               	movf	postdec1,f,c
 10312  01A33E  0012               	return		;funcret
 10313  01A340                     __end_of_ringBufS_flush:
 10314                           	opt callstack 0
 10315                           
 10316 ;; *************** function _memset *****************
 10317 ;; Defined at:
 10318 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 10319 ;; Parameters:    Size  Location     Type
 10320 ;;  dest            2  [STACK] PTR void 
 10321 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10322 ;;  c               2  [STACK] int 
 10323 ;;  n               2  [STACK] unsigned int 
 10324 ;; Auto vars:     Size  Location     Type
 10325 ;;  s               2  [STACK] PTR unsigned char 
 10326 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10327 ;;  k               2  [STACK] unsigned int 
 10328 ;; Return value:  Size  Location     Type
 10329 ;;                  2  [STACK] PTR void 
 10330 ;; Registers used:
 10331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10332 ;; Tracked objects:
 10333 ;;		On entry : 0/0
 10334 ;;		On exit  : 0/0
 10335 ;;		Unchanged: 0/0
 10336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10341 ;;Total ram usage:        0 bytes
 10342 ;; Hardware stack levels used:    1
 10343 ;; Hardware stack levels required when called:   15
 10344 ;; This function calls:
 10345 ;;		Nothing
 10346 ;; This function is called by:
 10347 ;;		_ringBufS_init
 10348 ;;		_ringBufS_flush
 10349 ;; This function uses a reentrant model
 10350 ;;
 10351                           
 10352                           	psect	text42
 10353  0165F4                     __ptext42:
 10354                           	opt callstack 0
 10355  0165F4                     _memset:
 10356                           	opt callstack 0
 10357                           
 10358                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10359  0165F4  52E6               	movf	postinc1,f,c
 10360  0165F6  52E6               	movf	postinc1,f,c
 10361  0165F8  52E6               	movf	postinc1,f,c
 10362  0165FA  52E6               	movf	postinc1,f,c
 10363                           
 10364                           ;stkvar	_dest @ sp[(-4)+-2]
 10365                           
 10366                           ;incstack = 0
 10367  0165FC  0EFA               	movlw	-6
 10368  0165FE  006F FF8C  F030    	movff	plusw1,btemp+10
 10369  016604  0EFB               	movlw	-5
 10370  016606  006F FF8C  F031    	movff	plusw1,btemp+11
 10371                           
 10372                           ;stkvar	_s @ sp[(-4)+0]
 10373  01660C  0EFD               	movlw	-3
 10374  01660E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 10375  016614  0EFC               	movlw	-4
 10376  016616  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 10377                           
 10378                           ;stkvar	_n @ sp[(-4)+-6]
 10379  01661C  0EF6               	movlw	-10
 10380  01661E  006F FF8C  F026    	movff	plusw1,btemp
 10381  016624  0EF7               	movlw	-9
 10382  016626  50E3               	movf	plusw1,w,c
 10383  016628  1026               	iorwf	btemp^0,w,c
 10384  01662A  B4D8               	btfsc	status,2,c
 10385  01662C  D154               	goto	u10560
 10386                           
 10387                           ;stkvar	_c @ sp[(-4)+-4]
 10388                           ;stkvar	_s @ sp[(-4)+0]
 10389  01662E  0EFC               	movlw	-4
 10390  016630  006F FF8F FFD9     	movff	plusw1,fsr2l
 10391  016636  0EFD               	movlw	-3
 10392  016638  006F FF8F FFDA     	movff	plusw1,fsr2h
 10393  01663E  0EF8               	movlw	-8
 10394  016640  006F FF8F FFDF     	movff	plusw1,indf2
 10395                           
 10396                           ;stkvar	_c @ sp[(-4)+-4]
 10397                           ;stkvar	_n @ sp[(-4)+-6]
 10398                           ;stkvar	_s @ sp[(-4)+0]
 10399  016646  0EFC               	movlw	-4
 10400  016648  006F FF8C  F030    	movff	plusw1,btemp+10
 10401  01664E  0EFD               	movlw	-3
 10402  016650  006F FF8C  F031    	movff	plusw1,btemp+11
 10403  016656  0EF6               	movlw	-10
 10404  016658  50E3               	movf	plusw1,w,c
 10405  01665A  2630               	addwf	(btemp+10)^0,f,c
 10406  01665C  0EF7               	movlw	-9
 10407  01665E  50E3               	movf	plusw1,w,c
 10408  016660  2231               	addwfc	(btemp+11)^0,f,c
 10409  016662  0EFF               	movlw	255
 10410  016664  2430               	addwf	(btemp+10)^0,w,c
 10411  016666  6ED9               	movwf	fsr2l,c
 10412  016668  0EFF               	movlw	255
 10413  01666A  2031               	addwfc	(btemp+11)^0,w,c
 10414  01666C  6EDA               	movwf	fsr2h,c
 10415  01666E  0EF8               	movlw	-8
 10416  016670  006F FF8F FFDF     	movff	plusw1,indf2
 10417                           
 10418                           ;stkvar	_n @ sp[(-4)+-6]
 10419  016676  0EF7               	movlw	-9
 10420  016678  50E3               	movf	plusw1,w,c
 10421  01667A  E108               	bnz	l11529
 10422  01667C  0EF6               	movlw	-10
 10423  01667E  006F FF8C  F026    	movff	plusw1,btemp
 10424  016684  0E03               	movlw	3
 10425  016686  5E26               	subwf	btemp^0,f,c
 10426  016688  A0D8               	btfss	status,0,c
 10427  01668A  D125               	goto	u10560
 10428  01668C                     l11529:
 10429                           
 10430                           ;stkvar	_c @ sp[(-4)+-4]
 10431                           ;stkvar	_s @ sp[(-4)+0]
 10432  01668C  0EFC               	movlw	-4
 10433  01668E  006F FF8C  F030    	movff	plusw1,btemp+10
 10434  016694  0EFD               	movlw	-3
 10435  016696  006F FF8C  F031    	movff	plusw1,btemp+11
 10436  01669C  0E01               	movlw	1
 10437  01669E  2430               	addwf	(btemp+10)^0,w,c
 10438  0166A0  6ED9               	movwf	fsr2l,c
 10439  0166A2  0E00               	movlw	0
 10440  0166A4  2031               	addwfc	(btemp+11)^0,w,c
 10441  0166A6  6EDA               	movwf	fsr2h,c
 10442  0166A8  0EF8               	movlw	-8
 10443  0166AA  006F FF8F FFDF     	movff	plusw1,indf2
 10444                           
 10445                           ;stkvar	_c @ sp[(-4)+-4]
 10446                           ;stkvar	_s @ sp[(-4)+0]
 10447  0166B0  0EFC               	movlw	-4
 10448  0166B2  006F FF8C  F030    	movff	plusw1,btemp+10
 10449  0166B8  0EFD               	movlw	-3
 10450  0166BA  006F FF8C  F031    	movff	plusw1,btemp+11
 10451  0166C0  0E02               	movlw	2
 10452  0166C2  2430               	addwf	(btemp+10)^0,w,c
 10453  0166C4  6ED9               	movwf	fsr2l,c
 10454  0166C6  0E00               	movlw	0
 10455  0166C8  2031               	addwfc	(btemp+11)^0,w,c
 10456  0166CA  6EDA               	movwf	fsr2h,c
 10457  0166CC  0EF8               	movlw	-8
 10458  0166CE  006F FF8F FFDF     	movff	plusw1,indf2
 10459                           
 10460                           ;stkvar	_c @ sp[(-4)+-4]
 10461                           ;stkvar	_n @ sp[(-4)+-6]
 10462                           ;stkvar	_s @ sp[(-4)+0]
 10463  0166D4  0EFC               	movlw	-4
 10464  0166D6  006F FF8C  F030    	movff	plusw1,btemp+10
 10465  0166DC  0EFD               	movlw	-3
 10466  0166DE  006F FF8C  F031    	movff	plusw1,btemp+11
 10467  0166E4  0EF6               	movlw	-10
 10468  0166E6  50E3               	movf	plusw1,w,c
 10469  0166E8  2630               	addwf	(btemp+10)^0,f,c
 10470  0166EA  0EF7               	movlw	-9
 10471  0166EC  50E3               	movf	plusw1,w,c
 10472  0166EE  2231               	addwfc	(btemp+11)^0,f,c
 10473  0166F0  0EFE               	movlw	254
 10474  0166F2  2430               	addwf	(btemp+10)^0,w,c
 10475  0166F4  6ED9               	movwf	fsr2l,c
 10476  0166F6  0EFF               	movlw	255
 10477  0166F8  2031               	addwfc	(btemp+11)^0,w,c
 10478  0166FA  6EDA               	movwf	fsr2h,c
 10479  0166FC  0EF8               	movlw	-8
 10480  0166FE  006F FF8F FFDF     	movff	plusw1,indf2
 10481                           
 10482                           ;stkvar	_c @ sp[(-4)+-4]
 10483                           ;stkvar	_n @ sp[(-4)+-6]
 10484                           ;stkvar	_s @ sp[(-4)+0]
 10485  016704  0EFC               	movlw	-4
 10486  016706  006F FF8C  F030    	movff	plusw1,btemp+10
 10487  01670C  0EFD               	movlw	-3
 10488  01670E  006F FF8C  F031    	movff	plusw1,btemp+11
 10489  016714  0EF6               	movlw	-10
 10490  016716  50E3               	movf	plusw1,w,c
 10491  016718  2630               	addwf	(btemp+10)^0,f,c
 10492  01671A  0EF7               	movlw	-9
 10493  01671C  50E3               	movf	plusw1,w,c
 10494  01671E  2231               	addwfc	(btemp+11)^0,f,c
 10495  016720  0EFD               	movlw	253
 10496  016722  2430               	addwf	(btemp+10)^0,w,c
 10497  016724  6ED9               	movwf	fsr2l,c
 10498  016726  0EFF               	movlw	255
 10499  016728  2031               	addwfc	(btemp+11)^0,w,c
 10500  01672A  6EDA               	movwf	fsr2h,c
 10501  01672C  0EF8               	movlw	-8
 10502  01672E  006F FF8F FFDF     	movff	plusw1,indf2
 10503                           
 10504                           ;stkvar	_n @ sp[(-4)+-6]
 10505  016734  0EF7               	movlw	-9
 10506  016736  50E3               	movf	plusw1,w,c
 10507  016738  E108               	bnz	l11535
 10508  01673A  0EF6               	movlw	-10
 10509  01673C  006F FF8C  F026    	movff	plusw1,btemp
 10510  016742  0E07               	movlw	7
 10511  016744  5E26               	subwf	btemp^0,f,c
 10512  016746  A0D8               	btfss	status,0,c
 10513  016748  D0C6               	goto	u10560
 10514  01674A                     l11535:
 10515                           
 10516                           ;stkvar	_c @ sp[(-4)+-4]
 10517                           ;stkvar	_s @ sp[(-4)+0]
 10518  01674A  0EFC               	movlw	-4
 10519  01674C  006F FF8C  F030    	movff	plusw1,btemp+10
 10520  016752  0EFD               	movlw	-3
 10521  016754  006F FF8C  F031    	movff	plusw1,btemp+11
 10522  01675A  0E03               	movlw	3
 10523  01675C  2430               	addwf	(btemp+10)^0,w,c
 10524  01675E  6ED9               	movwf	fsr2l,c
 10525  016760  0E00               	movlw	0
 10526  016762  2031               	addwfc	(btemp+11)^0,w,c
 10527  016764  6EDA               	movwf	fsr2h,c
 10528  016766  0EF8               	movlw	-8
 10529  016768  006F FF8F FFDF     	movff	plusw1,indf2
 10530                           
 10531                           ;stkvar	_c @ sp[(-4)+-4]
 10532                           ;stkvar	_n @ sp[(-4)+-6]
 10533                           ;stkvar	_s @ sp[(-4)+0]
 10534  01676E  0EFC               	movlw	-4
 10535  016770  006F FF8C  F030    	movff	plusw1,btemp+10
 10536  016776  0EFD               	movlw	-3
 10537  016778  006F FF8C  F031    	movff	plusw1,btemp+11
 10538  01677E  0EF6               	movlw	-10
 10539  016780  50E3               	movf	plusw1,w,c
 10540  016782  2630               	addwf	(btemp+10)^0,f,c
 10541  016784  0EF7               	movlw	-9
 10542  016786  50E3               	movf	plusw1,w,c
 10543  016788  2231               	addwfc	(btemp+11)^0,f,c
 10544  01678A  0EFC               	movlw	252
 10545  01678C  2430               	addwf	(btemp+10)^0,w,c
 10546  01678E  6ED9               	movwf	fsr2l,c
 10547  016790  0EFF               	movlw	255
 10548  016792  2031               	addwfc	(btemp+11)^0,w,c
 10549  016794  6EDA               	movwf	fsr2h,c
 10550  016796  0EF8               	movlw	-8
 10551  016798  006F FF8F FFDF     	movff	plusw1,indf2
 10552                           
 10553                           ;stkvar	_n @ sp[(-4)+-6]
 10554  01679E  0EF7               	movlw	-9
 10555  0167A0  50E3               	movf	plusw1,w,c
 10556  0167A2  E108               	bnz	l11541
 10557  0167A4  0EF6               	movlw	-10
 10558  0167A6  006F FF8C  F026    	movff	plusw1,btemp
 10559  0167AC  0E09               	movlw	9
 10560  0167AE  5E26               	subwf	btemp^0,f,c
 10561  0167B0  A0D8               	btfss	status,0,c
 10562  0167B2  D091               	goto	u10560
 10563  0167B4                     l11541:
 10564                           
 10565                           ;stkvar	_s @ sp[(-4)+0]
 10566  0167B4  0EFC               	movlw	-4
 10567  0167B6  006F FF8C  F030    	movff	plusw1,btemp+10
 10568  0167BC  1E30               	comf	(btemp+10)^0,f,c
 10569  0167BE  0EFD               	movlw	-3
 10570  0167C0  006F FF8C  F031    	movff	plusw1,btemp+11
 10571  0167C6  1E31               	comf	(btemp+11)^0,f,c
 10572  0167C8  2A30               	incf	(btemp+10)^0,f,c
 10573  0167CA  B4D8               	btfsc	status,2,c
 10574  0167CC  2A31               	incf	(btemp+11)^0,f,c
 10575  0167CE  0E03               	movlw	3
 10576  0167D0  1630               	andwf	(btemp+10)^0,f,c
 10577  0167D2  0E00               	movlw	0
 10578  0167D4  1631               	andwf	(btemp+11)^0,f,c
 10579                           
 10580                           ;stkvar	_k @ sp[(-4)+2]
 10581  0167D6  0EFE               	movlw	-2
 10582  0167D8  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 10583  0167DE  0EFF               	movlw	-1
 10584  0167E0  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 10585                           
 10586                           ;stkvar	_k @ sp[(-4)+2]
 10587                           ;stkvar	_s @ sp[(-4)+0]
 10588  0167E6  0EFC               	movlw	-4
 10589  0167E8  50E3               	movf	plusw1,w,c
 10590  0167EA  6E26               	movwf	btemp^0,c
 10591  0167EC  0EFE               	movlw	-2
 10592  0167EE  50E3               	movf	plusw1,w,c
 10593  0167F0  2626               	addwf	btemp^0,f,c
 10594  0167F2  0EFC               	movlw	-4
 10595  0167F4  0060  F09B  FFE3   	movff	btemp,plusw1
 10596  0167FA  0EFD               	movlw	-3
 10597  0167FC  50E3               	movf	plusw1,w,c
 10598  0167FE  6E26               	movwf	btemp^0,c
 10599  016800  0EFF               	movlw	-1
 10600  016802  50E3               	movf	plusw1,w,c
 10601  016804  2226               	addwfc	btemp^0,f,c
 10602  016806  0EFD               	movlw	-3
 10603  016808  0060  F09B  FFE3   	movff	btemp,plusw1
 10604                           
 10605                           ;stkvar	_k @ sp[(-4)+2]
 10606                           ;stkvar	_n @ sp[(-4)+-6]
 10607  01680E  0EF6               	movlw	-10
 10608  016810  50E3               	movf	plusw1,w,c
 10609  016812  6E26               	movwf	btemp^0,c
 10610  016814  0EFE               	movlw	-2
 10611  016816  50E3               	movf	plusw1,w,c
 10612  016818  5E26               	subwf	btemp^0,f,c
 10613  01681A  0EF6               	movlw	-10
 10614  01681C  0060  F09B  FFE3   	movff	btemp,plusw1
 10615  016822  0EF7               	movlw	-9
 10616  016824  50E3               	movf	plusw1,w,c
 10617  016826  6E26               	movwf	btemp^0,c
 10618  016828  0EFF               	movlw	-1
 10619  01682A  50E3               	movf	plusw1,w,c
 10620  01682C  5A26               	subwfb	btemp^0,f,c
 10621  01682E  0EF7               	movlw	-9
 10622  016830  0060  F09B  FFE3   	movff	btemp,plusw1
 10623  016836  0EFC               	movlw	252
 10624  016838  6E30               	movwf	(btemp+10)^0,c
 10625  01683A  0EFF               	movlw	255
 10626  01683C  6E31               	movwf	(btemp+11)^0,c
 10627                           
 10628                           ;stkvar	_n @ sp[(-4)+-6]
 10629  01683E  0EF6               	movlw	-10
 10630  016840  006F FF8C  F026    	movff	plusw1,btemp
 10631  016846  5030               	movf	(btemp+10)^0,w,c
 10632  016848  1626               	andwf	btemp^0,f,c
 10633  01684A  0EF6               	movlw	-10
 10634  01684C  0060  F09B  FFE3   	movff	btemp,plusw1
 10635  016852  0EF7               	movlw	-9
 10636  016854  006F FF8C  F026    	movff	plusw1,btemp
 10637  01685A  5031               	movf	(btemp+11)^0,w,c
 10638  01685C  1626               	andwf	btemp^0,f,c
 10639  01685E  0EF7               	movlw	-9
 10640  016860  D02E               	goto	L7
 10641  016862                     l11549:
 10642                           
 10643                           ;stkvar	_c @ sp[(-4)+-4]
 10644                           ;stkvar	_s @ sp[(-4)+0]
 10645  016862  0EFC               	movlw	-4
 10646  016864  006F FF8F FFD9     	movff	plusw1,fsr2l
 10647  01686A  0EFD               	movlw	-3
 10648  01686C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10649  016872  0EF8               	movlw	-8
 10650  016874  006F FF8F FFDF     	movff	plusw1,indf2
 10651                           
 10652                           ;stkvar	_n @ sp[(-4)+-6]
 10653  01687A  0EF6               	movlw	-10
 10654  01687C  006F FF8C  F026    	movff	plusw1,btemp
 10655  016882  0E01               	movlw	1
 10656  016884  5E26               	subwf	btemp^0,f,c
 10657  016886  0EF6               	movlw	-10
 10658  016888  0060  F09B  FFE3   	movff	btemp,plusw1
 10659  01688E  0EF7               	movlw	-9
 10660  016890  006F FF8C  F026    	movff	plusw1,btemp
 10661  016896  0E00               	movlw	0
 10662  016898  5A26               	subwfb	btemp^0,f,c
 10663  01689A  0EF7               	movlw	-9
 10664  01689C  0060  F09B  FFE3   	movff	btemp,plusw1
 10665                           
 10666                           ;stkvar	_s @ sp[(-4)+0]
 10667  0168A2  0EFC               	movlw	-4
 10668  0168A4  50E3               	movf	plusw1,w,c
 10669  0168A6  0F01               	addlw	1
 10670  0168A8  6E26               	movwf	btemp^0,c
 10671  0168AA  0EFC               	movlw	-4
 10672  0168AC  0060  F09B  FFE3   	movff	btemp,plusw1
 10673  0168B2  6A26               	clrf	btemp^0,c
 10674  0168B4  0EFD               	movlw	-3
 10675  0168B6  50E3               	movf	plusw1,w,c
 10676  0168B8  2026               	addwfc	btemp^0,w,c
 10677  0168BA  6E26               	movwf	btemp^0,c
 10678  0168BC  0EFD               	movlw	-3
 10679  0168BE                     L7:
 10680  0168BE  0060  F09B  FFE3   	movff	btemp,plusw1
 10681                           
 10682                           ;stkvar	_n @ sp[(-4)+-6]
 10683  0168C4  0EF6               	movlw	-10
 10684  0168C6  006F FF8C  F026    	movff	plusw1,btemp
 10685  0168CC  0EF7               	movlw	-9
 10686  0168CE  50E3               	movf	plusw1,w,c
 10687  0168D0  1026               	iorwf	btemp^0,w,c
 10688  0168D2  A4D8               	btfss	status,2,c
 10689  0168D4  D7C6               	goto	l11549
 10690  0168D6                     u10560:
 10691                           
 10692                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 10693  0168D6  0EF6               	movlw	246
 10694  0168D8  26E1               	addwf	fsr1l,f,c
 10695  0168DA  0EFF               	movlw	255
 10696  0168DC  22E2               	addwfc	fsr1h,f,c
 10697  0168DE  0012               	return		;funcret
 10698  0168E0                     __end_of_memset:
 10699                           	opt callstack 0
 10700                           
 10701 ;; *************** function _printf *****************
 10702 ;; Defined at:
 10703 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 10704 ;; Parameters:    Size  Location     Type
 10705 ;;  fmt             2  [STACK] PTR const unsigned char 
 10706 ;;		 -> STR_45(3), STR_44(3), STR_43(3), 
 10707 ;; Auto vars:     Size  Location     Type
 10708 ;;  ap              2  [STACK] PTR void [1]
 10709 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10710 ;;  ret             2    0        int 
 10711 ;; Return value:  Size  Location     Type
 10712 ;;                  2  [STACK] int 
 10713 ;; Registers used:
 10714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10715 ;; Tracked objects:
 10716 ;;		On entry : 3F/3B
 10717 ;;		On exit  : 3F/0
 10718 ;;		Unchanged: 0/0
 10719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10724 ;;Total ram usage:        0 bytes
 10725 ;; Hardware stack levels used:    1
 10726 ;; Hardware stack levels required when called:   23
 10727 ;; This function calls:
 10728 ;;		_vfprintf
 10729 ;; This function is called by:
 10730 ;;		_eaDogM_WriteString
 10731 ;;		_send_lcd_cmd_dma
 10732 ;; This function uses a reentrant model
 10733 ;;
 10734                           
 10735                           	psect	text43
 10736  01A7E8                     __ptext43:
 10737                           	opt callstack 0
 10738  01A7E8                     _printf:
 10739                           	opt callstack 0
 10740                           
 10741                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10742  01A7E8  52E6               	movf	postinc1,f,c
 10743  01A7EA  52E6               	movf	postinc1,f,c
 10744                           
 10745                           ;stkvar	?_printf @ sp[(-2)+-3]
 10746                           
 10747                           ;incstack = 0
 10748  01A7EC  0EFB               	movlw	251
 10749  01A7EE  24E1               	addwf	fsr1l,w,c
 10750  01A7F0  6E30               	movwf	(btemp+10)^0,c
 10751  01A7F2  0EFF               	movlw	255
 10752  01A7F4  20E2               	addwfc	fsr1h,w,c
 10753  01A7F6  6E31               	movwf	(btemp+11)^0,c
 10754                           
 10755                           ;stkvar	_ap @ sp[(-2)+0]
 10756  01A7F8  0EFF               	movlw	-1
 10757  01A7FA  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 10758  01A800  0EFE               	movlw	-2
 10759  01A802  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 10760                           
 10761                           ;stkvar	_ap @ sp[(-2)+0]
 10762  01A808  0EFE               	movlw	254
 10763  01A80A  24E1               	addwf	fsr1l,w,c
 10764  01A80C  6E26               	movwf	btemp^0,c
 10765  01A80E  0EFF               	movlw	255
 10766  01A810  20E2               	addwfc	fsr1h,w,c
 10767  01A812  6E27               	movwf	(btemp+1)^0,c
 10768  01A814  0060  F09B  FFE6   	movff	btemp,postinc1
 10769  01A81A  0060  F09F  FFE6   	movff	btemp+1,postinc1
 10770                           
 10771                           ;stkvar	_fmt @ sp[(-4)+-3]
 10772  01A820  0EF9               	movlw	-7
 10773  01A822  006F FF8F FFE6     	movff	plusw1,postinc1
 10774  01A828  006F FF8F FFE6     	movff	plusw1,postinc1
 10775  01A82E  0E00               	movlw	0
 10776  01A830  6EE6               	movwf	postinc1,c
 10777  01A832  0E00               	movlw	0
 10778  01A834  6EE6               	movwf	postinc1,c
 10779  01A836  EC29  F0CF         	call	_vfprintf	;wreg free
 10780                           
 10781                           ; BSR set to: 0
 10782                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 10783  01A83A  52E5               	movf	postdec1,f,c
 10784  01A83C  52E5               	movf	postdec1,f,c
 10785  01A83E  52E5               	movf	postdec1,f,c
 10786  01A840  50E7               	movf	indf1,w,c
 10787  01A842  5EE1               	subwf	fsr1l,f,c
 10788  01A844  0E00               	movlw	0
 10789  01A846  5AE2               	subwfb	fsr1h,f,c
 10790  01A848  0012               	return		;funcret
 10791  01A84A                     __end_of_printf:
 10792                           	opt callstack 0
 10793                           
 10794 ;; *************** function _vfprintf *****************
 10795 ;; Defined at:
 10796 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10797 ;; Parameters:    Size  Location     Type
 10798 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10799 ;;		 -> f(6), NULL(0), 
 10800 ;;  fmt             2  [STACK] PTR const unsigned char 
 10801 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
 10802 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 10803 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 10804 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 10805 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 10806 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 10807 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 10808 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 10809 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 10810 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
 10811 ;;		 -> STR_22(19), STR_21(17), STR_20(16), STR_19(16), 
 10812 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 10813 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 10814 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 10815 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 10816 ;;		 -> STR_1(17), 
 10817 ;;  ap              2  [STACK] PTR PTR void 
 10818 ;;		 -> ap(2), ap(2), 
 10819 ;; Auto vars:     Size  Location     Type
 10820 ;;  cfmt            2  [STACK] PTR unsigned char 
 10821 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
 10822 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 10823 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 10824 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 10825 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 10826 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 10827 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 10828 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 10829 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 10830 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
 10831 ;;		 -> STR_22(19), STR_21(17), STR_20(16), STR_19(16), 
 10832 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 10833 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 10834 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 10835 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 10836 ;;		 -> STR_1(17), 
 10837 ;; Return value:  Size  Location     Type
 10838 ;;                  2  [STACK] int 
 10839 ;; Registers used:
 10840 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10841 ;; Tracked objects:
 10842 ;;		On entry : 0/2
 10843 ;;		On exit  : 3F/0
 10844 ;;		Unchanged: 0/0
 10845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10850 ;;Total ram usage:        0 bytes
 10851 ;; Hardware stack levels used:    1
 10852 ;; Hardware stack levels required when called:   22
 10853 ;; This function calls:
 10854 ;;		_vfpfcnvrt
 10855 ;; This function is called by:
 10856 ;;		_sprintf
 10857 ;;		_printf
 10858 ;; This function uses a reentrant model
 10859 ;;
 10860                           
 10861                           	psect	text44
 10862  019E52                     __ptext44:
 10863                           	opt callstack 0
 10864  019E52                     _vfprintf:
 10865                           	opt callstack 0
 10866                           
 10867                           ; BSR set to: 0
 10868                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10869  019E52  52E6               	movf	postinc1,f,c
 10870  019E54  52E6               	movf	postinc1,f,c
 10871                           
 10872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 10873                           ;stkvar	_fmt @ sp[(-2)+-4]
 10874                           
 10875                           ;incstack = 0
 10876 ;; hardware stack exceeded
 10877  019E56  0EFA               	movlw	-6
 10878  019E58  006F FF8C  F030    	movff	plusw1,btemp+10
 10879  019E5E  0EFB               	movlw	-5
 10880  019E60  006F FF8C  F031    	movff	plusw1,btemp+11
 10881                           
 10882                           ;stkvar	_cfmt @ sp[(-2)+0]
 10883  019E66  0EFF               	movlw	-1
 10884  019E68  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 10885  019E6E  0EFE               	movlw	-2
 10886  019E70  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 10887                           
 10888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 10889  019E76  0100               	movlb	0	; () banked
 10890  019E78  6BAF               	clrf	_nout& (0+255),b
 10891  019E7A  6BB0               	clrf	(_nout+1)& (0+255),b
 10892                           
 10893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10894  019E7C  D021               	goto	l12373
 10895  019E7E                     l12371:
 10896                           
 10897                           ; BSR set to: 0
 10898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 10899                           ;stkvar	_ap @ sp[(-2)+-6]
 10900  019E7E  0EF8               	movlw	-8
 10901  019E80  006F FF8F FFE6     	movff	plusw1,postinc1
 10902  019E86  006F FF8F FFE6     	movff	plusw1,postinc1
 10903                           
 10904                           ;stkvar	_cfmt @ sp[(-4)+0]
 10905  019E8C  0EFC               	movlw	252
 10906  019E8E  24E1               	addwf	fsr1l,w,c
 10907  019E90  6E26               	movwf	btemp^0,c
 10908  019E92  0EFF               	movlw	255
 10909  019E94  20E2               	addwfc	fsr1h,w,c
 10910  019E96  6E27               	movwf	(btemp+1)^0,c
 10911  019E98  0060  F09B  FFE6   	movff	btemp,postinc1
 10912  019E9E  0060  F09F  FFE6   	movff	btemp+1,postinc1
 10913                           
 10914                           ;stkvar	_fp @ sp[(-6)+-2]
 10915  019EA4  0EF8               	movlw	-8
 10916  019EA6  006F FF8F FFE6     	movff	plusw1,postinc1
 10917  019EAC  006F FF8F FFE6     	movff	plusw1,postinc1
 10918  019EB2  EC39  F091         	call	_vfpfcnvrt	;wreg free
 10919  019EB6  5026               	movf	btemp^0,w,c
 10920  019EB8  0100               	movlb	0	; () banked
 10921  019EBA  27AF               	addwf	_nout& (0+255),f,b
 10922  019EBC  5027               	movf	(btemp+1)^0,w,c
 10923  019EBE  23B0               	addwfc	(_nout+1)& (0+255),f,b
 10924  019EC0                     l12373:
 10925                           
 10926                           ; BSR set to: 0
 10927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10928                           ;stkvar	_cfmt @ sp[(-2)+0]
 10929  019EC0  50E1               	movf	fsr1l,w,c
 10930  019EC2  0FFE               	addlw	-2
 10931  019EC4  6ED9               	movwf	fsr2l,c
 10932  019EC6  50E2               	movf	fsr1h,w,c
 10933  019EC8  6EDA               	movwf	fsr2h,c
 10934  019ECA  0EFF               	movlw	255
 10935  019ECC  22DA               	addwfc	fsr2h,f,c
 10936  019ECE  006F FF7B FFF6     	movff	postinc2,tblptrl
 10937  019ED4  006F FF77 FFF7     	movff	postdec2,tblptrh
 10938  019EDA                     	if	0	;tblptru may be non-zero
 10939  019EDA                     	endif
 10940  019EDA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10941  019EDA  0E00               	movlw	low (__mediumconst shr (0+16))
 10942  019EDC  6EF8               	movwf	tblptru,c
 10943  019EDE                     	endif
 10944  019EDE  0008               	tblrd		*
 10945  019EE0  50F5               	movf	tablat,w,c
 10946  019EE2  0900               	iorlw	0
 10947  019EE4  A4D8               	btfss	status,2,c
 10948  019EE6  D7CB               	goto	l12371
 10949                           
 10950                           ; BSR set to: 0
 10951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 10952  019EE8  0060  F2BC  F026   	movff	_nout,btemp
 10953  019EEE  0060  F2C0  F027   	movff	_nout+1,btemp+1
 10954                           
 10955                           ; BSR set to: 0
 10956                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 10957  019EF4  0EF8               	movlw	248
 10958  019EF6  26E1               	addwf	fsr1l,f,c
 10959  019EF8  0EFF               	movlw	255
 10960  019EFA  22E2               	addwfc	fsr1h,f,c
 10961  019EFC  0012               	return		;funcret
 10962  019EFE                     __end_of_vfprintf:
 10963                           	opt callstack 0
 10964                           
 10965 ;; *************** function _vfpfcnvrt *****************
 10966 ;; Defined at:
 10967 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10968 ;; Parameters:    Size  Location     Type
 10969 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10970 ;;		 -> f(6), NULL(0), 
 10971 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 10972 ;;		 -> cfmt(2), 
 10973 ;;  ap              2  [STACK] PTR PTR void 
 10974 ;;		 -> ap(2), ap(2), 
 10975 ;; Auto vars:     Size  Location     Type
 10976 ;;  llu             8  [STACK] unsigned long long 
 10977 ;;  ll              8  [STACK] long long 
 10978 ;;  f               4  [STACK] long long 
 10979 ;;  ct              3  [STACK] unsigned char [3]
 10980 ;;  vp              3    0        PTR void 
 10981 ;;  cp              2  [STACK] PTR unsigned char 
 10982 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 10983 ;;		 -> D.lcd(480), D(482), T(144), STR_3(6), 
 10984 ;;		 -> V(190), 
 10985 ;;  i               2    0        int 
 10986 ;;  done            2    0        int 
 10987 ;;  c               1  [STACK] unsigned char 
 10988 ;; Return value:  Size  Location     Type
 10989 ;;                  2  [STACK] int 
 10990 ;; Registers used:
 10991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10992 ;; Tracked objects:
 10993 ;;		On entry : 0/0
 10994 ;;		On exit  : 0/0
 10995 ;;		Unchanged: 0/0
 10996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11001 ;;Total ram usage:        0 bytes
 11002 ;; Hardware stack levels used:    1
 11003 ;; Hardware stack levels required when called:   21
 11004 ;; This function calls:
 11005 ;;		_atoi
 11006 ;;		_ctoa
 11007 ;;		_dtoa
 11008 ;;		_efgtoa
 11009 ;;		_fputc
 11010 ;;		_isdigit
 11011 ;;		_isupper
 11012 ;;		_stoa
 11013 ;;		_strncmp
 11014 ;;		_tolower
 11015 ;;		_utoa
 11016 ;;		_xtoa
 11017 ;; This function is called by:
 11018 ;;		_vfprintf
 11019 ;; This function uses a reentrant model
 11020 ;;
 11021                           
 11022                           	psect	text45
 11023  012272                     __ptext45:
 11024                           	opt callstack 0
 11025  012272                     _vfpfcnvrt:
 11026                           	opt callstack 0
 11027                           
 11028                           ; BSR set to: 0
 11029                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11030  012272  0E20               	movlw	32
 11031  012274  26E1               	addwf	fsr1l,f,c
 11032  012276  0E00               	movlw	0
 11033  012278  22E2               	addwfc	fsr1h,f,c
 11034                           
 11035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 11036                           ;stkvar	_fmt @ sp[(-32)+-4]
 11037                           
 11038                           ;incstack = 0
 11039 ;; hardware stack exceeded
 11040  01227A  0EDC               	movlw	-36
 11041  01227C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11042  012282  0EDD               	movlw	-35
 11043  012284  006F FF8F FFDA     	movff	plusw1,fsr2h
 11044  01228A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11045  012290  006F FF77 FFF7     	movff	postdec2,tblptrh
 11046  012296                     	if	0	;tblptru may be non-zero
 11047  012296                     	endif
 11048  012296                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11049  012296  0E00               	movlw	low (__mediumconst shr (0+16))
 11050  012298  6EF8               	movwf	tblptru,c
 11051  01229A                     	endif
 11052  01229A  0008               	tblrd		*
 11053  01229C  50F5               	movf	tablat,w,c
 11054  01229E  0A25               	xorlw	37
 11055  0122A0  A4D8               	btfss	status,2,c
 11056  0122A2  EFE0  F098         	goto	l12317
 11057                           
 11058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 11059                           ;stkvar	_fmt @ sp[(-32)+-4]
 11060  0122A6  0EDC               	movlw	-36
 11061  0122A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11062  0122AE  0EDD               	movlw	-35
 11063  0122B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11064  0122B6  2ADE               	incf	postinc2,f,c
 11065  0122B8  0E00               	movlw	0
 11066  0122BA  22DD               	addwfc	postdec2,f,c
 11067                           
 11068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 11069  0122BC  6A0A               	clrf	_width^0,c
 11070  0122BE  6A0B               	clrf	(_width+1)^0,c
 11071  0122C0  6A0E               	clrf	_flags^0,c
 11072  0122C2  6A0F               	clrf	(_flags+1)^0,c
 11073                           
 11074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 11075  0122C4  680C               	setf	_prec^0,c
 11076  0122C6  680D               	setf	(_prec+1)^0,c
 11077                           
 11078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 11079                           ;stkvar	_fmt @ sp[(-32)+-4]
 11080  0122C8  0EDC               	movlw	-36
 11081  0122CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11082  0122D0  0EDD               	movlw	-35
 11083  0122D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11084  0122D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 11085  0122DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 11086  0122E4                     	if	0	;tblptru may be non-zero
 11087  0122E4                     	endif
 11088  0122E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11089  0122E4  0E00               	movlw	low (__mediumconst shr (0+16))
 11090  0122E6  6EF8               	movwf	tblptru,c
 11091  0122E8                     	endif
 11092  0122E8  0008               	tblrd		*
 11093  0122EA  50F5               	movf	tablat,w,c
 11094  0122EC  0A2A               	xorlw	42
 11095  0122EE  A4D8               	btfss	status,2,c
 11096  0122F0  D031               	goto	l12135
 11097                           
 11098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 11099                           ;stkvar	_fmt @ sp[(-32)+-4]
 11100  0122F2  0EDC               	movlw	-36
 11101  0122F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11102  0122FA  0EDD               	movlw	-35
 11103  0122FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11104  012302  2ADE               	incf	postinc2,f,c
 11105  012304  0E00               	movlw	0
 11106  012306  22DD               	addwfc	postdec2,f,c
 11107                           
 11108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 11109                           ;stkvar	_ap @ sp[(-32)+-6]
 11110  012308  0EDA               	movlw	-38
 11111  01230A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11112  012310  0EDB               	movlw	-37
 11113  012312  006F FF8F FFDA     	movff	plusw1,fsr2h
 11114  012318  0E02               	movlw	2
 11115  01231A  5EDE               	subwf	postinc2,f,c
 11116  01231C  0E00               	movlw	0
 11117  01231E  5ADD               	subwfb	postdec2,f,c
 11118  012320  006F FF78  F030    	movff	postinc2,btemp+10
 11119  012326  006F FF74  F031    	movff	postdec2,btemp+11
 11120  01232C  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 11121  012332  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 11122  012338  006F FF78  F00A    	movff	postinc2,_width
 11123  01233E  006F FF74  F00B    	movff	postdec2,_width+1
 11124                           
 11125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 11126  012344  AE0B               	btfss	(_width+1)^0,7,c
 11127  012346  D066               	goto	u11690
 11128                           
 11129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 11130  012348  800E               	bsf	_flags^0,0,c
 11131                           
 11132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 11133  01234A  6C0A               	negf	_width^0,c
 11134  01234C  1E0B               	comf	(_width+1)^0,f,c
 11135  01234E  B0D8               	btfsc	status,0,c
 11136  012350  2A0B               	incf	(_width+1)^0,f,c
 11137  012352  D060               	goto	u11690
 11138  012354                     l12135:
 11139                           
 11140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 11141                           ;stkvar	_fmt @ sp[(-32)+-4]
 11142  012354  0EDC               	movlw	-36
 11143  012356  006F FF8F FFD9     	movff	plusw1,fsr2l
 11144  01235C  0EDD               	movlw	-35
 11145  01235E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11146  012364  006F FF78  F030    	movff	postinc2,btemp+10
 11147  01236A  006F FF74  F031    	movff	postdec2,btemp+11
 11148  012370  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 11149  012376  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 11150  01237C  EC6F  F0B8         	call	_atoi	;wreg free
 11151  012380  0060  F098  F00A   	movff	btemp,_width
 11152  012386  0060  F09C  F00B   	movff	btemp+1,_width+1
 11153                           
 11154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11155  01238C  D00B               	goto	l12139
 11156  01238E                     l12137:
 11157                           
 11158                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 11159                           ;stkvar	_fmt @ sp[(-32)+-4]
 11160  01238E  0EDC               	movlw	-36
 11161  012390  006F FF8F FFD9     	movff	plusw1,fsr2l
 11162  012396  0EDD               	movlw	-35
 11163  012398  006F FF8F FFDA     	movff	plusw1,fsr2h
 11164  01239E  2ADE               	incf	postinc2,f,c
 11165  0123A0  0E00               	movlw	0
 11166  0123A2  22DD               	addwfc	postdec2,f,c
 11167  0123A4                     l12139:
 11168  0123A4  0ED0               	movlw	208
 11169  0123A6  6E30               	movwf	(btemp+10)^0,c
 11170  0123A8  0EFF               	movlw	255
 11171  0123AA  6E31               	movwf	(btemp+11)^0,c
 11172                           
 11173                           ;stkvar	_fmt @ sp[(-32)+-4]
 11174  0123AC  0EDC               	movlw	-36
 11175  0123AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11176  0123B4  0EDD               	movlw	-35
 11177  0123B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11178  0123BC  006F FF7B FFF6     	movff	postinc2,tblptrl
 11179  0123C2  006F FF77 FFF7     	movff	postdec2,tblptrh
 11180  0123C8                     	if	0	;tblptru may be non-zero
 11181  0123C8                     	endif
 11182  0123C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11183  0123C8  0E00               	movlw	low (__mediumconst shr (0+16))
 11184  0123CA  6EF8               	movwf	tblptru,c
 11185  0123CC                     	endif
 11186  0123CC  0008               	tblrd		*
 11187  0123CE  50F5               	movf	tablat,w,c
 11188  0123D0  6E2E               	movwf	(btemp+8)^0,c
 11189  0123D2  6A2F               	clrf	(btemp+9)^0,c
 11190  0123D4  5030               	movf	(btemp+10)^0,w,c
 11191  0123D6  262E               	addwf	(btemp+8)^0,f,c
 11192  0123D8  5031               	movf	(btemp+11)^0,w,c
 11193  0123DA  222F               	addwfc	(btemp+9)^0,f,c
 11194  0123DC  502F               	movf	(btemp+9)^0,w,c
 11195  0123DE  E106               	bnz	u11670
 11196  0123E0  0E0A               	movlw	10
 11197  0123E2  5C2E               	subwf	(btemp+8)^0,w,c
 11198  0123E4  B0D8               	btfsc	status,0,c
 11199  0123E6  D002               	goto	u11670
 11200  0123E8  0E01               	movlw	1
 11201  0123EA  D001               	goto	u11680
 11202  0123EC                     u11670:
 11203  0123EC  0E00               	movlw	0
 11204  0123EE                     u11680:
 11205  0123EE  6E30               	movwf	(btemp+10)^0,c
 11206  0123F0  6A31               	clrf	(btemp+11)^0,c
 11207                           
 11208                           ;stkvar	_vfpfcnvrt$5460 @ sp[(-32)+4]
 11209  0123F2  0EE4               	movlw	-28
 11210  0123F4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 11211  0123FA  0EE5               	movlw	-27
 11212  0123FC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 11213                           
 11214                           ;stkvar	_vfpfcnvrt$5460 @ sp[(-32)+4]
 11215  012402  0EE4               	movlw	-28
 11216  012404  006F FF8C  F026    	movff	plusw1,btemp
 11217  01240A  0EE5               	movlw	-27
 11218  01240C  50E3               	movf	plusw1,w,c
 11219  01240E  1026               	iorwf	btemp^0,w,c
 11220  012410  A4D8               	btfss	status,2,c
 11221  012412  D7BD               	goto	l12137
 11222  012414                     u11690:
 11223                           
 11224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 11225                           ;stkvar	_fmt @ sp[(-32)+-4]
 11226  012414  0EDC               	movlw	-36
 11227  012416  006F FF8F FFD9     	movff	plusw1,fsr2l
 11228  01241C  0EDD               	movlw	-35
 11229  01241E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11230  012424  006F FF7B FFF6     	movff	postinc2,tblptrl
 11231  01242A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11232  012430                     	if	0	;tblptru may be non-zero
 11233  012430                     	endif
 11234  012430                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11235  012430  0E00               	movlw	low (__mediumconst shr (0+16))
 11236  012432  6EF8               	movwf	tblptru,c
 11237  012434                     	endif
 11238  012434  0008               	tblrd		*
 11239  012436  50F5               	movf	tablat,w,c
 11240  012438  0A2E               	xorlw	46
 11241  01243A  A4D8               	btfss	status,2,c
 11242  01243C  D0AC               	goto	u11740
 11243                           
 11244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 11245  01243E  6A0C               	clrf	_prec^0,c
 11246  012440  6A0D               	clrf	(_prec+1)^0,c
 11247                           
 11248                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 11249                           ;stkvar	_fmt @ sp[(-32)+-4]
 11250  012442  0EDC               	movlw	-36
 11251  012444  006F FF8F FFD9     	movff	plusw1,fsr2l
 11252  01244A  0EDD               	movlw	-35
 11253  01244C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11254  012452  2ADE               	incf	postinc2,f,c
 11255  012454  0E00               	movlw	0
 11256  012456  22DD               	addwfc	postdec2,f,c
 11257                           
 11258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 11259                           ;stkvar	_fmt @ sp[(-32)+-4]
 11260  012458  0EDC               	movlw	-36
 11261  01245A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11262  012460  0EDD               	movlw	-35
 11263  012462  006F FF8F FFDA     	movff	plusw1,fsr2h
 11264  012468  006F FF7B FFF6     	movff	postinc2,tblptrl
 11265  01246E  006F FF77 FFF7     	movff	postdec2,tblptrh
 11266  012474                     	if	0	;tblptru may be non-zero
 11267  012474                     	endif
 11268  012474                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11269  012474  0E00               	movlw	low (__mediumconst shr (0+16))
 11270  012476  6EF8               	movwf	tblptru,c
 11271  012478                     	endif
 11272  012478  0008               	tblrd		*
 11273  01247A  50F5               	movf	tablat,w,c
 11274  01247C  0A2A               	xorlw	42
 11275  01247E  A4D8               	btfss	status,2,c
 11276  012480  D02A               	goto	l12157
 11277                           
 11278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 11279                           ;stkvar	_fmt @ sp[(-32)+-4]
 11280  012482  0EDC               	movlw	-36
 11281  012484  006F FF8F FFD9     	movff	plusw1,fsr2l
 11282  01248A  0EDD               	movlw	-35
 11283  01248C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11284  012492  2ADE               	incf	postinc2,f,c
 11285  012494  0E00               	movlw	0
 11286  012496  22DD               	addwfc	postdec2,f,c
 11287                           
 11288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 11289                           ;stkvar	_ap @ sp[(-32)+-6]
 11290  012498  0EDA               	movlw	-38
 11291  01249A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11292  0124A0  0EDB               	movlw	-37
 11293  0124A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11294  0124A8  0E02               	movlw	2
 11295  0124AA  5EDE               	subwf	postinc2,f,c
 11296  0124AC  0E00               	movlw	0
 11297  0124AE  5ADD               	subwfb	postdec2,f,c
 11298  0124B0  006F FF78  F030    	movff	postinc2,btemp+10
 11299  0124B6  006F FF74  F031    	movff	postdec2,btemp+11
 11300  0124BC  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 11301  0124C2  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 11302  0124C8  006F FF78  F00C    	movff	postinc2,_prec
 11303  0124CE  006F FF74  F00D    	movff	postdec2,_prec+1
 11304                           
 11305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 11306  0124D4  D060               	goto	u11740
 11307  0124D6                     l12157:
 11308                           
 11309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 11310                           ;stkvar	_fmt @ sp[(-32)+-4]
 11311  0124D6  0EDC               	movlw	-36
 11312  0124D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11313  0124DE  0EDD               	movlw	-35
 11314  0124E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11315  0124E6  006F FF78  F030    	movff	postinc2,btemp+10
 11316  0124EC  006F FF74  F031    	movff	postdec2,btemp+11
 11317  0124F2  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 11318  0124F8  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 11319  0124FE  EC6F  F0B8         	call	_atoi	;wreg free
 11320  012502  0060  F098  F00C   	movff	btemp,_prec
 11321  012508  0060  F09C  F00D   	movff	btemp+1,_prec+1
 11322                           
 11323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11324  01250E  D00B               	goto	l12161
 11325  012510                     l12159:
 11326                           
 11327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 11328                           ;stkvar	_fmt @ sp[(-32)+-4]
 11329  012510  0EDC               	movlw	-36
 11330  012512  006F FF8F FFD9     	movff	plusw1,fsr2l
 11331  012518  0EDD               	movlw	-35
 11332  01251A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11333  012520  2ADE               	incf	postinc2,f,c
 11334  012522  0E00               	movlw	0
 11335  012524  22DD               	addwfc	postdec2,f,c
 11336  012526                     l12161:
 11337  012526  0ED0               	movlw	208
 11338  012528  6E30               	movwf	(btemp+10)^0,c
 11339  01252A  0EFF               	movlw	255
 11340  01252C  6E31               	movwf	(btemp+11)^0,c
 11341                           
 11342                           ;stkvar	_fmt @ sp[(-32)+-4]
 11343  01252E  0EDC               	movlw	-36
 11344  012530  006F FF8F FFD9     	movff	plusw1,fsr2l
 11345  012536  0EDD               	movlw	-35
 11346  012538  006F FF8F FFDA     	movff	plusw1,fsr2h
 11347  01253E  006F FF7B FFF6     	movff	postinc2,tblptrl
 11348  012544  006F FF77 FFF7     	movff	postdec2,tblptrh
 11349  01254A                     	if	0	;tblptru may be non-zero
 11350  01254A                     	endif
 11351  01254A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11352  01254A  0E00               	movlw	low (__mediumconst shr (0+16))
 11353  01254C  6EF8               	movwf	tblptru,c
 11354  01254E                     	endif
 11355  01254E  0008               	tblrd		*
 11356  012550  50F5               	movf	tablat,w,c
 11357  012552  6E2E               	movwf	(btemp+8)^0,c
 11358  012554  6A2F               	clrf	(btemp+9)^0,c
 11359  012556  5030               	movf	(btemp+10)^0,w,c
 11360  012558  262E               	addwf	(btemp+8)^0,f,c
 11361  01255A  5031               	movf	(btemp+11)^0,w,c
 11362  01255C  222F               	addwfc	(btemp+9)^0,f,c
 11363  01255E  502F               	movf	(btemp+9)^0,w,c
 11364  012560  E106               	bnz	u11720
 11365  012562  0E0A               	movlw	10
 11366  012564  5C2E               	subwf	(btemp+8)^0,w,c
 11367  012566  B0D8               	btfsc	status,0,c
 11368  012568  D002               	goto	u11720
 11369  01256A  0E01               	movlw	1
 11370  01256C  D001               	goto	u11730
 11371  01256E                     u11720:
 11372  01256E  0E00               	movlw	0
 11373  012570                     u11730:
 11374  012570  6E30               	movwf	(btemp+10)^0,c
 11375  012572  6A31               	clrf	(btemp+11)^0,c
 11376                           
 11377                           ;stkvar	_vfpfcnvrt$5461 @ sp[(-32)+0]
 11378  012574  0EE0               	movlw	-32
 11379  012576  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 11380  01257C  0EE1               	movlw	-31
 11381  01257E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 11382                           
 11383                           ;stkvar	_vfpfcnvrt$5461 @ sp[(-32)+0]
 11384  012584  0EE0               	movlw	-32
 11385  012586  006F FF8C  F026    	movff	plusw1,btemp
 11386  01258C  0EE1               	movlw	-31
 11387  01258E  50E3               	movf	plusw1,w,c
 11388  012590  1026               	iorwf	btemp^0,w,c
 11389  012592  A4D8               	btfss	status,2,c
 11390  012594  D7BD               	goto	l12159
 11391  012596                     u11740:
 11392                           
 11393                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 11394                           ;stkvar	_fmt @ sp[(-32)+-4]
 11395  012596  0EDC               	movlw	-36
 11396  012598  006F FF8F FFD9     	movff	plusw1,fsr2l
 11397  01259E  0EDD               	movlw	-35
 11398  0125A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11399  0125A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 11400  0125AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 11401  0125B2                     	if	0	;tblptru may be non-zero
 11402  0125B2                     	endif
 11403  0125B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11404  0125B2  0E00               	movlw	low (__mediumconst shr (0+16))
 11405  0125B4  6EF8               	movwf	tblptru,c
 11406  0125B6                     	endif
 11407  0125B6  0008               	tblrd		*
 11408  0125B8  50F5               	movf	tablat,w,c
 11409  0125BA  6EE6               	movwf	postinc1,c
 11410  0125BC  0E00               	movlw	0
 11411  0125BE  6EE6               	movwf	postinc1,c
 11412  0125C0  EC6E  F0D2         	call	_tolower	;wreg free
 11413                           
 11414                           ;stkvar	_ct @ sp[(-32)+26]
 11415  0125C4  0EFA               	movlw	-6
 11416  0125C6  0060  F09B  FFE3   	movff	btemp,plusw1
 11417                           
 11418                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 11419                           ;stkvar	_ct @ sp[(-32)+26]
 11420  0125CC  0EFA               	movlw	-6
 11421  0125CE  50E3               	movf	plusw1,w,c
 11422  0125D0  B4D8               	btfsc	status,2,c
 11423  0125D2  D05B               	goto	l12177
 11424                           
 11425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 11426                           ;stkvar	_ct @ sp[(-32)+26]
 11427  0125D4  0EFB               	movlw	251
 11428  0125D6  24E1               	addwf	fsr1l,w,c
 11429  0125D8  6ED9               	movwf	fsr2l,c
 11430  0125DA  0EFF               	movlw	255
 11431  0125DC  20E2               	addwfc	fsr1h,w,c
 11432  0125DE  6EDA               	movwf	fsr2h,c
 11433                           
 11434                           ;stkvar	_fmt @ sp[(-32)+-4]
 11435  0125E0  0EDC               	movlw	-36
 11436  0125E2  006F FF8F FFE9     	movff	plusw1,fsr0l
 11437  0125E8  0EDD               	movlw	-35
 11438  0125EA  006F FF8F FFEA     	movff	plusw1,fsr0h
 11439  0125F0  006F FFB8  F030    	movff	postinc0,btemp+10
 11440  0125F6  006F FFB4  F031    	movff	postdec0,btemp+11
 11441  0125FC  0E01               	movlw	1
 11442  0125FE  2630               	addwf	(btemp+10)^0,f,c
 11443  012600  0E00               	movlw	0
 11444  012602  2231               	addwfc	(btemp+11)^0,f,c
 11445  012604  0060  F0C3  FFF6   	movff	btemp+10,tblptrl
 11446  01260A  0060  F0C7  FFF7   	movff	btemp+11,tblptrh
 11447  012610                     	if	0	;tblptru may be non-zero
 11448  012610                     	endif
 11449  012610                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11450  012610  0E00               	movlw	low (__mediumconst shr (0+16))
 11451  012612  6EF8               	movwf	tblptru,c
 11452  012614                     	endif
 11453  012614  0008               	tblrd		*
 11454  012616  50F5               	movf	tablat,w,c
 11455  012618  6EE6               	movwf	postinc1,c
 11456  01261A  0E00               	movlw	0
 11457  01261C  6EE6               	movwf	postinc1,c
 11458  01261E  EC6E  F0D2         	call	_tolower	;wreg free
 11459  012622  5026               	movf	btemp^0,w,c
 11460  012624  6EDF               	movwf	indf2,c
 11461                           
 11462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 11463                           ;stkvar	_ct @ sp[(-32)+26]
 11464  012626  0EFB               	movlw	251
 11465  012628  24E1               	addwf	fsr1l,w,c
 11466  01262A  6ED9               	movwf	fsr2l,c
 11467  01262C  0EFF               	movlw	255
 11468  01262E  20E2               	addwfc	fsr1h,w,c
 11469  012630  6EDA               	movwf	fsr2h,c
 11470  012632  50DF               	movf	indf2,w,c
 11471  012634  B4D8               	btfsc	status,2,c
 11472  012636  D029               	goto	l12177
 11473                           
 11474                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 11475                           ;stkvar	_ct @ sp[(-32)+26]
 11476  012638  0EFC               	movlw	252
 11477  01263A  24E1               	addwf	fsr1l,w,c
 11478  01263C  6ED9               	movwf	fsr2l,c
 11479  01263E  0EFF               	movlw	255
 11480  012640  20E2               	addwfc	fsr1h,w,c
 11481  012642  6EDA               	movwf	fsr2h,c
 11482                           
 11483                           ;stkvar	_fmt @ sp[(-32)+-4]
 11484  012644  0EDC               	movlw	-36
 11485  012646  006F FF8F FFE9     	movff	plusw1,fsr0l
 11486  01264C  0EDD               	movlw	-35
 11487  01264E  006F FF8F FFEA     	movff	plusw1,fsr0h
 11488  012654  006F FFB8  F030    	movff	postinc0,btemp+10
 11489  01265A  006F FFB4  F031    	movff	postdec0,btemp+11
 11490  012660  0E02               	movlw	2
 11491  012662  2630               	addwf	(btemp+10)^0,f,c
 11492  012664  0E00               	movlw	0
 11493  012666  2231               	addwfc	(btemp+11)^0,f,c
 11494  012668  0060  F0C3  FFF6   	movff	btemp+10,tblptrl
 11495  01266E  0060  F0C7  FFF7   	movff	btemp+11,tblptrh
 11496  012674                     	if	0	;tblptru may be non-zero
 11497  012674                     	endif
 11498  012674                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11499  012674  0E00               	movlw	low (__mediumconst shr (0+16))
 11500  012676  6EF8               	movwf	tblptru,c
 11501  012678                     	endif
 11502  012678  0008               	tblrd		*
 11503  01267A  50F5               	movf	tablat,w,c
 11504  01267C  6EE6               	movwf	postinc1,c
 11505  01267E  0E00               	movlw	0
 11506  012680  6EE6               	movwf	postinc1,c
 11507  012682  EC6E  F0D2         	call	_tolower	;wreg free
 11508  012686  5026               	movf	btemp^0,w,c
 11509  012688  6EDF               	movwf	indf2,c
 11510  01268A                     l12177:
 11511                           
 11512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 11513                           ;stkvar	_fmt @ sp[(-32)+-4]
 11514  01268A  0EDC               	movlw	-36
 11515  01268C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11516  012692  0EDD               	movlw	-35
 11517  012694  006F FF8F FFDA     	movff	plusw1,fsr2h
 11518  01269A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11519  0126A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11520  0126A6                     	if	0	;tblptru may be non-zero
 11521  0126A6                     	endif
 11522  0126A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11523  0126A6  0E00               	movlw	low (__mediumconst shr (0+16))
 11524  0126A8  6EF8               	movwf	tblptru,c
 11525  0126AA                     	endif
 11526  0126AA  0008               	tblrd		*
 11527  0126AC  50F5               	movf	tablat,w,c
 11528  0126AE  0A63               	xorlw	99
 11529  0126B0  A4D8               	btfss	status,2,c
 11530  0126B2  D037               	goto	l12187
 11531                           
 11532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 11533                           ;stkvar	_fmt @ sp[(-32)+-4]
 11534  0126B4  0EDC               	movlw	-36
 11535  0126B6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11536  0126BC  0EDD               	movlw	-35
 11537  0126BE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11538  0126C4  2ADE               	incf	postinc2,f,c
 11539  0126C6  0E00               	movlw	0
 11540  0126C8  22DD               	addwfc	postdec2,f,c
 11541                           
 11542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 11543                           ;stkvar	_ap @ sp[(-32)+-6]
 11544  0126CA  0EDA               	movlw	-38
 11545  0126CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11546  0126D2  0EDB               	movlw	-37
 11547  0126D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11548  0126DA  0E02               	movlw	2
 11549  0126DC  5EDE               	subwf	postinc2,f,c
 11550  0126DE  0E00               	movlw	0
 11551  0126E0  5ADD               	subwfb	postdec2,f,c
 11552  0126E2  006F FF78  F030    	movff	postinc2,btemp+10
 11553  0126E8  006F FF74  F031    	movff	postdec2,btemp+11
 11554  0126EE  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 11555  0126F4  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 11556  0126FA  50DF               	movf	indf2,w,c
 11557  0126FC  6E31               	movwf	(btemp+11)^0,c
 11558                           
 11559                           ;stkvar	_c @ sp[(-32)+31]
 11560  0126FE  0EFF               	movlw	-1
 11561  012700  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 11562                           
 11563                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 11564                           ;stkvar	_c @ sp[(-32)+31]
 11565  012706  0EFF               	movlw	-1
 11566  012708  50E3               	movf	plusw1,w,c
 11567  01270A  6EE6               	movwf	postinc1,c
 11568                           
 11569                           ;stkvar	_fp @ sp[(-33)+-2]
 11570  01270C  0EDD               	movlw	-35
 11571  01270E  006F FF8F FFE6     	movff	plusw1,postinc1
 11572  012714  006F FF8F FFE6     	movff	plusw1,postinc1
 11573  01271A  ECE8  F0D1         	call	_ctoa	;wreg free
 11574  01271E  EF0A  F099         	goto	l2347
 11575  012722                     l12187:
 11576                           
 11577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 11578                           ;stkvar	_fmt @ sp[(-32)+-4]
 11579  012722  0EDC               	movlw	-36
 11580  012724  006F FF8F FFD9     	movff	plusw1,fsr2l
 11581  01272A  0EDD               	movlw	-35
 11582  01272C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11583  012732  006F FF7B FFF6     	movff	postinc2,tblptrl
 11584  012738  006F FF77 FFF7     	movff	postdec2,tblptrh
 11585  01273E                     	if	0	;tblptru may be non-zero
 11586  01273E                     	endif
 11587  01273E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11588  01273E  0E00               	movlw	low (__mediumconst shr (0+16))
 11589  012740  6EF8               	movwf	tblptru,c
 11590  012742                     	endif
 11591  012742  0008               	tblrd		*
 11592  012744  50F5               	movf	tablat,w,c
 11593  012746  0A64               	xorlw	100
 11594  012748  B4D8               	btfsc	status,2,c
 11595  01274A  D015               	goto	u11790
 11596                           
 11597                           ;stkvar	_fmt @ sp[(-32)+-4]
 11598  01274C  0EDC               	movlw	-36
 11599  01274E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11600  012754  0EDD               	movlw	-35
 11601  012756  006F FF8F FFDA     	movff	plusw1,fsr2h
 11602  01275C  006F FF7B FFF6     	movff	postinc2,tblptrl
 11603  012762  006F FF77 FFF7     	movff	postdec2,tblptrh
 11604  012768                     	if	0	;tblptru may be non-zero
 11605  012768                     	endif
 11606  012768                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11607  012768  0E00               	movlw	low (__mediumconst shr (0+16))
 11608  01276A  6EF8               	movwf	tblptru,c
 11609  01276C                     	endif
 11610  01276C  0008               	tblrd		*
 11611  01276E  50F5               	movf	tablat,w,c
 11612  012770  0A69               	xorlw	105
 11613  012772  A4D8               	btfss	status,2,c
 11614  012774  D076               	goto	l12199
 11615  012776                     u11790:
 11616                           
 11617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 11618                           ;stkvar	_fmt @ sp[(-32)+-4]
 11619  012776  0EDC               	movlw	-36
 11620  012778  006F FF8F FFD9     	movff	plusw1,fsr2l
 11621  01277E  0EDD               	movlw	-35
 11622  012780  006F FF8F FFDA     	movff	plusw1,fsr2h
 11623  012786  2ADE               	incf	postinc2,f,c
 11624  012788  0E00               	movlw	0
 11625  01278A  22DD               	addwfc	postdec2,f,c
 11626                           
 11627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 11628                           ;stkvar	_ap @ sp[(-32)+-6]
 11629  01278C  0EDA               	movlw	-38
 11630  01278E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11631  012794  0EDB               	movlw	-37
 11632  012796  006F FF8F FFDA     	movff	plusw1,fsr2h
 11633  01279C  0E02               	movlw	2
 11634  01279E  5EDE               	subwf	postinc2,f,c
 11635  0127A0  0E00               	movlw	0
 11636  0127A2  5ADD               	subwfb	postdec2,f,c
 11637  0127A4  006F FF78  F030    	movff	postinc2,btemp+10
 11638  0127AA  006F FF74  F031    	movff	postdec2,btemp+11
 11639  0127B0  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 11640  0127B6  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 11641  0127BC  006F FF78  F030    	movff	postinc2,btemp+10
 11642  0127C2  006F FF74  F031    	movff	postdec2,btemp+11
 11643                           
 11644                           ;stkvar	_ll @ sp[(-32)+14]
 11645  0127C8  0EEE               	movlw	-18
 11646  0127CA  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 11647  0127D0  0EEF               	movlw	-17
 11648  0127D2  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 11649  0127D8  6A26               	clrf	btemp^0,c
 11650  0127DA  BEE3               	btfsc	plusw1,7,c
 11651  0127DC  6826               	setf	btemp^0,c
 11652  0127DE  0EF0               	movlw	-16
 11653  0127E0  0060  F09B  FFE3   	movff	btemp,plusw1
 11654  0127E6  0EF1               	movlw	-15
 11655  0127E8  0060  F09B  FFE3   	movff	btemp,plusw1
 11656  0127EE  0EF2               	movlw	-14
 11657  0127F0  0060  F09B  FFE3   	movff	btemp,plusw1
 11658  0127F6  0EF3               	movlw	-13
 11659  0127F8  0060  F09B  FFE3   	movff	btemp,plusw1
 11660  0127FE  0EF4               	movlw	-12
 11661  012800  0060  F09B  FFE3   	movff	btemp,plusw1
 11662  012806  0EF5               	movlw	-11
 11663  012808  0060  F09B  FFE3   	movff	btemp,plusw1
 11664  01280E                     l12195:
 11665                           
 11666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 11667                           ;stkvar	_ll @ sp[(-32)+14]
 11668  01280E  50E1               	movf	fsr1l,w,c
 11669  012810  0FEE               	addlw	-18
 11670  012812  6ED9               	movwf	fsr2l,c
 11671  012814  50E2               	movf	fsr1h,w,c
 11672  012816  6EDA               	movwf	fsr2h,c
 11673  012818  0EFF               	movlw	255
 11674  01281A  22DA               	addwfc	fsr2h,f,c
 11675  01281C  006F FF7B FFE6     	movff	postinc2,postinc1
 11676  012822  006F FF7B FFE6     	movff	postinc2,postinc1
 11677  012828  006F FF7B FFE6     	movff	postinc2,postinc1
 11678  01282E  006F FF7B FFE6     	movff	postinc2,postinc1
 11679  012834  006F FF7B FFE6     	movff	postinc2,postinc1
 11680  01283A  006F FF7B FFE6     	movff	postinc2,postinc1
 11681  012840  006F FF7B FFE6     	movff	postinc2,postinc1
 11682  012846  006F FF7B FFE6     	movff	postinc2,postinc1
 11683                           
 11684                           ;stkvar	_fp @ sp[(-40)+-2]
 11685  01284C  0ED6               	movlw	-42
 11686  01284E  006F FF8F FFE6     	movff	plusw1,postinc1
 11687  012854  006F FF8F FFE6     	movff	plusw1,postinc1
 11688  01285A  ECB6  F0A9         	call	_dtoa	;wreg free
 11689  01285E  EF0A  F099         	goto	l2347
 11690  012862                     l12199:
 11691                           
 11692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 11693  012862  0E02               	movlw	2
 11694  012864  6EE6               	movwf	postinc1,c
 11695  012866  0E00               	movlw	0
 11696  012868  6EE6               	movwf	postinc1,c
 11697  01286A  0EE9               	movlw	low STR_74
 11698  01286C  6EE6               	movwf	postinc1,c
 11699  01286E  0EFF               	movlw	high STR_74
 11700  012870  6EE6               	movwf	postinc1,c
 11701                           
 11702                           ;stkvar	_fmt @ sp[(-36)+-4]
 11703  012872  0ED8               	movlw	-40
 11704  012874  006F FF8F FFD9     	movff	plusw1,fsr2l
 11705  01287A  0ED9               	movlw	-39
 11706  01287C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11707  012882  006F FF78  F030    	movff	postinc2,btemp+10
 11708  012888  006F FF74  F031    	movff	postdec2,btemp+11
 11709  01288E  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 11710  012894  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 11711  01289A  ECC9  F0BA         	call	_strncmp	;wreg free
 11712  01289E  5026               	movf	btemp^0,w,c
 11713  0128A0  1027               	iorwf	(btemp+1)^0,w,c
 11714  0128A2  B4D8               	btfsc	status,2,c
 11715  0128A4  D022               	goto	u11810
 11716  0128A6  0E02               	movlw	2
 11717  0128A8  6EE6               	movwf	postinc1,c
 11718  0128AA  0E00               	movlw	0
 11719  0128AC  6EE6               	movwf	postinc1,c
 11720  0128AE  0EEF               	movlw	low STR_78
 11721  0128B0  6EE6               	movwf	postinc1,c
 11722  0128B2  0EFF               	movlw	high STR_78
 11723  0128B4  6EE6               	movwf	postinc1,c
 11724                           
 11725                           ;stkvar	_fmt @ sp[(-36)+-4]
 11726  0128B6  0ED8               	movlw	-40
 11727  0128B8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11728  0128BE  0ED9               	movlw	-39
 11729  0128C0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11730  0128C6  006F FF78  F030    	movff	postinc2,btemp+10
 11731  0128CC  006F FF74  F031    	movff	postdec2,btemp+11
 11732  0128D2  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 11733  0128D8  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 11734  0128DE  ECC9  F0BA         	call	_strncmp	;wreg free
 11735  0128E2  5026               	movf	btemp^0,w,c
 11736  0128E4  1027               	iorwf	(btemp+1)^0,w,c
 11737  0128E6  A4D8               	btfss	status,2,c
 11738  0128E8  D069               	goto	l12211
 11739  0128EA                     u11810:
 11740                           
 11741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 11742                           ;stkvar	_fmt @ sp[(-32)+-4]
 11743  0128EA  0EDC               	movlw	-36
 11744  0128EC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11745  0128F2  0EDD               	movlw	-35
 11746  0128F4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11747  0128FA  0E02               	movlw	2
 11748  0128FC  26DE               	addwf	postinc2,f,c
 11749  0128FE  0E00               	movlw	0
 11750  012900  22DD               	addwfc	postdec2,f,c
 11751                           
 11752                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 11753                           ;stkvar	_ap @ sp[(-32)+-6]
 11754  012902  0EDA               	movlw	-38
 11755  012904  006F FF8F FFD9     	movff	plusw1,fsr2l
 11756  01290A  0EDB               	movlw	-37
 11757  01290C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11758  012912  0E04               	movlw	4
 11759  012914  5EDE               	subwf	postinc2,f,c
 11760  012916  0E00               	movlw	0
 11761  012918  5ADD               	subwfb	postdec2,f,c
 11762  01291A  006F FF78  F030    	movff	postinc2,btemp+10
 11763  012920  006F FF74  F031    	movff	postdec2,btemp+11
 11764  012926  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 11765  01292C  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 11766  012932  006F FF78  F02E    	movff	postinc2,btemp+8
 11767  012938  006F FF78  F02F    	movff	postinc2,btemp+9
 11768  01293E  006F FF78  F030    	movff	postinc2,btemp+10
 11769  012944  006F FF78  F031    	movff	postinc2,btemp+11
 11770  01294A  0060  F0B8  F036   	movff	btemp+8,btemp+16
 11771  012950  0060  F0BC  F037   	movff	btemp+9,btemp+17
 11772  012956  0060  F0C0  F038   	movff	btemp+10,btemp+18
 11773  01295C  0060  F0C4  F039   	movff	btemp+11,btemp+19
 11774  012962  6A3A               	clrf	(btemp+20)^0,c
 11775  012964  BE39               	btfsc	(btemp+19)^0,7,c
 11776  012966  683A               	setf	(btemp+20)^0,c
 11777  012968  0060  F0E8  F03B   	movff	btemp+20,btemp+21
 11778  01296E  0060  F0E8  F03C   	movff	btemp+20,btemp+22
 11779  012974  0060  F0E8  F03D   	movff	btemp+20,btemp+23
 11780                           
 11781                           ;stkvar	_ll @ sp[(-32)+14]
 11782  01297A  0EEE               	movlw	-18
 11783  01297C  0060  F0DB  FFE3   	movff	btemp+16,plusw1
 11784  012982  0EEF               	movlw	-17
 11785  012984  0060  F0DF  FFE3   	movff	btemp+17,plusw1
 11786  01298A  0EF0               	movlw	-16
 11787  01298C  0060  F0E3  FFE3   	movff	btemp+18,plusw1
 11788  012992  0EF1               	movlw	-15
 11789  012994  0060  F0E7  FFE3   	movff	btemp+19,plusw1
 11790  01299A  0EF2               	movlw	-14
 11791  01299C  0060  F0EB  FFE3   	movff	btemp+20,plusw1
 11792  0129A2  0EF3               	movlw	-13
 11793  0129A4  0060  F0EF  FFE3   	movff	btemp+21,plusw1
 11794  0129AA  0EF4               	movlw	-12
 11795  0129AC  0060  F0F3  FFE3   	movff	btemp+22,plusw1
 11796  0129B2  0EF5               	movlw	-11
 11797  0129B4  0060  F0F7  FFE3   	movff	btemp+23,plusw1
 11798  0129BA  D729               	goto	l12195
 11799  0129BC                     l12211:
 11800                           
 11801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 11802                           ;stkvar	_ct @ sp[(-32)+26]
 11803  0129BC  0EFA               	movlw	-6
 11804  0129BE  006F FF8C  F026    	movff	plusw1,btemp
 11805  0129C4  0E66               	movlw	102
 11806  0129C6  1826               	xorwf	btemp^0,w,c
 11807  0129C8  A4D8               	btfss	status,2,c
 11808  0129CA  D06E               	goto	l12223
 11809                           
 11810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 11811                           ;stkvar	_fmt @ sp[(-32)+-4]
 11812  0129CC  0EDC               	movlw	-36
 11813  0129CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11814  0129D4  0EDD               	movlw	-35
 11815  0129D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11816  0129DC  006F FF7B FFF6     	movff	postinc2,tblptrl
 11817  0129E2  006F FF77 FFF7     	movff	postdec2,tblptrh
 11818  0129E8                     	if	0	;tblptru may be non-zero
 11819  0129E8                     	endif
 11820  0129E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11821  0129E8  0E00               	movlw	low (__mediumconst shr (0+16))
 11822  0129EA  6EF8               	movwf	tblptru,c
 11823  0129EC                     	endif
 11824                           
 11825                           ;stkvar	_c @ sp[(-32)+31]
 11826  0129EC  0008               	tblrd		*
 11827  0129EE  0EFF               	movlw	-1
 11828  0129F0  006F FFD7 FFE3     	movff	tablat,plusw1
 11829                           
 11830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 11831                           ;stkvar	_fmt @ sp[(-32)+-4]
 11832  0129F6  0EDC               	movlw	-36
 11833  0129F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11834  0129FE  0EDD               	movlw	-35
 11835  012A00  006F FF8F FFDA     	movff	plusw1,fsr2h
 11836  012A06  2ADE               	incf	postinc2,f,c
 11837  012A08  0E00               	movlw	0
 11838  012A0A  22DD               	addwfc	postdec2,f,c
 11839                           
 11840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 11841                           ;stkvar	_ap @ sp[(-32)+-6]
 11842  012A0C  0EDA               	movlw	-38
 11843  012A0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11844  012A14  0EDB               	movlw	-37
 11845  012A16  006F FF8F FFDA     	movff	plusw1,fsr2h
 11846  012A1C  0E04               	movlw	4
 11847  012A1E  5EDE               	subwf	postinc2,f,c
 11848  012A20  0E00               	movlw	0
 11849  012A22  5ADD               	subwfb	postdec2,f,c
 11850  012A24  006F FF78  F030    	movff	postinc2,btemp+10
 11851  012A2A  006F FF74  F031    	movff	postdec2,btemp+11
 11852  012A30  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 11853  012A36  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 11854  012A3C  006F FF78  F02E    	movff	postinc2,btemp+8
 11855  012A42  006F FF78  F02F    	movff	postinc2,btemp+9
 11856  012A48  006F FF78  F030    	movff	postinc2,btemp+10
 11857  012A4E  006F FF78  F031    	movff	postinc2,btemp+11
 11858                           
 11859                           ;stkvar	_f @ sp[(-32)+22]
 11860  012A54  0EF6               	movlw	-10
 11861  012A56  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 11862  012A5C  0EF7               	movlw	-9
 11863  012A5E  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 11864  012A64  0EF8               	movlw	-8
 11865  012A66  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 11866  012A6C  0EF9               	movlw	-7
 11867  012A6E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 11868  012A74                     l12219:
 11869                           
 11870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 11871                           ;stkvar	_c @ sp[(-32)+31]
 11872  012A74  0EFF               	movlw	-1
 11873  012A76  50E3               	movf	plusw1,w,c
 11874  012A78  6EE6               	movwf	postinc1,c
 11875                           
 11876                           ;stkvar	_f @ sp[(-33)+22]
 11877  012A7A  0EF5               	movlw	-11
 11878  012A7C  006F FF8F FFE6     	movff	plusw1,postinc1
 11879  012A82  006F FF8F FFE6     	movff	plusw1,postinc1
 11880  012A88  006F FF8F FFE6     	movff	plusw1,postinc1
 11881  012A8E  006F FF8F FFE6     	movff	plusw1,postinc1
 11882                           
 11883                           ;stkvar	_fp @ sp[(-37)+-2]
 11884  012A94  0ED9               	movlw	-39
 11885  012A96  006F FF8F FFE6     	movff	plusw1,postinc1
 11886  012A9C  006F FF8F FFE6     	movff	plusw1,postinc1
 11887  012AA2  EC00  F080         	call	_efgtoa	;wreg free
 11888  012AA6  D3B6               	goto	l2347
 11889  012AA8                     l12223:
 11890                           
 11891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 11892  012AA8  0E02               	movlw	2
 11893  012AAA  6EE6               	movwf	postinc1,c
 11894  012AAC  0E00               	movlw	0
 11895  012AAE  6EE6               	movwf	postinc1,c
 11896  012AB0  0EEC               	movlw	low STR_83
 11897  012AB2  6EE6               	movwf	postinc1,c
 11898  012AB4  0EFF               	movlw	high STR_83
 11899  012AB6  6EE6               	movwf	postinc1,c
 11900                           
 11901                           ;stkvar	_ct @ sp[(-36)+26]
 11902  012AB8  0EF6               	movlw	246
 11903  012ABA  24E1               	addwf	fsr1l,w,c
 11904  012ABC  6E26               	movwf	btemp^0,c
 11905  012ABE  0EFF               	movlw	255
 11906  012AC0  20E2               	addwfc	fsr1h,w,c
 11907  012AC2  6E27               	movwf	(btemp+1)^0,c
 11908  012AC4  0060  F09B  FFE6   	movff	btemp,postinc1
 11909  012ACA  0060  F09F  FFE6   	movff	btemp+1,postinc1
 11910  012AD0  ECC9  F0BA         	call	_strncmp	;wreg free
 11911  012AD4  5026               	movf	btemp^0,w,c
 11912  012AD6  1027               	iorwf	(btemp+1)^0,w,c
 11913  012AD8  A4D8               	btfss	status,2,c
 11914  012ADA  D096               	goto	l12243
 11915                           
 11916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 11917                           ;stkvar	_fmt @ sp[(-32)+-4]
 11918  012ADC  0EDC               	movlw	-36
 11919  012ADE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11920  012AE4  0EDD               	movlw	-35
 11921  012AE6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11922  012AEC  006F FF78  F030    	movff	postinc2,btemp+10
 11923  012AF2  006F FF74  F031    	movff	postdec2,btemp+11
 11924  012AF8  0E01               	movlw	1
 11925  012AFA  2630               	addwf	(btemp+10)^0,f,c
 11926  012AFC  0E00               	movlw	0
 11927  012AFE  2231               	addwfc	(btemp+11)^0,f,c
 11928  012B00  0060  F0C3  FFF6   	movff	btemp+10,tblptrl
 11929  012B06  0060  F0C7  FFF7   	movff	btemp+11,tblptrh
 11930  012B0C                     	if	0	;tblptru may be non-zero
 11931  012B0C                     	endif
 11932  012B0C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11933  012B0C  0E00               	movlw	low (__mediumconst shr (0+16))
 11934  012B0E  6EF8               	movwf	tblptru,c
 11935  012B10                     	endif
 11936                           
 11937                           ;stkvar	_c @ sp[(-32)+31]
 11938  012B10  0008               	tblrd		*
 11939  012B12  0EFF               	movlw	-1
 11940  012B14  006F FFD7 FFE3     	movff	tablat,plusw1
 11941  012B1A  0EBF               	movlw	191
 11942  012B1C  6E30               	movwf	(btemp+10)^0,c
 11943  012B1E  0EFF               	movlw	255
 11944  012B20  6E31               	movwf	(btemp+11)^0,c
 11945                           
 11946                           ;stkvar	_fmt @ sp[(-32)+-4]
 11947  012B22  0EDC               	movlw	-36
 11948  012B24  006F FF8F FFD9     	movff	plusw1,fsr2l
 11949  012B2A  0EDD               	movlw	-35
 11950  012B2C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11951  012B32  006F FF7B FFF6     	movff	postinc2,tblptrl
 11952  012B38  006F FF77 FFF7     	movff	postdec2,tblptrh
 11953  012B3E                     	if	0	;tblptru may be non-zero
 11954  012B3E                     	endif
 11955  012B3E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11956  012B3E  0E00               	movlw	low (__mediumconst shr (0+16))
 11957  012B40  6EF8               	movwf	tblptru,c
 11958  012B42                     	endif
 11959  012B42  0008               	tblrd		*
 11960  012B44  50F5               	movf	tablat,w,c
 11961  012B46  6E2E               	movwf	(btemp+8)^0,c
 11962  012B48  6A2F               	clrf	(btemp+9)^0,c
 11963  012B4A  5030               	movf	(btemp+10)^0,w,c
 11964  012B4C  262E               	addwf	(btemp+8)^0,f,c
 11965  012B4E  5031               	movf	(btemp+11)^0,w,c
 11966  012B50  222F               	addwfc	(btemp+9)^0,f,c
 11967  012B52  502F               	movf	(btemp+9)^0,w,c
 11968  012B54  E106               	bnz	u11840
 11969  012B56  0E1A               	movlw	26
 11970  012B58  5C2E               	subwf	(btemp+8)^0,w,c
 11971  012B5A  B0D8               	btfsc	status,0,c
 11972  012B5C  D002               	goto	u11840
 11973  012B5E  0E01               	movlw	1
 11974  012B60  D001               	goto	u11850
 11975  012B62                     u11840:
 11976  012B62  0E00               	movlw	0
 11977  012B64                     u11850:
 11978  012B64  6E30               	movwf	(btemp+10)^0,c
 11979  012B66  6A31               	clrf	(btemp+11)^0,c
 11980                           
 11981                           ;stkvar	_vfpfcnvrt$5472 @ sp[(-32)+2]
 11982  012B68  0EE2               	movlw	-30
 11983  012B6A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 11984  012B70  0EE3               	movlw	-29
 11985  012B72  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 11986                           
 11987                           ;stkvar	_vfpfcnvrt$5472 @ sp[(-32)+2]
 11988  012B78  0EE2               	movlw	-30
 11989  012B7A  006F FF8C  F026    	movff	plusw1,btemp
 11990  012B80  0EE3               	movlw	-29
 11991  012B82  50E3               	movf	plusw1,w,c
 11992  012B84  1026               	iorwf	btemp^0,w,c
 11993                           
 11994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 11995                           ;stkvar	_ap @ sp[(-32)+-6]
 11996                           
 11997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 11998                           
 11999                           ;stkvar	_f @ sp[(-32)+22]
 12000                           
 12001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 12002                           ;stkvar	_ap @ sp[(-32)+-6]
 12003  012B86  0EDA               	movlw	-38
 12004  012B88  006F FF8F FFD9     	movff	plusw1,fsr2l
 12005  012B8E  0EDB               	movlw	-37
 12006  012B90  006F FF8F FFDA     	movff	plusw1,fsr2h
 12007  012B96  0E04               	movlw	4
 12008  012B98  5EDE               	subwf	postinc2,f,c
 12009  012B9A  0E00               	movlw	0
 12010  012B9C  5ADD               	subwfb	postdec2,f,c
 12011  012B9E  006F FF78  F030    	movff	postinc2,btemp+10
 12012  012BA4  006F FF74  F031    	movff	postdec2,btemp+11
 12013  012BAA  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 12014  012BB0  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 12015  012BB6  006F FF78  F02E    	movff	postinc2,btemp+8
 12016  012BBC  006F FF78  F02F    	movff	postinc2,btemp+9
 12017  012BC2  006F FF78  F030    	movff	postinc2,btemp+10
 12018  012BC8  006F FF78  F031    	movff	postinc2,btemp+11
 12019                           
 12020                           ;stkvar	_f @ sp[(-32)+22]
 12021  012BCE  0EF6               	movlw	-10
 12022  012BD0  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 12023  012BD6  0EF7               	movlw	-9
 12024  012BD8  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 12025  012BDE  0EF8               	movlw	-8
 12026  012BE0  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12027  012BE6  0EF9               	movlw	-7
 12028  012BE8  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12029                           
 12030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 12031                           ;stkvar	_fmt @ sp[(-32)+-4]
 12032  012BEE  0EDC               	movlw	-36
 12033  012BF0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12034  012BF6  0EDD               	movlw	-35
 12035  012BF8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12036  012BFE  0E02               	movlw	2
 12037  012C00  26DE               	addwf	postinc2,f,c
 12038  012C02  0E00               	movlw	0
 12039  012C04  22DD               	addwfc	postdec2,f,c
 12040  012C06  D736               	goto	l12219
 12041  012C08                     l12243:
 12042                           
 12043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 12044                           ;stkvar	_fmt @ sp[(-32)+-4]
 12045  012C08  0EDC               	movlw	-36
 12046  012C0A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12047  012C10  0EDD               	movlw	-35
 12048  012C12  006F FF8F FFDA     	movff	plusw1,fsr2h
 12049  012C18  006F FF7B FFF6     	movff	postinc2,tblptrl
 12050  012C1E  006F FF77 FFF7     	movff	postdec2,tblptrh
 12051  012C24                     	if	0	;tblptru may be non-zero
 12052  012C24                     	endif
 12053  012C24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12054  012C24  0E00               	movlw	low (__mediumconst shr (0+16))
 12055  012C26  6EF8               	movwf	tblptru,c
 12056  012C28                     	endif
 12057  012C28  0008               	tblrd		*
 12058  012C2A  50F5               	movf	tablat,w,c
 12059  012C2C  0A73               	xorlw	115
 12060  012C2E  A4D8               	btfss	status,2,c
 12061  012C30  D042               	goto	l12253
 12062                           
 12063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 12064                           ;stkvar	_fmt @ sp[(-32)+-4]
 12065  012C32  0EDC               	movlw	-36
 12066  012C34  006F FF8F FFD9     	movff	plusw1,fsr2l
 12067  012C3A  0EDD               	movlw	-35
 12068  012C3C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12069  012C42  2ADE               	incf	postinc2,f,c
 12070  012C44  0E00               	movlw	0
 12071  012C46  22DD               	addwfc	postdec2,f,c
 12072                           
 12073                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 12074                           ;stkvar	_ap @ sp[(-32)+-6]
 12075  012C48  0EDA               	movlw	-38
 12076  012C4A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12077  012C50  0EDB               	movlw	-37
 12078  012C52  006F FF8F FFDA     	movff	plusw1,fsr2h
 12079  012C58  0E02               	movlw	2
 12080  012C5A  5EDE               	subwf	postinc2,f,c
 12081  012C5C  0E00               	movlw	0
 12082  012C5E  5ADD               	subwfb	postdec2,f,c
 12083  012C60  006F FF78  F030    	movff	postinc2,btemp+10
 12084  012C66  006F FF74  F031    	movff	postdec2,btemp+11
 12085  012C6C  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 12086  012C72  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 12087  012C78  006F FF78  F030    	movff	postinc2,btemp+10
 12088  012C7E  006F FF74  F031    	movff	postdec2,btemp+11
 12089                           
 12090                           ;stkvar	_cp @ sp[(-32)+29]
 12091  012C84  0EFE               	movlw	-2
 12092  012C86  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12093  012C8C  0EFD               	movlw	-3
 12094  012C8E  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12095                           
 12096                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 12097                           ;stkvar	_cp @ sp[(-32)+29]
 12098  012C94  0EFD               	movlw	-3
 12099  012C96  006F FF8F FFE6     	movff	plusw1,postinc1
 12100  012C9C  006F FF8F FFE6     	movff	plusw1,postinc1
 12101                           
 12102                           ;stkvar	_fp @ sp[(-34)+-2]
 12103  012CA2  0EDC               	movlw	-36
 12104  012CA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12105  012CAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12106  012CB0  ECD0  F0B5         	call	_stoa	;wreg free
 12107  012CB4  D2AF               	goto	l2347
 12108  012CB6                     l12253:
 12109                           
 12110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 12111                           ;stkvar	_fmt @ sp[(-32)+-4]
 12112  012CB6  0EDC               	movlw	-36
 12113  012CB8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12114  012CBE  0EDD               	movlw	-35
 12115  012CC0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12116  012CC6  006F FF7B FFF6     	movff	postinc2,tblptrl
 12117  012CCC  006F FF77 FFF7     	movff	postdec2,tblptrh
 12118  012CD2                     	if	0	;tblptru may be non-zero
 12119  012CD2                     	endif
 12120  012CD2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12121  012CD2  0E00               	movlw	low (__mediumconst shr (0+16))
 12122  012CD4  6EF8               	movwf	tblptru,c
 12123  012CD6                     	endif
 12124  012CD6  0008               	tblrd		*
 12125  012CD8  50F5               	movf	tablat,w,c
 12126  012CDA  0A75               	xorlw	117
 12127  012CDC  A4D8               	btfss	status,2,c
 12128  012CDE  D07C               	goto	l12263
 12129                           
 12130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 12131                           ;stkvar	_fmt @ sp[(-32)+-4]
 12132  012CE0  0EDC               	movlw	-36
 12133  012CE2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12134  012CE8  0EDD               	movlw	-35
 12135  012CEA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12136  012CF0  2ADE               	incf	postinc2,f,c
 12137  012CF2  0E00               	movlw	0
 12138  012CF4  22DD               	addwfc	postdec2,f,c
 12139                           
 12140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12141                           ;stkvar	_ap @ sp[(-32)+-6]
 12142  012CF6  0EDA               	movlw	-38
 12143  012CF8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12144  012CFE  0EDB               	movlw	-37
 12145  012D00  006F FF8F FFDA     	movff	plusw1,fsr2h
 12146  012D06  0E02               	movlw	2
 12147  012D08  5EDE               	subwf	postinc2,f,c
 12148  012D0A  0E00               	movlw	0
 12149  012D0C  5ADD               	subwfb	postdec2,f,c
 12150  012D0E  006F FF78  F030    	movff	postinc2,btemp+10
 12151  012D14  006F FF74  F031    	movff	postdec2,btemp+11
 12152  012D1A  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 12153  012D20  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 12154  012D26  006F FF78  F030    	movff	postinc2,btemp+10
 12155  012D2C  006F FF74  F031    	movff	postdec2,btemp+11
 12156  012D32  5030               	movf	(btemp+10)^0,w,c
 12157  012D34  6E36               	movwf	(btemp+16)^0,c
 12158  012D36  5031               	movf	(btemp+11)^0,w,c
 12159  012D38  6E37               	movwf	(btemp+17)^0,c
 12160  012D3A  6A38               	clrf	(btemp+18)^0,c
 12161  012D3C  6A39               	clrf	(btemp+19)^0,c
 12162  012D3E  6A3A               	clrf	(btemp+20)^0,c
 12163  012D40  6A3B               	clrf	(btemp+21)^0,c
 12164  012D42  6A3C               	clrf	(btemp+22)^0,c
 12165  012D44  6A3D               	clrf	(btemp+23)^0,c
 12166                           
 12167                           ;stkvar	_llu @ sp[(-32)+6]
 12168  012D46  0EE6               	movlw	-26
 12169  012D48  0060  F0DB  FFE3   	movff	btemp+16,plusw1
 12170  012D4E  0EE7               	movlw	-25
 12171  012D50  0060  F0DF  FFE3   	movff	btemp+17,plusw1
 12172  012D56  0EE8               	movlw	-24
 12173  012D58  0060  F0E3  FFE3   	movff	btemp+18,plusw1
 12174  012D5E  0EE9               	movlw	-23
 12175  012D60  0060  F0E7  FFE3   	movff	btemp+19,plusw1
 12176  012D66  0EEA               	movlw	-22
 12177  012D68  0060  F0EB  FFE3   	movff	btemp+20,plusw1
 12178  012D6E  0EEB               	movlw	-21
 12179  012D70  0060  F0EF  FFE3   	movff	btemp+21,plusw1
 12180  012D76  0EEC               	movlw	-20
 12181  012D78  0060  F0F3  FFE3   	movff	btemp+22,plusw1
 12182  012D7E  0EED               	movlw	-19
 12183  012D80  0060  F0F7  FFE3   	movff	btemp+23,plusw1
 12184                           
 12185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 12186                           ;stkvar	_llu @ sp[(-32)+6]
 12187  012D86  50E1               	movf	fsr1l,w,c
 12188  012D88  0FE6               	addlw	-26
 12189  012D8A  6ED9               	movwf	fsr2l,c
 12190  012D8C  50E2               	movf	fsr1h,w,c
 12191  012D8E  6EDA               	movwf	fsr2h,c
 12192  012D90  0EFF               	movlw	255
 12193  012D92  22DA               	addwfc	fsr2h,f,c
 12194  012D94  006F FF7B FFE6     	movff	postinc2,postinc1
 12195  012D9A  006F FF7B FFE6     	movff	postinc2,postinc1
 12196  012DA0  006F FF7B FFE6     	movff	postinc2,postinc1
 12197  012DA6  006F FF7B FFE6     	movff	postinc2,postinc1
 12198  012DAC  006F FF7B FFE6     	movff	postinc2,postinc1
 12199  012DB2  006F FF7B FFE6     	movff	postinc2,postinc1
 12200  012DB8  006F FF7B FFE6     	movff	postinc2,postinc1
 12201  012DBE  006F FF7B FFE6     	movff	postinc2,postinc1
 12202                           
 12203                           ;stkvar	_fp @ sp[(-40)+-2]
 12204  012DC4  0ED6               	movlw	-42
 12205  012DC6  006F FF8F FFE6     	movff	plusw1,postinc1
 12206  012DCC  006F FF8F FFE6     	movff	plusw1,postinc1
 12207  012DD2  EC5A  F0B1         	call	_utoa	;wreg free
 12208  012DD6  D21E               	goto	l2347
 12209  012DD8                     l12263:
 12210                           
 12211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 12212  012DD8  0E02               	movlw	2
 12213  012DDA  6EE6               	movwf	postinc1,c
 12214  012DDC  0E00               	movlw	0
 12215  012DDE  6EE6               	movwf	postinc1,c
 12216  012DE0  0EF2               	movlw	low STR_88
 12217  012DE2  6EE6               	movwf	postinc1,c
 12218  012DE4  0EFF               	movlw	high STR_88
 12219  012DE6  6EE6               	movwf	postinc1,c
 12220                           
 12221                           ;stkvar	_fmt @ sp[(-36)+-4]
 12222  012DE8  0ED8               	movlw	-40
 12223  012DEA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12224  012DF0  0ED9               	movlw	-39
 12225  012DF2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12226  012DF8  006F FF78  F030    	movff	postinc2,btemp+10
 12227  012DFE  006F FF74  F031    	movff	postdec2,btemp+11
 12228  012E04  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 12229  012E0A  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 12230  012E10  ECC9  F0BA         	call	_strncmp	;wreg free
 12231  012E14  5026               	movf	btemp^0,w,c
 12232  012E16  1027               	iorwf	(btemp+1)^0,w,c
 12233  012E18  A4D8               	btfss	status,2,c
 12234  012E1A  D039               	goto	l12273
 12235                           
 12236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 12237                           ;stkvar	_fmt @ sp[(-32)+-4]
 12238  012E1C  0EDC               	movlw	-36
 12239  012E1E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12240  012E24  0EDD               	movlw	-35
 12241  012E26  006F FF8F FFDA     	movff	plusw1,fsr2h
 12242  012E2C  0E02               	movlw	2
 12243  012E2E  26DE               	addwf	postinc2,f,c
 12244  012E30  0E00               	movlw	0
 12245  012E32  22DD               	addwfc	postdec2,f,c
 12246                           
 12247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12248                           ;stkvar	_ap @ sp[(-32)+-6]
 12249  012E34  0EDA               	movlw	-38
 12250  012E36  006F FF8F FFD9     	movff	plusw1,fsr2l
 12251  012E3C  0EDB               	movlw	-37
 12252  012E3E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12253  012E44  0E04               	movlw	4
 12254  012E46  5EDE               	subwf	postinc2,f,c
 12255  012E48  0E00               	movlw	0
 12256  012E4A  5ADD               	subwfb	postdec2,f,c
 12257  012E4C  006F FF78  F030    	movff	postinc2,btemp+10
 12258  012E52  006F FF74  F031    	movff	postdec2,btemp+11
 12259  012E58  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 12260  012E5E  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 12261  012E64  006F FF78  F02E    	movff	postinc2,btemp+8
 12262  012E6A  006F FF78  F02F    	movff	postinc2,btemp+9
 12263  012E70  006F FF78  F030    	movff	postinc2,btemp+10
 12264  012E76  006F FF78  F031    	movff	postinc2,btemp+11
 12265  012E7C  502E               	movf	(btemp+8)^0,w,c
 12266  012E7E  6E36               	movwf	(btemp+16)^0,c
 12267  012E80  502F               	movf	(btemp+9)^0,w,c
 12268  012E82  6E37               	movwf	(btemp+17)^0,c
 12269  012E84  5030               	movf	(btemp+10)^0,w,c
 12270  012E86  6E38               	movwf	(btemp+18)^0,c
 12271  012E88  5031               	movf	(btemp+11)^0,w,c
 12272  012E8A  6E39               	movwf	(btemp+19)^0,c
 12273  012E8C  D758               	goto	L8
 12274  012E8E                     l12273:
 12275                           
 12276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 12277                           ;stkvar	_fmt @ sp[(-32)+-4]
 12278  012E8E  0EDC               	movlw	-36
 12279  012E90  006F FF8F FFD9     	movff	plusw1,fsr2l
 12280  012E96  0EDD               	movlw	-35
 12281  012E98  006F FF8F FFDA     	movff	plusw1,fsr2h
 12282  012E9E  006F FF7B FFF6     	movff	postinc2,tblptrl
 12283  012EA4  006F FF77 FFF7     	movff	postdec2,tblptrh
 12284  012EAA                     	if	0	;tblptru may be non-zero
 12285  012EAA                     	endif
 12286  012EAA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12287  012EAA  0E00               	movlw	low (__mediumconst shr (0+16))
 12288  012EAC  6EF8               	movwf	tblptru,c
 12289  012EAE                     	endif
 12290  012EAE  0008               	tblrd		*
 12291  012EB0  50F5               	movf	tablat,w,c
 12292  012EB2  0A78               	xorlw	120
 12293  012EB4  B4D8               	btfsc	status,2,c
 12294  012EB6  D015               	goto	u11910
 12295                           
 12296                           ;stkvar	_fmt @ sp[(-32)+-4]
 12297  012EB8  0EDC               	movlw	-36
 12298  012EBA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12299  012EC0  0EDD               	movlw	-35
 12300  012EC2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12301  012EC8  006F FF7B FFF6     	movff	postinc2,tblptrl
 12302  012ECE  006F FF77 FFF7     	movff	postdec2,tblptrh
 12303  012ED4                     	if	0	;tblptru may be non-zero
 12304  012ED4                     	endif
 12305  012ED4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12306  012ED4  0E00               	movlw	low (__mediumconst shr (0+16))
 12307  012ED6  6EF8               	movwf	tblptru,c
 12308  012ED8                     	endif
 12309  012ED8  0008               	tblrd		*
 12310  012EDA  50F5               	movf	tablat,w,c
 12311  012EDC  0A58               	xorlw	88
 12312  012EDE  A4D8               	btfss	status,2,c
 12313  012EE0  D094               	goto	l12287
 12314  012EE2                     u11910:
 12315                           
 12316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 12317                           ;stkvar	_fmt @ sp[(-32)+-4]
 12318  012EE2  0EDC               	movlw	-36
 12319  012EE4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12320  012EEA  0EDD               	movlw	-35
 12321  012EEC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12322  012EF2  006F FF7B FFF6     	movff	postinc2,tblptrl
 12323  012EF8  006F FF77 FFF7     	movff	postdec2,tblptrh
 12324  012EFE                     	if	0	;tblptru may be non-zero
 12325  012EFE                     	endif
 12326  012EFE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12327  012EFE  0E00               	movlw	low (__mediumconst shr (0+16))
 12328  012F00  6EF8               	movwf	tblptru,c
 12329  012F02                     	endif
 12330                           
 12331                           ;stkvar	_c @ sp[(-32)+31]
 12332  012F02  0008               	tblrd		*
 12333  012F04  0EFF               	movlw	-1
 12334  012F06  006F FFD7 FFE3     	movff	tablat,plusw1
 12335                           
 12336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 12337                           ;stkvar	_fmt @ sp[(-32)+-4]
 12338  012F0C  0EDC               	movlw	-36
 12339  012F0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12340  012F14  0EDD               	movlw	-35
 12341  012F16  006F FF8F FFDA     	movff	plusw1,fsr2h
 12342  012F1C  2ADE               	incf	postinc2,f,c
 12343  012F1E  0E00               	movlw	0
 12344  012F20  22DD               	addwfc	postdec2,f,c
 12345                           
 12346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12347                           ;stkvar	_ap @ sp[(-32)+-6]
 12348  012F22  0EDA               	movlw	-38
 12349  012F24  006F FF8F FFD9     	movff	plusw1,fsr2l
 12350  012F2A  0EDB               	movlw	-37
 12351  012F2C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12352  012F32  0E02               	movlw	2
 12353  012F34  5EDE               	subwf	postinc2,f,c
 12354  012F36  0E00               	movlw	0
 12355  012F38  5ADD               	subwfb	postdec2,f,c
 12356  012F3A  006F FF78  F030    	movff	postinc2,btemp+10
 12357  012F40  006F FF74  F031    	movff	postdec2,btemp+11
 12358  012F46  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 12359  012F4C  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 12360  012F52  006F FF78  F030    	movff	postinc2,btemp+10
 12361  012F58  006F FF74  F031    	movff	postdec2,btemp+11
 12362  012F5E  5030               	movf	(btemp+10)^0,w,c
 12363  012F60  6E36               	movwf	(btemp+16)^0,c
 12364  012F62  5031               	movf	(btemp+11)^0,w,c
 12365  012F64  6E37               	movwf	(btemp+17)^0,c
 12366  012F66  6A38               	clrf	(btemp+18)^0,c
 12367  012F68  6A39               	clrf	(btemp+19)^0,c
 12368  012F6A  6A3A               	clrf	(btemp+20)^0,c
 12369  012F6C  6A3B               	clrf	(btemp+21)^0,c
 12370  012F6E  6A3C               	clrf	(btemp+22)^0,c
 12371  012F70  6A3D               	clrf	(btemp+23)^0,c
 12372                           
 12373                           ;stkvar	_llu @ sp[(-32)+6]
 12374  012F72  0EE6               	movlw	-26
 12375  012F74  0060  F0DB  FFE3   	movff	btemp+16,plusw1
 12376  012F7A  0EE7               	movlw	-25
 12377  012F7C  0060  F0DF  FFE3   	movff	btemp+17,plusw1
 12378  012F82  0EE8               	movlw	-24
 12379  012F84  0060  F0E3  FFE3   	movff	btemp+18,plusw1
 12380  012F8A  0EE9               	movlw	-23
 12381  012F8C  0060  F0E7  FFE3   	movff	btemp+19,plusw1
 12382  012F92  0EEA               	movlw	-22
 12383  012F94  0060  F0EB  FFE3   	movff	btemp+20,plusw1
 12384  012F9A  0EEB               	movlw	-21
 12385  012F9C  0060  F0EF  FFE3   	movff	btemp+21,plusw1
 12386  012FA2  0EEC               	movlw	-20
 12387  012FA4  0060  F0F3  FFE3   	movff	btemp+22,plusw1
 12388  012FAA  0EED               	movlw	-19
 12389  012FAC  0060  F0F7  FFE3   	movff	btemp+23,plusw1
 12390                           
 12391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 12392                           ;stkvar	_c @ sp[(-32)+31]
 12393  012FB2  0EFF               	movlw	-1
 12394  012FB4  50E3               	movf	plusw1,w,c
 12395  012FB6  6EE6               	movwf	postinc1,c
 12396                           
 12397                           ;stkvar	_llu @ sp[(-33)+6]
 12398  012FB8  50E1               	movf	fsr1l,w,c
 12399  012FBA  0FE5               	addlw	-27
 12400  012FBC  6ED9               	movwf	fsr2l,c
 12401  012FBE  50E2               	movf	fsr1h,w,c
 12402  012FC0  6EDA               	movwf	fsr2h,c
 12403  012FC2  0EFF               	movlw	255
 12404  012FC4  22DA               	addwfc	fsr2h,f,c
 12405  012FC6  006F FF7B FFE6     	movff	postinc2,postinc1
 12406  012FCC  006F FF7B FFE6     	movff	postinc2,postinc1
 12407  012FD2  006F FF7B FFE6     	movff	postinc2,postinc1
 12408  012FD8  006F FF7B FFE6     	movff	postinc2,postinc1
 12409  012FDE  006F FF7B FFE6     	movff	postinc2,postinc1
 12410  012FE4  006F FF7B FFE6     	movff	postinc2,postinc1
 12411  012FEA  006F FF7B FFE6     	movff	postinc2,postinc1
 12412  012FF0  006F FF7B FFE6     	movff	postinc2,postinc1
 12413                           
 12414                           ;stkvar	_fp @ sp[(-41)+-2]
 12415  012FF6  0ED5               	movlw	-43
 12416  012FF8  006F FF8F FFE6     	movff	plusw1,postinc1
 12417  012FFE  006F FF8F FFE6     	movff	plusw1,postinc1
 12418  013004  ECF6  F0AB         	call	_xtoa	;wreg free
 12419  013008  D105               	goto	l2347
 12420  01300A                     l12287:
 12421                           
 12422                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 12423  01300A  0E02               	movlw	2
 12424  01300C  6EE6               	movwf	postinc1,c
 12425  01300E  0E00               	movlw	0
 12426  013010  6EE6               	movwf	postinc1,c
 12427  013012  0EF5               	movlw	low STR_93
 12428  013014  6EE6               	movwf	postinc1,c
 12429  013016  0EFF               	movlw	high STR_93
 12430  013018  6EE6               	movwf	postinc1,c
 12431                           
 12432                           ;stkvar	_fmt @ sp[(-36)+-4]
 12433  01301A  0ED8               	movlw	-40
 12434  01301C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12435  013022  0ED9               	movlw	-39
 12436  013024  006F FF8F FFDA     	movff	plusw1,fsr2h
 12437  01302A  006F FF78  F030    	movff	postinc2,btemp+10
 12438  013030  006F FF74  F031    	movff	postdec2,btemp+11
 12439  013036  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 12440  01303C  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 12441  013042  ECC9  F0BA         	call	_strncmp	;wreg free
 12442  013046  5026               	movf	btemp^0,w,c
 12443  013048  1027               	iorwf	(btemp+1)^0,w,c
 12444  01304A  B4D8               	btfsc	status,2,c
 12445  01304C  D022               	goto	u11930
 12446  01304E  0E02               	movlw	2
 12447  013050  6EE6               	movwf	postinc1,c
 12448  013052  0E00               	movlw	0
 12449  013054  6EE6               	movwf	postinc1,c
 12450  013056  0EE6               	movlw	low STR_97
 12451  013058  6EE6               	movwf	postinc1,c
 12452  01305A  0EFF               	movlw	high STR_97
 12453  01305C  6EE6               	movwf	postinc1,c
 12454                           
 12455                           ;stkvar	_fmt @ sp[(-36)+-4]
 12456  01305E  0ED8               	movlw	-40
 12457  013060  006F FF8F FFD9     	movff	plusw1,fsr2l
 12458  013066  0ED9               	movlw	-39
 12459  013068  006F FF8F FFDA     	movff	plusw1,fsr2h
 12460  01306E  006F FF78  F030    	movff	postinc2,btemp+10
 12461  013074  006F FF74  F031    	movff	postdec2,btemp+11
 12462  01307A  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 12463  013080  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 12464  013086  ECC9  F0BA         	call	_strncmp	;wreg free
 12465  01308A  5026               	movf	btemp^0,w,c
 12466  01308C  1027               	iorwf	(btemp+1)^0,w,c
 12467  01308E  A4D8               	btfss	status,2,c
 12468  013090  D058               	goto	l12301
 12469  013092                     u11930:
 12470                           
 12471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 12472                           ;stkvar	_fmt @ sp[(-32)+-4]
 12473  013092  0EDC               	movlw	-36
 12474  013094  006F FF8F FFD9     	movff	plusw1,fsr2l
 12475  01309A  0EDD               	movlw	-35
 12476  01309C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12477  0130A2  006F FF78  F030    	movff	postinc2,btemp+10
 12478  0130A8  006F FF74  F031    	movff	postdec2,btemp+11
 12479  0130AE  0E01               	movlw	1
 12480  0130B0  2630               	addwf	(btemp+10)^0,f,c
 12481  0130B2  0E00               	movlw	0
 12482  0130B4  2231               	addwfc	(btemp+11)^0,f,c
 12483  0130B6  0060  F0C3  FFF6   	movff	btemp+10,tblptrl
 12484  0130BC  0060  F0C7  FFF7   	movff	btemp+11,tblptrh
 12485  0130C2                     	if	0	;tblptru may be non-zero
 12486  0130C2                     	endif
 12487  0130C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12488  0130C2  0E00               	movlw	low (__mediumconst shr (0+16))
 12489  0130C4  6EF8               	movwf	tblptru,c
 12490  0130C6                     	endif
 12491                           
 12492                           ;stkvar	_c @ sp[(-32)+31]
 12493  0130C6  0008               	tblrd		*
 12494  0130C8  0EFF               	movlw	-1
 12495  0130CA  006F FFD7 FFE3     	movff	tablat,plusw1
 12496                           
 12497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 12498                           ;stkvar	_fmt @ sp[(-32)+-4]
 12499  0130D0  0EDC               	movlw	-36
 12500  0130D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12501  0130D8  0EDD               	movlw	-35
 12502  0130DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12503  0130E0  0E02               	movlw	2
 12504  0130E2  26DE               	addwf	postinc2,f,c
 12505  0130E4  0E00               	movlw	0
 12506  0130E6  22DD               	addwfc	postdec2,f,c
 12507                           
 12508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12509                           ;stkvar	_ap @ sp[(-32)+-6]
 12510  0130E8  0EDA               	movlw	-38
 12511  0130EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12512  0130F0  0EDB               	movlw	-37
 12513  0130F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12514  0130F8  0E04               	movlw	4
 12515  0130FA  5EDE               	subwf	postinc2,f,c
 12516  0130FC  0E00               	movlw	0
 12517  0130FE  5ADD               	subwfb	postdec2,f,c
 12518  013100  006F FF78  F030    	movff	postinc2,btemp+10
 12519  013106  006F FF74  F031    	movff	postdec2,btemp+11
 12520  01310C  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 12521  013112  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 12522  013118  006F FF78  F02E    	movff	postinc2,btemp+8
 12523  01311E  006F FF78  F02F    	movff	postinc2,btemp+9
 12524  013124  006F FF78  F030    	movff	postinc2,btemp+10
 12525  01312A  006F FF78  F031    	movff	postinc2,btemp+11
 12526  013130  502E               	movf	(btemp+8)^0,w,c
 12527  013132  6E36               	movwf	(btemp+16)^0,c
 12528  013134  502F               	movf	(btemp+9)^0,w,c
 12529  013136  6E37               	movwf	(btemp+17)^0,c
 12530  013138  5030               	movf	(btemp+10)^0,w,c
 12531  01313A  6E38               	movwf	(btemp+18)^0,c
 12532  01313C  5031               	movf	(btemp+11)^0,w,c
 12533  01313E  6E39               	movwf	(btemp+19)^0,c
 12534  013140  D714               	goto	L9
 12535  013142                     l12301:
 12536                           
 12537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 12538                           ;stkvar	_fmt @ sp[(-32)+-4]
 12539  013142  0EDC               	movlw	-36
 12540  013144  006F FF8F FFD9     	movff	plusw1,fsr2l
 12541  01314A  0EDD               	movlw	-35
 12542  01314C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12543  013152  006F FF7B FFF6     	movff	postinc2,tblptrl
 12544  013158  006F FF77 FFF7     	movff	postdec2,tblptrh
 12545  01315E                     	if	0	;tblptru may be non-zero
 12546  01315E                     	endif
 12547  01315E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12548  01315E  0E00               	movlw	low (__mediumconst shr (0+16))
 12549  013160  6EF8               	movwf	tblptru,c
 12550  013162                     	endif
 12551  013162  0008               	tblrd		*
 12552  013164  50F5               	movf	tablat,w,c
 12553  013166  0A25               	xorlw	37
 12554  013168  A4D8               	btfss	status,2,c
 12555  01316A  D01A               	goto	l12311
 12556                           
 12557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 12558                           ;stkvar	_fmt @ sp[(-32)+-4]
 12559  01316C  0EDC               	movlw	-36
 12560  01316E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12561  013174  0EDD               	movlw	-35
 12562  013176  006F FF8F FFDA     	movff	plusw1,fsr2h
 12563  01317C  2ADE               	incf	postinc2,f,c
 12564  01317E  0E00               	movlw	0
 12565  013180  22DD               	addwfc	postdec2,f,c
 12566                           
 12567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 12568                           ;stkvar	_fp @ sp[(-32)+-2]
 12569  013182  0EDE               	movlw	-34
 12570  013184  006F FF8F FFE6     	movff	plusw1,postinc1
 12571  01318A  006F FF8F FFE6     	movff	plusw1,postinc1
 12572  013190  0E25               	movlw	37
 12573  013192  6EE6               	movwf	postinc1,c
 12574  013194  0E00               	movlw	0
 12575  013196  6EE6               	movwf	postinc1,c
 12576  013198  EC57  F0C7         	call	_fputc	;wreg free
 12577  01319C                     l12307:
 12578                           
 12579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 12580  01319C  0E01               	movlw	1
 12581  01319E  D00C               	goto	L10
 12582  0131A0                     l12311:
 12583                           
 12584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 12585                           ;stkvar	_fmt @ sp[(-32)+-4]
 12586  0131A0  0EDC               	movlw	-36
 12587  0131A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12588  0131A8  0EDD               	movlw	-35
 12589  0131AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12590  0131B0  2ADE               	incf	postinc2,f,c
 12591  0131B2  0E00               	movlw	0
 12592  0131B4  22DD               	addwfc	postdec2,f,c
 12593                           
 12594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 12595  0131B6  0E00               	movlw	0
 12596  0131B8                     L10:
 12597  0131B8  6E26               	movwf	btemp^0,c
 12598  0131BA  0E00               	movlw	0
 12599  0131BC  6E27               	movwf	(btemp+1)^0,c
 12600  0131BE  D02A               	goto	l2347
 12601  0131C0                     l12317:
 12602                           
 12603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 12604                           ;stkvar	_fp @ sp[(-32)+-2]
 12605  0131C0  0EDE               	movlw	-34
 12606  0131C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12607  0131C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12608                           
 12609                           ;stkvar	_fmt @ sp[(-34)+-4]
 12610  0131CE  0EDA               	movlw	-38
 12611  0131D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12612  0131D6  0EDB               	movlw	-37
 12613  0131D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12614  0131DE  006F FF7B FFF6     	movff	postinc2,tblptrl
 12615  0131E4  006F FF77 FFF7     	movff	postdec2,tblptrh
 12616  0131EA                     	if	0	;tblptru may be non-zero
 12617  0131EA                     	endif
 12618  0131EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12619  0131EA  0E00               	movlw	low (__mediumconst shr (0+16))
 12620  0131EC  6EF8               	movwf	tblptru,c
 12621  0131EE                     	endif
 12622  0131EE  0008               	tblrd		*
 12623  0131F0  50F5               	movf	tablat,w,c
 12624  0131F2  6EE6               	movwf	postinc1,c
 12625  0131F4  0E00               	movlw	0
 12626  0131F6  6EE6               	movwf	postinc1,c
 12627  0131F8  EC57  F0C7         	call	_fputc	;wreg free
 12628                           
 12629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 12630                           ;stkvar	_fmt @ sp[(-32)+-4]
 12631  0131FC  0EDC               	movlw	-36
 12632  0131FE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12633  013204  0EDD               	movlw	-35
 12634  013206  006F FF8F FFDA     	movff	plusw1,fsr2h
 12635  01320C  2ADE               	incf	postinc2,f,c
 12636  01320E  0E00               	movlw	0
 12637  013210  22DD               	addwfc	postdec2,f,c
 12638  013212  D7C4               	goto	l12307
 12639  013214                     l2347:
 12640                           
 12641                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 12642  013214  0EDA               	movlw	218
 12643  013216  26E1               	addwf	fsr1l,f,c
 12644  013218  0EFF               	movlw	255
 12645  01321A  22E2               	addwfc	fsr1h,f,c
 12646  01321C  0012               	return		;funcret
 12647  01321E                     __end_of_vfpfcnvrt:
 12648                           	opt callstack 0
 12649                           
 12650 ;; *************** function _xtoa *****************
 12651 ;; Defined at:
 12652 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12653 ;; Parameters:    Size  Location     Type
 12654 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12655 ;;		 -> f(6), NULL(0), 
 12656 ;;  d               8  [STACK] unsigned long long 
 12657 ;;  x               1  [STACK] unsigned char 
 12658 ;; Auto vars:     Size  Location     Type
 12659 ;;  n               8  [STACK] unsigned long long 
 12660 ;;  c               2  [STACK] int 
 12661 ;;  i               2  [STACK] int 
 12662 ;;  w               2  [STACK] int 
 12663 ;;  p               2  [STACK] int 
 12664 ;; Return value:  Size  Location     Type
 12665 ;;                  2  [STACK] int 
 12666 ;; Registers used:
 12667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12668 ;; Tracked objects:
 12669 ;;		On entry : 0/0
 12670 ;;		On exit  : 0/0
 12671 ;;		Unchanged: 0/0
 12672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12677 ;;Total ram usage:        0 bytes
 12678 ;; Hardware stack levels used:    1
 12679 ;; Hardware stack levels required when called:   20
 12680 ;; This function calls:
 12681 ;;		_isalpha
 12682 ;;		_isupper
 12683 ;;		_pad
 12684 ;;		_toupper
 12685 ;; This function is called by:
 12686 ;;		_vfpfcnvrt
 12687 ;; This function uses a reentrant model
 12688 ;;
 12689                           
 12690                           	psect	text46
 12691  0157EC                     __ptext46:
 12692                           	opt callstack 0
 12693  0157EC                     _xtoa:
 12694                           	opt callstack 0
 12695                           
 12696                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12697  0157EC  0E14               	movlw	20
 12698  0157EE  26E1               	addwf	fsr1l,f,c
 12699  0157F0  0E00               	movlw	0
 12700  0157F2  22E2               	addwfc	fsr1h,f,c
 12701                           
 12702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 12703                           
 12704                           ;incstack = 0
 12705 ;; hardware stack exceeded
 12706  0157F4  AE0D               	btfss	(_prec+1)^0,7,c
 12707                           
 12708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 12709  0157F6  920E               	bcf	_flags^0,1,c
 12710                           
 12711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 12712  0157F8  BE0D               	btfsc	(_prec+1)^0,7,c
 12713  0157FA  D005               	goto	u11460
 12714  0157FC  500D               	movf	(_prec+1)^0,w,c
 12715  0157FE  E110               	bnz	l12041
 12716  015800  040C               	decf	_prec^0,w,c
 12717  015802  B0D8               	btfsc	status,0,c
 12718  015804  D00D               	goto	l12041
 12719  015806                     u11460:
 12720  015806  0E01               	movlw	1
 12721  015808  6E30               	movwf	(btemp+10)^0,c
 12722  01580A  0E00               	movlw	0
 12723  01580C  6E31               	movwf	(btemp+11)^0,c
 12724                           
 12725                           ;stkvar	_p @ sp[(-20)+18]
 12726  01580E  0EFE               	movlw	-2
 12727  015810  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12728  015816  0EFF               	movlw	-1
 12729  015818  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12730  01581E  D008               	goto	l2297
 12731  015820                     l12041:
 12732                           
 12733                           ;stkvar	_p @ sp[(-20)+18]
 12734  015820  0EFE               	movlw	-2
 12735  015822  0060  F033  FFE3   	movff	_prec,plusw1
 12736  015828  0EFF               	movlw	-1
 12737  01582A  0060  F037  FFE3   	movff	_prec+1,plusw1
 12738  015830                     l2297:
 12739                           
 12740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 12741                           ;stkvar	_w @ sp[(-20)+16]
 12742  015830  0EFC               	movlw	-4
 12743  015832  0060  F02B  FFE3   	movff	_width,plusw1
 12744  015838  0EFD               	movlw	-3
 12745  01583A  0060  F02F  FFE3   	movff	_width+1,plusw1
 12746                           
 12747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 12748  015840  A80E               	btfss	_flags^0,4,c
 12749  015842  D00B               	goto	l12047
 12750                           
 12751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 12752                           ;stkvar	_w @ sp[(-20)+16]
 12753  015844  50E1               	movf	fsr1l,w,c
 12754  015846  0FFC               	addlw	-4
 12755  015848  6ED9               	movwf	fsr2l,c
 12756  01584A  50E2               	movf	fsr1h,w,c
 12757  01584C  6EDA               	movwf	fsr2h,c
 12758  01584E  0EFF               	movlw	255
 12759  015850  22DA               	addwfc	fsr2h,f,c
 12760  015852  0EFE               	movlw	254
 12761  015854  26DE               	addwf	postinc2,f,c
 12762  015856  0EFF               	movlw	255
 12763  015858  22DD               	addwfc	postdec2,f,c
 12764  01585A                     l12047:
 12765                           
 12766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 12767                           ;stkvar	_d @ sp[(-20)+-10]
 12768  01585A  0EE2               	movlw	226
 12769  01585C  24E1               	addwf	fsr1l,w,c
 12770  01585E  6ED9               	movwf	fsr2l,c
 12771  015860  0EFF               	movlw	255
 12772  015862  20E2               	addwfc	fsr1h,w,c
 12773  015864  6EDA               	movwf	fsr2h,c
 12774                           
 12775                           ;stkvar	_n @ sp[(-20)+4]
 12776  015866  0E08               	movlw	8
 12777  015868  6E26               	movwf	btemp^0,c
 12778  01586A  0EF0               	movlw	-16
 12779  01586C                     us1148999:
 12780  01586C  006F FF7B FFE3     	movff	postinc2,plusw1
 12781  015872  28E8               	incf	wreg,w,c
 12782  015874  2E26               	decfsz	btemp^0,f,c
 12783  015876  D7FA               	bra	us1148999
 12784                           
 12785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 12786  015878  0E4F               	movlw	79
 12787  01587A  6E30               	movwf	(btemp+10)^0,c
 12788  01587C  0E00               	movlw	0
 12789  01587E  6E31               	movwf	(btemp+11)^0,c
 12790                           
 12791                           ;stkvar	_i @ sp[(-20)+14]
 12792  015880  0EFA               	movlw	-6
 12793  015882  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12794  015888  0EFB               	movlw	-5
 12795  01588A  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12796                           
 12797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 12798  015890  0103               	movlb	3	; () banked
 12799  015892  6BFD               	clrf	(_dbuf+79)& (0+255),b
 12800                           
 12801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12802  015894  D0EE               	goto	l12085
 12803  015896                     l12053:
 12804                           
 12805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 12806                           ;stkvar	_i @ sp[(-20)+14]
 12807  015896  50E1               	movf	fsr1l,w,c
 12808  015898  0FFA               	addlw	-6
 12809  01589A  6ED9               	movwf	fsr2l,c
 12810  01589C  50E2               	movf	fsr1h,w,c
 12811  01589E  6EDA               	movwf	fsr2h,c
 12812  0158A0  0EFF               	movlw	255
 12813  0158A2  22DA               	addwfc	fsr2h,f,c
 12814  0158A4  06DE               	decf	postinc2,f,c
 12815  0158A6  0E00               	movlw	0
 12816  0158A8  5ADD               	subwfb	postdec2,f,c
 12817                           
 12818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 12819                           ;stkvar	_n @ sp[(-20)+4]
 12820  0158AA  0EF0               	movlw	-16
 12821  0158AC  006F FF8C  F030    	movff	plusw1,btemp+10
 12822  0158B2  0EF1               	movlw	-15
 12823  0158B4  006F FF8C  F031    	movff	plusw1,btemp+11
 12824  0158BA  0E0F               	movlw	15
 12825  0158BC  1630               	andwf	(btemp+10)^0,f,c
 12826  0158BE  0E00               	movlw	0
 12827  0158C0  1631               	andwf	(btemp+11)^0,f,c
 12828                           
 12829                           ;stkvar	_c @ sp[(-20)+12]
 12830  0158C2  0EF8               	movlw	-8
 12831  0158C4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12832  0158CA  0EF9               	movlw	-7
 12833  0158CC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12834                           
 12835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 12836                           ;stkvar	_c @ sp[(-20)+12]
 12837  0158D2  0EF9               	movlw	-7
 12838  0158D4  BEE3               	btfsc	plusw1,7,c
 12839  0158D6  D00F               	goto	l12061
 12840  0158D8  0EF9               	movlw	-7
 12841  0158DA  50E3               	movf	plusw1,w,c
 12842  0158DC  E108               	bnz	u11490
 12843  0158DE  0EF8               	movlw	-8
 12844  0158E0  006F FF8C  F026    	movff	plusw1,btemp
 12845  0158E6  0E0A               	movlw	10
 12846  0158E8  5E26               	subwf	btemp^0,f,c
 12847  0158EA  A0D8               	btfss	status,0,c
 12848  0158EC  D004               	goto	l12061
 12849  0158EE                     u11490:
 12850                           
 12851                           ;stkvar	_c @ sp[(-20)+12]
 12852  0158EE  0EF8               	movlw	-8
 12853  0158F0  50E3               	movf	plusw1,w,c
 12854  0158F2  0F57               	addlw	87
 12855  0158F4  D003               	goto	L11
 12856  0158F6                     l12061:
 12857                           
 12858                           ;stkvar	_c @ sp[(-20)+12]
 12859  0158F6  0EF8               	movlw	-8
 12860  0158F8  50E3               	movf	plusw1,w,c
 12861  0158FA  0F30               	addlw	48
 12862  0158FC                     L11:
 12863  0158FC  6E30               	movwf	(btemp+10)^0,c
 12864  0158FE  0EF9               	movlw	-7
 12865  015900  006F FF8C  F031    	movff	plusw1,btemp+11
 12866  015906  0E00               	movlw	0
 12867  015908  2231               	addwfc	(btemp+11)^0,f,c
 12868                           
 12869                           ;stkvar	_c @ sp[(-20)+12]
 12870  01590A  0EF8               	movlw	-8
 12871  01590C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12872  015912  0EF9               	movlw	-7
 12873  015914  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12874  01591A  0EBF               	movlw	191
 12875  01591C  6E30               	movwf	(btemp+10)^0,c
 12876  01591E  0EFF               	movlw	255
 12877  015920  6E31               	movwf	(btemp+11)^0,c
 12878                           
 12879                           ;stkvar	_x @ sp[(-20)+-11]
 12880  015922  0EE1               	movlw	-31
 12881  015924  50E3               	movf	plusw1,w,c
 12882  015926  6E2E               	movwf	(btemp+8)^0,c
 12883  015928  6A2F               	clrf	(btemp+9)^0,c
 12884  01592A  5030               	movf	(btemp+10)^0,w,c
 12885  01592C  262E               	addwf	(btemp+8)^0,f,c
 12886  01592E  5031               	movf	(btemp+11)^0,w,c
 12887  015930  222F               	addwfc	(btemp+9)^0,f,c
 12888  015932  502F               	movf	(btemp+9)^0,w,c
 12889  015934  E106               	bnz	u11500
 12890  015936  0E1A               	movlw	26
 12891  015938  5C2E               	subwf	(btemp+8)^0,w,c
 12892  01593A  B0D8               	btfsc	status,0,c
 12893  01593C  D002               	goto	u11500
 12894  01593E  0E01               	movlw	1
 12895  015940  D001               	goto	u11510
 12896  015942                     u11500:
 12897  015942  0E00               	movlw	0
 12898  015944                     u11510:
 12899  015944  6E30               	movwf	(btemp+10)^0,c
 12900  015946  6A31               	clrf	(btemp+11)^0,c
 12901                           
 12902                           ;stkvar	_xtoa$5445 @ sp[(-20)+2]
 12903  015948  0EEE               	movlw	-18
 12904  01594A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12905  015950  0EEF               	movlw	-17
 12906  015952  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12907                           
 12908                           ;stkvar	_xtoa$5445 @ sp[(-20)+2]
 12909  015958  0EEE               	movlw	-18
 12910  01595A  006F FF8C  F026    	movff	plusw1,btemp
 12911  015960  0EEF               	movlw	-17
 12912  015962  50E3               	movf	plusw1,w,c
 12913  015964  1026               	iorwf	btemp^0,w,c
 12914  015966  B4D8               	btfsc	status,2,c
 12915  015968  D041               	goto	l12077
 12916  01596A  0E9F               	movlw	159
 12917  01596C  6E30               	movwf	(btemp+10)^0,c
 12918  01596E  0EFF               	movlw	255
 12919  015970  6E31               	movwf	(btemp+11)^0,c
 12920                           
 12921                           ;stkvar	_c @ sp[(-20)+12]
 12922  015972  0EF8               	movlw	-8
 12923  015974  006F FF8C  F02E    	movff	plusw1,btemp+8
 12924  01597A  0EF9               	movlw	-7
 12925  01597C  006F FF8C  F02F    	movff	plusw1,btemp+9
 12926  015982  0E20               	movlw	32
 12927  015984  122E               	iorwf	(btemp+8)^0,f,c
 12928  015986  0E00               	movlw	0
 12929  015988  122F               	iorwf	(btemp+9)^0,f,c
 12930  01598A  5030               	movf	(btemp+10)^0,w,c
 12931  01598C  262E               	addwf	(btemp+8)^0,f,c
 12932  01598E  5031               	movf	(btemp+11)^0,w,c
 12933  015990  222F               	addwfc	(btemp+9)^0,f,c
 12934  015992  502F               	movf	(btemp+9)^0,w,c
 12935  015994  E106               	bnz	u11530
 12936  015996  0E1A               	movlw	26
 12937  015998  5C2E               	subwf	(btemp+8)^0,w,c
 12938  01599A  B0D8               	btfsc	status,0,c
 12939  01599C  D002               	goto	u11530
 12940  01599E  0E01               	movlw	1
 12941  0159A0  D001               	goto	u11540
 12942  0159A2                     u11530:
 12943  0159A2  0E00               	movlw	0
 12944  0159A4                     u11540:
 12945  0159A4  6E30               	movwf	(btemp+10)^0,c
 12946  0159A6  6A31               	clrf	(btemp+11)^0,c
 12947                           
 12948                           ;stkvar	_xtoa$5446 @ sp[(-20)+0]
 12949  0159A8  0EEC               	movlw	-20
 12950  0159AA  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 12951  0159B0  0EED               	movlw	-19
 12952  0159B2  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 12953                           
 12954                           ;stkvar	_xtoa$5446 @ sp[(-20)+0]
 12955  0159B8  0EEC               	movlw	-20
 12956  0159BA  006F FF8C  F026    	movff	plusw1,btemp
 12957  0159C0  0EED               	movlw	-19
 12958  0159C2  50E3               	movf	plusw1,w,c
 12959  0159C4  1026               	iorwf	btemp^0,w,c
 12960  0159C6  B4D8               	btfsc	status,2,c
 12961  0159C8  D011               	goto	l12077
 12962                           
 12963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 12964                           ;stkvar	_c @ sp[(-20)+12]
 12965  0159CA  0EF8               	movlw	-8
 12966  0159CC  006F FF8F FFE6     	movff	plusw1,postinc1
 12967  0159D2  006F FF8F FFE6     	movff	plusw1,postinc1
 12968  0159D8  EC2C  F0D2         	call	_toupper	;wreg free
 12969                           
 12970                           ;stkvar	_c @ sp[(-20)+12]
 12971  0159DC  0EF8               	movlw	-8
 12972  0159DE  0060  F09B  FFE3   	movff	btemp,plusw1
 12973  0159E4  0EF9               	movlw	-7
 12974  0159E6  0060  F09F  FFE3   	movff	btemp+1,plusw1
 12975  0159EC                     l12077:
 12976                           
 12977                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 12978                           ;stkvar	_c @ sp[(-20)+12]
 12979                           ;stkvar	_i @ sp[(-20)+14]
 12980  0159EC  0EFA               	movlw	-6
 12981  0159EE  006F FF8C  F030    	movff	plusw1,btemp+10
 12982  0159F4  0EFB               	movlw	-5
 12983  0159F6  006F FF8C  F031    	movff	plusw1,btemp+11
 12984  0159FC  0EAE               	movlw	low _dbuf
 12985  0159FE  2430               	addwf	(btemp+10)^0,w,c
 12986  015A00  6ED9               	movwf	fsr2l,c
 12987  015A02  0E03               	movlw	high _dbuf
 12988  015A04  2031               	addwfc	(btemp+11)^0,w,c
 12989  015A06  6EDA               	movwf	fsr2h,c
 12990  015A08  0EF8               	movlw	-8
 12991  015A0A  006F FF8F FFDF     	movff	plusw1,indf2
 12992                           
 12993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 12994                           ;stkvar	_p @ sp[(-20)+18]
 12995  015A10  50E1               	movf	fsr1l,w,c
 12996  015A12  0FFE               	addlw	-2
 12997  015A14  6ED9               	movwf	fsr2l,c
 12998  015A16  50E2               	movf	fsr1h,w,c
 12999  015A18  6EDA               	movwf	fsr2h,c
 13000  015A1A  0EFF               	movlw	255
 13001  015A1C  22DA               	addwfc	fsr2h,f,c
 13002  015A1E  06DE               	decf	postinc2,f,c
 13003  015A20  0E00               	movlw	0
 13004  015A22  5ADD               	subwfb	postdec2,f,c
 13005                           
 13006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 13007                           ;stkvar	_w @ sp[(-20)+16]
 13008  015A24  50E1               	movf	fsr1l,w,c
 13009  015A26  0FFC               	addlw	-4
 13010  015A28  6ED9               	movwf	fsr2l,c
 13011  015A2A  50E2               	movf	fsr1h,w,c
 13012  015A2C  6EDA               	movwf	fsr2h,c
 13013  015A2E  0EFF               	movlw	255
 13014  015A30  22DA               	addwfc	fsr2h,f,c
 13015  015A32  06DE               	decf	postinc2,f,c
 13016  015A34  0E00               	movlw	0
 13017  015A36  5ADD               	subwfb	postdec2,f,c
 13018                           
 13019                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 13020  015A38  0E04               	movlw	4
 13021  015A3A  6E31               	movwf	(btemp+11)^0,c
 13022                           
 13023                           ;stkvar	_n @ sp[(-20)+4]
 13024  015A3C  50E1               	movf	fsr1l,w,c
 13025  015A3E  0FF0               	addlw	-16
 13026  015A40  6ED9               	movwf	fsr2l,c
 13027  015A42  50E2               	movf	fsr1h,w,c
 13028  015A44  6EDA               	movwf	fsr2h,c
 13029  015A46  0EFF               	movlw	255
 13030  015A48  22DA               	addwfc	fsr2h,f,c
 13031  015A4A  2831               	incf	(btemp+11)^0,w,c
 13032  015A4C  52DE               	movf	postinc2,f,c
 13033  015A4E  D00F               	goto	u11560
 13034  015A50                     u11565:
 13035  015A50  52DE               	movf	postinc2,f,c
 13036  015A52  52DE               	movf	postinc2,f,c
 13037  015A54  52DE               	movf	postinc2,f,c
 13038  015A56  52DE               	movf	postinc2,f,c
 13039  015A58  52DE               	movf	postinc2,f,c
 13040  015A5A  52DE               	movf	postinc2,f,c
 13041  015A5C  90D8               	bcf	status,0,c
 13042  015A5E  32DD               	rrcf	postdec2,f,c
 13043  015A60  32DD               	rrcf	postdec2,f,c
 13044  015A62  32DD               	rrcf	postdec2,f,c
 13045  015A64  32DD               	rrcf	postdec2,f,c
 13046  015A66  32DD               	rrcf	postdec2,f,c
 13047  015A68  32DD               	rrcf	postdec2,f,c
 13048  015A6A  32DD               	rrcf	postdec2,f,c
 13049  015A6C  32DE               	rrcf	postinc2,f,c
 13050  015A6E                     u11560:
 13051  015A6E  2EE8               	decfsz	wreg,f,c
 13052  015A70  D7EF               	goto	u11565
 13053  015A72                     l12085:
 13054                           
 13055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13056                           ;stkvar	_i @ sp[(-20)+14]
 13057  015A72  0EFB               	movlw	-5
 13058  015A74  BEE3               	btfsc	plusw1,7,c
 13059  015A76  D03A               	goto	u11610
 13060  015A78  0EFB               	movlw	-5
 13061  015A7A  50E3               	movf	plusw1,w,c
 13062  015A7C  E108               	bnz	u11570
 13063  015A7E  0EFA               	movlw	-6
 13064  015A80  006F FF8C  F026    	movff	plusw1,btemp
 13065  015A86  0E02               	movlw	2
 13066  015A88  5E26               	subwf	btemp^0,f,c
 13067  015A8A  A0D8               	btfss	status,0,c
 13068  015A8C  D02F               	goto	u11610
 13069  015A8E                     u11570:
 13070                           
 13071                           ;stkvar	_n @ sp[(-20)+4]
 13072  015A8E  0EF0               	movlw	-16
 13073  015A90  50E3               	movf	plusw1,w,c
 13074  015A92  E115               	bnz	u11581
 13075  015A94  0EF1               	movlw	-15
 13076  015A96  50E3               	movf	plusw1,w,c
 13077  015A98  E112               	bnz	u11581
 13078  015A9A  0EF2               	movlw	-14
 13079  015A9C  50E3               	movf	plusw1,w,c
 13080  015A9E  E10F               	bnz	u11581
 13081  015AA0  0EF3               	movlw	-13
 13082  015AA2  50E3               	movf	plusw1,w,c
 13083  015AA4  E10C               	bnz	u11581
 13084  015AA6  0EF4               	movlw	-12
 13085  015AA8  50E3               	movf	plusw1,w,c
 13086  015AAA  E109               	bnz	u11581
 13087  015AAC  0EF5               	movlw	-11
 13088  015AAE  50E3               	movf	plusw1,w,c
 13089  015AB0  E106               	bnz	u11581
 13090  015AB2  0EF6               	movlw	-10
 13091  015AB4  50E3               	movf	plusw1,w,c
 13092  015AB6  E103               	bnz	u11581
 13093  015AB8  0EF7               	movlw	-9
 13094  015ABA  50E3               	movf	plusw1,w,c
 13095  015ABC  A4D8               	btfss	status,2,c
 13096  015ABE                     u11581:
 13097  015ABE  D6EB               	goto	l12053
 13098                           
 13099                           ;stkvar	_p @ sp[(-20)+18]
 13100  015AC0  0EFF               	movlw	-1
 13101  015AC2  BEE3               	btfsc	plusw1,7,c
 13102  015AC4  D007               	goto	u11590
 13103  015AC6  0EFF               	movlw	-1
 13104  015AC8  50E3               	movf	plusw1,w,c
 13105  015ACA  E103               	bnz	u11591
 13106  015ACC  0EFE               	movlw	-2
 13107  015ACE  04E3               	decf	plusw1,w,c
 13108  015AD0  B0D8               	btfsc	status,0,c
 13109  015AD2                     u11591:
 13110  015AD2  D6E1               	goto	l12053
 13111  015AD4                     u11590:
 13112                           
 13113                           ;stkvar	_w @ sp[(-20)+16]
 13114  015AD4  0EFD               	movlw	-3
 13115  015AD6  BEE3               	btfsc	plusw1,7,c
 13116  015AD8  D009               	goto	u11610
 13117  015ADA  0EFD               	movlw	-3
 13118  015ADC  50E3               	movf	plusw1,w,c
 13119  015ADE  E104               	bnz	u11600
 13120  015AE0  0EFC               	movlw	-4
 13121  015AE2  04E3               	decf	plusw1,w,c
 13122  015AE4  A0D8               	btfss	status,0,c
 13123  015AE6  D002               	goto	u11610
 13124  015AE8                     u11600:
 13125  015AE8  B20E               	btfsc	_flags^0,1,c
 13126  015AEA  D6D5               	goto	l12053
 13127  015AEC                     u11610:
 13128                           
 13129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 13130  015AEC  A80E               	btfss	_flags^0,4,c
 13131  015AEE  D036               	goto	l12101
 13132                           
 13133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 13134                           ;stkvar	_i @ sp[(-20)+14]
 13135  015AF0  50E1               	movf	fsr1l,w,c
 13136  015AF2  0FFA               	addlw	-6
 13137  015AF4  6ED9               	movwf	fsr2l,c
 13138  015AF6  50E2               	movf	fsr1h,w,c
 13139  015AF8  6EDA               	movwf	fsr2h,c
 13140  015AFA  0EFF               	movlw	255
 13141  015AFC  22DA               	addwfc	fsr2h,f,c
 13142  015AFE  06DE               	decf	postinc2,f,c
 13143  015B00  0E00               	movlw	0
 13144  015B02  5ADD               	subwfb	postdec2,f,c
 13145                           
 13146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 13147                           ;stkvar	_x @ sp[(-20)+-11]
 13148                           ;stkvar	_i @ sp[(-20)+14]
 13149  015B04  0EFA               	movlw	-6
 13150  015B06  006F FF8C  F030    	movff	plusw1,btemp+10
 13151  015B0C  0EFB               	movlw	-5
 13152  015B0E  006F FF8C  F031    	movff	plusw1,btemp+11
 13153  015B14  0EAE               	movlw	low _dbuf
 13154  015B16  2430               	addwf	(btemp+10)^0,w,c
 13155  015B18  6ED9               	movwf	fsr2l,c
 13156  015B1A  0E03               	movlw	high _dbuf
 13157  015B1C  2031               	addwfc	(btemp+11)^0,w,c
 13158  015B1E  6EDA               	movwf	fsr2h,c
 13159  015B20  0EE1               	movlw	-31
 13160  015B22  006F FF8F FFDF     	movff	plusw1,indf2
 13161                           
 13162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 13163                           ;stkvar	_i @ sp[(-20)+14]
 13164  015B28  50E1               	movf	fsr1l,w,c
 13165  015B2A  0FFA               	addlw	-6
 13166  015B2C  6ED9               	movwf	fsr2l,c
 13167  015B2E  50E2               	movf	fsr1h,w,c
 13168  015B30  6EDA               	movwf	fsr2h,c
 13169  015B32  0EFF               	movlw	255
 13170  015B34  22DA               	addwfc	fsr2h,f,c
 13171  015B36  06DE               	decf	postinc2,f,c
 13172  015B38  0E00               	movlw	0
 13173  015B3A  5ADD               	subwfb	postdec2,f,c
 13174                           
 13175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 13176                           ;stkvar	_i @ sp[(-20)+14]
 13177  015B3C  0EFA               	movlw	-6
 13178  015B3E  006F FF8C  F030    	movff	plusw1,btemp+10
 13179  015B44  0EFB               	movlw	-5
 13180  015B46  006F FF8C  F031    	movff	plusw1,btemp+11
 13181  015B4C  0EAE               	movlw	low _dbuf
 13182  015B4E  2430               	addwf	(btemp+10)^0,w,c
 13183  015B50  6ED9               	movwf	fsr2l,c
 13184  015B52  0E03               	movlw	high _dbuf
 13185  015B54  2031               	addwfc	(btemp+11)^0,w,c
 13186  015B56  6EDA               	movwf	fsr2h,c
 13187  015B58  0E30               	movlw	48
 13188  015B5A  6EDF               	movwf	indf2,c
 13189  015B5C                     l12101:
 13190                           
 13191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 13192                           ;stkvar	_w @ sp[(-20)+16]
 13193  015B5C  0EFC               	movlw	-4
 13194  015B5E  006F FF8F FFE6     	movff	plusw1,postinc1
 13195  015B64  006F FF8F FFE6     	movff	plusw1,postinc1
 13196                           
 13197                           ;stkvar	_i @ sp[(-22)+14]
 13198  015B6A  0EAE               	movlw	low _dbuf
 13199  015B6C  6E30               	movwf	(btemp+10)^0,c
 13200  015B6E  0E03               	movlw	high _dbuf
 13201  015B70  6E31               	movwf	(btemp+11)^0,c
 13202  015B72  0EF8               	movlw	-8
 13203  015B74  50E3               	movf	plusw1,w,c
 13204  015B76  2630               	addwf	(btemp+10)^0,f,c
 13205  015B78  0EF9               	movlw	-7
 13206  015B7A  50E3               	movf	plusw1,w,c
 13207  015B7C  2231               	addwfc	(btemp+11)^0,f,c
 13208  015B7E  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 13209  015B84  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 13210                           
 13211                           ;stkvar	_fp @ sp[(-24)+-2]
 13212  015B8A  0EE6               	movlw	-26
 13213  015B8C  006F FF8F FFE6     	movff	plusw1,postinc1
 13214  015B92  006F FF8F FFE6     	movff	plusw1,postinc1
 13215  015B98  EC75  F0C8         	call	_pad	;wreg free
 13216                           
 13217                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 13218  015B9C  0EE1               	movlw	225
 13219  015B9E  26E1               	addwf	fsr1l,f,c
 13220  015BA0  0EFF               	movlw	255
 13221  015BA2  22E2               	addwfc	fsr1h,f,c
 13222  015BA4  0012               	return		;funcret
 13223  015BA6                     __end_of_xtoa:
 13224                           	opt callstack 0
 13225                           
 13226 ;; *************** function _toupper *****************
 13227 ;; Defined at:
 13228 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 13229 ;; Parameters:    Size  Location     Type
 13230 ;;  c               2  [STACK] int 
 13231 ;; Auto vars:     Size  Location     Type
 13232 ;;		None
 13233 ;; Return value:  Size  Location     Type
 13234 ;;                  2  [STACK] int 
 13235 ;; Registers used:
 13236 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13237 ;; Tracked objects:
 13238 ;;		On entry : 0/3
 13239 ;;		On exit  : 0/0
 13240 ;;		Unchanged: 0/0
 13241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13246 ;;Total ram usage:        0 bytes
 13247 ;; Hardware stack levels used:    1
 13248 ;; Hardware stack levels required when called:   16
 13249 ;; This function calls:
 13250 ;;		_islower
 13251 ;; This function is called by:
 13252 ;;		_xtoa
 13253 ;; This function uses a reentrant model
 13254 ;;
 13255                           
 13256                           	psect	text47
 13257  01A458                     __ptext47:
 13258                           	opt callstack 0
 13259  01A458                     _toupper:
 13260                           	opt callstack 0
 13261                           
 13262                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13263  01A458  52E6               	movf	postinc1,f,c
 13264  01A45A  52E6               	movf	postinc1,f,c
 13265                           
 13266                           ;stkvar	_c @ sp[(-2)+-2]
 13267                           
 13268                           ;incstack = 0
 13269 ;; hardware stack exceeded
 13270  01A45C  0EFC               	movlw	-4
 13271  01A45E  50E3               	movf	plusw1,w,c
 13272  01A460  0F9F               	addlw	159
 13273  01A462  6E30               	movwf	(btemp+10)^0,c
 13274  01A464  0EFD               	movlw	-3
 13275  01A466  006F FF8C  F031    	movff	plusw1,btemp+11
 13276  01A46C  0EFF               	movlw	255
 13277  01A46E  2231               	addwfc	(btemp+11)^0,f,c
 13278  01A470  5031               	movf	(btemp+11)^0,w,c
 13279  01A472  E106               	bnz	u6050
 13280  01A474  0E1A               	movlw	26
 13281  01A476  5C30               	subwf	(btemp+10)^0,w,c
 13282  01A478  B0D8               	btfsc	status,0,c
 13283  01A47A  D002               	goto	u6050
 13284  01A47C  0E01               	movlw	1
 13285  01A47E  D001               	goto	u6060
 13286  01A480                     u6050:
 13287  01A480  0E00               	movlw	0
 13288  01A482                     u6060:
 13289  01A482  6E30               	movwf	(btemp+10)^0,c
 13290  01A484  6A31               	clrf	(btemp+11)^0,c
 13291                           
 13292                           ;stkvar	_toupper$6252 @ sp[(-2)+0]
 13293  01A486  0EFE               	movlw	-2
 13294  01A488  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 13295  01A48E  0EFF               	movlw	-1
 13296  01A490  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 13297                           
 13298                           ;stkvar	_toupper$6252 @ sp[(-2)+0]
 13299  01A496  0EFE               	movlw	-2
 13300  01A498  006F FF8C  F026    	movff	plusw1,btemp
 13301  01A49E  0EFF               	movlw	-1
 13302  01A4A0  50E3               	movf	plusw1,w,c
 13303  01A4A2  1026               	iorwf	btemp^0,w,c
 13304  01A4A4  B4D8               	btfsc	status,2,c
 13305  01A4A6  D00D               	goto	l7903
 13306                           
 13307                           ;stkvar	_c @ sp[(-2)+-2]
 13308  01A4A8  0EFC               	movlw	-4
 13309  01A4AA  006F FF8C  F026    	movff	plusw1,btemp
 13310  01A4B0  0EFD               	movlw	-3
 13311  01A4B2  006F FF8C  F027    	movff	plusw1,btemp+1
 13312  01A4B8  0E5F               	movlw	95
 13313  01A4BA  1626               	andwf	btemp^0,f,c
 13314  01A4BC  0E00               	movlw	0
 13315  01A4BE  1627               	andwf	(btemp+1)^0,f,c
 13316  01A4C0  D008               	goto	l3464
 13317  01A4C2                     l7903:
 13318                           
 13319                           ;stkvar	_c @ sp[(-2)+-2]
 13320  01A4C2  0EFC               	movlw	-4
 13321  01A4C4  006F FF8C  F026    	movff	plusw1,btemp
 13322  01A4CA  0EFD               	movlw	-3
 13323  01A4CC  006F FF8C  F027    	movff	plusw1,btemp+1
 13324  01A4D2                     l3464:
 13325                           
 13326                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13327  01A4D2  52E5               	movf	postdec1,f,c
 13328  01A4D4  52E5               	movf	postdec1,f,c
 13329  01A4D6  52E5               	movf	postdec1,f,c
 13330  01A4D8  52E5               	movf	postdec1,f,c
 13331  01A4DA  0012               	return		;funcret
 13332  01A4DC                     __end_of_toupper:
 13333                           	opt callstack 0
 13334                           
 13335 ;; *************** function _islower *****************
 13336 ;; Defined at:
 13337 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 13338 ;; Parameters:    Size  Location     Type
 13339 ;;  c               2  [STACK] int 
 13340 ;; Auto vars:     Size  Location     Type
 13341 ;;		None
 13342 ;; Return value:  Size  Location     Type
 13343 ;;                  2  [STACK] int 
 13344 ;; Registers used:
 13345 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13346 ;; Tracked objects:
 13347 ;;		On entry : 0/0
 13348 ;;		On exit  : 0/0
 13349 ;;		Unchanged: 0/0
 13350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13355 ;;Total ram usage:        0 bytes
 13356 ;; Hardware stack levels used:    1
 13357 ;; Hardware stack levels required when called:   15
 13358 ;; This function calls:
 13359 ;;		Nothing
 13360 ;; This function is called by:
 13361 ;;		_toupper
 13362 ;; This function uses a reentrant model
 13363 ;;
 13364                           
 13365                           	psect	text48
 13366  01B064                     __ptext48:
 13367                           	opt callstack 0
 13368  01B064                     _islower:
 13369                           	opt callstack 0
 13370                           
 13371                           ;stkvar	_c @ sp[(0)+-2]
 13372                           
 13373                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13374                           ;incstack = 0
 13375 ;; hardware stack exceeded
 13376  01B064  0EFE               	movlw	-2
 13377  01B066  50E3               	movf	plusw1,w,c
 13378  01B068  0F9F               	addlw	159
 13379  01B06A  6E30               	movwf	(btemp+10)^0,c
 13380  01B06C  0EFF               	movlw	-1
 13381  01B06E  006F FF8C  F031    	movff	plusw1,btemp+11
 13382  01B074  0EFF               	movlw	255
 13383  01B076  2231               	addwfc	(btemp+11)^0,f,c
 13384  01B078  5031               	movf	(btemp+11)^0,w,c
 13385  01B07A  E106               	bnz	u5740
 13386  01B07C  0E1A               	movlw	26
 13387  01B07E  5C30               	subwf	(btemp+10)^0,w,c
 13388  01B080  B0D8               	btfsc	status,0,c
 13389  01B082  D002               	goto	u5740
 13390  01B084  0E01               	movlw	1
 13391  01B086  D001               	goto	u5750
 13392  01B088                     u5740:
 13393  01B088  0E00               	movlw	0
 13394  01B08A                     u5750:
 13395  01B08A  6E26               	movwf	btemp^0,c
 13396  01B08C  6A27               	clrf	(btemp+1)^0,c
 13397                           
 13398                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13399  01B08E  52E5               	movf	postdec1,f,c
 13400  01B090  52E5               	movf	postdec1,f,c
 13401  01B092  0012               	return		;funcret
 13402  01B094                     __end_of_islower:
 13403                           	opt callstack 0
 13404                           
 13405 ;; *************** function _isalpha *****************
 13406 ;; Defined at:
 13407 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 13408 ;; Parameters:    Size  Location     Type
 13409 ;;  c               2  [STACK] int 
 13410 ;; Auto vars:     Size  Location     Type
 13411 ;;		None
 13412 ;; Return value:  Size  Location     Type
 13413 ;;                  2  [STACK] int 
 13414 ;; Registers used:
 13415 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 13416 ;; Tracked objects:
 13417 ;;		On entry : 0/0
 13418 ;;		On exit  : 0/0
 13419 ;;		Unchanged: 0/0
 13420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13425 ;;Total ram usage:        0 bytes
 13426 ;; Hardware stack levels used:    1
 13427 ;; Hardware stack levels required when called:   15
 13428 ;; This function calls:
 13429 ;;		Nothing
 13430 ;; This function is called by:
 13431 ;;		_xtoa
 13432 ;; This function uses a reentrant model
 13433 ;;
 13434                           
 13435                           	psect	text49
 13436  01ACF2                     __ptext49:
 13437                           	opt callstack 0
 13438  01ACF2                     _isalpha:
 13439                           	opt callstack 0
 13440                           
 13441                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13442                           ;incstack = 0
 13443 ;; hardware stack exceeded
 13444  01ACF2  0E9F               	movlw	159
 13445  01ACF4  6E30               	movwf	(btemp+10)^0,c
 13446  01ACF6  0EFF               	movlw	255
 13447  01ACF8  6E31               	movwf	(btemp+11)^0,c
 13448                           
 13449                           ;stkvar	_c @ sp[(0)+-2]
 13450  01ACFA  0EFE               	movlw	-2
 13451  01ACFC  006F FF8C  F02E    	movff	plusw1,btemp+8
 13452  01AD02  0EFF               	movlw	-1
 13453  01AD04  006F FF8C  F02F    	movff	plusw1,btemp+9
 13454  01AD0A  0E20               	movlw	32
 13455  01AD0C  122E               	iorwf	(btemp+8)^0,f,c
 13456  01AD0E  0E00               	movlw	0
 13457  01AD10  122F               	iorwf	(btemp+9)^0,f,c
 13458  01AD12  5030               	movf	(btemp+10)^0,w,c
 13459  01AD14  262E               	addwf	(btemp+8)^0,f,c
 13460  01AD16  5031               	movf	(btemp+11)^0,w,c
 13461  01AD18  222F               	addwfc	(btemp+9)^0,f,c
 13462  01AD1A  502F               	movf	(btemp+9)^0,w,c
 13463  01AD1C  E106               	bnz	u6030
 13464  01AD1E  0E1A               	movlw	26
 13465  01AD20  5C2E               	subwf	(btemp+8)^0,w,c
 13466  01AD22  B0D8               	btfsc	status,0,c
 13467  01AD24  D002               	goto	u6030
 13468  01AD26  0E01               	movlw	1
 13469  01AD28  D001               	goto	u6040
 13470  01AD2A                     u6030:
 13471  01AD2A  0E00               	movlw	0
 13472  01AD2C                     u6040:
 13473  01AD2C  6E26               	movwf	btemp^0,c
 13474  01AD2E  6A27               	clrf	(btemp+1)^0,c
 13475                           
 13476                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13477  01AD30  52E5               	movf	postdec1,f,c
 13478  01AD32  52E5               	movf	postdec1,f,c
 13479  01AD34  0012               	return		;funcret
 13480  01AD36                     __end_of_isalpha:
 13481                           	opt callstack 0
 13482                           
 13483 ;; *************** function _utoa *****************
 13484 ;; Defined at:
 13485 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13486 ;; Parameters:    Size  Location     Type
 13487 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13488 ;;		 -> f(6), NULL(0), 
 13489 ;;  d               8  [STACK] unsigned long long 
 13490 ;; Auto vars:     Size  Location     Type
 13491 ;;  n               8  [STACK] unsigned long long 
 13492 ;;  i               2  [STACK] int 
 13493 ;;  w               2  [STACK] int 
 13494 ;;  p               2  [STACK] int 
 13495 ;; Return value:  Size  Location     Type
 13496 ;;                  2  [STACK] int 
 13497 ;; Registers used:
 13498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 13499 ;; Tracked objects:
 13500 ;;		On entry : 0/0
 13501 ;;		On exit  : 0/0
 13502 ;;		Unchanged: 0/0
 13503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13508 ;;Total ram usage:        0 bytes
 13509 ;; Hardware stack levels used:    1
 13510 ;; Hardware stack levels required when called:   20
 13511 ;; This function calls:
 13512 ;;		___lodiv
 13513 ;;		___lomod
 13514 ;;		_pad
 13515 ;; This function is called by:
 13516 ;;		_vfpfcnvrt
 13517 ;; This function uses a reentrant model
 13518 ;;
 13519                           
 13520                           	psect	text50
 13521  0162B4                     __ptext50:
 13522                           	opt callstack 0
 13523  0162B4                     _utoa:
 13524                           	opt callstack 0
 13525                           
 13526                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 13527  0162B4  0E0E               	movlw	14
 13528  0162B6  26E1               	addwf	fsr1l,f,c
 13529  0162B8  0E00               	movlw	0
 13530  0162BA  22E2               	addwfc	fsr1h,f,c
 13531                           
 13532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 13533                           
 13534                           ;incstack = 0
 13535 ;; hardware stack exceeded
 13536  0162BC  AE0D               	btfss	(_prec+1)^0,7,c
 13537                           
 13538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 13539  0162BE  920E               	bcf	_flags^0,1,c
 13540                           
 13541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 13542  0162C0  BE0D               	btfsc	(_prec+1)^0,7,c
 13543  0162C2  D005               	goto	u11380
 13544  0162C4  500D               	movf	(_prec+1)^0,w,c
 13545  0162C6  E110               	bnz	l12001
 13546  0162C8  040C               	decf	_prec^0,w,c
 13547  0162CA  B0D8               	btfsc	status,0,c
 13548  0162CC  D00D               	goto	l12001
 13549  0162CE                     u11380:
 13550  0162CE  0E01               	movlw	1
 13551  0162D0  6E30               	movwf	(btemp+10)^0,c
 13552  0162D2  0E00               	movlw	0
 13553  0162D4  6E31               	movwf	(btemp+11)^0,c
 13554                           
 13555                           ;stkvar	_p @ sp[(-14)+12]
 13556  0162D6  0EFE               	movlw	-2
 13557  0162D8  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 13558  0162DE  0EFF               	movlw	-1
 13559  0162E0  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 13560  0162E6  D008               	goto	l2282
 13561  0162E8                     l12001:
 13562                           
 13563                           ;stkvar	_p @ sp[(-14)+12]
 13564  0162E8  0EFE               	movlw	-2
 13565  0162EA  0060  F033  FFE3   	movff	_prec,plusw1
 13566  0162F0  0EFF               	movlw	-1
 13567  0162F2  0060  F037  FFE3   	movff	_prec+1,plusw1
 13568  0162F8                     l2282:
 13569                           
 13570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 13571                           ;stkvar	_w @ sp[(-14)+10]
 13572  0162F8  0EFC               	movlw	-4
 13573  0162FA  0060  F02B  FFE3   	movff	_width,plusw1
 13574  016300  0EFD               	movlw	-3
 13575  016302  0060  F02F  FFE3   	movff	_width+1,plusw1
 13576                           
 13577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 13578                           ;stkvar	_d @ sp[(-14)+-10]
 13579  016308  0EE8               	movlw	232
 13580  01630A  24E1               	addwf	fsr1l,w,c
 13581  01630C  6ED9               	movwf	fsr2l,c
 13582  01630E  0EFF               	movlw	255
 13583  016310  20E2               	addwfc	fsr1h,w,c
 13584  016312  6EDA               	movwf	fsr2h,c
 13585                           
 13586                           ;stkvar	_n @ sp[(-14)+0]
 13587  016314  0E08               	movlw	8
 13588  016316  6E26               	movwf	btemp^0,c
 13589  016318  0EF2               	movlw	-14
 13590  01631A                     us1139999:
 13591  01631A  006F FF7B FFE3     	movff	postinc2,plusw1
 13592  016320  28E8               	incf	wreg,w,c
 13593  016322  2E26               	decfsz	btemp^0,f,c
 13594  016324  D7FA               	bra	us1139999
 13595                           
 13596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 13597  016326  0E4F               	movlw	79
 13598  016328  6E30               	movwf	(btemp+10)^0,c
 13599  01632A  0E00               	movlw	0
 13600  01632C  6E31               	movwf	(btemp+11)^0,c
 13601                           
 13602                           ;stkvar	_i @ sp[(-14)+8]
 13603  01632E  0EFA               	movlw	-6
 13604  016330  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 13605  016336  0EFB               	movlw	-5
 13606  016338  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 13607                           
 13608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 13609  01633E  0103               	movlb	3	; () banked
 13610  016340  6BFD               	clrf	(_dbuf+79)& (0+255),b
 13611                           
 13612                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13613  016342  D0FB               	goto	l12019
 13614  016344                     l12009:
 13615                           
 13616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 13617                           ;stkvar	_i @ sp[(-14)+8]
 13618  016344  50E1               	movf	fsr1l,w,c
 13619  016346  0FFA               	addlw	-6
 13620  016348  6ED9               	movwf	fsr2l,c
 13621  01634A  50E2               	movf	fsr1h,w,c
 13622  01634C  6EDA               	movwf	fsr2h,c
 13623  01634E  0EFF               	movlw	255
 13624  016350  22DA               	addwfc	fsr2h,f,c
 13625  016352  06DE               	decf	postinc2,f,c
 13626  016354  0E00               	movlw	0
 13627  016356  5ADD               	subwfb	postdec2,f,c
 13628                           
 13629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 13630  016358  0E0A               	movlw	10
 13631  01635A  6EE6               	movwf	postinc1,c
 13632  01635C  0E00               	movlw	0
 13633  01635E  6EE6               	movwf	postinc1,c
 13634  016360  0E00               	movlw	0
 13635  016362  6EE6               	movwf	postinc1,c
 13636  016364  0E00               	movlw	0
 13637  016366  6EE6               	movwf	postinc1,c
 13638  016368  0E00               	movlw	0
 13639  01636A  6EE6               	movwf	postinc1,c
 13640  01636C  0E00               	movlw	0
 13641  01636E  6EE6               	movwf	postinc1,c
 13642  016370  0E00               	movlw	0
 13643  016372  6EE6               	movwf	postinc1,c
 13644  016374  0E00               	movlw	0
 13645  016376  6EE6               	movwf	postinc1,c
 13646                           
 13647                           ;stkvar	_n @ sp[(-22)+0]
 13648  016378  50E1               	movf	fsr1l,w,c
 13649  01637A  0FEA               	addlw	-22
 13650  01637C  6ED9               	movwf	fsr2l,c
 13651  01637E  50E2               	movf	fsr1h,w,c
 13652  016380  6EDA               	movwf	fsr2h,c
 13653  016382  0EFF               	movlw	255
 13654  016384  22DA               	addwfc	fsr2h,f,c
 13655  016386  006F FF7B FFE6     	movff	postinc2,postinc1
 13656  01638C  006F FF7B FFE6     	movff	postinc2,postinc1
 13657  016392  006F FF7B FFE6     	movff	postinc2,postinc1
 13658  016398  006F FF7B FFE6     	movff	postinc2,postinc1
 13659  01639E  006F FF7B FFE6     	movff	postinc2,postinc1
 13660  0163A4  006F FF7B FFE6     	movff	postinc2,postinc1
 13661  0163AA  006F FF7B FFE6     	movff	postinc2,postinc1
 13662  0163B0  006F FF7B FFE6     	movff	postinc2,postinc1
 13663  0163B6  EC80  F0C5         	call	___lomod	;wreg free
 13664  0163BA  52E5               	movf	postdec1,f,c
 13665  0163BC  006F FF9C  F03D    	movff	indf1,btemp+23
 13666  0163C2  52E5               	movf	postdec1,f,c
 13667  0163C4  006F FF9C  F03C    	movff	indf1,btemp+22
 13668  0163CA  52E5               	movf	postdec1,f,c
 13669  0163CC  006F FF9C  F03B    	movff	indf1,btemp+21
 13670  0163D2  52E5               	movf	postdec1,f,c
 13671  0163D4  006F FF9C  F03A    	movff	indf1,btemp+20
 13672  0163DA  52E5               	movf	postdec1,f,c
 13673  0163DC  006F FF9C  F039    	movff	indf1,btemp+19
 13674  0163E2  52E5               	movf	postdec1,f,c
 13675  0163E4  006F FF9C  F038    	movff	indf1,btemp+18
 13676  0163EA  52E5               	movf	postdec1,f,c
 13677  0163EC  006F FF9C  F037    	movff	indf1,btemp+17
 13678  0163F2  52E5               	movf	postdec1,f,c
 13679  0163F4  006F FF9C  F036    	movff	indf1,btemp+16
 13680  0163FA  0EF8               	movlw	248
 13681  0163FC  26E1               	addwf	fsr1l,f,c
 13682  0163FE  0EFF               	movlw	255
 13683  016400  22E2               	addwfc	fsr1h,f,c
 13684  016402  0E30               	movlw	48
 13685  016404  2636               	addwf	(btemp+16)^0,f,c
 13686                           
 13687                           ;stkvar	_i @ sp[(-14)+8]
 13688  016406  0EFA               	movlw	-6
 13689  016408  006F FF8C  F030    	movff	plusw1,btemp+10
 13690  01640E  0EFB               	movlw	-5
 13691  016410  006F FF8C  F031    	movff	plusw1,btemp+11
 13692  016416  0EAE               	movlw	low _dbuf
 13693  016418  2430               	addwf	(btemp+10)^0,w,c
 13694  01641A  6ED9               	movwf	fsr2l,c
 13695  01641C  0E03               	movlw	high _dbuf
 13696  01641E  2031               	addwfc	(btemp+11)^0,w,c
 13697  016420  6EDA               	movwf	fsr2h,c
 13698  016422  0060  F0DB  FFDF   	movff	btemp+16,indf2
 13699                           
 13700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 13701                           ;stkvar	_p @ sp[(-14)+12]
 13702  016428  50E1               	movf	fsr1l,w,c
 13703  01642A  0FFE               	addlw	-2
 13704  01642C  6ED9               	movwf	fsr2l,c
 13705  01642E  50E2               	movf	fsr1h,w,c
 13706  016430  6EDA               	movwf	fsr2h,c
 13707  016432  0EFF               	movlw	255
 13708  016434  22DA               	addwfc	fsr2h,f,c
 13709  016436  06DE               	decf	postinc2,f,c
 13710  016438  0E00               	movlw	0
 13711  01643A  5ADD               	subwfb	postdec2,f,c
 13712                           
 13713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 13714                           ;stkvar	_w @ sp[(-14)+10]
 13715  01643C  50E1               	movf	fsr1l,w,c
 13716  01643E  0FFC               	addlw	-4
 13717  016440  6ED9               	movwf	fsr2l,c
 13718  016442  50E2               	movf	fsr1h,w,c
 13719  016444  6EDA               	movwf	fsr2h,c
 13720  016446  0EFF               	movlw	255
 13721  016448  22DA               	addwfc	fsr2h,f,c
 13722  01644A  06DE               	decf	postinc2,f,c
 13723  01644C  0E00               	movlw	0
 13724  01644E  5ADD               	subwfb	postdec2,f,c
 13725                           
 13726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 13727  016450  0E0A               	movlw	10
 13728  016452  6EE6               	movwf	postinc1,c
 13729  016454  0E00               	movlw	0
 13730  016456  6EE6               	movwf	postinc1,c
 13731  016458  0E00               	movlw	0
 13732  01645A  6EE6               	movwf	postinc1,c
 13733  01645C  0E00               	movlw	0
 13734  01645E  6EE6               	movwf	postinc1,c
 13735  016460  0E00               	movlw	0
 13736  016462  6EE6               	movwf	postinc1,c
 13737  016464  0E00               	movlw	0
 13738  016466  6EE6               	movwf	postinc1,c
 13739  016468  0E00               	movlw	0
 13740  01646A  6EE6               	movwf	postinc1,c
 13741  01646C  0E00               	movlw	0
 13742  01646E  6EE6               	movwf	postinc1,c
 13743                           
 13744                           ;stkvar	_n @ sp[(-22)+0]
 13745  016470  50E1               	movf	fsr1l,w,c
 13746  016472  0FEA               	addlw	-22
 13747  016474  6ED9               	movwf	fsr2l,c
 13748  016476  50E2               	movf	fsr1h,w,c
 13749  016478  6EDA               	movwf	fsr2h,c
 13750  01647A  0EFF               	movlw	255
 13751  01647C  22DA               	addwfc	fsr2h,f,c
 13752  01647E  006F FF7B FFE6     	movff	postinc2,postinc1
 13753  016484  006F FF7B FFE6     	movff	postinc2,postinc1
 13754  01648A  006F FF7B FFE6     	movff	postinc2,postinc1
 13755  016490  006F FF7B FFE6     	movff	postinc2,postinc1
 13756  016496  006F FF7B FFE6     	movff	postinc2,postinc1
 13757  01649C  006F FF7B FFE6     	movff	postinc2,postinc1
 13758  0164A2  006F FF7B FFE6     	movff	postinc2,postinc1
 13759  0164A8  006F FF7B FFE6     	movff	postinc2,postinc1
 13760  0164AE  EC8D  F0C0         	call	___lodiv	;wreg free
 13761  0164B2  52E5               	movf	postdec1,f,c
 13762  0164B4  006F FF9C  F03D    	movff	indf1,btemp+23
 13763  0164BA  52E5               	movf	postdec1,f,c
 13764  0164BC  006F FF9C  F03C    	movff	indf1,btemp+22
 13765  0164C2  52E5               	movf	postdec1,f,c
 13766  0164C4  006F FF9C  F03B    	movff	indf1,btemp+21
 13767  0164CA  52E5               	movf	postdec1,f,c
 13768  0164CC  006F FF9C  F03A    	movff	indf1,btemp+20
 13769  0164D2  52E5               	movf	postdec1,f,c
 13770  0164D4  006F FF9C  F039    	movff	indf1,btemp+19
 13771  0164DA  52E5               	movf	postdec1,f,c
 13772  0164DC  006F FF9C  F038    	movff	indf1,btemp+18
 13773  0164E2  52E5               	movf	postdec1,f,c
 13774  0164E4  006F FF9C  F037    	movff	indf1,btemp+17
 13775  0164EA  52E5               	movf	postdec1,f,c
 13776  0164EC  006F FF9C  F036    	movff	indf1,btemp+16
 13777  0164F2  0EF8               	movlw	248
 13778  0164F4  26E1               	addwf	fsr1l,f,c
 13779  0164F6  0EFF               	movlw	255
 13780  0164F8  22E2               	addwfc	fsr1h,f,c
 13781                           
 13782                           ;stkvar	_n @ sp[(-14)+0]
 13783  0164FA  0EF2               	movlw	-14
 13784  0164FC  0060  F0DB  FFE3   	movff	btemp+16,plusw1
 13785  016502  0EF3               	movlw	-13
 13786  016504  0060  F0DF  FFE3   	movff	btemp+17,plusw1
 13787  01650A  0EF4               	movlw	-12
 13788  01650C  0060  F0E3  FFE3   	movff	btemp+18,plusw1
 13789  016512  0EF5               	movlw	-11
 13790  016514  0060  F0E7  FFE3   	movff	btemp+19,plusw1
 13791  01651A  0EF6               	movlw	-10
 13792  01651C  0060  F0EB  FFE3   	movff	btemp+20,plusw1
 13793  016522  0EF7               	movlw	-9
 13794  016524  0060  F0EF  FFE3   	movff	btemp+21,plusw1
 13795  01652A  0EF8               	movlw	-8
 13796  01652C  0060  F0F3  FFE3   	movff	btemp+22,plusw1
 13797  016532  0EF9               	movlw	-7
 13798  016534  0060  F0F7  FFE3   	movff	btemp+23,plusw1
 13799  01653A                     l12019:
 13800                           
 13801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13802                           ;stkvar	_i @ sp[(-14)+8]
 13803  01653A  0EFA               	movlw	-6
 13804  01653C  006F FF8C  F026    	movff	plusw1,btemp
 13805  016542  0EFB               	movlw	-5
 13806  016544  50E3               	movf	plusw1,w,c
 13807  016546  1026               	iorwf	btemp^0,w,c
 13808  016548  B4D8               	btfsc	status,2,c
 13809  01654A  D02F               	goto	u11440
 13810                           
 13811                           ;stkvar	_n @ sp[(-14)+0]
 13812  01654C  0EF2               	movlw	-14
 13813  01654E  50E3               	movf	plusw1,w,c
 13814  016550  E115               	bnz	u11411
 13815  016552  0EF3               	movlw	-13
 13816  016554  50E3               	movf	plusw1,w,c
 13817  016556  E112               	bnz	u11411
 13818  016558  0EF4               	movlw	-12
 13819  01655A  50E3               	movf	plusw1,w,c
 13820  01655C  E10F               	bnz	u11411
 13821  01655E  0EF5               	movlw	-11
 13822  016560  50E3               	movf	plusw1,w,c
 13823  016562  E10C               	bnz	u11411
 13824  016564  0EF6               	movlw	-10
 13825  016566  50E3               	movf	plusw1,w,c
 13826  016568  E109               	bnz	u11411
 13827  01656A  0EF7               	movlw	-9
 13828  01656C  50E3               	movf	plusw1,w,c
 13829  01656E  E106               	bnz	u11411
 13830  016570  0EF8               	movlw	-8
 13831  016572  50E3               	movf	plusw1,w,c
 13832  016574  E103               	bnz	u11411
 13833  016576  0EF9               	movlw	-7
 13834  016578  50E3               	movf	plusw1,w,c
 13835  01657A  A4D8               	btfss	status,2,c
 13836  01657C                     u11411:
 13837  01657C  D6E3               	goto	l12009
 13838                           
 13839                           ;stkvar	_p @ sp[(-14)+12]
 13840  01657E  0EFF               	movlw	-1
 13841  016580  BEE3               	btfsc	plusw1,7,c
 13842  016582  D007               	goto	u11420
 13843  016584  0EFF               	movlw	-1
 13844  016586  50E3               	movf	plusw1,w,c
 13845  016588  E103               	bnz	u11421
 13846  01658A  0EFE               	movlw	-2
 13847  01658C  04E3               	decf	plusw1,w,c
 13848  01658E  B0D8               	btfsc	status,0,c
 13849  016590                     u11421:
 13850  016590  D6D9               	goto	l12009
 13851  016592                     u11420:
 13852                           
 13853                           ;stkvar	_w @ sp[(-14)+10]
 13854  016592  0EFD               	movlw	-3
 13855  016594  BEE3               	btfsc	plusw1,7,c
 13856  016596  D009               	goto	u11440
 13857  016598  0EFD               	movlw	-3
 13858  01659A  50E3               	movf	plusw1,w,c
 13859  01659C  E104               	bnz	u11430
 13860  01659E  0EFC               	movlw	-4
 13861  0165A0  04E3               	decf	plusw1,w,c
 13862  0165A2  A0D8               	btfss	status,0,c
 13863  0165A4  D002               	goto	u11440
 13864  0165A6                     u11430:
 13865  0165A6  B20E               	btfsc	_flags^0,1,c
 13866  0165A8  D6CD               	goto	l12009
 13867  0165AA                     u11440:
 13868                           
 13869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 13870                           ;stkvar	_w @ sp[(-14)+10]
 13871  0165AA  0EFC               	movlw	-4
 13872  0165AC  006F FF8F FFE6     	movff	plusw1,postinc1
 13873  0165B2  006F FF8F FFE6     	movff	plusw1,postinc1
 13874                           
 13875                           ;stkvar	_i @ sp[(-16)+8]
 13876  0165B8  0EAE               	movlw	low _dbuf
 13877  0165BA  6E30               	movwf	(btemp+10)^0,c
 13878  0165BC  0E03               	movlw	high _dbuf
 13879  0165BE  6E31               	movwf	(btemp+11)^0,c
 13880  0165C0  0EF8               	movlw	-8
 13881  0165C2  50E3               	movf	plusw1,w,c
 13882  0165C4  2630               	addwf	(btemp+10)^0,f,c
 13883  0165C6  0EF9               	movlw	-7
 13884  0165C8  50E3               	movf	plusw1,w,c
 13885  0165CA  2231               	addwfc	(btemp+11)^0,f,c
 13886  0165CC  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 13887  0165D2  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 13888                           
 13889                           ;stkvar	_fp @ sp[(-18)+-2]
 13890  0165D8  0EEC               	movlw	-20
 13891  0165DA  006F FF8F FFE6     	movff	plusw1,postinc1
 13892  0165E0  006F FF8F FFE6     	movff	plusw1,postinc1
 13893  0165E6  EC75  F0C8         	call	_pad	;wreg free
 13894                           
 13895                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 13896  0165EA  0EE8               	movlw	232
 13897  0165EC  26E1               	addwf	fsr1l,f,c
 13898  0165EE  0EFF               	movlw	255
 13899  0165F0  22E2               	addwfc	fsr1h,f,c
 13900  0165F2  0012               	return		;funcret
 13901  0165F4                     __end_of_utoa:
 13902                           	opt callstack 0
 13903                           
 13904 ;; *************** function ___lomod *****************
 13905 ;; Defined at:
 13906 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 13907 ;; Parameters:    Size  Location     Type
 13908 ;;  dividend        8  [STACK] unsigned long long 
 13909 ;;  divisor         8  [STACK] unsigned long long 
 13910 ;; Auto vars:     Size  Location     Type
 13911 ;;  counter         1  [STACK] unsigned char 
 13912 ;; Return value:  Size  Location     Type
 13913 ;;                  8  [STACK] unsigned long long 
 13914 ;; Registers used:
 13915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 13916 ;; Tracked objects:
 13917 ;;		On entry : 0/3
 13918 ;;		On exit  : 0/0
 13919 ;;		Unchanged: 0/0
 13920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13925 ;;Total ram usage:        0 bytes
 13926 ;; Hardware stack levels used:    1
 13927 ;; Hardware stack levels required when called:   15
 13928 ;; This function calls:
 13929 ;;		Nothing
 13930 ;; This function is called by:
 13931 ;;		_utoa
 13932 ;; This function uses a reentrant model
 13933 ;;
 13934                           
 13935                           	psect	text51
 13936  018B00                     __ptext51:
 13937                           	opt callstack 0
 13938  018B00                     ___lomod:
 13939                           	opt callstack 0
 13940                           
 13941                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 13942  018B00  52E6               	movf	postinc1,f,c
 13943                           
 13944                           ;stkvar	_divisor @ sp[(-1)+-16]
 13945                           
 13946                           ;incstack = 0
 13947 ;; hardware stack exceeded
 13948  018B02  0EEF               	movlw	-17
 13949  018B04  50E3               	movf	plusw1,w,c
 13950  018B06  E116               	bnz	u7180
 13951  018B08  0EF0               	movlw	-16
 13952  018B0A  50E3               	movf	plusw1,w,c
 13953  018B0C  E113               	bnz	u7180
 13954  018B0E  0EF1               	movlw	-15
 13955  018B10  50E3               	movf	plusw1,w,c
 13956  018B12  E110               	bnz	u7180
 13957  018B14  0EF2               	movlw	-14
 13958  018B16  50E3               	movf	plusw1,w,c
 13959  018B18  E10D               	bnz	u7180
 13960  018B1A  0EF3               	movlw	-13
 13961  018B1C  50E3               	movf	plusw1,w,c
 13962  018B1E  E10A               	bnz	u7180
 13963  018B20  0EF4               	movlw	-12
 13964  018B22  50E3               	movf	plusw1,w,c
 13965  018B24  E107               	bnz	u7180
 13966  018B26  0EF5               	movlw	-11
 13967  018B28  50E3               	movf	plusw1,w,c
 13968  018B2A  E104               	bnz	u7180
 13969  018B2C  0EF6               	movlw	-10
 13970  018B2E  50E3               	movf	plusw1,w,c
 13971  018B30  B4D8               	btfsc	status,2,c
 13972  018B32  D075               	goto	u7210
 13973  018B34                     u7180:
 13974                           
 13975                           ;stkvar	_counter @ sp[(-1)+0]
 13976  018B34  0EFF               	movlw	-1
 13977  018B36  6AE3               	clrf	plusw1,c
 13978  018B38  D012               	goto	L12
 13979  018B3A                     l8513:
 13980                           
 13981                           ;stkvar	_divisor @ sp[(-1)+-16]
 13982  018B3A  90D8               	bcf	status,0,c
 13983  018B3C  0EEF               	movlw	-17
 13984  018B3E  36E3               	rlcf	plusw1,f,c
 13985  018B40  0EF0               	movlw	-16
 13986  018B42  36E3               	rlcf	plusw1,f,c
 13987  018B44  0EF1               	movlw	-15
 13988  018B46  36E3               	rlcf	plusw1,f,c
 13989  018B48  0EF2               	movlw	-14
 13990  018B4A  36E3               	rlcf	plusw1,f,c
 13991  018B4C  0EF3               	movlw	-13
 13992  018B4E  36E3               	rlcf	plusw1,f,c
 13993  018B50  0EF4               	movlw	-12
 13994  018B52  36E3               	rlcf	plusw1,f,c
 13995  018B54  0EF5               	movlw	-11
 13996  018B56  36E3               	rlcf	plusw1,f,c
 13997  018B58  0EF6               	movlw	-10
 13998  018B5A  36E3               	rlcf	plusw1,f,c
 13999                           
 14000                           ;stkvar	_counter @ sp[(-1)+0]
 14001  018B5C  0EFF               	movlw	-1
 14002  018B5E                     L12:
 14003  018B5E  2AE3               	incf	plusw1,f,c
 14004                           
 14005                           ;stkvar	_divisor @ sp[(-1)+-16]
 14006  018B60  0EF6               	movlw	-10
 14007  018B62  AEE3               	btfss	plusw1,7,c
 14008  018B64  D7EA               	goto	l8513
 14009  018B66                     u7190:
 14010                           
 14011                           ;stkvar	_divisor @ sp[(-1)+-16]
 14012                           ;stkvar	_dividend @ sp[(-1)+-8]
 14013  018B66  50E1               	movf	fsr1l,w,c
 14014  018B68  0FF7               	addlw	-9
 14015  018B6A  6ED9               	movwf	fsr2l,c
 14016  018B6C  50E2               	movf	fsr1h,w,c
 14017  018B6E  6EDA               	movwf	fsr2h,c
 14018  018B70  0EFF               	movlw	255
 14019  018B72  22DA               	addwfc	fsr2h,f,c
 14020  018B74  0EEF               	movlw	-17
 14021  018B76  50E3               	movf	plusw1,w,c
 14022  018B78  5CDE               	subwf	postinc2,w,c
 14023  018B7A  0EF0               	movlw	-16
 14024  018B7C  50E3               	movf	plusw1,w,c
 14025  018B7E  58DE               	subwfb	postinc2,w,c
 14026  018B80  0EF1               	movlw	-15
 14027  018B82  50E3               	movf	plusw1,w,c
 14028  018B84  58DE               	subwfb	postinc2,w,c
 14029  018B86  0EF2               	movlw	-14
 14030  018B88  50E3               	movf	plusw1,w,c
 14031  018B8A  58DE               	subwfb	postinc2,w,c
 14032  018B8C  0EF3               	movlw	-13
 14033  018B8E  50E3               	movf	plusw1,w,c
 14034  018B90  58DE               	subwfb	postinc2,w,c
 14035  018B92  0EF4               	movlw	-12
 14036  018B94  50E3               	movf	plusw1,w,c
 14037  018B96  58DE               	subwfb	postinc2,w,c
 14038  018B98  0EF5               	movlw	-11
 14039  018B9A  50E3               	movf	plusw1,w,c
 14040  018B9C  58DE               	subwfb	postinc2,w,c
 14041  018B9E  0EF6               	movlw	-10
 14042  018BA0  50E3               	movf	plusw1,w,c
 14043  018BA2  58DE               	subwfb	postinc2,w,c
 14044  018BA4  A0D8               	btfss	status,0,c
 14045  018BA6  D01F               	goto	l8521
 14046                           
 14047                           ;stkvar	_divisor @ sp[(-1)+-16]
 14048                           ;stkvar	_dividend @ sp[(-1)+-8]
 14049  018BA8  50E1               	movf	fsr1l,w,c
 14050  018BAA  0FF7               	addlw	-9
 14051  018BAC  6ED9               	movwf	fsr2l,c
 14052  018BAE  50E2               	movf	fsr1h,w,c
 14053  018BB0  6EDA               	movwf	fsr2h,c
 14054  018BB2  0EFF               	movlw	255
 14055  018BB4  22DA               	addwfc	fsr2h,f,c
 14056  018BB6  0EEF               	movlw	-17
 14057  018BB8  50E3               	movf	plusw1,w,c
 14058  018BBA  5EDE               	subwf	postinc2,f,c
 14059  018BBC  0EF0               	movlw	-16
 14060  018BBE  50E3               	movf	plusw1,w,c
 14061  018BC0  5ADE               	subwfb	postinc2,f,c
 14062  018BC2  0EF1               	movlw	-15
 14063  018BC4  50E3               	movf	plusw1,w,c
 14064  018BC6  5ADE               	subwfb	postinc2,f,c
 14065  018BC8  0EF2               	movlw	-14
 14066  018BCA  50E3               	movf	plusw1,w,c
 14067  018BCC  5ADE               	subwfb	postinc2,f,c
 14068  018BCE  0EF3               	movlw	-13
 14069  018BD0  50E3               	movf	plusw1,w,c
 14070  018BD2  5ADE               	subwfb	postinc2,f,c
 14071  018BD4  0EF4               	movlw	-12
 14072  018BD6  50E3               	movf	plusw1,w,c
 14073  018BD8  5ADE               	subwfb	postinc2,f,c
 14074  018BDA  0EF5               	movlw	-11
 14075  018BDC  50E3               	movf	plusw1,w,c
 14076  018BDE  5ADE               	subwfb	postinc2,f,c
 14077  018BE0  0EF6               	movlw	-10
 14078  018BE2  50E3               	movf	plusw1,w,c
 14079  018BE4  5ADE               	subwfb	postinc2,f,c
 14080  018BE6                     l8521:
 14081                           
 14082                           ;stkvar	_divisor @ sp[(-1)+-16]
 14083  018BE6  90D8               	bcf	status,0,c
 14084  018BE8  0EF6               	movlw	-10
 14085  018BEA  32E3               	rrcf	plusw1,f,c
 14086  018BEC  0EF5               	movlw	-11
 14087  018BEE  32E3               	rrcf	plusw1,f,c
 14088  018BF0  0EF4               	movlw	-12
 14089  018BF2  32E3               	rrcf	plusw1,f,c
 14090  018BF4  0EF3               	movlw	-13
 14091  018BF6  32E3               	rrcf	plusw1,f,c
 14092  018BF8  0EF2               	movlw	-14
 14093  018BFA  32E3               	rrcf	plusw1,f,c
 14094  018BFC  0EF1               	movlw	-15
 14095  018BFE  32E3               	rrcf	plusw1,f,c
 14096  018C00  0EF0               	movlw	-16
 14097  018C02  32E3               	rrcf	plusw1,f,c
 14098  018C04  0EEF               	movlw	-17
 14099  018C06  32E3               	rrcf	plusw1,f,c
 14100                           
 14101                           ;stkvar	_counter @ sp[(-1)+0]
 14102  018C08  0EFF               	movlw	-1
 14103  018C0A  50E3               	movf	plusw1,w,c
 14104  018C0C  6E26               	movwf	btemp^0,c
 14105  018C0E  0E01               	movlw	1
 14106  018C10  5E26               	subwf	btemp^0,f,c
 14107  018C12  0EFF               	movlw	-1
 14108  018C14  0060  F09B  FFE3   	movff	btemp,plusw1
 14109  018C1A  A4D8               	btfss	status,2,c
 14110  018C1C  D7A4               	goto	u7190
 14111  018C1E                     u7210:
 14112                           
 14113                           ;stkvar	_dividend @ sp[(-1)+-8]
 14114  018C1E  0EF7               	movlw	247
 14115  018C20  24E1               	addwf	fsr1l,w,c
 14116  018C22  6ED9               	movwf	fsr2l,c
 14117  018C24  0EFF               	movlw	255
 14118  018C26  20E2               	addwfc	fsr1h,w,c
 14119  018C28  6EDA               	movwf	fsr2h,c
 14120                           
 14121                           ;stkvar	?___lomod @ sp[(-1)+-8]
 14122  018C2A  0E08               	movlw	8
 14123  018C2C  6E26               	movwf	btemp^0,c
 14124  018C2E  0EF7               	movlw	-9
 14125  018C30                     us722999:
 14126  018C30  006F FF7B FFE3     	movff	postinc2,plusw1
 14127  018C36  28E8               	incf	wreg,w,c
 14128  018C38  2E26               	decfsz	btemp^0,f,c
 14129  018C3A  D7FA               	bra	us722999
 14130                           
 14131                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14132  018C3C  52E5               	movf	postdec1,f,c
 14133  018C3E  0012               	return		;funcret
 14134  018C40                     __end_of___lomod:
 14135                           	opt callstack 0
 14136                           
 14137 ;; *************** function ___lodiv *****************
 14138 ;; Defined at:
 14139 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 14140 ;; Parameters:    Size  Location     Type
 14141 ;;  dividend        8  [STACK] unsigned long long 
 14142 ;;  divisor         8  [STACK] unsigned long long 
 14143 ;; Auto vars:     Size  Location     Type
 14144 ;;  quotient        8  [STACK] unsigned long long 
 14145 ;;  counter         1  [STACK] unsigned char 
 14146 ;; Return value:  Size  Location     Type
 14147 ;;                  8  [STACK] unsigned long long 
 14148 ;; Registers used:
 14149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14150 ;; Tracked objects:
 14151 ;;		On entry : 0/3
 14152 ;;		On exit  : 0/0
 14153 ;;		Unchanged: 0/0
 14154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14159 ;;Total ram usage:        0 bytes
 14160 ;; Hardware stack levels used:    1
 14161 ;; Hardware stack levels required when called:   15
 14162 ;; This function calls:
 14163 ;;		Nothing
 14164 ;; This function is called by:
 14165 ;;		_utoa
 14166 ;; This function uses a reentrant model
 14167 ;;
 14168                           
 14169                           	psect	text52
 14170  01811A                     __ptext52:
 14171                           	opt callstack 0
 14172  01811A                     ___lodiv:
 14173                           	opt callstack 0
 14174                           
 14175                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14176  01811A  0E09               	movlw	9
 14177  01811C  26E1               	addwf	fsr1l,f,c
 14178  01811E  0E00               	movlw	0
 14179  018120  22E2               	addwfc	fsr1h,f,c
 14180                           
 14181                           ;stkvar	_quotient @ sp[(-9)+0]
 14182                           
 14183                           ;incstack = 0
 14184 ;; hardware stack exceeded
 14185  018122  0E07               	movlw	7
 14186  018124  6E26               	movwf	btemp^0,c
 14187  018126  0EF7               	movlw	-9
 14188  018128                     u7121:
 14189  018128  6AE3               	clrf	plusw1,c
 14190  01812A  2AE8               	incf	wreg,f,c
 14191  01812C  0626               	decf	btemp^0,f,c
 14192  01812E  E2FC               	bc	u7121
 14193                           
 14194                           ;stkvar	_divisor @ sp[(-9)+-16]
 14195  018130  0EE7               	movlw	-25
 14196  018132  50E3               	movf	plusw1,w,c
 14197  018134  E116               	bnz	u7130
 14198  018136  0EE8               	movlw	-24
 14199  018138  50E3               	movf	plusw1,w,c
 14200  01813A  E113               	bnz	u7130
 14201  01813C  0EE9               	movlw	-23
 14202  01813E  50E3               	movf	plusw1,w,c
 14203  018140  E110               	bnz	u7130
 14204  018142  0EEA               	movlw	-22
 14205  018144  50E3               	movf	plusw1,w,c
 14206  018146  E10D               	bnz	u7130
 14207  018148  0EEB               	movlw	-21
 14208  01814A  50E3               	movf	plusw1,w,c
 14209  01814C  E10A               	bnz	u7130
 14210  01814E  0EEC               	movlw	-20
 14211  018150  50E3               	movf	plusw1,w,c
 14212  018152  E107               	bnz	u7130
 14213  018154  0EED               	movlw	-19
 14214  018156  50E3               	movf	plusw1,w,c
 14215  018158  E104               	bnz	u7130
 14216  01815A  0EEE               	movlw	-18
 14217  01815C  50E3               	movf	plusw1,w,c
 14218  01815E  B4D8               	btfsc	status,2,c
 14219  018160  D088               	goto	u7160
 14220  018162                     u7130:
 14221                           
 14222                           ;stkvar	_counter @ sp[(-9)+8]
 14223  018162  0EFF               	movlw	-1
 14224  018164  6AE3               	clrf	plusw1,c
 14225  018166  D012               	goto	L13
 14226  018168                     l8489:
 14227                           
 14228                           ;stkvar	_divisor @ sp[(-9)+-16]
 14229  018168  90D8               	bcf	status,0,c
 14230  01816A  0EE7               	movlw	-25
 14231  01816C  36E3               	rlcf	plusw1,f,c
 14232  01816E  0EE8               	movlw	-24
 14233  018170  36E3               	rlcf	plusw1,f,c
 14234  018172  0EE9               	movlw	-23
 14235  018174  36E3               	rlcf	plusw1,f,c
 14236  018176  0EEA               	movlw	-22
 14237  018178  36E3               	rlcf	plusw1,f,c
 14238  01817A  0EEB               	movlw	-21
 14239  01817C  36E3               	rlcf	plusw1,f,c
 14240  01817E  0EEC               	movlw	-20
 14241  018180  36E3               	rlcf	plusw1,f,c
 14242  018182  0EED               	movlw	-19
 14243  018184  36E3               	rlcf	plusw1,f,c
 14244  018186  0EEE               	movlw	-18
 14245  018188  36E3               	rlcf	plusw1,f,c
 14246                           
 14247                           ;stkvar	_counter @ sp[(-9)+8]
 14248  01818A  0EFF               	movlw	-1
 14249  01818C                     L13:
 14250  01818C  2AE3               	incf	plusw1,f,c
 14251                           
 14252                           ;stkvar	_divisor @ sp[(-9)+-16]
 14253  01818E  0EEE               	movlw	-18
 14254  018190  AEE3               	btfss	plusw1,7,c
 14255  018192  D7EA               	goto	l8489
 14256  018194                     u7140:
 14257                           
 14258                           ;stkvar	_quotient @ sp[(-9)+0]
 14259  018194  90D8               	bcf	status,0,c
 14260  018196  0EF7               	movlw	-9
 14261  018198  36E3               	rlcf	plusw1,f,c
 14262  01819A  0EF8               	movlw	-8
 14263  01819C  36E3               	rlcf	plusw1,f,c
 14264  01819E  0EF9               	movlw	-7
 14265  0181A0  36E3               	rlcf	plusw1,f,c
 14266  0181A2  0EFA               	movlw	-6
 14267  0181A4  36E3               	rlcf	plusw1,f,c
 14268  0181A6  0EFB               	movlw	-5
 14269  0181A8  36E3               	rlcf	plusw1,f,c
 14270  0181AA  0EFC               	movlw	-4
 14271  0181AC  36E3               	rlcf	plusw1,f,c
 14272  0181AE  0EFD               	movlw	-3
 14273  0181B0  36E3               	rlcf	plusw1,f,c
 14274  0181B2  0EFE               	movlw	-2
 14275  0181B4  36E3               	rlcf	plusw1,f,c
 14276                           
 14277                           ;stkvar	_divisor @ sp[(-9)+-16]
 14278                           ;stkvar	_dividend @ sp[(-9)+-8]
 14279  0181B6  50E1               	movf	fsr1l,w,c
 14280  0181B8  0FEF               	addlw	-17
 14281  0181BA  6ED9               	movwf	fsr2l,c
 14282  0181BC  50E2               	movf	fsr1h,w,c
 14283  0181BE  6EDA               	movwf	fsr2h,c
 14284  0181C0  0EFF               	movlw	255
 14285  0181C2  22DA               	addwfc	fsr2h,f,c
 14286  0181C4  0EE7               	movlw	-25
 14287  0181C6  50E3               	movf	plusw1,w,c
 14288  0181C8  5CDE               	subwf	postinc2,w,c
 14289  0181CA  0EE8               	movlw	-24
 14290  0181CC  50E3               	movf	plusw1,w,c
 14291  0181CE  58DE               	subwfb	postinc2,w,c
 14292  0181D0  0EE9               	movlw	-23
 14293  0181D2  50E3               	movf	plusw1,w,c
 14294  0181D4  58DE               	subwfb	postinc2,w,c
 14295  0181D6  0EEA               	movlw	-22
 14296  0181D8  50E3               	movf	plusw1,w,c
 14297  0181DA  58DE               	subwfb	postinc2,w,c
 14298  0181DC  0EEB               	movlw	-21
 14299  0181DE  50E3               	movf	plusw1,w,c
 14300  0181E0  58DE               	subwfb	postinc2,w,c
 14301  0181E2  0EEC               	movlw	-20
 14302  0181E4  50E3               	movf	plusw1,w,c
 14303  0181E6  58DE               	subwfb	postinc2,w,c
 14304  0181E8  0EED               	movlw	-19
 14305  0181EA  50E3               	movf	plusw1,w,c
 14306  0181EC  58DE               	subwfb	postinc2,w,c
 14307  0181EE  0EEE               	movlw	-18
 14308  0181F0  50E3               	movf	plusw1,w,c
 14309  0181F2  58DE               	subwfb	postinc2,w,c
 14310  0181F4  A0D8               	btfss	status,0,c
 14311  0181F6  D021               	goto	l8501
 14312                           
 14313                           ;stkvar	_divisor @ sp[(-9)+-16]
 14314                           ;stkvar	_dividend @ sp[(-9)+-8]
 14315  0181F8  50E1               	movf	fsr1l,w,c
 14316  0181FA  0FEF               	addlw	-17
 14317  0181FC  6ED9               	movwf	fsr2l,c
 14318  0181FE  50E2               	movf	fsr1h,w,c
 14319  018200  6EDA               	movwf	fsr2h,c
 14320  018202  0EFF               	movlw	255
 14321  018204  22DA               	addwfc	fsr2h,f,c
 14322  018206  0EE7               	movlw	-25
 14323  018208  50E3               	movf	plusw1,w,c
 14324  01820A  5EDE               	subwf	postinc2,f,c
 14325  01820C  0EE8               	movlw	-24
 14326  01820E  50E3               	movf	plusw1,w,c
 14327  018210  5ADE               	subwfb	postinc2,f,c
 14328  018212  0EE9               	movlw	-23
 14329  018214  50E3               	movf	plusw1,w,c
 14330  018216  5ADE               	subwfb	postinc2,f,c
 14331  018218  0EEA               	movlw	-22
 14332  01821A  50E3               	movf	plusw1,w,c
 14333  01821C  5ADE               	subwfb	postinc2,f,c
 14334  01821E  0EEB               	movlw	-21
 14335  018220  50E3               	movf	plusw1,w,c
 14336  018222  5ADE               	subwfb	postinc2,f,c
 14337  018224  0EEC               	movlw	-20
 14338  018226  50E3               	movf	plusw1,w,c
 14339  018228  5ADE               	subwfb	postinc2,f,c
 14340  01822A  0EED               	movlw	-19
 14341  01822C  50E3               	movf	plusw1,w,c
 14342  01822E  5ADE               	subwfb	postinc2,f,c
 14343  018230  0EEE               	movlw	-18
 14344  018232  50E3               	movf	plusw1,w,c
 14345  018234  5ADE               	subwfb	postinc2,f,c
 14346                           
 14347                           ;stkvar	_quotient @ sp[(-9)+0]
 14348  018236  0EF7               	movlw	-9
 14349  018238  80E3               	bsf	plusw1,0,c
 14350  01823A                     l8501:
 14351                           
 14352                           ;stkvar	_divisor @ sp[(-9)+-16]
 14353  01823A  90D8               	bcf	status,0,c
 14354  01823C  0EEE               	movlw	-18
 14355  01823E  32E3               	rrcf	plusw1,f,c
 14356  018240  0EED               	movlw	-19
 14357  018242  32E3               	rrcf	plusw1,f,c
 14358  018244  0EEC               	movlw	-20
 14359  018246  32E3               	rrcf	plusw1,f,c
 14360  018248  0EEB               	movlw	-21
 14361  01824A  32E3               	rrcf	plusw1,f,c
 14362  01824C  0EEA               	movlw	-22
 14363  01824E  32E3               	rrcf	plusw1,f,c
 14364  018250  0EE9               	movlw	-23
 14365  018252  32E3               	rrcf	plusw1,f,c
 14366  018254  0EE8               	movlw	-24
 14367  018256  32E3               	rrcf	plusw1,f,c
 14368  018258  0EE7               	movlw	-25
 14369  01825A  32E3               	rrcf	plusw1,f,c
 14370                           
 14371                           ;stkvar	_counter @ sp[(-9)+8]
 14372  01825C  0EFF               	movlw	-1
 14373  01825E  50E3               	movf	plusw1,w,c
 14374  018260  6E26               	movwf	btemp^0,c
 14375  018262  0E01               	movlw	1
 14376  018264  5E26               	subwf	btemp^0,f,c
 14377  018266  0EFF               	movlw	-1
 14378  018268  0060  F09B  FFE3   	movff	btemp,plusw1
 14379  01826E  A4D8               	btfss	status,2,c
 14380  018270  D791               	goto	u7140
 14381  018272                     u7160:
 14382                           
 14383                           ;stkvar	_quotient @ sp[(-9)+0]
 14384  018272  0EF7               	movlw	247
 14385  018274  24E1               	addwf	fsr1l,w,c
 14386  018276  6ED9               	movwf	fsr2l,c
 14387  018278  0EFF               	movlw	255
 14388  01827A  20E2               	addwfc	fsr1h,w,c
 14389  01827C  6EDA               	movwf	fsr2h,c
 14390                           
 14391                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 14392  01827E  0E08               	movlw	8
 14393  018280  6E26               	movwf	btemp^0,c
 14394  018282  0EEF               	movlw	-17
 14395  018284                     us717999:
 14396  018284  006F FF7B FFE3     	movff	postinc2,plusw1
 14397  01828A  28E8               	incf	wreg,w,c
 14398  01828C  2E26               	decfsz	btemp^0,f,c
 14399  01828E  D7FA               	bra	us717999
 14400                           
 14401                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14402  018290  0EF7               	movlw	247
 14403  018292  26E1               	addwf	fsr1l,f,c
 14404  018294  0EFF               	movlw	255
 14405  018296  22E2               	addwfc	fsr1h,f,c
 14406  018298  0012               	return		;funcret
 14407  01829A                     __end_of___lodiv:
 14408                           	opt callstack 0
 14409                           
 14410 ;; *************** function _strncmp *****************
 14411 ;; Defined at:
 14412 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 14413 ;; Parameters:    Size  Location     Type
 14414 ;;  _l              2  [STACK] PTR const unsigned char 
 14415 ;;		 -> ct(3), STR_65(85), STR_63(3), STR_62(3), 
 14416 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14417 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14418 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14419 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14420 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14421 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14422 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14423 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14424 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
 14425 ;;		 -> STR_23(19), STR_22(19), STR_21(17), STR_20(16), 
 14426 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14427 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
 14428 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14429 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14430 ;;		 -> STR_2(15), STR_1(17), 
 14431 ;;  _r              2  [STACK] PTR const unsigned char 
 14432 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14433 ;;		 -> STR_80(3), STR_76(3), 
 14434 ;;  n               2  [STACK] unsigned int 
 14435 ;; Auto vars:     Size  Location     Type
 14436 ;;  r               2  [STACK] PTR const unsigned char 
 14437 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14438 ;;		 -> STR_80(3), STR_76(3), 
 14439 ;;  l               2  [STACK] PTR const unsigned char 
 14440 ;;		 -> ct(3), STR_65(85), STR_63(3), STR_62(3), 
 14441 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14442 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14443 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14444 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14445 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14446 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14447 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14448 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14449 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
 14450 ;;		 -> STR_23(19), STR_22(19), STR_21(17), STR_20(16), 
 14451 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14452 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
 14453 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14454 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14455 ;;		 -> STR_2(15), STR_1(17), 
 14456 ;; Return value:  Size  Location     Type
 14457 ;;                  2  [STACK] int 
 14458 ;; Registers used:
 14459 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 14460 ;; Tracked objects:
 14461 ;;		On entry : 0/0
 14462 ;;		On exit  : 0/0
 14463 ;;		Unchanged: 0/0
 14464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14469 ;;Total ram usage:        0 bytes
 14470 ;; Hardware stack levels used:    1
 14471 ;; Hardware stack levels required when called:   15
 14472 ;; This function calls:
 14473 ;;		Nothing
 14474 ;; This function is called by:
 14475 ;;		_vfpfcnvrt
 14476 ;; This function uses a reentrant model
 14477 ;;
 14478                           
 14479                           	psect	text53
 14480  017592                     __ptext53:
 14481                           	opt callstack 0
 14482  017592                     _strncmp:
 14483                           	opt callstack 0
 14484                           
 14485                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14486  017592  52E6               	movf	postinc1,f,c
 14487  017594  52E6               	movf	postinc1,f,c
 14488  017596  52E6               	movf	postinc1,f,c
 14489  017598  52E6               	movf	postinc1,f,c
 14490                           
 14491                           ;stkvar	__l @ sp[(-4)+-2]
 14492                           
 14493                           ;incstack = 0
 14494 ;; hardware stack exceeded
 14495  01759A  0EFA               	movlw	-6
 14496  01759C  006F FF8C  F030    	movff	plusw1,btemp+10
 14497  0175A2  0EFB               	movlw	-5
 14498  0175A4  006F FF8C  F031    	movff	plusw1,btemp+11
 14499                           
 14500                           ;stkvar	_l @ sp[(-4)+2]
 14501  0175AA  0EFF               	movlw	-1
 14502  0175AC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 14503  0175B2  0EFE               	movlw	-2
 14504  0175B4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 14505                           
 14506                           ;stkvar	__r @ sp[(-4)+-4]
 14507  0175BA  0EF8               	movlw	-8
 14508  0175BC  006F FF8C  F030    	movff	plusw1,btemp+10
 14509  0175C2  0EF9               	movlw	-7
 14510  0175C4  006F FF8C  F031    	movff	plusw1,btemp+11
 14511                           
 14512                           ;stkvar	_r @ sp[(-4)+0]
 14513  0175CA  0EFD               	movlw	-3
 14514  0175CC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 14515  0175D2  0EFC               	movlw	-4
 14516  0175D4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 14517                           
 14518                           ;stkvar	_n @ sp[(-4)+-6]
 14519  0175DA  0EF6               	movlw	-10
 14520  0175DC  006F FF8C  F026    	movff	plusw1,btemp
 14521  0175E2  0E01               	movlw	1
 14522  0175E4  5E26               	subwf	btemp^0,f,c
 14523  0175E6  0EF6               	movlw	-10
 14524  0175E8  0060  F09B  FFE3   	movff	btemp,plusw1
 14525  0175EE  0EF7               	movlw	-9
 14526  0175F0  006F FF8C  F026    	movff	plusw1,btemp
 14527  0175F6  0E00               	movlw	0
 14528  0175F8  5A26               	subwfb	btemp^0,f,c
 14529  0175FA  0EF7               	movlw	-9
 14530  0175FC  0060  F09B  FFE3   	movff	btemp,plusw1
 14531  017602  0EF6               	movlw	-10
 14532  017604  28E3               	incf	plusw1,w,c
 14533  017606  E13F               	bnz	l9197
 14534  017608  0EF7               	movlw	-9
 14535  01760A  28E3               	incf	plusw1,w,c
 14536  01760C  A4D8               	btfss	status,2,c
 14537  01760E  D03B               	goto	l9197
 14538  017610  0E00               	movlw	0
 14539  017612  6E26               	movwf	btemp^0,c
 14540  017614  0E00               	movlw	0
 14541  017616  6E27               	movwf	(btemp+1)^0,c
 14542  017618  D0C7               	goto	l3436
 14543  01761A                     l9195:
 14544                           
 14545                           ;stkvar	_l @ sp[(-4)+2]
 14546  01761A  0EFE               	movlw	-2
 14547  01761C  50E3               	movf	plusw1,w,c
 14548  01761E  0F01               	addlw	1
 14549  017620  6E26               	movwf	btemp^0,c
 14550  017622  0EFE               	movlw	-2
 14551  017624  0060  F09B  FFE3   	movff	btemp,plusw1
 14552  01762A  6A26               	clrf	btemp^0,c
 14553  01762C  0EFF               	movlw	-1
 14554  01762E  50E3               	movf	plusw1,w,c
 14555  017630  2026               	addwfc	btemp^0,w,c
 14556  017632  6E26               	movwf	btemp^0,c
 14557  017634  0EFF               	movlw	-1
 14558  017636  0060  F09B  FFE3   	movff	btemp,plusw1
 14559                           
 14560                           ;stkvar	_r @ sp[(-4)+0]
 14561  01763C  0EFC               	movlw	-4
 14562  01763E  50E3               	movf	plusw1,w,c
 14563  017640  0F01               	addlw	1
 14564  017642  6E26               	movwf	btemp^0,c
 14565  017644  0EFC               	movlw	-4
 14566  017646  0060  F09B  FFE3   	movff	btemp,plusw1
 14567  01764C  6A26               	clrf	btemp^0,c
 14568  01764E  0EFD               	movlw	-3
 14569  017650  50E3               	movf	plusw1,w,c
 14570  017652  2026               	addwfc	btemp^0,w,c
 14571  017654  6E26               	movwf	btemp^0,c
 14572  017656  0EFD               	movlw	-3
 14573  017658  0060  F09B  FFE3   	movff	btemp,plusw1
 14574                           
 14575                           ;stkvar	_n @ sp[(-4)+-6]
 14576  01765E  0EF6               	movlw	-10
 14577  017660  006F FF8C  F026    	movff	plusw1,btemp
 14578  017666  0E01               	movlw	1
 14579  017668  5E26               	subwf	btemp^0,f,c
 14580  01766A  0EF6               	movlw	-10
 14581  01766C  0060  F09B  FFE3   	movff	btemp,plusw1
 14582  017672  0EF7               	movlw	-9
 14583  017674  006F FF8C  F026    	movff	plusw1,btemp
 14584  01767A  0E00               	movlw	0
 14585  01767C  5A26               	subwfb	btemp^0,f,c
 14586  01767E  0EF7               	movlw	-9
 14587  017680  0060  F09B  FFE3   	movff	btemp,plusw1
 14588  017686                     l9197:
 14589                           
 14590                           ;stkvar	_l @ sp[(-4)+2]
 14591  017686  0EFE               	movlw	-2
 14592  017688  006F FF8F FFF6     	movff	plusw1,tblptrl
 14593  01768E  0EFF               	movlw	-1
 14594  017690  006F FF8F FFF7     	movff	plusw1,tblptrh
 14595  017696  0E00               	movlw	low (__mediumconst shr (0+16))
 14596  017698  6EF8               	movwf	tblptru,c
 14597  01769A  0E1F               	movlw	(high __ramtop+-1)
 14598  01769C  64F7               	cpfsgt	tblptrh,c
 14599  01769E  D003               	bra	u8457
 14600  0176A0  0008               	tblrd		*
 14601  0176A2  50F5               	movf	tablat,w,c
 14602  0176A4  D007               	bra	u8450
 14603  0176A6                     u8457:
 14604  0176A6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14605  0176AC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14606  0176B2  50EF               	movf	indf0,w,c
 14607  0176B4                     u8450:
 14608  0176B4  0900               	iorlw	0
 14609  0176B6  B4D8               	btfsc	status,2,c
 14610  0176B8  D04A               	goto	u8490
 14611                           
 14612                           ;stkvar	_r @ sp[(-4)+0]
 14613  0176BA  50E1               	movf	fsr1l,w,c
 14614  0176BC  0FFC               	addlw	-4
 14615  0176BE  6ED9               	movwf	fsr2l,c
 14616  0176C0  50E2               	movf	fsr1h,w,c
 14617  0176C2  6EDA               	movwf	fsr2h,c
 14618  0176C4  0EFF               	movlw	255
 14619  0176C6  22DA               	addwfc	fsr2h,f,c
 14620  0176C8  006F FF7B FFF6     	movff	postinc2,tblptrl
 14621  0176CE  006F FF77 FFF7     	movff	postdec2,tblptrh
 14622  0176D4                     	if	0	;tblptru may be non-zero
 14623  0176D4                     	endif
 14624  0176D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14625  0176D4  0E00               	movlw	low (__mediumconst shr (0+16))
 14626  0176D6  6EF8               	movwf	tblptru,c
 14627  0176D8                     	endif
 14628  0176D8  0008               	tblrd		*
 14629  0176DA  50F5               	movf	tablat,w,c
 14630  0176DC  0900               	iorlw	0
 14631  0176DE  B4D8               	btfsc	status,2,c
 14632  0176E0  D036               	goto	u8490
 14633                           
 14634                           ;stkvar	_n @ sp[(-4)+-6]
 14635  0176E2  0EF6               	movlw	-10
 14636  0176E4  006F FF8C  F026    	movff	plusw1,btemp
 14637  0176EA  0EF7               	movlw	-9
 14638  0176EC  50E3               	movf	plusw1,w,c
 14639  0176EE  1026               	iorwf	btemp^0,w,c
 14640  0176F0  B4D8               	btfsc	status,2,c
 14641  0176F2  D02D               	goto	u8490
 14642                           
 14643                           ;stkvar	_r @ sp[(-4)+0]
 14644  0176F4  50E1               	movf	fsr1l,w,c
 14645  0176F6  0FFC               	addlw	-4
 14646  0176F8  6ED9               	movwf	fsr2l,c
 14647  0176FA  50E2               	movf	fsr1h,w,c
 14648  0176FC  6EDA               	movwf	fsr2h,c
 14649  0176FE  0EFF               	movlw	255
 14650  017700  22DA               	addwfc	fsr2h,f,c
 14651  017702  006F FF7B FFF6     	movff	postinc2,tblptrl
 14652  017708  006F FF77 FFF7     	movff	postdec2,tblptrh
 14653  01770E                     	if	0	;tblptru may be non-zero
 14654  01770E                     	endif
 14655  01770E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14656  01770E  0E00               	movlw	low (__mediumconst shr (0+16))
 14657  017710  6EF8               	movwf	tblptru,c
 14658  017712                     	endif
 14659  017712  0008               	tblrd		*
 14660  017714  006F FFD4  F031    	movff	tablat,btemp+11
 14661                           
 14662                           ;stkvar	_l @ sp[(-4)+2]
 14663  01771A  0EFE               	movlw	-2
 14664  01771C  006F FF8F FFF6     	movff	plusw1,tblptrl
 14665  017722  0EFF               	movlw	-1
 14666  017724  006F FF8F FFF7     	movff	plusw1,tblptrh
 14667  01772A  0E00               	movlw	low (__mediumconst shr (0+16))
 14668  01772C  6EF8               	movwf	tblptru,c
 14669  01772E  0E1F               	movlw	(high __ramtop+-1)
 14670  017730  64F7               	cpfsgt	tblptrh,c
 14671  017732  D003               	bra	u8497
 14672  017734  0008               	tblrd		*
 14673  017736  50F5               	movf	tablat,w,c
 14674  017738  D007               	bra	u8495
 14675  01773A                     u8497:
 14676  01773A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14677  017740  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14678  017746  50EF               	movf	indf0,w,c
 14679  017748                     u8495:
 14680  017748  1831               	xorwf	(btemp+11)^0,w,c
 14681  01774A  B4D8               	btfsc	status,2,c
 14682  01774C  D766               	goto	l9195
 14683  01774E                     u8490:
 14684                           
 14685                           ;stkvar	_l @ sp[(-4)+2]
 14686  01774E  0EFE               	movlw	-2
 14687  017750  006F FF8F FFF6     	movff	plusw1,tblptrl
 14688  017756  0EFF               	movlw	-1
 14689  017758  006F FF8F FFF7     	movff	plusw1,tblptrh
 14690  01775E  0E00               	movlw	low (__mediumconst shr (0+16))
 14691  017760  6EF8               	movwf	tblptru,c
 14692  017762  0E1F               	movlw	(high __ramtop+-1)
 14693  017764  64F7               	cpfsgt	tblptrh,c
 14694  017766  D003               	bra	u8507
 14695  017768  0008               	tblrd		*
 14696  01776A  50F5               	movf	tablat,w,c
 14697  01776C  D007               	bra	u8500
 14698  01776E                     u8507:
 14699  01776E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14700  017774  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14701  01777A  50EF               	movf	indf0,w,c
 14702  01777C                     u8500:
 14703  01777C  6E26               	movwf	btemp^0,c
 14704  01777E  6A27               	clrf	(btemp+1)^0,c
 14705                           
 14706                           ;stkvar	_r @ sp[(-4)+0]
 14707  017780  50E1               	movf	fsr1l,w,c
 14708  017782  0FFC               	addlw	-4
 14709  017784  6ED9               	movwf	fsr2l,c
 14710  017786  50E2               	movf	fsr1h,w,c
 14711  017788  6EDA               	movwf	fsr2h,c
 14712  01778A  0EFF               	movlw	255
 14713  01778C  22DA               	addwfc	fsr2h,f,c
 14714  01778E  006F FF7B FFF6     	movff	postinc2,tblptrl
 14715  017794  006F FF77 FFF7     	movff	postdec2,tblptrh
 14716  01779A                     	if	0	;tblptru may be non-zero
 14717  01779A                     	endif
 14718  01779A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14719  01779A  0E00               	movlw	low (__mediumconst shr (0+16))
 14720  01779C  6EF8               	movwf	tblptru,c
 14721  01779E                     	endif
 14722  01779E  0008               	tblrd		*
 14723  0177A0  50F5               	movf	tablat,w,c
 14724  0177A2  5E26               	subwf	btemp^0,f,c
 14725  0177A4  0E00               	movlw	0
 14726  0177A6  5A27               	subwfb	(btemp+1)^0,f,c
 14727  0177A8                     l3436:
 14728                           
 14729                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 14730  0177A8  0EF6               	movlw	246
 14731  0177AA  26E1               	addwf	fsr1l,f,c
 14732  0177AC  0EFF               	movlw	255
 14733  0177AE  22E2               	addwfc	fsr1h,f,c
 14734  0177B0  0012               	return		;funcret
 14735  0177B2                     __end_of_strncmp:
 14736                           	opt callstack 0
 14737                           
 14738 ;; *************** function _stoa *****************
 14739 ;; Defined at:
 14740 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14741 ;; Parameters:    Size  Location     Type
 14742 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14743 ;;		 -> f(6), NULL(0), 
 14744 ;;  s               2  [STACK] PTR unsigned char 
 14745 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 14746 ;;		 -> D.lcd(480), D(482), T(144), STR_3(6), 
 14747 ;;		 -> V(190), 
 14748 ;; Auto vars:     Size  Location     Type
 14749 ;;  nuls            7  [STACK] unsigned char [7]
 14750 ;;  l               2  [STACK] int 
 14751 ;;  p               2  [STACK] int 
 14752 ;;  cp              2  [STACK] PTR unsigned char 
 14753 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_47(9), 
 14754 ;;		 -> STR_46(12), D.lcd(480), D(482), T(144), 
 14755 ;;		 -> STR_3(6), V(190), 
 14756 ;;  w               2  [STACK] int 
 14757 ;;  i               2  [STACK] int 
 14758 ;; Return value:  Size  Location     Type
 14759 ;;                  2  [STACK] int 
 14760 ;; Registers used:
 14761 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 14762 ;; Tracked objects:
 14763 ;;		On entry : 0/0
 14764 ;;		On exit  : 0/0
 14765 ;;		Unchanged: 0/0
 14766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14771 ;;Total ram usage:        0 bytes
 14772 ;; Hardware stack levels used:    1
 14773 ;; Hardware stack levels required when called:   18
 14774 ;; This function calls:
 14775 ;;		_fputc
 14776 ;;		_strlen
 14777 ;; This function is called by:
 14778 ;;		_vfpfcnvrt
 14779 ;; This function uses a reentrant model
 14780 ;;
 14781                           
 14782                           	psect	text54
 14783  016BA0                     __ptext54:
 14784                           	opt callstack 0
 14785  016BA0                     _stoa:
 14786                           	opt callstack 0
 14787                           
 14788                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14789  016BA0  0E11               	movlw	17
 14790  016BA2  26E1               	addwf	fsr1l,f,c
 14791  016BA4  0E00               	movlw	0
 14792  016BA6  22E2               	addwfc	fsr1h,f,c
 14793                           
 14794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 14795                           
 14796                           ;incstack = 0
 14797 ;; hardware stack exceeded
 14798  016BA8  EE20  F200         	lfsr	2,stoa@F1166
 14799                           
 14800                           ;stkvar	_nuls @ sp[(-17)+0]
 14801  016BAC  0E07               	movlw	7
 14802  016BAE  6E26               	movwf	btemp^0,c
 14803  016BB0  0EEF               	movlw	-17
 14804  016BB2                     us1127999:
 14805  016BB2  006F FF7B FFE3     	movff	postinc2,plusw1
 14806  016BB8  28E8               	incf	wreg,w,c
 14807  016BBA  2E26               	decfsz	btemp^0,f,c
 14808  016BBC  D7FA               	bra	us1127999
 14809                           
 14810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 14811                           ;stkvar	_s @ sp[(-17)+-4]
 14812  016BBE  0EEB               	movlw	-21
 14813  016BC0  006F FF8C  F030    	movff	plusw1,btemp+10
 14814  016BC6  0EEC               	movlw	-20
 14815  016BC8  006F FF8C  F031    	movff	plusw1,btemp+11
 14816                           
 14817                           ;stkvar	_cp @ sp[(-17)+11]
 14818  016BCE  0EFB               	movlw	-5
 14819  016BD0  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 14820  016BD6  0EFA               	movlw	-6
 14821  016BD8  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 14822                           
 14823                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 14824                           ;stkvar	_cp @ sp[(-17)+11]
 14825  016BDE  0EFA               	movlw	-6
 14826  016BE0  006F FF8C  F026    	movff	plusw1,btemp
 14827  016BE6  0EFB               	movlw	-5
 14828  016BE8  50E3               	movf	plusw1,w,c
 14829  016BEA  1026               	iorwf	btemp^0,w,c
 14830  016BEC  A4D8               	btfss	status,2,c
 14831  016BEE  D00E               	goto	l11949
 14832                           
 14833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 14834                           ;stkvar	_nuls @ sp[(-17)+0]
 14835  016BF0  0EEF               	movlw	239
 14836  016BF2  24E1               	addwf	fsr1l,w,c
 14837  016BF4  6E30               	movwf	(btemp+10)^0,c
 14838  016BF6  0EFF               	movlw	255
 14839  016BF8  20E2               	addwfc	fsr1h,w,c
 14840  016BFA  6E31               	movwf	(btemp+11)^0,c
 14841                           
 14842                           ;stkvar	_cp @ sp[(-17)+11]
 14843  016BFC  0EFB               	movlw	-5
 14844  016BFE  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 14845  016C04  0EFA               	movlw	-6
 14846  016C06  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 14847  016C0C                     l11949:
 14848                           
 14849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 14850                           ;stkvar	_cp @ sp[(-17)+11]
 14851  016C0C  0EFA               	movlw	-6
 14852  016C0E  006F FF8F FFE6     	movff	plusw1,postinc1
 14853  016C14  006F FF8F FFE6     	movff	plusw1,postinc1
 14854  016C1A  EC27  F0D0         	call	_strlen	;wreg free
 14855                           
 14856                           ;stkvar	_l @ sp[(-17)+7]
 14857  016C1E  0EF6               	movlw	-10
 14858  016C20  0060  F09B  FFE3   	movff	btemp,plusw1
 14859  016C26  0EF7               	movlw	-9
 14860  016C28  0060  F09F  FFE3   	movff	btemp+1,plusw1
 14861                           
 14862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 14863                           ;stkvar	_p @ sp[(-17)+9]
 14864  016C2E  0EF8               	movlw	-8
 14865  016C30  0060  F033  FFE3   	movff	_prec,plusw1
 14866  016C36  0EF9               	movlw	-7
 14867  016C38  0060  F037  FFE3   	movff	_prec+1,plusw1
 14868                           
 14869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 14870                           ;stkvar	_p @ sp[(-17)+9]
 14871  016C3E  0EF9               	movlw	-7
 14872  016C40  BEE3               	btfsc	plusw1,7,c
 14873  016C42  D023               	goto	l2261
 14874                           
 14875                           ;stkvar	_l @ sp[(-17)+7]
 14876                           ;stkvar	_p @ sp[(-17)+9]
 14877  016C44  50E1               	movf	fsr1l,w,c
 14878  016C46  0FF8               	addlw	-8
 14879  016C48  6ED9               	movwf	fsr2l,c
 14880  016C4A  50E2               	movf	fsr1h,w,c
 14881  016C4C  6EDA               	movwf	fsr2h,c
 14882  016C4E  0EFF               	movlw	255
 14883  016C50  22DA               	addwfc	fsr2h,f,c
 14884  016C52  0EF6               	movlw	-10
 14885  016C54  50E3               	movf	plusw1,w,c
 14886  016C56  5CDE               	subwf	postinc2,w,c
 14887  016C58  50DE               	movf	postinc2,w,c
 14888  016C5A  0A80               	xorlw	128
 14889  016C5C  6E26               	movwf	btemp^0,c
 14890  016C5E  0EF7               	movlw	-9
 14891  016C60  50E3               	movf	plusw1,w,c
 14892  016C62  0A80               	xorlw	128
 14893  016C64  5826               	subwfb	btemp^0,w,c
 14894  016C66  B0D8               	btfsc	status,0,c
 14895  016C68  D010               	goto	l2261
 14896                           
 14897                           ;stkvar	_p @ sp[(-17)+9]
 14898                           ;stkvar	_l @ sp[(-17)+7]
 14899  016C6A  0EF8               	movlw	-8
 14900  016C6C  006F FF8C  F026    	movff	plusw1,btemp
 14901  016C72  0EF6               	movlw	-10
 14902  016C74  0060  F09B  FFE3   	movff	btemp,plusw1
 14903  016C7A  0EF9               	movlw	-7
 14904  016C7C  006F FF8C  F026    	movff	plusw1,btemp
 14905  016C82  0EF7               	movlw	-9
 14906  016C84  0060  F09B  FFE3   	movff	btemp,plusw1
 14907  016C8A                     l2261:
 14908                           
 14909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 14910                           ;stkvar	_l @ sp[(-17)+7]
 14911                           ;stkvar	_p @ sp[(-17)+9]
 14912  016C8A  0EF6               	movlw	-10
 14913  016C8C  006F FF8C  F026    	movff	plusw1,btemp
 14914  016C92  0EF8               	movlw	-8
 14915  016C94  0060  F09B  FFE3   	movff	btemp,plusw1
 14916  016C9A  0EF7               	movlw	-9
 14917  016C9C  006F FF8C  F026    	movff	plusw1,btemp
 14918  016CA2  0EF9               	movlw	-7
 14919  016CA4  0060  F09B  FFE3   	movff	btemp,plusw1
 14920                           
 14921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 14922                           ;stkvar	_w @ sp[(-17)+13]
 14923  016CAA  0EFC               	movlw	-4
 14924  016CAC  0060  F02B  FFE3   	movff	_width,plusw1
 14925  016CB2  0EFD               	movlw	-3
 14926  016CB4  0060  F02F  FFE3   	movff	_width+1,plusw1
 14927                           
 14928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 14929  016CBA  A00E               	btfss	_flags^0,0,c
 14930  016CBC  D01F               	goto	l11969
 14931  016CBE  D031               	goto	u11320
 14932  016CC0                     l11965:
 14933                           
 14934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 14935                           ;stkvar	_fp @ sp[(-17)+-2]
 14936  016CC0  0EED               	movlw	-19
 14937  016CC2  006F FF8F FFE6     	movff	plusw1,postinc1
 14938  016CC8  006F FF8F FFE6     	movff	plusw1,postinc1
 14939  016CCE  0E20               	movlw	32
 14940  016CD0  6EE6               	movwf	postinc1,c
 14941  016CD2  0E00               	movlw	0
 14942  016CD4  6EE6               	movwf	postinc1,c
 14943  016CD6  EC57  F0C7         	call	_fputc	;wreg free
 14944                           
 14945                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 14946                           ;stkvar	_l @ sp[(-17)+7]
 14947  016CDA  0EF6               	movlw	-10
 14948  016CDC  50E3               	movf	plusw1,w,c
 14949  016CDE  0F01               	addlw	1
 14950  016CE0  6E26               	movwf	btemp^0,c
 14951  016CE2  0EF6               	movlw	-10
 14952  016CE4  0060  F09B  FFE3   	movff	btemp,plusw1
 14953  016CEA  6A26               	clrf	btemp^0,c
 14954  016CEC  0EF7               	movlw	-9
 14955  016CEE  50E3               	movf	plusw1,w,c
 14956  016CF0  2026               	addwfc	btemp^0,w,c
 14957  016CF2  6E26               	movwf	btemp^0,c
 14958  016CF4  0EF7               	movlw	-9
 14959  016CF6  0060  F09B  FFE3   	movff	btemp,plusw1
 14960  016CFC                     l11969:
 14961                           
 14962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 14963                           ;stkvar	_w @ sp[(-17)+13]
 14964                           ;stkvar	_l @ sp[(-17)+7]
 14965  016CFC  50E1               	movf	fsr1l,w,c
 14966  016CFE  0FF6               	addlw	-10
 14967  016D00  6ED9               	movwf	fsr2l,c
 14968  016D02  50E2               	movf	fsr1h,w,c
 14969  016D04  6EDA               	movwf	fsr2h,c
 14970  016D06  0EFF               	movlw	255
 14971  016D08  22DA               	addwfc	fsr2h,f,c
 14972  016D0A  0EFC               	movlw	-4
 14973  016D0C  50E3               	movf	plusw1,w,c
 14974  016D0E  5CDE               	subwf	postinc2,w,c
 14975  016D10  50DE               	movf	postinc2,w,c
 14976  016D12  0A80               	xorlw	128
 14977  016D14  6E26               	movwf	btemp^0,c
 14978  016D16  0EFD               	movlw	-3
 14979  016D18  50E3               	movf	plusw1,w,c
 14980  016D1A  0A80               	xorlw	128
 14981  016D1C  5826               	subwfb	btemp^0,w,c
 14982  016D1E  A0D8               	btfss	status,0,c
 14983  016D20  D7CF               	goto	l11965
 14984  016D22                     u11320:
 14985                           
 14986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 14987                           ;stkvar	_i @ sp[(-17)+15]
 14988  016D22  0EFE               	movlw	-2
 14989  016D24  6AE3               	clrf	plusw1,c
 14990  016D26  0EFF               	movlw	-1
 14991  016D28  6AE3               	clrf	plusw1,c
 14992                           
 14993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 14994  016D2A  D045               	goto	l11979
 14995  016D2C                     l11973:
 14996                           
 14997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 14998                           ;stkvar	_fp @ sp[(-17)+-2]
 14999  016D2C  0EED               	movlw	-19
 15000  016D2E  006F FF8F FFE6     	movff	plusw1,postinc1
 15001  016D34  006F FF8F FFE6     	movff	plusw1,postinc1
 15002                           
 15003                           ;stkvar	_cp @ sp[(-19)+11]
 15004  016D3A  0EF8               	movlw	-8
 15005  016D3C  006F FF8F FFF6     	movff	plusw1,tblptrl
 15006  016D42  0EF9               	movlw	-7
 15007  016D44  006F FF8F FFF7     	movff	plusw1,tblptrh
 15008  016D4A  0E00               	movlw	low (__mediumconst shr (0+16))
 15009  016D4C  6EF8               	movwf	tblptru,c
 15010  016D4E  0E1F               	movlw	(high __ramtop+-1)
 15011  016D50  64F7               	cpfsgt	tblptrh,c
 15012  016D52  D003               	bra	u11337
 15013  016D54  0008               	tblrd		*
 15014  016D56  50F5               	movf	tablat,w,c
 15015  016D58  D007               	bra	u11330
 15016  016D5A                     u11337:
 15017  016D5A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15018  016D60  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15019  016D66  50EF               	movf	indf0,w,c
 15020  016D68                     u11330:
 15021  016D68  6EE6               	movwf	postinc1,c
 15022  016D6A  0E00               	movlw	0
 15023  016D6C  6EE6               	movwf	postinc1,c
 15024  016D6E  EC57  F0C7         	call	_fputc	;wreg free
 15025                           
 15026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 15027                           ;stkvar	_cp @ sp[(-17)+11]
 15028  016D72  0EFA               	movlw	-6
 15029  016D74  50E3               	movf	plusw1,w,c
 15030  016D76  0F01               	addlw	1
 15031  016D78  6E26               	movwf	btemp^0,c
 15032  016D7A  0EFA               	movlw	-6
 15033  016D7C  0060  F09B  FFE3   	movff	btemp,plusw1
 15034  016D82  6A26               	clrf	btemp^0,c
 15035  016D84  0EFB               	movlw	-5
 15036  016D86  50E3               	movf	plusw1,w,c
 15037  016D88  2026               	addwfc	btemp^0,w,c
 15038  016D8A  6E26               	movwf	btemp^0,c
 15039  016D8C  0EFB               	movlw	-5
 15040  016D8E  0060  F09B  FFE3   	movff	btemp,plusw1
 15041                           
 15042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 15043                           ;stkvar	_i @ sp[(-17)+15]
 15044  016D94  0EFE               	movlw	-2
 15045  016D96  50E3               	movf	plusw1,w,c
 15046  016D98  0F01               	addlw	1
 15047  016D9A  6E26               	movwf	btemp^0,c
 15048  016D9C  0EFE               	movlw	-2
 15049  016D9E  0060  F09B  FFE3   	movff	btemp,plusw1
 15050  016DA4  6A26               	clrf	btemp^0,c
 15051  016DA6  0EFF               	movlw	-1
 15052  016DA8  50E3               	movf	plusw1,w,c
 15053  016DAA  2026               	addwfc	btemp^0,w,c
 15054  016DAC  6E26               	movwf	btemp^0,c
 15055  016DAE  0EFF               	movlw	-1
 15056  016DB0  0060  F09B  FFE3   	movff	btemp,plusw1
 15057  016DB6                     l11979:
 15058                           
 15059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15060                           ;stkvar	_p @ sp[(-17)+9]
 15061                           ;stkvar	_i @ sp[(-17)+15]
 15062  016DB6  50E1               	movf	fsr1l,w,c
 15063  016DB8  0FFE               	addlw	-2
 15064  016DBA  6ED9               	movwf	fsr2l,c
 15065  016DBC  50E2               	movf	fsr1h,w,c
 15066  016DBE  6EDA               	movwf	fsr2h,c
 15067  016DC0  0EFF               	movlw	255
 15068  016DC2  22DA               	addwfc	fsr2h,f,c
 15069  016DC4  0EF8               	movlw	-8
 15070  016DC6  50E3               	movf	plusw1,w,c
 15071  016DC8  5CDE               	subwf	postinc2,w,c
 15072  016DCA  50DE               	movf	postinc2,w,c
 15073  016DCC  0A80               	xorlw	128
 15074  016DCE  6E26               	movwf	btemp^0,c
 15075  016DD0  0EF9               	movlw	-7
 15076  016DD2  50E3               	movf	plusw1,w,c
 15077  016DD4  0A80               	xorlw	128
 15078  016DD6  5826               	subwfb	btemp^0,w,c
 15079  016DD8  A0D8               	btfss	status,0,c
 15080  016DDA  D7A8               	goto	l11973
 15081                           
 15082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 15083  016DDC  B00E               	btfsc	_flags^0,0,c
 15084  016DDE  D01F               	goto	l11987
 15085  016DE0  D031               	goto	u11360
 15086  016DE2                     l11983:
 15087                           
 15088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 15089                           ;stkvar	_fp @ sp[(-17)+-2]
 15090  016DE2  0EED               	movlw	-19
 15091  016DE4  006F FF8F FFE6     	movff	plusw1,postinc1
 15092  016DEA  006F FF8F FFE6     	movff	plusw1,postinc1
 15093  016DF0  0E20               	movlw	32
 15094  016DF2  6EE6               	movwf	postinc1,c
 15095  016DF4  0E00               	movlw	0
 15096  016DF6  6EE6               	movwf	postinc1,c
 15097  016DF8  EC57  F0C7         	call	_fputc	;wreg free
 15098                           
 15099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 15100                           ;stkvar	_l @ sp[(-17)+7]
 15101  016DFC  0EF6               	movlw	-10
 15102  016DFE  50E3               	movf	plusw1,w,c
 15103  016E00  0F01               	addlw	1
 15104  016E02  6E26               	movwf	btemp^0,c
 15105  016E04  0EF6               	movlw	-10
 15106  016E06  0060  F09B  FFE3   	movff	btemp,plusw1
 15107  016E0C  6A26               	clrf	btemp^0,c
 15108  016E0E  0EF7               	movlw	-9
 15109  016E10  50E3               	movf	plusw1,w,c
 15110  016E12  2026               	addwfc	btemp^0,w,c
 15111  016E14  6E26               	movwf	btemp^0,c
 15112  016E16  0EF7               	movlw	-9
 15113  016E18  0060  F09B  FFE3   	movff	btemp,plusw1
 15114  016E1E                     l11987:
 15115                           
 15116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 15117                           ;stkvar	_w @ sp[(-17)+13]
 15118                           ;stkvar	_l @ sp[(-17)+7]
 15119  016E1E  50E1               	movf	fsr1l,w,c
 15120  016E20  0FF6               	addlw	-10
 15121  016E22  6ED9               	movwf	fsr2l,c
 15122  016E24  50E2               	movf	fsr1h,w,c
 15123  016E26  6EDA               	movwf	fsr2h,c
 15124  016E28  0EFF               	movlw	255
 15125  016E2A  22DA               	addwfc	fsr2h,f,c
 15126  016E2C  0EFC               	movlw	-4
 15127  016E2E  50E3               	movf	plusw1,w,c
 15128  016E30  5CDE               	subwf	postinc2,w,c
 15129  016E32  50DE               	movf	postinc2,w,c
 15130  016E34  0A80               	xorlw	128
 15131  016E36  6E26               	movwf	btemp^0,c
 15132  016E38  0EFD               	movlw	-3
 15133  016E3A  50E3               	movf	plusw1,w,c
 15134  016E3C  0A80               	xorlw	128
 15135  016E3E  5826               	subwfb	btemp^0,w,c
 15136  016E40  A0D8               	btfss	status,0,c
 15137  016E42  D7CF               	goto	l11983
 15138  016E44                     u11360:
 15139                           
 15140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 15141                           ;stkvar	_l @ sp[(-17)+7]
 15142  016E44  0EF6               	movlw	-10
 15143  016E46  006F FF8C  F026    	movff	plusw1,btemp
 15144  016E4C  0EF7               	movlw	-9
 15145  016E4E  006F FF8C  F027    	movff	plusw1,btemp+1
 15146                           
 15147                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 15148  016E54  0EEB               	movlw	235
 15149  016E56  26E1               	addwf	fsr1l,f,c
 15150  016E58  0EFF               	movlw	255
 15151  016E5A  22E2               	addwfc	fsr1h,f,c
 15152  016E5C  0012               	return		;funcret
 15153  016E5E                     __end_of_stoa:
 15154                           	opt callstack 0
 15155                           
 15156 ;; *************** function _efgtoa *****************
 15157 ;; Defined at:
 15158 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15159 ;; Parameters:    Size  Location     Type
 15160 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15161 ;;		 -> f(6), NULL(0), 
 15162 ;;  f               4  [STACK] PTR struct _IO_FILE
 15163 ;;  c               1  [STACK] unsigned char 
 15164 ;; Auto vars:     Size  Location     Type
 15165 ;;  u               4  [STACK] unsigned char 
 15166 ;;  g               4  [STACK] unsigned char 
 15167 ;;  l               4  [STACK] unsigned char 
 15168 ;;  h               4  [STACK] unsigned char 
 15169 ;;  ou              4  [STACK] unsigned char 
 15170 ;;  n               2  [STACK] int 
 15171 ;;  e               2  [STACK] int 
 15172 ;;  i               2  [STACK] int 
 15173 ;;  w               2  [STACK] int 
 15174 ;;  p               2  [STACK] int 
 15175 ;;  sign            2  [STACK] int 
 15176 ;;  d               2  [STACK] int 
 15177 ;;  ne              2  [STACK] int 
 15178 ;;  m               2  [STACK] int 
 15179 ;;  pp              2  [STACK] int 
 15180 ;;  t               2  [STACK] int 
 15181 ;;  mode            1  [STACK] unsigned char 
 15182 ;;  nmode           1  [STACK] unsigned char 
 15183 ;; Return value:  Size  Location     Type
 15184 ;;                  2  [STACK] int 
 15185 ;; Registers used:
 15186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15187 ;; Tracked objects:
 15188 ;;		On entry : 0/0
 15189 ;;		On exit  : 0/0
 15190 ;;		Unchanged: 0/0
 15191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15196 ;;Total ram usage:        0 bytes
 15197 ;; Hardware stack levels used:    1
 15198 ;; Hardware stack levels required when called:   20
 15199 ;; This function calls:
 15200 ;;		___awdiv
 15201 ;;		___awmod
 15202 ;;		___fladd
 15203 ;;		___fldiv
 15204 ;;		___fleq
 15205 ;;		___flge
 15206 ;;		___flmul
 15207 ;;		___flneg
 15208 ;;		___flsub
 15209 ;;		___fltol
 15210 ;;		___fpclassifyf
 15211 ;;		_floorf
 15212 ;;		_isupper
 15213 ;;		_pad
 15214 ;;		_strcpy
 15215 ;;		_tolower
 15216 ;; This function is called by:
 15217 ;;		_vfpfcnvrt
 15218 ;; This function uses a reentrant model
 15219 ;;
 15220                           
 15221                           	psect	text55
 15222  010000                     __ptext55:
 15223                           	opt callstack 0
 15224  010000                     _efgtoa:
 15225                           	opt callstack 0
 15226                           
 15227                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15228  010000  0E38               	movlw	56
 15229  010002  26E1               	addwf	fsr1l,f,c
 15230  010004  0E00               	movlw	0
 15231  010006  22E2               	addwfc	fsr1h,f,c
 15232                           
 15233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 15234                           ;stkvar	_sign @ sp[(-56)+42]
 15235                           
 15236                           ;incstack = 0
 15237 ;; hardware stack exceeded
 15238  010008  0EF2               	movlw	-14
 15239  01000A  6AE3               	clrf	plusw1,c
 15240  01000C  0EF3               	movlw	-13
 15241  01000E  6AE3               	clrf	plusw1,c
 15242                           
 15243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 15244                           ;stkvar	_f @ sp[(-56)+-6]
 15245  010010  0EC2               	movlw	-62
 15246  010012  006F FF8C  F02E    	movff	plusw1,btemp+8
 15247  010018  0EC3               	movlw	-61
 15248  01001A  006F FF8C  F02F    	movff	plusw1,btemp+9
 15249  010020  0EC4               	movlw	-60
 15250  010022  006F FF8C  F030    	movff	plusw1,btemp+10
 15251  010028  0EC5               	movlw	-59
 15252  01002A  006F FF8C  F031    	movff	plusw1,btemp+11
 15253                           
 15254                           ;stkvar	_g @ sp[(-56)+16]
 15255  010030  0ED8               	movlw	-40
 15256  010032  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 15257  010038  0ED9               	movlw	-39
 15258  01003A  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 15259  010040  0EDA               	movlw	-38
 15260  010042  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15261  010048  0EDB               	movlw	-37
 15262  01004A  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15263                           
 15264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 15265                           ;stkvar	_g @ sp[(-56)+16]
 15266  010050  0EDB               	movlw	-37
 15267  010052  AEE3               	btfss	plusw1,7,c
 15268  010054  D02B               	goto	l11647
 15269                           
 15270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 15271  010056  0E01               	movlw	1
 15272  010058  6E30               	movwf	(btemp+10)^0,c
 15273  01005A  0E00               	movlw	0
 15274  01005C  6E31               	movwf	(btemp+11)^0,c
 15275                           
 15276                           ;stkvar	_sign @ sp[(-56)+42]
 15277  01005E  0EF2               	movlw	-14
 15278  010060  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15279  010066  0EF3               	movlw	-13
 15280  010068  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15281                           
 15282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 15283                           ;stkvar	_g @ sp[(-56)+16]
 15284  01006E  0ED8               	movlw	-40
 15285  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 15286  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 15287  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 15288  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 15289  010088  ECA6  F0D5         	call	___flneg	;wreg free
 15290                           
 15291                           ;stkvar	_g @ sp[(-56)+16]
 15292  01008C  0ED8               	movlw	-40
 15293  01008E  0060  F09B  FFE3   	movff	btemp,plusw1
 15294  010094  0ED9               	movlw	-39
 15295  010096  0060  F09F  FFE3   	movff	btemp+1,plusw1
 15296  01009C  0EDA               	movlw	-38
 15297  01009E  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 15298  0100A4  0EDB               	movlw	-37
 15299  0100A6  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 15300  0100AC                     l11647:
 15301                           
 15302                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 15303                           ;stkvar	_n @ sp[(-56)+32]
 15304  0100AC  0EE8               	movlw	-24
 15305  0100AE  6AE3               	clrf	plusw1,c
 15306  0100B0  0EE9               	movlw	-23
 15307  0100B2  6AE3               	clrf	plusw1,c
 15308                           
 15309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 15310                           ;stkvar	_w @ sp[(-56)+38]
 15311  0100B4  0EEE               	movlw	-18
 15312  0100B6  0060  F02B  FFE3   	movff	_width,plusw1
 15313  0100BC  0EEF               	movlw	-17
 15314  0100BE  0060  F02F  FFE3   	movff	_width+1,plusw1
 15315                           
 15316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 15317                           ;stkvar	_sign @ sp[(-56)+42]
 15318  0100C4  0EF2               	movlw	-14
 15319  0100C6  006F FF8C  F026    	movff	plusw1,btemp
 15320  0100CC  0EF3               	movlw	-13
 15321  0100CE  50E3               	movf	plusw1,w,c
 15322  0100D0  1026               	iorwf	btemp^0,w,c
 15323  0100D2  A4D8               	btfss	status,2,c
 15324  0100D4  D002               	goto	u10770
 15325  0100D6  A40E               	btfss	_flags^0,2,c
 15326  0100D8  D036               	goto	l11667
 15327  0100DA                     u10770:
 15328                           
 15329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 15330                           ;stkvar	_sign @ sp[(-56)+42]
 15331  0100DA  0EF2               	movlw	-14
 15332  0100DC  006F FF8C  F026    	movff	plusw1,btemp
 15333  0100E2  0EF3               	movlw	-13
 15334  0100E4  50E3               	movf	plusw1,w,c
 15335  0100E6  1026               	iorwf	btemp^0,w,c
 15336  0100E8  A4D8               	btfss	status,2,c
 15337  0100EA  D002               	goto	l11659
 15338  0100EC  0E2B               	movlw	43
 15339  0100EE  D001               	goto	L14
 15340  0100F0                     l11659:
 15341  0100F0  0E2D               	movlw	45
 15342  0100F2                     L14:
 15343  0100F2  6E30               	movwf	(btemp+10)^0,c
 15344  0100F4  0E00               	movlw	0
 15345  0100F6  6E31               	movwf	(btemp+11)^0,c
 15346                           
 15347                           ;stkvar	_efgtoa$5407 @ sp[(-56)+10]
 15348  0100F8  0ED2               	movlw	-46
 15349  0100FA  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15350  010100  0ED3               	movlw	-45
 15351  010102  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15352                           
 15353                           ;stkvar	_efgtoa$5407 @ sp[(-56)+10]
 15354  010108  0ED2               	movlw	-46
 15355  01010A  006F FF8C  F3AE    	movff	plusw1,_dbuf
 15356                           
 15357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 15358                           ;stkvar	_n @ sp[(-56)+32]
 15359  010110  0EE8               	movlw	-24
 15360  010112  50E3               	movf	plusw1,w,c
 15361  010114  0F01               	addlw	1
 15362  010116  6E26               	movwf	btemp^0,c
 15363  010118  0EE8               	movlw	-24
 15364  01011A  0060  F09B  FFE3   	movff	btemp,plusw1
 15365  010120  6A26               	clrf	btemp^0,c
 15366  010122  0EE9               	movlw	-23
 15367  010124  50E3               	movf	plusw1,w,c
 15368  010126  2026               	addwfc	btemp^0,w,c
 15369  010128  6E26               	movwf	btemp^0,c
 15370  01012A  0EE9               	movlw	-23
 15371  01012C  0060  F09B  FFE3   	movff	btemp,plusw1
 15372                           
 15373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 15374                           ;stkvar	_w @ sp[(-56)+38]
 15375  010132  50E1               	movf	fsr1l,w,c
 15376  010134  0FEE               	addlw	-18
 15377  010136  6ED9               	movwf	fsr2l,c
 15378  010138  50E2               	movf	fsr1h,w,c
 15379  01013A  6EDA               	movwf	fsr2h,c
 15380  01013C  0EFF               	movlw	255
 15381  01013E  22DA               	addwfc	fsr2h,f,c
 15382  010140  06DE               	decf	postinc2,f,c
 15383  010142  0E00               	movlw	0
 15384  010144  5ADD               	subwfb	postdec2,f,c
 15385  010146                     l11667:
 15386                           
 15387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15388                           ;stkvar	_g @ sp[(-56)+16]
 15389  010146  0ED8               	movlw	-40
 15390  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 15391  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 15392  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 15393  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 15394  010160  ECC2  F0BF         	call	___fpclassifyf	;wreg free
 15395  010164  0426               	decf	btemp^0,w,c
 15396  010166  1027               	iorwf	(btemp+1)^0,w,c
 15397  010168  A4D8               	btfss	status,2,c
 15398  01016A  D076               	goto	l11685
 15399  01016C  0EBF               	movlw	191
 15400  01016E  6E30               	movwf	(btemp+10)^0,c
 15401  010170  0EFF               	movlw	255
 15402  010172  6E31               	movwf	(btemp+11)^0,c
 15403                           
 15404                           ;stkvar	_c @ sp[(-56)+-7]
 15405  010174  0EC1               	movlw	-63
 15406  010176  50E3               	movf	plusw1,w,c
 15407  010178  6E2E               	movwf	(btemp+8)^0,c
 15408  01017A  6A2F               	clrf	(btemp+9)^0,c
 15409  01017C  5030               	movf	(btemp+10)^0,w,c
 15410  01017E  262E               	addwf	(btemp+8)^0,f,c
 15411  010180  5031               	movf	(btemp+11)^0,w,c
 15412  010182  222F               	addwfc	(btemp+9)^0,f,c
 15413  010184  502F               	movf	(btemp+9)^0,w,c
 15414  010186  E106               	bnz	u10800
 15415  010188  0E1A               	movlw	26
 15416  01018A  5C2E               	subwf	(btemp+8)^0,w,c
 15417  01018C  B0D8               	btfsc	status,0,c
 15418  01018E  D002               	goto	u10800
 15419  010190  0E01               	movlw	1
 15420  010192  D001               	goto	u10810
 15421  010194                     u10800:
 15422  010194  0E00               	movlw	0
 15423  010196                     u10810:
 15424  010196  6E30               	movwf	(btemp+10)^0,c
 15425  010198  6A31               	clrf	(btemp+11)^0,c
 15426                           
 15427                           ;stkvar	_efgtoa$5408 @ sp[(-56)+8]
 15428  01019A  0ED0               	movlw	-48
 15429  01019C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15430  0101A2  0ED1               	movlw	-47
 15431  0101A4  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15432                           
 15433                           ;stkvar	_efgtoa$5408 @ sp[(-56)+8]
 15434  0101AA  0ED0               	movlw	-48
 15435  0101AC  006F FF8C  F026    	movff	plusw1,btemp
 15436  0101B2  0ED1               	movlw	-47
 15437  0101B4  50E3               	movf	plusw1,w,c
 15438  0101B6  1026               	iorwf	btemp^0,w,c
 15439  0101B8  B4D8               	btfsc	status,2,c
 15440  0101BA  D017               	goto	l11677
 15441                           
 15442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 15443  0101BC  0ED6               	movlw	low STR_66
 15444  0101BE  6EE6               	movwf	postinc1,c
 15445  0101C0  0EFF               	movlw	high STR_66
 15446  0101C2  6EE6               	movwf	postinc1,c
 15447                           
 15448                           ;stkvar	_n @ sp[(-58)+32]
 15449  0101C4  0EAE               	movlw	low _dbuf
 15450  0101C6  6E30               	movwf	(btemp+10)^0,c
 15451  0101C8  0E03               	movlw	high _dbuf
 15452  0101CA  6E31               	movwf	(btemp+11)^0,c
 15453  0101CC  0EE6               	movlw	-26
 15454  0101CE  50E3               	movf	plusw1,w,c
 15455  0101D0  2630               	addwf	(btemp+10)^0,f,c
 15456  0101D2  0EE7               	movlw	-25
 15457  0101D4  50E3               	movf	plusw1,w,c
 15458  0101D6  2231               	addwfc	(btemp+11)^0,f,c
 15459  0101D8  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 15460  0101DE  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 15461  0101E4  ECE7  F0CC         	call	_strcpy	;wreg free
 15462                           
 15463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 15464  0101E8  D016               	goto	l11679
 15465  0101EA                     l11677:
 15466                           
 15467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 15468  0101EA  0EDE               	movlw	low STR_67
 15469  0101EC  6EE6               	movwf	postinc1,c
 15470  0101EE  0EFF               	movlw	high STR_67
 15471  0101F0  6EE6               	movwf	postinc1,c
 15472                           
 15473                           ;stkvar	_n @ sp[(-58)+32]
 15474  0101F2  0EAE               	movlw	low _dbuf
 15475  0101F4  6E30               	movwf	(btemp+10)^0,c
 15476  0101F6  0E03               	movlw	high _dbuf
 15477  0101F8  6E31               	movwf	(btemp+11)^0,c
 15478  0101FA  0EE6               	movlw	-26
 15479  0101FC  50E3               	movf	plusw1,w,c
 15480  0101FE  2630               	addwf	(btemp+10)^0,f,c
 15481  010200  0EE7               	movlw	-25
 15482  010202  50E3               	movf	plusw1,w,c
 15483  010204  2231               	addwfc	(btemp+11)^0,f,c
 15484  010206  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 15485  01020C  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 15486  010212  ECE7  F0CC         	call	_strcpy	;wreg free
 15487  010216                     l11679:
 15488                           
 15489                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 15490                           ;stkvar	_w @ sp[(-56)+38]
 15491  010216  50E1               	movf	fsr1l,w,c
 15492  010218  0FEE               	addlw	-18
 15493  01021A  6ED9               	movwf	fsr2l,c
 15494  01021C  50E2               	movf	fsr1h,w,c
 15495  01021E  6EDA               	movwf	fsr2h,c
 15496  010220  0EFF               	movlw	255
 15497  010222  22DA               	addwfc	fsr2h,f,c
 15498  010224  0EFD               	movlw	253
 15499  010226  26DE               	addwf	postinc2,f,c
 15500  010228  0EFF               	movlw	255
 15501  01022A  22DD               	addwfc	postdec2,f,c
 15502  01022C                     l11681:
 15503                           
 15504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 15505                           ;stkvar	_w @ sp[(-56)+38]
 15506  01022C  0EEE               	movlw	-18
 15507  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 15508  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 15509  01023A  0EAE               	movlw	low _dbuf
 15510  01023C  6EE6               	movwf	postinc1,c
 15511  01023E  0E03               	movlw	high _dbuf
 15512  010240  6EE6               	movwf	postinc1,c
 15513                           
 15514                           ;stkvar	_fp @ sp[(-60)+-2]
 15515  010242  0EC2               	movlw	-62
 15516  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 15517  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 15518  010250  EC75  F0C8         	call	_pad	;wreg free
 15519  010254  EF1D  F089         	goto	l2179
 15520  010258                     l11685:
 15521                           
 15522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15523                           ;stkvar	_g @ sp[(-56)+16]
 15524  010258  0ED8               	movlw	-40
 15525  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 15526  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 15527  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 15528  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 15529  010272  ECC2  F0BF         	call	___fpclassifyf	;wreg free
 15530  010276  5026               	movf	btemp^0,w,c
 15531  010278  1027               	iorwf	(btemp+1)^0,w,c
 15532  01027A  A4D8               	btfss	status,2,c
 15533  01027C  D056               	goto	l11703
 15534  01027E  0EBF               	movlw	191
 15535  010280  6E30               	movwf	(btemp+10)^0,c
 15536  010282  0EFF               	movlw	255
 15537  010284  6E31               	movwf	(btemp+11)^0,c
 15538                           
 15539                           ;stkvar	_c @ sp[(-56)+-7]
 15540  010286  0EC1               	movlw	-63
 15541  010288  50E3               	movf	plusw1,w,c
 15542  01028A  6E2E               	movwf	(btemp+8)^0,c
 15543  01028C  6A2F               	clrf	(btemp+9)^0,c
 15544  01028E  5030               	movf	(btemp+10)^0,w,c
 15545  010290  262E               	addwf	(btemp+8)^0,f,c
 15546  010292  5031               	movf	(btemp+11)^0,w,c
 15547  010294  222F               	addwfc	(btemp+9)^0,f,c
 15548  010296  502F               	movf	(btemp+9)^0,w,c
 15549  010298  E106               	bnz	u10840
 15550  01029A  0E1A               	movlw	26
 15551  01029C  5C2E               	subwf	(btemp+8)^0,w,c
 15552  01029E  B0D8               	btfsc	status,0,c
 15553  0102A0  D002               	goto	u10840
 15554  0102A2  0E01               	movlw	1
 15555  0102A4  D001               	goto	u10850
 15556  0102A6                     u10840:
 15557  0102A6  0E00               	movlw	0
 15558  0102A8                     u10850:
 15559  0102A8  6E30               	movwf	(btemp+10)^0,c
 15560  0102AA  6A31               	clrf	(btemp+11)^0,c
 15561                           
 15562                           ;stkvar	_efgtoa$5412 @ sp[(-56)+6]
 15563  0102AC  0ECE               	movlw	-50
 15564  0102AE  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15565  0102B4  0ECF               	movlw	-49
 15566  0102B6  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15567                           
 15568                           ;stkvar	_efgtoa$5412 @ sp[(-56)+6]
 15569  0102BC  0ECE               	movlw	-50
 15570  0102BE  006F FF8C  F026    	movff	plusw1,btemp
 15571  0102C4  0ECF               	movlw	-49
 15572  0102C6  50E3               	movf	plusw1,w,c
 15573  0102C8  1026               	iorwf	btemp^0,w,c
 15574  0102CA  B4D8               	btfsc	status,2,c
 15575  0102CC  D017               	goto	l11695
 15576                           
 15577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 15578  0102CE  0EDA               	movlw	low STR_70
 15579  0102D0  6EE6               	movwf	postinc1,c
 15580  0102D2  0EFF               	movlw	high STR_70
 15581  0102D4  6EE6               	movwf	postinc1,c
 15582                           
 15583                           ;stkvar	_n @ sp[(-58)+32]
 15584  0102D6  0EAE               	movlw	low _dbuf
 15585  0102D8  6E30               	movwf	(btemp+10)^0,c
 15586  0102DA  0E03               	movlw	high _dbuf
 15587  0102DC  6E31               	movwf	(btemp+11)^0,c
 15588  0102DE  0EE6               	movlw	-26
 15589  0102E0  50E3               	movf	plusw1,w,c
 15590  0102E2  2630               	addwf	(btemp+10)^0,f,c
 15591  0102E4  0EE7               	movlw	-25
 15592  0102E6  50E3               	movf	plusw1,w,c
 15593  0102E8  2231               	addwfc	(btemp+11)^0,f,c
 15594  0102EA  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 15595  0102F0  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 15596  0102F6  ECE7  F0CC         	call	_strcpy	;wreg free
 15597                           
 15598                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 15599  0102FA  D78D               	goto	l11679
 15600  0102FC                     l11695:
 15601                           
 15602                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 15603  0102FC  0EE2               	movlw	low STR_71
 15604  0102FE  6EE6               	movwf	postinc1,c
 15605  010300  0EFF               	movlw	high STR_71
 15606  010302  6EE6               	movwf	postinc1,c
 15607                           
 15608                           ;stkvar	_n @ sp[(-58)+32]
 15609  010304  0EAE               	movlw	low _dbuf
 15610  010306  6E30               	movwf	(btemp+10)^0,c
 15611  010308  0E03               	movlw	high _dbuf
 15612  01030A  6E31               	movwf	(btemp+11)^0,c
 15613  01030C  0EE6               	movlw	-26
 15614  01030E  50E3               	movf	plusw1,w,c
 15615  010310  2630               	addwf	(btemp+10)^0,f,c
 15616  010312  0EE7               	movlw	-25
 15617  010314  50E3               	movf	plusw1,w,c
 15618  010316  2231               	addwfc	(btemp+11)^0,f,c
 15619  010318  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 15620  01031E  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 15621  010324  ECE7  F0CC         	call	_strcpy	;wreg free
 15622  010328  D776               	goto	l11679
 15623  01032A                     l11703:
 15624                           
 15625                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 15626  01032A  0E00               	movlw	0
 15627  01032C  6E2E               	movwf	(btemp+8)^0,c
 15628  01032E  0E00               	movlw	0
 15629  010330  6E2F               	movwf	(btemp+9)^0,c
 15630  010332  0E80               	movlw	128
 15631  010334  6E30               	movwf	(btemp+10)^0,c
 15632  010336  0E3F               	movlw	63
 15633  010338  6E31               	movwf	(btemp+11)^0,c
 15634                           
 15635                           ;stkvar	_u @ sp[(-56)+12]
 15636  01033A  0ED4               	movlw	-44
 15637  01033C  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 15638  010342  0ED5               	movlw	-43
 15639  010344  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 15640  01034A  0ED6               	movlw	-42
 15641  01034C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15642  010352  0ED7               	movlw	-41
 15643  010354  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15644                           
 15645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 15646                           ;stkvar	_e @ sp[(-56)+34]
 15647  01035A  0EEA               	movlw	-22
 15648  01035C  6AE3               	clrf	plusw1,c
 15649  01035E  0EEB               	movlw	-21
 15650  010360  6AE3               	clrf	plusw1,c
 15651                           
 15652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 15653  010362  0E00               	movlw	0
 15654  010364  6EE6               	movwf	postinc1,c
 15655  010366  0E00               	movlw	0
 15656  010368  6EE6               	movwf	postinc1,c
 15657  01036A  0E00               	movlw	0
 15658  01036C  6EE6               	movwf	postinc1,c
 15659  01036E  0E00               	movlw	0
 15660  010370  6EE6               	movwf	postinc1,c
 15661                           
 15662                           ;stkvar	_g @ sp[(-60)+16]
 15663  010372  0ED4               	movlw	-44
 15664  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 15665  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 15666  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 15667  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 15668  01038C  ECB4  F0CD         	call	___fleq	;wreg free
 15669  010390  A026               	btfss	btemp& (0+255),0,c
 15670  010392  D039               	goto	l11715
 15671  010394  D0BC               	goto	u10890
 15672  010396                     l11711:
 15673                           
 15674                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 15675  010396  0E00               	movlw	0
 15676  010398  6EE6               	movwf	postinc1,c
 15677  01039A  0E00               	movlw	0
 15678  01039C  6EE6               	movwf	postinc1,c
 15679  01039E  0E20               	movlw	32
 15680  0103A0  6EE6               	movwf	postinc1,c
 15681  0103A2  0E41               	movlw	65
 15682  0103A4  6EE6               	movwf	postinc1,c
 15683                           
 15684                           ;stkvar	_u @ sp[(-60)+12]
 15685  0103A6  0ED0               	movlw	-48
 15686  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15687  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 15688  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 15689  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 15690  0103C0  EC0F  F099         	call	___flmul	;wreg free
 15691                           
 15692                           ;stkvar	_u @ sp[(-56)+12]
 15693  0103C4  0ED4               	movlw	-44
 15694  0103C6  0060  F09B  FFE3   	movff	btemp,plusw1
 15695  0103CC  0ED5               	movlw	-43
 15696  0103CE  0060  F09F  FFE3   	movff	btemp+1,plusw1
 15697  0103D4  0ED6               	movlw	-42
 15698  0103D6  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 15699  0103DC  0ED7               	movlw	-41
 15700  0103DE  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 15701                           
 15702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 15703                           ;stkvar	_e @ sp[(-56)+34]
 15704  0103E4  0EEA               	movlw	-22
 15705  0103E6  50E3               	movf	plusw1,w,c
 15706  0103E8  0F01               	addlw	1
 15707  0103EA  6E26               	movwf	btemp^0,c
 15708  0103EC  0EEA               	movlw	-22
 15709  0103EE  0060  F09B  FFE3   	movff	btemp,plusw1
 15710  0103F4  6A26               	clrf	btemp^0,c
 15711  0103F6  0EEB               	movlw	-21
 15712  0103F8  50E3               	movf	plusw1,w,c
 15713  0103FA  2026               	addwfc	btemp^0,w,c
 15714  0103FC  6E26               	movwf	btemp^0,c
 15715  0103FE  0EEB               	movlw	-21
 15716  010400  0060  F09B  FFE3   	movff	btemp,plusw1
 15717  010406                     l11715:
 15718                           
 15719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 15720  010406  0E00               	movlw	0
 15721  010408  6EE6               	movwf	postinc1,c
 15722  01040A  0E00               	movlw	0
 15723  01040C  6EE6               	movwf	postinc1,c
 15724  01040E  0E20               	movlw	32
 15725  010410  6EE6               	movwf	postinc1,c
 15726  010412  0E41               	movlw	65
 15727  010414  6EE6               	movwf	postinc1,c
 15728                           
 15729                           ;stkvar	_u @ sp[(-60)+12]
 15730  010416  0ED0               	movlw	-48
 15731  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 15732  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 15733  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 15734  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 15735  010430  EC0F  F099         	call	___flmul	;wreg free
 15736  010434  0060  F09B  FFE6   	movff	btemp,postinc1
 15737  01043A  0060  F09F  FFE6   	movff	btemp+1,postinc1
 15738  010440  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 15739  010446  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 15740                           
 15741                           ;stkvar	_g @ sp[(-60)+16]
 15742  01044C  0ED4               	movlw	-44
 15743  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 15744  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 15745  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 15746  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 15747  010466  EC78  F0C3         	call	___flge	;wreg free
 15748  01046A  A026               	btfss	btemp& (0+255),0,c
 15749  01046C  D032               	goto	l11721
 15750  01046E  D793               	goto	l11711
 15751  010470                     l11717:
 15752                           
 15753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 15754  010470  0E00               	movlw	0
 15755  010472  6EE6               	movwf	postinc1,c
 15756  010474  0E00               	movlw	0
 15757  010476  6EE6               	movwf	postinc1,c
 15758  010478  0E20               	movlw	32
 15759  01047A  6EE6               	movwf	postinc1,c
 15760  01047C  0E41               	movlw	65
 15761  01047E  6EE6               	movwf	postinc1,c
 15762                           
 15763                           ;stkvar	_u @ sp[(-60)+12]
 15764  010480  0ED0               	movlw	-48
 15765  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 15766  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 15767  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 15768  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 15769  01049A  ECA3  F0A4         	call	___fldiv	;wreg free
 15770                           
 15771                           ;stkvar	_u @ sp[(-56)+12]
 15772  01049E  0ED4               	movlw	-44
 15773  0104A0  0060  F09B  FFE3   	movff	btemp,plusw1
 15774  0104A6  0ED5               	movlw	-43
 15775  0104A8  0060  F09F  FFE3   	movff	btemp+1,plusw1
 15776  0104AE  0ED6               	movlw	-42
 15777  0104B0  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 15778  0104B6  0ED7               	movlw	-41
 15779  0104B8  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 15780                           
 15781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 15782                           ;stkvar	_e @ sp[(-56)+34]
 15783  0104BE  50E1               	movf	fsr1l,w,c
 15784  0104C0  0FEA               	addlw	-22
 15785  0104C2  6ED9               	movwf	fsr2l,c
 15786  0104C4  50E2               	movf	fsr1h,w,c
 15787  0104C6  6EDA               	movwf	fsr2h,c
 15788  0104C8  0EFF               	movlw	255
 15789  0104CA  22DA               	addwfc	fsr2h,f,c
 15790  0104CC  06DE               	decf	postinc2,f,c
 15791  0104CE  0E00               	movlw	0
 15792  0104D0  5ADD               	subwfb	postdec2,f,c
 15793  0104D2                     l11721:
 15794                           
 15795                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 15796                           ;stkvar	_u @ sp[(-56)+12]
 15797  0104D2  0ED4               	movlw	-44
 15798  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 15799  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 15800  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 15801  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 15802                           
 15803                           ;stkvar	_g @ sp[(-60)+16]
 15804  0104EC  0ED4               	movlw	-44
 15805  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 15806  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 15807  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 15808  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 15809  010506  EC78  F0C3         	call	___flge	;wreg free
 15810  01050A  A026               	btfss	btemp& (0+255),0,c
 15811  01050C  D7B1               	goto	l11717
 15812  01050E                     u10890:
 15813                           
 15814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 15815                           ;stkvar	_c @ sp[(-56)+-7]
 15816  01050E  0EC1               	movlw	-63
 15817  010510  50E3               	movf	plusw1,w,c
 15818  010512  6EE6               	movwf	postinc1,c
 15819  010514  0E00               	movlw	0
 15820  010516  6EE6               	movwf	postinc1,c
 15821  010518  EC6E  F0D2         	call	_tolower	;wreg free
 15822                           
 15823                           ;stkvar	_mode @ sp[(-56)+54]
 15824  01051C  0EFE               	movlw	-2
 15825  01051E  0060  F09B  FFE3   	movff	btemp,plusw1
 15826                           
 15827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 15828                           ;stkvar	_mode @ sp[(-56)+54]
 15829                           ;stkvar	_nmode @ sp[(-56)+55]
 15830  010524  0EFE               	movlw	-2
 15831  010526  006F FF8C  F026    	movff	plusw1,btemp
 15832  01052C  0EFF               	movlw	-1
 15833  01052E  0060  F09B  FFE3   	movff	btemp,plusw1
 15834                           
 15835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 15836                           ;stkvar	_mode @ sp[(-56)+54]
 15837  010534  0EFE               	movlw	-2
 15838  010536  006F FF8C  F026    	movff	plusw1,btemp
 15839  01053C  0E67               	movlw	103
 15840  01053E  1826               	xorwf	btemp^0,w,c
 15841  010540  A4D8               	btfss	status,2,c
 15842  010542  D025               	goto	l11739
 15843                           
 15844                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 15845  010544  500C               	movf	_prec^0,w,c
 15846  010546  100D               	iorwf	(_prec+1)^0,w,c
 15847  010548  A4D8               	btfss	status,2,c
 15848  01054A  D004               	goto	l11733
 15849                           
 15850                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 15851  01054C  0E00               	movlw	0
 15852  01054E  6E0D               	movwf	(_prec+1)^0,c
 15853  010550  0E01               	movlw	1
 15854  010552  6E0C               	movwf	_prec^0,c
 15855  010554                     l11733:
 15856                           
 15857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 15858  010554  BE0D               	btfsc	(_prec+1)^0,7,c
 15859  010556  D005               	goto	u10920
 15860  010558  500D               	movf	(_prec+1)^0,w,c
 15861  01055A  E110               	bnz	l11737
 15862  01055C  040C               	decf	_prec^0,w,c
 15863  01055E  B0D8               	btfsc	status,0,c
 15864  010560  D00D               	goto	l11737
 15865  010562                     u10920:
 15866  010562  0E06               	movlw	6
 15867  010564  6E30               	movwf	(btemp+10)^0,c
 15868  010566  0E00               	movlw	0
 15869  010568  6E31               	movwf	(btemp+11)^0,c
 15870                           
 15871                           ;stkvar	_p @ sp[(-56)+40]
 15872  01056A  0EF0               	movlw	-16
 15873  01056C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 15874  010572  0EF1               	movlw	-15
 15875  010574  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15876  01057A  D00C               	goto	l11745
 15877  01057C                     l11737:
 15878                           
 15879                           ;stkvar	_p @ sp[(-56)+40]
 15880  01057C  0EF0               	movlw	-16
 15881  01057E  0060  F033  FFE3   	movff	_prec,plusw1
 15882  010584  0EF1               	movlw	-15
 15883  010586  0060  F037  FFE3   	movff	_prec+1,plusw1
 15884  01058C  D003               	goto	l11745
 15885  01058E                     l11739:
 15886                           
 15887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 15888  01058E  AE0D               	btfss	(_prec+1)^0,7,c
 15889  010590  D7F5               	goto	l11737
 15890  010592  D7E7               	goto	u10920
 15891  010594                     l11745:
 15892                           
 15893                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 15894                           ;stkvar	_mode @ sp[(-56)+54]
 15895  010594  0EFE               	movlw	-2
 15896  010596  006F FF8C  F026    	movff	plusw1,btemp
 15897  01059C  0E67               	movlw	103
 15898  01059E  1826               	xorwf	btemp^0,w,c
 15899  0105A0  A4D8               	btfss	status,2,c
 15900  0105A2  D02F               	goto	l11755
 15901                           
 15902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 15903                           ;stkvar	_e @ sp[(-56)+34]
 15904  0105A4  0EEB               	movlw	-21
 15905  0105A6  AEE3               	btfss	plusw1,7,c
 15906  0105A8  D00E               	goto	u10950
 15907  0105AA  0EEA               	movlw	-22
 15908  0105AC  006F FF8C  F026    	movff	plusw1,btemp
 15909  0105B2  0EFC               	movlw	252
 15910  0105B4  5E26               	subwf	btemp^0,f,c
 15911  0105B6  0EEB               	movlw	-21
 15912  0105B8  006F FF8C  F026    	movff	plusw1,btemp
 15913  0105BE  0EFF               	movlw	255
 15914  0105C0  5A26               	subwfb	btemp^0,f,c
 15915  0105C2  A0D8               	btfss	status,0,c
 15916  0105C4  D018               	goto	l11753
 15917  0105C6                     u10950:
 15918                           
 15919                           ;stkvar	_e @ sp[(-56)+34]
 15920                           ;stkvar	_p @ sp[(-56)+40]
 15921  0105C6  0EF0               	movlw	-16
 15922  0105C8  50E3               	movf	plusw1,w,c
 15923  0105CA  0FFF               	addlw	255
 15924  0105CC  6E30               	movwf	(btemp+10)^0,c
 15925  0105CE  0EF1               	movlw	-15
 15926  0105D0  006F FF8C  F031    	movff	plusw1,btemp+11
 15927  0105D6  0EFF               	movlw	255
 15928  0105D8  2231               	addwfc	(btemp+11)^0,f,c
 15929  0105DA  0EEA               	movlw	-22
 15930  0105DC  50E3               	movf	plusw1,w,c
 15931  0105DE  5C30               	subwf	(btemp+10)^0,w,c
 15932  0105E0  5031               	movf	(btemp+11)^0,w,c
 15933  0105E2  0A80               	xorlw	128
 15934  0105E4  6E26               	movwf	btemp^0,c
 15935  0105E6  0EEB               	movlw	-21
 15936  0105E8  50E3               	movf	plusw1,w,c
 15937  0105EA  0A80               	xorlw	128
 15938  0105EC  5826               	subwfb	btemp^0,w,c
 15939  0105EE  A0D8               	btfss	status,0,c
 15940  0105F0  D002               	goto	l11753
 15941                           
 15942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 15943  0105F2  0E66               	movlw	102
 15944  0105F4  D001               	goto	L15
 15945  0105F6                     l11753:
 15946                           
 15947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 15948  0105F6  0E65               	movlw	101
 15949  0105F8                     L15:
 15950  0105F8  6E31               	movwf	(btemp+11)^0,c
 15951                           
 15952                           ;stkvar	_nmode @ sp[(-56)+55]
 15953  0105FA  0EFF               	movlw	-1
 15954  0105FC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 15955  010602                     l11755:
 15956                           
 15957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 15958                           ;stkvar	_p @ sp[(-56)+40]
 15959                           ;stkvar	_m @ sp[(-56)+48]
 15960  010602  0EF0               	movlw	-16
 15961  010604  006F FF8C  F026    	movff	plusw1,btemp
 15962  01060A  0EF8               	movlw	-8
 15963  01060C  0060  F09B  FFE3   	movff	btemp,plusw1
 15964  010612  0EF1               	movlw	-15
 15965  010614  006F FF8C  F026    	movff	plusw1,btemp
 15966  01061A  0EF9               	movlw	-7
 15967  01061C  0060  F09B  FFE3   	movff	btemp,plusw1
 15968                           
 15969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 15970                           ;stkvar	_mode @ sp[(-56)+54]
 15971  010622  0EFE               	movlw	-2
 15972  010624  006F FF8C  F026    	movff	plusw1,btemp
 15973  01062A  0E67               	movlw	103
 15974  01062C  1826               	xorwf	btemp^0,w,c
 15975  01062E  A4D8               	btfss	status,2,c
 15976  010630  D00B               	goto	u10990
 15977                           
 15978                           ;stkvar	_nmode @ sp[(-56)+55]
 15979  010632  0EFF               	movlw	-1
 15980  010634  006F FF8C  F026    	movff	plusw1,btemp
 15981  01063A  0E66               	movlw	102
 15982  01063C  1826               	xorwf	btemp^0,w,c
 15983  01063E  A4D8               	btfss	status,2,c
 15984  010640  D014               	goto	l2208
 15985                           
 15986                           ;stkvar	_e @ sp[(-56)+34]
 15987  010642  0EEB               	movlw	-21
 15988  010644  AEE3               	btfss	plusw1,7,c
 15989  010646  D011               	goto	l2208
 15990  010648                     u10990:
 15991                           
 15992                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 15993                           ;stkvar	_m @ sp[(-56)+48]
 15994  010648  0EF8               	movlw	-8
 15995  01064A  50E3               	movf	plusw1,w,c
 15996  01064C  0F01               	addlw	1
 15997  01064E  6E26               	movwf	btemp^0,c
 15998  010650  0EF8               	movlw	-8
 15999  010652  0060  F09B  FFE3   	movff	btemp,plusw1
 16000  010658  6A26               	clrf	btemp^0,c
 16001  01065A  0EF9               	movlw	-7
 16002  01065C  50E3               	movf	plusw1,w,c
 16003  01065E  2026               	addwfc	btemp^0,w,c
 16004  010660  6E26               	movwf	btemp^0,c
 16005  010662  0EF9               	movlw	-7
 16006  010664  0060  F09B  FFE3   	movff	btemp,plusw1
 16007  01066A                     l2208:
 16008                           
 16009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 16010                           ;stkvar	_nmode @ sp[(-56)+55]
 16011  01066A  0EFF               	movlw	-1
 16012  01066C  006F FF8C  F026    	movff	plusw1,btemp
 16013  010672  0E66               	movlw	102
 16014  010674  1826               	xorwf	btemp^0,w,c
 16015  010676  A4D8               	btfss	status,2,c
 16016  010678  D03B               	goto	l11775
 16017                           
 16018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 16019                           ;stkvar	_e @ sp[(-56)+34]
 16020  01067A  0EEB               	movlw	-21
 16021  01067C  AEE3               	btfss	plusw1,7,c
 16022  01067E  D01C               	goto	l11771
 16023                           
 16024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 16025  010680  0E00               	movlw	0
 16026  010682  6E2E               	movwf	(btemp+8)^0,c
 16027  010684  0E00               	movlw	0
 16028  010686  6E2F               	movwf	(btemp+9)^0,c
 16029  010688  0E80               	movlw	128
 16030  01068A  6E30               	movwf	(btemp+10)^0,c
 16031  01068C  0E3F               	movlw	63
 16032  01068E  6E31               	movwf	(btemp+11)^0,c
 16033                           
 16034                           ;stkvar	_u @ sp[(-56)+12]
 16035  010690  0ED4               	movlw	-44
 16036  010692  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 16037  010698  0ED5               	movlw	-43
 16038  01069A  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 16039  0106A0  0ED6               	movlw	-42
 16040  0106A2  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16041  0106A8  0ED7               	movlw	-41
 16042  0106AA  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16043                           
 16044                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 16045                           ;stkvar	_e @ sp[(-56)+34]
 16046  0106B0  0EEA               	movlw	-22
 16047  0106B2  6AE3               	clrf	plusw1,c
 16048  0106B4  0EEB               	movlw	-21
 16049  0106B6  6AE3               	clrf	plusw1,c
 16050  0106B8                     l11771:
 16051                           
 16052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 16053                           ;stkvar	_mode @ sp[(-56)+54]
 16054  0106B8  0EFE               	movlw	-2
 16055  0106BA  006F FF8C  F026    	movff	plusw1,btemp
 16056  0106C0  0E67               	movlw	103
 16057  0106C2  1826               	xorwf	btemp^0,w,c
 16058  0106C4  B4D8               	btfsc	status,2,c
 16059  0106C6  D014               	goto	l11775
 16060                           
 16061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 16062                           ;stkvar	_e @ sp[(-56)+34]
 16063                           ;stkvar	_m @ sp[(-56)+48]
 16064  0106C8  0EF8               	movlw	-8
 16065  0106CA  50E3               	movf	plusw1,w,c
 16066  0106CC  6E26               	movwf	btemp^0,c
 16067  0106CE  0EEA               	movlw	-22
 16068  0106D0  50E3               	movf	plusw1,w,c
 16069  0106D2  2626               	addwf	btemp^0,f,c
 16070  0106D4  0EF8               	movlw	-8
 16071  0106D6  0060  F09B  FFE3   	movff	btemp,plusw1
 16072  0106DC  0EF9               	movlw	-7
 16073  0106DE  50E3               	movf	plusw1,w,c
 16074  0106E0  6E26               	movwf	btemp^0,c
 16075  0106E2  0EEB               	movlw	-21
 16076  0106E4  50E3               	movf	plusw1,w,c
 16077  0106E6  2226               	addwfc	btemp^0,f,c
 16078  0106E8  0EF9               	movlw	-7
 16079  0106EA  0060  F09B  FFE3   	movff	btemp,plusw1
 16080  0106F0                     l11775:
 16081                           
 16082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 16083                           ;stkvar	_i @ sp[(-56)+36]
 16084  0106F0  0EEC               	movlw	-20
 16085  0106F2  6AE3               	clrf	plusw1,c
 16086  0106F4  0EED               	movlw	-19
 16087  0106F6  6AE3               	clrf	plusw1,c
 16088                           
 16089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 16090                           ;stkvar	_g @ sp[(-56)+16]
 16091  0106F8  0ED8               	movlw	-40
 16092  0106FA  006F FF8C  F02E    	movff	plusw1,btemp+8
 16093  010700  0ED9               	movlw	-39
 16094  010702  006F FF8C  F02F    	movff	plusw1,btemp+9
 16095  010708  0EDA               	movlw	-38
 16096  01070A  006F FF8C  F030    	movff	plusw1,btemp+10
 16097  010710  0EDB               	movlw	-37
 16098  010712  006F FF8C  F031    	movff	plusw1,btemp+11
 16099                           
 16100                           ;stkvar	_h @ sp[(-56)+24]
 16101  010718  0EE0               	movlw	-32
 16102  01071A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 16103  010720  0EE1               	movlw	-31
 16104  010722  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 16105  010728  0EE2               	movlw	-30
 16106  01072A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16107  010730  0EE3               	movlw	-29
 16108  010732  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16109                           
 16110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 16111                           ;stkvar	_u @ sp[(-56)+12]
 16112  010738  0ED4               	movlw	-44
 16113  01073A  006F FF8C  F02E    	movff	plusw1,btemp+8
 16114  010740  0ED5               	movlw	-43
 16115  010742  006F FF8C  F02F    	movff	plusw1,btemp+9
 16116  010748  0ED6               	movlw	-42
 16117  01074A  006F FF8C  F030    	movff	plusw1,btemp+10
 16118  010750  0ED7               	movlw	-41
 16119  010752  006F FF8C  F031    	movff	plusw1,btemp+11
 16120                           
 16121                           ;stkvar	_ou @ sp[(-56)+28]
 16122  010758  0EE4               	movlw	-28
 16123  01075A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 16124  010760  0EE5               	movlw	-27
 16125  010762  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 16126  010768  0EE6               	movlw	-26
 16127  01076A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16128  010770  0EE7               	movlw	-25
 16129  010772  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16130                           
 16131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16132  010778  D0D6               	goto	l11791
 16133  01077A                     l11781:
 16134                           
 16135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 16136                           ;stkvar	_u @ sp[(-56)+12]
 16137  01077A  0ED4               	movlw	-44
 16138  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 16139  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 16140  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 16141  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 16142                           
 16143                           ;stkvar	_h @ sp[(-60)+24]
 16144  010794  0EDC               	movlw	-36
 16145  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 16146  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 16147  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16148  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16149  0107AE  ECA3  F0A4         	call	___fldiv	;wreg free
 16150  0107B2  0060  F09B  FFE6   	movff	btemp,postinc1
 16151  0107B8  0060  F09F  FFE6   	movff	btemp+1,postinc1
 16152  0107BE  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 16153  0107C4  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 16154  0107CA  ECA4  F0AF         	call	_floorf	;wreg free
 16155                           
 16156                           ;stkvar	_l @ sp[(-56)+20]
 16157  0107CE  0EDC               	movlw	-36
 16158  0107D0  0060  F09B  FFE3   	movff	btemp,plusw1
 16159  0107D6  0EDD               	movlw	-35
 16160  0107D8  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16161  0107DE  0EDE               	movlw	-34
 16162  0107E0  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16163  0107E6  0EDF               	movlw	-33
 16164  0107E8  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16165                           
 16166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 16167                           ;stkvar	_l @ sp[(-56)+20]
 16168  0107EE  0EDC               	movlw	-36
 16169  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 16170  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 16171  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 16172  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 16173  010808  EC07  F0C2         	call	___fltol	;wreg free
 16174  01080C  0060  F098  F030   	movff	btemp,btemp+10
 16175  010812  0060  F09C  F031   	movff	btemp+1,btemp+11
 16176                           
 16177                           ;stkvar	_d @ sp[(-56)+44]
 16178  010818  0EF4               	movlw	-12
 16179  01081A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16180  010820  0EF5               	movlw	-11
 16181  010822  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16182                           
 16183                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 16184                           ;stkvar	_u @ sp[(-56)+12]
 16185  010828  0ED4               	movlw	-44
 16186  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 16187  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 16188  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 16189  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 16190                           
 16191                           ;stkvar	_l @ sp[(-60)+20]
 16192  010842  0ED8               	movlw	-40
 16193  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 16194  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 16195  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 16196  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 16197  01085C  EC0F  F099         	call	___flmul	;wreg free
 16198  010860  0060  F09B  FFE6   	movff	btemp,postinc1
 16199  010866  0060  F09F  FFE6   	movff	btemp+1,postinc1
 16200  01086C  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 16201  010872  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 16202                           
 16203                           ;stkvar	_h @ sp[(-60)+24]
 16204  010878  0EDC               	movlw	-36
 16205  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 16206  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 16207  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 16208  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 16209  010892  ECED  F0D5         	call	___flsub	;wreg free
 16210                           
 16211                           ;stkvar	_h @ sp[(-56)+24]
 16212  010896  0EE0               	movlw	-32
 16213  010898  0060  F09B  FFE3   	movff	btemp,plusw1
 16214  01089E  0EE1               	movlw	-31
 16215  0108A0  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16216  0108A6  0EE2               	movlw	-30
 16217  0108A8  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16218  0108AE  0EE3               	movlw	-29
 16219  0108B0  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16220                           
 16221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 16222  0108B6  0E00               	movlw	0
 16223  0108B8  6EE6               	movwf	postinc1,c
 16224  0108BA  0E00               	movlw	0
 16225  0108BC  6EE6               	movwf	postinc1,c
 16226  0108BE  0E20               	movlw	32
 16227  0108C0  6EE6               	movwf	postinc1,c
 16228  0108C2  0E41               	movlw	65
 16229  0108C4  6EE6               	movwf	postinc1,c
 16230                           
 16231                           ;stkvar	_u @ sp[(-60)+12]
 16232  0108C6  0ED0               	movlw	-48
 16233  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16234  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 16235  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16236  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16237  0108E0  ECA3  F0A4         	call	___fldiv	;wreg free
 16238                           
 16239                           ;stkvar	_u @ sp[(-56)+12]
 16240  0108E4  0ED4               	movlw	-44
 16241  0108E6  0060  F09B  FFE3   	movff	btemp,plusw1
 16242  0108EC  0ED5               	movlw	-43
 16243  0108EE  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16244  0108F4  0ED6               	movlw	-42
 16245  0108F6  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16246  0108FC  0ED7               	movlw	-41
 16247  0108FE  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16248                           
 16249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 16250                           ;stkvar	_i @ sp[(-56)+36]
 16251  010904  0EEC               	movlw	-20
 16252  010906  50E3               	movf	plusw1,w,c
 16253  010908  0F01               	addlw	1
 16254  01090A  6E26               	movwf	btemp^0,c
 16255  01090C  0EEC               	movlw	-20
 16256  01090E  0060  F09B  FFE3   	movff	btemp,plusw1
 16257  010914  6A26               	clrf	btemp^0,c
 16258  010916  0EED               	movlw	-19
 16259  010918  50E3               	movf	plusw1,w,c
 16260  01091A  2026               	addwfc	btemp^0,w,c
 16261  01091C  6E26               	movwf	btemp^0,c
 16262  01091E  0EED               	movlw	-19
 16263  010920  0060  F09B  FFE3   	movff	btemp,plusw1
 16264  010926                     l11791:
 16265                           
 16266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16267                           ;stkvar	_m @ sp[(-56)+48]
 16268                           ;stkvar	_i @ sp[(-56)+36]
 16269  010926  50E1               	movf	fsr1l,w,c
 16270  010928  0FEC               	addlw	-20
 16271  01092A  6ED9               	movwf	fsr2l,c
 16272  01092C  50E2               	movf	fsr1h,w,c
 16273  01092E  6EDA               	movwf	fsr2h,c
 16274  010930  0EFF               	movlw	255
 16275  010932  22DA               	addwfc	fsr2h,f,c
 16276  010934  0EF8               	movlw	-8
 16277  010936  50E3               	movf	plusw1,w,c
 16278  010938  5CDE               	subwf	postinc2,w,c
 16279  01093A  50DE               	movf	postinc2,w,c
 16280  01093C  0A80               	xorlw	128
 16281  01093E  6E26               	movwf	btemp^0,c
 16282  010940  0EF9               	movlw	-7
 16283  010942  50E3               	movf	plusw1,w,c
 16284  010944  0A80               	xorlw	128
 16285  010946  5826               	subwfb	btemp^0,w,c
 16286  010948  A0D8               	btfss	status,0,c
 16287  01094A  D717               	goto	l11781
 16288                           
 16289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 16290  01094C  0E00               	movlw	0
 16291  01094E  6EE6               	movwf	postinc1,c
 16292  010950  0E00               	movlw	0
 16293  010952  6EE6               	movwf	postinc1,c
 16294  010954  0EA0               	movlw	160
 16295  010956  6EE6               	movwf	postinc1,c
 16296  010958  0E40               	movlw	64
 16297  01095A  6EE6               	movwf	postinc1,c
 16298                           
 16299                           ;stkvar	_u @ sp[(-60)+12]
 16300  01095C  0ED0               	movlw	-48
 16301  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 16302  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 16303  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 16304  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 16305  010976  EC0F  F099         	call	___flmul	;wreg free
 16306                           
 16307                           ;stkvar	_l @ sp[(-56)+20]
 16308  01097A  0EDC               	movlw	-36
 16309  01097C  0060  F09B  FFE3   	movff	btemp,plusw1
 16310  010982  0EDD               	movlw	-35
 16311  010984  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16312  01098A  0EDE               	movlw	-34
 16313  01098C  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16314  010992  0EDF               	movlw	-33
 16315  010994  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16316                           
 16317                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 16318                           ;stkvar	_l @ sp[(-56)+20]
 16319  01099A  0EDC               	movlw	-36
 16320  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 16321  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16322  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16323  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 16324                           
 16325                           ;stkvar	_h @ sp[(-60)+24]
 16326  0109B4  0EDC               	movlw	-36
 16327  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 16328  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 16329  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 16330  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16331  0109CE  EC78  F0C3         	call	___flge	;wreg free
 16332  0109D2  A026               	btfss	btemp& (0+255),0,c
 16333  0109D4  D021               	goto	u11060
 16334                           
 16335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 16336                           ;stkvar	_l @ sp[(-56)+20]
 16337                           
 16338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 16339                           
 16340                           ;stkvar	_l @ sp[(-56)+20]
 16341                           
 16342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 16343  0109D6  0EDC               	movlw	-36
 16344  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 16345  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 16346  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 16347  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 16348                           
 16349                           ;stkvar	_h @ sp[(-60)+24]
 16350  0109F0  0EDC               	movlw	-36
 16351  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 16352  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 16353  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 16354  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 16355  010A0A  ECB4  F0CD         	call	___fleq	;wreg free
 16356  010A0E  A026               	btfss	btemp& (0+255),0,c
 16357  010A10  D01B               	goto	l11805
 16358                           
 16359                           ;stkvar	_d @ sp[(-56)+44]
 16360  010A12  0EF4               	movlw	-12
 16361  010A14  B0E3               	btfsc	plusw1,0,c
 16362  010A16  D018               	goto	l11805
 16363  010A18                     u11060:
 16364                           
 16365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 16366  010A18  0E00               	movlw	0
 16367  010A1A  6E2E               	movwf	(btemp+8)^0,c
 16368  010A1C  0E00               	movlw	0
 16369  010A1E  6E2F               	movwf	(btemp+9)^0,c
 16370  010A20  0E00               	movlw	0
 16371  010A22  6E30               	movwf	(btemp+10)^0,c
 16372  010A24  0E00               	movlw	0
 16373  010A26  6E31               	movwf	(btemp+11)^0,c
 16374                           
 16375                           ;stkvar	_l @ sp[(-56)+20]
 16376  010A28  0EDC               	movlw	-36
 16377  010A2A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 16378  010A30  0EDD               	movlw	-35
 16379  010A32  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 16380  010A38  0EDE               	movlw	-34
 16381  010A3A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16382  010A40  0EDF               	movlw	-33
 16383  010A42  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16384  010A48                     l11805:
 16385                           
 16386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 16387                           ;stkvar	_l @ sp[(-56)+20]
 16388  010A48  0EDC               	movlw	-36
 16389  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 16390  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 16391  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 16392  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16393                           
 16394                           ;stkvar	_g @ sp[(-60)+16]
 16395  010A62  0ED4               	movlw	-44
 16396  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 16397  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 16398  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 16399  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 16400  010A7C  EC24  F09D         	call	___fladd	;wreg free
 16401                           
 16402                           ;stkvar	_h @ sp[(-56)+24]
 16403  010A80  0EE0               	movlw	-32
 16404  010A82  0060  F09B  FFE3   	movff	btemp,plusw1
 16405  010A88  0EE1               	movlw	-31
 16406  010A8A  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16407  010A90  0EE2               	movlw	-30
 16408  010A92  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16409  010A98  0EE3               	movlw	-29
 16410  010A9A  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16411                           
 16412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 16413                           ;stkvar	_ou @ sp[(-56)+28]
 16414  010AA0  0EE4               	movlw	-28
 16415  010AA2  006F FF8C  F02E    	movff	plusw1,btemp+8
 16416  010AA8  0EE5               	movlw	-27
 16417  010AAA  006F FF8C  F02F    	movff	plusw1,btemp+9
 16418  010AB0  0EE6               	movlw	-26
 16419  010AB2  006F FF8C  F030    	movff	plusw1,btemp+10
 16420  010AB8  0EE7               	movlw	-25
 16421  010ABA  006F FF8C  F031    	movff	plusw1,btemp+11
 16422                           
 16423                           ;stkvar	_u @ sp[(-56)+12]
 16424  010AC0  0ED4               	movlw	-44
 16425  010AC2  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 16426  010AC8  0ED5               	movlw	-43
 16427  010ACA  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 16428  010AD0  0ED6               	movlw	-42
 16429  010AD2  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16430  010AD8  0ED7               	movlw	-41
 16431  010ADA  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16432                           
 16433                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 16434                           ;stkvar	_nmode @ sp[(-56)+55]
 16435  010AE0  0EFF               	movlw	-1
 16436  010AE2  006F FF8C  F026    	movff	plusw1,btemp
 16437  010AE8  0E65               	movlw	101
 16438  010AEA  1826               	xorwf	btemp^0,w,c
 16439  010AEC  B4D8               	btfsc	status,2,c
 16440  010AEE  D011               	goto	l11813
 16441                           
 16442                           ;stkvar	_e @ sp[(-56)+34]
 16443                           ;stkvar	_ne @ sp[(-56)+46]
 16444  010AF0  0EEA               	movlw	-22
 16445  010AF2  006F FF8C  F026    	movff	plusw1,btemp
 16446  010AF8  0EF6               	movlw	-10
 16447  010AFA  0060  F09B  FFE3   	movff	btemp,plusw1
 16448  010B00  0EEB               	movlw	-21
 16449  010B02  006F FF8C  F026    	movff	plusw1,btemp
 16450  010B08  0EF7               	movlw	-9
 16451  010B0A  0060  F09B  FFE3   	movff	btemp,plusw1
 16452  010B10  D004               	goto	l2223
 16453  010B12                     l11813:
 16454                           
 16455                           ;stkvar	_ne @ sp[(-56)+46]
 16456  010B12  0EF6               	movlw	-10
 16457  010B14  6AE3               	clrf	plusw1,c
 16458  010B16  0EF7               	movlw	-9
 16459  010B18  6AE3               	clrf	plusw1,c
 16460  010B1A                     l2223:
 16461                           
 16462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 16463                           ;stkvar	_pp @ sp[(-56)+50]
 16464  010B1A  0EFA               	movlw	-6
 16465  010B1C  6AE3               	clrf	plusw1,c
 16466  010B1E  0EFB               	movlw	-5
 16467  010B20  6AE3               	clrf	plusw1,c
 16468                           
 16469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 16470                           ;stkvar	_t @ sp[(-56)+52]
 16471  010B22  0EFC               	movlw	-4
 16472  010B24  6AE3               	clrf	plusw1,c
 16473  010B26  0EFD               	movlw	-3
 16474  010B28  6AE3               	clrf	plusw1,c
 16475                           
 16476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 16477                           ;stkvar	_i @ sp[(-56)+36]
 16478  010B2A  0EEC               	movlw	-20
 16479  010B2C  6AE3               	clrf	plusw1,c
 16480  010B2E  0EED               	movlw	-19
 16481  010B30  6AE3               	clrf	plusw1,c
 16482                           
 16483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16484  010B32  D1B7               	goto	l11865
 16485  010B34                     l11815:
 16486                           
 16487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 16488                           ;stkvar	_u @ sp[(-56)+12]
 16489  010B34  0ED4               	movlw	-44
 16490  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 16491  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16492  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 16493  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 16494                           
 16495                           ;stkvar	_h @ sp[(-60)+24]
 16496  010B4E  0EDC               	movlw	-36
 16497  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 16498  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 16499  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16500  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 16501  010B68  ECA3  F0A4         	call	___fldiv	;wreg free
 16502  010B6C  0060  F09B  FFE6   	movff	btemp,postinc1
 16503  010B72  0060  F09F  FFE6   	movff	btemp+1,postinc1
 16504  010B78  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 16505  010B7E  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 16506  010B84  ECA4  F0AF         	call	_floorf	;wreg free
 16507                           
 16508                           ;stkvar	_l @ sp[(-56)+20]
 16509  010B88  0EDC               	movlw	-36
 16510  010B8A  0060  F09B  FFE3   	movff	btemp,plusw1
 16511  010B90  0EDD               	movlw	-35
 16512  010B92  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16513  010B98  0EDE               	movlw	-34
 16514  010B9A  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16515  010BA0  0EDF               	movlw	-33
 16516  010BA2  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16517                           
 16518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 16519                           ;stkvar	_l @ sp[(-56)+20]
 16520  010BA8  0EDC               	movlw	-36
 16521  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 16522  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 16523  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 16524  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 16525  010BC2  EC07  F0C2         	call	___fltol	;wreg free
 16526  010BC6  0060  F098  F030   	movff	btemp,btemp+10
 16527  010BCC  0060  F09C  F031   	movff	btemp+1,btemp+11
 16528                           
 16529                           ;stkvar	_d @ sp[(-56)+44]
 16530  010BD2  0EF4               	movlw	-12
 16531  010BD4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16532  010BDA  0EF5               	movlw	-11
 16533  010BDC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16534                           
 16535                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 16536  010BE2  B80E               	btfsc	_flags^0,4,c
 16537  010BE4  D026               	goto	l11829
 16538                           
 16539                           ;stkvar	_d @ sp[(-56)+44]
 16540  010BE6  0EF4               	movlw	-12
 16541  010BE8  006F FF8C  F026    	movff	plusw1,btemp
 16542  010BEE  0EF5               	movlw	-11
 16543  010BF0  50E3               	movf	plusw1,w,c
 16544  010BF2  1026               	iorwf	btemp^0,w,c
 16545  010BF4  A4D8               	btfss	status,2,c
 16546  010BF6  D01D               	goto	l11829
 16547                           
 16548                           ;stkvar	_mode @ sp[(-56)+54]
 16549  010BF8  0EFE               	movlw	-2
 16550  010BFA  006F FF8C  F026    	movff	plusw1,btemp
 16551  010C00  0E67               	movlw	103
 16552  010C02  1826               	xorwf	btemp^0,w,c
 16553  010C04  A4D8               	btfss	status,2,c
 16554  010C06  D015               	goto	l11829
 16555                           
 16556                           ;stkvar	_ne @ sp[(-56)+46]
 16557  010C08  0EF7               	movlw	-9
 16558  010C0A  AEE3               	btfss	plusw1,7,c
 16559  010C0C  D012               	goto	l11829
 16560                           
 16561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 16562                           ;stkvar	_t @ sp[(-56)+52]
 16563  010C0E  0EFC               	movlw	-4
 16564  010C10  50E3               	movf	plusw1,w,c
 16565  010C12  0F01               	addlw	1
 16566  010C14  6E26               	movwf	btemp^0,c
 16567  010C16  0EFC               	movlw	-4
 16568  010C18  0060  F09B  FFE3   	movff	btemp,plusw1
 16569  010C1E  6A26               	clrf	btemp^0,c
 16570  010C20  0EFD               	movlw	-3
 16571  010C22  50E3               	movf	plusw1,w,c
 16572  010C24  2026               	addwfc	btemp^0,w,c
 16573  010C26  6E26               	movwf	btemp^0,c
 16574  010C28  0EFD               	movlw	-3
 16575  010C2A  0060  F09B  FFE3   	movff	btemp,plusw1
 16576                           
 16577                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 16578  010C30  D0AF               	goto	l11857
 16579  010C32                     l11829:
 16580                           
 16581                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 16582                           ;stkvar	_pp @ sp[(-56)+50]
 16583  010C32  0EFA               	movlw	-6
 16584  010C34  006F FF8C  F026    	movff	plusw1,btemp
 16585  010C3A  0EFB               	movlw	-5
 16586  010C3C  50E3               	movf	plusw1,w,c
 16587  010C3E  1026               	iorwf	btemp^0,w,c
 16588  010C40  A4D8               	btfss	status,2,c
 16589  010C42  D070               	goto	l11849
 16590                           
 16591                           ;stkvar	_ne @ sp[(-56)+46]
 16592  010C44  0EF7               	movlw	-9
 16593  010C46  AEE3               	btfss	plusw1,7,c
 16594  010C48  D06D               	goto	l11849
 16595                           
 16596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 16597                           ;stkvar	_n @ sp[(-56)+32]
 16598  010C4A  0EE8               	movlw	-24
 16599  010C4C  006F FF8C  F030    	movff	plusw1,btemp+10
 16600  010C52  0EE9               	movlw	-23
 16601  010C54  006F FF8C  F031    	movff	plusw1,btemp+11
 16602  010C5A  0EAE               	movlw	low _dbuf
 16603  010C5C  2430               	addwf	(btemp+10)^0,w,c
 16604  010C5E  6ED9               	movwf	fsr2l,c
 16605  010C60  0E03               	movlw	high _dbuf
 16606  010C62  2031               	addwfc	(btemp+11)^0,w,c
 16607  010C64  6EDA               	movwf	fsr2h,c
 16608  010C66  0E2E               	movlw	46
 16609  010C68  6EDF               	movwf	indf2,c
 16610                           
 16611                           ;stkvar	_n @ sp[(-56)+32]
 16612  010C6A  0EE8               	movlw	-24
 16613  010C6C  50E3               	movf	plusw1,w,c
 16614  010C6E  0F01               	addlw	1
 16615  010C70  6E26               	movwf	btemp^0,c
 16616  010C72  0EE8               	movlw	-24
 16617  010C74  0060  F09B  FFE3   	movff	btemp,plusw1
 16618  010C7A  6A26               	clrf	btemp^0,c
 16619  010C7C  0EE9               	movlw	-23
 16620  010C7E  50E3               	movf	plusw1,w,c
 16621  010C80  2026               	addwfc	btemp^0,w,c
 16622  010C82  6E26               	movwf	btemp^0,c
 16623  010C84  0EE9               	movlw	-23
 16624  010C86  0060  F09B  FFE3   	movff	btemp,plusw1
 16625                           
 16626                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 16627                           ;stkvar	_w @ sp[(-56)+38]
 16628  010C8C  50E1               	movf	fsr1l,w,c
 16629  010C8E  0FEE               	addlw	-18
 16630  010C90  6ED9               	movwf	fsr2l,c
 16631  010C92  50E2               	movf	fsr1h,w,c
 16632  010C94  6EDA               	movwf	fsr2h,c
 16633  010C96  0EFF               	movlw	255
 16634  010C98  22DA               	addwfc	fsr2h,f,c
 16635  010C9A  06DE               	decf	postinc2,f,c
 16636  010C9C  0E00               	movlw	0
 16637  010C9E  5ADD               	subwfb	postdec2,f,c
 16638                           
 16639                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 16640  010CA0  0E01               	movlw	1
 16641  010CA2  6E30               	movwf	(btemp+10)^0,c
 16642  010CA4  0E00               	movlw	0
 16643  010CA6  6E31               	movwf	(btemp+11)^0,c
 16644                           
 16645                           ;stkvar	_pp @ sp[(-56)+50]
 16646  010CA8  0EFA               	movlw	-6
 16647  010CAA  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16648  010CB0  0EFB               	movlw	-5
 16649  010CB2  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16650  010CB8  D035               	goto	l11849
 16651  010CBA                     l11841:
 16652                           
 16653                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 16654                           ;stkvar	_n @ sp[(-56)+32]
 16655  010CBA  0EE8               	movlw	-24
 16656  010CBC  006F FF8C  F030    	movff	plusw1,btemp+10
 16657  010CC2  0EE9               	movlw	-23
 16658  010CC4  006F FF8C  F031    	movff	plusw1,btemp+11
 16659  010CCA  0EAE               	movlw	low _dbuf
 16660  010CCC  2430               	addwf	(btemp+10)^0,w,c
 16661  010CCE  6ED9               	movwf	fsr2l,c
 16662  010CD0  0E03               	movlw	high _dbuf
 16663  010CD2  2031               	addwfc	(btemp+11)^0,w,c
 16664  010CD4  6EDA               	movwf	fsr2h,c
 16665  010CD6  0E30               	movlw	48
 16666  010CD8  6EDF               	movwf	indf2,c
 16667                           
 16668                           ;stkvar	_n @ sp[(-56)+32]
 16669  010CDA  0EE8               	movlw	-24
 16670  010CDC  50E3               	movf	plusw1,w,c
 16671  010CDE  0F01               	addlw	1
 16672  010CE0  6E26               	movwf	btemp^0,c
 16673  010CE2  0EE8               	movlw	-24
 16674  010CE4  0060  F09B  FFE3   	movff	btemp,plusw1
 16675  010CEA  6A26               	clrf	btemp^0,c
 16676  010CEC  0EE9               	movlw	-23
 16677  010CEE  50E3               	movf	plusw1,w,c
 16678  010CF0  2026               	addwfc	btemp^0,w,c
 16679  010CF2  6E26               	movwf	btemp^0,c
 16680  010CF4  0EE9               	movlw	-23
 16681  010CF6  0060  F09B  FFE3   	movff	btemp,plusw1
 16682                           
 16683                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 16684                           ;stkvar	_w @ sp[(-56)+38]
 16685  010CFC  50E1               	movf	fsr1l,w,c
 16686  010CFE  0FEE               	addlw	-18
 16687  010D00  6ED9               	movwf	fsr2l,c
 16688  010D02  50E2               	movf	fsr1h,w,c
 16689  010D04  6EDA               	movwf	fsr2h,c
 16690  010D06  0EFF               	movlw	255
 16691  010D08  22DA               	addwfc	fsr2h,f,c
 16692  010D0A  06DE               	decf	postinc2,f,c
 16693  010D0C  0E00               	movlw	0
 16694  010D0E  5ADD               	subwfb	postdec2,f,c
 16695                           
 16696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 16697                           ;stkvar	_t @ sp[(-56)+52]
 16698  010D10  50E1               	movf	fsr1l,w,c
 16699  010D12  0FFC               	addlw	-4
 16700  010D14  6ED9               	movwf	fsr2l,c
 16701  010D16  50E2               	movf	fsr1h,w,c
 16702  010D18  6EDA               	movwf	fsr2h,c
 16703  010D1A  0EFF               	movlw	255
 16704  010D1C  22DA               	addwfc	fsr2h,f,c
 16705  010D1E  06DE               	decf	postinc2,f,c
 16706  010D20  0E00               	movlw	0
 16707  010D22  5ADD               	subwfb	postdec2,f,c
 16708  010D24                     l11849:
 16709                           
 16710                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 16711                           ;stkvar	_t @ sp[(-56)+52]
 16712  010D24  0EFC               	movlw	-4
 16713  010D26  006F FF8C  F026    	movff	plusw1,btemp
 16714  010D2C  0EFD               	movlw	-3
 16715  010D2E  50E3               	movf	plusw1,w,c
 16716  010D30  1026               	iorwf	btemp^0,w,c
 16717  010D32  A4D8               	btfss	status,2,c
 16718  010D34  D7C2               	goto	l11841
 16719                           
 16720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 16721                           ;stkvar	_n @ sp[(-56)+32]
 16722  010D36  0EE8               	movlw	-24
 16723  010D38  006F FF8C  F030    	movff	plusw1,btemp+10
 16724  010D3E  0EE9               	movlw	-23
 16725  010D40  006F FF8C  F031    	movff	plusw1,btemp+11
 16726  010D46  0EAE               	movlw	low _dbuf
 16727  010D48  2430               	addwf	(btemp+10)^0,w,c
 16728  010D4A  6ED9               	movwf	fsr2l,c
 16729  010D4C  0E03               	movlw	high _dbuf
 16730  010D4E  2031               	addwfc	(btemp+11)^0,w,c
 16731  010D50  6EDA               	movwf	fsr2h,c
 16732                           
 16733                           ;stkvar	_d @ sp[(-56)+44]
 16734  010D52  0EF4               	movlw	-12
 16735  010D54  50E3               	movf	plusw1,w,c
 16736  010D56  0F30               	addlw	48
 16737  010D58  6EDF               	movwf	indf2,c
 16738                           
 16739                           ;stkvar	_n @ sp[(-56)+32]
 16740  010D5A  0EE8               	movlw	-24
 16741  010D5C  50E3               	movf	plusw1,w,c
 16742  010D5E  0F01               	addlw	1
 16743  010D60  6E26               	movwf	btemp^0,c
 16744  010D62  0EE8               	movlw	-24
 16745  010D64  0060  F09B  FFE3   	movff	btemp,plusw1
 16746  010D6A  6A26               	clrf	btemp^0,c
 16747  010D6C  0EE9               	movlw	-23
 16748  010D6E  50E3               	movf	plusw1,w,c
 16749  010D70  2026               	addwfc	btemp^0,w,c
 16750  010D72  6E26               	movwf	btemp^0,c
 16751  010D74  0EE9               	movlw	-23
 16752  010D76  0060  F09B  FFE3   	movff	btemp,plusw1
 16753                           
 16754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 16755                           ;stkvar	_w @ sp[(-56)+38]
 16756  010D7C  50E1               	movf	fsr1l,w,c
 16757  010D7E  0FEE               	addlw	-18
 16758  010D80  6ED9               	movwf	fsr2l,c
 16759  010D82  50E2               	movf	fsr1h,w,c
 16760  010D84  6EDA               	movwf	fsr2h,c
 16761  010D86  0EFF               	movlw	255
 16762  010D88  22DA               	addwfc	fsr2h,f,c
 16763  010D8A  06DE               	decf	postinc2,f,c
 16764  010D8C  0E00               	movlw	0
 16765  010D8E  5ADD               	subwfb	postdec2,f,c
 16766  010D90                     l11857:
 16767                           
 16768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 16769                           ;stkvar	_u @ sp[(-56)+12]
 16770  010D90  0ED4               	movlw	-44
 16771  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 16772  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 16773  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 16774  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 16775                           
 16776                           ;stkvar	_l @ sp[(-60)+20]
 16777  010DAA  0ED8               	movlw	-40
 16778  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 16779  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 16780  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 16781  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 16782  010DC4  EC0F  F099         	call	___flmul	;wreg free
 16783  010DC8  0060  F09B  FFE6   	movff	btemp,postinc1
 16784  010DCE  0060  F09F  FFE6   	movff	btemp+1,postinc1
 16785  010DD4  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 16786  010DDA  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 16787                           
 16788                           ;stkvar	_h @ sp[(-60)+24]
 16789  010DE0  0EDC               	movlw	-36
 16790  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 16791  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 16792  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 16793  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 16794  010DFA  ECED  F0D5         	call	___flsub	;wreg free
 16795                           
 16796                           ;stkvar	_h @ sp[(-56)+24]
 16797  010DFE  0EE0               	movlw	-32
 16798  010E00  0060  F09B  FFE3   	movff	btemp,plusw1
 16799  010E06  0EE1               	movlw	-31
 16800  010E08  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16801  010E0E  0EE2               	movlw	-30
 16802  010E10  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16803  010E16  0EE3               	movlw	-29
 16804  010E18  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16805                           
 16806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 16807  010E1E  0E00               	movlw	0
 16808  010E20  6EE6               	movwf	postinc1,c
 16809  010E22  0E00               	movlw	0
 16810  010E24  6EE6               	movwf	postinc1,c
 16811  010E26  0E20               	movlw	32
 16812  010E28  6EE6               	movwf	postinc1,c
 16813  010E2A  0E41               	movlw	65
 16814  010E2C  6EE6               	movwf	postinc1,c
 16815                           
 16816                           ;stkvar	_u @ sp[(-60)+12]
 16817  010E2E  0ED0               	movlw	-48
 16818  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 16819  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 16820  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16821  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 16822  010E48  ECA3  F0A4         	call	___fldiv	;wreg free
 16823                           
 16824                           ;stkvar	_u @ sp[(-56)+12]
 16825  010E4C  0ED4               	movlw	-44
 16826  010E4E  0060  F09B  FFE3   	movff	btemp,plusw1
 16827  010E54  0ED5               	movlw	-43
 16828  010E56  0060  F09F  FFE3   	movff	btemp+1,plusw1
 16829  010E5C  0ED6               	movlw	-42
 16830  010E5E  0060  F0A3  FFE3   	movff	btemp+2,plusw1
 16831  010E64  0ED7               	movlw	-41
 16832  010E66  0060  F0A7  FFE3   	movff	btemp+3,plusw1
 16833                           
 16834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 16835                           ;stkvar	_ne @ sp[(-56)+46]
 16836  010E6C  50E1               	movf	fsr1l,w,c
 16837  010E6E  0FF6               	addlw	-10
 16838  010E70  6ED9               	movwf	fsr2l,c
 16839  010E72  50E2               	movf	fsr1h,w,c
 16840  010E74  6EDA               	movwf	fsr2h,c
 16841  010E76  0EFF               	movlw	255
 16842  010E78  22DA               	addwfc	fsr2h,f,c
 16843  010E7A  06DE               	decf	postinc2,f,c
 16844  010E7C  0E00               	movlw	0
 16845  010E7E  5ADD               	subwfb	postdec2,f,c
 16846                           
 16847                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 16848                           ;stkvar	_i @ sp[(-56)+36]
 16849  010E80  0EEC               	movlw	-20
 16850  010E82  50E3               	movf	plusw1,w,c
 16851  010E84  0F01               	addlw	1
 16852  010E86  6E26               	movwf	btemp^0,c
 16853  010E88  0EEC               	movlw	-20
 16854  010E8A  0060  F09B  FFE3   	movff	btemp,plusw1
 16855  010E90  6A26               	clrf	btemp^0,c
 16856  010E92  0EED               	movlw	-19
 16857  010E94  50E3               	movf	plusw1,w,c
 16858  010E96  2026               	addwfc	btemp^0,w,c
 16859  010E98  6E26               	movwf	btemp^0,c
 16860  010E9A  0EED               	movlw	-19
 16861  010E9C  0060  F09B  FFE3   	movff	btemp,plusw1
 16862  010EA2                     l11865:
 16863                           
 16864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16865                           ;stkvar	_m @ sp[(-56)+48]
 16866                           ;stkvar	_i @ sp[(-56)+36]
 16867  010EA2  50E1               	movf	fsr1l,w,c
 16868  010EA4  0FEC               	addlw	-20
 16869  010EA6  6ED9               	movwf	fsr2l,c
 16870  010EA8  50E2               	movf	fsr1h,w,c
 16871  010EAA  6EDA               	movwf	fsr2h,c
 16872  010EAC  0EFF               	movlw	255
 16873  010EAE  22DA               	addwfc	fsr2h,f,c
 16874  010EB0  0EF8               	movlw	-8
 16875  010EB2  50E3               	movf	plusw1,w,c
 16876  010EB4  5CDE               	subwf	postinc2,w,c
 16877  010EB6  50DE               	movf	postinc2,w,c
 16878  010EB8  0A80               	xorlw	128
 16879  010EBA  6E26               	movwf	btemp^0,c
 16880  010EBC  0EF9               	movlw	-7
 16881  010EBE  50E3               	movf	plusw1,w,c
 16882  010EC0  0A80               	xorlw	128
 16883  010EC2  5826               	subwfb	btemp^0,w,c
 16884  010EC4  B0D8               	btfsc	status,0,c
 16885  010EC6  D00E               	goto	u11160
 16886                           
 16887                           ;stkvar	_n @ sp[(-56)+32]
 16888  010EC8  0EE9               	movlw	-23
 16889  010ECA  BEE3               	btfsc	plusw1,7,c
 16890  010ECC  D633               	goto	l11815
 16891  010ECE  0EE9               	movlw	-23
 16892  010ED0  50E3               	movf	plusw1,w,c
 16893  010ED2  E108               	bnz	u11160
 16894  010ED4  0EE8               	movlw	-24
 16895  010ED6  006F FF8C  F026    	movff	plusw1,btemp
 16896  010EDC  0E4B               	movlw	75
 16897  010EDE  5E26               	subwf	btemp^0,f,c
 16898  010EE0  A0D8               	btfss	status,0,c
 16899  010EE2  D628               	goto	l11815
 16900  010EE4                     u11160:
 16901                           
 16902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 16903                           ;stkvar	_pp @ sp[(-56)+50]
 16904  010EE4  0EFA               	movlw	-6
 16905  010EE6  006F FF8C  F026    	movff	plusw1,btemp
 16906  010EEC  0EFB               	movlw	-5
 16907  010EEE  50E3               	movf	plusw1,w,c
 16908  010EF0  1026               	iorwf	btemp^0,w,c
 16909  010EF2  B4D8               	btfsc	status,2,c
 16910  010EF4  A80E               	btfss	_flags^0,4,c
 16911  010EF6  D021               	goto	l11877
 16912                           
 16913                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 16914                           ;stkvar	_n @ sp[(-56)+32]
 16915  010EF8  0EE8               	movlw	-24
 16916  010EFA  006F FF8C  F030    	movff	plusw1,btemp+10
 16917  010F00  0EE9               	movlw	-23
 16918  010F02  006F FF8C  F031    	movff	plusw1,btemp+11
 16919  010F08  0EAE               	movlw	low _dbuf
 16920  010F0A  2430               	addwf	(btemp+10)^0,w,c
 16921  010F0C  6ED9               	movwf	fsr2l,c
 16922  010F0E  0E03               	movlw	high _dbuf
 16923  010F10  2031               	addwfc	(btemp+11)^0,w,c
 16924  010F12  6EDA               	movwf	fsr2h,c
 16925  010F14  0E2E               	movlw	46
 16926  010F16  6EDF               	movwf	indf2,c
 16927                           
 16928                           ;stkvar	_n @ sp[(-56)+32]
 16929  010F18  0EE8               	movlw	-24
 16930  010F1A  50E3               	movf	plusw1,w,c
 16931  010F1C  0F01               	addlw	1
 16932  010F1E  6E26               	movwf	btemp^0,c
 16933  010F20  0EE8               	movlw	-24
 16934  010F22  0060  F09B  FFE3   	movff	btemp,plusw1
 16935  010F28  6A26               	clrf	btemp^0,c
 16936  010F2A  0EE9               	movlw	-23
 16937  010F2C  50E3               	movf	plusw1,w,c
 16938  010F2E  2026               	addwfc	btemp^0,w,c
 16939  010F30  6E26               	movwf	btemp^0,c
 16940  010F32  0EE9               	movlw	-23
 16941  010F34  0060  F09B  FFE3   	movff	btemp,plusw1
 16942  010F3A                     l11877:
 16943                           
 16944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 16945                           ;stkvar	_n @ sp[(-56)+32]
 16946  010F3A  0EE8               	movlw	-24
 16947  010F3C  006F FF8C  F030    	movff	plusw1,btemp+10
 16948  010F42  0EE9               	movlw	-23
 16949  010F44  006F FF8C  F031    	movff	plusw1,btemp+11
 16950  010F4A  0EAE               	movlw	low _dbuf
 16951  010F4C  2430               	addwf	(btemp+10)^0,w,c
 16952  010F4E  6ED9               	movwf	fsr2l,c
 16953  010F50  0E03               	movlw	high _dbuf
 16954  010F52  2031               	addwfc	(btemp+11)^0,w,c
 16955  010F54  6EDA               	movwf	fsr2h,c
 16956  010F56  0E00               	movlw	0
 16957  010F58  6EDF               	movwf	indf2,c
 16958                           
 16959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 16960                           ;stkvar	_nmode @ sp[(-56)+55]
 16961  010F5A  0EFF               	movlw	-1
 16962  010F5C  006F FF8C  F026    	movff	plusw1,btemp
 16963  010F62  0E65               	movlw	101
 16964  010F64  1826               	xorwf	btemp^0,w,c
 16965  010F66  A4D8               	btfss	status,2,c
 16966  010F68  EF16  F081         	goto	l11681
 16967                           
 16968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 16969  010F6C  0E4F               	movlw	79
 16970  010F6E  6E30               	movwf	(btemp+10)^0,c
 16971  010F70  0E00               	movlw	0
 16972  010F72  6E31               	movwf	(btemp+11)^0,c
 16973                           
 16974                           ;stkvar	_i @ sp[(-56)+36]
 16975  010F74  0EEC               	movlw	-20
 16976  010F76  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 16977  010F7C  0EED               	movlw	-19
 16978  010F7E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 16979                           
 16980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 16981                           ;stkvar	_i @ sp[(-56)+36]
 16982  010F84  0EEC               	movlw	-20
 16983  010F86  006F FF8C  F030    	movff	plusw1,btemp+10
 16984  010F8C  0EED               	movlw	-19
 16985  010F8E  006F FF8C  F031    	movff	plusw1,btemp+11
 16986  010F94  0EAE               	movlw	low _dbuf
 16987  010F96  2430               	addwf	(btemp+10)^0,w,c
 16988  010F98  6ED9               	movwf	fsr2l,c
 16989  010F9A  0E03               	movlw	high _dbuf
 16990  010F9C  2031               	addwfc	(btemp+11)^0,w,c
 16991  010F9E  6EDA               	movwf	fsr2h,c
 16992  010FA0  0E00               	movlw	0
 16993  010FA2  6EDF               	movwf	indf2,c
 16994                           
 16995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 16996                           ;stkvar	_sign @ sp[(-56)+42]
 16997  010FA4  0EF2               	movlw	-14
 16998  010FA6  6AE3               	clrf	plusw1,c
 16999  010FA8  0EF3               	movlw	-13
 17000  010FAA  6AE3               	clrf	plusw1,c
 17001                           
 17002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 17003                           ;stkvar	_e @ sp[(-56)+34]
 17004  010FAC  0EEB               	movlw	-21
 17005  010FAE  AEE3               	btfss	plusw1,7,c
 17006  010FB0  D012               	goto	l11891
 17007                           
 17008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 17009  010FB2  0E01               	movlw	1
 17010  010FB4  6E30               	movwf	(btemp+10)^0,c
 17011  010FB6  0E00               	movlw	0
 17012  010FB8  6E31               	movwf	(btemp+11)^0,c
 17013                           
 17014                           ;stkvar	_sign @ sp[(-56)+42]
 17015  010FBA  0EF2               	movlw	-14
 17016  010FBC  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17017  010FC2  0EF3               	movlw	-13
 17018  010FC4  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17019                           
 17020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 17021                           ;stkvar	_e @ sp[(-56)+34]
 17022                           ;stkvar	_e @ sp[(-56)+34]
 17023  010FCA  0EEA               	movlw	-22
 17024  010FCC  6CE3               	negf	plusw1,c
 17025  010FCE  0EEB               	movlw	-21
 17026  010FD0  1EE3               	comf	plusw1,f,c
 17027  010FD2  B0D8               	btfsc	status,0,c
 17028  010FD4  2AE3               	incf	plusw1,f,c
 17029  010FD6                     l11891:
 17030                           
 17031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 17032  010FD6  0E02               	movlw	2
 17033  010FD8  6E30               	movwf	(btemp+10)^0,c
 17034  010FDA  0E00               	movlw	0
 17035  010FDC  6E31               	movwf	(btemp+11)^0,c
 17036                           
 17037                           ;stkvar	_p @ sp[(-56)+40]
 17038  010FDE  0EF0               	movlw	-16
 17039  010FE0  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17040  010FE6  0EF1               	movlw	-15
 17041  010FE8  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17042                           
 17043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17044  010FEE  D051               	goto	l11903
 17045  010FF0                     l11893:
 17046                           
 17047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 17048                           ;stkvar	_i @ sp[(-56)+36]
 17049  010FF0  50E1               	movf	fsr1l,w,c
 17050  010FF2  0FEC               	addlw	-20
 17051  010FF4  6ED9               	movwf	fsr2l,c
 17052  010FF6  50E2               	movf	fsr1h,w,c
 17053  010FF8  6EDA               	movwf	fsr2h,c
 17054  010FFA  0EFF               	movlw	255
 17055  010FFC  22DA               	addwfc	fsr2h,f,c
 17056  010FFE  06DE               	decf	postinc2,f,c
 17057  011000  0E00               	movlw	0
 17058  011002  5ADD               	subwfb	postdec2,f,c
 17059                           
 17060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 17061                           ;stkvar	_i @ sp[(-56)+36]
 17062  011004  0EEC               	movlw	-20
 17063  011006  006F FF8C  F030    	movff	plusw1,btemp+10
 17064  01100C  0EED               	movlw	-19
 17065  01100E  006F FF8C  F031    	movff	plusw1,btemp+11
 17066  011014  0EAE               	movlw	low _dbuf
 17067  011016  2430               	addwf	(btemp+10)^0,w,c
 17068  011018  6ED9               	movwf	fsr2l,c
 17069  01101A  0E03               	movlw	high _dbuf
 17070  01101C  2031               	addwfc	(btemp+11)^0,w,c
 17071  01101E  6EDA               	movwf	fsr2h,c
 17072  011020  0E0A               	movlw	10
 17073  011022  6EE6               	movwf	postinc1,c
 17074  011024  0E00               	movlw	0
 17075  011026  6EE6               	movwf	postinc1,c
 17076                           
 17077                           ;stkvar	_e @ sp[(-58)+34]
 17078  011028  0EE8               	movlw	-24
 17079  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 17080  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 17081  011036  ECE9  F0C7         	call	___awmod	;wreg free
 17082  01103A  5026               	movf	btemp^0,w,c
 17083  01103C  0F30               	addlw	48
 17084  01103E  6EDF               	movwf	indf2,c
 17085                           
 17086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 17087  011040  0E0A               	movlw	10
 17088  011042  6EE6               	movwf	postinc1,c
 17089  011044  0E00               	movlw	0
 17090  011046  6EE6               	movwf	postinc1,c
 17091                           
 17092                           ;stkvar	_e @ sp[(-58)+34]
 17093  011048  0EE8               	movlw	-24
 17094  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 17095  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 17096  011056  ECD9  F0C4         	call	___awdiv	;wreg free
 17097                           
 17098                           ;stkvar	_e @ sp[(-56)+34]
 17099  01105A  0EEA               	movlw	-22
 17100  01105C  0060  F09B  FFE3   	movff	btemp,plusw1
 17101  011062  0EEB               	movlw	-21
 17102  011064  0060  F09F  FFE3   	movff	btemp+1,plusw1
 17103                           
 17104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 17105                           ;stkvar	_p @ sp[(-56)+40]
 17106  01106A  50E1               	movf	fsr1l,w,c
 17107  01106C  0FF0               	addlw	-16
 17108  01106E  6ED9               	movwf	fsr2l,c
 17109  011070  50E2               	movf	fsr1h,w,c
 17110  011072  6EDA               	movwf	fsr2h,c
 17111  011074  0EFF               	movlw	255
 17112  011076  22DA               	addwfc	fsr2h,f,c
 17113  011078  06DE               	decf	postinc2,f,c
 17114  01107A  0E00               	movlw	0
 17115  01107C  5ADD               	subwfb	postdec2,f,c
 17116                           
 17117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 17118                           ;stkvar	_w @ sp[(-56)+38]
 17119  01107E  50E1               	movf	fsr1l,w,c
 17120  011080  0FEE               	addlw	-18
 17121  011082  6ED9               	movwf	fsr2l,c
 17122  011084  50E2               	movf	fsr1h,w,c
 17123  011086  6EDA               	movwf	fsr2h,c
 17124  011088  0EFF               	movlw	255
 17125  01108A  22DA               	addwfc	fsr2h,f,c
 17126  01108C  06DE               	decf	postinc2,f,c
 17127  01108E  0E00               	movlw	0
 17128  011090  5ADD               	subwfb	postdec2,f,c
 17129  011092                     l11903:
 17130                           
 17131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17132                           ;stkvar	_e @ sp[(-56)+34]
 17133  011092  0EEA               	movlw	-22
 17134  011094  006F FF8C  F026    	movff	plusw1,btemp
 17135  01109A  0EEB               	movlw	-21
 17136  01109C  50E3               	movf	plusw1,w,c
 17137  01109E  1026               	iorwf	btemp^0,w,c
 17138  0110A0  A4D8               	btfss	status,2,c
 17139  0110A2  D7A6               	goto	l11893
 17140                           
 17141                           ;stkvar	_p @ sp[(-56)+40]
 17142  0110A4  0EF1               	movlw	-15
 17143  0110A6  BEE3               	btfsc	plusw1,7,c
 17144  0110A8  D007               	goto	u11220
 17145  0110AA  0EF1               	movlw	-15
 17146  0110AC  50E3               	movf	plusw1,w,c
 17147  0110AE  E1A0               	bnz	l11893
 17148  0110B0  0EF0               	movlw	-16
 17149  0110B2  04E3               	decf	plusw1,w,c
 17150  0110B4  B0D8               	btfsc	status,0,c
 17151  0110B6  D79C               	goto	l11893
 17152  0110B8                     u11220:
 17153                           
 17154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 17155                           ;stkvar	_i @ sp[(-56)+36]
 17156  0110B8  50E1               	movf	fsr1l,w,c
 17157  0110BA  0FEC               	addlw	-20
 17158  0110BC  6ED9               	movwf	fsr2l,c
 17159  0110BE  50E2               	movf	fsr1h,w,c
 17160  0110C0  6EDA               	movwf	fsr2h,c
 17161  0110C2  0EFF               	movlw	255
 17162  0110C4  22DA               	addwfc	fsr2h,f,c
 17163  0110C6  06DE               	decf	postinc2,f,c
 17164  0110C8  0E00               	movlw	0
 17165  0110CA  5ADD               	subwfb	postdec2,f,c
 17166                           
 17167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 17168                           ;stkvar	_sign @ sp[(-56)+42]
 17169  0110CC  0EF2               	movlw	-14
 17170  0110CE  006F FF8C  F026    	movff	plusw1,btemp
 17171  0110D4  0EF3               	movlw	-13
 17172  0110D6  50E3               	movf	plusw1,w,c
 17173  0110D8  1026               	iorwf	btemp^0,w,c
 17174  0110DA  A4D8               	btfss	status,2,c
 17175  0110DC  D002               	goto	l11913
 17176  0110DE  0E2B               	movlw	43
 17177  0110E0  D001               	goto	L16
 17178  0110E2                     l11913:
 17179  0110E2  0E2D               	movlw	45
 17180  0110E4                     L16:
 17181  0110E4  6E30               	movwf	(btemp+10)^0,c
 17182  0110E6  0E00               	movlw	0
 17183  0110E8  6E31               	movwf	(btemp+11)^0,c
 17184                           
 17185                           ;stkvar	_efgtoa$5416 @ sp[(-56)+4]
 17186  0110EA  0ECC               	movlw	-52
 17187  0110EC  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17188  0110F2  0ECD               	movlw	-51
 17189  0110F4  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17190                           
 17191                           ;stkvar	_efgtoa$5416 @ sp[(-56)+4]
 17192                           ;stkvar	_i @ sp[(-56)+36]
 17193  0110FA  0EEC               	movlw	-20
 17194  0110FC  006F FF8C  F030    	movff	plusw1,btemp+10
 17195  011102  0EED               	movlw	-19
 17196  011104  006F FF8C  F031    	movff	plusw1,btemp+11
 17197  01110A  0EAE               	movlw	low _dbuf
 17198  01110C  2430               	addwf	(btemp+10)^0,w,c
 17199  01110E  6ED9               	movwf	fsr2l,c
 17200  011110  0E03               	movlw	high _dbuf
 17201  011112  2031               	addwfc	(btemp+11)^0,w,c
 17202  011114  6EDA               	movwf	fsr2h,c
 17203  011116  0ECC               	movlw	-52
 17204  011118  006F FF8F FFDF     	movff	plusw1,indf2
 17205                           
 17206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 17207                           ;stkvar	_w @ sp[(-56)+38]
 17208  01111E  50E1               	movf	fsr1l,w,c
 17209  011120  0FEE               	addlw	-18
 17210  011122  6ED9               	movwf	fsr2l,c
 17211  011124  50E2               	movf	fsr1h,w,c
 17212  011126  6EDA               	movwf	fsr2h,c
 17213  011128  0EFF               	movlw	255
 17214  01112A  22DA               	addwfc	fsr2h,f,c
 17215  01112C  06DE               	decf	postinc2,f,c
 17216  01112E  0E00               	movlw	0
 17217  011130  5ADD               	subwfb	postdec2,f,c
 17218                           
 17219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 17220                           ;stkvar	_i @ sp[(-56)+36]
 17221  011132  50E1               	movf	fsr1l,w,c
 17222  011134  0FEC               	addlw	-20
 17223  011136  6ED9               	movwf	fsr2l,c
 17224  011138  50E2               	movf	fsr1h,w,c
 17225  01113A  6EDA               	movwf	fsr2h,c
 17226  01113C  0EFF               	movlw	255
 17227  01113E  22DA               	addwfc	fsr2h,f,c
 17228  011140  06DE               	decf	postinc2,f,c
 17229  011142  0E00               	movlw	0
 17230  011144  5ADD               	subwfb	postdec2,f,c
 17231  011146  0EBF               	movlw	191
 17232  011148  6E30               	movwf	(btemp+10)^0,c
 17233  01114A  0EFF               	movlw	255
 17234  01114C  6E31               	movwf	(btemp+11)^0,c
 17235                           
 17236                           ;stkvar	_c @ sp[(-56)+-7]
 17237  01114E  0EC1               	movlw	-63
 17238  011150  50E3               	movf	plusw1,w,c
 17239  011152  6E2E               	movwf	(btemp+8)^0,c
 17240  011154  6A2F               	clrf	(btemp+9)^0,c
 17241  011156  5030               	movf	(btemp+10)^0,w,c
 17242  011158  262E               	addwf	(btemp+8)^0,f,c
 17243  01115A  5031               	movf	(btemp+11)^0,w,c
 17244  01115C  222F               	addwfc	(btemp+9)^0,f,c
 17245  01115E  502F               	movf	(btemp+9)^0,w,c
 17246  011160  E106               	bnz	u11240
 17247  011162  0E1A               	movlw	26
 17248  011164  5C2E               	subwf	(btemp+8)^0,w,c
 17249  011166  B0D8               	btfsc	status,0,c
 17250  011168  D002               	goto	u11240
 17251  01116A  0E01               	movlw	1
 17252  01116C  D001               	goto	u11250
 17253  01116E                     u11240:
 17254  01116E  0E00               	movlw	0
 17255  011170                     u11250:
 17256  011170  6E30               	movwf	(btemp+10)^0,c
 17257  011172  6A31               	clrf	(btemp+11)^0,c
 17258                           
 17259                           ;stkvar	_efgtoa$5418 @ sp[(-56)+0]
 17260  011174  0EC8               	movlw	-56
 17261  011176  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17262  01117C  0EC9               	movlw	-55
 17263  01117E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17264                           
 17265                           ;stkvar	_efgtoa$5418 @ sp[(-56)+0]
 17266  011184  0EC8               	movlw	-56
 17267  011186  006F FF8C  F026    	movff	plusw1,btemp
 17268  01118C  0EC9               	movlw	-55
 17269  01118E  50E3               	movf	plusw1,w,c
 17270  011190  1026               	iorwf	btemp^0,w,c
 17271  011192  A4D8               	btfss	status,2,c
 17272  011194  D002               	goto	l11929
 17273  011196  0E65               	movlw	101
 17274  011198  D001               	goto	L17
 17275  01119A                     l11929:
 17276  01119A  0E45               	movlw	69
 17277  01119C                     L17:
 17278  01119C  6E30               	movwf	(btemp+10)^0,c
 17279  01119E  0E00               	movlw	0
 17280  0111A0  6E31               	movwf	(btemp+11)^0,c
 17281                           
 17282                           ;stkvar	_efgtoa$5417 @ sp[(-56)+2]
 17283  0111A2  0ECA               	movlw	-54
 17284  0111A4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17285  0111AA  0ECB               	movlw	-53
 17286  0111AC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17287                           
 17288                           ;stkvar	_efgtoa$5417 @ sp[(-56)+2]
 17289                           ;stkvar	_i @ sp[(-56)+36]
 17290  0111B2  0EEC               	movlw	-20
 17291  0111B4  006F FF8C  F030    	movff	plusw1,btemp+10
 17292  0111BA  0EED               	movlw	-19
 17293  0111BC  006F FF8C  F031    	movff	plusw1,btemp+11
 17294  0111C2  0EAE               	movlw	low _dbuf
 17295  0111C4  2430               	addwf	(btemp+10)^0,w,c
 17296  0111C6  6ED9               	movwf	fsr2l,c
 17297  0111C8  0E03               	movlw	high _dbuf
 17298  0111CA  2031               	addwfc	(btemp+11)^0,w,c
 17299  0111CC  6EDA               	movwf	fsr2h,c
 17300  0111CE  0ECA               	movlw	-54
 17301  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 17302                           
 17303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 17304                           ;stkvar	_w @ sp[(-56)+38]
 17305  0111D6  50E1               	movf	fsr1l,w,c
 17306  0111D8  0FEE               	addlw	-18
 17307  0111DA  6ED9               	movwf	fsr2l,c
 17308  0111DC  50E2               	movf	fsr1h,w,c
 17309  0111DE  6EDA               	movwf	fsr2h,c
 17310  0111E0  0EFF               	movlw	255
 17311  0111E2  22DA               	addwfc	fsr2h,f,c
 17312  0111E4  06DE               	decf	postinc2,f,c
 17313  0111E6  0E00               	movlw	0
 17314  0111E8  5ADD               	subwfb	postdec2,f,c
 17315                           
 17316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 17317                           ;stkvar	_i @ sp[(-56)+36]
 17318  0111EA  0EEC               	movlw	-20
 17319  0111EC  006F FF8C  F030    	movff	plusw1,btemp+10
 17320  0111F2  0EED               	movlw	-19
 17321  0111F4  006F FF8C  F031    	movff	plusw1,btemp+11
 17322  0111FA  0EAE               	movlw	low _dbuf
 17323  0111FC  2430               	addwf	(btemp+10)^0,w,c
 17324  0111FE  6E2E               	movwf	(btemp+8)^0,c
 17325  011200  0E03               	movlw	high _dbuf
 17326  011202  2031               	addwfc	(btemp+11)^0,w,c
 17327  011204  6E2F               	movwf	(btemp+9)^0,c
 17328  011206  0060  F0BB  FFE6   	movff	btemp+8,postinc1
 17329  01120C  0060  F0BF  FFE6   	movff	btemp+9,postinc1
 17330                           
 17331                           ;stkvar	_n @ sp[(-58)+32]
 17332  011212  0EAE               	movlw	low _dbuf
 17333  011214  6E30               	movwf	(btemp+10)^0,c
 17334  011216  0E03               	movlw	high _dbuf
 17335  011218  6E31               	movwf	(btemp+11)^0,c
 17336  01121A  0EE6               	movlw	-26
 17337  01121C  50E3               	movf	plusw1,w,c
 17338  01121E  2630               	addwf	(btemp+10)^0,f,c
 17339  011220  0EE7               	movlw	-25
 17340  011222  50E3               	movf	plusw1,w,c
 17341  011224  2231               	addwfc	(btemp+11)^0,f,c
 17342  011226  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 17343  01122C  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 17344  011232  ECE7  F0CC         	call	_strcpy	;wreg free
 17345  011236  EF16  F081         	goto	l11681
 17346  01123A                     l2179:
 17347                           
 17348                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 17349  01123A  0EC1               	movlw	193
 17350  01123C  26E1               	addwf	fsr1l,f,c
 17351  01123E  0EFF               	movlw	255
 17352  011240  22E2               	addwfc	fsr1h,f,c
 17353  011242  0012               	return		;funcret
 17354  011244                     __end_of_efgtoa:
 17355                           	opt callstack 0
 17356                           
 17357 ;; *************** function _tolower *****************
 17358 ;; Defined at:
 17359 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 17360 ;; Parameters:    Size  Location     Type
 17361 ;;  c               2  [STACK] int 
 17362 ;; Auto vars:     Size  Location     Type
 17363 ;;		None
 17364 ;; Return value:  Size  Location     Type
 17365 ;;                  2  [STACK] int 
 17366 ;; Registers used:
 17367 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 17368 ;; Tracked objects:
 17369 ;;		On entry : 0/0
 17370 ;;		On exit  : 0/0
 17371 ;;		Unchanged: 0/0
 17372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17377 ;;Total ram usage:        0 bytes
 17378 ;; Hardware stack levels used:    1
 17379 ;; Hardware stack levels required when called:   16
 17380 ;; This function calls:
 17381 ;;		_isupper
 17382 ;; This function is called by:
 17383 ;;		_efgtoa
 17384 ;;		_vfpfcnvrt
 17385 ;; This function uses a reentrant model
 17386 ;;
 17387                           
 17388                           	psect	text56
 17389  01A4DC                     __ptext56:
 17390                           	opt callstack 0
 17391  01A4DC                     _tolower:
 17392                           	opt callstack 0
 17393                           
 17394                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17395  01A4DC  52E6               	movf	postinc1,f,c
 17396  01A4DE  52E6               	movf	postinc1,f,c
 17397                           
 17398                           ;stkvar	_c @ sp[(-2)+-2]
 17399                           
 17400                           ;incstack = 0
 17401 ;; hardware stack exceeded
 17402  01A4E0  0EFC               	movlw	-4
 17403  01A4E2  50E3               	movf	plusw1,w,c
 17404  01A4E4  0FBF               	addlw	191
 17405  01A4E6  6E30               	movwf	(btemp+10)^0,c
 17406  01A4E8  0EFD               	movlw	-3
 17407  01A4EA  006F FF8C  F031    	movff	plusw1,btemp+11
 17408  01A4F0  0EFF               	movlw	255
 17409  01A4F2  2231               	addwfc	(btemp+11)^0,f,c
 17410  01A4F4  5031               	movf	(btemp+11)^0,w,c
 17411  01A4F6  E106               	bnz	u5900
 17412  01A4F8  0E1A               	movlw	26
 17413  01A4FA  5C30               	subwf	(btemp+10)^0,w,c
 17414  01A4FC  B0D8               	btfsc	status,0,c
 17415  01A4FE  D002               	goto	u5900
 17416  01A500  0E01               	movlw	1
 17417  01A502  D001               	goto	u5910
 17418  01A504                     u5900:
 17419  01A504  0E00               	movlw	0
 17420  01A506                     u5910:
 17421  01A506  6E30               	movwf	(btemp+10)^0,c
 17422  01A508  6A31               	clrf	(btemp+11)^0,c
 17423                           
 17424                           ;stkvar	_tolower$6237 @ sp[(-2)+0]
 17425  01A50A  0EFE               	movlw	-2
 17426  01A50C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17427  01A512  0EFF               	movlw	-1
 17428  01A514  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17429                           
 17430                           ;stkvar	_tolower$6237 @ sp[(-2)+0]
 17431  01A51A  0EFE               	movlw	-2
 17432  01A51C  006F FF8C  F026    	movff	plusw1,btemp
 17433  01A522  0EFF               	movlw	-1
 17434  01A524  50E3               	movf	plusw1,w,c
 17435  01A526  1026               	iorwf	btemp^0,w,c
 17436  01A528  B4D8               	btfsc	status,2,c
 17437  01A52A  D00D               	goto	l7847
 17438                           
 17439                           ;stkvar	_c @ sp[(-2)+-2]
 17440  01A52C  0EFC               	movlw	-4
 17441  01A52E  006F FF8C  F026    	movff	plusw1,btemp
 17442  01A534  0EFD               	movlw	-3
 17443  01A536  006F FF8C  F027    	movff	plusw1,btemp+1
 17444  01A53C  0E20               	movlw	32
 17445  01A53E  1226               	iorwf	btemp^0,f,c
 17446  01A540  0E00               	movlw	0
 17447  01A542  1227               	iorwf	(btemp+1)^0,f,c
 17448  01A544  D008               	goto	l3451
 17449  01A546                     l7847:
 17450                           
 17451                           ;stkvar	_c @ sp[(-2)+-2]
 17452  01A546  0EFC               	movlw	-4
 17453  01A548  006F FF8C  F026    	movff	plusw1,btemp
 17454  01A54E  0EFD               	movlw	-3
 17455  01A550  006F FF8C  F027    	movff	plusw1,btemp+1
 17456  01A556                     l3451:
 17457                           
 17458                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17459  01A556  52E5               	movf	postdec1,f,c
 17460  01A558  52E5               	movf	postdec1,f,c
 17461  01A55A  52E5               	movf	postdec1,f,c
 17462  01A55C  52E5               	movf	postdec1,f,c
 17463  01A55E  0012               	return		;funcret
 17464  01A560                     __end_of_tolower:
 17465                           	opt callstack 0
 17466                           
 17467 ;; *************** function _isupper *****************
 17468 ;; Defined at:
 17469 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 17470 ;; Parameters:    Size  Location     Type
 17471 ;;  c               2  [STACK] int 
 17472 ;; Auto vars:     Size  Location     Type
 17473 ;;		None
 17474 ;; Return value:  Size  Location     Type
 17475 ;;                  2  [STACK] int 
 17476 ;; Registers used:
 17477 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 17478 ;; Tracked objects:
 17479 ;;		On entry : 0/0
 17480 ;;		On exit  : 0/0
 17481 ;;		Unchanged: 0/0
 17482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17487 ;;Total ram usage:        0 bytes
 17488 ;; Hardware stack levels used:    1
 17489 ;; Hardware stack levels required when called:   15
 17490 ;; This function calls:
 17491 ;;		Nothing
 17492 ;; This function is called by:
 17493 ;;		_efgtoa
 17494 ;;		_xtoa
 17495 ;;		_vfpfcnvrt
 17496 ;;		_tolower
 17497 ;; This function uses a reentrant model
 17498 ;;
 17499                           
 17500                           	psect	text57
 17501  01B094                     __ptext57:
 17502                           	opt callstack 0
 17503  01B094                     _isupper:
 17504                           	opt callstack 0
 17505                           
 17506                           ;stkvar	_c @ sp[(0)+-2]
 17507                           
 17508                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17509                           ;incstack = 0
 17510 ;; hardware stack exceeded
 17511  01B094  0EFE               	movlw	-2
 17512  01B096  50E3               	movf	plusw1,w,c
 17513  01B098  0FBF               	addlw	191
 17514  01B09A  6E30               	movwf	(btemp+10)^0,c
 17515  01B09C  0EFF               	movlw	-1
 17516  01B09E  006F FF8C  F031    	movff	plusw1,btemp+11
 17517  01B0A4  0EFF               	movlw	255
 17518  01B0A6  2231               	addwfc	(btemp+11)^0,f,c
 17519  01B0A8  5031               	movf	(btemp+11)^0,w,c
 17520  01B0AA  E106               	bnz	u5300
 17521  01B0AC  0E1A               	movlw	26
 17522  01B0AE  5C30               	subwf	(btemp+10)^0,w,c
 17523  01B0B0  B0D8               	btfsc	status,0,c
 17524  01B0B2  D002               	goto	u5300
 17525  01B0B4  0E01               	movlw	1
 17526  01B0B6  D001               	goto	u5310
 17527  01B0B8                     u5300:
 17528  01B0B8  0E00               	movlw	0
 17529  01B0BA                     u5310:
 17530  01B0BA  6E26               	movwf	btemp^0,c
 17531  01B0BC  6A27               	clrf	(btemp+1)^0,c
 17532                           
 17533                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17534  01B0BE  52E5               	movf	postdec1,f,c
 17535  01B0C0  52E5               	movf	postdec1,f,c
 17536  01B0C2  0012               	return		;funcret
 17537  01B0C4                     __end_of_isupper:
 17538                           	opt callstack 0
 17539                           
 17540 ;; *************** function _strcpy *****************
 17541 ;; Defined at:
 17542 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 17543 ;; Parameters:    Size  Location     Type
 17544 ;;  dest            2  [STACK] PTR unsigned char 
 17545 ;;		 -> dbuf(80), 
 17546 ;;  src             2  [STACK] PTR const unsigned char 
 17547 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17548 ;;		 -> dbuf(80), 
 17549 ;; Auto vars:     Size  Location     Type
 17550 ;;  d               2  [STACK] PTR unsigned char 
 17551 ;;		 -> dbuf(80), 
 17552 ;;  s               2  [STACK] PTR const unsigned char 
 17553 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17554 ;;		 -> dbuf(80), 
 17555 ;; Return value:  Size  Location     Type
 17556 ;;                  2  [STACK] PTR unsigned char 
 17557 ;; Registers used:
 17558 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 17559 ;; Tracked objects:
 17560 ;;		On entry : 0/0
 17561 ;;		On exit  : 0/0
 17562 ;;		Unchanged: 0/0
 17563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17568 ;;Total ram usage:        0 bytes
 17569 ;; Hardware stack levels used:    1
 17570 ;; Hardware stack levels required when called:   15
 17571 ;; This function calls:
 17572 ;;		Nothing
 17573 ;; This function is called by:
 17574 ;;		_efgtoa
 17575 ;; This function uses a reentrant model
 17576 ;;
 17577                           
 17578                           	psect	text58
 17579  0199CE                     __ptext58:
 17580                           	opt callstack 0
 17581  0199CE                     _strcpy:
 17582                           	opt callstack 0
 17583                           
 17584                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17585  0199CE  52E6               	movf	postinc1,f,c
 17586  0199D0  52E6               	movf	postinc1,f,c
 17587  0199D2  52E6               	movf	postinc1,f,c
 17588  0199D4  52E6               	movf	postinc1,f,c
 17589                           
 17590                           ;stkvar	_src @ sp[(-4)+-4]
 17591                           
 17592                           ;incstack = 0
 17593 ;; hardware stack exceeded
 17594  0199D6  0EF8               	movlw	-8
 17595  0199D8  006F FF8C  F030    	movff	plusw1,btemp+10
 17596  0199DE  0EF9               	movlw	-7
 17597  0199E0  006F FF8C  F031    	movff	plusw1,btemp+11
 17598                           
 17599                           ;stkvar	_s @ sp[(-4)+2]
 17600  0199E6  0EFF               	movlw	-1
 17601  0199E8  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17602  0199EE  0EFE               	movlw	-2
 17603  0199F0  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17604                           
 17605                           ;stkvar	_dest @ sp[(-4)+-2]
 17606  0199F6  0EFA               	movlw	-6
 17607  0199F8  006F FF8C  F030    	movff	plusw1,btemp+10
 17608  0199FE  0EFB               	movlw	-5
 17609  019A00  006F FF8C  F031    	movff	plusw1,btemp+11
 17610                           
 17611                           ;stkvar	_d @ sp[(-4)+0]
 17612  019A06  0EFD               	movlw	-3
 17613  019A08  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17614  019A0E  0EFC               	movlw	-4
 17615  019A10  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17616  019A16                     l11513:
 17617                           
 17618                           ;stkvar	_s @ sp[(-4)+2]
 17619  019A16  50E1               	movf	fsr1l,w,c
 17620  019A18  0FFE               	addlw	-2
 17621  019A1A  6ED9               	movwf	fsr2l,c
 17622  019A1C  50E2               	movf	fsr1h,w,c
 17623  019A1E  6EDA               	movwf	fsr2h,c
 17624  019A20  0EFF               	movlw	255
 17625  019A22  22DA               	addwfc	fsr2h,f,c
 17626  019A24  006F FF7C  F030    	movff	indf2,btemp+10
 17627  019A2A  0E01               	movlw	1
 17628  019A2C  26DE               	addwf	postinc2,f,c
 17629  019A2E  006F FF7C  F031    	movff	indf2,btemp+11
 17630  019A34  0E00               	movlw	0
 17631  019A36  22DD               	addwfc	postdec2,f,c
 17632  019A38  0060  F0C3  FFF6   	movff	btemp+10,tblptrl
 17633  019A3E  0060  F0C7  FFF7   	movff	btemp+11,tblptrh
 17634  019A44  0E00               	movlw	low (__mediumconst shr (0+16))
 17635  019A46  6EF8               	movwf	tblptru,c
 17636                           
 17637                           ;stkvar	_d @ sp[(-4)+0]
 17638  019A48  50E1               	movf	fsr1l,w,c
 17639  019A4A  0FFC               	addlw	-4
 17640  019A4C  6ED9               	movwf	fsr2l,c
 17641  019A4E  50E2               	movf	fsr1h,w,c
 17642  019A50  6EDA               	movwf	fsr2h,c
 17643  019A52  0EFF               	movlw	255
 17644  019A54  22DA               	addwfc	fsr2h,f,c
 17645  019A56  006F FF7C  F030    	movff	indf2,btemp+10
 17646  019A5C  0E01               	movlw	1
 17647  019A5E  26DE               	addwf	postinc2,f,c
 17648  019A60  006F FF7C  F031    	movff	indf2,btemp+11
 17649  019A66  0E00               	movlw	0
 17650  019A68  22DD               	addwfc	postdec2,f,c
 17651  019A6A  0060  F0C3  FFD9   	movff	btemp+10,fsr2l
 17652  019A70  0060  F0C7  FFDA   	movff	btemp+11,fsr2h
 17653  019A76  0E1F               	movlw	(high __ramtop+-1)
 17654  019A78  64F7               	cpfsgt	tblptrh,c
 17655  019A7A  D003               	bra	u10507
 17656  019A7C  0008               	tblrd		*
 17657  019A7E  50F5               	movf	tablat,w,c
 17658  019A80  D007               	bra	u10500
 17659  019A82                     u10507:
 17660  019A82  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17661  019A88  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17662  019A8E  50EF               	movf	indf0,w,c
 17663  019A90                     u10500:
 17664  019A90  6EDF               	movwf	indf2,c
 17665  019A92  50DF               	movf	indf2,w,c
 17666  019A94  A4D8               	btfss	status,2,c
 17667  019A96  D7BF               	goto	l11513
 17668                           
 17669                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 17670  019A98  0EF8               	movlw	248
 17671  019A9A  26E1               	addwf	fsr1l,f,c
 17672  019A9C  0EFF               	movlw	255
 17673  019A9E  22E2               	addwfc	fsr1h,f,c
 17674  019AA0  0012               	return		;funcret
 17675  019AA2                     __end_of_strcpy:
 17676                           	opt callstack 0
 17677                           
 17678 ;; *************** function _floorf *****************
 17679 ;; Defined at:
 17680 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 17681 ;; Parameters:    Size  Location     Type
 17682 ;;  x               4  [STACK] float 
 17683 ;; Auto vars:     Size  Location     Type
 17684 ;;  u               4  [STACK] struct .
 17685 ;;  m               4  [STACK] unsigned long 
 17686 ;;  e               2  [STACK] int 
 17687 ;; Return value:  Size  Location     Type
 17688 ;;                  4  [STACK] float 
 17689 ;; Registers used:
 17690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 17691 ;; Tracked objects:
 17692 ;;		On entry : 0/0
 17693 ;;		On exit  : 0/0
 17694 ;;		Unchanged: 0/0
 17695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17700 ;;Total ram usage:        0 bytes
 17701 ;; Hardware stack levels used:    1
 17702 ;; Hardware stack levels required when called:   15
 17703 ;; This function calls:
 17704 ;;		Nothing
 17705 ;; This function is called by:
 17706 ;;		_efgtoa
 17707 ;; This function uses a reentrant model
 17708 ;;
 17709                           
 17710                           	psect	text59
 17711  015F48                     __ptext59:
 17712                           	opt callstack 0
 17713  015F48                     _floorf:
 17714                           	opt callstack 0
 17715                           
 17716                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17717  015F48  0E0A               	movlw	10
 17718  015F4A  26E1               	addwf	fsr1l,f,c
 17719  015F4C  0E00               	movlw	0
 17720  015F4E  22E2               	addwfc	fsr1h,f,c
 17721                           
 17722                           ;incstack = 0
 17723 ;; hardware stack exceeded
 17724  015F50  0060  F1C8  F02E   	movff	floorf@F524,btemp+8
 17725  015F56  0060  F1CC  F02F   	movff	floorf@F524+1,btemp+9
 17726  015F5C  0060  F1D0  F030   	movff	floorf@F524+2,btemp+10
 17727  015F62  0060  F1D4  F031   	movff	floorf@F524+3,btemp+11
 17728                           
 17729                           ;stkvar	_u @ sp[(-10)+0]
 17730  015F68  0EF6               	movlw	-10
 17731  015F6A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 17732  015F70  0EF7               	movlw	-9
 17733  015F72  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 17734  015F78  0EF8               	movlw	-8
 17735  015F7A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17736  015F80  0EF9               	movlw	-7
 17737  015F82  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17738                           
 17739                           ;stkvar	_x @ sp[(-10)+-4]
 17740  015F88  0EF2               	movlw	-14
 17741  015F8A  006F FF8C  F02E    	movff	plusw1,btemp+8
 17742  015F90  0EF3               	movlw	-13
 17743  015F92  006F FF8C  F02F    	movff	plusw1,btemp+9
 17744  015F98  0EF4               	movlw	-12
 17745  015F9A  006F FF8C  F030    	movff	plusw1,btemp+10
 17746  015FA0  0EF5               	movlw	-11
 17747  015FA2  006F FF8C  F031    	movff	plusw1,btemp+11
 17748                           
 17749                           ;stkvar	_u @ sp[(-10)+0]
 17750  015FA8  0EF6               	movlw	-10
 17751  015FAA  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 17752  015FB0  0EF7               	movlw	-9
 17753  015FB2  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 17754  015FB8  0EF8               	movlw	-8
 17755  015FBA  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 17756  015FC0  0EF9               	movlw	-7
 17757  015FC2  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 17758  015FC8  0E81               	movlw	129
 17759  015FCA  6E30               	movwf	(btemp+10)^0,c
 17760  015FCC  0EFF               	movlw	255
 17761  015FCE  6E31               	movwf	(btemp+11)^0,c
 17762                           
 17763                           ;stkvar	_u @ sp[(-10)+0]
 17764  015FD0  0EF6               	movlw	-10
 17765  015FD2  006F FF8C  F02A    	movff	plusw1,btemp+4
 17766  015FD8  0EF7               	movlw	-9
 17767  015FDA  006F FF8C  F02B    	movff	plusw1,btemp+5
 17768  015FE0  0EF8               	movlw	-8
 17769  015FE2  006F FF8C  F02C    	movff	plusw1,btemp+6
 17770  015FE8  0EF9               	movlw	-7
 17771  015FEA  006F FF8C  F02D    	movff	plusw1,btemp+7
 17772  015FF0  0E18               	movlw	24
 17773  015FF2  D005               	goto	u5930
 17774  015FF4                     u5935:
 17775  015FF4  90D8               	bcf	status,0,c
 17776  015FF6  322D               	rrcf	(btemp+7)^0,f,c
 17777  015FF8  322C               	rrcf	(btemp+6)^0,f,c
 17778  015FFA  322B               	rrcf	(btemp+5)^0,f,c
 17779  015FFC  322A               	rrcf	(btemp+4)^0,f,c
 17780  015FFE                     u5930:
 17781  015FFE  2EE8               	decfsz	wreg,f,c
 17782  016000  D7F9               	goto	u5935
 17783  016002  0060  F0A8  F02E   	movff	btemp+4,btemp+8
 17784  016008  0060  F0AC  F02F   	movff	btemp+5,btemp+9
 17785  01600E  0EFF               	movlw	255
 17786  016010  162E               	andwf	(btemp+8)^0,f,c
 17787  016012  0E00               	movlw	0
 17788  016014  162F               	andwf	(btemp+9)^0,f,c
 17789  016016  5030               	movf	(btemp+10)^0,w,c
 17790  016018  262E               	addwf	(btemp+8)^0,f,c
 17791  01601A  5031               	movf	(btemp+11)^0,w,c
 17792  01601C  222F               	addwfc	(btemp+9)^0,f,c
 17793                           
 17794                           ;stkvar	_e @ sp[(-10)+8]
 17795  01601E  0EFE               	movlw	-2
 17796  016020  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 17797  016026  0EFF               	movlw	-1
 17798  016028  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 17799                           
 17800                           ;stkvar	_e @ sp[(-10)+8]
 17801  01602E  0EFF               	movlw	-1
 17802  016030  BEE3               	btfsc	plusw1,7,c
 17803  016032  D019               	goto	l7861
 17804  016034  0EFF               	movlw	-1
 17805  016036  50E3               	movf	plusw1,w,c
 17806  016038  E108               	bnz	u5940
 17807  01603A  0EFE               	movlw	-2
 17808  01603C  006F FF8C  F026    	movff	plusw1,btemp
 17809  016042  0E17               	movlw	23
 17810  016044  5E26               	subwf	btemp^0,f,c
 17811  016046  A0D8               	btfss	status,0,c
 17812  016048  D00E               	goto	l7861
 17813  01604A                     u5940:
 17814                           
 17815                           ;stkvar	_x @ sp[(-10)+-4]
 17816  01604A  0EF2               	movlw	-14
 17817  01604C  006F FF8C  F026    	movff	plusw1,btemp
 17818  016052  0EF3               	movlw	-13
 17819  016054  006F FF8C  F027    	movff	plusw1,btemp+1
 17820  01605A  0EF4               	movlw	-12
 17821  01605C  006F FF8C  F028    	movff	plusw1,btemp+2
 17822  016062  0EF5               	movlw	-11
 17823  016064  D11F               	goto	L18
 17824  016066                     l7861:
 17825                           
 17826                           ;stkvar	_e @ sp[(-10)+8]
 17827  016066  0EFF               	movlw	-1
 17828  016068  BEE3               	btfsc	plusw1,7,c
 17829  01606A  D0B4               	goto	l7877
 17830                           
 17831                           ;stkvar	_e @ sp[(-10)+8]
 17832  01606C  0EFE               	movlw	-2
 17833  01606E  006F FF8C  F031    	movff	plusw1,btemp+11
 17834  016074  0EFF               	movlw	255
 17835  016076  6E2A               	movwf	(btemp+4)^0,c
 17836  016078  0EFF               	movlw	255
 17837  01607A  6E2B               	movwf	(btemp+5)^0,c
 17838  01607C  0E7F               	movlw	127
 17839  01607E  6E2C               	movwf	(btemp+6)^0,c
 17840  016080  0E00               	movlw	0
 17841  016082  6E2D               	movwf	(btemp+7)^0,c
 17842  016084                     u5965:
 17843  016084  6631               	tstfsz	(btemp+11)^0,c
 17844  016086  D001               	goto	u5966
 17845  016088  D007               	goto	u5967
 17846  01608A                     u5966:
 17847  01608A  342D               	rlcf	(btemp+7)^0,w,c
 17848  01608C  322D               	rrcf	(btemp+7)^0,f,c
 17849  01608E  322C               	rrcf	(btemp+6)^0,f,c
 17850  016090  322B               	rrcf	(btemp+5)^0,f,c
 17851  016092  322A               	rrcf	(btemp+4)^0,f,c
 17852  016094  2E31               	decfsz	(btemp+11)^0,f,c
 17853  016096  D7F6               	goto	u5965
 17854  016098                     u5967:
 17855                           
 17856                           ;stkvar	_m @ sp[(-10)+4]
 17857  016098  0EFA               	movlw	-6
 17858  01609A  0060  F0AB  FFE3   	movff	btemp+4,plusw1
 17859  0160A0  0EFB               	movlw	-5
 17860  0160A2  0060  F0AF  FFE3   	movff	btemp+5,plusw1
 17861  0160A8  0EFC               	movlw	-4
 17862  0160AA  0060  F0B3  FFE3   	movff	btemp+6,plusw1
 17863  0160B0  0EFD               	movlw	-3
 17864  0160B2  0060  F0B7  FFE3   	movff	btemp+7,plusw1
 17865                           
 17866                           ;stkvar	_m @ sp[(-10)+4]
 17867                           ;stkvar	_u @ sp[(-10)+0]
 17868  0160B8  0EF6               	movlw	-10
 17869  0160BA  006F FF8C  F02E    	movff	plusw1,btemp+8
 17870  0160C0  0EF7               	movlw	-9
 17871  0160C2  006F FF8C  F02F    	movff	plusw1,btemp+9
 17872  0160C8  0EF8               	movlw	-8
 17873  0160CA  006F FF8C  F030    	movff	plusw1,btemp+10
 17874  0160D0  0EF9               	movlw	-7
 17875  0160D2  006F FF8C  F031    	movff	plusw1,btemp+11
 17876  0160D8  0EFA               	movlw	-6
 17877  0160DA  50E3               	movf	plusw1,w,c
 17878  0160DC  162E               	andwf	(btemp+8)^0,f,c
 17879  0160DE  0EFB               	movlw	-5
 17880  0160E0  50E3               	movf	plusw1,w,c
 17881  0160E2  162F               	andwf	(btemp+9)^0,f,c
 17882  0160E4  0EFC               	movlw	-4
 17883  0160E6  50E3               	movf	plusw1,w,c
 17884  0160E8  1630               	andwf	(btemp+10)^0,f,c
 17885  0160EA  0EFD               	movlw	-3
 17886  0160EC  50E3               	movf	plusw1,w,c
 17887  0160EE  1631               	andwf	(btemp+11)^0,f,c
 17888  0160F0  502E               	movf	(btemp+8)^0,w,c
 17889  0160F2  102F               	iorwf	(btemp+9)^0,w,c
 17890  0160F4  1030               	iorwf	(btemp+10)^0,w,c
 17891  0160F6  1031               	iorwf	(btemp+11)^0,w,c
 17892  0160F8  B4D8               	btfsc	status,2,c
 17893  0160FA  D7A7               	goto	u5940
 17894                           
 17895                           ;stkvar	_u @ sp[(-10)+0]
 17896  0160FC  0EF6               	movlw	-10
 17897  0160FE  006F FF8C  F02E    	movff	plusw1,btemp+8
 17898  016104  0EF7               	movlw	-9
 17899  016106  006F FF8C  F02F    	movff	plusw1,btemp+9
 17900  01610C  0EF8               	movlw	-8
 17901  01610E  006F FF8C  F030    	movff	plusw1,btemp+10
 17902  016114  0EF9               	movlw	-7
 17903  016116  006F FF8C  F031    	movff	plusw1,btemp+11
 17904  01611C  0E20               	movlw	32
 17905  01611E  D005               	goto	u5980
 17906  016120                     u5985:
 17907  016120  90D8               	bcf	status,0,c
 17908  016122  3231               	rrcf	(btemp+11)^0,f,c
 17909  016124  3230               	rrcf	(btemp+10)^0,f,c
 17910  016126  322F               	rrcf	(btemp+9)^0,f,c
 17911  016128  322E               	rrcf	(btemp+8)^0,f,c
 17912  01612A                     u5980:
 17913  01612A  2EE8               	decfsz	wreg,f,c
 17914  01612C  D7F9               	goto	u5985
 17915  01612E  502E               	movf	(btemp+8)^0,w,c
 17916  016130  B4D8               	btfsc	status,2,c
 17917  016132  D028               	goto	l7875
 17918                           
 17919                           ;stkvar	_m @ sp[(-10)+4]
 17920                           ;stkvar	_u @ sp[(-10)+0]
 17921  016134  0EF6               	movlw	-10
 17922  016136  50E3               	movf	plusw1,w,c
 17923  016138  6E26               	movwf	btemp^0,c
 17924  01613A  0EFA               	movlw	-6
 17925  01613C  50E3               	movf	plusw1,w,c
 17926  01613E  2626               	addwf	btemp^0,f,c
 17927  016140  0EF6               	movlw	-10
 17928  016142  0060  F09B  FFE3   	movff	btemp,plusw1
 17929  016148  0EF7               	movlw	-9
 17930  01614A  50E3               	movf	plusw1,w,c
 17931  01614C  6E26               	movwf	btemp^0,c
 17932  01614E  0EFB               	movlw	-5
 17933  016150  50E3               	movf	plusw1,w,c
 17934  016152  2226               	addwfc	btemp^0,f,c
 17935  016154  0EF7               	movlw	-9
 17936  016156  0060  F09B  FFE3   	movff	btemp,plusw1
 17937  01615C  0EF8               	movlw	-8
 17938  01615E  50E3               	movf	plusw1,w,c
 17939  016160  6E26               	movwf	btemp^0,c
 17940  016162  0EFC               	movlw	-4
 17941  016164  50E3               	movf	plusw1,w,c
 17942  016166  2226               	addwfc	btemp^0,f,c
 17943  016168  0EF8               	movlw	-8
 17944  01616A  0060  F09B  FFE3   	movff	btemp,plusw1
 17945  016170  0EF9               	movlw	-7
 17946  016172  50E3               	movf	plusw1,w,c
 17947  016174  6E26               	movwf	btemp^0,c
 17948  016176  0EFD               	movlw	-3
 17949  016178  50E3               	movf	plusw1,w,c
 17950  01617A  2226               	addwfc	btemp^0,f,c
 17951  01617C  0EF9               	movlw	-7
 17952  01617E  0060  F09B  FFE3   	movff	btemp,plusw1
 17953  016184                     l7875:
 17954                           
 17955                           ;stkvar	_m @ sp[(-10)+4]
 17956  016184  0EFA               	movlw	-6
 17957  016186  006F FF8C  F02E    	movff	plusw1,btemp+8
 17958  01618C  0EFB               	movlw	-5
 17959  01618E  006F FF8C  F02F    	movff	plusw1,btemp+9
 17960  016194  0EFC               	movlw	-4
 17961  016196  006F FF8C  F030    	movff	plusw1,btemp+10
 17962  01619C  0EFD               	movlw	-3
 17963  01619E  006F FF8C  F031    	movff	plusw1,btemp+11
 17964  0161A4  1C2E               	comf	(btemp+8)^0,w,c
 17965  0161A6  6E2A               	movwf	(btemp+4)^0,c
 17966  0161A8  1C2F               	comf	(btemp+9)^0,w,c
 17967  0161AA  6E2B               	movwf	(btemp+5)^0,c
 17968  0161AC  1C30               	comf	(btemp+10)^0,w,c
 17969  0161AE  6E2C               	movwf	(btemp+6)^0,c
 17970  0161B0  1C31               	comf	(btemp+11)^0,w,c
 17971  0161B2  6E2D               	movwf	(btemp+7)^0,c
 17972                           
 17973                           ;stkvar	_u @ sp[(-10)+0]
 17974  0161B4  50E1               	movf	fsr1l,w,c
 17975  0161B6  0FF6               	addlw	-10
 17976  0161B8  6ED9               	movwf	fsr2l,c
 17977  0161BA  50E2               	movf	fsr1h,w,c
 17978  0161BC  6EDA               	movwf	fsr2h,c
 17979  0161BE  0EFF               	movlw	255
 17980  0161C0  22DA               	addwfc	fsr2h,f,c
 17981  0161C2  502A               	movf	(btemp+4)^0,w,c
 17982  0161C4  16DE               	andwf	postinc2,f,c
 17983  0161C6  502B               	movf	(btemp+5)^0,w,c
 17984  0161C8  16DE               	andwf	postinc2,f,c
 17985  0161CA  502C               	movf	(btemp+6)^0,w,c
 17986  0161CC  16DE               	andwf	postinc2,f,c
 17987  0161CE  502D               	movf	(btemp+7)^0,w,c
 17988  0161D0  16DE               	andwf	postinc2,f,c
 17989  0161D2  D05B               	goto	l7885
 17990  0161D4                     l7877:
 17991                           
 17992                           ;stkvar	_u @ sp[(-10)+0]
 17993  0161D4  0EF6               	movlw	-10
 17994  0161D6  006F FF8C  F02E    	movff	plusw1,btemp+8
 17995  0161DC  0EF7               	movlw	-9
 17996  0161DE  006F FF8C  F02F    	movff	plusw1,btemp+9
 17997  0161E4  0EF8               	movlw	-8
 17998  0161E6  006F FF8C  F030    	movff	plusw1,btemp+10
 17999  0161EC  0EF9               	movlw	-7
 18000  0161EE  006F FF8C  F031    	movff	plusw1,btemp+11
 18001  0161F4  0E20               	movlw	32
 18002  0161F6  D005               	goto	u6000
 18003  0161F8                     u6005:
 18004  0161F8  90D8               	bcf	status,0,c
 18005  0161FA  3231               	rrcf	(btemp+11)^0,f,c
 18006  0161FC  3230               	rrcf	(btemp+10)^0,f,c
 18007  0161FE  322F               	rrcf	(btemp+9)^0,f,c
 18008  016200  322E               	rrcf	(btemp+8)^0,f,c
 18009  016202                     u6000:
 18010  016202  2EE8               	decfsz	wreg,f,c
 18011  016204  D7F9               	goto	u6005
 18012  016206  662E               	tstfsz	(btemp+8)^0,c
 18013  016208  D009               	goto	l7881
 18014                           
 18015                           ;stkvar	_u @ sp[(-10)+0]
 18016  01620A  0EF6               	movlw	-10
 18017  01620C  6AE3               	clrf	plusw1,c
 18018  01620E  0EF7               	movlw	-9
 18019  016210  6AE3               	clrf	plusw1,c
 18020  016212  0EF8               	movlw	-8
 18021  016214  6AE3               	clrf	plusw1,c
 18022  016216  0EF9               	movlw	-7
 18023  016218  6AE3               	clrf	plusw1,c
 18024  01621A  D037               	goto	l7885
 18025  01621C                     l7881:
 18026                           
 18027                           ;stkvar	_u @ sp[(-10)+0]
 18028  01621C  0EF6               	movlw	-10
 18029  01621E  006F FF8C  F02E    	movff	plusw1,btemp+8
 18030  016224  0EF7               	movlw	-9
 18031  016226  006F FF8C  F02F    	movff	plusw1,btemp+9
 18032  01622C  0EF8               	movlw	-8
 18033  01622E  006F FF8C  F030    	movff	plusw1,btemp+10
 18034  016234  0EF9               	movlw	-7
 18035  016236  006F FF8C  F031    	movff	plusw1,btemp+11
 18036  01623C  90D8               	bcf	status,0,c
 18037  01623E  342E               	rlcf	(btemp+8)^0,w,c
 18038  016240  6E2A               	movwf	(btemp+4)^0,c
 18039  016242  342F               	rlcf	(btemp+9)^0,w,c
 18040  016244  6E2B               	movwf	(btemp+5)^0,c
 18041  016246  3430               	rlcf	(btemp+10)^0,w,c
 18042  016248  6E2C               	movwf	(btemp+6)^0,c
 18043  01624A  3431               	rlcf	(btemp+11)^0,w,c
 18044  01624C  6E2D               	movwf	(btemp+7)^0,c
 18045  01624E  502A               	movf	(btemp+4)^0,w,c
 18046  016250  102B               	iorwf	(btemp+5)^0,w,c
 18047  016252  102C               	iorwf	(btemp+6)^0,w,c
 18048  016254  102D               	iorwf	(btemp+7)^0,w,c
 18049  016256  B4D8               	btfsc	status,2,c
 18050  016258  D018               	goto	l7885
 18051  01625A  0E00               	movlw	0
 18052  01625C  6E2E               	movwf	(btemp+8)^0,c
 18053  01625E  0E00               	movlw	0
 18054  016260  6E2F               	movwf	(btemp+9)^0,c
 18055  016262  0E80               	movlw	128
 18056  016264  6E30               	movwf	(btemp+10)^0,c
 18057  016266  0EBF               	movlw	191
 18058  016268  6E31               	movwf	(btemp+11)^0,c
 18059                           
 18060                           ;stkvar	_u @ sp[(-10)+0]
 18061  01626A  0EF6               	movlw	-10
 18062  01626C  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 18063  016272  0EF7               	movlw	-9
 18064  016274  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 18065  01627A  0EF8               	movlw	-8
 18066  01627C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 18067  016282  0EF9               	movlw	-7
 18068  016284  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 18069  01628A                     l7885:
 18070                           
 18071                           ;stkvar	_u @ sp[(-10)+0]
 18072  01628A  0EF6               	movlw	-10
 18073  01628C  006F FF8C  F026    	movff	plusw1,btemp
 18074  016292  0EF7               	movlw	-9
 18075  016294  006F FF8C  F027    	movff	plusw1,btemp+1
 18076  01629A  0EF8               	movlw	-8
 18077  01629C  006F FF8C  F028    	movff	plusw1,btemp+2
 18078  0162A2  0EF9               	movlw	-7
 18079  0162A4                     L18:
 18080  0162A4  006F FF8C  F029    	movff	plusw1,btemp+3
 18081                           
 18082                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18083  0162AA  0EF2               	movlw	242
 18084  0162AC  26E1               	addwf	fsr1l,f,c
 18085  0162AE  0EFF               	movlw	255
 18086  0162B0  22E2               	addwfc	fsr1h,f,c
 18087  0162B2  0012               	return		;funcret
 18088  0162B4                     __end_of_floorf:
 18089                           	opt callstack 0
 18090                           
 18091 ;; *************** function ___fpclassifyf *****************
 18092 ;; Defined at:
 18093 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 18094 ;; Parameters:    Size  Location     Type
 18095 ;;  x               4  [STACK] float 
 18096 ;; Auto vars:     Size  Location     Type
 18097 ;;  u               4  [STACK] struct .
 18098 ;;  e               2  [STACK] int 
 18099 ;; Return value:  Size  Location     Type
 18100 ;;                  2  [STACK] int 
 18101 ;; Registers used:
 18102 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 18103 ;; Tracked objects:
 18104 ;;		On entry : 0/0
 18105 ;;		On exit  : 0/0
 18106 ;;		Unchanged: 0/0
 18107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18112 ;;Total ram usage:        0 bytes
 18113 ;; Hardware stack levels used:    1
 18114 ;; Hardware stack levels required when called:   15
 18115 ;; This function calls:
 18116 ;;		Nothing
 18117 ;; This function is called by:
 18118 ;;		_efgtoa
 18119 ;; This function uses a reentrant model
 18120 ;;
 18121                           
 18122                           	psect	text60
 18123  017F84                     __ptext60:
 18124                           	opt callstack 0
 18125  017F84                     ___fpclassifyf:
 18126                           	opt callstack 0
 18127                           
 18128                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18129  017F84  0E06               	movlw	6
 18130  017F86  26E1               	addwf	fsr1l,f,c
 18131  017F88  0E00               	movlw	0
 18132  017F8A  22E2               	addwfc	fsr1h,f,c
 18133                           
 18134                           ;incstack = 0
 18135 ;; hardware stack exceeded
 18136  017F8C  0060  F1E8  F02E   	movff	___fpclassifyf@F463,btemp+8
 18137  017F92  0060  F1EC  F02F   	movff	___fpclassifyf@F463+1,btemp+9
 18138  017F98  0060  F1F0  F030   	movff	___fpclassifyf@F463+2,btemp+10
 18139  017F9E  0060  F1F4  F031   	movff	___fpclassifyf@F463+3,btemp+11
 18140                           
 18141                           ;stkvar	_u @ sp[(-6)+0]
 18142  017FA4  0EFA               	movlw	-6
 18143  017FA6  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 18144  017FAC  0EFB               	movlw	-5
 18145  017FAE  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 18146  017FB4  0EFC               	movlw	-4
 18147  017FB6  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 18148  017FBC  0EFD               	movlw	-3
 18149  017FBE  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 18150                           
 18151                           ;stkvar	_x @ sp[(-6)+-4]
 18152  017FC4  0EF6               	movlw	-10
 18153  017FC6  006F FF8C  F02E    	movff	plusw1,btemp+8
 18154  017FCC  0EF7               	movlw	-9
 18155  017FCE  006F FF8C  F02F    	movff	plusw1,btemp+9
 18156  017FD4  0EF8               	movlw	-8
 18157  017FD6  006F FF8C  F030    	movff	plusw1,btemp+10
 18158  017FDC  0EF9               	movlw	-7
 18159  017FDE  006F FF8C  F031    	movff	plusw1,btemp+11
 18160                           
 18161                           ;stkvar	_u @ sp[(-6)+0]
 18162  017FE4  0EFA               	movlw	-6
 18163  017FE6  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 18164  017FEC  0EFB               	movlw	-5
 18165  017FEE  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 18166  017FF4  0EFC               	movlw	-4
 18167  017FF6  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 18168  017FFC  0EFD               	movlw	-3
 18169  017FFE  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 18170                           
 18171                           ;stkvar	_u @ sp[(-6)+0]
 18172  018004  0EFA               	movlw	-6
 18173  018006  006F FF8C  F02E    	movff	plusw1,btemp+8
 18174  01800C  0EFB               	movlw	-5
 18175  01800E  006F FF8C  F02F    	movff	plusw1,btemp+9
 18176  018014  0EFC               	movlw	-4
 18177  018016  006F FF8C  F030    	movff	plusw1,btemp+10
 18178  01801C  0EFD               	movlw	-3
 18179  01801E  006F FF8C  F031    	movff	plusw1,btemp+11
 18180  018024  0E18               	movlw	24
 18181  018026  D005               	goto	u5810
 18182  018028                     u5815:
 18183  018028  90D8               	bcf	status,0,c
 18184  01802A  3231               	rrcf	(btemp+11)^0,f,c
 18185  01802C  3230               	rrcf	(btemp+10)^0,f,c
 18186  01802E  322F               	rrcf	(btemp+9)^0,f,c
 18187  018030  322E               	rrcf	(btemp+8)^0,f,c
 18188  018032                     u5810:
 18189  018032  2EE8               	decfsz	wreg,f,c
 18190  018034  D7F9               	goto	u5815
 18191  018036  0060  F0B8  F02C   	movff	btemp+8,btemp+6
 18192  01803C  0060  F0BC  F02D   	movff	btemp+9,btemp+7
 18193  018042  0EFF               	movlw	255
 18194  018044  162C               	andwf	(btemp+6)^0,f,c
 18195  018046  0E00               	movlw	0
 18196  018048  162D               	andwf	(btemp+7)^0,f,c
 18197                           
 18198                           ;stkvar	_e @ sp[(-6)+4]
 18199  01804A  0EFE               	movlw	-2
 18200  01804C  0060  F0B3  FFE3   	movff	btemp+6,plusw1
 18201  018052  0EFF               	movlw	-1
 18202  018054  0060  F0B7  FFE3   	movff	btemp+7,plusw1
 18203                           
 18204                           ;stkvar	_e @ sp[(-6)+4]
 18205  01805A  0EFE               	movlw	-2
 18206  01805C  006F FF8C  F026    	movff	plusw1,btemp
 18207  018062  0EFF               	movlw	-1
 18208  018064  50E3               	movf	plusw1,w,c
 18209  018066  1026               	iorwf	btemp^0,w,c
 18210  018068  A4D8               	btfss	status,2,c
 18211  01806A  D023               	goto	l7823
 18212                           
 18213                           ;stkvar	_u @ sp[(-6)+0]
 18214  01806C  0EFA               	movlw	-6
 18215  01806E  006F FF8C  F02E    	movff	plusw1,btemp+8
 18216  018074  0EFB               	movlw	-5
 18217  018076  006F FF8C  F02F    	movff	plusw1,btemp+9
 18218  01807C  0EFC               	movlw	-4
 18219  01807E  006F FF8C  F030    	movff	plusw1,btemp+10
 18220  018084  0EFD               	movlw	-3
 18221  018086  006F FF8C  F031    	movff	plusw1,btemp+11
 18222  01808C  90D8               	bcf	status,0,c
 18223  01808E  342E               	rlcf	(btemp+8)^0,w,c
 18224  018090  6E2A               	movwf	(btemp+4)^0,c
 18225  018092  342F               	rlcf	(btemp+9)^0,w,c
 18226  018094  6E2B               	movwf	(btemp+5)^0,c
 18227  018096  3430               	rlcf	(btemp+10)^0,w,c
 18228  018098  6E2C               	movwf	(btemp+6)^0,c
 18229  01809A  3431               	rlcf	(btemp+11)^0,w,c
 18230  01809C  6E2D               	movwf	(btemp+7)^0,c
 18231  01809E  502A               	movf	(btemp+4)^0,w,c
 18232  0180A0  102B               	iorwf	(btemp+5)^0,w,c
 18233  0180A2  102C               	iorwf	(btemp+6)^0,w,c
 18234  0180A4  102D               	iorwf	(btemp+7)^0,w,c
 18235  0180A6  A4D8               	btfss	status,2,c
 18236  0180A8  D002               	goto	l7819
 18237  0180AA  0E02               	movlw	2
 18238  0180AC  D02E               	goto	L19
 18239  0180AE                     l7819:
 18240  0180AE  0E03               	movlw	3
 18241  0180B0  D02C               	goto	L19
 18242  0180B2                     l7823:
 18243                           
 18244                           ;stkvar	_e @ sp[(-6)+4]
 18245  0180B2  0EFE               	movlw	-2
 18246  0180B4  28E3               	incf	plusw1,w,c
 18247  0180B6  E128               	bnz	l7829
 18248  0180B8  0EFF               	movlw	-1
 18249  0180BA  50E3               	movf	plusw1,w,c
 18250  0180BC  A4D8               	btfss	status,2,c
 18251  0180BE  D024               	goto	l7829
 18252                           
 18253                           ;stkvar	_u @ sp[(-6)+0]
 18254  0180C0  0EFA               	movlw	-6
 18255  0180C2  006F FF8C  F02E    	movff	plusw1,btemp+8
 18256  0180C8  0EFB               	movlw	-5
 18257  0180CA  006F FF8C  F02F    	movff	plusw1,btemp+9
 18258  0180D0  0EFC               	movlw	-4
 18259  0180D2  006F FF8C  F030    	movff	plusw1,btemp+10
 18260  0180D8  0EFD               	movlw	-3
 18261  0180DA  006F FF8C  F031    	movff	plusw1,btemp+11
 18262  0180E0  0E09               	movlw	9
 18263  0180E2                     u5855:
 18264  0180E2  90D8               	bcf	status,0,c
 18265  0180E4  362E               	rlcf	(btemp+8)^0,f,c
 18266  0180E6  362F               	rlcf	(btemp+9)^0,f,c
 18267  0180E8  3630               	rlcf	(btemp+10)^0,f,c
 18268  0180EA  3631               	rlcf	(btemp+11)^0,f,c
 18269  0180EC  2EE8               	decfsz	wreg,f,c
 18270  0180EE  D7F9               	goto	u5855
 18271  0180F0  502E               	movf	(btemp+8)^0,w,c
 18272  0180F2  102F               	iorwf	(btemp+9)^0,w,c
 18273  0180F4  1030               	iorwf	(btemp+10)^0,w,c
 18274  0180F6  1031               	iorwf	(btemp+11)^0,w,c
 18275  0180F8  A4D8               	btfss	status,2,c
 18276  0180FA  D002               	goto	u5860
 18277  0180FC  0E01               	movlw	1
 18278  0180FE  D001               	goto	u5870
 18279  018100                     u5860:
 18280  018100  0E00               	movlw	0
 18281  018102                     u5870:
 18282  018102  6E26               	movwf	btemp^0,c
 18283  018104  6A27               	clrf	(btemp+1)^0,c
 18284  018106  D004               	goto	l3061
 18285  018108                     l7829:
 18286  018108  0E04               	movlw	4
 18287  01810A                     L19:
 18288  01810A  6E26               	movwf	btemp^0,c
 18289  01810C  0E00               	movlw	0
 18290  01810E  6E27               	movwf	(btemp+1)^0,c
 18291  018110                     l3061:
 18292                           
 18293                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 18294  018110  0EF6               	movlw	246
 18295  018112  26E1               	addwf	fsr1l,f,c
 18296  018114  0EFF               	movlw	255
 18297  018116  22E2               	addwfc	fsr1h,f,c
 18298  018118  0012               	return		;funcret
 18299  01811A                     __end_of___fpclassifyf:
 18300                           	opt callstack 0
 18301                           
 18302 ;; *************** function ___fltol *****************
 18303 ;; Defined at:
 18304 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 18305 ;; Parameters:    Size  Location     Type
 18306 ;;  f1              4  [STACK] int 
 18307 ;; Auto vars:     Size  Location     Type
 18308 ;;  exp1            1  [STACK] unsigned char 
 18309 ;;  sign1           1  [STACK] unsigned char 
 18310 ;; Return value:  Size  Location     Type
 18311 ;;                  4  [STACK] long 
 18312 ;; Registers used:
 18313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 18314 ;; Tracked objects:
 18315 ;;		On entry : 0/0
 18316 ;;		On exit  : 0/0
 18317 ;;		Unchanged: 0/0
 18318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18323 ;;Total ram usage:        0 bytes
 18324 ;; Hardware stack levels used:    1
 18325 ;; Hardware stack levels required when called:   15
 18326 ;; This function calls:
 18327 ;;		Nothing
 18328 ;; This function is called by:
 18329 ;;		_main
 18330 ;;		_calc_bsoc
 18331 ;;		_init_bsoc
 18332 ;;		_efgtoa
 18333 ;; This function uses a reentrant model
 18334 ;;
 18335                           
 18336                           	psect	text61
 18337  01840E                     __ptext61:
 18338                           	opt callstack 0
 18339  01840E                     ___fltol:
 18340                           	opt callstack 0
 18341                           
 18342                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18343  01840E  52E6               	movf	postinc1,f,c
 18344  018410  52E6               	movf	postinc1,f,c
 18345                           
 18346                           ;stkvar	_f1 @ sp[(-2)+-4]
 18347                           
 18348                           ;incstack = 0
 18349 ;; hardware stack exceeded
 18350  018412  0EFA               	movlw	-6
 18351  018414  006F FF8C  F02E    	movff	plusw1,btemp+8
 18352  01841A  0EFB               	movlw	-5
 18353  01841C  006F FF8C  F02F    	movff	plusw1,btemp+9
 18354  018422  0EFC               	movlw	-4
 18355  018424  006F FF8C  F030    	movff	plusw1,btemp+10
 18356  01842A  0EFD               	movlw	-3
 18357  01842C  006F FF8C  F031    	movff	plusw1,btemp+11
 18358  018432  0E18               	movlw	24
 18359  018434  D005               	goto	u7020
 18360  018436                     u7025:
 18361  018436  90D8               	bcf	status,0,c
 18362  018438  3231               	rrcf	(btemp+11)^0,f,c
 18363  01843A  3230               	rrcf	(btemp+10)^0,f,c
 18364  01843C  322F               	rrcf	(btemp+9)^0,f,c
 18365  01843E  322E               	rrcf	(btemp+8)^0,f,c
 18366  018440                     u7020:
 18367  018440  2EE8               	decfsz	wreg,f,c
 18368  018442  D7F9               	goto	u7025
 18369                           
 18370                           ;stkvar	_exp1 @ sp[(-2)+0]
 18371  018444  0EFE               	movlw	-2
 18372  018446  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 18373  01844C  0EFE               	movlw	-2
 18374  01844E  50E3               	movf	plusw1,w,c
 18375  018450  A4D8               	btfss	status,2,c
 18376  018452  D006               	goto	l8449
 18377  018454                     u7030:
 18378  018454  0E00               	movlw	0
 18379  018456  6E26               	movwf	btemp^0,c
 18380  018458  6A27               	clrf	(btemp+1)^0,c
 18381  01845A  6A28               	clrf	(btemp+2)^0,c
 18382  01845C  6A29               	clrf	(btemp+3)^0,c
 18383  01845E  D08B               	goto	l2677
 18384  018460                     l8449:
 18385                           
 18386                           ;stkvar	_f1 @ sp[(-2)+-4]
 18387  018460  0EFA               	movlw	-6
 18388  018462  006F FF8C  F02E    	movff	plusw1,btemp+8
 18389  018468  0EFB               	movlw	-5
 18390  01846A  006F FF8C  F02F    	movff	plusw1,btemp+9
 18391  018470  0EFC               	movlw	-4
 18392  018472  006F FF8C  F030    	movff	plusw1,btemp+10
 18393  018478  0EFD               	movlw	-3
 18394  01847A  006F FF8C  F031    	movff	plusw1,btemp+11
 18395  018480  0E20               	movlw	32
 18396  018482  D005               	goto	u7040
 18397  018484                     u7045:
 18398  018484  90D8               	bcf	status,0,c
 18399  018486  3231               	rrcf	(btemp+11)^0,f,c
 18400  018488  3230               	rrcf	(btemp+10)^0,f,c
 18401  01848A  322F               	rrcf	(btemp+9)^0,f,c
 18402  01848C  322E               	rrcf	(btemp+8)^0,f,c
 18403  01848E                     u7040:
 18404  01848E  2EE8               	decfsz	wreg,f,c
 18405  018490  D7F9               	goto	u7045
 18406                           
 18407                           ;stkvar	_sign1 @ sp[(-2)+1]
 18408  018492  0EFF               	movlw	-1
 18409  018494  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 18410                           
 18411                           ;stkvar	_f1 @ sp[(-2)+-4]
 18412  01849A  0EFC               	movlw	-4
 18413  01849C  8EE3               	bsf	plusw1,7,c
 18414                           
 18415                           ;stkvar	_f1 @ sp[(-2)+-4]
 18416  01849E  50E1               	movf	fsr1l,w,c
 18417  0184A0  0FFA               	addlw	-6
 18418  0184A2  6ED9               	movwf	fsr2l,c
 18419  0184A4  50E2               	movf	fsr1h,w,c
 18420  0184A6  6EDA               	movwf	fsr2h,c
 18421  0184A8  0EFF               	movlw	255
 18422  0184AA  22DA               	addwfc	fsr2h,f,c
 18423  0184AC  0EFF               	movlw	255
 18424  0184AE  16DE               	andwf	postinc2,f,c
 18425  0184B0  0EFF               	movlw	255
 18426  0184B2  16DE               	andwf	postinc2,f,c
 18427  0184B4  0EFF               	movlw	255
 18428  0184B6  16DE               	andwf	postinc2,f,c
 18429  0184B8  0E00               	movlw	0
 18430  0184BA  16DE               	andwf	postinc2,f,c
 18431                           
 18432                           ;stkvar	_exp1 @ sp[(-2)+0]
 18433  0184BC  0EFE               	movlw	-2
 18434  0184BE  006F FF8C  F026    	movff	plusw1,btemp
 18435  0184C4  0E96               	movlw	150
 18436  0184C6  5E26               	subwf	btemp^0,f,c
 18437  0184C8  0EFE               	movlw	-2
 18438  0184CA  0060  F09B  FFE3   	movff	btemp,plusw1
 18439                           
 18440                           ;stkvar	_exp1 @ sp[(-2)+0]
 18441  0184D0  0EFE               	movlw	-2
 18442  0184D2  AEE3               	btfss	plusw1,7,c
 18443  0184D4  D014               	goto	l8467
 18444                           
 18445                           ;stkvar	_exp1 @ sp[(-2)+0]
 18446  0184D6  0EFE               	movlw	-2
 18447  0184D8  50E3               	movf	plusw1,w,c
 18448  0184DA  0A80               	xorlw	128
 18449  0184DC  0F97               	addlw	151
 18450  0184DE  A0D8               	btfss	status,0,c
 18451  0184E0  D7B9               	goto	u7030
 18452  0184E2                     l8465:
 18453                           
 18454                           ;stkvar	_f1 @ sp[(-2)+-4]
 18455  0184E2  90D8               	bcf	status,0,c
 18456  0184E4  0EFD               	movlw	-3
 18457  0184E6  32E3               	rrcf	plusw1,f,c
 18458  0184E8  0EFC               	movlw	-4
 18459  0184EA  32E3               	rrcf	plusw1,f,c
 18460  0184EC  0EFB               	movlw	-5
 18461  0184EE  32E3               	rrcf	plusw1,f,c
 18462  0184F0  0EFA               	movlw	-6
 18463  0184F2  32E3               	rrcf	plusw1,f,c
 18464                           
 18465                           ;stkvar	_exp1 @ sp[(-2)+0]
 18466  0184F4  0EFE               	movlw	-2
 18467  0184F6  2AE3               	incf	plusw1,f,c
 18468  0184F8  B4D8               	btfsc	status,2,c
 18469  0184FA  D018               	goto	u7090
 18470  0184FC  D7F2               	goto	l8465
 18471  0184FE                     l8467:
 18472                           
 18473                           ;stkvar	_exp1 @ sp[(-2)+0]
 18474  0184FE  0EFE               	movlw	-2
 18475  018500  006F FF8C  F026    	movff	plusw1,btemp
 18476  018506  0E1F               	movlw	31
 18477  018508  6426               	cpfsgt	btemp^0,c
 18478  01850A  D00C               	goto	l8475
 18479  01850C  D7A3               	goto	u7030
 18480  01850E                     l8473:
 18481                           
 18482                           ;stkvar	_f1 @ sp[(-2)+-4]
 18483  01850E  90D8               	bcf	status,0,c
 18484  018510  0EFA               	movlw	-6
 18485  018512  36E3               	rlcf	plusw1,f,c
 18486  018514  0EFB               	movlw	-5
 18487  018516  36E3               	rlcf	plusw1,f,c
 18488  018518  0EFC               	movlw	-4
 18489  01851A  36E3               	rlcf	plusw1,f,c
 18490  01851C  0EFD               	movlw	-3
 18491  01851E  36E3               	rlcf	plusw1,f,c
 18492                           
 18493                           ;stkvar	_exp1 @ sp[(-2)+0]
 18494  018520  0EFE               	movlw	-2
 18495  018522  06E3               	decf	plusw1,f,c
 18496  018524                     l8475:
 18497                           
 18498                           ;stkvar	_exp1 @ sp[(-2)+0]
 18499  018524  0EFE               	movlw	-2
 18500  018526  50E3               	movf	plusw1,w,c
 18501  018528  A4D8               	btfss	status,2,c
 18502  01852A  D7F1               	goto	l8473
 18503  01852C                     u7090:
 18504                           
 18505                           ;stkvar	_sign1 @ sp[(-2)+1]
 18506  01852C  0EFF               	movlw	-1
 18507  01852E  50E3               	movf	plusw1,w,c
 18508  018530  B4D8               	btfsc	status,2,c
 18509  018532  D011               	goto	u7110
 18510                           
 18511                           ;stkvar	_f1 @ sp[(-2)+-4]
 18512                           ;stkvar	_f1 @ sp[(-2)+-4]
 18513  018534  0EFA               	movlw	-6
 18514  018536  6CE3               	negf	plusw1,c
 18515  018538  0EFB               	movlw	-5
 18516  01853A  1EE3               	comf	plusw1,f,c
 18517  01853C  0EFC               	movlw	-4
 18518  01853E  1EE3               	comf	plusw1,f,c
 18519  018540  0EFD               	movlw	-3
 18520  018542  1EE3               	comf	plusw1,f,c
 18521  018544  E308               	bnc	u7110
 18522  018546  0EFB               	movlw	-5
 18523  018548  2AE3               	incf	plusw1,f,c
 18524  01854A  E305               	bnc	u7110
 18525  01854C  0EFC               	movlw	-4
 18526  01854E  2AE3               	incf	plusw1,f,c
 18527  018550  E302               	bnc	u7110
 18528  018552  0EFD               	movlw	-3
 18529  018554  2AE3               	incf	plusw1,f,c
 18530  018556                     u7110:
 18531                           
 18532                           ;stkvar	_f1 @ sp[(-2)+-4]
 18533  018556  0EFA               	movlw	-6
 18534  018558  006F FF8C  F026    	movff	plusw1,btemp
 18535  01855E  0EFB               	movlw	-5
 18536  018560  006F FF8C  F027    	movff	plusw1,btemp+1
 18537  018566  0EFC               	movlw	-4
 18538  018568  006F FF8C  F028    	movff	plusw1,btemp+2
 18539  01856E  0EFD               	movlw	-3
 18540  018570  006F FF8C  F029    	movff	plusw1,btemp+3
 18541  018576                     l2677:
 18542                           
 18543                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18544  018576  0EFA               	movlw	250
 18545  018578  26E1               	addwf	fsr1l,f,c
 18546  01857A  0EFF               	movlw	255
 18547  01857C  22E2               	addwfc	fsr1h,f,c
 18548  01857E  0012               	return		;funcret
 18549  018580                     __end_of___fltol:
 18550                           	opt callstack 0
 18551                           
 18552 ;; *************** function ___flneg *****************
 18553 ;; Defined at:
 18554 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 18555 ;; Parameters:    Size  Location     Type
 18556 ;;  f1              4  [STACK] long 
 18557 ;; Auto vars:     Size  Location     Type
 18558 ;;		None
 18559 ;; Return value:  Size  Location     Type
 18560 ;;                  4  [STACK] long 
 18561 ;; Registers used:
 18562 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18563 ;; Tracked objects:
 18564 ;;		On entry : 0/0
 18565 ;;		On exit  : 0/0
 18566 ;;		Unchanged: 0/0
 18567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18572 ;;Total ram usage:        0 bytes
 18573 ;; Hardware stack levels used:    1
 18574 ;; Hardware stack levels required when called:   15
 18575 ;; This function calls:
 18576 ;;		Nothing
 18577 ;; This function is called by:
 18578 ;;		_calc_bsoc
 18579 ;;		_efgtoa
 18580 ;; This function uses a reentrant model
 18581 ;;
 18582                           
 18583                           	psect	text62
 18584  01AB4C                     __ptext62:
 18585                           	opt callstack 0
 18586  01AB4C                     ___flneg:
 18587                           	opt callstack 0
 18588                           
 18589                           ;stkvar	_f1 @ sp[(0)+-4]
 18590                           
 18591                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18592                           ;incstack = 0
 18593 ;; hardware stack exceeded
 18594  01AB4C  0EFC               	movlw	-4
 18595  01AB4E  50E3               	movf	plusw1,w,c
 18596  01AB50  E10A               	bnz	u7010
 18597  01AB52  0EFD               	movlw	-3
 18598  01AB54  50E3               	movf	plusw1,w,c
 18599  01AB56  E107               	bnz	u7010
 18600  01AB58  0EFE               	movlw	-2
 18601  01AB5A  50E3               	movf	plusw1,w,c
 18602  01AB5C  E104               	bnz	u7010
 18603  01AB5E  0EFF               	movlw	-1
 18604  01AB60  50E3               	movf	plusw1,w,c
 18605  01AB62  B4D8               	btfsc	status,2,c
 18606  01AB64  D002               	goto	l8439
 18607  01AB66                     u7010:
 18608                           
 18609                           ;stkvar	_f1 @ sp[(0)+-4]
 18610  01AB66  0EFF               	movlw	-1
 18611  01AB68  7EE3               	btg	plusw1,7,c
 18612  01AB6A                     l8439:
 18613                           
 18614                           ;stkvar	_f1 @ sp[(0)+-4]
 18615  01AB6A  0EFC               	movlw	-4
 18616  01AB6C  006F FF8C  F026    	movff	plusw1,btemp
 18617  01AB72  0EFD               	movlw	-3
 18618  01AB74  006F FF8C  F027    	movff	plusw1,btemp+1
 18619  01AB7A  0EFE               	movlw	-2
 18620  01AB7C  006F FF8C  F028    	movff	plusw1,btemp+2
 18621  01AB82  0EFF               	movlw	-1
 18622  01AB84  006F FF8C  F029    	movff	plusw1,btemp+3
 18623                           
 18624                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18625  01AB8A  52E5               	movf	postdec1,f,c
 18626  01AB8C  52E5               	movf	postdec1,f,c
 18627  01AB8E  52E5               	movf	postdec1,f,c
 18628  01AB90  52E5               	movf	postdec1,f,c
 18629  01AB92  0012               	return		;funcret
 18630  01AB94                     __end_of___flneg:
 18631                           	opt callstack 0
 18632                           
 18633 ;; *************** function ___fleq *****************
 18634 ;; Defined at:
 18635 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 18636 ;; Parameters:    Size  Location     Type
 18637 ;;  ff1             4  [STACK] long 
 18638 ;;  ff2             4  [STACK] long 
 18639 ;; Auto vars:     Size  Location     Type
 18640 ;;		None
 18641 ;; Return value:  Size  Location     Type
 18642 ;;		None               void
 18643 ;; Registers used:
 18644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18645 ;; Tracked objects:
 18646 ;;		On entry : 0/0
 18647 ;;		On exit  : 0/0
 18648 ;;		Unchanged: 0/0
 18649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18654 ;;Total ram usage:        0 bytes
 18655 ;; Hardware stack levels used:    1
 18656 ;; Hardware stack levels required when called:   15
 18657 ;; This function calls:
 18658 ;;		Nothing
 18659 ;; This function is called by:
 18660 ;;		_efgtoa
 18661 ;; This function uses a reentrant model
 18662 ;;
 18663                           
 18664                           	psect	text63
 18665  019B68                     __ptext63:
 18666                           	opt callstack 0
 18667  019B68                     ___fleq:
 18668                           	opt callstack 0
 18669                           
 18670                           ;stkvar	_ff1 @ sp[(0)+-4]
 18671                           
 18672                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18673                           ;incstack = 0
 18674 ;; hardware stack exceeded
 18675  019B68  50E1               	movf	fsr1l,w,c
 18676  019B6A  0FFC               	addlw	-4
 18677  019B6C  6ED9               	movwf	fsr2l,c
 18678  019B6E  50E2               	movf	fsr1h,w,c
 18679  019B70  6EDA               	movwf	fsr2h,c
 18680  019B72  0EFF               	movlw	255
 18681  019B74  22DA               	addwfc	fsr2h,f,c
 18682  019B76  0E00               	movlw	0
 18683  019B78  14DE               	andwf	postinc2,w,c
 18684  019B7A  6E2E               	movwf	(btemp+8)^0,c
 18685  019B7C  0E00               	movlw	0
 18686  019B7E  14DE               	andwf	postinc2,w,c
 18687  019B80  6E2F               	movwf	(btemp+9)^0,c
 18688  019B82  0E80               	movlw	128
 18689  019B84  14DE               	andwf	postinc2,w,c
 18690  019B86  6E30               	movwf	(btemp+10)^0,c
 18691  019B88  0E7F               	movlw	127
 18692  019B8A  14DE               	andwf	postinc2,w,c
 18693  019B8C  6E31               	movwf	(btemp+11)^0,c
 18694  019B8E  502E               	movf	(btemp+8)^0,w,c
 18695  019B90  102F               	iorwf	(btemp+9)^0,w,c
 18696  019B92  1030               	iorwf	(btemp+10)^0,w,c
 18697  019B94  1031               	iorwf	(btemp+11)^0,w,c
 18698  019B96  A4D8               	btfss	status,2,c
 18699  019B98  D008               	goto	l8397
 18700                           
 18701                           ;stkvar	_ff1 @ sp[(0)+-4]
 18702  019B9A  0EFC               	movlw	-4
 18703  019B9C  6AE3               	clrf	plusw1,c
 18704  019B9E  0EFD               	movlw	-3
 18705  019BA0  6AE3               	clrf	plusw1,c
 18706  019BA2  0EFE               	movlw	-2
 18707  019BA4  6AE3               	clrf	plusw1,c
 18708  019BA6  0EFF               	movlw	-1
 18709  019BA8  6AE3               	clrf	plusw1,c
 18710  019BAA                     l8397:
 18711                           
 18712                           ;stkvar	_ff2 @ sp[(0)+-8]
 18713  019BAA  50E1               	movf	fsr1l,w,c
 18714  019BAC  0FF8               	addlw	-8
 18715  019BAE  6ED9               	movwf	fsr2l,c
 18716  019BB0  50E2               	movf	fsr1h,w,c
 18717  019BB2  6EDA               	movwf	fsr2h,c
 18718  019BB4  0EFF               	movlw	255
 18719  019BB6  22DA               	addwfc	fsr2h,f,c
 18720  019BB8  0E00               	movlw	0
 18721  019BBA  14DE               	andwf	postinc2,w,c
 18722  019BBC  6E2E               	movwf	(btemp+8)^0,c
 18723  019BBE  0E00               	movlw	0
 18724  019BC0  14DE               	andwf	postinc2,w,c
 18725  019BC2  6E2F               	movwf	(btemp+9)^0,c
 18726  019BC4  0E80               	movlw	128
 18727  019BC6  14DE               	andwf	postinc2,w,c
 18728  019BC8  6E30               	movwf	(btemp+10)^0,c
 18729  019BCA  0E7F               	movlw	127
 18730  019BCC  14DE               	andwf	postinc2,w,c
 18731  019BCE  6E31               	movwf	(btemp+11)^0,c
 18732  019BD0  502E               	movf	(btemp+8)^0,w,c
 18733  019BD2  102F               	iorwf	(btemp+9)^0,w,c
 18734  019BD4  1030               	iorwf	(btemp+10)^0,w,c
 18735  019BD6  1031               	iorwf	(btemp+11)^0,w,c
 18736  019BD8  A4D8               	btfss	status,2,c
 18737  019BDA  D008               	goto	l8401
 18738                           
 18739                           ;stkvar	_ff2 @ sp[(0)+-8]
 18740  019BDC  0EF8               	movlw	-8
 18741  019BDE  6AE3               	clrf	plusw1,c
 18742  019BE0  0EF9               	movlw	-7
 18743  019BE2  6AE3               	clrf	plusw1,c
 18744  019BE4  0EFA               	movlw	-6
 18745  019BE6  6AE3               	clrf	plusw1,c
 18746  019BE8  0EFB               	movlw	-5
 18747  019BEA  6AE3               	clrf	plusw1,c
 18748  019BEC                     l8401:
 18749                           
 18750                           ;stkvar	_ff2 @ sp[(0)+-8]
 18751                           ;stkvar	_ff1 @ sp[(0)+-4]
 18752  019BEC  50E1               	movf	fsr1l,w,c
 18753  019BEE  0FFC               	addlw	-4
 18754  019BF0  6ED9               	movwf	fsr2l,c
 18755  019BF2  50E2               	movf	fsr1h,w,c
 18756  019BF4  6EDA               	movwf	fsr2h,c
 18757  019BF6  0EFF               	movlw	255
 18758  019BF8  22DA               	addwfc	fsr2h,f,c
 18759  019BFA  0EF8               	movlw	-8
 18760  019BFC  50E3               	movf	plusw1,w,c
 18761  019BFE  18DE               	xorwf	postinc2,w,c
 18762  019C00  E10D               	bnz	u6950
 18763  019C02  0EF9               	movlw	-7
 18764  019C04  50E3               	movf	plusw1,w,c
 18765  019C06  18DE               	xorwf	postinc2,w,c
 18766  019C08  E109               	bnz	u6950
 18767  019C0A  0EFA               	movlw	-6
 18768  019C0C  50E3               	movf	plusw1,w,c
 18769  019C0E  18DE               	xorwf	postinc2,w,c
 18770  019C10  E105               	bnz	u6950
 18771  019C12  0EFB               	movlw	-5
 18772  019C14  50E3               	movf	plusw1,w,c
 18773  019C16  18DE               	xorwf	postinc2,w,c
 18774  019C18  B4D8               	btfsc	status,2,c
 18775  019C1A  D002               	goto	l8405
 18776  019C1C                     u6950:
 18777  019C1C  9026               	bcf	btemp& (0+255),0,c
 18778  019C1E  D001               	goto	l2639
 18779  019C20                     l8405:
 18780  019C20  8026               	bsf	btemp& (0+255),0,c
 18781  019C22                     l2639:
 18782                           
 18783                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 18784  019C22  0EF8               	movlw	248
 18785  019C24  26E1               	addwf	fsr1l,f,c
 18786  019C26  0EFF               	movlw	255
 18787  019C28  22E2               	addwfc	fsr1h,f,c
 18788  019C2A  0012               	return		;funcret
 18789  019C2C                     __end_of___fleq:
 18790                           	opt callstack 0
 18791                           
 18792 ;; *************** function ___awmod *****************
 18793 ;; Defined at:
 18794 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 18795 ;; Parameters:    Size  Location     Type
 18796 ;;  dividend        2  [STACK] int 
 18797 ;;  divisor         2  [STACK] int 
 18798 ;; Auto vars:     Size  Location     Type
 18799 ;;  sign            1  [STACK] unsigned char 
 18800 ;;  counter         1  [STACK] unsigned char 
 18801 ;; Return value:  Size  Location     Type
 18802 ;;                  2  [STACK] int 
 18803 ;; Registers used:
 18804 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18805 ;; Tracked objects:
 18806 ;;		On entry : 0/0
 18807 ;;		On exit  : 0/0
 18808 ;;		Unchanged: 0/0
 18809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18814 ;;Total ram usage:        0 bytes
 18815 ;; Hardware stack levels used:    1
 18816 ;; Hardware stack levels required when called:   15
 18817 ;; This function calls:
 18818 ;;		Nothing
 18819 ;; This function is called by:
 18820 ;;		_efgtoa
 18821 ;; This function uses a reentrant model
 18822 ;;
 18823                           
 18824                           	psect	text64
 18825  018FD2                     __ptext64:
 18826                           	opt callstack 0
 18827  018FD2                     ___awmod:
 18828                           	opt callstack 0
 18829                           
 18830                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18831  018FD2  52E6               	movf	postinc1,f,c
 18832  018FD4  52E6               	movf	postinc1,f,c
 18833                           
 18834                           ;stkvar	_sign @ sp[(-2)+0]
 18835                           
 18836                           ;incstack = 0
 18837 ;; hardware stack exceeded
 18838  018FD6  0EFE               	movlw	-2
 18839  018FD8  6AE3               	clrf	plusw1,c
 18840                           
 18841                           ;stkvar	_dividend @ sp[(-2)+-2]
 18842  018FDA  0EFD               	movlw	-3
 18843  018FDC  AEE3               	btfss	plusw1,7,c
 18844  018FDE  D009               	goto	l8363
 18845                           
 18846                           ;stkvar	_dividend @ sp[(-2)+-2]
 18847                           ;stkvar	_dividend @ sp[(-2)+-2]
 18848  018FE0  0EFC               	movlw	-4
 18849  018FE2  6CE3               	negf	plusw1,c
 18850  018FE4  0EFD               	movlw	-3
 18851  018FE6  1EE3               	comf	plusw1,f,c
 18852  018FE8  B0D8               	btfsc	status,0,c
 18853  018FEA  2AE3               	incf	plusw1,f,c
 18854                           
 18855                           ;stkvar	_sign @ sp[(-2)+0]
 18856  018FEC  0EFE               	movlw	-2
 18857  018FEE  6AE3               	clrf	plusw1,c
 18858  018FF0  2AE3               	incf	plusw1,f,c
 18859  018FF2                     l8363:
 18860                           
 18861                           ;stkvar	_divisor @ sp[(-2)+-4]
 18862  018FF2  0EFB               	movlw	-5
 18863  018FF4  AEE3               	btfss	plusw1,7,c
 18864  018FF6  D006               	goto	l8367
 18865                           
 18866                           ;stkvar	_divisor @ sp[(-2)+-4]
 18867                           ;stkvar	_divisor @ sp[(-2)+-4]
 18868  018FF8  0EFA               	movlw	-6
 18869  018FFA  6CE3               	negf	plusw1,c
 18870  018FFC  0EFB               	movlw	-5
 18871  018FFE  1EE3               	comf	plusw1,f,c
 18872  019000  B0D8               	btfsc	status,0,c
 18873  019002  2AE3               	incf	plusw1,f,c
 18874  019004                     l8367:
 18875                           
 18876                           ;stkvar	_divisor @ sp[(-2)+-4]
 18877  019004  0EFA               	movlw	-6
 18878  019006  006F FF8C  F026    	movff	plusw1,btemp
 18879  01900C  0EFB               	movlw	-5
 18880  01900E  50E3               	movf	plusw1,w,c
 18881  019010  1026               	iorwf	btemp^0,w,c
 18882  019012  B4D8               	btfsc	status,2,c
 18883  019014  D053               	goto	u6910
 18884                           
 18885                           ;stkvar	_counter @ sp[(-2)+1]
 18886  019016  0EFF               	movlw	-1
 18887  019018  6AE3               	clrf	plusw1,c
 18888  01901A  D012               	goto	L20
 18889  01901C                     l8371:
 18890                           
 18891                           ;stkvar	_divisor @ sp[(-2)+-4]
 18892  01901C  0EFA               	movlw	-6
 18893  01901E  50E3               	movf	plusw1,w,c
 18894  019020  90D8               	bcf	status,0,c
 18895  019022  34E8               	rlcf	wreg,w,c
 18896  019024  6E26               	movwf	btemp^0,c
 18897  019026  0EFA               	movlw	-6
 18898  019028  0060  F09B  FFE3   	movff	btemp,plusw1
 18899  01902E  0EFB               	movlw	-5
 18900  019030  50E3               	movf	plusw1,w,c
 18901  019032  34E8               	rlcf	wreg,w,c
 18902  019034  6E26               	movwf	btemp^0,c
 18903  019036  0EFB               	movlw	-5
 18904  019038  0060  F09B  FFE3   	movff	btemp,plusw1
 18905                           
 18906                           ;stkvar	_counter @ sp[(-2)+1]
 18907  01903E  0EFF               	movlw	-1
 18908  019040                     L20:
 18909  019040  2AE3               	incf	plusw1,f,c
 18910                           
 18911                           ;stkvar	_divisor @ sp[(-2)+-4]
 18912  019042  0EFB               	movlw	-5
 18913  019044  AEE3               	btfss	plusw1,7,c
 18914  019046  D7EA               	goto	l8371
 18915  019048                     u6890:
 18916                           
 18917                           ;stkvar	_divisor @ sp[(-2)+-4]
 18918  019048  0EFA               	movlw	-6
 18919  01904A  006F FF8C  F030    	movff	plusw1,btemp+10
 18920  019050  0EFB               	movlw	-5
 18921  019052  006F FF8C  F031    	movff	plusw1,btemp+11
 18922                           
 18923                           ;stkvar	_dividend @ sp[(-2)+-2]
 18924  019058  0EFC               	movlw	-4
 18925  01905A  006F FF8C  F02E    	movff	plusw1,btemp+8
 18926  019060  0EFD               	movlw	-3
 18927  019062  006F FF8C  F02F    	movff	plusw1,btemp+9
 18928  019068  5030               	movf	(btemp+10)^0,w,c
 18929  01906A  5C2E               	subwf	(btemp+8)^0,w,c
 18930  01906C  5031               	movf	(btemp+11)^0,w,c
 18931  01906E  582F               	subwfb	(btemp+9)^0,w,c
 18932  019070  A0D8               	btfss	status,0,c
 18933  019072  D014               	goto	l8381
 18934                           
 18935                           ;stkvar	_divisor @ sp[(-2)+-4]
 18936                           ;stkvar	_dividend @ sp[(-2)+-2]
 18937  019074  0EFC               	movlw	-4
 18938  019076  50E3               	movf	plusw1,w,c
 18939  019078  6E26               	movwf	btemp^0,c
 18940  01907A  0EFA               	movlw	-6
 18941  01907C  50E3               	movf	plusw1,w,c
 18942  01907E  5E26               	subwf	btemp^0,f,c
 18943  019080  0EFC               	movlw	-4
 18944  019082  0060  F09B  FFE3   	movff	btemp,plusw1
 18945  019088  0EFD               	movlw	-3
 18946  01908A  50E3               	movf	plusw1,w,c
 18947  01908C  6E26               	movwf	btemp^0,c
 18948  01908E  0EFB               	movlw	-5
 18949  019090  50E3               	movf	plusw1,w,c
 18950  019092  5A26               	subwfb	btemp^0,f,c
 18951  019094  0EFD               	movlw	-3
 18952  019096  0060  F09B  FFE3   	movff	btemp,plusw1
 18953  01909C                     l8381:
 18954                           
 18955                           ;stkvar	_divisor @ sp[(-2)+-4]
 18956  01909C  90D8               	bcf	status,0,c
 18957  01909E  0EFB               	movlw	-5
 18958  0190A0  32E3               	rrcf	plusw1,f,c
 18959  0190A2  0EFA               	movlw	-6
 18960  0190A4  32E3               	rrcf	plusw1,f,c
 18961                           
 18962                           ;stkvar	_counter @ sp[(-2)+1]
 18963  0190A6  0EFF               	movlw	-1
 18964  0190A8  50E3               	movf	plusw1,w,c
 18965  0190AA  6E26               	movwf	btemp^0,c
 18966  0190AC  0E01               	movlw	1
 18967  0190AE  5E26               	subwf	btemp^0,f,c
 18968  0190B0  0EFF               	movlw	-1
 18969  0190B2  0060  F09B  FFE3   	movff	btemp,plusw1
 18970  0190B8  A4D8               	btfss	status,2,c
 18971  0190BA  D7C6               	goto	u6890
 18972  0190BC                     u6910:
 18973                           
 18974                           ;stkvar	_sign @ sp[(-2)+0]
 18975  0190BC  0EFE               	movlw	-2
 18976  0190BE  50E3               	movf	plusw1,w,c
 18977  0190C0  B4D8               	btfsc	status,2,c
 18978  0190C2  D006               	goto	l8389
 18979                           
 18980                           ;stkvar	_dividend @ sp[(-2)+-2]
 18981                           ;stkvar	_dividend @ sp[(-2)+-2]
 18982  0190C4  0EFC               	movlw	-4
 18983  0190C6  6CE3               	negf	plusw1,c
 18984  0190C8  0EFD               	movlw	-3
 18985  0190CA  1EE3               	comf	plusw1,f,c
 18986  0190CC  B0D8               	btfsc	status,0,c
 18987  0190CE  2AE3               	incf	plusw1,f,c
 18988  0190D0                     l8389:
 18989                           
 18990                           ;stkvar	_dividend @ sp[(-2)+-2]
 18991  0190D0  0EFC               	movlw	-4
 18992  0190D2  006F FF8C  F026    	movff	plusw1,btemp
 18993  0190D8  0EFD               	movlw	-3
 18994  0190DA  006F FF8C  F027    	movff	plusw1,btemp+1
 18995                           
 18996                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18997  0190E0  0EFA               	movlw	250
 18998  0190E2  26E1               	addwf	fsr1l,f,c
 18999  0190E4  0EFF               	movlw	255
 19000  0190E6  22E2               	addwfc	fsr1h,f,c
 19001  0190E8  0012               	return		;funcret
 19002  0190EA                     __end_of___awmod:
 19003                           	opt callstack 0
 19004                           
 19005 ;; *************** function ___awdiv *****************
 19006 ;; Defined at:
 19007 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 19008 ;; Parameters:    Size  Location     Type
 19009 ;;  dividend        2  [STACK] int 
 19010 ;;  divisor         2  [STACK] int 
 19011 ;; Auto vars:     Size  Location     Type
 19012 ;;  quotient        2  [STACK] int 
 19013 ;;  sign            1  [STACK] unsigned char 
 19014 ;;  counter         1  [STACK] unsigned char 
 19015 ;; Return value:  Size  Location     Type
 19016 ;;                  2  [STACK] int 
 19017 ;; Registers used:
 19018 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19019 ;; Tracked objects:
 19020 ;;		On entry : 0/0
 19021 ;;		On exit  : 0/0
 19022 ;;		Unchanged: 0/0
 19023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19028 ;;Total ram usage:        0 bytes
 19029 ;; Hardware stack levels used:    1
 19030 ;; Hardware stack levels required when called:   15
 19031 ;; This function calls:
 19032 ;;		Nothing
 19033 ;; This function is called by:
 19034 ;;		_efgtoa
 19035 ;; This function uses a reentrant model
 19036 ;;
 19037                           
 19038                           	psect	text65
 19039  0189B2                     __ptext65:
 19040                           	opt callstack 0
 19041  0189B2                     ___awdiv:
 19042                           	opt callstack 0
 19043                           
 19044                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19045  0189B2  52E6               	movf	postinc1,f,c
 19046  0189B4  52E6               	movf	postinc1,f,c
 19047  0189B6  52E6               	movf	postinc1,f,c
 19048  0189B8  52E6               	movf	postinc1,f,c
 19049                           
 19050                           ;stkvar	_sign @ sp[(-4)+2]
 19051                           
 19052                           ;incstack = 0
 19053 ;; hardware stack exceeded
 19054  0189BA  0EFE               	movlw	-2
 19055  0189BC  6AE3               	clrf	plusw1,c
 19056                           
 19057                           ;stkvar	_divisor @ sp[(-4)+-4]
 19058  0189BE  0EF9               	movlw	-7
 19059  0189C0  AEE3               	btfss	plusw1,7,c
 19060  0189C2  D009               	goto	l8317
 19061                           
 19062                           ;stkvar	_divisor @ sp[(-4)+-4]
 19063                           ;stkvar	_divisor @ sp[(-4)+-4]
 19064  0189C4  0EF8               	movlw	-8
 19065  0189C6  6CE3               	negf	plusw1,c
 19066  0189C8  0EF9               	movlw	-7
 19067  0189CA  1EE3               	comf	plusw1,f,c
 19068  0189CC  B0D8               	btfsc	status,0,c
 19069  0189CE  2AE3               	incf	plusw1,f,c
 19070                           
 19071                           ;stkvar	_sign @ sp[(-4)+2]
 19072  0189D0  0EFE               	movlw	-2
 19073  0189D2  6AE3               	clrf	plusw1,c
 19074  0189D4  2AE3               	incf	plusw1,f,c
 19075  0189D6                     l8317:
 19076                           
 19077                           ;stkvar	_dividend @ sp[(-4)+-2]
 19078  0189D6  0EFB               	movlw	-5
 19079  0189D8  AEE3               	btfss	plusw1,7,c
 19080  0189DA  D008               	goto	l8323
 19081                           
 19082                           ;stkvar	_dividend @ sp[(-4)+-2]
 19083                           ;stkvar	_dividend @ sp[(-4)+-2]
 19084  0189DC  0EFA               	movlw	-6
 19085  0189DE  6CE3               	negf	plusw1,c
 19086  0189E0  0EFB               	movlw	-5
 19087  0189E2  1EE3               	comf	plusw1,f,c
 19088  0189E4  B0D8               	btfsc	status,0,c
 19089  0189E6  2AE3               	incf	plusw1,f,c
 19090                           
 19091                           ;stkvar	_sign @ sp[(-4)+2]
 19092  0189E8  0EFE               	movlw	-2
 19093  0189EA  70E3               	btg	plusw1,0,c
 19094  0189EC                     l8323:
 19095                           
 19096                           ;stkvar	_quotient @ sp[(-4)+0]
 19097  0189EC  0EFC               	movlw	-4
 19098  0189EE  6AE3               	clrf	plusw1,c
 19099  0189F0  0EFD               	movlw	-3
 19100  0189F2  6AE3               	clrf	plusw1,c
 19101                           
 19102                           ;stkvar	_divisor @ sp[(-4)+-4]
 19103  0189F4  0EF8               	movlw	-8
 19104  0189F6  006F FF8C  F026    	movff	plusw1,btemp
 19105  0189FC  0EF9               	movlw	-7
 19106  0189FE  50E3               	movf	plusw1,w,c
 19107  018A00  1026               	iorwf	btemp^0,w,c
 19108  018A02  B4D8               	btfsc	status,2,c
 19109  018A04  D066               	goto	u6840
 19110                           
 19111                           ;stkvar	_counter @ sp[(-4)+3]
 19112  018A06  0EFF               	movlw	-1
 19113  018A08  6AE3               	clrf	plusw1,c
 19114  018A0A  D012               	goto	L21
 19115  018A0C                     l8329:
 19116                           
 19117                           ;stkvar	_divisor @ sp[(-4)+-4]
 19118  018A0C  0EF8               	movlw	-8
 19119  018A0E  50E3               	movf	plusw1,w,c
 19120  018A10  90D8               	bcf	status,0,c
 19121  018A12  34E8               	rlcf	wreg,w,c
 19122  018A14  6E26               	movwf	btemp^0,c
 19123  018A16  0EF8               	movlw	-8
 19124  018A18  0060  F09B  FFE3   	movff	btemp,plusw1
 19125  018A1E  0EF9               	movlw	-7
 19126  018A20  50E3               	movf	plusw1,w,c
 19127  018A22  34E8               	rlcf	wreg,w,c
 19128  018A24  6E26               	movwf	btemp^0,c
 19129  018A26  0EF9               	movlw	-7
 19130  018A28  0060  F09B  FFE3   	movff	btemp,plusw1
 19131                           
 19132                           ;stkvar	_counter @ sp[(-4)+3]
 19133  018A2E  0EFF               	movlw	-1
 19134  018A30                     L21:
 19135  018A30  2AE3               	incf	plusw1,f,c
 19136                           
 19137                           ;stkvar	_divisor @ sp[(-4)+-4]
 19138  018A32  0EF9               	movlw	-7
 19139  018A34  AEE3               	btfss	plusw1,7,c
 19140  018A36  D7EA               	goto	l8329
 19141  018A38                     u6820:
 19142                           
 19143                           ;stkvar	_quotient @ sp[(-4)+0]
 19144  018A38  0EFC               	movlw	-4
 19145  018A3A  50E3               	movf	plusw1,w,c
 19146  018A3C  90D8               	bcf	status,0,c
 19147  018A3E  34E8               	rlcf	wreg,w,c
 19148  018A40  6E26               	movwf	btemp^0,c
 19149  018A42  0EFC               	movlw	-4
 19150  018A44  0060  F09B  FFE3   	movff	btemp,plusw1
 19151  018A4A  0EFD               	movlw	-3
 19152  018A4C  50E3               	movf	plusw1,w,c
 19153  018A4E  34E8               	rlcf	wreg,w,c
 19154  018A50  6E26               	movwf	btemp^0,c
 19155  018A52  0EFD               	movlw	-3
 19156  018A54  0060  F09B  FFE3   	movff	btemp,plusw1
 19157                           
 19158                           ;stkvar	_divisor @ sp[(-4)+-4]
 19159  018A5A  0EF8               	movlw	-8
 19160  018A5C  006F FF8C  F030    	movff	plusw1,btemp+10
 19161  018A62  0EF9               	movlw	-7
 19162  018A64  006F FF8C  F031    	movff	plusw1,btemp+11
 19163                           
 19164                           ;stkvar	_dividend @ sp[(-4)+-2]
 19165  018A6A  0EFA               	movlw	-6
 19166  018A6C  006F FF8C  F02E    	movff	plusw1,btemp+8
 19167  018A72  0EFB               	movlw	-5
 19168  018A74  006F FF8C  F02F    	movff	plusw1,btemp+9
 19169  018A7A  5030               	movf	(btemp+10)^0,w,c
 19170  018A7C  5C2E               	subwf	(btemp+8)^0,w,c
 19171  018A7E  5031               	movf	(btemp+11)^0,w,c
 19172  018A80  582F               	subwfb	(btemp+9)^0,w,c
 19173  018A82  A0D8               	btfss	status,0,c
 19174  018A84  D016               	goto	l8343
 19175                           
 19176                           ;stkvar	_divisor @ sp[(-4)+-4]
 19177                           ;stkvar	_dividend @ sp[(-4)+-2]
 19178  018A86  0EFA               	movlw	-6
 19179  018A88  50E3               	movf	plusw1,w,c
 19180  018A8A  6E26               	movwf	btemp^0,c
 19181  018A8C  0EF8               	movlw	-8
 19182  018A8E  50E3               	movf	plusw1,w,c
 19183  018A90  5E26               	subwf	btemp^0,f,c
 19184  018A92  0EFA               	movlw	-6
 19185  018A94  0060  F09B  FFE3   	movff	btemp,plusw1
 19186  018A9A  0EFB               	movlw	-5
 19187  018A9C  50E3               	movf	plusw1,w,c
 19188  018A9E  6E26               	movwf	btemp^0,c
 19189  018AA0  0EF9               	movlw	-7
 19190  018AA2  50E3               	movf	plusw1,w,c
 19191  018AA4  5A26               	subwfb	btemp^0,f,c
 19192  018AA6  0EFB               	movlw	-5
 19193  018AA8  0060  F09B  FFE3   	movff	btemp,plusw1
 19194                           
 19195                           ;stkvar	_quotient @ sp[(-4)+0]
 19196  018AAE  0EFC               	movlw	-4
 19197  018AB0  80E3               	bsf	plusw1,0,c
 19198  018AB2                     l8343:
 19199                           
 19200                           ;stkvar	_divisor @ sp[(-4)+-4]
 19201  018AB2  90D8               	bcf	status,0,c
 19202  018AB4  0EF9               	movlw	-7
 19203  018AB6  32E3               	rrcf	plusw1,f,c
 19204  018AB8  0EF8               	movlw	-8
 19205  018ABA  32E3               	rrcf	plusw1,f,c
 19206                           
 19207                           ;stkvar	_counter @ sp[(-4)+3]
 19208  018ABC  0EFF               	movlw	-1
 19209  018ABE  50E3               	movf	plusw1,w,c
 19210  018AC0  6E26               	movwf	btemp^0,c
 19211  018AC2  0E01               	movlw	1
 19212  018AC4  5E26               	subwf	btemp^0,f,c
 19213  018AC6  0EFF               	movlw	-1
 19214  018AC8  0060  F09B  FFE3   	movff	btemp,plusw1
 19215  018ACE  A4D8               	btfss	status,2,c
 19216  018AD0  D7B3               	goto	u6820
 19217  018AD2                     u6840:
 19218                           
 19219                           ;stkvar	_sign @ sp[(-4)+2]
 19220  018AD2  0EFE               	movlw	-2
 19221  018AD4  50E3               	movf	plusw1,w,c
 19222  018AD6  B4D8               	btfsc	status,2,c
 19223  018AD8  D006               	goto	l8351
 19224                           
 19225                           ;stkvar	_quotient @ sp[(-4)+0]
 19226                           ;stkvar	_quotient @ sp[(-4)+0]
 19227  018ADA  0EFC               	movlw	-4
 19228  018ADC  6CE3               	negf	plusw1,c
 19229  018ADE  0EFD               	movlw	-3
 19230  018AE0  1EE3               	comf	plusw1,f,c
 19231  018AE2  B0D8               	btfsc	status,0,c
 19232  018AE4  2AE3               	incf	plusw1,f,c
 19233  018AE6                     l8351:
 19234                           
 19235                           ;stkvar	_quotient @ sp[(-4)+0]
 19236  018AE6  0EFC               	movlw	-4
 19237  018AE8  006F FF8C  F026    	movff	plusw1,btemp
 19238  018AEE  0EFD               	movlw	-3
 19239  018AF0  006F FF8C  F027    	movff	plusw1,btemp+1
 19240                           
 19241                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19242  018AF6  0EF8               	movlw	248
 19243  018AF8  26E1               	addwf	fsr1l,f,c
 19244  018AFA  0EFF               	movlw	255
 19245  018AFC  22E2               	addwfc	fsr1h,f,c
 19246  018AFE  0012               	return		;funcret
 19247  018B00                     __end_of___awdiv:
 19248                           	opt callstack 0
 19249                           
 19250 ;; *************** function _dtoa *****************
 19251 ;; Defined at:
 19252 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19253 ;; Parameters:    Size  Location     Type
 19254 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19255 ;;		 -> f(6), NULL(0), 
 19256 ;;  d               8  [STACK] long long 
 19257 ;; Auto vars:     Size  Location     Type
 19258 ;;  n               8  [STACK] long long 
 19259 ;;  i               2  [STACK] int 
 19260 ;;  s               2  [STACK] int 
 19261 ;;  w               2  [STACK] int 
 19262 ;;  p               2  [STACK] int 
 19263 ;; Return value:  Size  Location     Type
 19264 ;;                  2  [STACK] int 
 19265 ;; Registers used:
 19266 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19267 ;; Tracked objects:
 19268 ;;		On entry : 0/0
 19269 ;;		On exit  : 0/0
 19270 ;;		Unchanged: 0/0
 19271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19276 ;;Total ram usage:        0 bytes
 19277 ;; Hardware stack levels used:    1
 19278 ;; Hardware stack levels required when called:   20
 19279 ;; This function calls:
 19280 ;;		___aodiv
 19281 ;;		___aomod
 19282 ;;		_abs
 19283 ;;		_pad
 19284 ;; This function is called by:
 19285 ;;		_vfpfcnvrt
 19286 ;; This function uses a reentrant model
 19287 ;;
 19288                           
 19289                           	psect	text66
 19290  01536C                     __ptext66:
 19291                           	opt callstack 0
 19292  01536C                     _dtoa:
 19293                           	opt callstack 0
 19294                           
 19295                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 19296  01536C  0E12               	movlw	18
 19297  01536E  26E1               	addwf	fsr1l,f,c
 19298  015370  0E00               	movlw	0
 19299  015372  22E2               	addwfc	fsr1h,f,c
 19300                           
 19301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 19302                           ;stkvar	_d @ sp[(-18)+-10]
 19303                           
 19304                           ;incstack = 0
 19305 ;; hardware stack exceeded
 19306  015374  0EE4               	movlw	228
 19307  015376  24E1               	addwf	fsr1l,w,c
 19308  015378  6ED9               	movwf	fsr2l,c
 19309  01537A  0EFF               	movlw	255
 19310  01537C  20E2               	addwfc	fsr1h,w,c
 19311  01537E  6EDA               	movwf	fsr2h,c
 19312                           
 19313                           ;stkvar	_n @ sp[(-18)+2]
 19314  015380  0E08               	movlw	8
 19315  015382  6E26               	movwf	btemp^0,c
 19316  015384  0EF0               	movlw	-16
 19317  015386                     us1058999:
 19318  015386  006F FF7B FFE3     	movff	postinc2,plusw1
 19319  01538C  28E8               	incf	wreg,w,c
 19320  01538E  2E26               	decfsz	btemp^0,f,c
 19321  015390  D7FA               	bra	us1058999
 19322                           
 19323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 19324                           ;stkvar	_n @ sp[(-18)+2]
 19325  015392  0EF7               	movlw	-9
 19326  015394  AEE3               	btfss	plusw1,7,c
 19327  015396  D002               	goto	u10590
 19328  015398  0E01               	movlw	1
 19329  01539A  D001               	goto	u10600
 19330  01539C                     u10590:
 19331  01539C  0E00               	movlw	0
 19332  01539E                     u10600:
 19333  01539E  6E30               	movwf	(btemp+10)^0,c
 19334  0153A0  6A31               	clrf	(btemp+11)^0,c
 19335                           
 19336                           ;stkvar	_s @ sp[(-18)+12]
 19337  0153A2  0EFA               	movlw	-6
 19338  0153A4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 19339  0153AA  0EFB               	movlw	-5
 19340  0153AC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 19341                           
 19342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 19343                           ;stkvar	_s @ sp[(-18)+12]
 19344  0153B2  0EFA               	movlw	-6
 19345  0153B4  006F FF8C  F026    	movff	plusw1,btemp
 19346  0153BA  0EFB               	movlw	-5
 19347  0153BC  50E3               	movf	plusw1,w,c
 19348  0153BE  1026               	iorwf	btemp^0,w,c
 19349  0153C0  B4D8               	btfsc	status,2,c
 19350  0153C2  D025               	goto	u10620
 19351                           
 19352                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 19353                           ;stkvar	_n @ sp[(-18)+2]
 19354                           ;stkvar	_n @ sp[(-18)+2]
 19355  0153C4  0EF0               	movlw	-16
 19356  0153C6  6CE3               	negf	plusw1,c
 19357  0153C8  0EF1               	movlw	-15
 19358  0153CA  1EE3               	comf	plusw1,f,c
 19359  0153CC  0EF2               	movlw	-14
 19360  0153CE  1EE3               	comf	plusw1,f,c
 19361  0153D0  0EF3               	movlw	-13
 19362  0153D2  1EE3               	comf	plusw1,f,c
 19363  0153D4  0EF4               	movlw	-12
 19364  0153D6  1EE3               	comf	plusw1,f,c
 19365  0153D8  0EF5               	movlw	-11
 19366  0153DA  1EE3               	comf	plusw1,f,c
 19367  0153DC  0EF6               	movlw	-10
 19368  0153DE  1EE3               	comf	plusw1,f,c
 19369  0153E0  0EF7               	movlw	-9
 19370  0153E2  1EE3               	comf	plusw1,f,c
 19371  0153E4  E314               	bnc	u10620
 19372  0153E6  0EF1               	movlw	-15
 19373  0153E8  2AE3               	incf	plusw1,f,c
 19374  0153EA  E311               	bnc	u10620
 19375  0153EC  0EF2               	movlw	-14
 19376  0153EE  2AE3               	incf	plusw1,f,c
 19377  0153F0  E30E               	bnc	u10620
 19378  0153F2  0EF3               	movlw	-13
 19379  0153F4  2AE3               	incf	plusw1,f,c
 19380  0153F6  E30B               	bnc	u10620
 19381  0153F8  0EF4               	movlw	-12
 19382  0153FA  2AE3               	incf	plusw1,f,c
 19383  0153FC  E308               	bnc	u10620
 19384  0153FE  0EF5               	movlw	-11
 19385  015400  2AE3               	incf	plusw1,f,c
 19386  015402  E305               	bnc	u10620
 19387  015404  0EF6               	movlw	-10
 19388  015406  2AE3               	incf	plusw1,f,c
 19389  015408  E302               	bnc	u10620
 19390  01540A  0EF7               	movlw	-9
 19391  01540C  2AE3               	incf	plusw1,f,c
 19392  01540E                     u10620:
 19393                           
 19394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 19395  01540E  AE0D               	btfss	(_prec+1)^0,7,c
 19396                           
 19397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 19398  015410  920E               	bcf	_flags^0,1,c
 19399                           
 19400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 19401  015412  BE0D               	btfsc	(_prec+1)^0,7,c
 19402  015414  D005               	goto	u10640
 19403  015416  500D               	movf	(_prec+1)^0,w,c
 19404  015418  E110               	bnz	l11587
 19405  01541A  040C               	decf	_prec^0,w,c
 19406  01541C  B0D8               	btfsc	status,0,c
 19407  01541E  D00D               	goto	l11587
 19408  015420                     u10640:
 19409  015420  0E01               	movlw	1
 19410  015422  6E30               	movwf	(btemp+10)^0,c
 19411  015424  0E00               	movlw	0
 19412  015426  6E31               	movwf	(btemp+11)^0,c
 19413                           
 19414                           ;stkvar	_p @ sp[(-18)+16]
 19415  015428  0EFE               	movlw	-2
 19416  01542A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 19417  015430  0EFF               	movlw	-1
 19418  015432  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 19419  015438  D008               	goto	l2143
 19420  01543A                     l11587:
 19421                           
 19422                           ;stkvar	_p @ sp[(-18)+16]
 19423  01543A  0EFE               	movlw	-2
 19424  01543C  0060  F033  FFE3   	movff	_prec,plusw1
 19425  015442  0EFF               	movlw	-1
 19426  015444  0060  F037  FFE3   	movff	_prec+1,plusw1
 19427  01544A                     l2143:
 19428                           
 19429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 19430                           ;stkvar	_w @ sp[(-18)+14]
 19431  01544A  0EFC               	movlw	-4
 19432  01544C  0060  F02B  FFE3   	movff	_width,plusw1
 19433  015452  0EFD               	movlw	-3
 19434  015454  0060  F02F  FFE3   	movff	_width+1,plusw1
 19435                           
 19436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 19437                           ;stkvar	_s @ sp[(-18)+12]
 19438  01545A  0EFA               	movlw	-6
 19439  01545C  006F FF8C  F026    	movff	plusw1,btemp
 19440  015462  0EFB               	movlw	-5
 19441  015464  50E3               	movf	plusw1,w,c
 19442  015466  1026               	iorwf	btemp^0,w,c
 19443  015468  A4D8               	btfss	status,2,c
 19444  01546A  D002               	goto	u10660
 19445  01546C  A40E               	btfss	_flags^0,2,c
 19446  01546E  D00A               	goto	l11595
 19447  015470                     u10660:
 19448                           
 19449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 19450                           ;stkvar	_w @ sp[(-18)+14]
 19451  015470  50E1               	movf	fsr1l,w,c
 19452  015472  0FFC               	addlw	-4
 19453  015474  6ED9               	movwf	fsr2l,c
 19454  015476  50E2               	movf	fsr1h,w,c
 19455  015478  6EDA               	movwf	fsr2h,c
 19456  01547A  0EFF               	movlw	255
 19457  01547C  22DA               	addwfc	fsr2h,f,c
 19458  01547E  06DE               	decf	postinc2,f,c
 19459  015480  0E00               	movlw	0
 19460  015482  5ADD               	subwfb	postdec2,f,c
 19461  015484                     l11595:
 19462                           
 19463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 19464  015484  0E4F               	movlw	79
 19465  015486  6E30               	movwf	(btemp+10)^0,c
 19466  015488  0E00               	movlw	0
 19467  01548A  6E31               	movwf	(btemp+11)^0,c
 19468                           
 19469                           ;stkvar	_i @ sp[(-18)+10]
 19470  01548C  0EF8               	movlw	-8
 19471  01548E  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 19472  015494  0EF9               	movlw	-7
 19473  015496  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 19474                           
 19475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 19476  01549C  0103               	movlb	3	; () banked
 19477  01549E  6BFD               	clrf	(_dbuf+79)& (0+255),b
 19478                           
 19479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19480  0154A0  D109               	goto	l11609
 19481  0154A2                     l11599:
 19482                           
 19483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 19484                           ;stkvar	_i @ sp[(-18)+10]
 19485  0154A2  50E1               	movf	fsr1l,w,c
 19486  0154A4  0FF8               	addlw	-8
 19487  0154A6  6ED9               	movwf	fsr2l,c
 19488  0154A8  50E2               	movf	fsr1h,w,c
 19489  0154AA  6EDA               	movwf	fsr2h,c
 19490  0154AC  0EFF               	movlw	255
 19491  0154AE  22DA               	addwfc	fsr2h,f,c
 19492  0154B0  06DE               	decf	postinc2,f,c
 19493  0154B2  0E00               	movlw	0
 19494  0154B4  5ADD               	subwfb	postdec2,f,c
 19495                           
 19496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 19497  0154B6  0E0A               	movlw	10
 19498  0154B8  6EE6               	movwf	postinc1,c
 19499  0154BA  0E00               	movlw	0
 19500  0154BC  6EE6               	movwf	postinc1,c
 19501  0154BE  0E00               	movlw	0
 19502  0154C0  6EE6               	movwf	postinc1,c
 19503  0154C2  0E00               	movlw	0
 19504  0154C4  6EE6               	movwf	postinc1,c
 19505  0154C6  0E00               	movlw	0
 19506  0154C8  6EE6               	movwf	postinc1,c
 19507  0154CA  0E00               	movlw	0
 19508  0154CC  6EE6               	movwf	postinc1,c
 19509  0154CE  0E00               	movlw	0
 19510  0154D0  6EE6               	movwf	postinc1,c
 19511  0154D2  0E00               	movlw	0
 19512  0154D4  6EE6               	movwf	postinc1,c
 19513                           
 19514                           ;stkvar	_n @ sp[(-26)+2]
 19515  0154D6  50E1               	movf	fsr1l,w,c
 19516  0154D8  0FE8               	addlw	-24
 19517  0154DA  6ED9               	movwf	fsr2l,c
 19518  0154DC  50E2               	movf	fsr1h,w,c
 19519  0154DE  6EDA               	movwf	fsr2h,c
 19520  0154E0  0EFF               	movlw	255
 19521  0154E2  22DA               	addwfc	fsr2h,f,c
 19522  0154E4  006F FF7B FFE6     	movff	postinc2,postinc1
 19523  0154EA  006F FF7B FFE6     	movff	postinc2,postinc1
 19524  0154F0  006F FF7B FFE6     	movff	postinc2,postinc1
 19525  0154F6  006F FF7B FFE6     	movff	postinc2,postinc1
 19526  0154FC  006F FF7B FFE6     	movff	postinc2,postinc1
 19527  015502  006F FF7B FFE6     	movff	postinc2,postinc1
 19528  015508  006F FF7B FFE6     	movff	postinc2,postinc1
 19529  01550E  006F FF7B FFE6     	movff	postinc2,postinc1
 19530  015514  ECA9  F0B9         	call	___aomod	;wreg free
 19531  015518  52E5               	movf	postdec1,f,c
 19532  01551A  006F FF9C  F03D    	movff	indf1,btemp+23
 19533  015520  52E5               	movf	postdec1,f,c
 19534  015522  006F FF9C  F03C    	movff	indf1,btemp+22
 19535  015528  52E5               	movf	postdec1,f,c
 19536  01552A  006F FF9C  F03B    	movff	indf1,btemp+21
 19537  015530  52E5               	movf	postdec1,f,c
 19538  015532  006F FF9C  F03A    	movff	indf1,btemp+20
 19539  015538  52E5               	movf	postdec1,f,c
 19540  01553A  006F FF9C  F039    	movff	indf1,btemp+19
 19541  015540  52E5               	movf	postdec1,f,c
 19542  015542  006F FF9C  F038    	movff	indf1,btemp+18
 19543  015548  52E5               	movf	postdec1,f,c
 19544  01554A  006F FF9C  F037    	movff	indf1,btemp+17
 19545  015550  52E5               	movf	postdec1,f,c
 19546  015552  006F FF9C  F036    	movff	indf1,btemp+16
 19547  015558  0EF8               	movlw	248
 19548  01555A  26E1               	addwf	fsr1l,f,c
 19549  01555C  0EFF               	movlw	255
 19550  01555E  22E2               	addwfc	fsr1h,f,c
 19551  015560  0060  F0D8  F030   	movff	btemp+16,btemp+10
 19552  015566  0060  F0DC  F031   	movff	btemp+17,btemp+11
 19553  01556C  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 19554  015572  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 19555  015578  ECCA  F0D5         	call	_abs	;wreg free
 19556  01557C  0E30               	movlw	48
 19557  01557E  2626               	addwf	btemp^0,f,c
 19558                           
 19559                           ;stkvar	_i @ sp[(-18)+10]
 19560  015580  0EF8               	movlw	-8
 19561  015582  006F FF8C  F030    	movff	plusw1,btemp+10
 19562  015588  0EF9               	movlw	-7
 19563  01558A  006F FF8C  F031    	movff	plusw1,btemp+11
 19564  015590  0EAE               	movlw	low _dbuf
 19565  015592  2430               	addwf	(btemp+10)^0,w,c
 19566  015594  6ED9               	movwf	fsr2l,c
 19567  015596  0E03               	movlw	high _dbuf
 19568  015598  2031               	addwfc	(btemp+11)^0,w,c
 19569  01559A  6EDA               	movwf	fsr2h,c
 19570  01559C  0060  F09B  FFDF   	movff	btemp,indf2
 19571                           
 19572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 19573                           ;stkvar	_p @ sp[(-18)+16]
 19574  0155A2  50E1               	movf	fsr1l,w,c
 19575  0155A4  0FFE               	addlw	-2
 19576  0155A6  6ED9               	movwf	fsr2l,c
 19577  0155A8  50E2               	movf	fsr1h,w,c
 19578  0155AA  6EDA               	movwf	fsr2h,c
 19579  0155AC  0EFF               	movlw	255
 19580  0155AE  22DA               	addwfc	fsr2h,f,c
 19581  0155B0  06DE               	decf	postinc2,f,c
 19582  0155B2  0E00               	movlw	0
 19583  0155B4  5ADD               	subwfb	postdec2,f,c
 19584                           
 19585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 19586                           ;stkvar	_w @ sp[(-18)+14]
 19587  0155B6  50E1               	movf	fsr1l,w,c
 19588  0155B8  0FFC               	addlw	-4
 19589  0155BA  6ED9               	movwf	fsr2l,c
 19590  0155BC  50E2               	movf	fsr1h,w,c
 19591  0155BE  6EDA               	movwf	fsr2h,c
 19592  0155C0  0EFF               	movlw	255
 19593  0155C2  22DA               	addwfc	fsr2h,f,c
 19594  0155C4  06DE               	decf	postinc2,f,c
 19595  0155C6  0E00               	movlw	0
 19596  0155C8  5ADD               	subwfb	postdec2,f,c
 19597                           
 19598                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 19599  0155CA  0E0A               	movlw	10
 19600  0155CC  6EE6               	movwf	postinc1,c
 19601  0155CE  0E00               	movlw	0
 19602  0155D0  6EE6               	movwf	postinc1,c
 19603  0155D2  0E00               	movlw	0
 19604  0155D4  6EE6               	movwf	postinc1,c
 19605  0155D6  0E00               	movlw	0
 19606  0155D8  6EE6               	movwf	postinc1,c
 19607  0155DA  0E00               	movlw	0
 19608  0155DC  6EE6               	movwf	postinc1,c
 19609  0155DE  0E00               	movlw	0
 19610  0155E0  6EE6               	movwf	postinc1,c
 19611  0155E2  0E00               	movlw	0
 19612  0155E4  6EE6               	movwf	postinc1,c
 19613  0155E6  0E00               	movlw	0
 19614  0155E8  6EE6               	movwf	postinc1,c
 19615                           
 19616                           ;stkvar	_n @ sp[(-26)+2]
 19617  0155EA  50E1               	movf	fsr1l,w,c
 19618  0155EC  0FE8               	addlw	-24
 19619  0155EE  6ED9               	movwf	fsr2l,c
 19620  0155F0  50E2               	movf	fsr1h,w,c
 19621  0155F2  6EDA               	movwf	fsr2h,c
 19622  0155F4  0EFF               	movlw	255
 19623  0155F6  22DA               	addwfc	fsr2h,f,c
 19624  0155F8  006F FF7B FFE6     	movff	postinc2,postinc1
 19625  0155FE  006F FF7B FFE6     	movff	postinc2,postinc1
 19626  015604  006F FF7B FFE6     	movff	postinc2,postinc1
 19627  01560A  006F FF7B FFE6     	movff	postinc2,postinc1
 19628  015610  006F FF7B FFE6     	movff	postinc2,postinc1
 19629  015616  006F FF7B FFE6     	movff	postinc2,postinc1
 19630  01561C  006F FF7B FFE6     	movff	postinc2,postinc1
 19631  015622  006F FF7B FFE6     	movff	postinc2,postinc1
 19632  015628  EC2F  F0B7         	call	___aodiv	;wreg free
 19633  01562C  52E5               	movf	postdec1,f,c
 19634  01562E  006F FF9C  F03D    	movff	indf1,btemp+23
 19635  015634  52E5               	movf	postdec1,f,c
 19636  015636  006F FF9C  F03C    	movff	indf1,btemp+22
 19637  01563C  52E5               	movf	postdec1,f,c
 19638  01563E  006F FF9C  F03B    	movff	indf1,btemp+21
 19639  015644  52E5               	movf	postdec1,f,c
 19640  015646  006F FF9C  F03A    	movff	indf1,btemp+20
 19641  01564C  52E5               	movf	postdec1,f,c
 19642  01564E  006F FF9C  F039    	movff	indf1,btemp+19
 19643  015654  52E5               	movf	postdec1,f,c
 19644  015656  006F FF9C  F038    	movff	indf1,btemp+18
 19645  01565C  52E5               	movf	postdec1,f,c
 19646  01565E  006F FF9C  F037    	movff	indf1,btemp+17
 19647  015664  52E5               	movf	postdec1,f,c
 19648  015666  006F FF9C  F036    	movff	indf1,btemp+16
 19649  01566C  0EF8               	movlw	248
 19650  01566E  26E1               	addwf	fsr1l,f,c
 19651  015670  0EFF               	movlw	255
 19652  015672  22E2               	addwfc	fsr1h,f,c
 19653                           
 19654                           ;stkvar	_n @ sp[(-18)+2]
 19655  015674  0EF0               	movlw	-16
 19656  015676  0060  F0DB  FFE3   	movff	btemp+16,plusw1
 19657  01567C  0EF1               	movlw	-15
 19658  01567E  0060  F0DF  FFE3   	movff	btemp+17,plusw1
 19659  015684  0EF2               	movlw	-14
 19660  015686  0060  F0E3  FFE3   	movff	btemp+18,plusw1
 19661  01568C  0EF3               	movlw	-13
 19662  01568E  0060  F0E7  FFE3   	movff	btemp+19,plusw1
 19663  015694  0EF4               	movlw	-12
 19664  015696  0060  F0EB  FFE3   	movff	btemp+20,plusw1
 19665  01569C  0EF5               	movlw	-11
 19666  01569E  0060  F0EF  FFE3   	movff	btemp+21,plusw1
 19667  0156A4  0EF6               	movlw	-10
 19668  0156A6  0060  F0F3  FFE3   	movff	btemp+22,plusw1
 19669  0156AC  0EF7               	movlw	-9
 19670  0156AE  0060  F0F7  FFE3   	movff	btemp+23,plusw1
 19671  0156B4                     l11609:
 19672                           
 19673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19674                           ;stkvar	_i @ sp[(-18)+10]
 19675  0156B4  0EF9               	movlw	-7
 19676  0156B6  BEE3               	btfsc	plusw1,7,c
 19677  0156B8  D036               	goto	u10710
 19678  0156BA  0EF9               	movlw	-7
 19679  0156BC  50E3               	movf	plusw1,w,c
 19680  0156BE  E104               	bnz	u10670
 19681  0156C0  0EF8               	movlw	-8
 19682  0156C2  04E3               	decf	plusw1,w,c
 19683  0156C4  A0D8               	btfss	status,0,c
 19684  0156C6  D02F               	goto	u10710
 19685  0156C8                     u10670:
 19686                           
 19687                           ;stkvar	_n @ sp[(-18)+2]
 19688  0156C8  0EF0               	movlw	-16
 19689  0156CA  50E3               	movf	plusw1,w,c
 19690  0156CC  E115               	bnz	u10681
 19691  0156CE  0EF1               	movlw	-15
 19692  0156D0  50E3               	movf	plusw1,w,c
 19693  0156D2  E112               	bnz	u10681
 19694  0156D4  0EF2               	movlw	-14
 19695  0156D6  50E3               	movf	plusw1,w,c
 19696  0156D8  E10F               	bnz	u10681
 19697  0156DA  0EF3               	movlw	-13
 19698  0156DC  50E3               	movf	plusw1,w,c
 19699  0156DE  E10C               	bnz	u10681
 19700  0156E0  0EF4               	movlw	-12
 19701  0156E2  50E3               	movf	plusw1,w,c
 19702  0156E4  E109               	bnz	u10681
 19703  0156E6  0EF5               	movlw	-11
 19704  0156E8  50E3               	movf	plusw1,w,c
 19705  0156EA  E106               	bnz	u10681
 19706  0156EC  0EF6               	movlw	-10
 19707  0156EE  50E3               	movf	plusw1,w,c
 19708  0156F0  E103               	bnz	u10681
 19709  0156F2  0EF7               	movlw	-9
 19710  0156F4  50E3               	movf	plusw1,w,c
 19711  0156F6  A4D8               	btfss	status,2,c
 19712  0156F8                     u10681:
 19713  0156F8  D6D4               	goto	l11599
 19714                           
 19715                           ;stkvar	_p @ sp[(-18)+16]
 19716  0156FA  0EFF               	movlw	-1
 19717  0156FC  BEE3               	btfsc	plusw1,7,c
 19718  0156FE  D007               	goto	u10690
 19719  015700  0EFF               	movlw	-1
 19720  015702  50E3               	movf	plusw1,w,c
 19721  015704  E103               	bnz	u10691
 19722  015706  0EFE               	movlw	-2
 19723  015708  04E3               	decf	plusw1,w,c
 19724  01570A  B0D8               	btfsc	status,0,c
 19725  01570C                     u10691:
 19726  01570C  D6CA               	goto	l11599
 19727  01570E                     u10690:
 19728                           
 19729                           ;stkvar	_w @ sp[(-18)+14]
 19730  01570E  0EFD               	movlw	-3
 19731  015710  BEE3               	btfsc	plusw1,7,c
 19732  015712  D009               	goto	u10710
 19733  015714  0EFD               	movlw	-3
 19734  015716  50E3               	movf	plusw1,w,c
 19735  015718  E104               	bnz	u10700
 19736  01571A  0EFC               	movlw	-4
 19737  01571C  04E3               	decf	plusw1,w,c
 19738  01571E  A0D8               	btfss	status,0,c
 19739  015720  D002               	goto	u10710
 19740  015722                     u10700:
 19741  015722  B20E               	btfsc	_flags^0,1,c
 19742  015724  D6BE               	goto	l11599
 19743  015726                     u10710:
 19744                           
 19745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 19746                           ;stkvar	_s @ sp[(-18)+12]
 19747  015726  0EFA               	movlw	-6
 19748  015728  006F FF8C  F026    	movff	plusw1,btemp
 19749  01572E  0EFB               	movlw	-5
 19750  015730  50E3               	movf	plusw1,w,c
 19751  015732  1026               	iorwf	btemp^0,w,c
 19752  015734  A4D8               	btfss	status,2,c
 19753  015736  D002               	goto	u10730
 19754  015738  A40E               	btfss	_flags^0,2,c
 19755  01573A  D033               	goto	l11633
 19756  01573C                     u10730:
 19757                           
 19758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 19759                           ;stkvar	_i @ sp[(-18)+10]
 19760  01573C  50E1               	movf	fsr1l,w,c
 19761  01573E  0FF8               	addlw	-8
 19762  015740  6ED9               	movwf	fsr2l,c
 19763  015742  50E2               	movf	fsr1h,w,c
 19764  015744  6EDA               	movwf	fsr2h,c
 19765  015746  0EFF               	movlw	255
 19766  015748  22DA               	addwfc	fsr2h,f,c
 19767  01574A  06DE               	decf	postinc2,f,c
 19768  01574C  0E00               	movlw	0
 19769  01574E  5ADD               	subwfb	postdec2,f,c
 19770                           
 19771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 19772                           ;stkvar	_s @ sp[(-18)+12]
 19773  015750  0EFA               	movlw	-6
 19774  015752  006F FF8C  F026    	movff	plusw1,btemp
 19775  015758  0EFB               	movlw	-5
 19776  01575A  50E3               	movf	plusw1,w,c
 19777  01575C  1026               	iorwf	btemp^0,w,c
 19778  01575E  A4D8               	btfss	status,2,c
 19779  015760  D002               	goto	l11629
 19780  015762  0E2B               	movlw	43
 19781  015764  D001               	goto	L22
 19782  015766                     l11629:
 19783  015766  0E2D               	movlw	45
 19784  015768                     L22:
 19785  015768  6E30               	movwf	(btemp+10)^0,c
 19786  01576A  0E00               	movlw	0
 19787  01576C  6E31               	movwf	(btemp+11)^0,c
 19788                           
 19789                           ;stkvar	_dtoa$5384 @ sp[(-18)+0]
 19790  01576E  0EEE               	movlw	-18
 19791  015770  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 19792  015776  0EEF               	movlw	-17
 19793  015778  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 19794                           
 19795                           ;stkvar	_dtoa$5384 @ sp[(-18)+0]
 19796                           ;stkvar	_i @ sp[(-18)+10]
 19797  01577E  0EF8               	movlw	-8
 19798  015780  006F FF8C  F030    	movff	plusw1,btemp+10
 19799  015786  0EF9               	movlw	-7
 19800  015788  006F FF8C  F031    	movff	plusw1,btemp+11
 19801  01578E  0EAE               	movlw	low _dbuf
 19802  015790  2430               	addwf	(btemp+10)^0,w,c
 19803  015792  6ED9               	movwf	fsr2l,c
 19804  015794  0E03               	movlw	high _dbuf
 19805  015796  2031               	addwfc	(btemp+11)^0,w,c
 19806  015798  6EDA               	movwf	fsr2h,c
 19807  01579A  0EEE               	movlw	-18
 19808  01579C  006F FF8F FFDF     	movff	plusw1,indf2
 19809  0157A2                     l11633:
 19810                           
 19811                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 19812                           ;stkvar	_w @ sp[(-18)+14]
 19813  0157A2  0EFC               	movlw	-4
 19814  0157A4  006F FF8F FFE6     	movff	plusw1,postinc1
 19815  0157AA  006F FF8F FFE6     	movff	plusw1,postinc1
 19816                           
 19817                           ;stkvar	_i @ sp[(-20)+10]
 19818  0157B0  0EAE               	movlw	low _dbuf
 19819  0157B2  6E30               	movwf	(btemp+10)^0,c
 19820  0157B4  0E03               	movlw	high _dbuf
 19821  0157B6  6E31               	movwf	(btemp+11)^0,c
 19822  0157B8  0EF6               	movlw	-10
 19823  0157BA  50E3               	movf	plusw1,w,c
 19824  0157BC  2630               	addwf	(btemp+10)^0,f,c
 19825  0157BE  0EF7               	movlw	-9
 19826  0157C0  50E3               	movf	plusw1,w,c
 19827  0157C2  2231               	addwfc	(btemp+11)^0,f,c
 19828  0157C4  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 19829  0157CA  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 19830                           
 19831                           ;stkvar	_fp @ sp[(-22)+-2]
 19832  0157D0  0EE8               	movlw	-24
 19833  0157D2  006F FF8F FFE6     	movff	plusw1,postinc1
 19834  0157D8  006F FF8F FFE6     	movff	plusw1,postinc1
 19835  0157DE  EC75  F0C8         	call	_pad	;wreg free
 19836                           
 19837                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 19838  0157E2  0EE4               	movlw	228
 19839  0157E4  26E1               	addwf	fsr1l,f,c
 19840  0157E6  0EFF               	movlw	255
 19841  0157E8  22E2               	addwfc	fsr1h,f,c
 19842  0157EA  0012               	return		;funcret
 19843  0157EC                     __end_of_dtoa:
 19844                           	opt callstack 0
 19845                           
 19846 ;; *************** function _abs *****************
 19847 ;; Defined at:
 19848 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 19849 ;; Parameters:    Size  Location     Type
 19850 ;;  a               2  [STACK] int 
 19851 ;; Auto vars:     Size  Location     Type
 19852 ;;		None
 19853 ;; Return value:  Size  Location     Type
 19854 ;;                  2  [STACK] int 
 19855 ;; Registers used:
 19856 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 19857 ;; Tracked objects:
 19858 ;;		On entry : 0/3
 19859 ;;		On exit  : 0/0
 19860 ;;		Unchanged: 0/0
 19861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19866 ;;Total ram usage:        0 bytes
 19867 ;; Hardware stack levels used:    1
 19868 ;; Hardware stack levels required when called:   15
 19869 ;; This function calls:
 19870 ;;		Nothing
 19871 ;; This function is called by:
 19872 ;;		_dtoa
 19873 ;; This function uses a reentrant model
 19874 ;;
 19875                           
 19876                           	psect	text67
 19877  01AB94                     __ptext67:
 19878                           	opt callstack 0
 19879  01AB94                     _abs:
 19880                           	opt callstack 0
 19881                           
 19882                           ;stkvar	_a @ sp[(0)+-2]
 19883                           
 19884                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19885                           ;incstack = 0
 19886 ;; hardware stack exceeded
 19887  01AB94  0EFF               	movlw	-1
 19888  01AB96  BEE3               	btfsc	plusw1,7,c
 19889  01AB98  D007               	goto	u5800
 19890  01AB9A  0EFF               	movlw	-1
 19891  01AB9C  50E3               	movf	plusw1,w,c
 19892  01AB9E  E112               	bnz	l7805
 19893  01ABA0  0EFE               	movlw	-2
 19894  01ABA2  04E3               	decf	plusw1,w,c
 19895  01ABA4  B0D8               	btfsc	status,0,c
 19896  01ABA6  D00E               	goto	l7805
 19897  01ABA8                     u5800:
 19898                           
 19899                           ;stkvar	_a @ sp[(0)+-2]
 19900  01ABA8  0EFE               	movlw	-2
 19901  01ABAA  006F FF8C  F026    	movff	plusw1,btemp
 19902  01ABB0  1E26               	comf	btemp^0,f,c
 19903  01ABB2  0EFF               	movlw	-1
 19904  01ABB4  006F FF8C  F027    	movff	plusw1,btemp+1
 19905  01ABBA  1E27               	comf	(btemp+1)^0,f,c
 19906  01ABBC  2A26               	incf	btemp^0,f,c
 19907  01ABBE  B4D8               	btfsc	status,2,c
 19908  01ABC0  2A27               	incf	(btemp+1)^0,f,c
 19909  01ABC2  D008               	goto	l3069
 19910  01ABC4                     l7805:
 19911                           
 19912                           ;stkvar	_a @ sp[(0)+-2]
 19913  01ABC4  0EFE               	movlw	-2
 19914  01ABC6  006F FF8C  F026    	movff	plusw1,btemp
 19915  01ABCC  0EFF               	movlw	-1
 19916  01ABCE  006F FF8C  F027    	movff	plusw1,btemp+1
 19917  01ABD4                     l3069:
 19918                           
 19919                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 19920  01ABD4  52E5               	movf	postdec1,f,c
 19921  01ABD6  52E5               	movf	postdec1,f,c
 19922  01ABD8  0012               	return		;funcret
 19923  01ABDA                     __end_of_abs:
 19924                           	opt callstack 0
 19925                           
 19926 ;; *************** function ___aomod *****************
 19927 ;; Defined at:
 19928 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 19929 ;; Parameters:    Size  Location     Type
 19930 ;;  dividend        8  [STACK] long long 
 19931 ;;  divisor         8  [STACK] long long 
 19932 ;; Auto vars:     Size  Location     Type
 19933 ;;  sign            1  [STACK] unsigned char 
 19934 ;;  counter         1  [STACK] unsigned char 
 19935 ;; Return value:  Size  Location     Type
 19936 ;;                  8  [STACK] long long 
 19937 ;; Registers used:
 19938 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19939 ;; Tracked objects:
 19940 ;;		On entry : 0/3
 19941 ;;		On exit  : 0/0
 19942 ;;		Unchanged: 0/0
 19943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19948 ;;Total ram usage:        0 bytes
 19949 ;; Hardware stack levels used:    1
 19950 ;; Hardware stack levels required when called:   15
 19951 ;; This function calls:
 19952 ;;		Nothing
 19953 ;; This function is called by:
 19954 ;;		_dtoa
 19955 ;; This function uses a reentrant model
 19956 ;;
 19957                           
 19958                           	psect	text68
 19959  017352                     __ptext68:
 19960                           	opt callstack 0
 19961  017352                     ___aomod:
 19962                           	opt callstack 0
 19963                           
 19964                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 19965  017352  52E6               	movf	postinc1,f,c
 19966  017354  52E6               	movf	postinc1,f,c
 19967                           
 19968                           ;stkvar	_sign @ sp[(-2)+0]
 19969                           
 19970                           ;incstack = 0
 19971 ;; hardware stack exceeded
 19972  017356  0EFE               	movlw	-2
 19973  017358  6AE3               	clrf	plusw1,c
 19974                           
 19975                           ;stkvar	_dividend @ sp[(-2)+-8]
 19976  01735A  0EFD               	movlw	-3
 19977  01735C  AEE3               	btfss	plusw1,7,c
 19978  01735E  D028               	goto	l7963
 19979                           
 19980                           ;stkvar	_dividend @ sp[(-2)+-8]
 19981                           ;stkvar	_dividend @ sp[(-2)+-8]
 19982  017360  0EF6               	movlw	-10
 19983  017362  6CE3               	negf	plusw1,c
 19984  017364  0EF7               	movlw	-9
 19985  017366  1EE3               	comf	plusw1,f,c
 19986  017368  0EF8               	movlw	-8
 19987  01736A  1EE3               	comf	plusw1,f,c
 19988  01736C  0EF9               	movlw	-7
 19989  01736E  1EE3               	comf	plusw1,f,c
 19990  017370  0EFA               	movlw	-6
 19991  017372  1EE3               	comf	plusw1,f,c
 19992  017374  0EFB               	movlw	-5
 19993  017376  1EE3               	comf	plusw1,f,c
 19994  017378  0EFC               	movlw	-4
 19995  01737A  1EE3               	comf	plusw1,f,c
 19996  01737C  0EFD               	movlw	-3
 19997  01737E  1EE3               	comf	plusw1,f,c
 19998  017380  E314               	bnc	u6230
 19999  017382  0EF7               	movlw	-9
 20000  017384  2AE3               	incf	plusw1,f,c
 20001  017386  E311               	bnc	u6230
 20002  017388  0EF8               	movlw	-8
 20003  01738A  2AE3               	incf	plusw1,f,c
 20004  01738C  E30E               	bnc	u6230
 20005  01738E  0EF9               	movlw	-7
 20006  017390  2AE3               	incf	plusw1,f,c
 20007  017392  E30B               	bnc	u6230
 20008  017394  0EFA               	movlw	-6
 20009  017396  2AE3               	incf	plusw1,f,c
 20010  017398  E308               	bnc	u6230
 20011  01739A  0EFB               	movlw	-5
 20012  01739C  2AE3               	incf	plusw1,f,c
 20013  01739E  E305               	bnc	u6230
 20014  0173A0  0EFC               	movlw	-4
 20015  0173A2  2AE3               	incf	plusw1,f,c
 20016  0173A4  E302               	bnc	u6230
 20017  0173A6  0EFD               	movlw	-3
 20018  0173A8  2AE3               	incf	plusw1,f,c
 20019  0173AA                     u6230:
 20020                           
 20021                           ;stkvar	_sign @ sp[(-2)+0]
 20022  0173AA  0EFE               	movlw	-2
 20023  0173AC  6AE3               	clrf	plusw1,c
 20024  0173AE  2AE3               	incf	plusw1,f,c
 20025  0173B0                     l7963:
 20026                           
 20027                           ;stkvar	_divisor @ sp[(-2)+-16]
 20028  0173B0  0EF5               	movlw	-11
 20029  0173B2  AEE3               	btfss	plusw1,7,c
 20030  0173B4  D025               	goto	u6250
 20031                           
 20032                           ;stkvar	_divisor @ sp[(-2)+-16]
 20033                           ;stkvar	_divisor @ sp[(-2)+-16]
 20034  0173B6  0EEE               	movlw	-18
 20035  0173B8  6CE3               	negf	plusw1,c
 20036  0173BA  0EEF               	movlw	-17
 20037  0173BC  1EE3               	comf	plusw1,f,c
 20038  0173BE  0EF0               	movlw	-16
 20039  0173C0  1EE3               	comf	plusw1,f,c
 20040  0173C2  0EF1               	movlw	-15
 20041  0173C4  1EE3               	comf	plusw1,f,c
 20042  0173C6  0EF2               	movlw	-14
 20043  0173C8  1EE3               	comf	plusw1,f,c
 20044  0173CA  0EF3               	movlw	-13
 20045  0173CC  1EE3               	comf	plusw1,f,c
 20046  0173CE  0EF4               	movlw	-12
 20047  0173D0  1EE3               	comf	plusw1,f,c
 20048  0173D2  0EF5               	movlw	-11
 20049  0173D4  1EE3               	comf	plusw1,f,c
 20050  0173D6  E314               	bnc	u6250
 20051  0173D8  0EEF               	movlw	-17
 20052  0173DA  2AE3               	incf	plusw1,f,c
 20053  0173DC  E311               	bnc	u6250
 20054  0173DE  0EF0               	movlw	-16
 20055  0173E0  2AE3               	incf	plusw1,f,c
 20056  0173E2  E30E               	bnc	u6250
 20057  0173E4  0EF1               	movlw	-15
 20058  0173E6  2AE3               	incf	plusw1,f,c
 20059  0173E8  E30B               	bnc	u6250
 20060  0173EA  0EF2               	movlw	-14
 20061  0173EC  2AE3               	incf	plusw1,f,c
 20062  0173EE  E308               	bnc	u6250
 20063  0173F0  0EF3               	movlw	-13
 20064  0173F2  2AE3               	incf	plusw1,f,c
 20065  0173F4  E305               	bnc	u6250
 20066  0173F6  0EF4               	movlw	-12
 20067  0173F8  2AE3               	incf	plusw1,f,c
 20068  0173FA  E302               	bnc	u6250
 20069  0173FC  0EF5               	movlw	-11
 20070  0173FE  2AE3               	incf	plusw1,f,c
 20071  017400                     u6250:
 20072                           
 20073                           ;stkvar	_divisor @ sp[(-2)+-16]
 20074  017400  0EEE               	movlw	-18
 20075  017402  50E3               	movf	plusw1,w,c
 20076  017404  E116               	bnz	u6260
 20077  017406  0EEF               	movlw	-17
 20078  017408  50E3               	movf	plusw1,w,c
 20079  01740A  E113               	bnz	u6260
 20080  01740C  0EF0               	movlw	-16
 20081  01740E  50E3               	movf	plusw1,w,c
 20082  017410  E110               	bnz	u6260
 20083  017412  0EF1               	movlw	-15
 20084  017414  50E3               	movf	plusw1,w,c
 20085  017416  E10D               	bnz	u6260
 20086  017418  0EF2               	movlw	-14
 20087  01741A  50E3               	movf	plusw1,w,c
 20088  01741C  E10A               	bnz	u6260
 20089  01741E  0EF3               	movlw	-13
 20090  017420  50E3               	movf	plusw1,w,c
 20091  017422  E107               	bnz	u6260
 20092  017424  0EF4               	movlw	-12
 20093  017426  50E3               	movf	plusw1,w,c
 20094  017428  E104               	bnz	u6260
 20095  01742A  0EF5               	movlw	-11
 20096  01742C  50E3               	movf	plusw1,w,c
 20097  01742E  B4D8               	btfsc	status,2,c
 20098  017430  D075               	goto	u6290
 20099  017432                     u6260:
 20100                           
 20101                           ;stkvar	_counter @ sp[(-2)+1]
 20102  017432  0EFF               	movlw	-1
 20103  017434  6AE3               	clrf	plusw1,c
 20104  017436  D012               	goto	L23
 20105  017438                     l7971:
 20106                           
 20107                           ;stkvar	_divisor @ sp[(-2)+-16]
 20108  017438  90D8               	bcf	status,0,c
 20109  01743A  0EEE               	movlw	-18
 20110  01743C  36E3               	rlcf	plusw1,f,c
 20111  01743E  0EEF               	movlw	-17
 20112  017440  36E3               	rlcf	plusw1,f,c
 20113  017442  0EF0               	movlw	-16
 20114  017444  36E3               	rlcf	plusw1,f,c
 20115  017446  0EF1               	movlw	-15
 20116  017448  36E3               	rlcf	plusw1,f,c
 20117  01744A  0EF2               	movlw	-14
 20118  01744C  36E3               	rlcf	plusw1,f,c
 20119  01744E  0EF3               	movlw	-13
 20120  017450  36E3               	rlcf	plusw1,f,c
 20121  017452  0EF4               	movlw	-12
 20122  017454  36E3               	rlcf	plusw1,f,c
 20123  017456  0EF5               	movlw	-11
 20124  017458  36E3               	rlcf	plusw1,f,c
 20125                           
 20126                           ;stkvar	_counter @ sp[(-2)+1]
 20127  01745A  0EFF               	movlw	-1
 20128  01745C                     L23:
 20129  01745C  2AE3               	incf	plusw1,f,c
 20130                           
 20131                           ;stkvar	_divisor @ sp[(-2)+-16]
 20132  01745E  0EF5               	movlw	-11
 20133  017460  AEE3               	btfss	plusw1,7,c
 20134  017462  D7EA               	goto	l7971
 20135  017464                     u6270:
 20136                           
 20137                           ;stkvar	_divisor @ sp[(-2)+-16]
 20138                           ;stkvar	_dividend @ sp[(-2)+-8]
 20139  017464  50E1               	movf	fsr1l,w,c
 20140  017466  0FF6               	addlw	-10
 20141  017468  6ED9               	movwf	fsr2l,c
 20142  01746A  50E2               	movf	fsr1h,w,c
 20143  01746C  6EDA               	movwf	fsr2h,c
 20144  01746E  0EFF               	movlw	255
 20145  017470  22DA               	addwfc	fsr2h,f,c
 20146  017472  0EEE               	movlw	-18
 20147  017474  50E3               	movf	plusw1,w,c
 20148  017476  5CDE               	subwf	postinc2,w,c
 20149  017478  0EEF               	movlw	-17
 20150  01747A  50E3               	movf	plusw1,w,c
 20151  01747C  58DE               	subwfb	postinc2,w,c
 20152  01747E  0EF0               	movlw	-16
 20153  017480  50E3               	movf	plusw1,w,c
 20154  017482  58DE               	subwfb	postinc2,w,c
 20155  017484  0EF1               	movlw	-15
 20156  017486  50E3               	movf	plusw1,w,c
 20157  017488  58DE               	subwfb	postinc2,w,c
 20158  01748A  0EF2               	movlw	-14
 20159  01748C  50E3               	movf	plusw1,w,c
 20160  01748E  58DE               	subwfb	postinc2,w,c
 20161  017490  0EF3               	movlw	-13
 20162  017492  50E3               	movf	plusw1,w,c
 20163  017494  58DE               	subwfb	postinc2,w,c
 20164  017496  0EF4               	movlw	-12
 20165  017498  50E3               	movf	plusw1,w,c
 20166  01749A  58DE               	subwfb	postinc2,w,c
 20167  01749C  0EF5               	movlw	-11
 20168  01749E  50E3               	movf	plusw1,w,c
 20169  0174A0  58DE               	subwfb	postinc2,w,c
 20170  0174A2  A0D8               	btfss	status,0,c
 20171  0174A4  D01F               	goto	l7979
 20172                           
 20173                           ;stkvar	_divisor @ sp[(-2)+-16]
 20174                           ;stkvar	_dividend @ sp[(-2)+-8]
 20175  0174A6  50E1               	movf	fsr1l,w,c
 20176  0174A8  0FF6               	addlw	-10
 20177  0174AA  6ED9               	movwf	fsr2l,c
 20178  0174AC  50E2               	movf	fsr1h,w,c
 20179  0174AE  6EDA               	movwf	fsr2h,c
 20180  0174B0  0EFF               	movlw	255
 20181  0174B2  22DA               	addwfc	fsr2h,f,c
 20182  0174B4  0EEE               	movlw	-18
 20183  0174B6  50E3               	movf	plusw1,w,c
 20184  0174B8  5EDE               	subwf	postinc2,f,c
 20185  0174BA  0EEF               	movlw	-17
 20186  0174BC  50E3               	movf	plusw1,w,c
 20187  0174BE  5ADE               	subwfb	postinc2,f,c
 20188  0174C0  0EF0               	movlw	-16
 20189  0174C2  50E3               	movf	plusw1,w,c
 20190  0174C4  5ADE               	subwfb	postinc2,f,c
 20191  0174C6  0EF1               	movlw	-15
 20192  0174C8  50E3               	movf	plusw1,w,c
 20193  0174CA  5ADE               	subwfb	postinc2,f,c
 20194  0174CC  0EF2               	movlw	-14
 20195  0174CE  50E3               	movf	plusw1,w,c
 20196  0174D0  5ADE               	subwfb	postinc2,f,c
 20197  0174D2  0EF3               	movlw	-13
 20198  0174D4  50E3               	movf	plusw1,w,c
 20199  0174D6  5ADE               	subwfb	postinc2,f,c
 20200  0174D8  0EF4               	movlw	-12
 20201  0174DA  50E3               	movf	plusw1,w,c
 20202  0174DC  5ADE               	subwfb	postinc2,f,c
 20203  0174DE  0EF5               	movlw	-11
 20204  0174E0  50E3               	movf	plusw1,w,c
 20205  0174E2  5ADE               	subwfb	postinc2,f,c
 20206  0174E4                     l7979:
 20207                           
 20208                           ;stkvar	_divisor @ sp[(-2)+-16]
 20209  0174E4  90D8               	bcf	status,0,c
 20210  0174E6  0EF5               	movlw	-11
 20211  0174E8  32E3               	rrcf	plusw1,f,c
 20212  0174EA  0EF4               	movlw	-12
 20213  0174EC  32E3               	rrcf	plusw1,f,c
 20214  0174EE  0EF3               	movlw	-13
 20215  0174F0  32E3               	rrcf	plusw1,f,c
 20216  0174F2  0EF2               	movlw	-14
 20217  0174F4  32E3               	rrcf	plusw1,f,c
 20218  0174F6  0EF1               	movlw	-15
 20219  0174F8  32E3               	rrcf	plusw1,f,c
 20220  0174FA  0EF0               	movlw	-16
 20221  0174FC  32E3               	rrcf	plusw1,f,c
 20222  0174FE  0EEF               	movlw	-17
 20223  017500  32E3               	rrcf	plusw1,f,c
 20224  017502  0EEE               	movlw	-18
 20225  017504  32E3               	rrcf	plusw1,f,c
 20226                           
 20227                           ;stkvar	_counter @ sp[(-2)+1]
 20228  017506  0EFF               	movlw	-1
 20229  017508  50E3               	movf	plusw1,w,c
 20230  01750A  6E26               	movwf	btemp^0,c
 20231  01750C  0E01               	movlw	1
 20232  01750E  5E26               	subwf	btemp^0,f,c
 20233  017510  0EFF               	movlw	-1
 20234  017512  0060  F09B  FFE3   	movff	btemp,plusw1
 20235  017518  A4D8               	btfss	status,2,c
 20236  01751A  D7A4               	goto	u6270
 20237  01751C                     u6290:
 20238                           
 20239                           ;stkvar	_sign @ sp[(-2)+0]
 20240  01751C  0EFE               	movlw	-2
 20241  01751E  50E3               	movf	plusw1,w,c
 20242  017520  B4D8               	btfsc	status,2,c
 20243  017522  D025               	goto	u6310
 20244                           
 20245                           ;stkvar	_dividend @ sp[(-2)+-8]
 20246                           ;stkvar	_dividend @ sp[(-2)+-8]
 20247  017524  0EF6               	movlw	-10
 20248  017526  6CE3               	negf	plusw1,c
 20249  017528  0EF7               	movlw	-9
 20250  01752A  1EE3               	comf	plusw1,f,c
 20251  01752C  0EF8               	movlw	-8
 20252  01752E  1EE3               	comf	plusw1,f,c
 20253  017530  0EF9               	movlw	-7
 20254  017532  1EE3               	comf	plusw1,f,c
 20255  017534  0EFA               	movlw	-6
 20256  017536  1EE3               	comf	plusw1,f,c
 20257  017538  0EFB               	movlw	-5
 20258  01753A  1EE3               	comf	plusw1,f,c
 20259  01753C  0EFC               	movlw	-4
 20260  01753E  1EE3               	comf	plusw1,f,c
 20261  017540  0EFD               	movlw	-3
 20262  017542  1EE3               	comf	plusw1,f,c
 20263  017544  E314               	bnc	u6310
 20264  017546  0EF7               	movlw	-9
 20265  017548  2AE3               	incf	plusw1,f,c
 20266  01754A  E311               	bnc	u6310
 20267  01754C  0EF8               	movlw	-8
 20268  01754E  2AE3               	incf	plusw1,f,c
 20269  017550  E30E               	bnc	u6310
 20270  017552  0EF9               	movlw	-7
 20271  017554  2AE3               	incf	plusw1,f,c
 20272  017556  E30B               	bnc	u6310
 20273  017558  0EFA               	movlw	-6
 20274  01755A  2AE3               	incf	plusw1,f,c
 20275  01755C  E308               	bnc	u6310
 20276  01755E  0EFB               	movlw	-5
 20277  017560  2AE3               	incf	plusw1,f,c
 20278  017562  E305               	bnc	u6310
 20279  017564  0EFC               	movlw	-4
 20280  017566  2AE3               	incf	plusw1,f,c
 20281  017568  E302               	bnc	u6310
 20282  01756A  0EFD               	movlw	-3
 20283  01756C  2AE3               	incf	plusw1,f,c
 20284  01756E                     u6310:
 20285                           
 20286                           ;stkvar	_dividend @ sp[(-2)+-8]
 20287  01756E  0EF6               	movlw	246
 20288  017570  24E1               	addwf	fsr1l,w,c
 20289  017572  6ED9               	movwf	fsr2l,c
 20290  017574  0EFF               	movlw	255
 20291  017576  20E2               	addwfc	fsr1h,w,c
 20292  017578  6EDA               	movwf	fsr2h,c
 20293                           
 20294                           ;stkvar	?___aomod @ sp[(-2)+-8]
 20295  01757A  0E08               	movlw	8
 20296  01757C  6E26               	movwf	btemp^0,c
 20297  01757E  0EF6               	movlw	-10
 20298  017580                     us632999:
 20299  017580  006F FF7B FFE3     	movff	postinc2,plusw1
 20300  017586  28E8               	incf	wreg,w,c
 20301  017588  2E26               	decfsz	btemp^0,f,c
 20302  01758A  D7FA               	bra	us632999
 20303                           
 20304                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 20305  01758C  52E5               	movf	postdec1,f,c
 20306  01758E  52E5               	movf	postdec1,f,c
 20307  017590  0012               	return		;funcret
 20308  017592                     __end_of___aomod:
 20309                           	opt callstack 0
 20310                           
 20311 ;; *************** function ___aodiv *****************
 20312 ;; Defined at:
 20313 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 20314 ;; Parameters:    Size  Location     Type
 20315 ;;  dividend        8  [STACK] long long 
 20316 ;;  divisor         8  [STACK] long long 
 20317 ;; Auto vars:     Size  Location     Type
 20318 ;;  quotient        8  [STACK] long long 
 20319 ;;  sign            1  [STACK] unsigned char 
 20320 ;;  counter         1  [STACK] unsigned char 
 20321 ;; Return value:  Size  Location     Type
 20322 ;;                  8  [STACK] long long 
 20323 ;; Registers used:
 20324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20325 ;; Tracked objects:
 20326 ;;		On entry : 0/3
 20327 ;;		On exit  : 0/0
 20328 ;;		Unchanged: 0/0
 20329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20334 ;;Total ram usage:        0 bytes
 20335 ;; Hardware stack levels used:    1
 20336 ;; Hardware stack levels required when called:   15
 20337 ;; This function calls:
 20338 ;;		Nothing
 20339 ;; This function is called by:
 20340 ;;		_dtoa
 20341 ;; This function uses a reentrant model
 20342 ;;
 20343                           
 20344                           	psect	text69
 20345  016E5E                     __ptext69:
 20346                           	opt callstack 0
 20347  016E5E                     ___aodiv:
 20348                           	opt callstack 0
 20349                           
 20350                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 20351  016E5E  0E0A               	movlw	10
 20352  016E60  26E1               	addwf	fsr1l,f,c
 20353  016E62  0E00               	movlw	0
 20354  016E64  22E2               	addwfc	fsr1h,f,c
 20355                           
 20356                           ;stkvar	_sign @ sp[(-10)+8]
 20357                           
 20358                           ;incstack = 0
 20359 ;; hardware stack exceeded
 20360  016E66  0EFE               	movlw	-2
 20361  016E68  6AE3               	clrf	plusw1,c
 20362                           
 20363                           ;stkvar	_divisor @ sp[(-10)+-16]
 20364  016E6A  0EED               	movlw	-19
 20365  016E6C  AEE3               	btfss	plusw1,7,c
 20366  016E6E  D028               	goto	l7919
 20367                           
 20368                           ;stkvar	_divisor @ sp[(-10)+-16]
 20369                           ;stkvar	_divisor @ sp[(-10)+-16]
 20370  016E70  0EE6               	movlw	-26
 20371  016E72  6CE3               	negf	plusw1,c
 20372  016E74  0EE7               	movlw	-25
 20373  016E76  1EE3               	comf	plusw1,f,c
 20374  016E78  0EE8               	movlw	-24
 20375  016E7A  1EE3               	comf	plusw1,f,c
 20376  016E7C  0EE9               	movlw	-23
 20377  016E7E  1EE3               	comf	plusw1,f,c
 20378  016E80  0EEA               	movlw	-22
 20379  016E82  1EE3               	comf	plusw1,f,c
 20380  016E84  0EEB               	movlw	-21
 20381  016E86  1EE3               	comf	plusw1,f,c
 20382  016E88  0EEC               	movlw	-20
 20383  016E8A  1EE3               	comf	plusw1,f,c
 20384  016E8C  0EED               	movlw	-19
 20385  016E8E  1EE3               	comf	plusw1,f,c
 20386  016E90  E314               	bnc	u6110
 20387  016E92  0EE7               	movlw	-25
 20388  016E94  2AE3               	incf	plusw1,f,c
 20389  016E96  E311               	bnc	u6110
 20390  016E98  0EE8               	movlw	-24
 20391  016E9A  2AE3               	incf	plusw1,f,c
 20392  016E9C  E30E               	bnc	u6110
 20393  016E9E  0EE9               	movlw	-23
 20394  016EA0  2AE3               	incf	plusw1,f,c
 20395  016EA2  E30B               	bnc	u6110
 20396  016EA4  0EEA               	movlw	-22
 20397  016EA6  2AE3               	incf	plusw1,f,c
 20398  016EA8  E308               	bnc	u6110
 20399  016EAA  0EEB               	movlw	-21
 20400  016EAC  2AE3               	incf	plusw1,f,c
 20401  016EAE  E305               	bnc	u6110
 20402  016EB0  0EEC               	movlw	-20
 20403  016EB2  2AE3               	incf	plusw1,f,c
 20404  016EB4  E302               	bnc	u6110
 20405  016EB6  0EED               	movlw	-19
 20406  016EB8  2AE3               	incf	plusw1,f,c
 20407  016EBA                     u6110:
 20408                           
 20409                           ;stkvar	_sign @ sp[(-10)+8]
 20410  016EBA  0EFE               	movlw	-2
 20411  016EBC  6AE3               	clrf	plusw1,c
 20412  016EBE  2AE3               	incf	plusw1,f,c
 20413  016EC0                     l7919:
 20414                           
 20415                           ;stkvar	_dividend @ sp[(-10)+-8]
 20416  016EC0  0EF5               	movlw	-11
 20417  016EC2  AEE3               	btfss	plusw1,7,c
 20418  016EC4  D027               	goto	l7925
 20419                           
 20420                           ;stkvar	_dividend @ sp[(-10)+-8]
 20421                           ;stkvar	_dividend @ sp[(-10)+-8]
 20422  016EC6  0EEE               	movlw	-18
 20423  016EC8  6CE3               	negf	plusw1,c
 20424  016ECA  0EEF               	movlw	-17
 20425  016ECC  1EE3               	comf	plusw1,f,c
 20426  016ECE  0EF0               	movlw	-16
 20427  016ED0  1EE3               	comf	plusw1,f,c
 20428  016ED2  0EF1               	movlw	-15
 20429  016ED4  1EE3               	comf	plusw1,f,c
 20430  016ED6  0EF2               	movlw	-14
 20431  016ED8  1EE3               	comf	plusw1,f,c
 20432  016EDA  0EF3               	movlw	-13
 20433  016EDC  1EE3               	comf	plusw1,f,c
 20434  016EDE  0EF4               	movlw	-12
 20435  016EE0  1EE3               	comf	plusw1,f,c
 20436  016EE2  0EF5               	movlw	-11
 20437  016EE4  1EE3               	comf	plusw1,f,c
 20438  016EE6  E314               	bnc	u6130
 20439  016EE8  0EEF               	movlw	-17
 20440  016EEA  2AE3               	incf	plusw1,f,c
 20441  016EEC  E311               	bnc	u6130
 20442  016EEE  0EF0               	movlw	-16
 20443  016EF0  2AE3               	incf	plusw1,f,c
 20444  016EF2  E30E               	bnc	u6130
 20445  016EF4  0EF1               	movlw	-15
 20446  016EF6  2AE3               	incf	plusw1,f,c
 20447  016EF8  E30B               	bnc	u6130
 20448  016EFA  0EF2               	movlw	-14
 20449  016EFC  2AE3               	incf	plusw1,f,c
 20450  016EFE  E308               	bnc	u6130
 20451  016F00  0EF3               	movlw	-13
 20452  016F02  2AE3               	incf	plusw1,f,c
 20453  016F04  E305               	bnc	u6130
 20454  016F06  0EF4               	movlw	-12
 20455  016F08  2AE3               	incf	plusw1,f,c
 20456  016F0A  E302               	bnc	u6130
 20457  016F0C  0EF5               	movlw	-11
 20458  016F0E  2AE3               	incf	plusw1,f,c
 20459  016F10                     u6130:
 20460                           
 20461                           ;stkvar	_sign @ sp[(-10)+8]
 20462  016F10  0EFE               	movlw	-2
 20463  016F12  70E3               	btg	plusw1,0,c
 20464  016F14                     l7925:
 20465                           
 20466                           ;stkvar	_quotient @ sp[(-10)+0]
 20467  016F14  0E07               	movlw	7
 20468  016F16  6E26               	movwf	btemp^0,c
 20469  016F18  0EF6               	movlw	-10
 20470  016F1A                     u6141:
 20471  016F1A  6AE3               	clrf	plusw1,c
 20472  016F1C  2AE8               	incf	wreg,f,c
 20473  016F1E  0626               	decf	btemp^0,f,c
 20474  016F20  E2FC               	bc	u6141
 20475                           
 20476                           ;stkvar	_divisor @ sp[(-10)+-16]
 20477  016F22  0EE6               	movlw	-26
 20478  016F24  50E3               	movf	plusw1,w,c
 20479  016F26  E116               	bnz	u6150
 20480  016F28  0EE7               	movlw	-25
 20481  016F2A  50E3               	movf	plusw1,w,c
 20482  016F2C  E113               	bnz	u6150
 20483  016F2E  0EE8               	movlw	-24
 20484  016F30  50E3               	movf	plusw1,w,c
 20485  016F32  E110               	bnz	u6150
 20486  016F34  0EE9               	movlw	-23
 20487  016F36  50E3               	movf	plusw1,w,c
 20488  016F38  E10D               	bnz	u6150
 20489  016F3A  0EEA               	movlw	-22
 20490  016F3C  50E3               	movf	plusw1,w,c
 20491  016F3E  E10A               	bnz	u6150
 20492  016F40  0EEB               	movlw	-21
 20493  016F42  50E3               	movf	plusw1,w,c
 20494  016F44  E107               	bnz	u6150
 20495  016F46  0EEC               	movlw	-20
 20496  016F48  50E3               	movf	plusw1,w,c
 20497  016F4A  E104               	bnz	u6150
 20498  016F4C  0EED               	movlw	-19
 20499  016F4E  50E3               	movf	plusw1,w,c
 20500  016F50  B4D8               	btfsc	status,2,c
 20501  016F52  D088               	goto	u6180
 20502  016F54                     u6150:
 20503                           
 20504                           ;stkvar	_counter @ sp[(-10)+9]
 20505  016F54  0EFF               	movlw	-1
 20506  016F56  6AE3               	clrf	plusw1,c
 20507  016F58  D012               	goto	L24
 20508  016F5A                     l7931:
 20509                           
 20510                           ;stkvar	_divisor @ sp[(-10)+-16]
 20511  016F5A  90D8               	bcf	status,0,c
 20512  016F5C  0EE6               	movlw	-26
 20513  016F5E  36E3               	rlcf	plusw1,f,c
 20514  016F60  0EE7               	movlw	-25
 20515  016F62  36E3               	rlcf	plusw1,f,c
 20516  016F64  0EE8               	movlw	-24
 20517  016F66  36E3               	rlcf	plusw1,f,c
 20518  016F68  0EE9               	movlw	-23
 20519  016F6A  36E3               	rlcf	plusw1,f,c
 20520  016F6C  0EEA               	movlw	-22
 20521  016F6E  36E3               	rlcf	plusw1,f,c
 20522  016F70  0EEB               	movlw	-21
 20523  016F72  36E3               	rlcf	plusw1,f,c
 20524  016F74  0EEC               	movlw	-20
 20525  016F76  36E3               	rlcf	plusw1,f,c
 20526  016F78  0EED               	movlw	-19
 20527  016F7A  36E3               	rlcf	plusw1,f,c
 20528                           
 20529                           ;stkvar	_counter @ sp[(-10)+9]
 20530  016F7C  0EFF               	movlw	-1
 20531  016F7E                     L24:
 20532  016F7E  2AE3               	incf	plusw1,f,c
 20533                           
 20534                           ;stkvar	_divisor @ sp[(-10)+-16]
 20535  016F80  0EED               	movlw	-19
 20536  016F82  AEE3               	btfss	plusw1,7,c
 20537  016F84  D7EA               	goto	l7931
 20538  016F86                     u6160:
 20539                           
 20540                           ;stkvar	_quotient @ sp[(-10)+0]
 20541  016F86  90D8               	bcf	status,0,c
 20542  016F88  0EF6               	movlw	-10
 20543  016F8A  36E3               	rlcf	plusw1,f,c
 20544  016F8C  0EF7               	movlw	-9
 20545  016F8E  36E3               	rlcf	plusw1,f,c
 20546  016F90  0EF8               	movlw	-8
 20547  016F92  36E3               	rlcf	plusw1,f,c
 20548  016F94  0EF9               	movlw	-7
 20549  016F96  36E3               	rlcf	plusw1,f,c
 20550  016F98  0EFA               	movlw	-6
 20551  016F9A  36E3               	rlcf	plusw1,f,c
 20552  016F9C  0EFB               	movlw	-5
 20553  016F9E  36E3               	rlcf	plusw1,f,c
 20554  016FA0  0EFC               	movlw	-4
 20555  016FA2  36E3               	rlcf	plusw1,f,c
 20556  016FA4  0EFD               	movlw	-3
 20557  016FA6  36E3               	rlcf	plusw1,f,c
 20558                           
 20559                           ;stkvar	_divisor @ sp[(-10)+-16]
 20560                           ;stkvar	_dividend @ sp[(-10)+-8]
 20561  016FA8  50E1               	movf	fsr1l,w,c
 20562  016FAA  0FEE               	addlw	-18
 20563  016FAC  6ED9               	movwf	fsr2l,c
 20564  016FAE  50E2               	movf	fsr1h,w,c
 20565  016FB0  6EDA               	movwf	fsr2h,c
 20566  016FB2  0EFF               	movlw	255
 20567  016FB4  22DA               	addwfc	fsr2h,f,c
 20568  016FB6  0EE6               	movlw	-26
 20569  016FB8  50E3               	movf	plusw1,w,c
 20570  016FBA  5CDE               	subwf	postinc2,w,c
 20571  016FBC  0EE7               	movlw	-25
 20572  016FBE  50E3               	movf	plusw1,w,c
 20573  016FC0  58DE               	subwfb	postinc2,w,c
 20574  016FC2  0EE8               	movlw	-24
 20575  016FC4  50E3               	movf	plusw1,w,c
 20576  016FC6  58DE               	subwfb	postinc2,w,c
 20577  016FC8  0EE9               	movlw	-23
 20578  016FCA  50E3               	movf	plusw1,w,c
 20579  016FCC  58DE               	subwfb	postinc2,w,c
 20580  016FCE  0EEA               	movlw	-22
 20581  016FD0  50E3               	movf	plusw1,w,c
 20582  016FD2  58DE               	subwfb	postinc2,w,c
 20583  016FD4  0EEB               	movlw	-21
 20584  016FD6  50E3               	movf	plusw1,w,c
 20585  016FD8  58DE               	subwfb	postinc2,w,c
 20586  016FDA  0EEC               	movlw	-20
 20587  016FDC  50E3               	movf	plusw1,w,c
 20588  016FDE  58DE               	subwfb	postinc2,w,c
 20589  016FE0  0EED               	movlw	-19
 20590  016FE2  50E3               	movf	plusw1,w,c
 20591  016FE4  58DE               	subwfb	postinc2,w,c
 20592  016FE6  A0D8               	btfss	status,0,c
 20593  016FE8  D021               	goto	l7943
 20594                           
 20595                           ;stkvar	_divisor @ sp[(-10)+-16]
 20596                           ;stkvar	_dividend @ sp[(-10)+-8]
 20597  016FEA  50E1               	movf	fsr1l,w,c
 20598  016FEC  0FEE               	addlw	-18
 20599  016FEE  6ED9               	movwf	fsr2l,c
 20600  016FF0  50E2               	movf	fsr1h,w,c
 20601  016FF2  6EDA               	movwf	fsr2h,c
 20602  016FF4  0EFF               	movlw	255
 20603  016FF6  22DA               	addwfc	fsr2h,f,c
 20604  016FF8  0EE6               	movlw	-26
 20605  016FFA  50E3               	movf	plusw1,w,c
 20606  016FFC  5EDE               	subwf	postinc2,f,c
 20607  016FFE  0EE7               	movlw	-25
 20608  017000  50E3               	movf	plusw1,w,c
 20609  017002  5ADE               	subwfb	postinc2,f,c
 20610  017004  0EE8               	movlw	-24
 20611  017006  50E3               	movf	plusw1,w,c
 20612  017008  5ADE               	subwfb	postinc2,f,c
 20613  01700A  0EE9               	movlw	-23
 20614  01700C  50E3               	movf	plusw1,w,c
 20615  01700E  5ADE               	subwfb	postinc2,f,c
 20616  017010  0EEA               	movlw	-22
 20617  017012  50E3               	movf	plusw1,w,c
 20618  017014  5ADE               	subwfb	postinc2,f,c
 20619  017016  0EEB               	movlw	-21
 20620  017018  50E3               	movf	plusw1,w,c
 20621  01701A  5ADE               	subwfb	postinc2,f,c
 20622  01701C  0EEC               	movlw	-20
 20623  01701E  50E3               	movf	plusw1,w,c
 20624  017020  5ADE               	subwfb	postinc2,f,c
 20625  017022  0EED               	movlw	-19
 20626  017024  50E3               	movf	plusw1,w,c
 20627  017026  5ADE               	subwfb	postinc2,f,c
 20628                           
 20629                           ;stkvar	_quotient @ sp[(-10)+0]
 20630  017028  0EF6               	movlw	-10
 20631  01702A  80E3               	bsf	plusw1,0,c
 20632  01702C                     l7943:
 20633                           
 20634                           ;stkvar	_divisor @ sp[(-10)+-16]
 20635  01702C  90D8               	bcf	status,0,c
 20636  01702E  0EED               	movlw	-19
 20637  017030  32E3               	rrcf	plusw1,f,c
 20638  017032  0EEC               	movlw	-20
 20639  017034  32E3               	rrcf	plusw1,f,c
 20640  017036  0EEB               	movlw	-21
 20641  017038  32E3               	rrcf	plusw1,f,c
 20642  01703A  0EEA               	movlw	-22
 20643  01703C  32E3               	rrcf	plusw1,f,c
 20644  01703E  0EE9               	movlw	-23
 20645  017040  32E3               	rrcf	plusw1,f,c
 20646  017042  0EE8               	movlw	-24
 20647  017044  32E3               	rrcf	plusw1,f,c
 20648  017046  0EE7               	movlw	-25
 20649  017048  32E3               	rrcf	plusw1,f,c
 20650  01704A  0EE6               	movlw	-26
 20651  01704C  32E3               	rrcf	plusw1,f,c
 20652                           
 20653                           ;stkvar	_counter @ sp[(-10)+9]
 20654  01704E  0EFF               	movlw	-1
 20655  017050  50E3               	movf	plusw1,w,c
 20656  017052  6E26               	movwf	btemp^0,c
 20657  017054  0E01               	movlw	1
 20658  017056  5E26               	subwf	btemp^0,f,c
 20659  017058  0EFF               	movlw	-1
 20660  01705A  0060  F09B  FFE3   	movff	btemp,plusw1
 20661  017060  A4D8               	btfss	status,2,c
 20662  017062  D791               	goto	u6160
 20663  017064                     u6180:
 20664                           
 20665                           ;stkvar	_sign @ sp[(-10)+8]
 20666  017064  0EFE               	movlw	-2
 20667  017066  50E3               	movf	plusw1,w,c
 20668  017068  B4D8               	btfsc	status,2,c
 20669  01706A  D025               	goto	u6200
 20670                           
 20671                           ;stkvar	_quotient @ sp[(-10)+0]
 20672                           ;stkvar	_quotient @ sp[(-10)+0]
 20673  01706C  0EF6               	movlw	-10
 20674  01706E  6CE3               	negf	plusw1,c
 20675  017070  0EF7               	movlw	-9
 20676  017072  1EE3               	comf	plusw1,f,c
 20677  017074  0EF8               	movlw	-8
 20678  017076  1EE3               	comf	plusw1,f,c
 20679  017078  0EF9               	movlw	-7
 20680  01707A  1EE3               	comf	plusw1,f,c
 20681  01707C  0EFA               	movlw	-6
 20682  01707E  1EE3               	comf	plusw1,f,c
 20683  017080  0EFB               	movlw	-5
 20684  017082  1EE3               	comf	plusw1,f,c
 20685  017084  0EFC               	movlw	-4
 20686  017086  1EE3               	comf	plusw1,f,c
 20687  017088  0EFD               	movlw	-3
 20688  01708A  1EE3               	comf	plusw1,f,c
 20689  01708C  E314               	bnc	u6200
 20690  01708E  0EF7               	movlw	-9
 20691  017090  2AE3               	incf	plusw1,f,c
 20692  017092  E311               	bnc	u6200
 20693  017094  0EF8               	movlw	-8
 20694  017096  2AE3               	incf	plusw1,f,c
 20695  017098  E30E               	bnc	u6200
 20696  01709A  0EF9               	movlw	-7
 20697  01709C  2AE3               	incf	plusw1,f,c
 20698  01709E  E30B               	bnc	u6200
 20699  0170A0  0EFA               	movlw	-6
 20700  0170A2  2AE3               	incf	plusw1,f,c
 20701  0170A4  E308               	bnc	u6200
 20702  0170A6  0EFB               	movlw	-5
 20703  0170A8  2AE3               	incf	plusw1,f,c
 20704  0170AA  E305               	bnc	u6200
 20705  0170AC  0EFC               	movlw	-4
 20706  0170AE  2AE3               	incf	plusw1,f,c
 20707  0170B0  E302               	bnc	u6200
 20708  0170B2  0EFD               	movlw	-3
 20709  0170B4  2AE3               	incf	plusw1,f,c
 20710  0170B6                     u6200:
 20711                           
 20712                           ;stkvar	_quotient @ sp[(-10)+0]
 20713  0170B6  0EF6               	movlw	246
 20714  0170B8  24E1               	addwf	fsr1l,w,c
 20715  0170BA  6ED9               	movwf	fsr2l,c
 20716  0170BC  0EFF               	movlw	255
 20717  0170BE  20E2               	addwfc	fsr1h,w,c
 20718  0170C0  6EDA               	movwf	fsr2h,c
 20719                           
 20720                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 20721  0170C2  0E08               	movlw	8
 20722  0170C4  6E26               	movwf	btemp^0,c
 20723  0170C6  0EEE               	movlw	-18
 20724  0170C8                     us621999:
 20725  0170C8  006F FF7B FFE3     	movff	postinc2,plusw1
 20726  0170CE  28E8               	incf	wreg,w,c
 20727  0170D0  2E26               	decfsz	btemp^0,f,c
 20728  0170D2  D7FA               	bra	us621999
 20729                           
 20730                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 20731  0170D4  0EF6               	movlw	246
 20732  0170D6  26E1               	addwf	fsr1l,f,c
 20733  0170D8  0EFF               	movlw	255
 20734  0170DA  22E2               	addwfc	fsr1h,f,c
 20735  0170DC  0012               	return		;funcret
 20736  0170DE                     __end_of___aodiv:
 20737                           	opt callstack 0
 20738                           
 20739 ;; *************** function _ctoa *****************
 20740 ;; Defined at:
 20741 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20742 ;; Parameters:    Size  Location     Type
 20743 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20744 ;;		 -> f(6), NULL(0), 
 20745 ;;  c               1  [STACK] unsigned char 
 20746 ;; Auto vars:     Size  Location     Type
 20747 ;;  w               2  [STACK] int 
 20748 ;;  l               2    0        int 
 20749 ;; Return value:  Size  Location     Type
 20750 ;;                  2  [STACK] int 
 20751 ;; Registers used:
 20752 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20753 ;; Tracked objects:
 20754 ;;		On entry : 0/0
 20755 ;;		On exit  : 0/0
 20756 ;;		Unchanged: 0/0
 20757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20762 ;;Total ram usage:        0 bytes
 20763 ;; Hardware stack levels used:    1
 20764 ;; Hardware stack levels required when called:   20
 20765 ;; This function calls:
 20766 ;;		_pad
 20767 ;; This function is called by:
 20768 ;;		_vfpfcnvrt
 20769 ;; This function uses a reentrant model
 20770 ;;
 20771                           
 20772                           	psect	text70
 20773  01A3D0                     __ptext70:
 20774                           	opt callstack 0
 20775  01A3D0                     _ctoa:
 20776                           	opt callstack 0
 20777                           
 20778                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20779  01A3D0  52E6               	movf	postinc1,f,c
 20780  01A3D2  52E6               	movf	postinc1,f,c
 20781                           
 20782                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 20783                           
 20784                           ;incstack = 0
 20785 ;; hardware stack exceeded
 20786  01A3D4  500A               	movf	_width^0,w,c
 20787  01A3D6  100B               	iorwf	(_width+1)^0,w,c
 20788  01A3D8  A4D8               	btfss	status,2,c
 20789  01A3DA  D009               	goto	l11561
 20790                           
 20791                           ;stkvar	_w @ sp[(-2)+0]
 20792  01A3DC  0EFE               	movlw	-2
 20793  01A3DE  0060  F02B  FFE3   	movff	_width,plusw1
 20794  01A3E4  0EFF               	movlw	-1
 20795  01A3E6  0060  F02F  FFE3   	movff	_width+1,plusw1
 20796  01A3EC  D016               	goto	l11563
 20797  01A3EE                     l11561:
 20798  01A3EE  0EFF               	movlw	255
 20799  01A3F0  6E30               	movwf	(btemp+10)^0,c
 20800  01A3F2  0EFF               	movlw	255
 20801  01A3F4  6E31               	movwf	(btemp+11)^0,c
 20802  01A3F6  0060  F028  F02E   	movff	_width,btemp+8
 20803  01A3FC  0060  F02C  F02F   	movff	_width+1,btemp+9
 20804  01A402  5030               	movf	(btemp+10)^0,w,c
 20805  01A404  262E               	addwf	(btemp+8)^0,f,c
 20806  01A406  5031               	movf	(btemp+11)^0,w,c
 20807  01A408  222F               	addwfc	(btemp+9)^0,f,c
 20808                           
 20809                           ;stkvar	_w @ sp[(-2)+0]
 20810  01A40A  0EFE               	movlw	-2
 20811  01A40C  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 20812  01A412  0EFF               	movlw	-1
 20813  01A414  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 20814  01A41A                     l11563:
 20815                           
 20816                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 20817                           ;stkvar	_c @ sp[(-2)+-3]
 20818  01A41A  0EFB               	movlw	-5
 20819  01A41C  006F FF8C  F3AE    	movff	plusw1,_dbuf
 20820                           
 20821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 20822  01A422  0103               	movlb	3	; () banked
 20823  01A424  6BAF               	clrf	(_dbuf+1)& (0+255),b
 20824                           
 20825                           ; BSR set to: 3
 20826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 20827                           ;stkvar	_w @ sp[(-2)+0]
 20828  01A426  0EFE               	movlw	-2
 20829  01A428  006F FF8F FFE6     	movff	plusw1,postinc1
 20830  01A42E  006F FF8F FFE6     	movff	plusw1,postinc1
 20831  01A434  0EAE               	movlw	low _dbuf
 20832  01A436  6EE6               	movwf	postinc1,c
 20833  01A438  0E03               	movlw	high _dbuf
 20834  01A43A  6EE6               	movwf	postinc1,c
 20835                           
 20836                           ;stkvar	_fp @ sp[(-6)+-2]
 20837  01A43C  0EF8               	movlw	-8
 20838  01A43E  006F FF8F FFE6     	movff	plusw1,postinc1
 20839  01A444  006F FF8F FFE6     	movff	plusw1,postinc1
 20840  01A44A  EC75  F0C8         	call	_pad	;wreg free
 20841                           
 20842                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 20843  01A44E  0EFB               	movlw	251
 20844  01A450  26E1               	addwf	fsr1l,f,c
 20845  01A452  0EFF               	movlw	255
 20846  01A454  22E2               	addwfc	fsr1h,f,c
 20847  01A456  0012               	return		;funcret
 20848  01A458                     __end_of_ctoa:
 20849                           	opt callstack 0
 20850                           
 20851 ;; *************** function _pad *****************
 20852 ;; Defined at:
 20853 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20854 ;; Parameters:    Size  Location     Type
 20855 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20856 ;;		 -> f(6), NULL(0), 
 20857 ;;  buf             2  [STACK] PTR unsigned char 
 20858 ;;		 -> dbuf(80), 
 20859 ;;  p               2  [STACK] int 
 20860 ;; Auto vars:     Size  Location     Type
 20861 ;;  w               2  [STACK] int 
 20862 ;;  i               2  [STACK] int 
 20863 ;; Return value:  Size  Location     Type
 20864 ;;                  2  [STACK] int 
 20865 ;; Registers used:
 20866 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20867 ;; Tracked objects:
 20868 ;;		On entry : 0/3
 20869 ;;		On exit  : 0/0
 20870 ;;		Unchanged: 0/0
 20871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20876 ;;Total ram usage:        0 bytes
 20877 ;; Hardware stack levels used:    1
 20878 ;; Hardware stack levels required when called:   19
 20879 ;; This function calls:
 20880 ;;		_fputc
 20881 ;;		_fputs
 20882 ;;		_strlen
 20883 ;; This function is called by:
 20884 ;;		_ctoa
 20885 ;;		_dtoa
 20886 ;;		_efgtoa
 20887 ;;		_utoa
 20888 ;;		_xtoa
 20889 ;; This function uses a reentrant model
 20890 ;;
 20891                           
 20892                           	psect	text71
 20893  0190EA                     __ptext71:
 20894                           	opt callstack 0
 20895  0190EA                     _pad:
 20896                           	opt callstack 0
 20897                           
 20898                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20899  0190EA  52E6               	movf	postinc1,f,c
 20900  0190EC  52E6               	movf	postinc1,f,c
 20901  0190EE  52E6               	movf	postinc1,f,c
 20902  0190F0  52E6               	movf	postinc1,f,c
 20903                           
 20904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 20905                           
 20906                           ;incstack = 0
 20907 ;; hardware stack exceeded
 20908  0190F2  A00E               	btfss	_flags^0,0,c
 20909  0190F4  D010               	goto	l11493
 20910                           
 20911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 20912                           ;stkvar	_fp @ sp[(-4)+-2]
 20913  0190F6  0EFA               	movlw	-6
 20914  0190F8  006F FF8F FFE6     	movff	plusw1,postinc1
 20915  0190FE  006F FF8F FFE6     	movff	plusw1,postinc1
 20916                           
 20917                           ;stkvar	_buf @ sp[(-6)+-4]
 20918  019104  0EF6               	movlw	-10
 20919  019106  006F FF8F FFE6     	movff	plusw1,postinc1
 20920  01910C  006F FF8F FFE6     	movff	plusw1,postinc1
 20921  019112  EC78  F0D0         	call	_fputs	;wreg free
 20922  019116                     l11493:
 20923                           
 20924                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 20925                           ;stkvar	_p @ sp[(-4)+-6]
 20926  019116  0EF7               	movlw	-9
 20927  019118  BEE3               	btfsc	plusw1,7,c
 20928  01911A  D011               	goto	l11497
 20929                           
 20930                           ;stkvar	_p @ sp[(-4)+-6]
 20931                           ;stkvar	_w @ sp[(-4)+0]
 20932  01911C  0EF6               	movlw	-10
 20933  01911E  006F FF8C  F026    	movff	plusw1,btemp
 20934  019124  0EFC               	movlw	-4
 20935  019126  0060  F09B  FFE3   	movff	btemp,plusw1
 20936  01912C  0EF7               	movlw	-9
 20937  01912E  006F FF8C  F026    	movff	plusw1,btemp
 20938  019134  0EFD               	movlw	-3
 20939  019136  0060  F09B  FFE3   	movff	btemp,plusw1
 20940  01913C  D004               	goto	l2123
 20941  01913E                     l11497:
 20942                           
 20943                           ;stkvar	_w @ sp[(-4)+0]
 20944  01913E  0EFC               	movlw	-4
 20945  019140  6AE3               	clrf	plusw1,c
 20946  019142  0EFD               	movlw	-3
 20947  019144  6AE3               	clrf	plusw1,c
 20948  019146                     l2123:
 20949                           
 20950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 20951                           ;stkvar	_i @ sp[(-4)+2]
 20952  019146  0EFE               	movlw	-2
 20953  019148  6AE3               	clrf	plusw1,c
 20954  01914A  0EFF               	movlw	-1
 20955  01914C  6AE3               	clrf	plusw1,c
 20956                           
 20957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20958  01914E  D01E               	goto	l11503
 20959  019150                     l11499:
 20960                           
 20961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 20962                           ;stkvar	_fp @ sp[(-4)+-2]
 20963  019150  0EFA               	movlw	-6
 20964  019152  006F FF8F FFE6     	movff	plusw1,postinc1
 20965  019158  006F FF8F FFE6     	movff	plusw1,postinc1
 20966  01915E  0E20               	movlw	32
 20967  019160  6EE6               	movwf	postinc1,c
 20968  019162  0E00               	movlw	0
 20969  019164  6EE6               	movwf	postinc1,c
 20970  019166  EC57  F0C7         	call	_fputc	;wreg free
 20971                           
 20972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 20973                           ;stkvar	_i @ sp[(-4)+2]
 20974  01916A  0EFE               	movlw	-2
 20975  01916C  50E3               	movf	plusw1,w,c
 20976  01916E  0F01               	addlw	1
 20977  019170  6E26               	movwf	btemp^0,c
 20978  019172  0EFE               	movlw	-2
 20979  019174  0060  F09B  FFE3   	movff	btemp,plusw1
 20980  01917A  6A26               	clrf	btemp^0,c
 20981  01917C  0EFF               	movlw	-1
 20982  01917E  50E3               	movf	plusw1,w,c
 20983  019180  2026               	addwfc	btemp^0,w,c
 20984  019182  6E26               	movwf	btemp^0,c
 20985  019184  0EFF               	movlw	-1
 20986  019186  0060  F09B  FFE3   	movff	btemp,plusw1
 20987  01918C                     l11503:
 20988                           
 20989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20990                           ;stkvar	_w @ sp[(-4)+0]
 20991                           ;stkvar	_i @ sp[(-4)+2]
 20992  01918C  50E1               	movf	fsr1l,w,c
 20993  01918E  0FFE               	addlw	-2
 20994  019190  6ED9               	movwf	fsr2l,c
 20995  019192  50E2               	movf	fsr1h,w,c
 20996  019194  6EDA               	movwf	fsr2h,c
 20997  019196  0EFF               	movlw	255
 20998  019198  22DA               	addwfc	fsr2h,f,c
 20999  01919A  0EFC               	movlw	-4
 21000  01919C  50E3               	movf	plusw1,w,c
 21001  01919E  5CDE               	subwf	postinc2,w,c
 21002  0191A0  50DE               	movf	postinc2,w,c
 21003  0191A2  0A80               	xorlw	128
 21004  0191A4  6E26               	movwf	btemp^0,c
 21005  0191A6  0EFD               	movlw	-3
 21006  0191A8  50E3               	movf	plusw1,w,c
 21007  0191AA  0A80               	xorlw	128
 21008  0191AC  5826               	subwfb	btemp^0,w,c
 21009  0191AE  A0D8               	btfss	status,0,c
 21010  0191B0  D7CF               	goto	l11499
 21011                           
 21012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 21013  0191B2  B00E               	btfsc	_flags^0,0,c
 21014  0191B4  D010               	goto	l11507
 21015                           
 21016                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 21017                           ;stkvar	_fp @ sp[(-4)+-2]
 21018  0191B6  0EFA               	movlw	-6
 21019  0191B8  006F FF8F FFE6     	movff	plusw1,postinc1
 21020  0191BE  006F FF8F FFE6     	movff	plusw1,postinc1
 21021                           
 21022                           ;stkvar	_buf @ sp[(-6)+-4]
 21023  0191C4  0EF6               	movlw	-10
 21024  0191C6  006F FF8F FFE6     	movff	plusw1,postinc1
 21025  0191CC  006F FF8F FFE6     	movff	plusw1,postinc1
 21026  0191D2  EC78  F0D0         	call	_fputs	;wreg free
 21027  0191D6                     l11507:
 21028                           
 21029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 21030                           ;stkvar	_w @ sp[(-4)+0]
 21031                           ;stkvar	_buf @ sp[(-4)+-4]
 21032  0191D6  0EF8               	movlw	-8
 21033  0191D8  006F FF8F FFE6     	movff	plusw1,postinc1
 21034  0191DE  006F FF8F FFE6     	movff	plusw1,postinc1
 21035  0191E4  EC27  F0D0         	call	_strlen	;wreg free
 21036  0191E8  0EFC               	movlw	-4
 21037  0191EA  50E3               	movf	plusw1,w,c
 21038  0191EC  2626               	addwf	btemp^0,f,c
 21039  0191EE  0EFD               	movlw	-3
 21040  0191F0  50E3               	movf	plusw1,w,c
 21041  0191F2  2227               	addwfc	(btemp+1)^0,f,c
 21042                           
 21043                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 21044  0191F4  0EF6               	movlw	246
 21045  0191F6  26E1               	addwf	fsr1l,f,c
 21046  0191F8  0EFF               	movlw	255
 21047  0191FA  22E2               	addwfc	fsr1h,f,c
 21048  0191FC  0012               	return		;funcret
 21049  0191FE                     __end_of_pad:
 21050                           	opt callstack 0
 21051                           
 21052 ;; *************** function _strlen *****************
 21053 ;; Defined at:
 21054 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 21055 ;; Parameters:    Size  Location     Type
 21056 ;;  s               2  [STACK] PTR const unsigned char 
 21057 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21058 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(480), 
 21059 ;;		 -> D(482), T(144), port_data(512), STR_3(6), 
 21060 ;;		 -> V(190), 
 21061 ;; Auto vars:     Size  Location     Type
 21062 ;;  a               2  [STACK] PTR const unsigned char 
 21063 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21064 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(480), 
 21065 ;;		 -> D(482), T(144), port_data(512), STR_3(6), 
 21066 ;;		 -> V(190), 
 21067 ;; Return value:  Size  Location     Type
 21068 ;;                  2  [STACK] unsigned int 
 21069 ;; Registers used:
 21070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 21071 ;; Tracked objects:
 21072 ;;		On entry : 0/0
 21073 ;;		On exit  : 0/0
 21074 ;;		Unchanged: 0/0
 21075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21080 ;;Total ram usage:        0 bytes
 21081 ;; Hardware stack levels used:    1
 21082 ;; Hardware stack levels required when called:   15
 21083 ;; This function calls:
 21084 ;;		Nothing
 21085 ;; This function is called by:
 21086 ;;		_eaDogM_WriteString
 21087 ;;		_spinners
 21088 ;;		_calc_bsoc
 21089 ;;		_pad
 21090 ;;		_stoa
 21091 ;; This function uses a reentrant model
 21092 ;;
 21093                           
 21094                           	psect	text72
 21095  01A04E                     __ptext72:
 21096                           	opt callstack 0
 21097  01A04E                     _strlen:
 21098                           	opt callstack 0
 21099                           
 21100                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21101  01A04E  52E6               	movf	postinc1,f,c
 21102  01A050  52E6               	movf	postinc1,f,c
 21103                           
 21104                           ;stkvar	_s @ sp[(-2)+-2]
 21105                           
 21106                           ;incstack = 0
 21107 ;; hardware stack exceeded
 21108  01A052  0EFC               	movlw	-4
 21109  01A054  006F FF8C  F030    	movff	plusw1,btemp+10
 21110  01A05A  0EFD               	movlw	-3
 21111  01A05C  006F FF8C  F031    	movff	plusw1,btemp+11
 21112                           
 21113                           ;stkvar	_a @ sp[(-2)+0]
 21114  01A062  0EFF               	movlw	-1
 21115  01A064  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 21116  01A06A  0EFE               	movlw	-2
 21117  01A06C  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 21118  01A072  D011               	goto	l7537
 21119  01A074                     l7535:
 21120                           
 21121                           ;stkvar	_s @ sp[(-2)+-2]
 21122  01A074  0EFC               	movlw	-4
 21123  01A076  50E3               	movf	plusw1,w,c
 21124  01A078  0F01               	addlw	1
 21125  01A07A  6E26               	movwf	btemp^0,c
 21126  01A07C  0EFC               	movlw	-4
 21127  01A07E  0060  F09B  FFE3   	movff	btemp,plusw1
 21128  01A084  6A26               	clrf	btemp^0,c
 21129  01A086  0EFD               	movlw	-3
 21130  01A088  50E3               	movf	plusw1,w,c
 21131  01A08A  2026               	addwfc	btemp^0,w,c
 21132  01A08C  6E26               	movwf	btemp^0,c
 21133  01A08E  0EFD               	movlw	-3
 21134  01A090  0060  F09B  FFE3   	movff	btemp,plusw1
 21135  01A096                     l7537:
 21136                           
 21137                           ;stkvar	_s @ sp[(-2)+-2]
 21138  01A096  0EFC               	movlw	-4
 21139  01A098  006F FF8F FFF6     	movff	plusw1,tblptrl
 21140  01A09E  0EFD               	movlw	-3
 21141  01A0A0  006F FF8F FFF7     	movff	plusw1,tblptrh
 21142  01A0A6  0E00               	movlw	low (__mediumconst shr (0+16))
 21143  01A0A8  6EF8               	movwf	tblptru,c
 21144  01A0AA  0E1F               	movlw	(high __ramtop+-1)
 21145  01A0AC  64F7               	cpfsgt	tblptrh,c
 21146  01A0AE  D003               	bra	u5277
 21147  01A0B0  0008               	tblrd		*
 21148  01A0B2  50F5               	movf	tablat,w,c
 21149  01A0B4  D007               	bra	u5270
 21150  01A0B6                     u5277:
 21151  01A0B6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21152  01A0BC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21153  01A0C2  50EF               	movf	indf0,w,c
 21154  01A0C4                     u5270:
 21155  01A0C4  0900               	iorlw	0
 21156  01A0C6  A4D8               	btfss	status,2,c
 21157  01A0C8  D7D5               	goto	l7535
 21158                           
 21159                           ;stkvar	_a @ sp[(-2)+0]
 21160                           ;stkvar	_s @ sp[(-2)+-2]
 21161  01A0CA  0EFC               	movlw	-4
 21162  01A0CC  006F FF8C  F026    	movff	plusw1,btemp
 21163  01A0D2  0EFD               	movlw	-3
 21164  01A0D4  006F FF8C  F027    	movff	plusw1,btemp+1
 21165  01A0DA  0EFE               	movlw	-2
 21166  01A0DC  50E3               	movf	plusw1,w,c
 21167  01A0DE  5E26               	subwf	btemp^0,f,c
 21168  01A0E0  0EFF               	movlw	-1
 21169  01A0E2  50E3               	movf	plusw1,w,c
 21170  01A0E4  5A27               	subwfb	(btemp+1)^0,f,c
 21171                           
 21172                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 21173  01A0E6  52E5               	movf	postdec1,f,c
 21174  01A0E8  52E5               	movf	postdec1,f,c
 21175  01A0EA  52E5               	movf	postdec1,f,c
 21176  01A0EC  52E5               	movf	postdec1,f,c
 21177  01A0EE  0012               	return		;funcret
 21178  01A0F0                     __end_of_strlen:
 21179                           	opt callstack 0
 21180                           
 21181 ;; *************** function _fputs *****************
 21182 ;; Defined at:
 21183 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 21184 ;; Parameters:    Size  Location     Type
 21185 ;;  s               2  [STACK] PTR const unsigned char 
 21186 ;;		 -> dbuf(80), 
 21187 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21188 ;;		 -> f(6), NULL(0), 
 21189 ;; Auto vars:     Size  Location     Type
 21190 ;;  i               2  [STACK] int 
 21191 ;;  c               1  [STACK] unsigned char 
 21192 ;; Return value:  Size  Location     Type
 21193 ;;                  2  [STACK] int 
 21194 ;; Registers used:
 21195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21196 ;; Tracked objects:
 21197 ;;		On entry : 0/3
 21198 ;;		On exit  : 0/0
 21199 ;;		Unchanged: 0/0
 21200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21205 ;;Total ram usage:        0 bytes
 21206 ;; Hardware stack levels used:    1
 21207 ;; Hardware stack levels required when called:   18
 21208 ;; This function calls:
 21209 ;;		_fputc
 21210 ;; This function is called by:
 21211 ;;		_pad
 21212 ;; This function uses a reentrant model
 21213 ;;
 21214                           
 21215                           	psect	text73
 21216  01A0F0                     __ptext73:
 21217                           	opt callstack 0
 21218  01A0F0                     _fputs:
 21219                           	opt callstack 0
 21220                           
 21221                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21222  01A0F0  52E6               	movf	postinc1,f,c
 21223  01A0F2  52E6               	movf	postinc1,f,c
 21224  01A0F4  52E6               	movf	postinc1,f,c
 21225                           
 21226                           ;stkvar	_i @ sp[(-3)+0]
 21227                           
 21228                           ;incstack = 0
 21229 ;; hardware stack exceeded
 21230  01A0F6  0EFD               	movlw	-3
 21231  01A0F8  6AE3               	clrf	plusw1,c
 21232  01A0FA  0EFE               	movlw	-2
 21233  01A0FC  6AE3               	clrf	plusw1,c
 21234  01A0FE  D01F               	goto	l11487
 21235  01A100                     l11483:
 21236                           
 21237                           ;stkvar	_fp @ sp[(-3)+-4]
 21238  01A100  0EF9               	movlw	-7
 21239  01A102  006F FF8F FFE6     	movff	plusw1,postinc1
 21240  01A108  006F FF8F FFE6     	movff	plusw1,postinc1
 21241                           
 21242                           ;stkvar	_c @ sp[(-5)+2]
 21243  01A10E  0EFD               	movlw	-3
 21244  01A110  50E3               	movf	plusw1,w,c
 21245  01A112  6EE6               	movwf	postinc1,c
 21246  01A114  0E00               	movlw	0
 21247  01A116  6EE6               	movwf	postinc1,c
 21248  01A118  EC57  F0C7         	call	_fputc	;wreg free
 21249                           
 21250                           ;stkvar	_i @ sp[(-3)+0]
 21251  01A11C  0EFD               	movlw	-3
 21252  01A11E  50E3               	movf	plusw1,w,c
 21253  01A120  0F01               	addlw	1
 21254  01A122  6E26               	movwf	btemp^0,c
 21255  01A124  0EFD               	movlw	-3
 21256  01A126  0060  F09B  FFE3   	movff	btemp,plusw1
 21257  01A12C  6A26               	clrf	btemp^0,c
 21258  01A12E  0EFE               	movlw	-2
 21259  01A130  50E3               	movf	plusw1,w,c
 21260  01A132  2026               	addwfc	btemp^0,w,c
 21261  01A134  6E26               	movwf	btemp^0,c
 21262  01A136  0EFE               	movlw	-2
 21263  01A138  0060  F09B  FFE3   	movff	btemp,plusw1
 21264  01A13E                     l11487:
 21265                           
 21266                           ;stkvar	_i @ sp[(-3)+0]
 21267  01A13E  0EFD               	movlw	-3
 21268  01A140  006F FF8C  F030    	movff	plusw1,btemp+10
 21269  01A146  0EFE               	movlw	-2
 21270  01A148  006F FF8C  F031    	movff	plusw1,btemp+11
 21271                           
 21272                           ;stkvar	_s @ sp[(-3)+-2]
 21273  01A14E  0EFB               	movlw	-5
 21274  01A150  006F FF8C  F02E    	movff	plusw1,btemp+8
 21275  01A156  0EFC               	movlw	-4
 21276  01A158  006F FF8C  F02F    	movff	plusw1,btemp+9
 21277  01A15E  5030               	movf	(btemp+10)^0,w,c
 21278  01A160  242E               	addwf	(btemp+8)^0,w,c
 21279  01A162  6ED9               	movwf	fsr2l,c
 21280  01A164  5031               	movf	(btemp+11)^0,w,c
 21281  01A166  202F               	addwfc	(btemp+9)^0,w,c
 21282  01A168  6EDA               	movwf	fsr2h,c
 21283  01A16A  50DF               	movf	indf2,w,c
 21284  01A16C  6E31               	movwf	(btemp+11)^0,c
 21285                           
 21286                           ;stkvar	_c @ sp[(-3)+2]
 21287  01A16E  0EFF               	movlw	-1
 21288  01A170  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 21289  01A176  0EFF               	movlw	-1
 21290  01A178  50E3               	movf	plusw1,w,c
 21291  01A17A  A4D8               	btfss	status,2,c
 21292  01A17C  D7C1               	goto	l11483
 21293                           
 21294                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21295  01A17E  0EF9               	movlw	249
 21296  01A180  26E1               	addwf	fsr1l,f,c
 21297  01A182  0EFF               	movlw	255
 21298  01A184  22E2               	addwfc	fsr1h,f,c
 21299  01A186  0012               	return		;funcret
 21300  01A188                     __end_of_fputs:
 21301                           	opt callstack 0
 21302                           
 21303 ;; *************** function _fputc *****************
 21304 ;; Defined at:
 21305 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 21306 ;; Parameters:    Size  Location     Type
 21307 ;;  c               2  [STACK] int 
 21308 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21309 ;;		 -> f(6), NULL(0), 
 21310 ;; Auto vars:     Size  Location     Type
 21311 ;;		None
 21312 ;; Return value:  Size  Location     Type
 21313 ;;                  2  [STACK] int 
 21314 ;; Registers used:
 21315 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21316 ;; Tracked objects:
 21317 ;;		On entry : 0/0
 21318 ;;		On exit  : 0/0
 21319 ;;		Unchanged: 0/0
 21320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21325 ;;Total ram usage:        0 bytes
 21326 ;; Hardware stack levels used:    1
 21327 ;; Hardware stack levels required when called:   17
 21328 ;; This function calls:
 21329 ;;		_putch
 21330 ;; This function is called by:
 21331 ;;		_pad
 21332 ;;		_stoa
 21333 ;;		_vfpfcnvrt
 21334 ;;		_fputs
 21335 ;; This function uses a reentrant model
 21336 ;;
 21337                           
 21338                           	psect	text74
 21339  018EAE                     __ptext74:
 21340                           	opt callstack 0
 21341  018EAE                     _fputc:
 21342                           	opt callstack 0
 21343                           
 21344                           ;stkvar	_fp @ sp[(0)+-4]
 21345                           
 21346                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21347                           ;incstack = 0
 21348 ;; hardware stack exceeded
 21349  018EAE  0EFC               	movlw	-4
 21350  018EB0  006F FF8C  F026    	movff	plusw1,btemp
 21351  018EB6  0EFD               	movlw	-3
 21352  018EB8  50E3               	movf	plusw1,w,c
 21353  018EBA  1026               	iorwf	btemp^0,w,c
 21354  018EBC  B4D8               	btfsc	status,2,c
 21355  018EBE  D009               	goto	u10420
 21356                           
 21357                           ;stkvar	_fp @ sp[(0)+-4]
 21358  018EC0  0EFC               	movlw	-4
 21359  018EC2  006F FF8C  F026    	movff	plusw1,btemp
 21360  018EC8  0EFD               	movlw	-3
 21361  018ECA  50E3               	movf	plusw1,w,c
 21362  018ECC  1026               	iorwf	btemp^0,w,c
 21363  018ECE  A4D8               	btfss	status,2,c
 21364  018ED0  D006               	goto	l11471
 21365  018ED2                     u10420:
 21366                           
 21367                           ;stkvar	_c @ sp[(0)+-2]
 21368  018ED2  0EFE               	movlw	-2
 21369  018ED4  50E3               	movf	plusw1,w,c
 21370  018ED6  6EE6               	movwf	postinc1,c
 21371  018ED8  EC5B  F0DB         	call	_putch	;wreg free
 21372  018EDC  D075               	goto	l3169
 21373  018EDE                     l11471:
 21374                           
 21375                           ;stkvar	_fp @ sp[(0)+-4]
 21376  018EDE  0EFC               	movlw	-4
 21377  018EE0  006F FF8C  F030    	movff	plusw1,btemp+10
 21378  018EE6  0EFD               	movlw	-3
 21379  018EE8  006F FF8C  F031    	movff	plusw1,btemp+11
 21380  018EEE  0E04               	movlw	4
 21381  018EF0  2430               	addwf	(btemp+10)^0,w,c
 21382  018EF2  6ED9               	movwf	fsr2l,c
 21383  018EF4  0E00               	movlw	0
 21384  018EF6  2031               	addwfc	(btemp+11)^0,w,c
 21385  018EF8  6EDA               	movwf	fsr2h,c
 21386  018EFA  50DE               	movf	postinc2,w,c
 21387  018EFC  10DE               	iorwf	postinc2,w,c
 21388  018EFE  B4D8               	btfsc	status,2,c
 21389  018F00  D026               	goto	u10440
 21390                           
 21391                           ;stkvar	_fp @ sp[(0)+-4]
 21392  018F02  0EFC               	movlw	-4
 21393  018F04  006F FF8C  F030    	movff	plusw1,btemp+10
 21394  018F0A  0EFD               	movlw	-3
 21395  018F0C  006F FF8C  F031    	movff	plusw1,btemp+11
 21396  018F12  0E04               	movlw	4
 21397  018F14  2430               	addwf	(btemp+10)^0,w,c
 21398  018F16  6ED9               	movwf	fsr2l,c
 21399  018F18  0E00               	movlw	0
 21400  018F1A  2031               	addwfc	(btemp+11)^0,w,c
 21401  018F1C  6EDA               	movwf	fsr2h,c
 21402                           
 21403                           ;stkvar	_fp @ sp[(0)+-4]
 21404  018F1E  0EFC               	movlw	-4
 21405  018F20  006F FF8C  F030    	movff	plusw1,btemp+10
 21406  018F26  0EFD               	movlw	-3
 21407  018F28  006F FF8C  F031    	movff	plusw1,btemp+11
 21408  018F2E  0E02               	movlw	2
 21409  018F30  2430               	addwf	(btemp+10)^0,w,c
 21410  018F32  6EE9               	movwf	fsr0l,c
 21411  018F34  0E00               	movlw	0
 21412  018F36  2031               	addwfc	(btemp+11)^0,w,c
 21413  018F38  6EEA               	movwf	fsr0h,c
 21414  018F3A  50DE               	movf	postinc2,w,c
 21415  018F3C  5CEE               	subwf	postinc0,w,c
 21416  018F3E  50EE               	movf	postinc0,w,c
 21417  018F40  0A80               	xorlw	128
 21418  018F42  6E26               	movwf	btemp^0,c
 21419  018F44  50DE               	movf	postinc2,w,c
 21420  018F46  0A80               	xorlw	128
 21421  018F48  5826               	subwfb	btemp^0,w,c
 21422  018F4A  B0D8               	btfsc	status,0,c
 21423  018F4C  D03D               	goto	l3169
 21424  018F4E                     u10440:
 21425                           
 21426                           ;stkvar	_c @ sp[(0)+-2]
 21427                           ;stkvar	_fp @ sp[(0)+-4]
 21428  018F4E  0EFC               	movlw	-4
 21429  018F50  006F FF8C  F030    	movff	plusw1,btemp+10
 21430  018F56  0EFD               	movlw	-3
 21431  018F58  006F FF8C  F031    	movff	plusw1,btemp+11
 21432  018F5E  0E02               	movlw	2
 21433  018F60  2430               	addwf	(btemp+10)^0,w,c
 21434  018F62  6ED9               	movwf	fsr2l,c
 21435  018F64  0E00               	movlw	0
 21436  018F66  2031               	addwfc	(btemp+11)^0,w,c
 21437  018F68  6EDA               	movwf	fsr2h,c
 21438  018F6A  006F FF78  F030    	movff	postinc2,btemp+10
 21439  018F70  006F FF74  F031    	movff	postdec2,btemp+11
 21440                           
 21441                           ;stkvar	_fp @ sp[(0)+-4]
 21442  018F76  0EFC               	movlw	-4
 21443  018F78  006F FF8F FFD9     	movff	plusw1,fsr2l
 21444  018F7E  0EFD               	movlw	-3
 21445  018F80  006F FF8F FFDA     	movff	plusw1,fsr2h
 21446  018F86  006F FF78  F02E    	movff	postinc2,btemp+8
 21447  018F8C  006F FF74  F02F    	movff	postdec2,btemp+9
 21448  018F92  5030               	movf	(btemp+10)^0,w,c
 21449  018F94  242E               	addwf	(btemp+8)^0,w,c
 21450  018F96  6ED9               	movwf	fsr2l,c
 21451  018F98  5031               	movf	(btemp+11)^0,w,c
 21452  018F9A  202F               	addwfc	(btemp+9)^0,w,c
 21453  018F9C  6EDA               	movwf	fsr2h,c
 21454  018F9E  0EFE               	movlw	-2
 21455  018FA0  006F FF8F FFDF     	movff	plusw1,indf2
 21456                           
 21457                           ;stkvar	_fp @ sp[(0)+-4]
 21458  018FA6  0EFC               	movlw	-4
 21459  018FA8  006F FF8C  F030    	movff	plusw1,btemp+10
 21460  018FAE  0EFD               	movlw	-3
 21461  018FB0  006F FF8C  F031    	movff	plusw1,btemp+11
 21462  018FB6  0E02               	movlw	2
 21463  018FB8  2430               	addwf	(btemp+10)^0,w,c
 21464  018FBA  6ED9               	movwf	fsr2l,c
 21465  018FBC  0E00               	movlw	0
 21466  018FBE  2031               	addwfc	(btemp+11)^0,w,c
 21467  018FC0  6EDA               	movwf	fsr2h,c
 21468  018FC2  2ADE               	incf	postinc2,f,c
 21469  018FC4  0E00               	movlw	0
 21470  018FC6  22DD               	addwfc	postdec2,f,c
 21471  018FC8                     l3169:
 21472                           
 21473                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21474  018FC8  52E5               	movf	postdec1,f,c
 21475  018FCA  52E5               	movf	postdec1,f,c
 21476  018FCC  52E5               	movf	postdec1,f,c
 21477  018FCE  52E5               	movf	postdec1,f,c
 21478  018FD0  0012               	return		;funcret
 21479  018FD2                     __end_of_fputc:
 21480                           	opt callstack 0
 21481                           
 21482 ;; *************** function _putch *****************
 21483 ;; Defined at:
 21484 ;;		line 170 in file "eadog.c"
 21485 ;; Parameters:    Size  Location     Type
 21486 ;;  c               1  [STACK] unsigned char 
 21487 ;; Auto vars:     Size  Location     Type
 21488 ;;		None
 21489 ;; Return value:  Size  Location     Type
 21490 ;;                  1  [STACK] void 
 21491 ;; Registers used:
 21492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21493 ;; Tracked objects:
 21494 ;;		On entry : 0/0
 21495 ;;		On exit  : 0/0
 21496 ;;		Unchanged: 0/0
 21497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21502 ;;Total ram usage:        0 bytes
 21503 ;; Hardware stack levels used:    1
 21504 ;; Hardware stack levels required when called:   16
 21505 ;; This function calls:
 21506 ;;		_ringBufS_put_dma
 21507 ;; This function is called by:
 21508 ;;		_fputc
 21509 ;; This function uses a reentrant model
 21510 ;;
 21511                           
 21512                           	psect	text75
 21513  01B6B6                     __ptext75:
 21514                           	opt callstack 0
 21515  01B6B6                     _putch:
 21516                           	opt callstack 0
 21517                           
 21518                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 21519                           ;stkvar	_c @ sp[(0)+-1]
 21520                           
 21521                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21522                           ;incstack = 0
 21523 ;; hardware stack exceeded
 21524  01B6B6  0EFF               	movlw	-1
 21525  01B6B8  50E3               	movf	plusw1,w,c
 21526  01B6BA  6EE6               	movwf	postinc1,c
 21527  01B6BC  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 21528  01B6C2  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 21529  01B6C8  EC7F  F0CF         	call	_ringBufS_put_dma	;wreg free
 21530                           
 21531                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 21532  01B6CC  52E5               	movf	postdec1,f,c
 21533  01B6CE  0012               	return		;funcret
 21534  01B6D0                     __end_of_putch:
 21535                           	opt callstack 0
 21536                           
 21537 ;; *************** function _ringBufS_put_dma *****************
 21538 ;; Defined at:
 21539 ;;		line 67 in file "ringbufs.c"
 21540 ;; Parameters:    Size  Location     Type
 21541 ;;  _this           2  [STACK] PTR struct ringBufS_t
 21542 ;;		 -> ring_buf1(67), 
 21543 ;;  c               1  [STACK] const unsigned char 
 21544 ;; Auto vars:     Size  Location     Type
 21545 ;;		None
 21546 ;; Return value:  Size  Location     Type
 21547 ;;                  1  [STACK] void 
 21548 ;; Registers used:
 21549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21550 ;; Tracked objects:
 21551 ;;		On entry : 0/0
 21552 ;;		On exit  : 0/0
 21553 ;;		Unchanged: 0/0
 21554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21559 ;;Total ram usage:        0 bytes
 21560 ;; Hardware stack levels used:    1
 21561 ;; Hardware stack levels required when called:   15
 21562 ;; This function calls:
 21563 ;;		Nothing
 21564 ;; This function is called by:
 21565 ;;		_putch
 21566 ;; This function uses a reentrant model
 21567 ;;
 21568                           
 21569                           	psect	text76
 21570  019EFE                     __ptext76:
 21571                           	opt callstack 0
 21572  019EFE                     _ringBufS_put_dma:
 21573                           	opt callstack 0
 21574                           
 21575                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 21576                           ;stkvar	__this @ sp[(0)+-2]
 21577                           
 21578                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21579                           ;incstack = 0
 21580 ;; hardware stack exceeded
 21581  019EFE  0EFE               	movlw	-2
 21582  019F00  006F FF8C  F030    	movff	plusw1,btemp+10
 21583  019F06  0EFF               	movlw	-1
 21584  019F08  006F FF8C  F031    	movff	plusw1,btemp+11
 21585  019F0E  0E42               	movlw	66
 21586  019F10  2430               	addwf	(btemp+10)^0,w,c
 21587  019F12  6ED9               	movwf	fsr2l,c
 21588  019F14  0E00               	movlw	0
 21589  019F16  2031               	addwfc	(btemp+11)^0,w,c
 21590  019F18  6EDA               	movwf	fsr2h,c
 21591  019F1A  0E40               	movlw	64
 21592  019F1C  60DF               	cpfslt	indf2,c
 21593  019F1E  D040               	goto	l1579
 21594                           
 21595                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 21596                           ;stkvar	_c @ sp[(0)+-3]
 21597                           ;stkvar	__this @ sp[(0)+-2]
 21598  019F20  0EFE               	movlw	-2
 21599  019F22  006F FF8C  F030    	movff	plusw1,btemp+10
 21600  019F28  0EFF               	movlw	-1
 21601  019F2A  006F FF8C  F031    	movff	plusw1,btemp+11
 21602  019F30  0E40               	movlw	64
 21603  019F32  2430               	addwf	(btemp+10)^0,w,c
 21604  019F34  6ED9               	movwf	fsr2l,c
 21605  019F36  0E00               	movlw	0
 21606  019F38  2031               	addwfc	(btemp+11)^0,w,c
 21607  019F3A  6EDA               	movwf	fsr2h,c
 21608  019F3C  50DF               	movf	indf2,w,c
 21609  019F3E  6E31               	movwf	(btemp+11)^0,c
 21610                           
 21611                           ;stkvar	__this @ sp[(0)+-2]
 21612  019F40  0EFE               	movlw	-2
 21613  019F42  006F FF8C  F02E    	movff	plusw1,btemp+8
 21614  019F48  0EFF               	movlw	-1
 21615  019F4A  006F FF8C  F02F    	movff	plusw1,btemp+9
 21616  019F50  5031               	movf	(btemp+11)^0,w,c
 21617  019F52  242E               	addwf	(btemp+8)^0,w,c
 21618  019F54  6ED9               	movwf	fsr2l,c
 21619  019F56  0E00               	movlw	0
 21620  019F58  202F               	addwfc	(btemp+9)^0,w,c
 21621  019F5A  6EDA               	movwf	fsr2h,c
 21622  019F5C  0EFD               	movlw	-3
 21623  019F5E  006F FF8F FFDF     	movff	plusw1,indf2
 21624                           
 21625                           ;ringbufs.c: 71:   ++_this->head;
 21626                           ;stkvar	__this @ sp[(0)+-2]
 21627  019F64  0EFE               	movlw	-2
 21628  019F66  006F FF8C  F030    	movff	plusw1,btemp+10
 21629  019F6C  0EFF               	movlw	-1
 21630  019F6E  006F FF8C  F031    	movff	plusw1,btemp+11
 21631  019F74  0E40               	movlw	64
 21632  019F76  2430               	addwf	(btemp+10)^0,w,c
 21633  019F78  6ED9               	movwf	fsr2l,c
 21634  019F7A  0E00               	movlw	0
 21635  019F7C  2031               	addwfc	(btemp+11)^0,w,c
 21636  019F7E  6EDA               	movwf	fsr2h,c
 21637  019F80  2ADF               	incf	indf2,f,c
 21638                           
 21639                           ;ringbufs.c: 72:   ++_this->count;
 21640                           ;stkvar	__this @ sp[(0)+-2]
 21641  019F82  0EFE               	movlw	-2
 21642  019F84  006F FF8C  F030    	movff	plusw1,btemp+10
 21643  019F8A  0EFF               	movlw	-1
 21644  019F8C  006F FF8C  F031    	movff	plusw1,btemp+11
 21645  019F92  0E42               	movlw	66
 21646  019F94  2430               	addwf	(btemp+10)^0,w,c
 21647  019F96  6ED9               	movwf	fsr2l,c
 21648  019F98  0E00               	movlw	0
 21649  019F9A  2031               	addwfc	(btemp+11)^0,w,c
 21650  019F9C  6EDA               	movwf	fsr2h,c
 21651  019F9E  2ADF               	incf	indf2,f,c
 21652  019FA0                     l1579:
 21653                           
 21654                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21655  019FA0  52E5               	movf	postdec1,f,c
 21656  019FA2  52E5               	movf	postdec1,f,c
 21657  019FA4  52E5               	movf	postdec1,f,c
 21658  019FA6  0012               	return		;funcret
 21659  019FA8                     __end_of_ringBufS_put_dma:
 21660                           	opt callstack 0
 21661                           
 21662 ;; *************** function _atoi *****************
 21663 ;; Defined at:
 21664 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 21665 ;; Parameters:    Size  Location     Type
 21666 ;;  s               2  [STACK] PTR const unsigned char 
 21667 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
 21668 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 21669 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 21670 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 21671 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 21672 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 21673 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 21674 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 21675 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 21676 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
 21677 ;;		 -> STR_22(19), STR_21(17), STR_20(16), STR_19(16), 
 21678 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 21679 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 21680 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 21681 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 21682 ;;		 -> STR_1(17), 
 21683 ;; Auto vars:     Size  Location     Type
 21684 ;;  n               2  [STACK] int 
 21685 ;;  neg             2  [STACK] int 
 21686 ;; Return value:  Size  Location     Type
 21687 ;;                  2  [STACK] int 
 21688 ;; Registers used:
 21689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 21690 ;; Tracked objects:
 21691 ;;		On entry : 0/0
 21692 ;;		On exit  : 0/0
 21693 ;;		Unchanged: 0/0
 21694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21699 ;;Total ram usage:        0 bytes
 21700 ;; Hardware stack levels used:    1
 21701 ;; Hardware stack levels required when called:   16
 21702 ;; This function calls:
 21703 ;;		_isdigit
 21704 ;;		_isspace
 21705 ;; This function is called by:
 21706 ;;		_vfpfcnvrt
 21707 ;; This function uses a reentrant model
 21708 ;;
 21709                           
 21710                           	psect	text77
 21711  0170DE                     __ptext77:
 21712                           	opt callstack 0
 21713  0170DE                     _atoi:
 21714                           	opt callstack 0
 21715                           
 21716                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21717  0170DE  0E09               	movlw	9
 21718  0170E0  26E1               	addwf	fsr1l,f,c
 21719  0170E2  0E00               	movlw	0
 21720  0170E4  22E2               	addwfc	fsr1h,f,c
 21721                           
 21722                           ;stkvar	_n @ sp[(-9)+5]
 21723                           
 21724                           ;incstack = 0
 21725 ;; hardware stack exceeded
 21726  0170E6  0EFC               	movlw	-4
 21727  0170E8  6AE3               	clrf	plusw1,c
 21728  0170EA  0EFD               	movlw	-3
 21729  0170EC  6AE3               	clrf	plusw1,c
 21730                           
 21731                           ;stkvar	_neg @ sp[(-9)+7]
 21732  0170EE  0EFE               	movlw	-2
 21733  0170F0  6AE3               	clrf	plusw1,c
 21734  0170F2  0EFF               	movlw	-1
 21735  0170F4  6AE3               	clrf	plusw1,c
 21736  0170F6  D011               	goto	l9145
 21737  0170F8                     l9143:
 21738                           
 21739                           ;stkvar	_s @ sp[(-9)+-2]
 21740  0170F8  0EF5               	movlw	-11
 21741  0170FA  50E3               	movf	plusw1,w,c
 21742  0170FC  0F01               	addlw	1
 21743  0170FE  6E26               	movwf	btemp^0,c
 21744  017100  0EF5               	movlw	-11
 21745  017102  0060  F09B  FFE3   	movff	btemp,plusw1
 21746  017108  6A26               	clrf	btemp^0,c
 21747  01710A  0EF6               	movlw	-10
 21748  01710C  50E3               	movf	plusw1,w,c
 21749  01710E  2026               	addwfc	btemp^0,w,c
 21750  017110  6E26               	movwf	btemp^0,c
 21751  017112  0EF6               	movlw	-10
 21752  017114  0060  F09B  FFE3   	movff	btemp,plusw1
 21753  01711A                     l9145:
 21754                           
 21755                           ;stkvar	_atoi$5967 @ sp[(-9)+4]
 21756  01711A  0EFB               	movlw	-5
 21757  01711C  6AE3               	clrf	plusw1,c
 21758  01711E  2AE3               	incf	plusw1,f,c
 21759                           
 21760                           ;stkvar	_s @ sp[(-9)+-2]
 21761  017120  50E1               	movf	fsr1l,w,c
 21762  017122  0FF5               	addlw	-11
 21763  017124  6ED9               	movwf	fsr2l,c
 21764  017126  50E2               	movf	fsr1h,w,c
 21765  017128  6EDA               	movwf	fsr2h,c
 21766  01712A  0EFF               	movlw	255
 21767  01712C  22DA               	addwfc	fsr2h,f,c
 21768  01712E  006F FF7B FFF6     	movff	postinc2,tblptrl
 21769  017134  006F FF77 FFF7     	movff	postdec2,tblptrh
 21770  01713A                     	if	0	;tblptru may be non-zero
 21771  01713A                     	endif
 21772  01713A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21773  01713A  0E00               	movlw	low (__mediumconst shr (0+16))
 21774  01713C  6EF8               	movwf	tblptru,c
 21775  01713E                     	endif
 21776  01713E  0008               	tblrd		*
 21777  017140  50F5               	movf	tablat,w,c
 21778  017142  0A20               	xorlw	32
 21779  017144  B4D8               	btfsc	status,2,c
 21780  017146  D023               	goto	l9153
 21781  017148  0EF7               	movlw	247
 21782  01714A  6E30               	movwf	(btemp+10)^0,c
 21783  01714C  0EFF               	movlw	255
 21784  01714E  6E31               	movwf	(btemp+11)^0,c
 21785                           
 21786                           ;stkvar	_s @ sp[(-9)+-2]
 21787  017150  50E1               	movf	fsr1l,w,c
 21788  017152  0FF5               	addlw	-11
 21789  017154  6ED9               	movwf	fsr2l,c
 21790  017156  50E2               	movf	fsr1h,w,c
 21791  017158  6EDA               	movwf	fsr2h,c
 21792  01715A  0EFF               	movlw	255
 21793  01715C  22DA               	addwfc	fsr2h,f,c
 21794  01715E  006F FF7B FFF6     	movff	postinc2,tblptrl
 21795  017164  006F FF77 FFF7     	movff	postdec2,tblptrh
 21796  01716A                     	if	0	;tblptru may be non-zero
 21797  01716A                     	endif
 21798  01716A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21799  01716A  0E00               	movlw	low (__mediumconst shr (0+16))
 21800  01716C  6EF8               	movwf	tblptru,c
 21801  01716E                     	endif
 21802  01716E  0008               	tblrd		*
 21803  017170  50F5               	movf	tablat,w,c
 21804  017172  6E2E               	movwf	(btemp+8)^0,c
 21805  017174  6A2F               	clrf	(btemp+9)^0,c
 21806  017176  5030               	movf	(btemp+10)^0,w,c
 21807  017178  262E               	addwf	(btemp+8)^0,f,c
 21808  01717A  5031               	movf	(btemp+11)^0,w,c
 21809  01717C  222F               	addwfc	(btemp+9)^0,f,c
 21810  01717E  502F               	movf	(btemp+9)^0,w,c
 21811  017180  E104               	bnz	u8380
 21812  017182  0E05               	movlw	5
 21813  017184  5C2E               	subwf	(btemp+8)^0,w,c
 21814  017186  A0D8               	btfss	status,0,c
 21815  017188  D002               	goto	l9153
 21816  01718A                     u8380:
 21817                           
 21818                           ;stkvar	_atoi$5967 @ sp[(-9)+4]
 21819  01718A  0EFB               	movlw	-5
 21820  01718C  6AE3               	clrf	plusw1,c
 21821  01718E                     l9153:
 21822                           
 21823                           ;stkvar	_atoi$5967 @ sp[(-9)+4]
 21824  01718E  0EFB               	movlw	-5
 21825  017190  50E3               	movf	plusw1,w,c
 21826  017192  6E30               	movwf	(btemp+10)^0,c
 21827  017194  6A31               	clrf	(btemp+11)^0,c
 21828                           
 21829                           ;stkvar	_atoi$5966 @ sp[(-9)+2]
 21830  017196  0EF9               	movlw	-7
 21831  017198  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 21832  01719E  0EFA               	movlw	-6
 21833  0171A0  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 21834                           
 21835                           ;stkvar	_atoi$5966 @ sp[(-9)+2]
 21836  0171A6  0EF9               	movlw	-7
 21837  0171A8  006F FF8C  F026    	movff	plusw1,btemp
 21838  0171AE  0EFA               	movlw	-6
 21839  0171B0  50E3               	movf	plusw1,w,c
 21840  0171B2  1026               	iorwf	btemp^0,w,c
 21841  0171B4  B4D8               	btfsc	status,2,c
 21842  0171B6  D01F               	goto	l9163
 21843  0171B8  D79F               	goto	l9143
 21844  0171BA                     l9159:
 21845  0171BA  0E01               	movlw	1
 21846  0171BC  6E30               	movwf	(btemp+10)^0,c
 21847  0171BE  0E00               	movlw	0
 21848  0171C0  6E31               	movwf	(btemp+11)^0,c
 21849                           
 21850                           ;stkvar	_neg @ sp[(-9)+7]
 21851  0171C2  0EFE               	movlw	-2
 21852  0171C4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 21853  0171CA  0EFF               	movlw	-1
 21854  0171CC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 21855  0171D2                     l9161:
 21856                           
 21857                           ;stkvar	_s @ sp[(-9)+-2]
 21858  0171D2  0EF5               	movlw	-11
 21859  0171D4  50E3               	movf	plusw1,w,c
 21860  0171D6  0F01               	addlw	1
 21861  0171D8  6E26               	movwf	btemp^0,c
 21862  0171DA  0EF5               	movlw	-11
 21863  0171DC  0060  F09B  FFE3   	movff	btemp,plusw1
 21864  0171E2  6A26               	clrf	btemp^0,c
 21865  0171E4  0EF6               	movlw	-10
 21866  0171E6  50E3               	movf	plusw1,w,c
 21867  0171E8  2026               	addwfc	btemp^0,w,c
 21868  0171EA  6E26               	movwf	btemp^0,c
 21869  0171EC  0EF6               	movlw	-10
 21870  0171EE  0060  F09B  FFE3   	movff	btemp,plusw1
 21871  0171F4  D053               	goto	l9169
 21872  0171F6                     l9163:
 21873                           
 21874                           ;stkvar	_s @ sp[(-9)+-2]
 21875  0171F6  50E1               	movf	fsr1l,w,c
 21876  0171F8  0FF5               	addlw	-11
 21877  0171FA  6ED9               	movwf	fsr2l,c
 21878  0171FC  50E2               	movf	fsr1h,w,c
 21879  0171FE  6EDA               	movwf	fsr2h,c
 21880  017200  0EFF               	movlw	255
 21881  017202  22DA               	addwfc	fsr2h,f,c
 21882  017204  006F FF7B FFF6     	movff	postinc2,tblptrl
 21883  01720A  006F FF77 FFF7     	movff	postdec2,tblptrh
 21884  017210                     	if	0	;tblptru may be non-zero
 21885  017210                     	endif
 21886  017210                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21887  017210  0E00               	movlw	low (__mediumconst shr (0+16))
 21888  017212  6EF8               	movwf	tblptru,c
 21889  017214                     	endif
 21890  017214  0008               	tblrd		*
 21891  017216  50F5               	movf	tablat,w,c
 21892  017218  6E30               	movwf	(btemp+10)^0,c
 21893  01721A  6A31               	clrf	(btemp+11)^0,c
 21894                           
 21895                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21896                           ; Switch size 1, requested type "simple"
 21897                           ; Number of cases is 1, Range of values is 0 to 0
 21898                           ; switch strategies available:
 21899                           ; Name         Instructions Cycles
 21900                           ; simple_byte            4     3 (average)
 21901                           ;	Chosen strategy is simple_byte
 21902  01721C  5031               	movf	(btemp+11)^0,w,c
 21903  01721E  0A00               	xorlw	0	; case 0
 21904  017220  A4D8               	btfss	status,2,c
 21905  017222  D03C               	goto	l9169
 21906                           
 21907                           ; Switch size 1, requested type "simple"
 21908                           ; Number of cases is 2, Range of values is 43 to 45
 21909                           ; switch strategies available:
 21910                           ; Name         Instructions Cycles
 21911                           ; simple_byte            7     4 (average)
 21912                           ;	Chosen strategy is simple_byte
 21913  017224  5030               	movf	(btemp+10)^0,w,c
 21914  017226  0A2B               	xorlw	43	; case 43
 21915  017228  B4D8               	btfsc	status,2,c
 21916  01722A  D7D3               	goto	l9161
 21917  01722C  0A06               	xorlw	6	; case 45
 21918  01722E  B4D8               	btfsc	status,2,c
 21919  017230  D7C4               	goto	l9159
 21920  017232  D034               	goto	l9169
 21921  017234                     l9165:
 21922                           
 21923                           ;stkvar	_n @ sp[(-9)+5]
 21924  017234  0EFC               	movlw	-4
 21925  017236  006F FF8C  F030    	movff	plusw1,btemp+10
 21926  01723C  0EFD               	movlw	-3
 21927  01723E  006F FF8C  F031    	movff	plusw1,btemp+11
 21928  017244  0E0A               	movlw	10
 21929  017246  0230               	mulwf	(btemp+10)^0,c
 21930  017248  006F FFCC  F02E    	movff	prodl,btemp+8
 21931  01724E  006F FFD0  F02F    	movff	prodh,btemp+9
 21932  017254  0231               	mulwf	(btemp+11)^0,c
 21933  017256  50F3               	movf	prodl,w,c
 21934  017258  262F               	addwf	(btemp+9)^0,f,c
 21935                           
 21936                           ;stkvar	_s @ sp[(-9)+-2]
 21937  01725A  50E1               	movf	fsr1l,w,c
 21938  01725C  0FF5               	addlw	-11
 21939  01725E  6ED9               	movwf	fsr2l,c
 21940  017260  50E2               	movf	fsr1h,w,c
 21941  017262  6EDA               	movwf	fsr2h,c
 21942  017264  0EFF               	movlw	255
 21943  017266  22DA               	addwfc	fsr2h,f,c
 21944  017268  006F FF7B FFF6     	movff	postinc2,tblptrl
 21945  01726E  006F FF77 FFF7     	movff	postdec2,tblptrh
 21946  017274                     	if	0	;tblptru may be non-zero
 21947  017274                     	endif
 21948  017274                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21949  017274  0E00               	movlw	low (__mediumconst shr (0+16))
 21950  017276  6EF8               	movwf	tblptru,c
 21951  017278                     	endif
 21952  017278  0008               	tblrd		*
 21953  01727A  50F5               	movf	tablat,w,c
 21954  01727C  5E2E               	subwf	(btemp+8)^0,f,c
 21955  01727E  0E00               	movlw	0
 21956  017280  5A2F               	subwfb	(btemp+9)^0,f,c
 21957  017282  0E30               	movlw	48
 21958  017284  262E               	addwf	(btemp+8)^0,f,c
 21959  017286  0E00               	movlw	0
 21960  017288  222F               	addwfc	(btemp+9)^0,f,c
 21961                           
 21962                           ;stkvar	_n @ sp[(-9)+5]
 21963  01728A  0EFC               	movlw	-4
 21964  01728C  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 21965  017292  0EFD               	movlw	-3
 21966  017294  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 21967  01729A  D79B               	goto	l9161
 21968  01729C                     l9169:
 21969  01729C  0ED0               	movlw	208
 21970  01729E  6E30               	movwf	(btemp+10)^0,c
 21971  0172A0  0EFF               	movlw	255
 21972  0172A2  6E31               	movwf	(btemp+11)^0,c
 21973                           
 21974                           ;stkvar	_s @ sp[(-9)+-2]
 21975  0172A4  50E1               	movf	fsr1l,w,c
 21976  0172A6  0FF5               	addlw	-11
 21977  0172A8  6ED9               	movwf	fsr2l,c
 21978  0172AA  50E2               	movf	fsr1h,w,c
 21979  0172AC  6EDA               	movwf	fsr2h,c
 21980  0172AE  0EFF               	movlw	255
 21981  0172B0  22DA               	addwfc	fsr2h,f,c
 21982  0172B2  006F FF7B FFF6     	movff	postinc2,tblptrl
 21983  0172B8  006F FF77 FFF7     	movff	postdec2,tblptrh
 21984  0172BE                     	if	0	;tblptru may be non-zero
 21985  0172BE                     	endif
 21986  0172BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21987  0172BE  0E00               	movlw	low (__mediumconst shr (0+16))
 21988  0172C0  6EF8               	movwf	tblptru,c
 21989  0172C2                     	endif
 21990  0172C2  0008               	tblrd		*
 21991  0172C4  50F5               	movf	tablat,w,c
 21992  0172C6  6E2E               	movwf	(btemp+8)^0,c
 21993  0172C8  6A2F               	clrf	(btemp+9)^0,c
 21994  0172CA  5030               	movf	(btemp+10)^0,w,c
 21995  0172CC  262E               	addwf	(btemp+8)^0,f,c
 21996  0172CE  5031               	movf	(btemp+11)^0,w,c
 21997  0172D0  222F               	addwfc	(btemp+9)^0,f,c
 21998  0172D2  502F               	movf	(btemp+9)^0,w,c
 21999  0172D4  E106               	bnz	u8400
 22000  0172D6  0E0A               	movlw	10
 22001  0172D8  5C2E               	subwf	(btemp+8)^0,w,c
 22002  0172DA  B0D8               	btfsc	status,0,c
 22003  0172DC  D002               	goto	u8400
 22004  0172DE  0E01               	movlw	1
 22005  0172E0  D001               	goto	u8410
 22006  0172E2                     u8400:
 22007  0172E2  0E00               	movlw	0
 22008  0172E4                     u8410:
 22009  0172E4  6E30               	movwf	(btemp+10)^0,c
 22010  0172E6  6A31               	clrf	(btemp+11)^0,c
 22011                           
 22012                           ;stkvar	_atoi$5968 @ sp[(-9)+0]
 22013  0172E8  0EF7               	movlw	-9
 22014  0172EA  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 22015  0172F0  0EF8               	movlw	-8
 22016  0172F2  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 22017                           
 22018                           ;stkvar	_atoi$5968 @ sp[(-9)+0]
 22019  0172F8  0EF7               	movlw	-9
 22020  0172FA  006F FF8C  F026    	movff	plusw1,btemp
 22021  017300  0EF8               	movlw	-8
 22022  017302  50E3               	movf	plusw1,w,c
 22023  017304  1026               	iorwf	btemp^0,w,c
 22024  017306  A4D8               	btfss	status,2,c
 22025  017308  D795               	goto	l9165
 22026                           
 22027                           ;stkvar	_neg @ sp[(-9)+7]
 22028  01730A  0EFE               	movlw	-2
 22029  01730C  006F FF8C  F026    	movff	plusw1,btemp
 22030  017312  0EFF               	movlw	-1
 22031  017314  50E3               	movf	plusw1,w,c
 22032  017316  1026               	iorwf	btemp^0,w,c
 22033  017318  A4D8               	btfss	status,2,c
 22034  01731A  D00E               	goto	l9179
 22035                           
 22036                           ;stkvar	_n @ sp[(-9)+5]
 22037  01731C  0EFC               	movlw	-4
 22038  01731E  006F FF8C  F026    	movff	plusw1,btemp
 22039  017324  1E26               	comf	btemp^0,f,c
 22040  017326  0EFD               	movlw	-3
 22041  017328  006F FF8C  F027    	movff	plusw1,btemp+1
 22042  01732E  1E27               	comf	(btemp+1)^0,f,c
 22043  017330  2A26               	incf	btemp^0,f,c
 22044  017332  B4D8               	btfsc	status,2,c
 22045  017334  2A27               	incf	(btemp+1)^0,f,c
 22046  017336  D008               	goto	l3100
 22047  017338                     l9179:
 22048                           
 22049                           ;stkvar	_n @ sp[(-9)+5]
 22050  017338  0EFC               	movlw	-4
 22051  01733A  006F FF8C  F026    	movff	plusw1,btemp
 22052  017340  0EFD               	movlw	-3
 22053  017342  006F FF8C  F027    	movff	plusw1,btemp+1
 22054  017348                     l3100:
 22055                           
 22056                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 22057  017348  0EF5               	movlw	245
 22058  01734A  26E1               	addwf	fsr1l,f,c
 22059  01734C  0EFF               	movlw	255
 22060  01734E  22E2               	addwfc	fsr1h,f,c
 22061  017350  0012               	return		;funcret
 22062  017352                     __end_of_atoi:
 22063                           	opt callstack 0
 22064                           
 22065 ;; *************** function _isspace *****************
 22066 ;; Defined at:
 22067 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 22068 ;; Parameters:    Size  Location     Type
 22069 ;;  c               2  [STACK] int 
 22070 ;; Auto vars:     Size  Location     Type
 22071 ;;		None
 22072 ;; Return value:  Size  Location     Type
 22073 ;;                  2  [STACK] int 
 22074 ;; Registers used:
 22075 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22076 ;; Tracked objects:
 22077 ;;		On entry : 0/0
 22078 ;;		On exit  : 0/0
 22079 ;;		Unchanged: 0/0
 22080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22085 ;;Total ram usage:        0 bytes
 22086 ;; Hardware stack levels used:    1
 22087 ;; Hardware stack levels required when called:   15
 22088 ;; This function calls:
 22089 ;;		Nothing
 22090 ;; This function is called by:
 22091 ;;		_atoi
 22092 ;; This function uses a reentrant model
 22093 ;;
 22094                           
 22095                           	psect	text78
 22096  01AA10                     __ptext78:
 22097                           	opt callstack 0
 22098  01AA10                     _isspace:
 22099                           	opt callstack 0
 22100                           
 22101                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22102  01AA10  52E6               	movf	postinc1,f,c
 22103                           
 22104                           ;stkvar	_isspace$6017 @ sp[(-1)+0]
 22105                           
 22106                           ;incstack = 0
 22107 ;; hardware stack exceeded
 22108  01AA12  0EFF               	movlw	-1
 22109  01AA14  6AE3               	clrf	plusw1,c
 22110  01AA16  2AE3               	incf	plusw1,f,c
 22111                           
 22112                           ;stkvar	_c @ sp[(-1)+-2]
 22113  01AA18  0EFD               	movlw	-3
 22114  01AA1A  006F FF8C  F026    	movff	plusw1,btemp
 22115  01AA20  0E20               	movlw	32
 22116  01AA22  1826               	xorwf	btemp^0,w,c
 22117  01AA24  E104               	bnz	u7230
 22118  01AA26  0EFE               	movlw	-2
 22119  01AA28  50E3               	movf	plusw1,w,c
 22120  01AA2A  B4D8               	btfsc	status,2,c
 22121  01AA2C  D012               	goto	l8537
 22122  01AA2E                     u7230:
 22123                           
 22124                           ;stkvar	_c @ sp[(-1)+-2]
 22125  01AA2E  0EFD               	movlw	-3
 22126  01AA30  50E3               	movf	plusw1,w,c
 22127  01AA32  0FF7               	addlw	247
 22128  01AA34  6E30               	movwf	(btemp+10)^0,c
 22129  01AA36  0EFE               	movlw	-2
 22130  01AA38  006F FF8C  F031    	movff	plusw1,btemp+11
 22131  01AA3E  0EFF               	movlw	255
 22132  01AA40  2231               	addwfc	(btemp+11)^0,f,c
 22133  01AA42  5031               	movf	(btemp+11)^0,w,c
 22134  01AA44  E104               	bnz	u7240
 22135  01AA46  0E05               	movlw	5
 22136  01AA48  5C30               	subwf	(btemp+10)^0,w,c
 22137  01AA4A  A0D8               	btfss	status,0,c
 22138  01AA4C  D002               	goto	l8537
 22139  01AA4E                     u7240:
 22140                           
 22141                           ;stkvar	_isspace$6017 @ sp[(-1)+0]
 22142  01AA4E  0EFF               	movlw	-1
 22143  01AA50  6AE3               	clrf	plusw1,c
 22144  01AA52                     l8537:
 22145                           
 22146                           ;stkvar	_isspace$6017 @ sp[(-1)+0]
 22147  01AA52  0EFF               	movlw	-1
 22148  01AA54  50E3               	movf	plusw1,w,c
 22149  01AA56  6E26               	movwf	btemp^0,c
 22150  01AA58  6A27               	clrf	(btemp+1)^0,c
 22151                           
 22152                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22153  01AA5A  52E5               	movf	postdec1,f,c
 22154  01AA5C  52E5               	movf	postdec1,f,c
 22155  01AA5E  52E5               	movf	postdec1,f,c
 22156  01AA60  0012               	return		;funcret
 22157  01AA62                     __end_of_isspace:
 22158                           	opt callstack 0
 22159                           
 22160 ;; *************** function _isdigit *****************
 22161 ;; Defined at:
 22162 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 22163 ;; Parameters:    Size  Location     Type
 22164 ;;  c               2  [STACK] int 
 22165 ;; Auto vars:     Size  Location     Type
 22166 ;;		None
 22167 ;; Return value:  Size  Location     Type
 22168 ;;                  2  [STACK] int 
 22169 ;; Registers used:
 22170 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22171 ;; Tracked objects:
 22172 ;;		On entry : 0/0
 22173 ;;		On exit  : 0/0
 22174 ;;		Unchanged: 0/0
 22175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22180 ;;Total ram usage:        0 bytes
 22181 ;; Hardware stack levels used:    1
 22182 ;; Hardware stack levels required when called:   15
 22183 ;; This function calls:
 22184 ;;		Nothing
 22185 ;; This function is called by:
 22186 ;;		_vfpfcnvrt
 22187 ;;		_atoi
 22188 ;; This function uses a reentrant model
 22189 ;;
 22190                           
 22191                           	psect	text79
 22192  01B0C4                     __ptext79:
 22193                           	opt callstack 0
 22194  01B0C4                     _isdigit:
 22195                           	opt callstack 0
 22196                           
 22197                           ;stkvar	_c @ sp[(0)+-2]
 22198                           
 22199                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22200                           ;incstack = 0
 22201 ;; hardware stack exceeded
 22202  01B0C4  0EFE               	movlw	-2
 22203  01B0C6  50E3               	movf	plusw1,w,c
 22204  01B0C8  0FD0               	addlw	208
 22205  01B0CA  6E30               	movwf	(btemp+10)^0,c
 22206  01B0CC  0EFF               	movlw	-1
 22207  01B0CE  006F FF8C  F031    	movff	plusw1,btemp+11
 22208  01B0D4  0EFF               	movlw	255
 22209  01B0D6  2231               	addwfc	(btemp+11)^0,f,c
 22210  01B0D8  5031               	movf	(btemp+11)^0,w,c
 22211  01B0DA  E106               	bnz	u6080
 22212  01B0DC  0E0A               	movlw	10
 22213  01B0DE  5C30               	subwf	(btemp+10)^0,w,c
 22214  01B0E0  B0D8               	btfsc	status,0,c
 22215  01B0E2  D002               	goto	u6080
 22216  01B0E4  0E01               	movlw	1
 22217  01B0E6  D001               	goto	u6090
 22218  01B0E8                     u6080:
 22219  01B0E8  0E00               	movlw	0
 22220  01B0EA                     u6090:
 22221  01B0EA  6E26               	movwf	btemp^0,c
 22222  01B0EC  6A27               	clrf	(btemp+1)^0,c
 22223                           
 22224                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22225  01B0EE  52E5               	movf	postdec1,f,c
 22226  01B0F0  52E5               	movf	postdec1,f,c
 22227  01B0F2  0012               	return		;funcret
 22228  01B0F4                     __end_of_isdigit:
 22229                           	opt callstack 0
 22230                           
 22231 ;; *************** function _set_vterm *****************
 22232 ;; Defined at:
 22233 ;;		line 107 in file "mconfig.c"
 22234 ;; Parameters:    Size  Location     Type
 22235 ;;  vterm           1  [STACK] const unsigned char 
 22236 ;; Auto vars:     Size  Location     Type
 22237 ;;		None
 22238 ;; Return value:  Size  Location     Type
 22239 ;;                  1  [STACK] unsigned char 
 22240 ;; Registers used:
 22241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22242 ;; Tracked objects:
 22243 ;;		On entry : 0/2
 22244 ;;		On exit  : 0/0
 22245 ;;		Unchanged: 0/0
 22246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22251 ;;Total ram usage:        0 bytes
 22252 ;; Hardware stack levels used:    1
 22253 ;; Hardware stack levels required when called:   15
 22254 ;; This function calls:
 22255 ;;		Nothing
 22256 ;; This function is called by:
 22257 ;;		_main
 22258 ;;		_check_help
 22259 ;; This function uses a reentrant model
 22260 ;;
 22261                           
 22262                           	psect	text80
 22263  01B622                     __ptext80:
 22264                           	opt callstack 0
 22265  01B622                     _set_vterm:
 22266                           	opt callstack 15
 22267                           
 22268                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 22269                           ;stkvar	_vterm @ sp[(0)+-1]
 22270                           
 22271                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22272                           ;incstack = 0
 22273  01B622  0EFF               	movlw	-1
 22274  01B624  006F FF8C  F031    	movff	plusw1,btemp+11
 22275  01B62A  0E03               	movlw	3
 22276  01B62C  1631               	andwf	(btemp+11)^0,f,c
 22277  01B62E  EE22  F1DF         	lfsr	2,_D+480
 22278  01B632  50DF               	movf	223,w,c
 22279  01B634  1831               	xorwf	(btemp+11)^0,w,c
 22280  01B636  0BFE               	andlw	-2
 22281  01B638  1831               	xorwf	(btemp+11)^0,w,c
 22282  01B63A  6EDF               	movwf	223,c
 22283                           
 22284                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22285  01B63C  52E5               	movf	postdec1,f,c
 22286  01B63E  0012               	return		;funcret
 22287  01B640                     __end_of_set_vterm:
 22288                           	opt callstack 0
 22289                           
 22290 ;; *************** function _set_temp_display_help *****************
 22291 ;; Defined at:
 22292 ;;		line 211 in file "mconfig.c"
 22293 ;; Parameters:    Size  Location     Type
 22294 ;;  new_response    1  [STACK] const enum E16509
 22295 ;; Auto vars:     Size  Location     Type
 22296 ;;		None
 22297 ;; Return value:  Size  Location     Type
 22298 ;;                  1  [STACK] enum E16509
 22299 ;; Registers used:
 22300 ;;		wreg, fsr1l, fsr1h
 22301 ;; Tracked objects:
 22302 ;;		On entry : 0/2
 22303 ;;		On exit  : 3F/2
 22304 ;;		Unchanged: 0/0
 22305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22310 ;;Total ram usage:        0 bytes
 22311 ;; Hardware stack levels used:    1
 22312 ;; Hardware stack levels required when called:   15
 22313 ;; This function calls:
 22314 ;;		Nothing
 22315 ;; This function is called by:
 22316 ;;		_check_help
 22317 ;; This function uses a reentrant model
 22318 ;;
 22319                           
 22320                           	psect	text81
 22321  01B7A2                     __ptext81:
 22322                           	opt callstack 0
 22323  01B7A2                     _set_temp_display_help:
 22324                           	opt callstack 14
 22325                           
 22326                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 22327                           
 22328                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22329                           ;incstack = 0
 22330  01B7A2  0102               	movlb	2	; () banked
 22331  01B7A4  51AC               	movf	(_V+165)& (0+255),w,b	;volatile
 22332                           
 22333                           ; BSR set to: 2
 22334                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 22335                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22336  01B7A6  0EFF               	movlw	-1
 22337  01B7A8  006F FF8C  F2AC    	movff	plusw1,_V+165	;volatile
 22338                           
 22339                           ; BSR set to: 2
 22340                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 22341  01B7AE  52E5               	movf	postdec1,f,c
 22342  01B7B0  0012               	return		;funcret
 22343  01B7B2                     __end_of_set_temp_display_help:
 22344                           	opt callstack 0
 22345                           
 22346 ;; *************** function _set_display_info *****************
 22347 ;; Defined at:
 22348 ;;		line 200 in file "mconfig.c"
 22349 ;; Parameters:    Size  Location     Type
 22350 ;;  new_response    1  [STACK] const enum E16509
 22351 ;; Auto vars:     Size  Location     Type
 22352 ;;		None
 22353 ;; Return value:  Size  Location     Type
 22354 ;;                  1  [STACK] enum E16994
 22355 ;; Registers used:
 22356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22357 ;; Tracked objects:
 22358 ;;		On entry : 0/0
 22359 ;;		On exit  : 0/0
 22360 ;;		Unchanged: 0/0
 22361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22366 ;;Total ram usage:        0 bytes
 22367 ;; Hardware stack levels used:    1
 22368 ;; Hardware stack levels required when called:   16
 22369 ;; This function calls:
 22370 ;;		_TimerDone
 22371 ;; This function is called by:
 22372 ;;		_main
 22373 ;;		_check_help
 22374 ;; This function uses a reentrant model
 22375 ;;
 22376                           
 22377                           	psect	text82
 22378  01B640                     __ptext82:
 22379                           	opt callstack 0
 22380  01B640                     _set_display_info:
 22381                           	opt callstack 14
 22382                           
 22383                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 22384                           
 22385                           ; BSR set to: 2
 22386                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22387                           ;incstack = 0
 22388  01B640  0E07               	movlw	7
 22389  01B642  6EE6               	movwf	postinc1,c
 22390  01B644  EC3D  F0D9         	call	_TimerDone	;wreg free
 22391  01B648  5026               	movf	btemp^0,w,c
 22392  01B64A  B4D8               	btfsc	status,2,c
 22393  01B64C  D006               	goto	l1714
 22394                           
 22395                           ;mconfig.c: 205:   old_info = V.response.info;
 22396  01B64E  0102               	movlb	2	; () banked
 22397  01B650  51AB               	movf	(_V+164)& (0+255),w,b	;volatile
 22398                           
 22399                           ; BSR set to: 2
 22400                           ;mconfig.c: 206:   V.response.info = new_response_info;
 22401                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22402  01B652  0EFF               	movlw	-1
 22403  01B654  006F FF8C  F2AB    	movff	plusw1,_V+164	;volatile
 22404  01B65A                     l1714:
 22405                           
 22406                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 22407  01B65A  52E5               	movf	postdec1,f,c
 22408  01B65C  0012               	return		;funcret
 22409  01B65E                     __end_of_set_display_info:
 22410                           	opt callstack 0
 22411                           
 22412 ;; *************** function _mode_lamp_dim *****************
 22413 ;; Defined at:
 22414 ;;		line 13 in file "mconfig.c"
 22415 ;; Parameters:    Size  Location     Type
 22416 ;;  level           2  [STACK] const unsigned short 
 22417 ;; Auto vars:     Size  Location     Type
 22418 ;;		None
 22419 ;; Return value:  Size  Location     Type
 22420 ;;                  1  [STACK] void 
 22421 ;; Registers used:
 22422 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22423 ;; Tracked objects:
 22424 ;;		On entry : 0/2
 22425 ;;		On exit  : 0/0
 22426 ;;		Unchanged: 0/0
 22427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22432 ;;Total ram usage:        0 bytes
 22433 ;; Hardware stack levels used:    1
 22434 ;; Hardware stack levels required when called:   16
 22435 ;; This function calls:
 22436 ;;		_PWM8_LoadDutyValue
 22437 ;; This function is called by:
 22438 ;;		_main
 22439 ;;		_check_help
 22440 ;; This function uses a reentrant model
 22441 ;;
 22442                           
 22443                           	psect	text83
 22444  01B6EA                     __ptext83:
 22445                           	opt callstack 0
 22446  01B6EA                     _mode_lamp_dim:
 22447                           	opt callstack 14
 22448                           
 22449                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 22450                           ;stkvar	_level @ sp[(0)+-2]
 22451                           
 22452                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22453                           ;incstack = 0
 22454  01B6EA  0EFE               	movlw	-2
 22455  01B6EC  006F FF8F FFE6     	movff	plusw1,postinc1
 22456  01B6F2  006F FF8F FFE6     	movff	plusw1,postinc1
 22457  01B6F8  EC9B  F0D6         	call	_PWM8_LoadDutyValue	;wreg free
 22458                           
 22459                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 22460  01B6FC  52E5               	movf	postdec1,f,c
 22461  01B6FE  52E5               	movf	postdec1,f,c
 22462  01B700  0012               	return		;funcret
 22463  01B702                     __end_of_mode_lamp_dim:
 22464                           	opt callstack 0
 22465                           
 22466 ;; *************** function _mode_lamp_bright *****************
 22467 ;; Defined at:
 22468 ;;		line 18 in file "mconfig.c"
 22469 ;; Parameters:    Size  Location     Type
 22470 ;;		None
 22471 ;; Auto vars:     Size  Location     Type
 22472 ;;		None
 22473 ;; Return value:  Size  Location     Type
 22474 ;;                  1  [STACK] void 
 22475 ;; Registers used:
 22476 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22477 ;; Tracked objects:
 22478 ;;		On entry : 0/0
 22479 ;;		On exit  : 0/0
 22480 ;;		Unchanged: 0/0
 22481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22486 ;;Total ram usage:        0 bytes
 22487 ;; Hardware stack levels used:    1
 22488 ;; Hardware stack levels required when called:   16
 22489 ;; This function calls:
 22490 ;;		_PWM8_LoadDutyValue
 22491 ;; This function is called by:
 22492 ;;		_check_help
 22493 ;; This function uses a reentrant model
 22494 ;;
 22495                           
 22496                           	psect	text84
 22497  01B7C0                     __ptext84:
 22498                           	opt callstack 0
 22499  01B7C0                     _mode_lamp_bright:
 22500                           	opt callstack 13
 22501                           
 22502                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 22503                           
 22504                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22505                           ;incstack = 0
 22506  01B7C0  0E2C               	movlw	44
 22507  01B7C2  6EE6               	movwf	postinc1,c
 22508  01B7C4  0E01               	movlw	1
 22509  01B7C6  6EE6               	movwf	postinc1,c
 22510  01B7C8  EC9B  F0D6         	call	_PWM8_LoadDutyValue	;wreg free
 22511                           
 22512                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22513  01B7CC  0012               	return		;funcret
 22514  01B7CE                     __end_of_mode_lamp_bright:
 22515                           	opt callstack 0
 22516                           
 22517 ;; *************** function _PWM8_LoadDutyValue *****************
 22518 ;; Defined at:
 22519 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 22520 ;; Parameters:    Size  Location     Type
 22521 ;;  dutyValue       2  [STACK] unsigned short 
 22522 ;; Auto vars:     Size  Location     Type
 22523 ;;		None
 22524 ;; Return value:  Size  Location     Type
 22525 ;;                  1  [STACK] void 
 22526 ;; Registers used:
 22527 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22528 ;; Tracked objects:
 22529 ;;		On entry : 0/2
 22530 ;;		On exit  : 0/0
 22531 ;;		Unchanged: 0/0
 22532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22537 ;;Total ram usage:        0 bytes
 22538 ;; Hardware stack levels used:    1
 22539 ;; Hardware stack levels required when called:   15
 22540 ;; This function calls:
 22541 ;;		Nothing
 22542 ;; This function is called by:
 22543 ;;		_mode_lamp_dim
 22544 ;;		_mode_lamp_bright
 22545 ;; This function uses a reentrant model
 22546 ;;
 22547                           
 22548                           	psect	text85
 22549  01AD36                     __ptext85:
 22550                           	opt callstack 0
 22551  01AD36                     _PWM8_LoadDutyValue:
 22552                           	opt callstack 14
 22553                           
 22554                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22555                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22556                           
 22557                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22558                           ;incstack = 0
 22559  01AD36  0EFE               	movlw	-2
 22560  01AD38  006F FF8C  F030    	movff	plusw1,btemp+10
 22561  01AD3E  0EFF               	movlw	-1
 22562  01AD40  006F FF8C  F031    	movff	plusw1,btemp+11
 22563  01AD46  90D8               	bcf	status,0,c
 22564  01AD48  3231               	rrcf	(btemp+11)^0,f,c
 22565  01AD4A  3230               	rrcf	(btemp+10)^0,f,c
 22566  01AD4C  90D8               	bcf	status,0,c
 22567  01AD4E  3231               	rrcf	(btemp+11)^0,f,c
 22568  01AD50  3230               	rrcf	(btemp+10)^0,f,c
 22569  01AD52  5030               	movf	(btemp+10)^0,w,c
 22570  01AD54  6E61               	movwf	97,c	;volatile
 22571                           
 22572                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 22573                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22574  01AD56  0EFE               	movlw	-2
 22575  01AD58  006F FF8C  F031    	movff	plusw1,btemp+11
 22576  01AD5E  0E03               	movlw	3
 22577  01AD60  1631               	andwf	(btemp+11)^0,f,c
 22578  01AD62  0E06               	movlw	6
 22579  01AD64  6E26               	movwf	btemp^0,c
 22580  01AD66                     u9155:
 22581  01AD66  90D8               	bcf	status,0,c
 22582  01AD68  3631               	rlcf	(btemp+11)^0,f,c
 22583  01AD6A  2E26               	decfsz	btemp^0,f,c
 22584  01AD6C  D7FC               	goto	u9155
 22585  01AD6E  5031               	movf	(btemp+11)^0,w,c
 22586  01AD70  6E60               	movwf	96,c	;volatile
 22587                           
 22588                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 22589  01AD72  52E5               	movf	postdec1,f,c
 22590  01AD74  52E5               	movf	postdec1,f,c
 22591  01AD76  0012               	return		;funcret
 22592  01AD78                     __end_of_PWM8_LoadDutyValue:
 22593                           	opt callstack 0
 22594                           
 22595 ;; *************** function _help_button *****************
 22596 ;; Defined at:
 22597 ;;		line 26 in file "mconfig.c"
 22598 ;; Parameters:    Size  Location     Type
 22599 ;;		None
 22600 ;; Auto vars:     Size  Location     Type
 22601 ;;		None
 22602 ;; Return value:  Size  Location     Type
 22603 ;;                  1  [STACK] _Bool 
 22604 ;; Registers used:
 22605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22606 ;; Tracked objects:
 22607 ;;		On entry : 0/2
 22608 ;;		On exit  : 0/0
 22609 ;;		Unchanged: 0/0
 22610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22615 ;;Total ram usage:        0 bytes
 22616 ;; Hardware stack levels used:    1
 22617 ;; Hardware stack levels required when called:   16
 22618 ;; This function calls:
 22619 ;;		_StartTimer
 22620 ;;		_TimerDone
 22621 ;; This function is called by:
 22622 ;;		_check_help
 22623 ;; This function uses a reentrant model
 22624 ;;
 22625                           
 22626                           	psect	text86
 22627  01AEF0                     __ptext86:
 22628                           	opt callstack 0
 22629  01AEF0                     _help_button:
 22630                           	opt callstack 13
 22631                           
 22632                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 22633                           
 22634                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22635                           ;incstack = 0
 22636  01AEF0  B0CB               	btfsc	203,0,c	;volatile
 22637  01AEF2  D00C               	goto	l1657
 22638                           
 22639                           ;mconfig.c: 29:   V.help = 1;
 22640  01AEF4  0102               	movlb	2	; () banked
 22641  01AEF6  85A2               	bsf	(_V+155)& (0+255),2,b	;volatile
 22642                           
 22643                           ; BSR set to: 2
 22644                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 22645  01AEF8  0E08               	movlw	8
 22646  01AEFA  6EE6               	movwf	postinc1,c
 22647  01AEFC  EC3D  F0D9         	call	_TimerDone	;wreg free
 22648  01AF00  5026               	movf	btemp^0,w,c
 22649  01AF02  B4D8               	btfsc	status,2,c
 22650  01AF04  D003               	goto	l1657
 22651                           
 22652                           ;mconfig.c: 31:    return 1;
 22653  01AF06  0E01               	movlw	1
 22654  01AF08  6E26               	movwf	btemp^0,c
 22655  01AF0A  0012               	return	
 22656  01AF0C                     l1657:
 22657                           
 22658                           ;mconfig.c: 34:  if (!V.help)
 22659  01AF0C  0102               	movlb	2	; () banked
 22660  01AF0E  B5A2               	btfsc	(_V+155)& (0+255),2,b	;volatile
 22661  01AF10  D008               	goto	l10243
 22662                           
 22663                           ; BSR set to: 2
 22664                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 22665  01AF12  0E2C               	movlw	44
 22666  01AF14  6EE6               	movwf	postinc1,c
 22667  01AF16  0E01               	movlw	1
 22668  01AF18  6EE6               	movwf	postinc1,c
 22669  01AF1A  0E08               	movlw	8
 22670  01AF1C  6EE6               	movwf	postinc1,c
 22671  01AF1E  ECBC  F0D6         	call	_StartTimer	;wreg free
 22672  01AF22                     l10243:
 22673                           
 22674                           ;mconfig.c: 37:  return 0;
 22675  01AF22  0E00               	movlw	0
 22676  01AF24  6E26               	movwf	btemp^0,c
 22677                           
 22678                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 22679  01AF26  0012               	return		;funcret
 22680  01AF28                     __end_of_help_button:
 22681                           	opt callstack 0
 22682                           
 22683 ;; *************** function _TimerDone *****************
 22684 ;; Defined at:
 22685 ;;		line 20 in file "timers.c"
 22686 ;; Parameters:    Size  Location     Type
 22687 ;;  timer           1  [STACK] const unsigned char 
 22688 ;; Auto vars:     Size  Location     Type
 22689 ;;		None
 22690 ;; Return value:  Size  Location     Type
 22691 ;;                  1  [STACK] _Bool 
 22692 ;; Registers used:
 22693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22694 ;; Tracked objects:
 22695 ;;		On entry : 0/0
 22696 ;;		On exit  : 0/0
 22697 ;;		Unchanged: 0/0
 22698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22703 ;;Total ram usage:        0 bytes
 22704 ;; Hardware stack levels used:    1
 22705 ;; Hardware stack levels required when called:   15
 22706 ;; This function calls:
 22707 ;;		Nothing
 22708 ;; This function is called by:
 22709 ;;		_main
 22710 ;;		_WaitMs
 22711 ;;		_help_button
 22712 ;;		_check_help
 22713 ;;		_set_display_info
 22714 ;;		_update_adc_result
 22715 ;;		_esr_check
 22716 ;; This function uses a reentrant model
 22717 ;;
 22718                           
 22719                           	psect	text87
 22720  01B27A                     __ptext87:
 22721                           	opt callstack 0
 22722  01B27A                     _TimerDone:
 22723                           	opt callstack 14
 22724                           
 22725                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22726                           ;incstack = 0
 22727  01B27A  0004               	clrwdt		;# 
 22728                           
 22729                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 22730                           ;stkvar	_timer @ sp[(0)+-1]
 22731  01B27C  0EFF               	movlw	-1
 22732  01B27E  50E3               	movf	plusw1,w,c
 22733  01B280  0D02               	mullw	2
 22734  01B282  0E94               	movlw	low _tickCount
 22735  01B284  24F3               	addwf	243,w,c
 22736  01B286  6ED9               	movwf	fsr2l,c
 22737  01B288  0E03               	movlw	high _tickCount
 22738  01B28A  20F4               	addwfc	prodh,w,c
 22739  01B28C  6EDA               	movwf	fsr2h,c
 22740  01B28E  50DE               	movf	postinc2,w,c
 22741  01B290  10DE               	iorwf	postinc2,w,c
 22742  01B292  A4D8               	btfss	status,2,c
 22743  01B294  D002               	goto	l9577
 22744                           
 22745                           ;timers.c: 24:   return 1;
 22746  01B296  0E01               	movlw	1
 22747  01B298  D001               	goto	L25
 22748  01B29A                     l9577:
 22749                           
 22750                           ;timers.c: 26:  return 0;
 22751  01B29A  0E00               	movlw	0
 22752  01B29C                     L25:
 22753  01B29C  6E26               	movwf	btemp^0,c
 22754                           
 22755                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22756  01B29E  52E5               	movf	postdec1,f,c
 22757  01B2A0  0012               	return		;funcret
 22758  01B2A2                     __end_of_TimerDone:
 22759                           	opt callstack 0
 22760                           
 22761 ;; *************** function _StartTimer *****************
 22762 ;; Defined at:
 22763 ;;		line 12 in file "timers.c"
 22764 ;; Parameters:    Size  Location     Type
 22765 ;;  timer           1  [STACK] const unsigned char 
 22766 ;;  count           2  [STACK] const unsigned short 
 22767 ;; Auto vars:     Size  Location     Type
 22768 ;;		None
 22769 ;; Return value:  Size  Location     Type
 22770 ;;                  1  [STACK] void 
 22771 ;; Registers used:
 22772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22773 ;; Tracked objects:
 22774 ;;		On entry : 0/0
 22775 ;;		On exit  : 0/0
 22776 ;;		Unchanged: 0/0
 22777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22782 ;;Total ram usage:        0 bytes
 22783 ;; Hardware stack levels used:    1
 22784 ;; Hardware stack levels required when called:   15
 22785 ;; This function calls:
 22786 ;;		Nothing
 22787 ;; This function is called by:
 22788 ;;		_main
 22789 ;;		_WaitMs
 22790 ;;		_help_button
 22791 ;;		_check_help
 22792 ;;		_update_adc_result
 22793 ;;		_calc_bsoc
 22794 ;;		_esr_check
 22795 ;; This function uses a reentrant model
 22796 ;;
 22797                           
 22798                           	psect	text88
 22799  01AD78                     __ptext88:
 22800                           	opt callstack 0
 22801  01AD78                     _StartTimer:
 22802                           	opt callstack 0
 22803                           
 22804                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 22805                           ;stkvar	_count @ sp[(0)+-3]
 22806                           
 22807                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22808                           ;incstack = 0
 22809 ;; hardware stack exceeded
 22810  01AD78  0EFD               	movlw	-3
 22811  01AD7A  006F FF8C  F030    	movff	plusw1,btemp+10
 22812  01AD80  0EFE               	movlw	-2
 22813  01AD82  006F FF8C  F031    	movff	plusw1,btemp+11
 22814  01AD88  90D8               	bcf	status,0,c
 22815  01AD8A  3430               	rlcf	(btemp+10)^0,w,c
 22816  01AD8C  6E2E               	movwf	(btemp+8)^0,c
 22817  01AD8E  3431               	rlcf	(btemp+11)^0,w,c
 22818  01AD90  6E2F               	movwf	(btemp+9)^0,c
 22819                           
 22820                           ;stkvar	_timer @ sp[(0)+-1]
 22821  01AD92  0EFF               	movlw	-1
 22822  01AD94  50E3               	movf	plusw1,w,c
 22823  01AD96  0D02               	mullw	2
 22824  01AD98  0E94               	movlw	low _tickCount
 22825  01AD9A  24F3               	addwf	243,w,c
 22826  01AD9C  6ED9               	movwf	fsr2l,c
 22827  01AD9E  0E03               	movlw	high _tickCount
 22828  01ADA0  20F4               	addwfc	prodh,w,c
 22829  01ADA2  6EDA               	movwf	fsr2h,c
 22830  01ADA4  0060  F0BB  FFDE   	movff	btemp+8,postinc2
 22831  01ADAA  0060  F0BF  FFDD   	movff	btemp+9,postdec2
 22832                           
 22833                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 22834  01ADB0  52E5               	movf	postdec1,f,c
 22835  01ADB2  52E5               	movf	postdec1,f,c
 22836  01ADB4  52E5               	movf	postdec1,f,c
 22837  01ADB6  0012               	return		;funcret
 22838  01ADB8                     __end_of_StartTimer:
 22839                           	opt callstack 0
 22840                           
 22841 ;; *************** function _display_info *****************
 22842 ;; Defined at:
 22843 ;;		line 190 in file "mconfig.c"
 22844 ;; Parameters:    Size  Location     Type
 22845 ;;		None
 22846 ;; Auto vars:     Size  Location     Type
 22847 ;;		None
 22848 ;; Return value:  Size  Location     Type
 22849 ;;                  1  [STACK] enum E16509
 22850 ;; Registers used:
 22851 ;;		btemp
 22852 ;; Tracked objects:
 22853 ;;		On entry : 0/2
 22854 ;;		On exit  : 0/0
 22855 ;;		Unchanged: 0/0
 22856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22861 ;;Total ram usage:        0 bytes
 22862 ;; Hardware stack levels used:    1
 22863 ;; Hardware stack levels required when called:   15
 22864 ;; This function calls:
 22865 ;;		Nothing
 22866 ;; This function is called by:
 22867 ;;		_check_help
 22868 ;; This function uses a reentrant model
 22869 ;;
 22870                           
 22871                           	psect	text89
 22872  01B836                     __ptext89:
 22873                           	opt callstack 0
 22874  01B836                     _display_info:
 22875                           	opt callstack 14
 22876                           
 22877                           ;mconfig.c: 192:  return V.response.info;
 22878                           
 22879                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22880                           ;incstack = 0
 22881  01B836  0060  FAAC  F026   	movff	_V+164,btemp	;volatile
 22882                           
 22883                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22884  01B83C  0012               	return		;funcret
 22885  01B83E                     __end_of_display_info:
 22886                           	opt callstack 0
 22887                           
 22888 ;; *************** function _display_help *****************
 22889 ;; Defined at:
 22890 ;;		line 195 in file "mconfig.c"
 22891 ;; Parameters:    Size  Location     Type
 22892 ;;		None
 22893 ;; Auto vars:     Size  Location     Type
 22894 ;;		None
 22895 ;; Return value:  Size  Location     Type
 22896 ;;                  1  [STACK] enum E16509
 22897 ;; Registers used:
 22898 ;;		btemp
 22899 ;; Tracked objects:
 22900 ;;		On entry : 3F/2
 22901 ;;		On exit  : 0/0
 22902 ;;		Unchanged: 0/0
 22903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22908 ;;Total ram usage:        0 bytes
 22909 ;; Hardware stack levels used:    1
 22910 ;; Hardware stack levels required when called:   15
 22911 ;; This function calls:
 22912 ;;		Nothing
 22913 ;; This function is called by:
 22914 ;;		_check_help
 22915 ;; This function uses a reentrant model
 22916 ;;
 22917                           
 22918                           	psect	text90
 22919  01B83E                     __ptext90:
 22920                           	opt callstack 0
 22921  01B83E                     _display_help:
 22922                           	opt callstack 14
 22923                           
 22924                           ;mconfig.c: 197:  return V.response.help_temp;
 22925                           
 22926                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22927                           ;incstack = 0
 22928  01B83E  0060  FAB0  F026   	movff	_V+165,btemp	;volatile
 22929                           
 22930                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22931  01B844  0012               	return		;funcret
 22932  01B846                     __end_of_display_help:
 22933                           	opt callstack 0
 22934                           
 22935 ;; *************** function _check_enter_button *****************
 22936 ;; Defined at:
 22937 ;;		line 42 in file "hid.c"
 22938 ;; Parameters:    Size  Location     Type
 22939 ;;  h               1  [STACK] PTR struct H_data
 22940 ;;		 -> H(7), 
 22941 ;; Auto vars:     Size  Location     Type
 22942 ;;		None
 22943 ;; Return value:  Size  Location     Type
 22944 ;;                  1  [STACK] _Bool 
 22945 ;; Registers used:
 22946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 22947 ;; Tracked objects:
 22948 ;;		On entry : 0/0
 22949 ;;		On exit  : 0/0
 22950 ;;		Unchanged: 0/0
 22951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22956 ;;Total ram usage:        0 bytes
 22957 ;; Hardware stack levels used:    1
 22958 ;; Hardware stack levels required when called:   15
 22959 ;; This function calls:
 22960 ;;		Nothing
 22961 ;; This function is called by:
 22962 ;;		_main
 22963 ;; This function uses a reentrant model
 22964 ;;
 22965                           
 22966                           	psect	text91
 22967  01ADB8                     __ptext91:
 22968                           	opt callstack 0
 22969  01ADB8                     _check_enter_button:
 22970                           	opt callstack 15
 22971                           
 22972                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 22973                           ;stkvar	_h @ sp[(0)+-1]
 22974                           
 22975                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22976                           ;incstack = 0
 22977  01ADB8  0EFF               	movlw	-1
 22978  01ADBA  50E3               	movf	plusw1,w,c
 22979  01ADBC  6ED9               	movwf	fsr2l,c
 22980  01ADBE  6ADA               	clrf	fsr2h,c
 22981  01ADC0  0E04               	movlw	4
 22982  01ADC2  26D9               	addwf	fsr2l,f,c
 22983  01ADC4  50DF               	movf	indf2,w,c
 22984  01ADC6  A4D8               	btfss	status,2,c
 22985  01ADC8  D013               	goto	l10825
 22986                           
 22987                           ;stkvar	_h @ sp[(0)+-1]
 22988  01ADCA  0EFF               	movlw	-1
 22989  01ADCC  50E3               	movf	plusw1,w,c
 22990  01ADCE  6ED9               	movwf	fsr2l,c
 22991  01ADD0  6ADA               	clrf	fsr2h,c
 22992  01ADD2  0E05               	movlw	5
 22993  01ADD4  26D9               	addwf	fsr2l,f,c
 22994  01ADD6  50DF               	movf	indf2,w,c
 22995  01ADD8  A4D8               	btfss	status,2,c
 22996  01ADDA  D00A               	goto	l10825
 22997                           
 22998                           ;hid.c: 45:   h->wait_enter = 1;
 22999                           ;stkvar	_h @ sp[(0)+-1]
 23000  01ADDC  0EFF               	movlw	-1
 23001  01ADDE  50E3               	movf	plusw1,w,c
 23002  01ADE0  6ED9               	movwf	fsr2l,c
 23003  01ADE2  6ADA               	clrf	fsr2h,c
 23004  01ADE4  0E04               	movlw	4
 23005  01ADE6  26D9               	addwf	fsr2l,f,c
 23006  01ADE8  0E01               	movlw	1
 23007  01ADEA  6EDF               	movwf	indf2,c
 23008                           
 23009                           ;hid.c: 46:   return 1;
 23010  01ADEC  0E01               	movlw	1
 23011  01ADEE  D001               	goto	L26
 23012  01ADF0                     l10825:
 23013                           
 23014                           ;hid.c: 48:  return 0;
 23015  01ADF0  0E00               	movlw	0
 23016  01ADF2                     L26:
 23017  01ADF2  6E26               	movwf	btemp^0,c
 23018                           
 23019                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 23020  01ADF4  52E5               	movf	postdec1,f,c
 23021  01ADF6  0012               	return		;funcret
 23022  01ADF8                     __end_of_check_enter_button:
 23023                           	opt callstack 0
 23024                           
 23025 ;; *************** function _calc_ror_data *****************
 23026 ;; Defined at:
 23027 ;;		line 101 in file "mbmc.c"
 23028 ;; Parameters:    Size  Location     Type
 23029 ;;		None
 23030 ;; Auto vars:     Size  Location     Type
 23031 ;;		None
 23032 ;; Return value:  Size  Location     Type
 23033 ;;                  1  [STACK] void 
 23034 ;; Registers used:
 23035 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23036 ;; Tracked objects:
 23037 ;;		On entry : 0/39
 23038 ;;		On exit  : 0/0
 23039 ;;		Unchanged: 0/0
 23040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23045 ;;Total ram usage:        0 bytes
 23046 ;; Hardware stack levels used:    1
 23047 ;; Hardware stack levels required when called:   18
 23048 ;; This function calls:
 23049 ;;		___flge
 23050 ;;		___flsub
 23051 ;;		_conv_raw_result
 23052 ;;		_fabsf
 23053 ;; This function is called by:
 23054 ;;		_main
 23055 ;; This function uses a reentrant model
 23056 ;;
 23057                           
 23058                           	psect	text92
 23059  01829A                     __ptext92:
 23060                           	opt callstack 0
 23061  01829A                     _calc_ror_data:
 23062                           	opt callstack 12
 23063                           
 23064                           ;mbmc.c: 103:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 105:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 23065                           
 23066                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23067                           ;incstack = 0
 23068  01829A  0060  F1FB  FFE6   	movff	calc_ror_data@bcror,postinc1
 23069  0182A0  0060  F1FF  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 23070  0182A6  0060  F203  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 23071  0182AC  0060  F207  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 23072  0182B2  0E00               	movlw	0
 23073  0182B4  6EE6               	movwf	postinc1,c
 23074  0182B6  0E00               	movlw	0
 23075  0182B8  6EE6               	movwf	postinc1,c
 23076  0182BA  EC60  F0A7         	call	_conv_raw_result	;wreg free
 23077  0182BE  0060  F09B  FFE6   	movff	btemp,postinc1
 23078  0182C4  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23079  0182CA  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23080  0182D0  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23081  0182D6  ECED  F0D5         	call	___flsub	;wreg free
 23082  0182DA  0060  F09B  FFE6   	movff	btemp,postinc1
 23083  0182E0  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23084  0182E6  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23085  0182EC  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23086  0182F2  ECD2  F0CE         	call	_fabsf	;wreg free
 23087  0182F6  0060  F098  F16C   	movff	btemp,_C+108	;volatile
 23088  0182FC  0060  F09C  F16D   	movff	btemp+1,_C+109	;volatile
 23089  018302  0060  F0A0  F16E   	movff	btemp+2,_C+110	;volatile
 23090  018308  0060  F0A4  F16F   	movff	btemp+3,_C+111	;volatile
 23091                           
 23092                           ;mbmc.c: 106:  bcror = conv_raw_result(C_BATT, CONV);
 23093  01830E  0E00               	movlw	0
 23094  018310  6EE6               	movwf	postinc1,c
 23095  018312  0E00               	movlw	0
 23096  018314  6EE6               	movwf	postinc1,c
 23097  018316  EC60  F0A7         	call	_conv_raw_result	;wreg free
 23098  01831A  0060  F098  F07E   	movff	btemp,calc_ror_data@bcror
 23099  018320  0060  F09C  F07F   	movff	btemp+1,calc_ror_data@bcror+1
 23100  018326  0060  F0A0  F080   	movff	btemp+2,calc_ror_data@bcror+2
 23101  01832C  0060  F0A4  F081   	movff	btemp+3,calc_ror_data@bcror+3
 23102                           
 23103                           ;mbmc.c: 107:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 23104  018332  0060  F20B  FFE6   	movff	calc_ror_data@bvror,postinc1
 23105  018338  0060  F20F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 23106  01833E  0060  F213  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 23107  018344  0060  F217  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 23108  01834A  0E00               	movlw	0
 23109  01834C  6EE6               	movwf	postinc1,c
 23110  01834E  0E04               	movlw	4
 23111  018350  6EE6               	movwf	postinc1,c
 23112  018352  EC60  F0A7         	call	_conv_raw_result	;wreg free
 23113  018356  0060  F09B  FFE6   	movff	btemp,postinc1
 23114  01835C  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23115  018362  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23116  018368  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23117  01836E  ECED  F0D5         	call	___flsub	;wreg free
 23118  018372  0060  F09B  FFE6   	movff	btemp,postinc1
 23119  018378  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23120  01837E  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23121  018384  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23122  01838A  ECD2  F0CE         	call	_fabsf	;wreg free
 23123  01838E  0060  F098  F168   	movff	btemp,_C+104	;volatile
 23124  018394  0060  F09C  F169   	movff	btemp+1,_C+105	;volatile
 23125  01839A  0060  F0A0  F16A   	movff	btemp+2,_C+106	;volatile
 23126  0183A0  0060  F0A4  F16B   	movff	btemp+3,_C+107	;volatile
 23127                           
 23128                           ;mbmc.c: 108:  if (C.bv_ror < 0.0051)
 23129  0183A6  0EE7               	movlw	231
 23130  0183A8  6EE6               	movwf	postinc1,c
 23131  0183AA  0E1D               	movlw	29
 23132  0183AC  6EE6               	movwf	postinc1,c
 23133  0183AE  0EA7               	movlw	167
 23134  0183B0  6EE6               	movwf	postinc1,c
 23135  0183B2  0E3B               	movlw	59
 23136  0183B4  6EE6               	movwf	postinc1,c
 23137  0183B6  0060  F5A3  FFE6   	movff	_C+104,postinc1
 23138  0183BC  0060  F5A7  FFE6   	movff	_C+105,postinc1
 23139  0183C2  0060  F5AB  FFE6   	movff	_C+106,postinc1
 23140  0183C8  0060  F5AF  FFE6   	movff	_C+107,postinc1
 23141  0183CE  EC78  F0C3         	call	___flge	;wreg free
 23142  0183D2  B026               	btfsc	btemp& (0+255),0,c
 23143  0183D4  D009               	goto	l10619
 23144                           
 23145                           ;mbmc.c: 109:   C.bv_ror = 0.0140 + 0.0001;
 23146  0183D6  0EB0               	movlw	176
 23147  0183D8  0101               	movlb	1	; () banked
 23148  0183DA  6F68               	movwf	(_C+104)& (0+255),b	;volatile
 23149  0183DC  0E03               	movlw	3
 23150  0183DE  6F69               	movwf	(_C+105)& (0+255),b	;volatile
 23151  0183E0  0E67               	movlw	103
 23152  0183E2  6F6A               	movwf	(_C+106)& (0+255),b	;volatile
 23153  0183E4  0E3C               	movlw	60
 23154  0183E6  6F6B               	movwf	(_C+107)& (0+255),b	;volatile
 23155  0183E8                     l10619:
 23156                           
 23157                           ;mbmc.c: 110:  bvror = conv_raw_result(V_BAT, CONV);
 23158  0183E8  0E00               	movlw	0
 23159  0183EA  6EE6               	movwf	postinc1,c
 23160  0183EC  0E04               	movlw	4
 23161  0183EE  6EE6               	movwf	postinc1,c
 23162  0183F0  EC60  F0A7         	call	_conv_raw_result	;wreg free
 23163  0183F4  0060  F098  F082   	movff	btemp,calc_ror_data@bvror
 23164  0183FA  0060  F09C  F083   	movff	btemp+1,calc_ror_data@bvror+1
 23165  018400  0060  F0A0  F084   	movff	btemp+2,calc_ror_data@bvror+2
 23166  018406  0060  F0A4  F085   	movff	btemp+3,calc_ror_data@bvror+3
 23167                           
 23168                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 23169  01840C  0012               	return		;funcret
 23170  01840E                     __end_of_calc_ror_data:
 23171                           	opt callstack 0
 23172                           
 23173 ;; *************** function _fabsf *****************
 23174 ;; Defined at:
 23175 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 23176 ;; Parameters:    Size  Location     Type
 23177 ;;  x               4  [STACK] float 
 23178 ;; Auto vars:     Size  Location     Type
 23179 ;;  u               4  [STACK] struct .
 23180 ;; Return value:  Size  Location     Type
 23181 ;;                  4  [STACK] float 
 23182 ;; Registers used:
 23183 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23184 ;; Tracked objects:
 23185 ;;		On entry : 0/0
 23186 ;;		On exit  : 0/0
 23187 ;;		Unchanged: 0/0
 23188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23193 ;;Total ram usage:        0 bytes
 23194 ;; Hardware stack levels used:    1
 23195 ;; Hardware stack levels required when called:   15
 23196 ;; This function calls:
 23197 ;;		Nothing
 23198 ;; This function is called by:
 23199 ;;		_main
 23200 ;;		_calc_ror_data
 23201 ;;		_calc_bsoc
 23202 ;;		_esr_check
 23203 ;; This function uses a reentrant model
 23204 ;;
 23205                           
 23206                           	psect	text93
 23207  019DA4                     __ptext93:
 23208                           	opt callstack 0
 23209  019DA4                     _fabsf:
 23210                           	opt callstack 0
 23211                           
 23212                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23213  019DA4  52E6               	movf	postinc1,f,c
 23214  019DA6  52E6               	movf	postinc1,f,c
 23215  019DA8  52E6               	movf	postinc1,f,c
 23216  019DAA  52E6               	movf	postinc1,f,c
 23217                           
 23218                           ;incstack = 0
 23219 ;; hardware stack exceeded
 23220  019DAC  0060  F1D8  F02E   	movff	fabsf@F463,btemp+8
 23221  019DB2  0060  F1DC  F02F   	movff	fabsf@F463+1,btemp+9
 23222  019DB8  0060  F1E0  F030   	movff	fabsf@F463+2,btemp+10
 23223  019DBE  0060  F1E4  F031   	movff	fabsf@F463+3,btemp+11
 23224                           
 23225                           ;stkvar	_u @ sp[(-4)+0]
 23226  019DC4  0EFC               	movlw	-4
 23227  019DC6  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 23228  019DCC  0EFD               	movlw	-3
 23229  019DCE  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 23230  019DD4  0EFE               	movlw	-2
 23231  019DD6  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 23232  019DDC  0EFF               	movlw	-1
 23233  019DDE  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 23234                           
 23235                           ;stkvar	_x @ sp[(-4)+-4]
 23236  019DE4  0EF8               	movlw	-8
 23237  019DE6  006F FF8C  F02E    	movff	plusw1,btemp+8
 23238  019DEC  0EF9               	movlw	-7
 23239  019DEE  006F FF8C  F02F    	movff	plusw1,btemp+9
 23240  019DF4  0EFA               	movlw	-6
 23241  019DF6  006F FF8C  F030    	movff	plusw1,btemp+10
 23242  019DFC  0EFB               	movlw	-5
 23243  019DFE  006F FF8C  F031    	movff	plusw1,btemp+11
 23244                           
 23245                           ;stkvar	_u @ sp[(-4)+0]
 23246  019E04  0EFC               	movlw	-4
 23247  019E06  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 23248  019E0C  0EFD               	movlw	-3
 23249  019E0E  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 23250  019E14  0EFE               	movlw	-2
 23251  019E16  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 23252  019E1C  0EFF               	movlw	-1
 23253  019E1E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 23254                           
 23255                           ;stkvar	_u @ sp[(-4)+0]
 23256  019E24  0EFF               	movlw	-1
 23257  019E26  9EE3               	bcf	plusw1,7,c
 23258                           
 23259                           ;stkvar	_u @ sp[(-4)+0]
 23260  019E28  0EFC               	movlw	-4
 23261  019E2A  006F FF8C  F026    	movff	plusw1,btemp
 23262  019E30  0EFD               	movlw	-3
 23263  019E32  006F FF8C  F027    	movff	plusw1,btemp+1
 23264  019E38  0EFE               	movlw	-2
 23265  019E3A  006F FF8C  F028    	movff	plusw1,btemp+2
 23266  019E40  0EFF               	movlw	-1
 23267  019E42  006F FF8C  F029    	movff	plusw1,btemp+3
 23268                           
 23269                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23270  019E48  0EF8               	movlw	248
 23271  019E4A  26E1               	addwf	fsr1l,f,c
 23272  019E4C  0EFF               	movlw	255
 23273  019E4E  22E2               	addwfc	fsr1h,f,c
 23274  019E50  0012               	return		;funcret
 23275  019E52                     __end_of_fabsf:
 23276                           	opt callstack 0
 23277                           
 23278 ;; *************** function _conv_raw_result *****************
 23279 ;; Defined at:
 23280 ;;		line 95 in file "daq.c"
 23281 ;; Parameters:    Size  Location     Type
 23282 ;;  chan            1  [STACK] const enum E16582
 23283 ;;  to_what         1  [STACK] const enum E16644
 23284 ;; Auto vars:     Size  Location     Type
 23285 ;;		None
 23286 ;; Return value:  Size  Location     Type
 23287 ;;                  4  [STACK] float 
 23288 ;; Registers used:
 23289 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23290 ;; Tracked objects:
 23291 ;;		On entry : 0/39
 23292 ;;		On exit  : 0/0
 23293 ;;		Unchanged: 0/0
 23294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23299 ;;Total ram usage:        0 bytes
 23300 ;; Hardware stack levels used:    1
 23301 ;; Hardware stack levels required when called:   17
 23302 ;; This function calls:
 23303 ;;		___fldiv
 23304 ;;		___flmul
 23305 ;;		___flsub
 23306 ;;		___xxtofl
 23307 ;;		_get_raw_result
 23308 ;;		_nanf
 23309 ;; This function is called by:
 23310 ;;		_main
 23311 ;;		_convert_adc_data
 23312 ;;		_calc_ror_data
 23313 ;;		_check_day_time
 23314 ;;		_init_bsoc
 23315 ;;		_esr_check
 23316 ;; This function uses a reentrant model
 23317 ;;
 23318                           
 23319                           	psect	text94
 23320  014EC0                     __ptext94:
 23321                           	opt callstack 0
 23322  014EC0                     _conv_raw_result:
 23323                           	opt callstack 0
 23324                           
 23325                           ;daq.c: 95: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 96: {;daq.c: 98:  switch (to_what) {
 23326                           
 23327                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23328                           ;incstack = 0
 23329 ;; hardware stack exceeded
 23330  014EC0  D242               	goto	l9559
 23331  014EC2                     l9505:
 23332                           
 23333                           ;daq.c: 100:   if (!(0b0011110001110111 >> chan & 0x1))
 23334                           ;stkvar	_chan @ sp[(0)+-1]
 23335  014EC2  0EFF               	movlw	-1
 23336  014EC4  006F FF8C  F031    	movff	plusw1,btemp+11
 23337  014ECA  0E77               	movlw	119
 23338  014ECC  6E2E               	movwf	(btemp+8)^0,c
 23339  014ECE  0E3C               	movlw	60
 23340  014ED0  6E2F               	movwf	(btemp+9)^0,c
 23341  014ED2  2A31               	incf	(btemp+11)^0,f,c
 23342  014ED4  D003               	goto	u8944
 23343  014ED6                     u8945:
 23344  014ED6  342F               	rlcf	(btemp+9)^0,w,c
 23345  014ED8  322F               	rrcf	(btemp+9)^0,f,c
 23346  014EDA  322E               	rrcf	(btemp+8)^0,f,c
 23347  014EDC                     u8944:
 23348  014EDC  2E31               	decfsz	(btemp+11)^0,f,c
 23349  014EDE  D7FB               	goto	u8945
 23350  014EE0  B02E               	btfsc	(btemp+8)^0,0,c
 23351  014EE2  D007               	goto	l9511
 23352                           
 23353                           ;daq.c: 101:    return nanf("");
 23354  014EE4  0EBB               	movlw	low (STR_65+84)
 23355  014EE6  6EE6               	movwf	postinc1,c
 23356  014EE8  0EFC               	movlw	high (STR_65+84)
 23357  014EEA  6EE6               	movwf	postinc1,c
 23358  014EEC  EC25  F0D4         	call	_nanf	;wreg free
 23359  014EF0  D23A               	goto	l1776
 23360  014EF2                     l9511:
 23361                           
 23362                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1) {
 23363                           ;stkvar	_chan @ sp[(0)+-1]
 23364  014EF2  0EFF               	movlw	-1
 23365  014EF4  006F FF8C  F031    	movff	plusw1,btemp+11
 23366  014EFA  0E03               	movlw	3
 23367  014EFC  6E2E               	movwf	(btemp+8)^0,c
 23368  014EFE  0E00               	movlw	0
 23369  014F00  6E2F               	movwf	(btemp+9)^0,c
 23370  014F02  2A31               	incf	(btemp+11)^0,f,c
 23371  014F04  D003               	goto	u8964
 23372  014F06                     u8965:
 23373  014F06  342F               	rlcf	(btemp+9)^0,w,c
 23374  014F08  322F               	rrcf	(btemp+9)^0,f,c
 23375  014F0A  322E               	rrcf	(btemp+8)^0,f,c
 23376  014F0C                     u8964:
 23377  014F0C  2E31               	decfsz	(btemp+11)^0,f,c
 23378  014F0E  D7FB               	goto	u8965
 23379  014F10  A02E               	btfss	(btemp+8)^0,0,c
 23380  014F12  D0EB               	goto	l9525
 23381                           
 23382                           ;daq.c: 104:    if (0b0000000000000001 >> chan & 0x1) {
 23383                           ;stkvar	_chan @ sp[(0)+-1]
 23384  014F14  0EFF               	movlw	-1
 23385  014F16  006F FF8C  F031    	movff	plusw1,btemp+11
 23386  014F1C  0E01               	movlw	1
 23387  014F1E  6E2E               	movwf	(btemp+8)^0,c
 23388  014F20  0E00               	movlw	0
 23389  014F22  6E2F               	movwf	(btemp+9)^0,c
 23390  014F24  2A31               	incf	(btemp+11)^0,f,c
 23391  014F26  D003               	goto	u8984
 23392  014F28                     u8985:
 23393  014F28  342F               	rlcf	(btemp+9)^0,w,c
 23394  014F2A  322F               	rrcf	(btemp+9)^0,f,c
 23395  014F2C  322E               	rrcf	(btemp+8)^0,f,c
 23396  014F2E                     u8984:
 23397  014F2E  2E31               	decfsz	(btemp+11)^0,f,c
 23398  014F30  D7FB               	goto	u8985
 23399  014F32  A02E               	btfss	(btemp+8)^0,0,c
 23400  014F34  D06D               	goto	l9521
 23401                           
 23402                           ;daq.c: 105:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.0850
      +                          000;
 23403  014F36  0E7B               	movlw	123
 23404  014F38  6EE6               	movwf	postinc1,c
 23405  014F3A  0E14               	movlw	20
 23406  014F3C  6EE6               	movwf	postinc1,c
 23407  014F3E  0EAE               	movlw	174
 23408  014F40  6EE6               	movwf	postinc1,c
 23409  014F42  0E3D               	movlw	61
 23410  014F44  6EE6               	movwf	postinc1,c
 23411  014F46  0060  F344  F02E   	movff	_R+32,btemp+8	;volatile
 23412  014F4C  0060  F348  F02F   	movff	_R+33,btemp+9	;volatile
 23413  014F52  0E00               	movlw	0
 23414  014F54  BE2F               	btfsc	(btemp+9)^0,7,c
 23415  014F56  0EFF               	movlw	255
 23416  014F58  6E30               	movwf	(btemp+10)^0,c
 23417  014F5A  6E31               	movwf	(btemp+11)^0,c
 23418  014F5C  0060  F0BB  FFE6   	movff	btemp+8,postinc1
 23419  014F62  0060  F0BF  FFE6   	movff	btemp+9,postinc1
 23420  014F68  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 23421  014F6E  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 23422  014F74  0E01               	movlw	1
 23423  014F76  6EE6               	movwf	postinc1,c
 23424  014F78  ECE2  F0BC         	call	___xxtofl	;wreg free
 23425  014F7C  0060  F09B  FFE6   	movff	btemp,postinc1
 23426  014F82  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23427  014F88  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23428  014F8E  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23429                           
 23430                           ;stkvar	_chan @ sp[(-8)+-1]
 23431  014F94  0EF7               	movlw	-9
 23432  014F96  50E3               	movf	plusw1,w,c
 23433  014F98  6EE6               	movwf	postinc1,c
 23434  014F9A  EC2F  F0DB         	call	_get_raw_result	;wreg free
 23435  014F9E  0060  F098  F030   	movff	btemp,btemp+10
 23436  014FA4  0060  F09C  F031   	movff	btemp+1,btemp+11
 23437  014FAA  5030               	movf	(btemp+10)^0,w,c
 23438  014FAC  6E2A               	movwf	(btemp+4)^0,c
 23439  014FAE  5031               	movf	(btemp+11)^0,w,c
 23440  014FB0  6E2B               	movwf	(btemp+5)^0,c
 23441  014FB2  6A2C               	clrf	(btemp+6)^0,c
 23442  014FB4  6A2D               	clrf	(btemp+7)^0,c
 23443  014FB6  0060  F0AB  FFE6   	movff	btemp+4,postinc1
 23444  014FBC  0060  F0AF  FFE6   	movff	btemp+5,postinc1
 23445  014FC2  0060  F0B3  FFE6   	movff	btemp+6,postinc1
 23446  014FC8  0060  F0B7  FFE6   	movff	btemp+7,postinc1
 23447  014FCE  0E00               	movlw	0
 23448  014FD0  6EE6               	movwf	postinc1,c
 23449  014FD2  ECE2  F0BC         	call	___xxtofl	;wreg free
 23450  014FD6  0060  F09B  FFE6   	movff	btemp,postinc1
 23451  014FDC  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23452  014FE2  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23453  014FE8  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23454  014FEE  ECED  F0D5         	call	___flsub	;wreg free
 23455  014FF2  0060  F09B  FFE6   	movff	btemp,postinc1
 23456  014FF8  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23457  014FFE  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23458  015004  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23459  01500A  EC0F  F099         	call	___flmul	;wreg free
 23460  01500E  D1AB               	goto	l1776
 23461  015010                     l9521:
 23462                           
 23463                           ;daq.c: 107:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.0350
      +                          000;
 23464  015010  0E29               	movlw	41
 23465  015012  6EE6               	movwf	postinc1,c
 23466  015014  0E5C               	movlw	92
 23467  015016  6EE6               	movwf	postinc1,c
 23468  015018  0E0F               	movlw	15
 23469  01501A  6EE6               	movwf	postinc1,c
 23470  01501C  0E3D               	movlw	61
 23471  01501E  6EE6               	movwf	postinc1,c
 23472  015020  0060  F34C  F02E   	movff	_R+34,btemp+8	;volatile
 23473  015026  0060  F350  F02F   	movff	_R+35,btemp+9	;volatile
 23474  01502C  0E00               	movlw	0
 23475  01502E  BE2F               	btfsc	(btemp+9)^0,7,c
 23476  015030  0EFF               	movlw	255
 23477  015032  6E30               	movwf	(btemp+10)^0,c
 23478  015034  6E31               	movwf	(btemp+11)^0,c
 23479  015036  0060  F0BB  FFE6   	movff	btemp+8,postinc1
 23480  01503C  0060  F0BF  FFE6   	movff	btemp+9,postinc1
 23481  015042  0060  F0C3  FFE6   	movff	btemp+10,postinc1
 23482  015048  0060  F0C7  FFE6   	movff	btemp+11,postinc1
 23483  01504E  0E01               	movlw	1
 23484  015050  6EE6               	movwf	postinc1,c
 23485  015052  ECE2  F0BC         	call	___xxtofl	;wreg free
 23486  015056  0060  F09B  FFE6   	movff	btemp,postinc1
 23487  01505C  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23488  015062  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23489  015068  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23490                           
 23491                           ;stkvar	_chan @ sp[(-8)+-1]
 23492  01506E  0EF7               	movlw	-9
 23493  015070  50E3               	movf	plusw1,w,c
 23494  015072  6EE6               	movwf	postinc1,c
 23495  015074  EC2F  F0DB         	call	_get_raw_result	;wreg free
 23496  015078  0060  F098  F030   	movff	btemp,btemp+10
 23497  01507E  0060  F09C  F031   	movff	btemp+1,btemp+11
 23498  015084  5030               	movf	(btemp+10)^0,w,c
 23499  015086  6E2A               	movwf	(btemp+4)^0,c
 23500  015088  5031               	movf	(btemp+11)^0,w,c
 23501  01508A  6E2B               	movwf	(btemp+5)^0,c
 23502  01508C  6A2C               	clrf	(btemp+6)^0,c
 23503  01508E  6A2D               	clrf	(btemp+7)^0,c
 23504  015090  0060  F0AB  FFE6   	movff	btemp+4,postinc1
 23505  015096  0060  F0AF  FFE6   	movff	btemp+5,postinc1
 23506  01509C  0060  F0B3  FFE6   	movff	btemp+6,postinc1
 23507  0150A2  0060  F0B7  FFE6   	movff	btemp+7,postinc1
 23508  0150A8  0E00               	movlw	0
 23509  0150AA  6EE6               	movwf	postinc1,c
 23510  0150AC  ECE2  F0BC         	call	___xxtofl	;wreg free
 23511  0150B0  0060  F09B  FFE6   	movff	btemp,postinc1
 23512  0150B6  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23513  0150BC  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23514  0150C2  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23515  0150C8  ECED  F0D5         	call	___flsub	;wreg free
 23516  0150CC  0060  F09B  FFE6   	movff	btemp,postinc1
 23517  0150D2  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23518  0150D8  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23519  0150DE  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23520  0150E4  EC0F  F099         	call	___flmul	;wreg free
 23521  0150E8  D13E               	goto	l1776
 23522  0150EA                     l9525:
 23523                           
 23524                           ;daq.c: 110:    if (0b0000100000000000 >> chan & 0x1) {
 23525                           ;stkvar	_chan @ sp[(0)+-1]
 23526  0150EA  0EFF               	movlw	-1
 23527  0150EC  006F FF8C  F031    	movff	plusw1,btemp+11
 23528  0150F2  0E00               	movlw	0
 23529  0150F4  6E2E               	movwf	(btemp+8)^0,c
 23530  0150F6  0E08               	movlw	8
 23531  0150F8  6E2F               	movwf	(btemp+9)^0,c
 23532  0150FA  2A31               	incf	(btemp+11)^0,f,c
 23533  0150FC  D003               	goto	u9004
 23534  0150FE                     u9005:
 23535  0150FE  342F               	rlcf	(btemp+9)^0,w,c
 23536  015100  322F               	rrcf	(btemp+9)^0,f,c
 23537  015102  322E               	rrcf	(btemp+8)^0,f,c
 23538  015104                     u9004:
 23539  015104  2E31               	decfsz	(btemp+11)^0,f,c
 23540  015106  D7FB               	goto	u9005
 23541  015108  A02E               	btfss	(btemp+8)^0,0,c
 23542  01510A  D008               	goto	l9533
 23543                           
 23544                           ;daq.c: 111:     return 25.0;
 23545  01510C  0E00               	movlw	0
 23546  01510E  6E26               	movwf	btemp^0,c
 23547  015110  0E00               	movlw	0
 23548  015112  6E27               	movwf	(btemp+1)^0,c
 23549  015114  0EC8               	movlw	200
 23550  015116  6E28               	movwf	(btemp+2)^0,c
 23551  015118  0E41               	movlw	65
 23552  01511A  D113               	goto	L27
 23553  01511C                     l9533:
 23554                           
 23555                           ;daq.c: 113:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23556  01511C  0E00               	movlw	0
 23557  01511E  6EE6               	movwf	postinc1,c
 23558  015120  0E00               	movlw	0
 23559  015122  6EE6               	movwf	postinc1,c
 23560  015124  0E7A               	movlw	122
 23561  015126  6EE6               	movwf	postinc1,c
 23562  015128  0E44               	movlw	68
 23563  01512A  6EE6               	movwf	postinc1,c
 23564  01512C  0E61               	movlw	97
 23565  01512E  6EE6               	movwf	postinc1,c
 23566  015130  0E03               	movlw	3
 23567  015132  6EE6               	movwf	postinc1,c
 23568  015134  0E84               	movlw	132
 23569  015136  6EE6               	movwf	postinc1,c
 23570  015138  0E40               	movlw	64
 23571  01513A  6EE6               	movwf	postinc1,c
 23572                           
 23573                           ;stkvar	_chan @ sp[(-8)+-1]
 23574  01513C  0EF7               	movlw	-9
 23575  01513E  50E3               	movf	plusw1,w,c
 23576  015140  6EE6               	movwf	postinc1,c
 23577  015142  EC2F  F0DB         	call	_get_raw_result	;wreg free
 23578  015146  0060  F098  F030   	movff	btemp,btemp+10
 23579  01514C  0060  F09C  F031   	movff	btemp+1,btemp+11
 23580  015152  5030               	movf	(btemp+10)^0,w,c
 23581  015154  6E2A               	movwf	(btemp+4)^0,c
 23582  015156  5031               	movf	(btemp+11)^0,w,c
 23583  015158  6E2B               	movwf	(btemp+5)^0,c
 23584  01515A  6A2C               	clrf	(btemp+6)^0,c
 23585  01515C  6A2D               	clrf	(btemp+7)^0,c
 23586  01515E  0060  F0AB  FFE6   	movff	btemp+4,postinc1
 23587  015164  0060  F0AF  FFE6   	movff	btemp+5,postinc1
 23588  01516A  0060  F0B3  FFE6   	movff	btemp+6,postinc1
 23589  015170  0060  F0B7  FFE6   	movff	btemp+7,postinc1
 23590  015176  0E00               	movlw	0
 23591  015178  6EE6               	movwf	postinc1,c
 23592  01517A  ECE2  F0BC         	call	___xxtofl	;wreg free
 23593  01517E  0060  F09B  FFE6   	movff	btemp,postinc1
 23594  015184  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23595  01518A  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23596  015190  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23597  015196  EC0F  F099         	call	___flmul	;wreg free
 23598  01519A  0060  F09B  FFE6   	movff	btemp,postinc1
 23599  0151A0  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23600  0151A6  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23601  0151AC  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23602  0151B2  ECA3  F0A4         	call	___fldiv	;wreg free
 23603  0151B6  D0D7               	goto	l1776
 23604  0151B8                     l9537:
 23605                           
 23606                           ;daq.c: 118:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 23607                           ;stkvar	_chan @ sp[(0)+-1]
 23608  0151B8  0EFF               	movlw	-1
 23609  0151BA  006F FF8C  F031    	movff	plusw1,btemp+11
 23610  0151C0  0E03               	movlw	3
 23611  0151C2  6E2E               	movwf	(btemp+8)^0,c
 23612  0151C4  0E00               	movlw	0
 23613  0151C6  6E2F               	movwf	(btemp+9)^0,c
 23614  0151C8  2A31               	incf	(btemp+11)^0,f,c
 23615  0151CA  D003               	goto	u9024
 23616  0151CC                     u9025:
 23617  0151CC  342F               	rlcf	(btemp+9)^0,w,c
 23618  0151CE  322F               	rrcf	(btemp+9)^0,f,c
 23619  0151D0  322E               	rrcf	(btemp+8)^0,f,c
 23620  0151D2                     u9024:
 23621  0151D2  2E31               	decfsz	(btemp+11)^0,f,c
 23622  0151D4  D7FB               	goto	u9025
 23623  0151D6  B02E               	btfsc	(btemp+8)^0,0,c
 23624  0151D8  D011               	goto	u9050
 23625                           
 23626                           ;stkvar	_chan @ sp[(0)+-1]
 23627  0151DA  0EFF               	movlw	-1
 23628  0151DC  006F FF8C  F031    	movff	plusw1,btemp+11
 23629  0151E2  0E00               	movlw	0
 23630  0151E4  6E2E               	movwf	(btemp+8)^0,c
 23631  0151E6  0E08               	movlw	8
 23632  0151E8  6E2F               	movwf	(btemp+9)^0,c
 23633  0151EA  2A31               	incf	(btemp+11)^0,f,c
 23634  0151EC  D003               	goto	u9044
 23635  0151EE                     u9045:
 23636  0151EE  342F               	rlcf	(btemp+9)^0,w,c
 23637  0151F0  322F               	rrcf	(btemp+9)^0,f,c
 23638  0151F2  322E               	rrcf	(btemp+8)^0,f,c
 23639  0151F4                     u9044:
 23640  0151F4  2E31               	decfsz	(btemp+11)^0,f,c
 23641  0151F6  D7FB               	goto	u9045
 23642  0151F8  A02E               	btfss	(btemp+8)^0,0,c
 23643  0151FA  D04E               	goto	l9545
 23644  0151FC                     u9050:
 23645                           
 23646                           ;daq.c: 119:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 23647  0151FC  0E00               	movlw	0
 23648  0151FE  6EE6               	movwf	postinc1,c
 23649  015200  0E00               	movlw	0
 23650  015202  6EE6               	movwf	postinc1,c
 23651  015204  0E7A               	movlw	122
 23652  015206  6EE6               	movwf	postinc1,c
 23653  015208  0E44               	movlw	68
 23654  01520A  6EE6               	movwf	postinc1,c
 23655  01520C  0E00               	movlw	0
 23656  01520E  6EE6               	movwf	postinc1,c
 23657  015210  0E00               	movlw	0
 23658  015212  6EE6               	movwf	postinc1,c
 23659  015214  0E20               	movlw	32
 23660  015216  6EE6               	movwf	postinc1,c
 23661  015218  0E3F               	movlw	63
 23662  01521A  6EE6               	movwf	postinc1,c
 23663                           
 23664                           ;stkvar	_chan @ sp[(-8)+-1]
 23665  01521C  0EF7               	movlw	-9
 23666  01521E  50E3               	movf	plusw1,w,c
 23667  015220  6EE6               	movwf	postinc1,c
 23668  015222  EC2F  F0DB         	call	_get_raw_result	;wreg free
 23669  015226  0060  F098  F030   	movff	btemp,btemp+10
 23670  01522C  0060  F09C  F031   	movff	btemp+1,btemp+11
 23671  015232  5030               	movf	(btemp+10)^0,w,c
 23672  015234  6E2A               	movwf	(btemp+4)^0,c
 23673  015236  5031               	movf	(btemp+11)^0,w,c
 23674  015238  6E2B               	movwf	(btemp+5)^0,c
 23675  01523A  6A2C               	clrf	(btemp+6)^0,c
 23676  01523C  6A2D               	clrf	(btemp+7)^0,c
 23677  01523E  0060  F0AB  FFE6   	movff	btemp+4,postinc1
 23678  015244  0060  F0AF  FFE6   	movff	btemp+5,postinc1
 23679  01524A  0060  F0B3  FFE6   	movff	btemp+6,postinc1
 23680  015250  0060  F0B7  FFE6   	movff	btemp+7,postinc1
 23681  015256  0E00               	movlw	0
 23682  015258  6EE6               	movwf	postinc1,c
 23683  01525A  ECE2  F0BC         	call	___xxtofl	;wreg free
 23684  01525E  0060  F09B  FFE6   	movff	btemp,postinc1
 23685  015264  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23686  01526A  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23687  015270  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23688  015276  EC0F  F099         	call	___flmul	;wreg free
 23689  01527A  0060  F09B  FFE6   	movff	btemp,postinc1
 23690  015280  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23691  015286  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23692  01528C  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23693  015292  ECA3  F0A4         	call	___fldiv	;wreg free
 23694  015296  D067               	goto	l1776
 23695  015298                     l9545:
 23696                           
 23697                           ;daq.c: 121:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23698  015298  0E00               	movlw	0
 23699  01529A  6EE6               	movwf	postinc1,c
 23700  01529C  0E00               	movlw	0
 23701  01529E  6EE6               	movwf	postinc1,c
 23702  0152A0  0E7A               	movlw	122
 23703  0152A2  6EE6               	movwf	postinc1,c
 23704  0152A4  0E44               	movlw	68
 23705  0152A6  6EE6               	movwf	postinc1,c
 23706  0152A8  0E61               	movlw	97
 23707  0152AA  6EE6               	movwf	postinc1,c
 23708  0152AC  0E03               	movlw	3
 23709  0152AE  6EE6               	movwf	postinc1,c
 23710  0152B0  0E84               	movlw	132
 23711  0152B2  6EE6               	movwf	postinc1,c
 23712  0152B4  0E40               	movlw	64
 23713  0152B6  6EE6               	movwf	postinc1,c
 23714                           
 23715                           ;stkvar	_chan @ sp[(-8)+-1]
 23716  0152B8  0EF7               	movlw	-9
 23717  0152BA  50E3               	movf	plusw1,w,c
 23718  0152BC  6EE6               	movwf	postinc1,c
 23719  0152BE  EC2F  F0DB         	call	_get_raw_result	;wreg free
 23720  0152C2  0060  F098  F030   	movff	btemp,btemp+10
 23721  0152C8  0060  F09C  F031   	movff	btemp+1,btemp+11
 23722  0152CE  5030               	movf	(btemp+10)^0,w,c
 23723  0152D0  6E2A               	movwf	(btemp+4)^0,c
 23724  0152D2  5031               	movf	(btemp+11)^0,w,c
 23725  0152D4  6E2B               	movwf	(btemp+5)^0,c
 23726  0152D6  6A2C               	clrf	(btemp+6)^0,c
 23727  0152D8  6A2D               	clrf	(btemp+7)^0,c
 23728  0152DA  0060  F0AB  FFE6   	movff	btemp+4,postinc1
 23729  0152E0  0060  F0AF  FFE6   	movff	btemp+5,postinc1
 23730  0152E6  0060  F0B3  FFE6   	movff	btemp+6,postinc1
 23731  0152EC  0060  F0B7  FFE6   	movff	btemp+7,postinc1
 23732  0152F2  0E00               	movlw	0
 23733  0152F4  6EE6               	movwf	postinc1,c
 23734  0152F6  ECE2  F0BC         	call	___xxtofl	;wreg free
 23735  0152FA  0060  F09B  FFE6   	movff	btemp,postinc1
 23736  015300  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23737  015306  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23738  01530C  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23739  015312  EC0F  F099         	call	___flmul	;wreg free
 23740  015316  0060  F09B  FFE6   	movff	btemp,postinc1
 23741  01531C  0060  F09F  FFE6   	movff	btemp+1,postinc1
 23742  015322  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 23743  015328  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 23744  01532E  ECA3  F0A4         	call	___fldiv	;wreg free
 23745  015332  D019               	goto	l1776
 23746  015334                     l9551:
 23747                           
 23748                           ;daq.c: 124:   return 0.0;
 23749  015334  0E00               	movlw	0
 23750  015336  6E26               	movwf	btemp^0,c
 23751  015338  0E00               	movlw	0
 23752  01533A  6E27               	movwf	(btemp+1)^0,c
 23753  01533C  0E00               	movlw	0
 23754  01533E  6E28               	movwf	(btemp+2)^0,c
 23755  015340  0E00               	movlw	0
 23756  015342                     L27:
 23757  015342  6E29               	movwf	(btemp+3)^0,c
 23758  015344  D010               	goto	l1776
 23759  015346                     l9559:
 23760                           
 23761                           ;stkvar	_to_what @ sp[(0)+-2]
 23762  015346  0EFE               	movlw	-2
 23763  015348  50E3               	movf	plusw1,w,c
 23764  01534A  6E30               	movwf	(btemp+10)^0,c
 23765  01534C  6A31               	clrf	(btemp+11)^0,c
 23766                           
 23767                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23768                           ; Switch size 1, requested type "simple"
 23769                           ; Number of cases is 1, Range of values is 0 to 0
 23770                           ; switch strategies available:
 23771                           ; Name         Instructions Cycles
 23772                           ; simple_byte            4     3 (average)
 23773                           ;	Chosen strategy is simple_byte
 23774  01534E  5031               	movf	(btemp+11)^0,w,c
 23775  015350  0A00               	xorlw	0	; case 0
 23776  015352  A4D8               	btfss	status,2,c
 23777  015354  D7EF               	goto	l9551
 23778                           
 23779                           ; Switch size 1, requested type "simple"
 23780                           ; Number of cases is 2, Range of values is 0 to 1
 23781                           ; switch strategies available:
 23782                           ; Name         Instructions Cycles
 23783                           ; simple_byte            7     4 (average)
 23784                           ;	Chosen strategy is simple_byte
 23785  015356  5030               	movf	(btemp+10)^0,w,c
 23786  015358  0A00               	xorlw	0	; case 0
 23787  01535A  B4D8               	btfsc	status,2,c
 23788  01535C  D5B2               	goto	l9505
 23789  01535E  0A01               	xorlw	1	; case 1
 23790  015360  B4D8               	btfsc	status,2,c
 23791  015362  D72A               	goto	l9537
 23792  015364  D7E7               	goto	l9551
 23793  015366                     l1776:
 23794                           
 23795                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 23796  015366  52E5               	movf	postdec1,f,c
 23797  015368  52E5               	movf	postdec1,f,c
 23798  01536A  0012               	return		;funcret
 23799  01536C                     __end_of_conv_raw_result:
 23800                           	opt callstack 0
 23801                           
 23802 ;; *************** function _nanf *****************
 23803 ;; Defined at:
 23804 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 23805 ;; Parameters:    Size  Location     Type
 23806 ;;  s               2  [STACK] PTR const unsigned char 
 23807 ;;		 -> STR_102(1), STR_64(1), 
 23808 ;; Auto vars:     Size  Location     Type
 23809 ;;  u               4  [STACK] struct .
 23810 ;; Return value:  Size  Location     Type
 23811 ;;                  4  [STACK] float 
 23812 ;; Registers used:
 23813 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23814 ;; Tracked objects:
 23815 ;;		On entry : 0/39
 23816 ;;		On exit  : 0/0
 23817 ;;		Unchanged: 0/0
 23818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23823 ;;Total ram usage:        0 bytes
 23824 ;; Hardware stack levels used:    1
 23825 ;; Hardware stack levels required when called:   15
 23826 ;; This function calls:
 23827 ;;		Nothing
 23828 ;; This function is called by:
 23829 ;;		_conv_raw_result
 23830 ;; This function uses a reentrant model
 23831 ;;
 23832                           
 23833                           	psect	text95
 23834  01A84A                     __ptext95:
 23835                           	opt callstack 0
 23836  01A84A                     _nanf:
 23837                           	opt callstack 0
 23838                           
 23839                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23840  01A84A  52E6               	movf	postinc1,f,c
 23841  01A84C  52E6               	movf	postinc1,f,c
 23842  01A84E  52E6               	movf	postinc1,f,c
 23843  01A850  52E6               	movf	postinc1,f,c
 23844                           
 23845                           ;incstack = 0
 23846 ;; hardware stack exceeded
 23847  01A852  0EFF               	movlw	255
 23848  01A854  6E2E               	movwf	(btemp+8)^0,c
 23849  01A856  0EFF               	movlw	255
 23850  01A858  6E2F               	movwf	(btemp+9)^0,c
 23851  01A85A  0EFF               	movlw	255
 23852  01A85C  6E30               	movwf	(btemp+10)^0,c
 23853  01A85E  0E7F               	movlw	127
 23854  01A860  6E31               	movwf	(btemp+11)^0,c
 23855                           
 23856                           ;stkvar	_u @ sp[(-4)+0]
 23857  01A862  0EFC               	movlw	-4
 23858  01A864  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 23859  01A86A  0EFD               	movlw	-3
 23860  01A86C  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 23861  01A872  0EFE               	movlw	-2
 23862  01A874  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 23863  01A87A  0EFF               	movlw	-1
 23864  01A87C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 23865                           
 23866                           ;stkvar	_u @ sp[(-4)+0]
 23867  01A882  0EFC               	movlw	-4
 23868  01A884  006F FF8C  F026    	movff	plusw1,btemp
 23869  01A88A  0EFD               	movlw	-3
 23870  01A88C  006F FF8C  F027    	movff	plusw1,btemp+1
 23871  01A892  0EFE               	movlw	-2
 23872  01A894  006F FF8C  F028    	movff	plusw1,btemp+2
 23873  01A89A  0EFF               	movlw	-1
 23874  01A89C  006F FF8C  F029    	movff	plusw1,btemp+3
 23875                           
 23876                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 23877  01A8A2  0EFA               	movlw	250
 23878  01A8A4  26E1               	addwf	fsr1l,f,c
 23879  01A8A6  0EFF               	movlw	255
 23880  01A8A8  22E2               	addwfc	fsr1h,f,c
 23881  01A8AA  0012               	return		;funcret
 23882  01A8AC                     __end_of_nanf:
 23883                           	opt callstack 0
 23884                           
 23885 ;; *************** function _get_raw_result *****************
 23886 ;; Defined at:
 23887 ;;		line 87 in file "daq.c"
 23888 ;; Parameters:    Size  Location     Type
 23889 ;;  index           1  [STACK] const enum E16582
 23890 ;; Auto vars:     Size  Location     Type
 23891 ;;		None
 23892 ;; Return value:  Size  Location     Type
 23893 ;;                  2  [STACK] unsigned short 
 23894 ;; Registers used:
 23895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 23896 ;; Tracked objects:
 23897 ;;		On entry : 0/2
 23898 ;;		On exit  : 0/0
 23899 ;;		Unchanged: 0/0
 23900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23905 ;;Total ram usage:        0 bytes
 23906 ;; Hardware stack levels used:    1
 23907 ;; Hardware stack levels required when called:   15
 23908 ;; This function calls:
 23909 ;;		Nothing
 23910 ;; This function is called by:
 23911 ;;		_main
 23912 ;;		_conv_raw_result
 23913 ;; This function uses a reentrant model
 23914 ;;
 23915                           
 23916                           	psect	text96
 23917  01B65E                     __ptext96:
 23918                           	opt callstack 0
 23919  01B65E                     _get_raw_result:
 23920                           	opt callstack 0
 23921                           
 23922                           ;daq.c: 87: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 88: {;daq.c: 
      +                          89:  return R.raw_adc[index];
 23923                           ;stkvar	_index @ sp[(0)+-1]
 23924                           
 23925                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23926                           ;incstack = 0
 23927 ;; hardware stack exceeded
 23928  01B65E  0EFF               	movlw	-1
 23929  01B660  50E3               	movf	plusw1,w,c
 23930  01B662  0D02               	mullw	2
 23931  01B664  50F3               	movf	243,w,c
 23932  01B666  0FB1               	addlw	low _R
 23933  01B668  6ED9               	movwf	fsr2l,c
 23934  01B66A  6ADA               	clrf	fsr2h,c
 23935  01B66C  006F FF78  F026    	movff	postinc2,btemp
 23936  01B672  006F FF74  F027    	movff	postdec2,btemp+1
 23937                           
 23938                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 23939  01B678  52E5               	movf	postdec1,f,c
 23940  01B67A  0012               	return		;funcret
 23941  01B67C                     __end_of_get_raw_result:
 23942                           	opt callstack 0
 23943                           
 23944 ;; *************** function ___xxtofl *****************
 23945 ;; Defined at:
 23946 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 23947 ;; Parameters:    Size  Location     Type
 23948 ;;  sign            1  [STACK] unsigned char 
 23949 ;;  val             4  [STACK] long 
 23950 ;; Auto vars:     Size  Location     Type
 23951 ;;  arg             4  [STACK] unsigned long 
 23952 ;;  exp             1  [STACK] unsigned char 
 23953 ;; Return value:  Size  Location     Type
 23954 ;;                  4  [STACK] unsigned char 
 23955 ;; Registers used:
 23956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 23957 ;; Tracked objects:
 23958 ;;		On entry : 0/1
 23959 ;;		On exit  : 0/0
 23960 ;;		Unchanged: 0/0
 23961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23966 ;;Total ram usage:        0 bytes
 23967 ;; Hardware stack levels used:    1
 23968 ;; Hardware stack levels required when called:   15
 23969 ;; This function calls:
 23970 ;;		Nothing
 23971 ;; This function is called by:
 23972 ;;		_conv_raw_result
 23973 ;;		_init_bsoc
 23974 ;; This function uses a reentrant model
 23975 ;;
 23976                           
 23977                           	psect	text97
 23978  0179C4                     __ptext97:
 23979                           	opt callstack 0
 23980  0179C4                     ___xxtofl:
 23981                           	opt callstack 0
 23982                           
 23983                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23984  0179C4  0E05               	movlw	5
 23985  0179C6  26E1               	addwf	fsr1l,f,c
 23986  0179C8  0E00               	movlw	0
 23987  0179CA  22E2               	addwfc	fsr1h,f,c
 23988                           
 23989                           ;stkvar	_sign @ sp[(-5)+-1]
 23990                           
 23991                           ;incstack = 0
 23992 ;; hardware stack exceeded
 23993  0179CC  0EFA               	movlw	-6
 23994  0179CE  50E3               	movf	plusw1,w,c
 23995  0179D0  B4D8               	btfsc	status,2,c
 23996  0179D2  D01D               	goto	l9453
 23997                           
 23998                           ;stkvar	_val @ sp[(-5)+-5]
 23999  0179D4  0EF9               	movlw	-7
 24000  0179D6  AEE3               	btfss	plusw1,7,c
 24001  0179D8  D01A               	goto	l9453
 24002                           
 24003                           ;stkvar	_val @ sp[(-5)+-5]
 24004  0179DA  0EF6               	movlw	-10
 24005  0179DC  006F FF8C  F02E    	movff	plusw1,btemp+8
 24006  0179E2  0EF7               	movlw	-9
 24007  0179E4  006F FF8C  F02F    	movff	plusw1,btemp+9
 24008  0179EA  0EF8               	movlw	-8
 24009  0179EC  006F FF8C  F030    	movff	plusw1,btemp+10
 24010  0179F2  0EF9               	movlw	-7
 24011  0179F4  006F FF8C  F031    	movff	plusw1,btemp+11
 24012  0179FA  1E2E               	comf	(btemp+8)^0,f,c
 24013  0179FC  1E2F               	comf	(btemp+9)^0,f,c
 24014  0179FE  1E30               	comf	(btemp+10)^0,f,c
 24015  017A00  1E31               	comf	(btemp+11)^0,f,c
 24016  017A02  2A2E               	incf	(btemp+8)^0,f,c
 24017  017A04  0E00               	movlw	0
 24018  017A06  222F               	addwfc	(btemp+9)^0,f,c
 24019  017A08  2230               	addwfc	(btemp+10)^0,f,c
 24020  017A0A  2231               	addwfc	(btemp+11)^0,f,c
 24021  017A0C  D010               	goto	L28
 24022  017A0E                     l9453:
 24023                           
 24024                           ;stkvar	_val @ sp[(-5)+-5]
 24025  017A0E  0EF6               	movlw	-10
 24026  017A10  006F FF8C  F02E    	movff	plusw1,btemp+8
 24027  017A16  0EF7               	movlw	-9
 24028  017A18  006F FF8C  F02F    	movff	plusw1,btemp+9
 24029  017A1E  0EF8               	movlw	-8
 24030  017A20  006F FF8C  F030    	movff	plusw1,btemp+10
 24031  017A26  0EF9               	movlw	-7
 24032  017A28  006F FF8C  F031    	movff	plusw1,btemp+11
 24033  017A2E                     L28:
 24034                           
 24035                           ;stkvar	_arg @ sp[(-5)+0]
 24036  017A2E  0EFB               	movlw	-5
 24037  017A30  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 24038  017A36  0EFC               	movlw	-4
 24039  017A38  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 24040  017A3E  0EFD               	movlw	-3
 24041  017A40  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24042  017A46  0EFE               	movlw	-2
 24043  017A48  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24044                           
 24045                           ;stkvar	_val @ sp[(-5)+-5]
 24046  017A4E  0EF6               	movlw	-10
 24047  017A50  50E3               	movf	plusw1,w,c
 24048  017A52  E113               	bnz	l9461
 24049  017A54  0EF7               	movlw	-9
 24050  017A56  50E3               	movf	plusw1,w,c
 24051  017A58  E110               	bnz	l9461
 24052  017A5A  0EF8               	movlw	-8
 24053  017A5C  50E3               	movf	plusw1,w,c
 24054  017A5E  E10D               	bnz	l9461
 24055  017A60  0EF9               	movlw	-7
 24056  017A62  50E3               	movf	plusw1,w,c
 24057  017A64  A4D8               	btfss	status,2,c
 24058  017A66  D009               	goto	l9461
 24059  017A68  0E00               	movlw	0
 24060  017A6A  6E26               	movwf	btemp^0,c
 24061  017A6C  0E00               	movlw	0
 24062  017A6E  6E27               	movwf	(btemp+1)^0,c
 24063  017A70  0E00               	movlw	0
 24064  017A72  6E28               	movwf	(btemp+2)^0,c
 24065  017A74  0E00               	movlw	0
 24066  017A76  6E29               	movwf	(btemp+3)^0,c
 24067  017A78  D0A2               	goto	l3038
 24068  017A7A                     l9461:
 24069  017A7A  0E96               	movlw	150
 24070  017A7C  6E31               	movwf	(btemp+11)^0,c
 24071                           
 24072                           ;stkvar	_exp @ sp[(-5)+4]
 24073  017A7E  0EFF               	movlw	-1
 24074  017A80  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24075  017A86  D00B               	goto	l9465
 24076  017A88                     l9463:
 24077                           
 24078                           ;stkvar	_exp @ sp[(-5)+4]
 24079  017A88  0EFF               	movlw	-1
 24080  017A8A  2AE3               	incf	plusw1,f,c
 24081                           
 24082                           ;stkvar	_arg @ sp[(-5)+0]
 24083  017A8C  90D8               	bcf	status,0,c
 24084  017A8E  0EFE               	movlw	-2
 24085  017A90  32E3               	rrcf	plusw1,f,c
 24086  017A92  0EFD               	movlw	-3
 24087  017A94  32E3               	rrcf	plusw1,f,c
 24088  017A96  0EFC               	movlw	-4
 24089  017A98  32E3               	rrcf	plusw1,f,c
 24090  017A9A  0EFB               	movlw	-5
 24091  017A9C  32E3               	rrcf	plusw1,f,c
 24092  017A9E                     l9465:
 24093                           
 24094                           ;stkvar	_arg @ sp[(-5)+0]
 24095  017A9E  50E1               	movf	fsr1l,w,c
 24096  017AA0  0FFB               	addlw	-5
 24097  017AA2  6ED9               	movwf	fsr2l,c
 24098  017AA4  50E2               	movf	fsr1h,w,c
 24099  017AA6  6EDA               	movwf	fsr2h,c
 24100  017AA8  0EFF               	movlw	255
 24101  017AAA  22DA               	addwfc	fsr2h,f,c
 24102  017AAC  52DE               	movf	postinc2,f,c
 24103  017AAE  52DE               	movf	postinc2,f,c
 24104  017AB0  52DE               	movf	postinc2,f,c
 24105  017AB2  0EFE               	movlw	254
 24106  017AB4  14DD               	andwf	postdec2,w,c
 24107  017AB6  B4D8               	btfsc	status,2,c
 24108  017AB8  D018               	goto	l9473
 24109  017ABA  D7E6               	goto	l9463
 24110  017ABC                     l9467:
 24111                           
 24112                           ;stkvar	_exp @ sp[(-5)+4]
 24113  017ABC  0EFF               	movlw	-1
 24114  017ABE  2AE3               	incf	plusw1,f,c
 24115                           
 24116                           ;stkvar	_arg @ sp[(-5)+0]
 24117  017AC0  50E1               	movf	fsr1l,w,c
 24118  017AC2  0FFB               	addlw	-5
 24119  017AC4  6ED9               	movwf	fsr2l,c
 24120  017AC6  50E2               	movf	fsr1h,w,c
 24121  017AC8  6EDA               	movwf	fsr2h,c
 24122  017ACA  0EFF               	movlw	255
 24123  017ACC  22DA               	addwfc	fsr2h,f,c
 24124  017ACE  2ADE               	incf	postinc2,f,c
 24125  017AD0  0E00               	movlw	0
 24126  017AD2  22DE               	addwfc	postinc2,f,c
 24127  017AD4  22DE               	addwfc	postinc2,f,c
 24128  017AD6  22DE               	addwfc	postinc2,f,c
 24129                           
 24130                           ;stkvar	_arg @ sp[(-5)+0]
 24131  017AD8  90D8               	bcf	status,0,c
 24132  017ADA  0EFE               	movlw	-2
 24133  017ADC  32E3               	rrcf	plusw1,f,c
 24134  017ADE  0EFD               	movlw	-3
 24135  017AE0  32E3               	rrcf	plusw1,f,c
 24136  017AE2  0EFC               	movlw	-4
 24137  017AE4  32E3               	rrcf	plusw1,f,c
 24138  017AE6  0EFB               	movlw	-5
 24139  017AE8  32E3               	rrcf	plusw1,f,c
 24140  017AEA                     l9473:
 24141                           
 24142                           ;stkvar	_arg @ sp[(-5)+0]
 24143  017AEA  50E1               	movf	fsr1l,w,c
 24144  017AEC  0FFB               	addlw	-5
 24145  017AEE  6ED9               	movwf	fsr2l,c
 24146  017AF0  50E2               	movf	fsr1h,w,c
 24147  017AF2  6EDA               	movwf	fsr2h,c
 24148  017AF4  0EFF               	movlw	255
 24149  017AF6  22DA               	addwfc	fsr2h,f,c
 24150  017AF8  52DE               	movf	postinc2,f,c
 24151  017AFA  52DE               	movf	postinc2,f,c
 24152  017AFC  52DE               	movf	postinc2,f,c
 24153  017AFE  0EFF               	movlw	255
 24154  017B00  14DD               	andwf	postdec2,w,c
 24155  017B02  B4D8               	btfsc	status,2,c
 24156  017B04  D00C               	goto	l9477
 24157  017B06  D7DA               	goto	l9467
 24158  017B08                     l9475:
 24159                           
 24160                           ;stkvar	_exp @ sp[(-5)+4]
 24161  017B08  0EFF               	movlw	-1
 24162  017B0A  06E3               	decf	plusw1,f,c
 24163                           
 24164                           ;stkvar	_arg @ sp[(-5)+0]
 24165  017B0C  90D8               	bcf	status,0,c
 24166  017B0E  0EFB               	movlw	-5
 24167  017B10  36E3               	rlcf	plusw1,f,c
 24168  017B12  0EFC               	movlw	-4
 24169  017B14  36E3               	rlcf	plusw1,f,c
 24170  017B16  0EFD               	movlw	-3
 24171  017B18  36E3               	rlcf	plusw1,f,c
 24172  017B1A  0EFE               	movlw	-2
 24173  017B1C  36E3               	rlcf	plusw1,f,c
 24174  017B1E                     l9477:
 24175                           
 24176                           ;stkvar	_arg @ sp[(-5)+0]
 24177  017B1E  0EFD               	movlw	-3
 24178  017B20  BEE3               	btfsc	plusw1,7,c
 24179  017B22  D007               	goto	u8900
 24180                           
 24181                           ;stkvar	_exp @ sp[(-5)+4]
 24182  017B24  0EFF               	movlw	-1
 24183  017B26  006F FF8C  F026    	movff	plusw1,btemp
 24184  017B2C  0E02               	movlw	2
 24185  017B2E  6026               	cpfslt	btemp^0,c
 24186  017B30  D7EB               	goto	l9475
 24187  017B32                     u8900:
 24188                           
 24189                           ;stkvar	_exp @ sp[(-5)+4]
 24190  017B32  0EFF               	movlw	-1
 24191  017B34  B0E3               	btfsc	plusw1,0,c
 24192  017B36  D002               	goto	l9485
 24193                           
 24194                           ;stkvar	_arg @ sp[(-5)+0]
 24195  017B38  0EFD               	movlw	-3
 24196  017B3A  9EE3               	bcf	plusw1,7,c
 24197  017B3C                     l9485:
 24198                           
 24199                           ;stkvar	_exp @ sp[(-5)+4]
 24200  017B3C  50E1               	movf	fsr1l,w,c
 24201  017B3E  0FFF               	addlw	-1
 24202  017B40  6ED9               	movwf	fsr2l,c
 24203  017B42  50E2               	movf	fsr1h,w,c
 24204  017B44  6EDA               	movwf	fsr2h,c
 24205  017B46  0EFF               	movlw	255
 24206  017B48  22DA               	addwfc	fsr2h,f,c
 24207  017B4A  90D8               	bcf	status,0,c
 24208  017B4C  32DF               	rrcf	indf2,f,c
 24209                           
 24210                           ;stkvar	_exp @ sp[(-5)+4]
 24211  017B4E  0EFF               	movlw	-1
 24212  017B50  006F FF8C  F031    	movff	plusw1,btemp+11
 24213  017B56  0060  F0C4  F02A   	movff	btemp+11,btemp+4
 24214  017B5C  6A2B               	clrf	(btemp+5)^0,c
 24215  017B5E  6A2C               	clrf	(btemp+6)^0,c
 24216  017B60  6A2D               	clrf	(btemp+7)^0,c
 24217  017B62  0060  F0A8  F02D   	movff	btemp+4,btemp+7
 24218  017B68  6A2C               	clrf	(btemp+6)^0,c
 24219  017B6A  6A2B               	clrf	(btemp+5)^0,c
 24220  017B6C  6A2A               	clrf	(btemp+4)^0,c
 24221                           
 24222                           ;stkvar	_arg @ sp[(-5)+0]
 24223  017B6E  50E1               	movf	fsr1l,w,c
 24224  017B70  0FFB               	addlw	-5
 24225  017B72  6ED9               	movwf	fsr2l,c
 24226  017B74  50E2               	movf	fsr1h,w,c
 24227  017B76  6EDA               	movwf	fsr2h,c
 24228  017B78  0EFF               	movlw	255
 24229  017B7A  22DA               	addwfc	fsr2h,f,c
 24230  017B7C  502A               	movf	(btemp+4)^0,w,c
 24231  017B7E  12DE               	iorwf	postinc2,f,c
 24232  017B80  502B               	movf	(btemp+5)^0,w,c
 24233  017B82  12DE               	iorwf	postinc2,f,c
 24234  017B84  502C               	movf	(btemp+6)^0,w,c
 24235  017B86  12DE               	iorwf	postinc2,f,c
 24236  017B88  502D               	movf	(btemp+7)^0,w,c
 24237  017B8A  12DE               	iorwf	postinc2,f,c
 24238                           
 24239                           ;stkvar	_sign @ sp[(-5)+-1]
 24240  017B8C  0EFA               	movlw	-6
 24241  017B8E  50E3               	movf	plusw1,w,c
 24242  017B90  B4D8               	btfsc	status,2,c
 24243  017B92  D005               	goto	l9495
 24244                           
 24245                           ;stkvar	_val @ sp[(-5)+-5]
 24246  017B94  0EF9               	movlw	-7
 24247  017B96  AEE3               	btfss	plusw1,7,c
 24248  017B98  D002               	goto	l9495
 24249                           
 24250                           ;stkvar	_arg @ sp[(-5)+0]
 24251  017B9A  0EFE               	movlw	-2
 24252  017B9C  8EE3               	bsf	plusw1,7,c
 24253  017B9E                     l9495:
 24254                           
 24255                           ;stkvar	_arg @ sp[(-5)+0]
 24256  017B9E  0EFB               	movlw	-5
 24257  017BA0  006F FF8C  F026    	movff	plusw1,btemp
 24258  017BA6  0EFC               	movlw	-4
 24259  017BA8  006F FF8C  F027    	movff	plusw1,btemp+1
 24260  017BAE  0EFD               	movlw	-3
 24261  017BB0  006F FF8C  F028    	movff	plusw1,btemp+2
 24262  017BB6  0EFE               	movlw	-2
 24263  017BB8  006F FF8C  F029    	movff	plusw1,btemp+3
 24264  017BBE                     l3038:
 24265                           
 24266                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 24267  017BBE  0EF6               	movlw	246
 24268  017BC0  26E1               	addwf	fsr1l,f,c
 24269  017BC2  0EFF               	movlw	255
 24270  017BC4  22E2               	addwfc	fsr1h,f,c
 24271  017BC6  0012               	return		;funcret
 24272  017BC8                     __end_of___xxtofl:
 24273                           	opt callstack 0
 24274                           
 24275 ;; *************** function ___fldiv *****************
 24276 ;; Defined at:
 24277 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 24278 ;; Parameters:    Size  Location     Type
 24279 ;;  b               4  [STACK] unsigned char 
 24280 ;;  a               4  [STACK] unsigned char 
 24281 ;; Auto vars:     Size  Location     Type
 24282 ;;  grs             4  [STACK] unsigned long 
 24283 ;;  rem             4  [STACK] unsigned long 
 24284 ;;  new_exp         2  [STACK] short 
 24285 ;;  aexp            1  [STACK] unsigned char 
 24286 ;;  bexp            1  [STACK] unsigned char 
 24287 ;;  sign            1  [STACK] unsigned char 
 24288 ;; Return value:  Size  Location     Type
 24289 ;;                  4  [STACK] unsigned char 
 24290 ;; Registers used:
 24291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 24292 ;; Tracked objects:
 24293 ;;		On entry : 0/1
 24294 ;;		On exit  : 0/0
 24295 ;;		Unchanged: 0/0
 24296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24301 ;;Total ram usage:        0 bytes
 24302 ;; Hardware stack levels used:    1
 24303 ;; Hardware stack levels required when called:   15
 24304 ;; This function calls:
 24305 ;;		Nothing
 24306 ;; This function is called by:
 24307 ;;		_conv_raw_result
 24308 ;;		_calc_bsoc
 24309 ;;		_init_bsoc
 24310 ;;		_esr_check
 24311 ;;		_efgtoa
 24312 ;; This function uses a reentrant model
 24313 ;;
 24314                           
 24315                           	psect	text98
 24316  014946                     __ptext98:
 24317                           	opt callstack 0
 24318  014946                     ___fldiv:
 24319                           	opt callstack 0
 24320                           
 24321                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 24322  014946  0E0D               	movlw	13
 24323  014948  26E1               	addwf	fsr1l,f,c
 24324  01494A  0E00               	movlw	0
 24325  01494C  22E2               	addwfc	fsr1h,f,c
 24326                           
 24327                           ;stkvar	_b @ sp[(-13)+-4]
 24328                           
 24329                           ;incstack = 0
 24330 ;; hardware stack exceeded
 24331  01494E  0EF2               	movlw	242
 24332  014950  24E1               	addwf	fsr1l,w,c
 24333  014952  6ED9               	movwf	fsr2l,c
 24334  014954  0EFF               	movlw	255
 24335  014956  20E2               	addwfc	fsr1h,w,c
 24336  014958  6EDA               	movwf	fsr2h,c
 24337  01495A  50DF               	movf	indf2,w,c
 24338  01495C  6E31               	movwf	(btemp+11)^0,c
 24339  01495E  0E80               	movlw	128
 24340  014960  1631               	andwf	(btemp+11)^0,f,c
 24341                           
 24342                           ;stkvar	_sign @ sp[(-13)+12]
 24343  014962  0EFF               	movlw	-1
 24344  014964  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24345                           
 24346                           ;stkvar	_b @ sp[(-13)+-4]
 24347  01496A  0EF2               	movlw	242
 24348  01496C  24E1               	addwf	fsr1l,w,c
 24349  01496E  6ED9               	movwf	fsr2l,c
 24350  014970  0EFF               	movlw	255
 24351  014972  20E2               	addwfc	fsr1h,w,c
 24352  014974  6EDA               	movwf	fsr2h,c
 24353  014976  50DF               	movf	indf2,w,c
 24354  014978  6E31               	movwf	(btemp+11)^0,c
 24355  01497A  90D8               	bcf	status,0,c
 24356  01497C  3431               	rlcf	(btemp+11)^0,w,c
 24357  01497E  6E30               	movwf	(btemp+10)^0,c
 24358                           
 24359                           ;stkvar	_bexp @ sp[(-13)+11]
 24360  014980  0EFE               	movlw	-2
 24361  014982  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24362                           
 24363                           ;stkvar	_b @ sp[(-13)+-4]
 24364  014988  0EF1               	movlw	241
 24365  01498A  24E1               	addwf	fsr1l,w,c
 24366  01498C  6ED9               	movwf	fsr2l,c
 24367  01498E  0EFF               	movlw	255
 24368  014990  20E2               	addwfc	fsr1h,w,c
 24369  014992  6EDA               	movwf	fsr2h,c
 24370  014994  AEDF               	btfss	indf2,7,c
 24371  014996  D002               	goto	l7999
 24372                           
 24373                           ;stkvar	_bexp @ sp[(-13)+11]
 24374  014998  0EFE               	movlw	-2
 24375  01499A  80E3               	bsf	plusw1,0,c
 24376  01499C                     l7999:
 24377                           
 24378                           ;stkvar	_bexp @ sp[(-13)+11]
 24379  01499C  0EFE               	movlw	-2
 24380  01499E  50E3               	movf	plusw1,w,c
 24381  0149A0  B4D8               	btfsc	status,2,c
 24382  0149A2  D027               	goto	l8009
 24383                           
 24384                           ;stkvar	_bexp @ sp[(-13)+11]
 24385  0149A4  0EFE               	movlw	-2
 24386  0149A6  28E3               	incf	plusw1,w,c
 24387  0149A8  A4D8               	btfss	status,2,c
 24388  0149AA  D018               	goto	l8005
 24389  0149AC  0E00               	movlw	0
 24390  0149AE  6E2E               	movwf	(btemp+8)^0,c
 24391  0149B0  0E00               	movlw	0
 24392  0149B2  6E2F               	movwf	(btemp+9)^0,c
 24393  0149B4  0E00               	movlw	0
 24394  0149B6  6E30               	movwf	(btemp+10)^0,c
 24395  0149B8  0E00               	movlw	0
 24396  0149BA  6E31               	movwf	(btemp+11)^0,c
 24397                           
 24398                           ;stkvar	_b @ sp[(-13)+-4]
 24399  0149BC  0EEF               	movlw	-17
 24400  0149BE  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 24401  0149C4  0EF0               	movlw	-16
 24402  0149C6  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 24403  0149CC  0EF1               	movlw	-15
 24404  0149CE  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24405  0149D4  0EF2               	movlw	-14
 24406  0149D6  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24407  0149DC                     l8005:
 24408                           
 24409                           ;stkvar	_b @ sp[(-13)+-4]
 24410  0149DC  0EF1               	movlw	-15
 24411  0149DE  8EE3               	bsf	plusw1,7,c
 24412                           
 24413                           ;stkvar	_b @ sp[(-13)+-4]
 24414  0149E0  0EF2               	movlw	242
 24415  0149E2  24E1               	addwf	fsr1l,w,c
 24416  0149E4  6ED9               	movwf	fsr2l,c
 24417  0149E6  0EFF               	movlw	255
 24418  0149E8  20E2               	addwfc	fsr1h,w,c
 24419  0149EA  6EDA               	movwf	fsr2h,c
 24420  0149EC  0E00               	movlw	0
 24421  0149EE  6EDF               	movwf	indf2,c
 24422  0149F0  D018               	goto	l8011
 24423  0149F2                     l8009:
 24424  0149F2  0E00               	movlw	0
 24425  0149F4  6E2E               	movwf	(btemp+8)^0,c
 24426  0149F6  0E00               	movlw	0
 24427  0149F8  6E2F               	movwf	(btemp+9)^0,c
 24428  0149FA  0E00               	movlw	0
 24429  0149FC  6E30               	movwf	(btemp+10)^0,c
 24430  0149FE  0E00               	movlw	0
 24431  014A00  6E31               	movwf	(btemp+11)^0,c
 24432                           
 24433                           ;stkvar	_b @ sp[(-13)+-4]
 24434  014A02  0EEF               	movlw	-17
 24435  014A04  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 24436  014A0A  0EF0               	movlw	-16
 24437  014A0C  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 24438  014A12  0EF1               	movlw	-15
 24439  014A14  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24440  014A1A  0EF2               	movlw	-14
 24441  014A1C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24442  014A22                     l8011:
 24443                           
 24444                           ;stkvar	_a @ sp[(-13)+-8]
 24445  014A22  0EEE               	movlw	238
 24446  014A24  24E1               	addwf	fsr1l,w,c
 24447  014A26  6ED9               	movwf	fsr2l,c
 24448  014A28  0EFF               	movlw	255
 24449  014A2A  20E2               	addwfc	fsr1h,w,c
 24450  014A2C  6EDA               	movwf	fsr2h,c
 24451  014A2E  50DF               	movf	indf2,w,c
 24452  014A30  6E31               	movwf	(btemp+11)^0,c
 24453  014A32  0E80               	movlw	128
 24454  014A34  1631               	andwf	(btemp+11)^0,f,c
 24455                           
 24456                           ;stkvar	_sign @ sp[(-13)+12]
 24457  014A36  50E1               	movf	fsr1l,w,c
 24458  014A38  0FFF               	addlw	-1
 24459  014A3A  6ED9               	movwf	fsr2l,c
 24460  014A3C  50E2               	movf	fsr1h,w,c
 24461  014A3E  6EDA               	movwf	fsr2h,c
 24462  014A40  0EFF               	movlw	255
 24463  014A42  22DA               	addwfc	fsr2h,f,c
 24464  014A44  5031               	movf	(btemp+11)^0,w,c
 24465  014A46  1ADF               	xorwf	indf2,f,c
 24466                           
 24467                           ;stkvar	_a @ sp[(-13)+-8]
 24468  014A48  0EEE               	movlw	238
 24469  014A4A  24E1               	addwf	fsr1l,w,c
 24470  014A4C  6ED9               	movwf	fsr2l,c
 24471  014A4E  0EFF               	movlw	255
 24472  014A50  20E2               	addwfc	fsr1h,w,c
 24473  014A52  6EDA               	movwf	fsr2h,c
 24474  014A54  50DF               	movf	indf2,w,c
 24475  014A56  6E31               	movwf	(btemp+11)^0,c
 24476  014A58  90D8               	bcf	status,0,c
 24477  014A5A  3431               	rlcf	(btemp+11)^0,w,c
 24478  014A5C  6E30               	movwf	(btemp+10)^0,c
 24479                           
 24480                           ;stkvar	_aexp @ sp[(-13)+10]
 24481  014A5E  0EFD               	movlw	-3
 24482  014A60  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24483                           
 24484                           ;stkvar	_a @ sp[(-13)+-8]
 24485  014A66  0EED               	movlw	237
 24486  014A68  24E1               	addwf	fsr1l,w,c
 24487  014A6A  6ED9               	movwf	fsr2l,c
 24488  014A6C  0EFF               	movlw	255
 24489  014A6E  20E2               	addwfc	fsr1h,w,c
 24490  014A70  6EDA               	movwf	fsr2h,c
 24491  014A72  AEDF               	btfss	indf2,7,c
 24492  014A74  D002               	goto	l8019
 24493                           
 24494                           ;stkvar	_aexp @ sp[(-13)+10]
 24495  014A76  0EFD               	movlw	-3
 24496  014A78  80E3               	bsf	plusw1,0,c
 24497  014A7A                     l8019:
 24498                           
 24499                           ;stkvar	_aexp @ sp[(-13)+10]
 24500  014A7A  0EFD               	movlw	-3
 24501  014A7C  50E3               	movf	plusw1,w,c
 24502  014A7E  B4D8               	btfsc	status,2,c
 24503  014A80  D027               	goto	l8029
 24504                           
 24505                           ;stkvar	_aexp @ sp[(-13)+10]
 24506  014A82  0EFD               	movlw	-3
 24507  014A84  28E3               	incf	plusw1,w,c
 24508  014A86  A4D8               	btfss	status,2,c
 24509  014A88  D018               	goto	l8025
 24510  014A8A  0E00               	movlw	0
 24511  014A8C  6E2E               	movwf	(btemp+8)^0,c
 24512  014A8E  0E00               	movlw	0
 24513  014A90  6E2F               	movwf	(btemp+9)^0,c
 24514  014A92  0E00               	movlw	0
 24515  014A94  6E30               	movwf	(btemp+10)^0,c
 24516  014A96  0E00               	movlw	0
 24517  014A98  6E31               	movwf	(btemp+11)^0,c
 24518                           
 24519                           ;stkvar	_a @ sp[(-13)+-8]
 24520  014A9A  0EEB               	movlw	-21
 24521  014A9C  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 24522  014AA2  0EEC               	movlw	-20
 24523  014AA4  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 24524  014AAA  0EED               	movlw	-19
 24525  014AAC  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24526  014AB2  0EEE               	movlw	-18
 24527  014AB4  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24528  014ABA                     l8025:
 24529                           
 24530                           ;stkvar	_a @ sp[(-13)+-8]
 24531  014ABA  0EED               	movlw	-19
 24532  014ABC  8EE3               	bsf	plusw1,7,c
 24533                           
 24534                           ;stkvar	_a @ sp[(-13)+-8]
 24535  014ABE  0EEE               	movlw	238
 24536  014AC0  24E1               	addwf	fsr1l,w,c
 24537  014AC2  6ED9               	movwf	fsr2l,c
 24538  014AC4  0EFF               	movlw	255
 24539  014AC6  20E2               	addwfc	fsr1h,w,c
 24540  014AC8  6EDA               	movwf	fsr2h,c
 24541  014ACA  0E00               	movlw	0
 24542  014ACC  6EDF               	movwf	indf2,c
 24543  014ACE  D018               	goto	l8031
 24544  014AD0                     l8029:
 24545  014AD0  0E00               	movlw	0
 24546  014AD2  6E2E               	movwf	(btemp+8)^0,c
 24547  014AD4  0E00               	movlw	0
 24548  014AD6  6E2F               	movwf	(btemp+9)^0,c
 24549  014AD8  0E00               	movlw	0
 24550  014ADA  6E30               	movwf	(btemp+10)^0,c
 24551  014ADC  0E00               	movlw	0
 24552  014ADE  6E31               	movwf	(btemp+11)^0,c
 24553                           
 24554                           ;stkvar	_a @ sp[(-13)+-8]
 24555  014AE0  0EEB               	movlw	-21
 24556  014AE2  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 24557  014AE8  0EEC               	movlw	-20
 24558  014AEA  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 24559  014AF0  0EED               	movlw	-19
 24560  014AF2  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24561  014AF8  0EEE               	movlw	-18
 24562  014AFA  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24563  014B00                     l8031:
 24564                           
 24565                           ;stkvar	_a @ sp[(-13)+-8]
 24566  014B00  0EEB               	movlw	-21
 24567  014B02  50E3               	movf	plusw1,w,c
 24568  014B04  E139               	bnz	l8043
 24569  014B06  0EEC               	movlw	-20
 24570  014B08  50E3               	movf	plusw1,w,c
 24571  014B0A  E136               	bnz	l8043
 24572  014B0C  0EED               	movlw	-19
 24573  014B0E  50E3               	movf	plusw1,w,c
 24574  014B10  E133               	bnz	l8043
 24575  014B12  0EEE               	movlw	-18
 24576  014B14  50E3               	movf	plusw1,w,c
 24577  014B16  A4D8               	btfss	status,2,c
 24578  014B18  D02F               	goto	l8043
 24579                           
 24580                           ;stkvar	_b @ sp[(-13)+-4]
 24581  014B1A  0EEF               	movlw	-17
 24582  014B1C  6AE3               	clrf	plusw1,c
 24583  014B1E  0EF0               	movlw	-16
 24584  014B20  6AE3               	clrf	plusw1,c
 24585  014B22  0EF1               	movlw	-15
 24586  014B24  6AE3               	clrf	plusw1,c
 24587  014B26  0EF2               	movlw	-14
 24588  014B28  6AE3               	clrf	plusw1,c
 24589                           
 24590                           ;stkvar	_b @ sp[(-13)+-4]
 24591  014B2A  0EF1               	movlw	241
 24592  014B2C  24E1               	addwf	fsr1l,w,c
 24593  014B2E  6ED9               	movwf	fsr2l,c
 24594  014B30  0EFF               	movlw	255
 24595  014B32  20E2               	addwfc	fsr1h,w,c
 24596  014B34  6EDA               	movwf	fsr2h,c
 24597  014B36  0E80               	movlw	128
 24598  014B38  12DE               	iorwf	postinc2,f,c
 24599  014B3A  0E7F               	movlw	127
 24600  014B3C  12DD               	iorwf	postdec2,f,c
 24601  014B3E                     l8037:
 24602                           
 24603                           ;stkvar	_sign @ sp[(-13)+12]
 24604  014B3E  0EFF               	movlw	-1
 24605  014B40  006F FF8C  F031    	movff	plusw1,btemp+11
 24606                           
 24607                           ;stkvar	_b @ sp[(-13)+-4]
 24608  014B46  0EF2               	movlw	242
 24609  014B48  24E1               	addwf	fsr1l,w,c
 24610  014B4A  6ED9               	movwf	fsr2l,c
 24611  014B4C  0EFF               	movlw	255
 24612  014B4E  20E2               	addwfc	fsr1h,w,c
 24613  014B50  6EDA               	movwf	fsr2h,c
 24614  014B52  5031               	movf	(btemp+11)^0,w,c
 24615  014B54  12DF               	iorwf	indf2,f,c
 24616                           
 24617                           ;stkvar	_b @ sp[(-13)+-4]
 24618  014B56  0EEF               	movlw	-17
 24619  014B58  006F FF8C  F026    	movff	plusw1,btemp
 24620  014B5E  0EF0               	movlw	-16
 24621  014B60  006F FF8C  F027    	movff	plusw1,btemp+1
 24622  014B66  0EF1               	movlw	-15
 24623  014B68  006F FF8C  F028    	movff	plusw1,btemp+2
 24624  014B6E  0EF2               	movlw	-14
 24625  014B70  006F FF8C  F029    	movff	plusw1,btemp+3
 24626  014B76  D19F               	goto	l2962
 24627  014B78                     l8043:
 24628                           
 24629                           ;stkvar	_bexp @ sp[(-13)+11]
 24630  014B78  0EFE               	movlw	-2
 24631  014B7A  50E3               	movf	plusw1,w,c
 24632  014B7C  A4D8               	btfss	status,2,c
 24633  014B7E  D009               	goto	l8051
 24634  014B80  0E00               	movlw	0
 24635  014B82  6E26               	movwf	btemp^0,c
 24636  014B84  0E00               	movlw	0
 24637  014B86  6E27               	movwf	(btemp+1)^0,c
 24638  014B88  0E00               	movlw	0
 24639  014B8A  6E28               	movwf	(btemp+2)^0,c
 24640  014B8C  0E00               	movlw	0
 24641  014B8E  6E29               	movwf	(btemp+3)^0,c
 24642  014B90  D192               	goto	l2962
 24643  014B92                     l8051:
 24644                           
 24645                           ;stkvar	_bexp @ sp[(-13)+11]
 24646  014B92  0EFE               	movlw	-2
 24647  014B94  50E3               	movf	plusw1,w,c
 24648  014B96  6E30               	movwf	(btemp+10)^0,c
 24649  014B98  6A31               	clrf	(btemp+11)^0,c
 24650                           
 24651                           ;stkvar	_aexp @ sp[(-13)+10]
 24652  014B9A  0EFD               	movlw	-3
 24653  014B9C  50E3               	movf	plusw1,w,c
 24654  014B9E  5E30               	subwf	(btemp+10)^0,f,c
 24655  014BA0  0E00               	movlw	0
 24656  014BA2  5A31               	subwfb	(btemp+11)^0,f,c
 24657  014BA4  0E7F               	movlw	127
 24658  014BA6  2630               	addwf	(btemp+10)^0,f,c
 24659  014BA8  0E00               	movlw	0
 24660  014BAA  2231               	addwfc	(btemp+11)^0,f,c
 24661                           
 24662                           ;stkvar	_new_exp @ sp[(-13)+8]
 24663  014BAC  0EFB               	movlw	-5
 24664  014BAE  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24665  014BB4  0EFC               	movlw	-4
 24666  014BB6  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24667                           
 24668                           ;stkvar	_b @ sp[(-13)+-4]
 24669  014BBC  0EEF               	movlw	-17
 24670  014BBE  006F FF8C  F02E    	movff	plusw1,btemp+8
 24671  014BC4  0EF0               	movlw	-16
 24672  014BC6  006F FF8C  F02F    	movff	plusw1,btemp+9
 24673  014BCC  0EF1               	movlw	-15
 24674  014BCE  006F FF8C  F030    	movff	plusw1,btemp+10
 24675  014BD4  0EF2               	movlw	-14
 24676  014BD6  006F FF8C  F031    	movff	plusw1,btemp+11
 24677                           
 24678                           ;stkvar	_rem @ sp[(-13)+4]
 24679  014BDC  0EF7               	movlw	-9
 24680  014BDE  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 24681  014BE4  0EF8               	movlw	-8
 24682  014BE6  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 24683  014BEC  0EF9               	movlw	-7
 24684  014BEE  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 24685  014BF4  0EFA               	movlw	-6
 24686  014BF6  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 24687                           
 24688                           ;stkvar	_b @ sp[(-13)+-4]
 24689  014BFC  0EEF               	movlw	-17
 24690  014BFE  6AE3               	clrf	plusw1,c
 24691  014C00  0EF0               	movlw	-16
 24692  014C02  6AE3               	clrf	plusw1,c
 24693  014C04  0EF1               	movlw	-15
 24694  014C06  6AE3               	clrf	plusw1,c
 24695  014C08  0EF2               	movlw	-14
 24696  014C0A  6AE3               	clrf	plusw1,c
 24697                           
 24698                           ;stkvar	_grs @ sp[(-13)+0]
 24699  014C0C  0EF3               	movlw	-13
 24700  014C0E  6AE3               	clrf	plusw1,c
 24701  014C10  0EF4               	movlw	-12
 24702  014C12  6AE3               	clrf	plusw1,c
 24703  014C14  0EF5               	movlw	-11
 24704  014C16  6AE3               	clrf	plusw1,c
 24705  014C18  0EF6               	movlw	-10
 24706  014C1A  6AE3               	clrf	plusw1,c
 24707                           
 24708                           ;stkvar	_aexp @ sp[(-13)+10]
 24709  014C1C  0EFD               	movlw	-3
 24710  014C1E  6AE3               	clrf	plusw1,c
 24711  014C20  D050               	goto	l8079
 24712  014C22                     l8061:
 24713                           
 24714                           ;stkvar	_aexp @ sp[(-13)+10]
 24715  014C22  0EFD               	movlw	-3
 24716  014C24  50E3               	movf	plusw1,w,c
 24717  014C26  B4D8               	btfsc	status,2,c
 24718  014C28  D020               	goto	l8071
 24719                           
 24720                           ;stkvar	_rem @ sp[(-13)+4]
 24721  014C2A  90D8               	bcf	status,0,c
 24722  014C2C  0EF7               	movlw	-9
 24723  014C2E  36E3               	rlcf	plusw1,f,c
 24724  014C30  0EF8               	movlw	-8
 24725  014C32  36E3               	rlcf	plusw1,f,c
 24726  014C34  0EF9               	movlw	-7
 24727  014C36  36E3               	rlcf	plusw1,f,c
 24728  014C38  0EFA               	movlw	-6
 24729  014C3A  36E3               	rlcf	plusw1,f,c
 24730                           
 24731                           ;stkvar	_b @ sp[(-13)+-4]
 24732  014C3C  90D8               	bcf	status,0,c
 24733  014C3E  0EEF               	movlw	-17
 24734  014C40  36E3               	rlcf	plusw1,f,c
 24735  014C42  0EF0               	movlw	-16
 24736  014C44  36E3               	rlcf	plusw1,f,c
 24737  014C46  0EF1               	movlw	-15
 24738  014C48  36E3               	rlcf	plusw1,f,c
 24739  014C4A  0EF2               	movlw	-14
 24740  014C4C  36E3               	rlcf	plusw1,f,c
 24741                           
 24742                           ;stkvar	_grs @ sp[(-13)+0]
 24743  014C4E  0EF6               	movlw	-10
 24744  014C50  AEE3               	btfss	plusw1,7,c
 24745  014C52  D002               	goto	l8069
 24746                           
 24747                           ;stkvar	_b @ sp[(-13)+-4]
 24748  014C54  0EEF               	movlw	-17
 24749  014C56  80E3               	bsf	plusw1,0,c
 24750  014C58                     l8069:
 24751                           
 24752                           ;stkvar	_grs @ sp[(-13)+0]
 24753  014C58  90D8               	bcf	status,0,c
 24754  014C5A  0EF3               	movlw	-13
 24755  014C5C  36E3               	rlcf	plusw1,f,c
 24756  014C5E  0EF4               	movlw	-12
 24757  014C60  36E3               	rlcf	plusw1,f,c
 24758  014C62  0EF5               	movlw	-11
 24759  014C64  36E3               	rlcf	plusw1,f,c
 24760  014C66  0EF6               	movlw	-10
 24761  014C68  36E3               	rlcf	plusw1,f,c
 24762  014C6A                     l8071:
 24763                           
 24764                           ;stkvar	_a @ sp[(-13)+-8]
 24765                           ;stkvar	_rem @ sp[(-13)+4]
 24766  014C6A  50E1               	movf	fsr1l,w,c
 24767  014C6C  0FF7               	addlw	-9
 24768  014C6E  6ED9               	movwf	fsr2l,c
 24769  014C70  50E2               	movf	fsr1h,w,c
 24770  014C72  6EDA               	movwf	fsr2h,c
 24771  014C74  0EFF               	movlw	255
 24772  014C76  22DA               	addwfc	fsr2h,f,c
 24773  014C78  0EEB               	movlw	-21
 24774  014C7A  50E3               	movf	plusw1,w,c
 24775  014C7C  5CDE               	subwf	postinc2,w,c
 24776  014C7E  0EEC               	movlw	-20
 24777  014C80  50E3               	movf	plusw1,w,c
 24778  014C82  58DE               	subwfb	postinc2,w,c
 24779  014C84  0EED               	movlw	-19
 24780  014C86  50E3               	movf	plusw1,w,c
 24781  014C88  58DE               	subwfb	postinc2,w,c
 24782  014C8A  0EEE               	movlw	-18
 24783  014C8C  50E3               	movf	plusw1,w,c
 24784  014C8E  58DE               	subwfb	postinc2,w,c
 24785  014C90  A0D8               	btfss	status,0,c
 24786  014C92  D015               	goto	l8077
 24787                           
 24788                           ;stkvar	_grs @ sp[(-13)+0]
 24789  014C94  0EF6               	movlw	-10
 24790  014C96  8CE3               	bsf	plusw1,6,c
 24791                           
 24792                           ;stkvar	_a @ sp[(-13)+-8]
 24793                           ;stkvar	_rem @ sp[(-13)+4]
 24794  014C98  50E1               	movf	fsr1l,w,c
 24795  014C9A  0FF7               	addlw	-9
 24796  014C9C  6ED9               	movwf	fsr2l,c
 24797  014C9E  50E2               	movf	fsr1h,w,c
 24798  014CA0  6EDA               	movwf	fsr2h,c
 24799  014CA2  0EFF               	movlw	255
 24800  014CA4  22DA               	addwfc	fsr2h,f,c
 24801  014CA6  0EEB               	movlw	-21
 24802  014CA8  50E3               	movf	plusw1,w,c
 24803  014CAA  5EDE               	subwf	postinc2,f,c
 24804  014CAC  0EEC               	movlw	-20
 24805  014CAE  50E3               	movf	plusw1,w,c
 24806  014CB0  5ADE               	subwfb	postinc2,f,c
 24807  014CB2  0EED               	movlw	-19
 24808  014CB4  50E3               	movf	plusw1,w,c
 24809  014CB6  5ADE               	subwfb	postinc2,f,c
 24810  014CB8  0EEE               	movlw	-18
 24811  014CBA  50E3               	movf	plusw1,w,c
 24812  014CBC  5ADE               	subwfb	postinc2,f,c
 24813  014CBE                     l8077:
 24814                           
 24815                           ;stkvar	_aexp @ sp[(-13)+10]
 24816  014CBE  0EFD               	movlw	-3
 24817  014CC0  2AE3               	incf	plusw1,f,c
 24818  014CC2                     l8079:
 24819                           
 24820                           ;stkvar	_aexp @ sp[(-13)+10]
 24821  014CC2  0EFD               	movlw	-3
 24822  014CC4  006F FF8C  F026    	movff	plusw1,btemp
 24823  014CCA  0E19               	movlw	25
 24824  014CCC  6426               	cpfsgt	btemp^0,c
 24825  014CCE  D7A9               	goto	l8061
 24826                           
 24827                           ;stkvar	_rem @ sp[(-13)+4]
 24828  014CD0  0EF7               	movlw	-9
 24829  014CD2  50E3               	movf	plusw1,w,c
 24830  014CD4  E10A               	bnz	u6450
 24831  014CD6  0EF8               	movlw	-8
 24832  014CD8  50E3               	movf	plusw1,w,c
 24833  014CDA  E107               	bnz	u6450
 24834  014CDC  0EF9               	movlw	-7
 24835  014CDE  50E3               	movf	plusw1,w,c
 24836  014CE0  E104               	bnz	u6450
 24837  014CE2  0EFA               	movlw	-6
 24838  014CE4  50E3               	movf	plusw1,w,c
 24839  014CE6  B4D8               	btfsc	status,2,c
 24840  014CE8  D024               	goto	l8095
 24841  014CEA                     u6450:
 24842                           
 24843                           ;stkvar	_grs @ sp[(-13)+0]
 24844  014CEA  0EF3               	movlw	-13
 24845  014CEC  80E3               	bsf	plusw1,0,c
 24846  014CEE  D021               	goto	l8095
 24847  014CF0                     l8085:
 24848                           
 24849                           ;stkvar	_b @ sp[(-13)+-4]
 24850  014CF0  90D8               	bcf	status,0,c
 24851  014CF2  0EEF               	movlw	-17
 24852  014CF4  36E3               	rlcf	plusw1,f,c
 24853  014CF6  0EF0               	movlw	-16
 24854  014CF8  36E3               	rlcf	plusw1,f,c
 24855  014CFA  0EF1               	movlw	-15
 24856  014CFC  36E3               	rlcf	plusw1,f,c
 24857  014CFE  0EF2               	movlw	-14
 24858  014D00  36E3               	rlcf	plusw1,f,c
 24859                           
 24860                           ;stkvar	_grs @ sp[(-13)+0]
 24861  014D02  0EF6               	movlw	-10
 24862  014D04  AEE3               	btfss	plusw1,7,c
 24863  014D06  D002               	goto	l8091
 24864                           
 24865                           ;stkvar	_b @ sp[(-13)+-4]
 24866  014D08  0EEF               	movlw	-17
 24867  014D0A  80E3               	bsf	plusw1,0,c
 24868  014D0C                     l8091:
 24869                           
 24870                           ;stkvar	_grs @ sp[(-13)+0]
 24871  014D0C  90D8               	bcf	status,0,c
 24872  014D0E  0EF3               	movlw	-13
 24873  014D10  36E3               	rlcf	plusw1,f,c
 24874  014D12  0EF4               	movlw	-12
 24875  014D14  36E3               	rlcf	plusw1,f,c
 24876  014D16  0EF5               	movlw	-11
 24877  014D18  36E3               	rlcf	plusw1,f,c
 24878  014D1A  0EF6               	movlw	-10
 24879  014D1C  36E3               	rlcf	plusw1,f,c
 24880                           
 24881                           ;stkvar	_new_exp @ sp[(-13)+8]
 24882  014D1E  50E1               	movf	fsr1l,w,c
 24883  014D20  0FFB               	addlw	-5
 24884  014D22  6ED9               	movwf	fsr2l,c
 24885  014D24  50E2               	movf	fsr1h,w,c
 24886  014D26  6EDA               	movwf	fsr2h,c
 24887  014D28  0EFF               	movlw	255
 24888  014D2A  22DA               	addwfc	fsr2h,f,c
 24889  014D2C  06DE               	decf	postinc2,f,c
 24890  014D2E  0E00               	movlw	0
 24891  014D30  5ADD               	subwfb	postdec2,f,c
 24892  014D32                     l8095:
 24893                           
 24894                           ;stkvar	_b @ sp[(-13)+-4]
 24895  014D32  0EF1               	movlw	-15
 24896  014D34  AEE3               	btfss	plusw1,7,c
 24897  014D36  D7DC               	goto	l8085
 24898                           
 24899                           ;stkvar	_aexp @ sp[(-13)+10]
 24900  014D38  0EFD               	movlw	-3
 24901  014D3A  6AE3               	clrf	plusw1,c
 24902                           
 24903                           ;stkvar	_grs @ sp[(-13)+0]
 24904  014D3C  0EF6               	movlw	-10
 24905  014D3E  AEE3               	btfss	plusw1,7,c
 24906  014D40  D020               	goto	l8109
 24907                           
 24908                           ;stkvar	_grs @ sp[(-13)+0]
 24909  014D42  50E1               	movf	fsr1l,w,c
 24910  014D44  0FF3               	addlw	-13
 24911  014D46  6ED9               	movwf	fsr2l,c
 24912  014D48  50E2               	movf	fsr1h,w,c
 24913  014D4A  6EDA               	movwf	fsr2h,c
 24914  014D4C  0EFF               	movlw	255
 24915  014D4E  22DA               	addwfc	fsr2h,f,c
 24916  014D50  0EFF               	movlw	255
 24917  014D52  14DE               	andwf	postinc2,w,c
 24918  014D54  6E2E               	movwf	(btemp+8)^0,c
 24919  014D56  0EFF               	movlw	255
 24920  014D58  14DE               	andwf	postinc2,w,c
 24921  014D5A  6E2F               	movwf	(btemp+9)^0,c
 24922  014D5C  0EFF               	movlw	255
 24923  014D5E  14DE               	andwf	postinc2,w,c
 24924  014D60  6E30               	movwf	(btemp+10)^0,c
 24925  014D62  0E7F               	movlw	127
 24926  014D64  14DE               	andwf	postinc2,w,c
 24927  014D66  6E31               	movwf	(btemp+11)^0,c
 24928  014D68  502E               	movf	(btemp+8)^0,w,c
 24929  014D6A  102F               	iorwf	(btemp+9)^0,w,c
 24930  014D6C  1030               	iorwf	(btemp+10)^0,w,c
 24931  014D6E  1031               	iorwf	(btemp+11)^0,w,c
 24932  014D70  B4D8               	btfsc	status,2,c
 24933  014D72  D004               	goto	l8105
 24934  014D74                     u6490:
 24935                           
 24936                           ;stkvar	_aexp @ sp[(-13)+10]
 24937  014D74  0EFD               	movlw	-3
 24938  014D76  6AE3               	clrf	plusw1,c
 24939  014D78  2AE3               	incf	plusw1,f,c
 24940  014D7A  D003               	goto	l8109
 24941  014D7C                     l8105:
 24942                           
 24943                           ;stkvar	_b @ sp[(-13)+-4]
 24944  014D7C  0EEF               	movlw	-17
 24945  014D7E  B0E3               	btfsc	plusw1,0,c
 24946  014D80  D7F9               	goto	u6490
 24947  014D82                     l8109:
 24948                           
 24949                           ;stkvar	_aexp @ sp[(-13)+10]
 24950  014D82  0EFD               	movlw	-3
 24951  014D84  50E3               	movf	plusw1,w,c
 24952  014D86  B4D8               	btfsc	status,2,c
 24953  014D88  D036               	goto	l8119
 24954                           
 24955                           ;stkvar	_b @ sp[(-13)+-4]
 24956  014D8A  50E1               	movf	fsr1l,w,c
 24957  014D8C  0FEF               	addlw	-17
 24958  014D8E  6ED9               	movwf	fsr2l,c
 24959  014D90  50E2               	movf	fsr1h,w,c
 24960  014D92  6EDA               	movwf	fsr2h,c
 24961  014D94  0EFF               	movlw	255
 24962  014D96  22DA               	addwfc	fsr2h,f,c
 24963  014D98  2ADE               	incf	postinc2,f,c
 24964  014D9A  0E00               	movlw	0
 24965  014D9C  22DE               	addwfc	postinc2,f,c
 24966  014D9E  22DE               	addwfc	postinc2,f,c
 24967  014DA0  22DE               	addwfc	postinc2,f,c
 24968                           
 24969                           ;stkvar	_b @ sp[(-13)+-4]
 24970  014DA2  0EF2               	movlw	-14
 24971  014DA4  A0E3               	btfss	plusw1,0,c
 24972  014DA6  D027               	goto	l8119
 24973  014DA8  0E01               	movlw	1
 24974  014DAA  6E31               	movwf	(btemp+11)^0,c
 24975                           
 24976                           ;stkvar	_b @ sp[(-13)+-4]
 24977  014DAC  50E1               	movf	fsr1l,w,c
 24978  014DAE  0FEF               	addlw	-17
 24979  014DB0  6ED9               	movwf	fsr2l,c
 24980  014DB2  50E2               	movf	fsr1h,w,c
 24981  014DB4  6EDA               	movwf	fsr2h,c
 24982  014DB6  0EFF               	movlw	255
 24983  014DB8  22DA               	addwfc	fsr2h,f,c
 24984  014DBA  2831               	incf	(btemp+11)^0,w,c
 24985  014DBC  52DE               	movf	postinc2,f,c
 24986  014DBE  D008               	goto	u6530
 24987  014DC0                     u6535:
 24988  014DC0  52DE               	movf	postinc2,f,c
 24989  014DC2  90D8               	bcf	status,0,c
 24990  014DC4  BEDC               	btfsc	preinc2,7,c
 24991  014DC6  80D8               	bsf	status,0,c
 24992  014DC8  32DD               	rrcf	postdec2,f,c
 24993  014DCA  32DD               	rrcf	postdec2,f,c
 24994  014DCC  32DD               	rrcf	postdec2,f,c
 24995  014DCE  32DE               	rrcf	postinc2,f,c
 24996  014DD0                     u6530:
 24997  014DD0  2EE8               	decfsz	wreg,f,c
 24998  014DD2  D7F6               	goto	u6535
 24999                           
 25000                           ;stkvar	_new_exp @ sp[(-13)+8]
 25001  014DD4  0EFB               	movlw	-5
 25002  014DD6  50E3               	movf	plusw1,w,c
 25003  014DD8  0F01               	addlw	1
 25004  014DDA  6E26               	movwf	btemp^0,c
 25005  014DDC  0EFB               	movlw	-5
 25006  014DDE  0060  F09B  FFE3   	movff	btemp,plusw1
 25007  014DE4  6A26               	clrf	btemp^0,c
 25008  014DE6  0EFC               	movlw	-4
 25009  014DE8  50E3               	movf	plusw1,w,c
 25010  014DEA  2026               	addwfc	btemp^0,w,c
 25011  014DEC  6E26               	movwf	btemp^0,c
 25012  014DEE  0EFC               	movlw	-4
 25013  014DF0  0060  F09B  FFE3   	movff	btemp,plusw1
 25014  014DF6                     l8119:
 25015                           
 25016                           ;stkvar	_new_exp @ sp[(-13)+8]
 25017  014DF6  0EFC               	movlw	-4
 25018  014DF8  BEE3               	btfsc	plusw1,7,c
 25019  014DFA  D01B               	goto	l8125
 25020  014DFC  0EFC               	movlw	-4
 25021  014DFE  50E3               	movf	plusw1,w,c
 25022  014E00  E104               	bnz	u6540
 25023  014E02  0EFB               	movlw	-5
 25024  014E04  28E3               	incf	plusw1,w,c
 25025  014E06  A0D8               	btfss	status,0,c
 25026  014E08  D014               	goto	l8125
 25027  014E0A                     u6540:
 25028  014E0A  0EFF               	movlw	255
 25029  014E0C  6E30               	movwf	(btemp+10)^0,c
 25030  014E0E  0E00               	movlw	0
 25031  014E10  6E31               	movwf	(btemp+11)^0,c
 25032                           
 25033                           ;stkvar	_new_exp @ sp[(-13)+8]
 25034  014E12  0EFB               	movlw	-5
 25035  014E14  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 25036  014E1A  0EFC               	movlw	-4
 25037  014E1C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 25038                           
 25039                           ;stkvar	_b @ sp[(-13)+-4]
 25040  014E22  0EEF               	movlw	-17
 25041  014E24  6AE3               	clrf	plusw1,c
 25042  014E26  0EF0               	movlw	-16
 25043  014E28  6AE3               	clrf	plusw1,c
 25044  014E2A  0EF1               	movlw	-15
 25045  014E2C  6AE3               	clrf	plusw1,c
 25046  014E2E  0EF2               	movlw	-14
 25047  014E30  6AE3               	clrf	plusw1,c
 25048  014E32                     l8125:
 25049                           
 25050                           ;stkvar	_new_exp @ sp[(-13)+8]
 25051  014E32  0EFC               	movlw	-4
 25052  014E34  BEE3               	btfsc	plusw1,7,c
 25053  014E36  D007               	goto	u6550
 25054  014E38  0EFC               	movlw	-4
 25055  014E3A  50E3               	movf	plusw1,w,c
 25056  014E3C  E112               	bnz	l8131
 25057  014E3E  0EFB               	movlw	-5
 25058  014E40  04E3               	decf	plusw1,w,c
 25059  014E42  B0D8               	btfsc	status,0,c
 25060  014E44  D00E               	goto	l8131
 25061  014E46                     u6550:
 25062                           
 25063                           ;stkvar	_new_exp @ sp[(-13)+8]
 25064  014E46  0EFB               	movlw	-5
 25065  014E48  6AE3               	clrf	plusw1,c
 25066  014E4A  0EFC               	movlw	-4
 25067  014E4C  6AE3               	clrf	plusw1,c
 25068                           
 25069                           ;stkvar	_b @ sp[(-13)+-4]
 25070  014E4E  0EEF               	movlw	-17
 25071  014E50  6AE3               	clrf	plusw1,c
 25072  014E52  0EF0               	movlw	-16
 25073  014E54  6AE3               	clrf	plusw1,c
 25074  014E56  0EF1               	movlw	-15
 25075  014E58  6AE3               	clrf	plusw1,c
 25076  014E5A  0EF2               	movlw	-14
 25077  014E5C  6AE3               	clrf	plusw1,c
 25078                           
 25079                           ;stkvar	_sign @ sp[(-13)+12]
 25080  014E5E  0EFF               	movlw	-1
 25081  014E60  6AE3               	clrf	plusw1,c
 25082  014E62                     l8131:
 25083                           
 25084                           ;stkvar	_new_exp @ sp[(-13)+8]
 25085                           ;stkvar	_bexp @ sp[(-13)+11]
 25086  014E62  0EFB               	movlw	-5
 25087  014E64  006F FF8C  F026    	movff	plusw1,btemp
 25088  014E6A  0EFE               	movlw	-2
 25089  014E6C  0060  F09B  FFE3   	movff	btemp,plusw1
 25090                           
 25091                           ;stkvar	_bexp @ sp[(-13)+11]
 25092  014E72  0EFE               	movlw	-2
 25093  014E74  A0E3               	btfss	plusw1,0,c
 25094  014E76  D009               	goto	l8137
 25095                           
 25096                           ;stkvar	_b @ sp[(-13)+-4]
 25097  014E78  0EF1               	movlw	241
 25098  014E7A  24E1               	addwf	fsr1l,w,c
 25099  014E7C  6ED9               	movwf	fsr2l,c
 25100  014E7E  0EFF               	movlw	255
 25101  014E80  20E2               	addwfc	fsr1h,w,c
 25102  014E82  6EDA               	movwf	fsr2h,c
 25103  014E84  0E00               	movlw	0
 25104  014E86  8EDB               	bsf	plusw2,7,c
 25105  014E88  D008               	goto	l8139
 25106  014E8A                     l8137:
 25107                           
 25108                           ;stkvar	_b @ sp[(-13)+-4]
 25109  014E8A  0EF1               	movlw	241
 25110  014E8C  24E1               	addwf	fsr1l,w,c
 25111  014E8E  6ED9               	movwf	fsr2l,c
 25112  014E90  0EFF               	movlw	255
 25113  014E92  20E2               	addwfc	fsr1h,w,c
 25114  014E94  6EDA               	movwf	fsr2h,c
 25115  014E96  0E7F               	movlw	127
 25116  014E98  16DF               	andwf	indf2,f,c
 25117  014E9A                     l8139:
 25118                           
 25119                           ;stkvar	_b @ sp[(-13)+-4]
 25120  014E9A  0EF2               	movlw	242
 25121  014E9C  24E1               	addwf	fsr1l,w,c
 25122  014E9E  6ED9               	movwf	fsr2l,c
 25123  014EA0  0EFF               	movlw	255
 25124  014EA2  20E2               	addwfc	fsr1h,w,c
 25125  014EA4  6EDA               	movwf	fsr2h,c
 25126                           
 25127                           ;stkvar	_bexp @ sp[(-13)+11]
 25128  014EA6  0EFE               	movlw	-2
 25129  014EA8  006F FF8C  F031    	movff	plusw1,btemp+11
 25130  014EAE  90D8               	bcf	status,0,c
 25131  014EB0  3031               	rrcf	(btemp+11)^0,w,c
 25132  014EB2  6EDF               	movwf	indf2,c
 25133  014EB4  D644               	goto	l8037
 25134  014EB6                     l2962:
 25135                           
 25136                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 25137  014EB6  0EEB               	movlw	235
 25138  014EB8  26E1               	addwf	fsr1l,f,c
 25139  014EBA  0EFF               	movlw	255
 25140  014EBC  22E2               	addwfc	fsr1h,f,c
 25141  014EBE  0012               	return		;funcret
 25142  014EC0                     __end_of___fldiv:
 25143                           	opt callstack 0
 25144                           
 25145 ;; *************** function ___flge *****************
 25146 ;; Defined at:
 25147 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 25148 ;; Parameters:    Size  Location     Type
 25149 ;;  ff1             4  [STACK] unsigned char 
 25150 ;;  ff2             4  [STACK] unsigned char 
 25151 ;; Auto vars:     Size  Location     Type
 25152 ;;		None
 25153 ;; Return value:  Size  Location     Type
 25154 ;;		None               void
 25155 ;; Registers used:
 25156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 25157 ;; Tracked objects:
 25158 ;;		On entry : 0/0
 25159 ;;		On exit  : 0/0
 25160 ;;		Unchanged: 0/0
 25161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25166 ;;Total ram usage:        0 bytes
 25167 ;; Hardware stack levels used:    1
 25168 ;; Hardware stack levels required when called:   15
 25169 ;; This function calls:
 25170 ;;		Nothing
 25171 ;; This function is called by:
 25172 ;;		_main
 25173 ;;		_calc_ror_data
 25174 ;;		_check_day_time
 25175 ;;		_calc_bsoc
 25176 ;;		_efgtoa
 25177 ;; This function uses a reentrant model
 25178 ;;
 25179                           
 25180                           	psect	text99
 25181  0186F0                     __ptext99:
 25182                           	opt callstack 0
 25183  0186F0                     ___flge:
 25184                           	opt callstack 0
 25185                           
 25186                           ;stkvar	_ff1 @ sp[(0)+-4]
 25187                           
 25188                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25189                           ;incstack = 0
 25190 ;; hardware stack exceeded
 25191  0186F0  50E1               	movf	fsr1l,w,c
 25192  0186F2  0FFC               	addlw	-4
 25193  0186F4  6ED9               	movwf	fsr2l,c
 25194  0186F6  50E2               	movf	fsr1h,w,c
 25195  0186F8  6EDA               	movwf	fsr2h,c
 25196  0186FA  0EFF               	movlw	255
 25197  0186FC  22DA               	addwfc	fsr2h,f,c
 25198  0186FE  0E00               	movlw	0
 25199  018700  14DE               	andwf	postinc2,w,c
 25200  018702  6E2E               	movwf	(btemp+8)^0,c
 25201  018704  0E00               	movlw	0
 25202  018706  14DE               	andwf	postinc2,w,c
 25203  018708  6E2F               	movwf	(btemp+9)^0,c
 25204  01870A  0E80               	movlw	128
 25205  01870C  14DE               	andwf	postinc2,w,c
 25206  01870E  6E30               	movwf	(btemp+10)^0,c
 25207  018710  0E7F               	movlw	127
 25208  018712  14DE               	andwf	postinc2,w,c
 25209  018714  6E31               	movwf	(btemp+11)^0,c
 25210  018716  502E               	movf	(btemp+8)^0,w,c
 25211  018718  102F               	iorwf	(btemp+9)^0,w,c
 25212  01871A  1030               	iorwf	(btemp+10)^0,w,c
 25213  01871C  1031               	iorwf	(btemp+11)^0,w,c
 25214  01871E  A4D8               	btfss	status,2,c
 25215  018720  D008               	goto	l8413
 25216                           
 25217                           ;stkvar	_ff1 @ sp[(0)+-4]
 25218  018722  0EFC               	movlw	-4
 25219  018724  6AE3               	clrf	plusw1,c
 25220  018726  0EFD               	movlw	-3
 25221  018728  6AE3               	clrf	plusw1,c
 25222  01872A  0EFE               	movlw	-2
 25223  01872C  6AE3               	clrf	plusw1,c
 25224  01872E  0EFF               	movlw	-1
 25225  018730  6AE3               	clrf	plusw1,c
 25226  018732                     l8413:
 25227                           
 25228                           ;stkvar	_ff2 @ sp[(0)+-8]
 25229  018732  50E1               	movf	fsr1l,w,c
 25230  018734  0FF8               	addlw	-8
 25231  018736  6ED9               	movwf	fsr2l,c
 25232  018738  50E2               	movf	fsr1h,w,c
 25233  01873A  6EDA               	movwf	fsr2h,c
 25234  01873C  0EFF               	movlw	255
 25235  01873E  22DA               	addwfc	fsr2h,f,c
 25236  018740  0E00               	movlw	0
 25237  018742  14DE               	andwf	postinc2,w,c
 25238  018744  6E2E               	movwf	(btemp+8)^0,c
 25239  018746  0E00               	movlw	0
 25240  018748  14DE               	andwf	postinc2,w,c
 25241  01874A  6E2F               	movwf	(btemp+9)^0,c
 25242  01874C  0E80               	movlw	128
 25243  01874E  14DE               	andwf	postinc2,w,c
 25244  018750  6E30               	movwf	(btemp+10)^0,c
 25245  018752  0E7F               	movlw	127
 25246  018754  14DE               	andwf	postinc2,w,c
 25247  018756  6E31               	movwf	(btemp+11)^0,c
 25248  018758  502E               	movf	(btemp+8)^0,w,c
 25249  01875A  102F               	iorwf	(btemp+9)^0,w,c
 25250  01875C  1030               	iorwf	(btemp+10)^0,w,c
 25251  01875E  1031               	iorwf	(btemp+11)^0,w,c
 25252  018760  A4D8               	btfss	status,2,c
 25253  018762  D008               	goto	l2643
 25254                           
 25255                           ;stkvar	_ff2 @ sp[(0)+-8]
 25256  018764  0EF8               	movlw	-8
 25257  018766  6AE3               	clrf	plusw1,c
 25258  018768  0EF9               	movlw	-7
 25259  01876A  6AE3               	clrf	plusw1,c
 25260  01876C  0EFA               	movlw	-6
 25261  01876E  6AE3               	clrf	plusw1,c
 25262  018770  0EFB               	movlw	-5
 25263  018772  6AE3               	clrf	plusw1,c
 25264  018774                     l2643:
 25265                           
 25266                           ;stkvar	_ff1 @ sp[(0)+-4]
 25267  018774  0EFF               	movlw	-1
 25268  018776  AEE3               	btfss	plusw1,7,c
 25269  018778  D024               	goto	l8419
 25270                           
 25271                           ;stkvar	_ff1 @ sp[(0)+-4]
 25272  01877A  0E00               	movlw	0
 25273  01877C  6E2E               	movwf	(btemp+8)^0,c
 25274  01877E  0E00               	movlw	0
 25275  018780  6E2F               	movwf	(btemp+9)^0,c
 25276  018782  0E00               	movlw	0
 25277  018784  6E30               	movwf	(btemp+10)^0,c
 25278  018786  0E80               	movlw	128
 25279  018788  6E31               	movwf	(btemp+11)^0,c
 25280  01878A  0EFC               	movlw	-4
 25281  01878C  50E3               	movf	plusw1,w,c
 25282  01878E  5E2E               	subwf	(btemp+8)^0,f,c
 25283  018790  0EFD               	movlw	-3
 25284  018792  50E3               	movf	plusw1,w,c
 25285  018794  5A2F               	subwfb	(btemp+9)^0,f,c
 25286  018796  0EFE               	movlw	-2
 25287  018798  50E3               	movf	plusw1,w,c
 25288  01879A  5A30               	subwfb	(btemp+10)^0,f,c
 25289  01879C  0EFF               	movlw	-1
 25290  01879E  50E3               	movf	plusw1,w,c
 25291  0187A0  5A31               	subwfb	(btemp+11)^0,f,c
 25292                           
 25293                           ;stkvar	_ff1 @ sp[(0)+-4]
 25294  0187A2  0EFC               	movlw	-4
 25295  0187A4  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 25296  0187AA  0EFD               	movlw	-3
 25297  0187AC  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 25298  0187B2  0EFE               	movlw	-2
 25299  0187B4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 25300  0187BA  0EFF               	movlw	-1
 25301  0187BC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 25302  0187C2                     l8419:
 25303                           
 25304                           ;stkvar	_ff2 @ sp[(0)+-8]
 25305  0187C2  0EFB               	movlw	-5
 25306  0187C4  AEE3               	btfss	plusw1,7,c
 25307  0187C6  D024               	goto	l8423
 25308                           
 25309                           ;stkvar	_ff2 @ sp[(0)+-8]
 25310  0187C8  0E00               	movlw	0
 25311  0187CA  6E2E               	movwf	(btemp+8)^0,c
 25312  0187CC  0E00               	movlw	0
 25313  0187CE  6E2F               	movwf	(btemp+9)^0,c
 25314  0187D0  0E00               	movlw	0
 25315  0187D2  6E30               	movwf	(btemp+10)^0,c
 25316  0187D4  0E80               	movlw	128
 25317  0187D6  6E31               	movwf	(btemp+11)^0,c
 25318  0187D8  0EF8               	movlw	-8
 25319  0187DA  50E3               	movf	plusw1,w,c
 25320  0187DC  5E2E               	subwf	(btemp+8)^0,f,c
 25321  0187DE  0EF9               	movlw	-7
 25322  0187E0  50E3               	movf	plusw1,w,c
 25323  0187E2  5A2F               	subwfb	(btemp+9)^0,f,c
 25324  0187E4  0EFA               	movlw	-6
 25325  0187E6  50E3               	movf	plusw1,w,c
 25326  0187E8  5A30               	subwfb	(btemp+10)^0,f,c
 25327  0187EA  0EFB               	movlw	-5
 25328  0187EC  50E3               	movf	plusw1,w,c
 25329  0187EE  5A31               	subwfb	(btemp+11)^0,f,c
 25330                           
 25331                           ;stkvar	_ff2 @ sp[(0)+-8]
 25332  0187F0  0EF8               	movlw	-8
 25333  0187F2  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 25334  0187F8  0EF9               	movlw	-7
 25335  0187FA  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 25336  018800  0EFA               	movlw	-6
 25337  018802  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 25338  018808  0EFB               	movlw	-5
 25339  01880A  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 25340  018810                     l8423:
 25341                           
 25342                           ;stkvar	_ff1 @ sp[(0)+-4]
 25343  018810  0EFF               	movlw	-1
 25344  018812  7EE3               	btg	plusw1,7,c
 25345                           
 25346                           ;stkvar	_ff2 @ sp[(0)+-8]
 25347  018814  0EFB               	movlw	-5
 25348  018816  7EE3               	btg	plusw1,7,c
 25349                           
 25350                           ;stkvar	_ff2 @ sp[(0)+-8]
 25351                           ;stkvar	_ff1 @ sp[(0)+-4]
 25352  018818  50E1               	movf	fsr1l,w,c
 25353  01881A  0FFC               	addlw	-4
 25354  01881C  6ED9               	movwf	fsr2l,c
 25355  01881E  50E2               	movf	fsr1h,w,c
 25356  018820  6EDA               	movwf	fsr2h,c
 25357  018822  0EFF               	movlw	255
 25358  018824  22DA               	addwfc	fsr2h,f,c
 25359  018826  0EF8               	movlw	-8
 25360  018828  50E3               	movf	plusw1,w,c
 25361  01882A  5CDE               	subwf	postinc2,w,c
 25362  01882C  0EF9               	movlw	-7
 25363  01882E  50E3               	movf	plusw1,w,c
 25364  018830  58DE               	subwfb	postinc2,w,c
 25365  018832  0EFA               	movlw	-6
 25366  018834  50E3               	movf	plusw1,w,c
 25367  018836  58DE               	subwfb	postinc2,w,c
 25368  018838  0EFB               	movlw	-5
 25369  01883A  50E3               	movf	plusw1,w,c
 25370  01883C  58DE               	subwfb	postinc2,w,c
 25371  01883E  B0D8               	btfsc	status,0,c
 25372  018840  D002               	goto	l8431
 25373  018842  9026               	bcf	btemp& (0+255),0,c
 25374  018844  D001               	goto	l2650
 25375  018846                     l8431:
 25376  018846  8026               	bsf	btemp& (0+255),0,c
 25377  018848                     l2650:
 25378                           
 25379                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 25380  018848  0EF8               	movlw	248
 25381  01884A  26E1               	addwf	fsr1l,f,c
 25382  01884C  0EFF               	movlw	255
 25383  01884E  22E2               	addwfc	fsr1h,f,c
 25384  018850  0012               	return		;funcret
 25385  018852                     __end_of___flge:
 25386                           	opt callstack 0
 25387                           
 25388 ;; *************** function _calc_model_data *****************
 25389 ;; Defined at:
 25390 ;;		line 67 in file "mbmc.c"
 25391 ;; Parameters:    Size  Location     Type
 25392 ;;		None
 25393 ;; Auto vars:     Size  Location     Type
 25394 ;;		None
 25395 ;; Return value:  Size  Location     Type
 25396 ;;                  1  [STACK] void 
 25397 ;; Registers used:
 25398 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25399 ;; Tracked objects:
 25400 ;;		On entry : 0/0
 25401 ;;		On exit  : 3F/1
 25402 ;;		Unchanged: 0/0
 25403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25408 ;;Total ram usage:        0 bytes
 25409 ;; Hardware stack levels used:    1
 25410 ;; Hardware stack levels required when called:   18
 25411 ;; This function calls:
 25412 ;;		___fladd
 25413 ;;		___flmul
 25414 ;;		___flsub
 25415 ;;		_lp_filter
 25416 ;;		_start_bsoc
 25417 ;;		_stop_bsoc
 25418 ;; This function is called by:
 25419 ;;		_main
 25420 ;; This function uses a reentrant model
 25421 ;;
 25422                           
 25423                           	psect	text100
 25424  015BA6                     __ptext100:
 25425                           	opt callstack 0
 25426  015BA6                     _calc_model_data:
 25427                           	opt callstack 12
 25428                           
 25429                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 25430                           
 25431                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25432                           ;incstack = 0
 25433  015BA6  EC30  F0DC         	call	_stop_bsoc	;wreg free
 25434                           
 25435                           ; BSR set to: 57
 25436                           ;mbmc.c: 72:  if (!V.calib) {
 25437  015BAA  0102               	movlb	2	; () banked
 25438  015BAC  51B3               	movf	(_V+172)& (0+255),w,b	;volatile
 25439  015BAE  A4D8               	btfss	status,2,c
 25440  015BB0  D1C5               	goto	l10779
 25441                           
 25442                           ; BSR set to: 2
 25443                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 25444  015BB2  C100  F144         	movff	_C,_C+68	;volatile
 25445  015BB6  C101  F145         	movff	_C+1,_C+69	;volatile
 25446  015BBA  C102  F146         	movff	_C+2,_C+70	;volatile
 25447  015BBE  C103  F147         	movff	_C+3,_C+71	;volatile
 25448                           
 25449                           ; BSR set to: 2
 25450                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 25451  015BC2  0060  F21B  FFE6   	movff	calc_model_data@bcror,postinc1
 25452  015BC8  0060  F21F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 25453  015BCE  0060  F223  FFE6   	movff	calc_model_data@bcror+2,postinc1
 25454  015BD4  0060  F227  FFE6   	movff	calc_model_data@bcror+3,postinc1
 25455  015BDA  0060  F513  FFE6   	movff	_C+68,postinc1
 25456  015BE0  0060  F517  FFE6   	movff	_C+69,postinc1
 25457  015BE6  0060  F51B  FFE6   	movff	_C+70,postinc1
 25458  015BEC  0060  F51F  FFE6   	movff	_C+71,postinc1
 25459  015BF2  ECED  F0D5         	call	___flsub	;wreg free
 25460  015BF6  0060  F098  F16C   	movff	btemp,_C+108	;volatile
 25461  015BFC  0060  F09C  F16D   	movff	btemp+1,_C+109	;volatile
 25462  015C02  0060  F0A0  F16E   	movff	btemp+2,_C+110	;volatile
 25463  015C08  0060  F0A4  F16F   	movff	btemp+3,_C+111	;volatile
 25464                           
 25465                           ;mbmc.c: 75:   bcror = C.c_bat;
 25466  015C0E  C144  F086         	movff	_C+68,calc_model_data@bcror	;volatile
 25467  015C12  C145  F087         	movff	_C+69,calc_model_data@bcror+1	;volatile
 25468  015C16  C146  F088         	movff	_C+70,calc_model_data@bcror+2	;volatile
 25469  015C1A  C147  F089         	movff	_C+71,calc_model_data@bcror+3	;volatile
 25470                           
 25471                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 25472  015C1E  C104  F148         	movff	_C+4,_C+72	;volatile
 25473  015C22  C105  F149         	movff	_C+5,_C+73	;volatile
 25474  015C26  C106  F14A         	movff	_C+6,_C+74	;volatile
 25475  015C2A  C107  F14B         	movff	_C+7,_C+75	;volatile
 25476                           
 25477                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 25478  015C2E  C110  F154         	movff	_C+16,_C+84	;volatile
 25479  015C32  C111  F155         	movff	_C+17,_C+85	;volatile
 25480  015C36  C112  F156         	movff	_C+18,_C+86	;volatile
 25481  015C3A  C113  F157         	movff	_C+19,_C+87	;volatile
 25482                           
 25483                           ;mbmc.c: 78:   C.bv_ror = C.v_bat - bvror;
 25484  015C3E  0060  F22B  FFE6   	movff	calc_model_data@bvror,postinc1
 25485  015C44  0060  F22F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 25486  015C4A  0060  F233  FFE6   	movff	calc_model_data@bvror+2,postinc1
 25487  015C50  0060  F237  FFE6   	movff	calc_model_data@bvror+3,postinc1
 25488  015C56  0060  F553  FFE6   	movff	_C+84,postinc1
 25489  015C5C  0060  F557  FFE6   	movff	_C+85,postinc1
 25490  015C62  0060  F55B  FFE6   	movff	_C+86,postinc1
 25491  015C68  0060  F55F  FFE6   	movff	_C+87,postinc1
 25492  015C6E  ECED  F0D5         	call	___flsub	;wreg free
 25493  015C72  0060  F098  F168   	movff	btemp,_C+104	;volatile
 25494  015C78  0060  F09C  F169   	movff	btemp+1,_C+105	;volatile
 25495  015C7E  0060  F0A0  F16A   	movff	btemp+2,_C+106	;volatile
 25496  015C84  0060  F0A4  F16B   	movff	btemp+3,_C+107	;volatile
 25497                           
 25498                           ;mbmc.c: 79:   bvror = C.v_bat;
 25499  015C8A  C154  F08A         	movff	_C+84,calc_model_data@bvror	;volatile
 25500  015C8E  C155  F08B         	movff	_C+85,calc_model_data@bvror+1	;volatile
 25501  015C92  C156  F08C         	movff	_C+86,calc_model_data@bvror+2	;volatile
 25502  015C96  C157  F08D         	movff	_C+87,calc_model_data@bvror+3	;volatile
 25503                           
 25504                           ;mbmc.c: 80:   C.v_pv = C.calc[V_PV];
 25505  015C9A  C114  F150         	movff	_C+20,_C+80	;volatile
 25506  015C9E  C115  F151         	movff	_C+21,_C+81	;volatile
 25507  015CA2  C116  F152         	movff	_C+22,_C+82	;volatile
 25508  015CA6  C117  F153         	movff	_C+23,_C+83	;volatile
 25509                           
 25510                           ;mbmc.c: 81:   C.v_cc = C.calc[V_CC];
 25511  015CAA  C108  F14C         	movff	_C+8,_C+76	;volatile
 25512  015CAE  C109  F14D         	movff	_C+9,_C+77	;volatile
 25513  015CB2  C10A  F14E         	movff	_C+10,_C+78	;volatile
 25514  015CB6  C10B  F14F         	movff	_C+11,_C+79	;volatile
 25515                           
 25516                           ;mbmc.c: 82:   C.v_inverter = C.calc[V_INVERTER];
 25517  015CBA  C130  F164         	movff	_C+48,_C+100	;volatile
 25518  015CBE  C131  F165         	movff	_C+49,_C+101	;volatile
 25519  015CC2  C132  F166         	movff	_C+50,_C+102	;volatile
 25520  015CC6  C133  F167         	movff	_C+51,_C+103	;volatile
 25521                           
 25522                           ;mbmc.c: 83:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 25523  015CCA  0E01               	movlw	1
 25524  015CCC  6EE6               	movwf	postinc1,c
 25525  015CCE  0E10               	movlw	16
 25526  015CD0  6EE6               	movwf	postinc1,c
 25527  015CD2  0060  F403  FFE6   	movff	_C,postinc1
 25528  015CD8  0060  F407  FFE6   	movff	_C+1,postinc1
 25529  015CDE  0060  F40B  FFE6   	movff	_C+2,postinc1
 25530  015CE4  0060  F40F  FFE6   	movff	_C+3,postinc1
 25531  015CEA  0060  F413  FFE6   	movff	_C+4,postinc1
 25532  015CF0  0060  F417  FFE6   	movff	_C+5,postinc1
 25533  015CF6  0060  F41B  FFE6   	movff	_C+6,postinc1
 25534  015CFC  0060  F41F  FFE6   	movff	_C+7,postinc1
 25535  015D02  ECED  F0D5         	call	___flsub	;wreg free
 25536  015D06  0060  F09B  FFE6   	movff	btemp,postinc1
 25537  015D0C  0060  F09F  FFE6   	movff	btemp+1,postinc1
 25538  015D12  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 25539  015D18  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 25540  015D1E  ECE4  F0BE         	call	_lp_filter	;wreg free
 25541  015D22  0060  F098  F140   	movff	btemp,_C+64	;volatile
 25542  015D28  0060  F09C  F141   	movff	btemp+1,_C+65	;volatile
 25543  015D2E  0060  F0A0  F142   	movff	btemp+2,_C+66	;volatile
 25544  015D34  0060  F0A4  F143   	movff	btemp+3,_C+67	;volatile
 25545                           
 25546                           ;mbmc.c: 84:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 25547  015D3A  0E01               	movlw	1
 25548  015D3C  6EE6               	movwf	postinc1,c
 25549  015D3E  0E11               	movlw	17
 25550  015D40  6EE6               	movwf	postinc1,c
 25551  015D42  0060  F553  FFE6   	movff	_C+84,postinc1
 25552  015D48  0060  F557  FFE6   	movff	_C+85,postinc1
 25553  015D4E  0060  F55B  FFE6   	movff	_C+86,postinc1
 25554  015D54  0060  F55F  FFE6   	movff	_C+87,postinc1
 25555  015D5A  0060  F503  FFE6   	movff	_C+64,postinc1
 25556  015D60  0060  F507  FFE6   	movff	_C+65,postinc1
 25557  015D66  0060  F50B  FFE6   	movff	_C+66,postinc1
 25558  015D6C  0060  F50F  FFE6   	movff	_C+67,postinc1
 25559  015D72  EC0F  F099         	call	___flmul	;wreg free
 25560  015D76  0060  F09B  FFE6   	movff	btemp,postinc1
 25561  015D7C  0060  F09F  FFE6   	movff	btemp+1,postinc1
 25562  015D82  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 25563  015D88  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 25564  015D8E  ECE4  F0BE         	call	_lp_filter	;wreg free
 25565  015D92  0060  F098  F170   	movff	btemp,_C+112	;volatile
 25566  015D98  0060  F09C  F171   	movff	btemp+1,_C+113	;volatile
 25567  015D9E  0060  F0A0  F172   	movff	btemp+2,_C+114	;volatile
 25568  015DA4  0060  F0A4  F173   	movff	btemp+3,_C+115	;volatile
 25569                           
 25570                           ;mbmc.c: 85:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 25571  015DAA  0E01               	movlw	1
 25572  015DAC  6EE6               	movwf	postinc1,c
 25573  015DAE  0E12               	movlw	18
 25574  015DB0  6EE6               	movwf	postinc1,c
 25575  015DB2  0060  F543  FFE6   	movff	_C+80,postinc1
 25576  015DB8  0060  F547  FFE6   	movff	_C+81,postinc1
 25577  015DBE  0060  F54B  FFE6   	movff	_C+82,postinc1
 25578  015DC4  0060  F54F  FFE6   	movff	_C+83,postinc1
 25579  015DCA  0060  F523  FFE6   	movff	_C+72,postinc1
 25580  015DD0  0060  F527  FFE6   	movff	_C+73,postinc1
 25581  015DD6  0060  F52B  FFE6   	movff	_C+74,postinc1
 25582  015DDC  0060  F52F  FFE6   	movff	_C+75,postinc1
 25583  015DE2  EC0F  F099         	call	___flmul	;wreg free
 25584  015DE6  0060  F09B  FFE6   	movff	btemp,postinc1
 25585  015DEC  0060  F09F  FFE6   	movff	btemp+1,postinc1
 25586  015DF2  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 25587  015DF8  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 25588  015DFE  ECE4  F0BE         	call	_lp_filter	;wreg free
 25589  015E02  0060  F098  F178   	movff	btemp,_C+120	;volatile
 25590  015E08  0060  F09C  F179   	movff	btemp+1,_C+121	;volatile
 25591  015E0E  0060  F0A0  F17A   	movff	btemp+2,_C+122	;volatile
 25592  015E14  0060  F0A4  F17B   	movff	btemp+3,_C+123	;volatile
 25593                           
 25594                           ;mbmc.c: 86:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 25595  015E1A  0E01               	movlw	1
 25596  015E1C  6EE6               	movwf	postinc1,c
 25597  015E1E  0E13               	movlw	19
 25598  015E20  6EE6               	movwf	postinc1,c
 25599  015E22  0E00               	movlw	0
 25600  015E24  6EE6               	movwf	postinc1,c
 25601  015E26  0E00               	movlw	0
 25602  015E28  6EE6               	movwf	postinc1,c
 25603  015E2A  0E60               	movlw	96
 25604  015E2C  6EE6               	movwf	postinc1,c
 25605  015E2E  0EC1               	movlw	193
 25606  015E30  6EE6               	movwf	postinc1,c
 25607  015E32  0060  F593  FFE6   	movff	_C+100,postinc1
 25608  015E38  0060  F597  FFE6   	movff	_C+101,postinc1
 25609  015E3E  0060  F59B  FFE6   	movff	_C+102,postinc1
 25610  015E44  0060  F59F  FFE6   	movff	_C+103,postinc1
 25611  015E4A  0060  F503  FFE6   	movff	_C+64,postinc1
 25612  015E50  0060  F507  FFE6   	movff	_C+65,postinc1
 25613  015E56  0060  F50B  FFE6   	movff	_C+66,postinc1
 25614  015E5C  0060  F50F  FFE6   	movff	_C+67,postinc1
 25615  015E62  EC0F  F099         	call	___flmul	;wreg free
 25616  015E66  0060  F09B  FFE6   	movff	btemp,postinc1
 25617  015E6C  0060  F09F  FFE6   	movff	btemp+1,postinc1
 25618  015E72  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 25619  015E78  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 25620  015E7E  EC24  F09D         	call	___fladd	;wreg free
 25621  015E82  0060  F09B  FFE6   	movff	btemp,postinc1
 25622  015E88  0060  F09F  FFE6   	movff	btemp+1,postinc1
 25623  015E8E  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 25624  015E94  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 25625  015E9A  ECE4  F0BE         	call	_lp_filter	;wreg free
 25626  015E9E  0060  F098  F174   	movff	btemp,_C+116	;volatile
 25627  015EA4  0060  F09C  F175   	movff	btemp+1,_C+117	;volatile
 25628  015EAA  0060  F0A0  F176   	movff	btemp+2,_C+118	;volatile
 25629  015EB0  0060  F0A4  F177   	movff	btemp+3,_C+119	;volatile
 25630                           
 25631                           ;mbmc.c: 87:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 25632  015EB6  0E01               	movlw	1
 25633  015EB8  6EE6               	movwf	postinc1,c
 25634  015EBA  0E14               	movlw	20
 25635  015EBC  6EE6               	movwf	postinc1,c
 25636  015EBE  0060  F553  FFE6   	movff	_C+84,postinc1
 25637  015EC4  0060  F557  FFE6   	movff	_C+85,postinc1
 25638  015ECA  0060  F55B  FFE6   	movff	_C+86,postinc1
 25639  015ED0  0060  F55F  FFE6   	movff	_C+87,postinc1
 25640  015ED6  0060  F513  FFE6   	movff	_C+68,postinc1
 25641  015EDC  0060  F517  FFE6   	movff	_C+69,postinc1
 25642  015EE2  0060  F51B  FFE6   	movff	_C+70,postinc1
 25643  015EE8  0060  F51F  FFE6   	movff	_C+71,postinc1
 25644  015EEE  EC0F  F099         	call	___flmul	;wreg free
 25645  015EF2  0060  F09B  FFE6   	movff	btemp,postinc1
 25646  015EF8  0060  F09F  FFE6   	movff	btemp+1,postinc1
 25647  015EFE  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 25648  015F04  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 25649  015F0A  ECE4  F0BE         	call	_lp_filter	;wreg free
 25650  015F0E  0060  F098  F17C   	movff	btemp,_C+124	;volatile
 25651  015F14  0060  F09C  F17D   	movff	btemp+1,_C+125	;volatile
 25652  015F1A  0060  F0A0  F17E   	movff	btemp+2,_C+126	;volatile
 25653  015F20  0060  F0A4  F17F   	movff	btemp+3,_C+127	;volatile
 25654                           
 25655                           ;mbmc.c: 91:   if (C.p_inverter < 0.0)
 25656  015F26  0101               	movlb	1	; () banked
 25657  015F28  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 25658  015F2A  D008               	goto	l10779
 25659                           
 25660                           ; BSR set to: 1
 25661                           ;mbmc.c: 92:    C.p_inverter = 0.0001;
 25662  015F2C  0E17               	movlw	23
 25663  015F2E  6F74               	movwf	(_C+116)& (0+255),b	;volatile
 25664  015F30  0EB7               	movlw	183
 25665  015F32  6F75               	movwf	(_C+117)& (0+255),b	;volatile
 25666  015F34  0ED1               	movlw	209
 25667  015F36  6F76               	movwf	(_C+118)& (0+255),b	;volatile
 25668  015F38  0E38               	movlw	56
 25669  015F3A  6F77               	movwf	(_C+119)& (0+255),b	;volatile
 25670  015F3C                     l10779:
 25671                           
 25672                           ;mbmc.c: 94:  start_bsoc();
 25673  015F3C  ECAF  F0DA         	call	_start_bsoc	;wreg free
 25674                           
 25675                           ; BSR set to: 57
 25676                           ;mbmc.c: 95:  C.update = 1;
 25677  015F40  0E01               	movlw	1
 25678  015F42  0101               	movlb	1	; () banked
 25679  015F44  6FB0               	movwf	(_C+176)& (0+255),b	;volatile
 25680                           
 25681                           ; BSR set to: 1
 25682                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25683  015F46  0012               	return		;funcret
 25684  015F48                     __end_of_calc_model_data:
 25685                           	opt callstack 0
 25686                           
 25687 ;; *************** function _stop_bsoc *****************
 25688 ;; Defined at:
 25689 ;;		line 114 in file "bsoc.c"
 25690 ;; Parameters:    Size  Location     Type
 25691 ;;		None
 25692 ;; Auto vars:     Size  Location     Type
 25693 ;;		None
 25694 ;; Return value:  Size  Location     Type
 25695 ;;                  1  [STACK] void 
 25696 ;; Registers used:
 25697 ;;		None
 25698 ;; Tracked objects:
 25699 ;;		On entry : 0/0
 25700 ;;		On exit  : 3F/39
 25701 ;;		Unchanged: 0/0
 25702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25707 ;;Total ram usage:        0 bytes
 25708 ;; Hardware stack levels used:    1
 25709 ;; Hardware stack levels required when called:   15
 25710 ;; This function calls:
 25711 ;;		Nothing
 25712 ;; This function is called by:
 25713 ;;		_calc_model_data
 25714 ;; This function uses a reentrant model
 25715 ;;
 25716                           
 25717                           	psect	text101
 25718  01B860                     __ptext101:
 25719                           	opt callstack 0
 25720  01B860                     _stop_bsoc:
 25721                           	opt callstack 14
 25722                           
 25723                           ;bsoc.c: 117:  PIE6bits.TMR3IE = 0;
 25724                           
 25725                           ; BSR set to: 1
 25726                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25727                           ;incstack = 0
 25728  01B860  0139               	movlb	57	; () banked
 25729  01B862  9D96               	bcf	150,6,b	;volatile
 25730                           
 25731                           ; BSR set to: 57
 25732                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 25733  01B864  0012               	return		;funcret
 25734  01B866                     __end_of_stop_bsoc:
 25735                           	opt callstack 0
 25736                           
 25737 ;; *************** function _start_bsoc *****************
 25738 ;; Defined at:
 25739 ;;		line 105 in file "bsoc.c"
 25740 ;; Parameters:    Size  Location     Type
 25741 ;;		None
 25742 ;; Auto vars:     Size  Location     Type
 25743 ;;		None
 25744 ;; Return value:  Size  Location     Type
 25745 ;;                  1  [STACK] void 
 25746 ;; Registers used:
 25747 ;;		wreg, status,2, status,0, btemp+11
 25748 ;; Tracked objects:
 25749 ;;		On entry : 3C/2
 25750 ;;		On exit  : 3F/39
 25751 ;;		Unchanged: 0/0
 25752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25757 ;;Total ram usage:        0 bytes
 25758 ;; Hardware stack levels used:    1
 25759 ;; Hardware stack levels required when called:   15
 25760 ;; This function calls:
 25761 ;;		Nothing
 25762 ;; This function is called by:
 25763 ;;		_calc_model_data
 25764 ;; This function uses a reentrant model
 25765 ;;
 25766                           
 25767                           	psect	text102
 25768  01B55E                     __ptext102:
 25769                           	opt callstack 0
 25770  01B55E                     _start_bsoc:
 25771                           	opt callstack 14
 25772                           
 25773                           ;bsoc.c: 108:  PIE6bits.TMR3IE = 1;
 25774                           
 25775                           ; BSR set to: 57
 25776                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25777                           ;incstack = 0
 25778  01B55E  0139               	movlb	57	; () banked
 25779  01B560  8D96               	bsf	150,6,b	;volatile
 25780                           
 25781                           ; BSR set to: 57
 25782  01B562  A4BE               	btfss	190,2,c	;volatile
 25783  01B564  D002               	goto	u9410
 25784  01B566  0E01               	movlw	1
 25785  01B568  D001               	goto	u9416
 25786  01B56A                     u9410:
 25787  01B56A  0E00               	movlw	0
 25788  01B56C                     u9416:
 25789  01B56C  0AFF               	xorlw	255
 25790  01B56E  6E31               	movwf	(btemp+11)^0,c
 25791  01B570  4631               	rlncf	(btemp+11)^0,f,c
 25792  01B572  4631               	rlncf	(btemp+11)^0,f,c
 25793  01B574  50BE               	movf	190,w,c	;volatile
 25794  01B576  1831               	xorwf	(btemp+11)^0,w,c
 25795  01B578  0BFB               	andlw	-5
 25796  01B57A  1831               	xorwf	(btemp+11)^0,w,c
 25797  01B57C  6EBE               	movwf	190,c	;volatile
 25798                           
 25799                           ; BSR set to: 57
 25800                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 25801  01B57E  0012               	return		;funcret
 25802  01B580                     __end_of_start_bsoc:
 25803                           	opt callstack 0
 25804                           
 25805 ;; *************** function _lp_filter *****************
 25806 ;; Defined at:
 25807 ;;		line 29 in file "mbmc.c"
 25808 ;; Parameters:    Size  Location     Type
 25809 ;;  new             4  [STACK] const float 
 25810 ;;  bn              1  [STACK] const unsigned char 
 25811 ;;  slow            1  [STACK] const char 
 25812 ;; Auto vars:     Size  Location     Type
 25813 ;;  lp_speed        4  [STACK] float 
 25814 ;; Return value:  Size  Location     Type
 25815 ;;                  4  [STACK] float 
 25816 ;; Registers used:
 25817 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25818 ;; Tracked objects:
 25819 ;;		On entry : 0/2
 25820 ;;		On exit  : 0/0
 25821 ;;		Unchanged: 0/0
 25822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25827 ;;Total ram usage:        0 bytes
 25828 ;; Hardware stack levels used:    1
 25829 ;; Hardware stack levels required when called:   17
 25830 ;; This function calls:
 25831 ;;		___fladd
 25832 ;;		___flmul
 25833 ;;		___flsub
 25834 ;; This function is called by:
 25835 ;;		_main
 25836 ;;		_convert_adc_data
 25837 ;;		_calc_model_data
 25838 ;; This function uses a reentrant model
 25839 ;;
 25840                           
 25841                           	psect	text103
 25842  017DC8                     __ptext103:
 25843                           	opt callstack 0
 25844  017DC8                     _lp_filter:
 25845                           	opt callstack 0
 25846                           
 25847                           ; BSR set to: 57
 25848                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25849  017DC8  52E6               	movf	postinc1,f,c
 25850  017DCA  52E6               	movf	postinc1,f,c
 25851  017DCC  52E6               	movf	postinc1,f,c
 25852  017DCE  52E6               	movf	postinc1,f,c
 25853                           
 25854                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 25855                           ;stkvar	_bn @ sp[(-4)+-5]
 25856                           
 25857                           ;incstack = 0
 25858  017DD0  0EF7               	movlw	-9
 25859  017DD2  006F FF8C  F026    	movff	plusw1,btemp
 25860  017DD8  0E14               	movlw	20
 25861  017DDA  6426               	cpfsgt	btemp^0,c
 25862  017DDC  D011               	goto	l10197
 25863  017DDE                     u9320:
 25864                           
 25865                           ;mbmc.c: 35:   return new;
 25866                           ;stkvar	_new @ sp[(-4)+-4]
 25867  017DDE  0EF8               	movlw	-8
 25868  017DE0  006F FF8C  F026    	movff	plusw1,btemp
 25869  017DE6  0EF9               	movlw	-7
 25870  017DE8  006F FF8C  F027    	movff	plusw1,btemp+1
 25871  017DEE  0EFA               	movlw	-6
 25872  017DF0  006F FF8C  F028    	movff	plusw1,btemp+2
 25873  017DF6  0EFB               	movlw	-5
 25874  017DF8  006F FF8C  F029    	movff	plusw1,btemp+3
 25875  017DFE  D0BD               	goto	l1827
 25876  017E00                     l10197:
 25877                           
 25878                           ;mbmc.c: 37:  if (slow == (-1)) {
 25879                           ;stkvar	_slow @ sp[(-4)+-6]
 25880  017E00  0EF6               	movlw	-10
 25881  017E02  28E3               	incf	plusw1,w,c
 25882  017E04  A4D8               	btfss	status,2,c
 25883  017E06  D012               	goto	l10205
 25884                           
 25885                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 25886                           ;stkvar	_bn @ sp[(-4)+-5]
 25887  017E08  0EF7               	movlw	-9
 25888  017E0A  50E3               	movf	plusw1,w,c
 25889  017E0C  0D04               	mullw	4
 25890  017E0E  0E00               	movlw	low lp_filter@smooth
 25891  017E10  24F3               	addwf	243,w,c
 25892  017E12  6ED9               	movwf	fsr2l,c
 25893  017E14  0E03               	movlw	high lp_filter@smooth
 25894  017E16  20F4               	addwfc	prodh,w,c
 25895  017E18  6EDA               	movwf	fsr2h,c
 25896  017E1A  0E00               	movlw	0
 25897  017E1C  6EDE               	movwf	postinc2,c
 25898  017E1E  0E00               	movlw	0
 25899  017E20  6EDE               	movwf	postinc2,c
 25900  017E22  0E00               	movlw	0
 25901  017E24  6EDE               	movwf	postinc2,c
 25902  017E26  0E00               	movlw	0
 25903  017E28  6EDD               	movwf	postdec2,c
 25904  017E2A  D7D9               	goto	u9320
 25905  017E2C                     l10205:
 25906                           
 25907                           ;mbmc.c: 42:  if (slow) {
 25908                           ;stkvar	_slow @ sp[(-4)+-6]
 25909  017E2C  0EF6               	movlw	-10
 25910  017E2E  50E3               	movf	plusw1,w,c
 25911  017E30  B4D8               	btfsc	status,2,c
 25912  017E32  D006               	goto	l10209
 25913                           
 25914                           ;mbmc.c: 43:   lp_speed = 0.033;
 25915  017E34  0E02               	movlw	2
 25916  017E36  6E2E               	movwf	(btemp+8)^0,c
 25917  017E38  0E2B               	movlw	43
 25918  017E3A  6E2F               	movwf	(btemp+9)^0,c
 25919  017E3C  0E07               	movlw	7
 25920  017E3E  D005               	goto	L29
 25921  017E40                     l10209:
 25922                           
 25923                           ;mbmc.c: 45:   lp_speed = 0.066;
 25924  017E40  0E02               	movlw	2
 25925  017E42  6E2E               	movwf	(btemp+8)^0,c
 25926  017E44  0E2B               	movlw	43
 25927  017E46  6E2F               	movwf	(btemp+9)^0,c
 25928  017E48  0E87               	movlw	135
 25929  017E4A                     L29:
 25930  017E4A  6E30               	movwf	(btemp+10)^0,c
 25931  017E4C  0E3D               	movlw	61
 25932  017E4E  6E31               	movwf	(btemp+11)^0,c
 25933                           
 25934                           ;stkvar	_lp_speed @ sp[(-4)+0]
 25935  017E50  0EFC               	movlw	-4
 25936  017E52  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 25937  017E58  0EFD               	movlw	-3
 25938  017E5A  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 25939  017E60  0EFE               	movlw	-2
 25940  017E62  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 25941  017E68  0EFF               	movlw	-1
 25942  017E6A  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 25943                           
 25944                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 25945                           ;stkvar	_bn @ sp[(-4)+-5]
 25946  017E70  0EF7               	movlw	-9
 25947  017E72  50E3               	movf	plusw1,w,c
 25948  017E74  0D04               	mullw	4
 25949  017E76  0E00               	movlw	low lp_filter@smooth
 25950  017E78  24F3               	addwf	243,w,c
 25951  017E7A  6ED9               	movwf	fsr2l,c
 25952  017E7C  0E03               	movlw	high lp_filter@smooth
 25953  017E7E  20F4               	addwfc	prodh,w,c
 25954  017E80  6EDA               	movwf	fsr2h,c
 25955  017E82  006F FF7B FFE6     	movff	postinc2,postinc1
 25956  017E88  006F FF7B FFE6     	movff	postinc2,postinc1
 25957  017E8E  006F FF7B FFE6     	movff	postinc2,postinc1
 25958  017E94  006F FF7B FFE6     	movff	postinc2,postinc1
 25959                           
 25960                           ;stkvar	_lp_speed @ sp[(-8)+0]
 25961  017E9A  0EF8               	movlw	-8
 25962  017E9C  006F FF8F FFE6     	movff	plusw1,postinc1
 25963  017EA2  006F FF8F FFE6     	movff	plusw1,postinc1
 25964  017EA8  006F FF8F FFE6     	movff	plusw1,postinc1
 25965  017EAE  006F FF8F FFE6     	movff	plusw1,postinc1
 25966                           
 25967                           ;stkvar	_bn @ sp[(-12)+-5]
 25968  017EB4  0EEF               	movlw	-17
 25969  017EB6  50E3               	movf	plusw1,w,c
 25970  017EB8  0D04               	mullw	4
 25971  017EBA  0E00               	movlw	low lp_filter@smooth
 25972  017EBC  24F3               	addwf	243,w,c
 25973  017EBE  6ED9               	movwf	fsr2l,c
 25974  017EC0  0E03               	movlw	high lp_filter@smooth
 25975  017EC2  20F4               	addwfc	prodh,w,c
 25976  017EC4  6EDA               	movwf	fsr2h,c
 25977  017EC6  006F FF7B FFE6     	movff	postinc2,postinc1
 25978  017ECC  006F FF7B FFE6     	movff	postinc2,postinc1
 25979  017ED2  006F FF7B FFE6     	movff	postinc2,postinc1
 25980  017ED8  006F FF7B FFE6     	movff	postinc2,postinc1
 25981                           
 25982                           ;stkvar	_new @ sp[(-16)+-4]
 25983  017EDE  0EEC               	movlw	-20
 25984  017EE0  006F FF8F FFE6     	movff	plusw1,postinc1
 25985  017EE6  006F FF8F FFE6     	movff	plusw1,postinc1
 25986  017EEC  006F FF8F FFE6     	movff	plusw1,postinc1
 25987  017EF2  006F FF8F FFE6     	movff	plusw1,postinc1
 25988  017EF8  ECED  F0D5         	call	___flsub	;wreg free
 25989  017EFC  0060  F09B  FFE6   	movff	btemp,postinc1
 25990  017F02  0060  F09F  FFE6   	movff	btemp+1,postinc1
 25991  017F08  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 25992  017F0E  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 25993  017F14  EC0F  F099         	call	___flmul	;wreg free
 25994  017F18  0060  F09B  FFE6   	movff	btemp,postinc1
 25995  017F1E  0060  F09F  FFE6   	movff	btemp+1,postinc1
 25996  017F24  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 25997  017F2A  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 25998  017F30  EC24  F09D         	call	___fladd	;wreg free
 25999                           
 26000                           ;stkvar	_bn @ sp[(-4)+-5]
 26001  017F34  0EF7               	movlw	-9
 26002  017F36  50E3               	movf	plusw1,w,c
 26003  017F38  0D04               	mullw	4
 26004  017F3A  0E00               	movlw	low lp_filter@smooth
 26005  017F3C  24F3               	addwf	243,w,c
 26006  017F3E  6ED9               	movwf	fsr2l,c
 26007  017F40  0E03               	movlw	high lp_filter@smooth
 26008  017F42  20F4               	addwfc	prodh,w,c
 26009  017F44  6EDA               	movwf	fsr2h,c
 26010  017F46  0060  F09B  FFDE   	movff	btemp,postinc2
 26011  017F4C  0060  F09F  FFDE   	movff	btemp+1,postinc2
 26012  017F52  0060  F0A3  FFDE   	movff	btemp+2,postinc2
 26013  017F58  0060  F0A7  FFDD   	movff	btemp+3,postdec2
 26014  017F5E  52DD               	movf	postdec2,f,c
 26015  017F60  52DD               	movf	postdec2,f,c
 26016  017F62  006F FF78  F026    	movff	postinc2,btemp
 26017  017F68  006F FF78  F027    	movff	postinc2,btemp+1
 26018  017F6E  006F FF78  F028    	movff	postinc2,btemp+2
 26019  017F74  006F FF78  F029    	movff	postinc2,btemp+3
 26020  017F7A                     l1827:
 26021                           
 26022                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 26023  017F7A  0EF6               	movlw	246
 26024  017F7C  26E1               	addwf	fsr1l,f,c
 26025  017F7E  0EFF               	movlw	255
 26026  017F80  22E2               	addwfc	fsr1h,f,c
 26027  017F82  0012               	return		;funcret
 26028  017F84                     __end_of_lp_filter:
 26029                           	opt callstack 0
 26030                           
 26031 ;; *************** function ___flsub *****************
 26032 ;; Defined at:
 26033 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26034 ;; Parameters:    Size  Location     Type
 26035 ;;  b               4  [STACK] float 
 26036 ;;  a               4  [STACK] float 
 26037 ;; Auto vars:     Size  Location     Type
 26038 ;;		None
 26039 ;; Return value:  Size  Location     Type
 26040 ;;                  4  [STACK] float 
 26041 ;; Registers used:
 26042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26043 ;; Tracked objects:
 26044 ;;		On entry : 0/0
 26045 ;;		On exit  : 0/0
 26046 ;;		Unchanged: 0/0
 26047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26052 ;;Total ram usage:        0 bytes
 26053 ;; Hardware stack levels used:    1
 26054 ;; Hardware stack levels required when called:   16
 26055 ;; This function calls:
 26056 ;;		___fladd
 26057 ;; This function is called by:
 26058 ;;		_conv_raw_result
 26059 ;;		_lp_filter
 26060 ;;		_calc_model_data
 26061 ;;		_calc_ror_data
 26062 ;;		_esr_check
 26063 ;;		_efgtoa
 26064 ;; This function uses a reentrant model
 26065 ;;
 26066                           
 26067                           	psect	text104
 26068  01ABDA                     __ptext104:
 26069                           	opt callstack 0
 26070  01ABDA                     ___flsub:
 26071                           	opt callstack 0
 26072                           
 26073                           ;stkvar	_a @ sp[(0)+-8]
 26074                           
 26075                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26076                           ;incstack = 0
 26077 ;; hardware stack exceeded
 26078  01ABDA  0EFB               	movlw	-5
 26079  01ABDC  7EE3               	btg	plusw1,7,c
 26080                           
 26081                           ;stkvar	_a @ sp[(0)+-8]
 26082  01ABDE  0EF8               	movlw	-8
 26083  01ABE0  006F FF8F FFE6     	movff	plusw1,postinc1
 26084  01ABE6  006F FF8F FFE6     	movff	plusw1,postinc1
 26085  01ABEC  006F FF8F FFE6     	movff	plusw1,postinc1
 26086  01ABF2  006F FF8F FFE6     	movff	plusw1,postinc1
 26087                           
 26088                           ;stkvar	_b @ sp[(-4)+-4]
 26089  01ABF8  0EF8               	movlw	-8
 26090  01ABFA  006F FF8F FFE6     	movff	plusw1,postinc1
 26091  01AC00  006F FF8F FFE6     	movff	plusw1,postinc1
 26092  01AC06  006F FF8F FFE6     	movff	plusw1,postinc1
 26093  01AC0C  006F FF8F FFE6     	movff	plusw1,postinc1
 26094  01AC12  EC24  F09D         	call	___fladd	;wreg free
 26095                           
 26096                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 26097  01AC16  0EF8               	movlw	248
 26098  01AC18  26E1               	addwf	fsr1l,f,c
 26099  01AC1A  0EFF               	movlw	255
 26100  01AC1C  22E2               	addwfc	fsr1h,f,c
 26101  01AC1E  0012               	return		;funcret
 26102  01AC20                     __end_of___flsub:
 26103                           	opt callstack 0
 26104                           
 26105 ;; *************** function ___fladd *****************
 26106 ;; Defined at:
 26107 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26108 ;; Parameters:    Size  Location     Type
 26109 ;;  b               4  [STACK] float 
 26110 ;;  a               4  [STACK] float 
 26111 ;; Auto vars:     Size  Location     Type
 26112 ;;  grs             1  [STACK] unsigned char 
 26113 ;;  bexp            1  [STACK] unsigned char 
 26114 ;;  aexp            1  [STACK] unsigned char 
 26115 ;;  signs           1  [STACK] unsigned char 
 26116 ;; Return value:  Size  Location     Type
 26117 ;;                  4  [STACK] unsigned char 
 26118 ;; Registers used:
 26119 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26120 ;; Tracked objects:
 26121 ;;		On entry : 0/0
 26122 ;;		On exit  : 0/0
 26123 ;;		Unchanged: 0/0
 26124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26129 ;;Total ram usage:        0 bytes
 26130 ;; Hardware stack levels used:    1
 26131 ;; Hardware stack levels required when called:   15
 26132 ;; This function calls:
 26133 ;;		Nothing
 26134 ;; This function is called by:
 26135 ;;		_main
 26136 ;;		_lp_filter
 26137 ;;		_calc_model_data
 26138 ;;		_calc_bsoc
 26139 ;;		_efgtoa
 26140 ;;		___flsub
 26141 ;; This function uses a reentrant model
 26142 ;;
 26143                           
 26144                           	psect	text105
 26145  013A48                     __ptext105:
 26146                           	opt callstack 0
 26147  013A48                     ___fladd:
 26148                           	opt callstack 0
 26149                           
 26150                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26151  013A48  52E6               	movf	postinc1,f,c
 26152  013A4A  52E6               	movf	postinc1,f,c
 26153  013A4C  52E6               	movf	postinc1,f,c
 26154  013A4E  52E6               	movf	postinc1,f,c
 26155                           
 26156                           ;stkvar	_b @ sp[(-4)+-4]
 26157                           
 26158                           ;incstack = 0
 26159 ;; hardware stack exceeded
 26160  013A50  0EFB               	movlw	251
 26161  013A52  24E1               	addwf	fsr1l,w,c
 26162  013A54  6ED9               	movwf	fsr2l,c
 26163  013A56  0EFF               	movlw	255
 26164  013A58  20E2               	addwfc	fsr1h,w,c
 26165  013A5A  6EDA               	movwf	fsr2h,c
 26166  013A5C  50DF               	movf	indf2,w,c
 26167  013A5E  6E31               	movwf	(btemp+11)^0,c
 26168  013A60  0E80               	movlw	128
 26169  013A62  1631               	andwf	(btemp+11)^0,f,c
 26170                           
 26171                           ;stkvar	_signs @ sp[(-4)+3]
 26172  013A64  0EFF               	movlw	-1
 26173  013A66  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26174                           
 26175                           ;stkvar	_b @ sp[(-4)+-4]
 26176  013A6C  0EFB               	movlw	251
 26177  013A6E  24E1               	addwf	fsr1l,w,c
 26178  013A70  6ED9               	movwf	fsr2l,c
 26179  013A72  0EFF               	movlw	255
 26180  013A74  20E2               	addwfc	fsr1h,w,c
 26181  013A76  6EDA               	movwf	fsr2h,c
 26182  013A78  50DF               	movf	indf2,w,c
 26183  013A7A  6E31               	movwf	(btemp+11)^0,c
 26184  013A7C  90D8               	bcf	status,0,c
 26185  013A7E  3431               	rlcf	(btemp+11)^0,w,c
 26186  013A80  6E30               	movwf	(btemp+10)^0,c
 26187                           
 26188                           ;stkvar	_bexp @ sp[(-4)+1]
 26189  013A82  0EFD               	movlw	-3
 26190  013A84  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 26191                           
 26192                           ;stkvar	_b @ sp[(-4)+-4]
 26193  013A8A  0EFA               	movlw	250
 26194  013A8C  24E1               	addwf	fsr1l,w,c
 26195  013A8E  6ED9               	movwf	fsr2l,c
 26196  013A90  0EFF               	movlw	255
 26197  013A92  20E2               	addwfc	fsr1h,w,c
 26198  013A94  6EDA               	movwf	fsr2h,c
 26199  013A96  AEDF               	btfss	indf2,7,c
 26200  013A98  D002               	goto	l7563
 26201                           
 26202                           ;stkvar	_bexp @ sp[(-4)+1]
 26203  013A9A  0EFD               	movlw	-3
 26204  013A9C  80E3               	bsf	plusw1,0,c
 26205  013A9E                     l7563:
 26206                           
 26207                           ;stkvar	_bexp @ sp[(-4)+1]
 26208  013A9E  0EFD               	movlw	-3
 26209  013AA0  50E3               	movf	plusw1,w,c
 26210  013AA2  B4D8               	btfsc	status,2,c
 26211  013AA4  D027               	goto	l7573
 26212                           
 26213                           ;stkvar	_bexp @ sp[(-4)+1]
 26214  013AA6  0EFD               	movlw	-3
 26215  013AA8  28E3               	incf	plusw1,w,c
 26216  013AAA  A4D8               	btfss	status,2,c
 26217  013AAC  D018               	goto	l7569
 26218  013AAE  0E00               	movlw	0
 26219  013AB0  6E2E               	movwf	(btemp+8)^0,c
 26220  013AB2  0E00               	movlw	0
 26221  013AB4  6E2F               	movwf	(btemp+9)^0,c
 26222  013AB6  0E00               	movlw	0
 26223  013AB8  6E30               	movwf	(btemp+10)^0,c
 26224  013ABA  0E00               	movlw	0
 26225  013ABC  6E31               	movwf	(btemp+11)^0,c
 26226                           
 26227                           ;stkvar	_b @ sp[(-4)+-4]
 26228  013ABE  0EF8               	movlw	-8
 26229  013AC0  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 26230  013AC6  0EF9               	movlw	-7
 26231  013AC8  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 26232  013ACE  0EFA               	movlw	-6
 26233  013AD0  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 26234  013AD6  0EFB               	movlw	-5
 26235  013AD8  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26236  013ADE                     l7569:
 26237                           
 26238                           ;stkvar	_b @ sp[(-4)+-4]
 26239  013ADE  0EFA               	movlw	-6
 26240  013AE0  8EE3               	bsf	plusw1,7,c
 26241                           
 26242                           ;stkvar	_b @ sp[(-4)+-4]
 26243  013AE2  0EFB               	movlw	251
 26244  013AE4  24E1               	addwf	fsr1l,w,c
 26245  013AE6  6ED9               	movwf	fsr2l,c
 26246  013AE8  0EFF               	movlw	255
 26247  013AEA  20E2               	addwfc	fsr1h,w,c
 26248  013AEC  6EDA               	movwf	fsr2h,c
 26249  013AEE  0E00               	movlw	0
 26250  013AF0  6EDF               	movwf	indf2,c
 26251  013AF2  D018               	goto	l7575
 26252  013AF4                     l7573:
 26253  013AF4  0E00               	movlw	0
 26254  013AF6  6E2E               	movwf	(btemp+8)^0,c
 26255  013AF8  0E00               	movlw	0
 26256  013AFA  6E2F               	movwf	(btemp+9)^0,c
 26257  013AFC  0E00               	movlw	0
 26258  013AFE  6E30               	movwf	(btemp+10)^0,c
 26259  013B00  0E00               	movlw	0
 26260  013B02  6E31               	movwf	(btemp+11)^0,c
 26261                           
 26262                           ;stkvar	_b @ sp[(-4)+-4]
 26263  013B04  0EF8               	movlw	-8
 26264  013B06  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 26265  013B0C  0EF9               	movlw	-7
 26266  013B0E  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 26267  013B14  0EFA               	movlw	-6
 26268  013B16  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 26269  013B1C  0EFB               	movlw	-5
 26270  013B1E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26271  013B24                     l7575:
 26272                           
 26273                           ;stkvar	_a @ sp[(-4)+-8]
 26274  013B24  0EF7               	movlw	247
 26275  013B26  24E1               	addwf	fsr1l,w,c
 26276  013B28  6ED9               	movwf	fsr2l,c
 26277  013B2A  0EFF               	movlw	255
 26278  013B2C  20E2               	addwfc	fsr1h,w,c
 26279  013B2E  6EDA               	movwf	fsr2h,c
 26280  013B30  50DF               	movf	indf2,w,c
 26281  013B32  6E31               	movwf	(btemp+11)^0,c
 26282  013B34  0E80               	movlw	128
 26283  013B36  1631               	andwf	(btemp+11)^0,f,c
 26284                           
 26285                           ;stkvar	_aexp @ sp[(-4)+2]
 26286  013B38  0EFE               	movlw	-2
 26287  013B3A  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26288                           
 26289                           ;stkvar	_signs @ sp[(-4)+3]
 26290                           ;stkvar	_aexp @ sp[(-4)+2]
 26291  013B40  50E1               	movf	fsr1l,w,c
 26292  013B42  0FFE               	addlw	-2
 26293  013B44  6ED9               	movwf	fsr2l,c
 26294  013B46  50E2               	movf	fsr1h,w,c
 26295  013B48  6EDA               	movwf	fsr2h,c
 26296  013B4A  0EFF               	movlw	255
 26297  013B4C  22DA               	addwfc	fsr2h,f,c
 26298  013B4E  0EFF               	movlw	-1
 26299  013B50  50E3               	movf	plusw1,w,c
 26300  013B52  18DE               	xorwf	postinc2,w,c
 26301  013B54  B4D8               	btfsc	status,2,c
 26302  013B56  D002               	goto	l7581
 26303                           
 26304                           ;stkvar	_signs @ sp[(-4)+3]
 26305  013B58  0EFF               	movlw	-1
 26306  013B5A  8CE3               	bsf	plusw1,6,c
 26307  013B5C                     l7581:
 26308                           
 26309                           ;stkvar	_a @ sp[(-4)+-8]
 26310  013B5C  0EF7               	movlw	247
 26311  013B5E  24E1               	addwf	fsr1l,w,c
 26312  013B60  6ED9               	movwf	fsr2l,c
 26313  013B62  0EFF               	movlw	255
 26314  013B64  20E2               	addwfc	fsr1h,w,c
 26315  013B66  6EDA               	movwf	fsr2h,c
 26316  013B68  50DF               	movf	indf2,w,c
 26317  013B6A  6E31               	movwf	(btemp+11)^0,c
 26318  013B6C  90D8               	bcf	status,0,c
 26319  013B6E  3431               	rlcf	(btemp+11)^0,w,c
 26320  013B70  6E30               	movwf	(btemp+10)^0,c
 26321                           
 26322                           ;stkvar	_aexp @ sp[(-4)+2]
 26323  013B72  0EFE               	movlw	-2
 26324  013B74  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 26325                           
 26326                           ;stkvar	_a @ sp[(-4)+-8]
 26327  013B7A  0EF6               	movlw	246
 26328  013B7C  24E1               	addwf	fsr1l,w,c
 26329  013B7E  6ED9               	movwf	fsr2l,c
 26330  013B80  0EFF               	movlw	255
 26331  013B82  20E2               	addwfc	fsr1h,w,c
 26332  013B84  6EDA               	movwf	fsr2h,c
 26333  013B86  AEDF               	btfss	indf2,7,c
 26334  013B88  D002               	goto	l7587
 26335                           
 26336                           ;stkvar	_aexp @ sp[(-4)+2]
 26337  013B8A  0EFE               	movlw	-2
 26338  013B8C  80E3               	bsf	plusw1,0,c
 26339  013B8E                     l7587:
 26340                           
 26341                           ;stkvar	_aexp @ sp[(-4)+2]
 26342  013B8E  0EFE               	movlw	-2
 26343  013B90  50E3               	movf	plusw1,w,c
 26344  013B92  B4D8               	btfsc	status,2,c
 26345  013B94  D027               	goto	l7597
 26346                           
 26347                           ;stkvar	_aexp @ sp[(-4)+2]
 26348  013B96  0EFE               	movlw	-2
 26349  013B98  28E3               	incf	plusw1,w,c
 26350  013B9A  A4D8               	btfss	status,2,c
 26351  013B9C  D018               	goto	l7593
 26352  013B9E  0E00               	movlw	0
 26353  013BA0  6E2E               	movwf	(btemp+8)^0,c
 26354  013BA2  0E00               	movlw	0
 26355  013BA4  6E2F               	movwf	(btemp+9)^0,c
 26356  013BA6  0E00               	movlw	0
 26357  013BA8  6E30               	movwf	(btemp+10)^0,c
 26358  013BAA  0E00               	movlw	0
 26359  013BAC  6E31               	movwf	(btemp+11)^0,c
 26360                           
 26361                           ;stkvar	_a @ sp[(-4)+-8]
 26362  013BAE  0EF4               	movlw	-12
 26363  013BB0  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 26364  013BB6  0EF5               	movlw	-11
 26365  013BB8  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 26366  013BBE  0EF6               	movlw	-10
 26367  013BC0  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 26368  013BC6  0EF7               	movlw	-9
 26369  013BC8  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26370  013BCE                     l7593:
 26371                           
 26372                           ;stkvar	_a @ sp[(-4)+-8]
 26373  013BCE  0EF6               	movlw	-10
 26374  013BD0  8EE3               	bsf	plusw1,7,c
 26375                           
 26376                           ;stkvar	_a @ sp[(-4)+-8]
 26377  013BD2  0EF7               	movlw	247
 26378  013BD4  24E1               	addwf	fsr1l,w,c
 26379  013BD6  6ED9               	movwf	fsr2l,c
 26380  013BD8  0EFF               	movlw	255
 26381  013BDA  20E2               	addwfc	fsr1h,w,c
 26382  013BDC  6EDA               	movwf	fsr2h,c
 26383  013BDE  0E00               	movlw	0
 26384  013BE0  6EDF               	movwf	indf2,c
 26385  013BE2  D018               	goto	l7599
 26386  013BE4                     l7597:
 26387  013BE4  0E00               	movlw	0
 26388  013BE6  6E2E               	movwf	(btemp+8)^0,c
 26389  013BE8  0E00               	movlw	0
 26390  013BEA  6E2F               	movwf	(btemp+9)^0,c
 26391  013BEC  0E00               	movlw	0
 26392  013BEE  6E30               	movwf	(btemp+10)^0,c
 26393  013BF0  0E00               	movlw	0
 26394  013BF2  6E31               	movwf	(btemp+11)^0,c
 26395                           
 26396                           ;stkvar	_a @ sp[(-4)+-8]
 26397  013BF4  0EF4               	movlw	-12
 26398  013BF6  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 26399  013BFC  0EF5               	movlw	-11
 26400  013BFE  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 26401  013C04  0EF6               	movlw	-10
 26402  013C06  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 26403  013C0C  0EF7               	movlw	-9
 26404  013C0E  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26405  013C14                     l7599:
 26406                           
 26407                           ;stkvar	_bexp @ sp[(-4)+1]
 26408                           ;stkvar	_aexp @ sp[(-4)+2]
 26409  013C14  50E1               	movf	fsr1l,w,c
 26410  013C16  0FFE               	addlw	-2
 26411  013C18  6ED9               	movwf	fsr2l,c
 26412  013C1A  50E2               	movf	fsr1h,w,c
 26413  013C1C  6EDA               	movwf	fsr2h,c
 26414  013C1E  0EFF               	movlw	255
 26415  013C20  22DA               	addwfc	fsr2h,f,c
 26416  013C22  0EFD               	movlw	-3
 26417  013C24  50E3               	movf	plusw1,w,c
 26418  013C26  5CDE               	subwf	postinc2,w,c
 26419  013C28  B0D8               	btfsc	status,0,c
 26420  013C2A  D0A4               	goto	l7635
 26421                           
 26422                           ;stkvar	_signs @ sp[(-4)+3]
 26423  013C2C  0EFF               	movlw	-1
 26424  013C2E  ACE3               	btfss	plusw1,6,c
 26425  013C30  D002               	goto	l7605
 26426                           
 26427                           ;stkvar	_signs @ sp[(-4)+3]
 26428  013C32  0EFF               	movlw	-1
 26429  013C34  7EE3               	btg	plusw1,7,c
 26430  013C36                     l7605:
 26431                           
 26432                           ;stkvar	_bexp @ sp[(-4)+1]
 26433                           ;stkvar	_grs @ sp[(-4)+0]
 26434  013C36  0EFD               	movlw	-3
 26435  013C38  006F FF8C  F026    	movff	plusw1,btemp
 26436  013C3E  0EFC               	movlw	-4
 26437  013C40  0060  F09B  FFE3   	movff	btemp,plusw1
 26438                           
 26439                           ;stkvar	_aexp @ sp[(-4)+2]
 26440                           ;stkvar	_bexp @ sp[(-4)+1]
 26441  013C46  0EFE               	movlw	-2
 26442  013C48  006F FF8C  F026    	movff	plusw1,btemp
 26443  013C4E  0EFD               	movlw	-3
 26444  013C50  0060  F09B  FFE3   	movff	btemp,plusw1
 26445                           
 26446                           ;stkvar	_grs @ sp[(-4)+0]
 26447                           ;stkvar	_aexp @ sp[(-4)+2]
 26448  013C56  0EFC               	movlw	-4
 26449  013C58  006F FF8C  F026    	movff	plusw1,btemp
 26450  013C5E  0EFE               	movlw	-2
 26451  013C60  0060  F09B  FFE3   	movff	btemp,plusw1
 26452                           
 26453                           ;stkvar	_b @ sp[(-4)+-4]
 26454                           ;stkvar	_grs @ sp[(-4)+0]
 26455  013C66  0EF8               	movlw	-8
 26456  013C68  006F FF8C  F026    	movff	plusw1,btemp
 26457  013C6E  0EFC               	movlw	-4
 26458  013C70  0060  F09B  FFE3   	movff	btemp,plusw1
 26459                           
 26460                           ;stkvar	_a @ sp[(-4)+-8]
 26461                           ;stkvar	_b @ sp[(-4)+-4]
 26462  013C76  0EF4               	movlw	-12
 26463  013C78  006F FF8C  F026    	movff	plusw1,btemp
 26464  013C7E  0EF8               	movlw	-8
 26465  013C80  0060  F09B  FFE3   	movff	btemp,plusw1
 26466                           
 26467                           ;stkvar	_grs @ sp[(-4)+0]
 26468                           ;stkvar	_a @ sp[(-4)+-8]
 26469  013C86  0EFC               	movlw	-4
 26470  013C88  006F FF8C  F026    	movff	plusw1,btemp
 26471  013C8E  0EF4               	movlw	-12
 26472  013C90  0060  F09B  FFE3   	movff	btemp,plusw1
 26473                           
 26474                           ;stkvar	_b @ sp[(-4)+-4]
 26475  013C96  0EF9               	movlw	249
 26476  013C98  24E1               	addwf	fsr1l,w,c
 26477  013C9A  6ED9               	movwf	fsr2l,c
 26478  013C9C  0EFF               	movlw	255
 26479  013C9E  20E2               	addwfc	fsr1h,w,c
 26480  013CA0  6EDA               	movwf	fsr2h,c
 26481  013CA2  50DF               	movf	indf2,w,c
 26482  013CA4  6E31               	movwf	(btemp+11)^0,c
 26483                           
 26484                           ;stkvar	_grs @ sp[(-4)+0]
 26485  013CA6  0EFC               	movlw	-4
 26486  013CA8  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26487                           
 26488                           ;stkvar	_a @ sp[(-4)+-8]
 26489  013CAE  0EF5               	movlw	245
 26490  013CB0  24E1               	addwf	fsr1l,w,c
 26491  013CB2  6ED9               	movwf	fsr2l,c
 26492  013CB4  0EFF               	movlw	255
 26493  013CB6  20E2               	addwfc	fsr1h,w,c
 26494  013CB8  6EDA               	movwf	fsr2h,c
 26495                           
 26496                           ;stkvar	_b @ sp[(-4)+-4]
 26497  013CBA  0EF9               	movlw	249
 26498  013CBC  24E1               	addwf	fsr1l,w,c
 26499  013CBE  6EE9               	movwf	fsr0l,c
 26500  013CC0  0EFF               	movlw	255
 26501  013CC2  20E2               	addwfc	fsr1h,w,c
 26502  013CC4  6EEA               	movwf	fsr0h,c
 26503  013CC6  006F FF7F FFEF     	movff	indf2,indf0
 26504                           
 26505                           ;stkvar	_grs @ sp[(-4)+0]
 26506                           ;stkvar	_a @ sp[(-4)+-8]
 26507  013CCC  0EF5               	movlw	245
 26508  013CCE  24E1               	addwf	fsr1l,w,c
 26509  013CD0  6ED9               	movwf	fsr2l,c
 26510  013CD2  0EFF               	movlw	255
 26511  013CD4  20E2               	addwfc	fsr1h,w,c
 26512  013CD6  6EDA               	movwf	fsr2h,c
 26513  013CD8  0EFC               	movlw	-4
 26514  013CDA  006F FF8F FFDF     	movff	plusw1,indf2
 26515                           
 26516                           ;stkvar	_b @ sp[(-4)+-4]
 26517  013CE0  0EFA               	movlw	250
 26518  013CE2  24E1               	addwf	fsr1l,w,c
 26519  013CE4  6ED9               	movwf	fsr2l,c
 26520  013CE6  0EFF               	movlw	255
 26521  013CE8  20E2               	addwfc	fsr1h,w,c
 26522  013CEA  6EDA               	movwf	fsr2h,c
 26523  013CEC  50DF               	movf	indf2,w,c
 26524  013CEE  6E31               	movwf	(btemp+11)^0,c
 26525                           
 26526                           ;stkvar	_grs @ sp[(-4)+0]
 26527  013CF0  0EFC               	movlw	-4
 26528  013CF2  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26529                           
 26530                           ;stkvar	_a @ sp[(-4)+-8]
 26531  013CF8  0EF6               	movlw	246
 26532  013CFA  24E1               	addwf	fsr1l,w,c
 26533  013CFC  6ED9               	movwf	fsr2l,c
 26534  013CFE  0EFF               	movlw	255
 26535  013D00  20E2               	addwfc	fsr1h,w,c
 26536  013D02  6EDA               	movwf	fsr2h,c
 26537                           
 26538                           ;stkvar	_b @ sp[(-4)+-4]
 26539  013D04  0EFA               	movlw	250
 26540  013D06  24E1               	addwf	fsr1l,w,c
 26541  013D08  6EE9               	movwf	fsr0l,c
 26542  013D0A  0EFF               	movlw	255
 26543  013D0C  20E2               	addwfc	fsr1h,w,c
 26544  013D0E  6EEA               	movwf	fsr0h,c
 26545  013D10  006F FF7F FFEF     	movff	indf2,indf0
 26546                           
 26547                           ;stkvar	_grs @ sp[(-4)+0]
 26548                           ;stkvar	_a @ sp[(-4)+-8]
 26549  013D16  0EF6               	movlw	246
 26550  013D18  24E1               	addwf	fsr1l,w,c
 26551  013D1A  6ED9               	movwf	fsr2l,c
 26552  013D1C  0EFF               	movlw	255
 26553  013D1E  20E2               	addwfc	fsr1h,w,c
 26554  013D20  6EDA               	movwf	fsr2h,c
 26555  013D22  0EFC               	movlw	-4
 26556  013D24  006F FF8F FFDF     	movff	plusw1,indf2
 26557                           
 26558                           ;stkvar	_b @ sp[(-4)+-4]
 26559  013D2A  0EFB               	movlw	251
 26560  013D2C  24E1               	addwf	fsr1l,w,c
 26561  013D2E  6ED9               	movwf	fsr2l,c
 26562  013D30  0EFF               	movlw	255
 26563  013D32  20E2               	addwfc	fsr1h,w,c
 26564  013D34  6EDA               	movwf	fsr2h,c
 26565  013D36  50DF               	movf	indf2,w,c
 26566  013D38  6E31               	movwf	(btemp+11)^0,c
 26567                           
 26568                           ;stkvar	_grs @ sp[(-4)+0]
 26569  013D3A  0EFC               	movlw	-4
 26570  013D3C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26571                           
 26572                           ;stkvar	_a @ sp[(-4)+-8]
 26573  013D42  0EF7               	movlw	247
 26574  013D44  24E1               	addwf	fsr1l,w,c
 26575  013D46  6ED9               	movwf	fsr2l,c
 26576  013D48  0EFF               	movlw	255
 26577  013D4A  20E2               	addwfc	fsr1h,w,c
 26578  013D4C  6EDA               	movwf	fsr2h,c
 26579                           
 26580                           ;stkvar	_b @ sp[(-4)+-4]
 26581  013D4E  0EFB               	movlw	251
 26582  013D50  24E1               	addwf	fsr1l,w,c
 26583  013D52  6EE9               	movwf	fsr0l,c
 26584  013D54  0EFF               	movlw	255
 26585  013D56  20E2               	addwfc	fsr1h,w,c
 26586  013D58  6EEA               	movwf	fsr0h,c
 26587  013D5A  006F FF7F FFEF     	movff	indf2,indf0
 26588                           
 26589                           ;stkvar	_grs @ sp[(-4)+0]
 26590                           ;stkvar	_a @ sp[(-4)+-8]
 26591  013D60  0EF7               	movlw	247
 26592  013D62  24E1               	addwf	fsr1l,w,c
 26593  013D64  6ED9               	movwf	fsr2l,c
 26594  013D66  0EFF               	movlw	255
 26595  013D68  20E2               	addwfc	fsr1h,w,c
 26596  013D6A  6EDA               	movwf	fsr2h,c
 26597  013D6C  0EFC               	movlw	-4
 26598  013D6E  006F FF8F FFDF     	movff	plusw1,indf2
 26599  013D74                     l7635:
 26600                           
 26601                           ;stkvar	_grs @ sp[(-4)+0]
 26602  013D74  0EFC               	movlw	-4
 26603  013D76  6AE3               	clrf	plusw1,c
 26604                           
 26605                           ;stkvar	_aexp @ sp[(-4)+2]
 26606  013D78  0EFE               	movlw	-2
 26607  013D7A  50E3               	movf	plusw1,w,c
 26608  013D7C  6E30               	movwf	(btemp+10)^0,c
 26609  013D7E  6A31               	clrf	(btemp+11)^0,c
 26610                           
 26611                           ;stkvar	_bexp @ sp[(-4)+1]
 26612  013D80  0EFD               	movlw	-3
 26613  013D82  50E3               	movf	plusw1,w,c
 26614  013D84  5E30               	subwf	(btemp+10)^0,f,c
 26615  013D86  0E00               	movlw	0
 26616  013D88  5A31               	subwfb	(btemp+11)^0,f,c
 26617  013D8A  BE31               	btfsc	(btemp+11)^0,7,c
 26618  013D8C  D062               	goto	l7659
 26619  013D8E  5031               	movf	(btemp+11)^0,w,c
 26620  013D90  E104               	bnz	u5410
 26621  013D92  0E1A               	movlw	26
 26622  013D94  5C30               	subwf	(btemp+10)^0,w,c
 26623  013D96  A0D8               	btfss	status,0,c
 26624  013D98  D05C               	goto	l7659
 26625  013D9A                     u5410:
 26626                           
 26627                           ;stkvar	_b @ sp[(-4)+-4]
 26628  013D9A  0EF8               	movlw	-8
 26629  013D9C  50E3               	movf	plusw1,w,c
 26630  013D9E  E10A               	bnz	u5421
 26631  013DA0  0EF9               	movlw	-7
 26632  013DA2  50E3               	movf	plusw1,w,c
 26633  013DA4  E107               	bnz	u5421
 26634  013DA6  0EFA               	movlw	-6
 26635  013DA8  50E3               	movf	plusw1,w,c
 26636  013DAA  E104               	bnz	u5421
 26637  013DAC  0EFB               	movlw	-5
 26638  013DAE  50E3               	movf	plusw1,w,c
 26639  013DB0  B4D8               	btfsc	status,2,c
 26640  013DB2  D003               	goto	u5420
 26641  013DB4                     u5421:
 26642  013DB4  6A31               	clrf	(btemp+11)^0,c
 26643  013DB6  2A31               	incf	(btemp+11)^0,f,c
 26644  013DB8  D001               	goto	u5438
 26645  013DBA                     u5420:
 26646  013DBA  6A31               	clrf	(btemp+11)^0,c
 26647  013DBC                     u5438:
 26648                           
 26649                           ;stkvar	_grs @ sp[(-4)+0]
 26650  013DBC  0EFC               	movlw	-4
 26651  013DBE  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26652                           
 26653                           ;stkvar	_b @ sp[(-4)+-4]
 26654  013DC4  0EF8               	movlw	-8
 26655  013DC6  6AE3               	clrf	plusw1,c
 26656  013DC8  0EF9               	movlw	-7
 26657  013DCA  6AE3               	clrf	plusw1,c
 26658  013DCC  0EFA               	movlw	-6
 26659  013DCE  6AE3               	clrf	plusw1,c
 26660  013DD0  0EFB               	movlw	-5
 26661  013DD2  6AE3               	clrf	plusw1,c
 26662                           
 26663                           ;stkvar	_aexp @ sp[(-4)+2]
 26664                           ;stkvar	_bexp @ sp[(-4)+1]
 26665  013DD4  0EFE               	movlw	-2
 26666  013DD6  006F FF8C  F026    	movff	plusw1,btemp
 26667  013DDC  0EFD               	movlw	-3
 26668  013DDE  0060  F09B  FFE3   	movff	btemp,plusw1
 26669  013DE4  D042               	goto	u5470
 26670  013DE6                     l7645:
 26671                           
 26672                           ;stkvar	_grs @ sp[(-4)+0]
 26673  013DE6  0EFC               	movlw	-4
 26674  013DE8  A0E3               	btfss	plusw1,0,c
 26675  013DEA  D00D               	goto	l7649
 26676                           
 26677                           ;stkvar	_grs @ sp[(-4)+0]
 26678  013DEC  0EFC               	movlw	-4
 26679  013DEE  006F FF8C  F031    	movff	plusw1,btemp+11
 26680  013DF4  90D8               	bcf	status,0,c
 26681  013DF6  3231               	rrcf	(btemp+11)^0,f,c
 26682  013DF8  0E01               	movlw	1
 26683  013DFA  1231               	iorwf	(btemp+11)^0,f,c
 26684                           
 26685                           ;stkvar	_grs @ sp[(-4)+0]
 26686  013DFC  0EFC               	movlw	-4
 26687  013DFE  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26688  013E04  D009               	goto	l7651
 26689  013E06                     l7649:
 26690                           
 26691                           ;stkvar	_grs @ sp[(-4)+0]
 26692  013E06  50E1               	movf	fsr1l,w,c
 26693  013E08  0FFC               	addlw	-4
 26694  013E0A  6ED9               	movwf	fsr2l,c
 26695  013E0C  50E2               	movf	fsr1h,w,c
 26696  013E0E  6EDA               	movwf	fsr2h,c
 26697  013E10  0EFF               	movlw	255
 26698  013E12  22DA               	addwfc	fsr2h,f,c
 26699  013E14  90D8               	bcf	status,0,c
 26700  013E16  32DF               	rrcf	indf2,f,c
 26701  013E18                     l7651:
 26702                           
 26703                           ;stkvar	_b @ sp[(-4)+-4]
 26704  013E18  0EF8               	movlw	-8
 26705  013E1A  A0E3               	btfss	plusw1,0,c
 26706  013E1C  D002               	goto	l7655
 26707                           
 26708                           ;stkvar	_grs @ sp[(-4)+0]
 26709  013E1E  0EFC               	movlw	-4
 26710  013E20  8EE3               	bsf	plusw1,7,c
 26711  013E22                     l7655:
 26712  013E22  0E01               	movlw	1
 26713  013E24  6E31               	movwf	(btemp+11)^0,c
 26714                           
 26715                           ;stkvar	_b @ sp[(-4)+-4]
 26716  013E26  50E1               	movf	fsr1l,w,c
 26717  013E28  0FF8               	addlw	-8
 26718  013E2A  6ED9               	movwf	fsr2l,c
 26719  013E2C  50E2               	movf	fsr1h,w,c
 26720  013E2E  6EDA               	movwf	fsr2h,c
 26721  013E30  0EFF               	movlw	255
 26722  013E32  22DA               	addwfc	fsr2h,f,c
 26723  013E34  2831               	incf	(btemp+11)^0,w,c
 26724  013E36  52DE               	movf	postinc2,f,c
 26725  013E38  D008               	goto	u5460
 26726  013E3A                     u5465:
 26727  013E3A  52DE               	movf	postinc2,f,c
 26728  013E3C  90D8               	bcf	status,0,c
 26729  013E3E  BEDC               	btfsc	preinc2,7,c
 26730  013E40  80D8               	bsf	status,0,c
 26731  013E42  32DD               	rrcf	postdec2,f,c
 26732  013E44  32DD               	rrcf	postdec2,f,c
 26733  013E46  32DD               	rrcf	postdec2,f,c
 26734  013E48  32DE               	rrcf	postinc2,f,c
 26735  013E4A                     u5460:
 26736  013E4A  2EE8               	decfsz	wreg,f,c
 26737  013E4C  D7F6               	goto	u5465
 26738                           
 26739                           ;stkvar	_bexp @ sp[(-4)+1]
 26740  013E4E  0EFD               	movlw	-3
 26741  013E50  2AE3               	incf	plusw1,f,c
 26742  013E52                     l7659:
 26743                           
 26744                           ;stkvar	_aexp @ sp[(-4)+2]
 26745                           ;stkvar	_bexp @ sp[(-4)+1]
 26746  013E52  50E1               	movf	fsr1l,w,c
 26747  013E54  0FFD               	addlw	-3
 26748  013E56  6ED9               	movwf	fsr2l,c
 26749  013E58  50E2               	movf	fsr1h,w,c
 26750  013E5A  6EDA               	movwf	fsr2h,c
 26751  013E5C  0EFF               	movlw	255
 26752  013E5E  22DA               	addwfc	fsr2h,f,c
 26753  013E60  0EFE               	movlw	-2
 26754  013E62  50E3               	movf	plusw1,w,c
 26755  013E64  5CDE               	subwf	postinc2,w,c
 26756  013E66  A0D8               	btfss	status,0,c
 26757  013E68  D7BE               	goto	l7645
 26758  013E6A                     u5470:
 26759                           
 26760                           ;stkvar	_signs @ sp[(-4)+3]
 26761  013E6A  0EFF               	movlw	-1
 26762  013E6C  BCE3               	btfsc	plusw1,6,c
 26763  013E6E  D066               	goto	l7687
 26764                           
 26765                           ;stkvar	_bexp @ sp[(-4)+1]
 26766  013E70  0EFD               	movlw	-3
 26767  013E72  50E3               	movf	plusw1,w,c
 26768  013E74  B4D8               	btfsc	status,2,c
 26769  013E76  D0F2               	goto	u5570
 26770                           
 26771                           ;stkvar	_a @ sp[(-4)+-8]
 26772                           ;stkvar	_b @ sp[(-4)+-4]
 26773  013E78  0EF8               	movlw	-8
 26774  013E7A  50E3               	movf	plusw1,w,c
 26775  013E7C  6E26               	movwf	btemp^0,c
 26776  013E7E  0EF4               	movlw	-12
 26777  013E80  50E3               	movf	plusw1,w,c
 26778  013E82  2626               	addwf	btemp^0,f,c
 26779  013E84  0EF8               	movlw	-8
 26780  013E86  0060  F09B  FFE3   	movff	btemp,plusw1
 26781  013E8C  0EF9               	movlw	-7
 26782  013E8E  50E3               	movf	plusw1,w,c
 26783  013E90  6E26               	movwf	btemp^0,c
 26784  013E92  0EF5               	movlw	-11
 26785  013E94  50E3               	movf	plusw1,w,c
 26786  013E96  2226               	addwfc	btemp^0,f,c
 26787  013E98  0EF9               	movlw	-7
 26788  013E9A  0060  F09B  FFE3   	movff	btemp,plusw1
 26789  013EA0  0EFA               	movlw	-6
 26790  013EA2  50E3               	movf	plusw1,w,c
 26791  013EA4  6E26               	movwf	btemp^0,c
 26792  013EA6  0EF6               	movlw	-10
 26793  013EA8  50E3               	movf	plusw1,w,c
 26794  013EAA  2226               	addwfc	btemp^0,f,c
 26795  013EAC  0EFA               	movlw	-6
 26796  013EAE  0060  F09B  FFE3   	movff	btemp,plusw1
 26797  013EB4  0EFB               	movlw	-5
 26798  013EB6  50E3               	movf	plusw1,w,c
 26799  013EB8  6E26               	movwf	btemp^0,c
 26800  013EBA  0EF7               	movlw	-9
 26801  013EBC  50E3               	movf	plusw1,w,c
 26802  013EBE  2226               	addwfc	btemp^0,f,c
 26803  013EC0  0EFB               	movlw	-5
 26804  013EC2  0060  F09B  FFE3   	movff	btemp,plusw1
 26805                           
 26806                           ;stkvar	_b @ sp[(-4)+-4]
 26807  013EC8  0EFB               	movlw	-5
 26808  013ECA  A0E3               	btfss	plusw1,0,c
 26809  013ECC  D101               	goto	u5610
 26810                           
 26811                           ;stkvar	_grs @ sp[(-4)+0]
 26812  013ECE  0EFC               	movlw	-4
 26813  013ED0  A0E3               	btfss	plusw1,0,c
 26814  013ED2  D00D               	goto	l7677
 26815                           
 26816                           ;stkvar	_grs @ sp[(-4)+0]
 26817  013ED4  0EFC               	movlw	-4
 26818  013ED6  006F FF8C  F031    	movff	plusw1,btemp+11
 26819  013EDC  90D8               	bcf	status,0,c
 26820  013EDE  3231               	rrcf	(btemp+11)^0,f,c
 26821  013EE0  0E01               	movlw	1
 26822  013EE2  1231               	iorwf	(btemp+11)^0,f,c
 26823                           
 26824                           ;stkvar	_grs @ sp[(-4)+0]
 26825  013EE4  0EFC               	movlw	-4
 26826  013EE6  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26827  013EEC  D009               	goto	l7679
 26828  013EEE                     l7677:
 26829                           
 26830                           ;stkvar	_grs @ sp[(-4)+0]
 26831  013EEE  50E1               	movf	fsr1l,w,c
 26832  013EF0  0FFC               	addlw	-4
 26833  013EF2  6ED9               	movwf	fsr2l,c
 26834  013EF4  50E2               	movf	fsr1h,w,c
 26835  013EF6  6EDA               	movwf	fsr2h,c
 26836  013EF8  0EFF               	movlw	255
 26837  013EFA  22DA               	addwfc	fsr2h,f,c
 26838  013EFC  90D8               	bcf	status,0,c
 26839  013EFE  32DF               	rrcf	indf2,f,c
 26840  013F00                     l7679:
 26841                           
 26842                           ;stkvar	_b @ sp[(-4)+-4]
 26843  013F00  0EF8               	movlw	-8
 26844  013F02  A0E3               	btfss	plusw1,0,c
 26845  013F04  D002               	goto	l7683
 26846                           
 26847                           ;stkvar	_grs @ sp[(-4)+0]
 26848  013F06  0EFC               	movlw	-4
 26849  013F08  8EE3               	bsf	plusw1,7,c
 26850  013F0A                     l7683:
 26851  013F0A  0E01               	movlw	1
 26852  013F0C  6E31               	movwf	(btemp+11)^0,c
 26853                           
 26854                           ;stkvar	_b @ sp[(-4)+-4]
 26855  013F0E  50E1               	movf	fsr1l,w,c
 26856  013F10  0FF8               	addlw	-8
 26857  013F12  6ED9               	movwf	fsr2l,c
 26858  013F14  50E2               	movf	fsr1h,w,c
 26859  013F16  6EDA               	movwf	fsr2h,c
 26860  013F18  0EFF               	movlw	255
 26861  013F1A  22DA               	addwfc	fsr2h,f,c
 26862  013F1C  2831               	incf	(btemp+11)^0,w,c
 26863  013F1E  52DE               	movf	postinc2,f,c
 26864  013F20  D008               	goto	u5530
 26865  013F22                     u5535:
 26866  013F22  52DE               	movf	postinc2,f,c
 26867  013F24  90D8               	bcf	status,0,c
 26868  013F26  BEDC               	btfsc	preinc2,7,c
 26869  013F28  80D8               	bsf	status,0,c
 26870  013F2A  32DD               	rrcf	postdec2,f,c
 26871  013F2C  32DD               	rrcf	postdec2,f,c
 26872  013F2E  32DD               	rrcf	postdec2,f,c
 26873  013F30  32DE               	rrcf	postinc2,f,c
 26874  013F32                     u5530:
 26875  013F32  2EE8               	decfsz	wreg,f,c
 26876  013F34  D7F6               	goto	u5535
 26877                           
 26878                           ;stkvar	_bexp @ sp[(-4)+1]
 26879  013F36  0EFD               	movlw	-3
 26880  013F38  2AE3               	incf	plusw1,f,c
 26881  013F3A  D0CA               	goto	u5610
 26882  013F3C                     l7687:
 26883                           
 26884                           ;stkvar	_a @ sp[(-4)+-8]
 26885                           ;stkvar	_b @ sp[(-4)+-4]
 26886  013F3C  50E1               	movf	fsr1l,w,c
 26887  013F3E  0FF8               	addlw	-8
 26888  013F40  6ED9               	movwf	fsr2l,c
 26889  013F42  50E2               	movf	fsr1h,w,c
 26890  013F44  6EDA               	movwf	fsr2h,c
 26891  013F46  0EFF               	movlw	255
 26892  013F48  22DA               	addwfc	fsr2h,f,c
 26893  013F4A  0EF4               	movlw	-12
 26894  013F4C  50E3               	movf	plusw1,w,c
 26895  013F4E  5CDE               	subwf	postinc2,w,c
 26896  013F50  0EF5               	movlw	-11
 26897  013F52  50E3               	movf	plusw1,w,c
 26898  013F54  58DE               	subwfb	postinc2,w,c
 26899  013F56  0EF6               	movlw	-10
 26900  013F58  50E3               	movf	plusw1,w,c
 26901  013F5A  58DE               	subwfb	postinc2,w,c
 26902  013F5C  50DE               	movf	postinc2,w,c
 26903  013F5E  0A80               	xorlw	128
 26904  013F60  6E26               	movwf	btemp^0,c
 26905  013F62  0EF7               	movlw	-9
 26906  013F64  50E3               	movf	plusw1,w,c
 26907  013F66  0A80               	xorlw	128
 26908  013F68  5826               	subwfb	btemp^0,w,c
 26909  013F6A  B0D8               	btfsc	status,0,c
 26910  013F6C  D053               	goto	l7699
 26911                           
 26912                           ;stkvar	_b @ sp[(-4)+-4]
 26913                           ;stkvar	_a @ sp[(-4)+-8]
 26914  013F6E  0EF4               	movlw	-12
 26915  013F70  006F FF8C  F02E    	movff	plusw1,btemp+8
 26916  013F76  0EF5               	movlw	-11
 26917  013F78  006F FF8C  F02F    	movff	plusw1,btemp+9
 26918  013F7E  0EF6               	movlw	-10
 26919  013F80  006F FF8C  F030    	movff	plusw1,btemp+10
 26920  013F86  0EF7               	movlw	-9
 26921  013F88  006F FF8C  F031    	movff	plusw1,btemp+11
 26922  013F8E  0EF8               	movlw	-8
 26923  013F90  50E3               	movf	plusw1,w,c
 26924  013F92  5E2E               	subwf	(btemp+8)^0,f,c
 26925  013F94  0EF9               	movlw	-7
 26926  013F96  50E3               	movf	plusw1,w,c
 26927  013F98  5A2F               	subwfb	(btemp+9)^0,f,c
 26928  013F9A  0EFA               	movlw	-6
 26929  013F9C  50E3               	movf	plusw1,w,c
 26930  013F9E  5A30               	subwfb	(btemp+10)^0,f,c
 26931  013FA0  0EFB               	movlw	-5
 26932  013FA2  50E3               	movf	plusw1,w,c
 26933  013FA4  5A31               	subwfb	(btemp+11)^0,f,c
 26934  013FA6  0EFF               	movlw	255
 26935  013FA8  242E               	addwf	(btemp+8)^0,w,c
 26936  013FAA  6E2A               	movwf	(btemp+4)^0,c
 26937  013FAC  0EFF               	movlw	255
 26938  013FAE  202F               	addwfc	(btemp+9)^0,w,c
 26939  013FB0  6E2B               	movwf	(btemp+5)^0,c
 26940  013FB2  0EFF               	movlw	255
 26941  013FB4  2030               	addwfc	(btemp+10)^0,w,c
 26942  013FB6  6E2C               	movwf	(btemp+6)^0,c
 26943  013FB8  0EFF               	movlw	255
 26944  013FBA  2031               	addwfc	(btemp+11)^0,w,c
 26945  013FBC  6E2D               	movwf	(btemp+7)^0,c
 26946                           
 26947                           ;stkvar	_b @ sp[(-4)+-4]
 26948  013FBE  0EF8               	movlw	-8
 26949  013FC0  0060  F0AB  FFE3   	movff	btemp+4,plusw1
 26950  013FC6  0EF9               	movlw	-7
 26951  013FC8  0060  F0AF  FFE3   	movff	btemp+5,plusw1
 26952  013FCE  0EFA               	movlw	-6
 26953  013FD0  0060  F0B3  FFE3   	movff	btemp+6,plusw1
 26954  013FD6  0EFB               	movlw	-5
 26955  013FD8  0060  F0B7  FFE3   	movff	btemp+7,plusw1
 26956                           
 26957                           ;stkvar	_signs @ sp[(-4)+3]
 26958  013FDE  0EFF               	movlw	-1
 26959  013FE0  7EE3               	btg	plusw1,7,c
 26960                           
 26961                           ;stkvar	_grs @ sp[(-4)+0]
 26962  013FE2  0EFC               	movlw	-4
 26963  013FE4  50E3               	movf	plusw1,w,c
 26964  013FE6  0800               	sublw	0
 26965  013FE8  6E31               	movwf	(btemp+11)^0,c
 26966                           
 26967                           ;stkvar	_grs @ sp[(-4)+0]
 26968  013FEA  0EFC               	movlw	-4
 26969  013FEC  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 26970                           
 26971                           ;stkvar	_grs @ sp[(-4)+0]
 26972  013FF2  0EFC               	movlw	-4
 26973  013FF4  50E3               	movf	plusw1,w,c
 26974  013FF6  A4D8               	btfss	status,2,c
 26975  013FF8  D020               	goto	l7701
 26976                           
 26977                           ;stkvar	_b @ sp[(-4)+-4]
 26978  013FFA  50E1               	movf	fsr1l,w,c
 26979  013FFC  0FF8               	addlw	-8
 26980  013FFE  6ED9               	movwf	fsr2l,c
 26981  014000  50E2               	movf	fsr1h,w,c
 26982  014002  6EDA               	movwf	fsr2h,c
 26983  014004  0EFF               	movlw	255
 26984  014006  22DA               	addwfc	fsr2h,f,c
 26985  014008  2ADE               	incf	postinc2,f,c
 26986  01400A  0E00               	movlw	0
 26987  01400C  22DE               	addwfc	postinc2,f,c
 26988  01400E  22DE               	addwfc	postinc2,f,c
 26989  014010  22DE               	addwfc	postinc2,f,c
 26990  014012  D013               	goto	l7701
 26991  014014                     l7699:
 26992                           
 26993                           ;stkvar	_a @ sp[(-4)+-8]
 26994                           ;stkvar	_b @ sp[(-4)+-4]
 26995  014014  50E1               	movf	fsr1l,w,c
 26996  014016  0FF8               	addlw	-8
 26997  014018  6ED9               	movwf	fsr2l,c
 26998  01401A  50E2               	movf	fsr1h,w,c
 26999  01401C  6EDA               	movwf	fsr2h,c
 27000  01401E  0EFF               	movlw	255
 27001  014020  22DA               	addwfc	fsr2h,f,c
 27002  014022  0EF4               	movlw	-12
 27003  014024  50E3               	movf	plusw1,w,c
 27004  014026  5EDE               	subwf	postinc2,f,c
 27005  014028  0EF5               	movlw	-11
 27006  01402A  50E3               	movf	plusw1,w,c
 27007  01402C  5ADE               	subwfb	postinc2,f,c
 27008  01402E  0EF6               	movlw	-10
 27009  014030  50E3               	movf	plusw1,w,c
 27010  014032  5ADE               	subwfb	postinc2,f,c
 27011  014034  0EF7               	movlw	-9
 27012  014036  50E3               	movf	plusw1,w,c
 27013  014038  5ADE               	subwfb	postinc2,f,c
 27014  01403A                     l7701:
 27015                           
 27016                           ;stkvar	_b @ sp[(-4)+-4]
 27017  01403A  0EF8               	movlw	-8
 27018  01403C  50E3               	movf	plusw1,w,c
 27019  01403E  E145               	bnz	l7723
 27020  014040  0EF9               	movlw	-7
 27021  014042  50E3               	movf	plusw1,w,c
 27022  014044  E142               	bnz	l7723
 27023  014046  0EFA               	movlw	-6
 27024  014048  50E3               	movf	plusw1,w,c
 27025  01404A  E13F               	bnz	l7723
 27026  01404C  0EFB               	movlw	-5
 27027  01404E  50E3               	movf	plusw1,w,c
 27028  014050  A4D8               	btfss	status,2,c
 27029  014052  D03B               	goto	l7723
 27030                           
 27031                           ;stkvar	_grs @ sp[(-4)+0]
 27032  014054  0EFC               	movlw	-4
 27033  014056  50E3               	movf	plusw1,w,c
 27034  014058  A4D8               	btfss	status,2,c
 27035  01405A  D037               	goto	l7723
 27036  01405C                     u5570:
 27037  01405C  0E00               	movlw	0
 27038  01405E  6E26               	movwf	btemp^0,c
 27039  014060  0E00               	movlw	0
 27040  014062  6E27               	movwf	(btemp+1)^0,c
 27041  014064  0E00               	movlw	0
 27042  014066  6E28               	movwf	(btemp+2)^0,c
 27043  014068  0E00               	movlw	0
 27044  01406A  6E29               	movwf	(btemp+3)^0,c
 27045  01406C  D0C6               	goto	l2917
 27046  01406E                     l7709:
 27047                           
 27048                           ;stkvar	_b @ sp[(-4)+-4]
 27049  01406E  90D8               	bcf	status,0,c
 27050  014070  0EF8               	movlw	-8
 27051  014072  36E3               	rlcf	plusw1,f,c
 27052  014074  0EF9               	movlw	-7
 27053  014076  36E3               	rlcf	plusw1,f,c
 27054  014078  0EFA               	movlw	-6
 27055  01407A  36E3               	rlcf	plusw1,f,c
 27056  01407C  0EFB               	movlw	-5
 27057  01407E  36E3               	rlcf	plusw1,f,c
 27058                           
 27059                           ;stkvar	_grs @ sp[(-4)+0]
 27060  014080  0EFC               	movlw	-4
 27061  014082  AEE3               	btfss	plusw1,7,c
 27062  014084  D002               	goto	l2929
 27063                           
 27064                           ;stkvar	_b @ sp[(-4)+-4]
 27065  014086  0EF8               	movlw	-8
 27066  014088  80E3               	bsf	plusw1,0,c
 27067  01408A                     l2929:
 27068                           
 27069                           ;stkvar	_grs @ sp[(-4)+0]
 27070  01408A  0EFC               	movlw	-4
 27071  01408C  A0E3               	btfss	plusw1,0,c
 27072  01408E  D00E               	goto	l7717
 27073                           
 27074                           ;stkvar	_grs @ sp[(-4)+0]
 27075  014090  0EFC               	movlw	-4
 27076  014092  006F FF8C  F031    	movff	plusw1,btemp+11
 27077  014098  90D8               	bcf	status,0,c
 27078  01409A  3431               	rlcf	(btemp+11)^0,w,c
 27079  01409C  6E30               	movwf	(btemp+10)^0,c
 27080  01409E  0E01               	movlw	1
 27081  0140A0  1230               	iorwf	(btemp+10)^0,f,c
 27082                           
 27083                           ;stkvar	_grs @ sp[(-4)+0]
 27084  0140A2  0EFC               	movlw	-4
 27085  0140A4  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 27086  0140AA  D009               	goto	l7719
 27087  0140AC                     l7717:
 27088                           
 27089                           ;stkvar	_grs @ sp[(-4)+0]
 27090  0140AC  50E1               	movf	fsr1l,w,c
 27091  0140AE  0FFC               	addlw	-4
 27092  0140B0  6ED9               	movwf	fsr2l,c
 27093  0140B2  50E2               	movf	fsr1h,w,c
 27094  0140B4  6EDA               	movwf	fsr2h,c
 27095  0140B6  0EFF               	movlw	255
 27096  0140B8  22DA               	addwfc	fsr2h,f,c
 27097  0140BA  90D8               	bcf	status,0,c
 27098  0140BC  36DF               	rlcf	indf2,f,c
 27099  0140BE                     l7719:
 27100                           
 27101                           ;stkvar	_bexp @ sp[(-4)+1]
 27102  0140BE  0EFD               	movlw	-3
 27103  0140C0  50E3               	movf	plusw1,w,c
 27104  0140C2  B4D8               	btfsc	status,2,c
 27105  0140C4  D002               	goto	l7723
 27106                           
 27107                           ;stkvar	_bexp @ sp[(-4)+1]
 27108  0140C6  0EFD               	movlw	-3
 27109  0140C8  06E3               	decf	plusw1,f,c
 27110  0140CA                     l7723:
 27111                           
 27112                           ;stkvar	_b @ sp[(-4)+-4]
 27113  0140CA  0EFA               	movlw	-6
 27114  0140CC  AEE3               	btfss	plusw1,7,c
 27115  0140CE  D7CF               	goto	l7709
 27116  0140D0                     u5610:
 27117                           
 27118                           ;stkvar	_aexp @ sp[(-4)+2]
 27119  0140D0  0EFE               	movlw	-2
 27120  0140D2  6AE3               	clrf	plusw1,c
 27121                           
 27122                           ;stkvar	_grs @ sp[(-4)+0]
 27123  0140D4  0EFC               	movlw	-4
 27124  0140D6  AEE3               	btfss	plusw1,7,c
 27125  0140D8  D00F               	goto	l7737
 27126                           
 27127                           ;stkvar	_grs @ sp[(-4)+0]
 27128  0140DA  0EFC               	movlw	-4
 27129  0140DC  006F FF8C  F031    	movff	plusw1,btemp+11
 27130  0140E2  0E7F               	movlw	127
 27131  0140E4  1631               	andwf	(btemp+11)^0,f,c
 27132  0140E6  B4D8               	btfsc	status,2,c
 27133  0140E8  D004               	goto	l7733
 27134  0140EA                     u5630:
 27135                           
 27136                           ;stkvar	_aexp @ sp[(-4)+2]
 27137  0140EA  0EFE               	movlw	-2
 27138  0140EC  6AE3               	clrf	plusw1,c
 27139  0140EE  2AE3               	incf	plusw1,f,c
 27140  0140F0  D003               	goto	l7737
 27141  0140F2                     l7733:
 27142                           
 27143                           ;stkvar	_b @ sp[(-4)+-4]
 27144  0140F2  0EF8               	movlw	-8
 27145  0140F4  B0E3               	btfsc	plusw1,0,c
 27146  0140F6  D7F9               	goto	u5630
 27147  0140F8                     l7737:
 27148                           
 27149                           ;stkvar	_aexp @ sp[(-4)+2]
 27150  0140F8  0EFE               	movlw	-2
 27151  0140FA  50E3               	movf	plusw1,w,c
 27152  0140FC  B4D8               	btfsc	status,2,c
 27153  0140FE  D02B               	goto	l7749
 27154                           
 27155                           ;stkvar	_b @ sp[(-4)+-4]
 27156  014100  50E1               	movf	fsr1l,w,c
 27157  014102  0FF8               	addlw	-8
 27158  014104  6ED9               	movwf	fsr2l,c
 27159  014106  50E2               	movf	fsr1h,w,c
 27160  014108  6EDA               	movwf	fsr2h,c
 27161  01410A  0EFF               	movlw	255
 27162  01410C  22DA               	addwfc	fsr2h,f,c
 27163  01410E  2ADE               	incf	postinc2,f,c
 27164  014110  0E00               	movlw	0
 27165  014112  22DE               	addwfc	postinc2,f,c
 27166  014114  22DE               	addwfc	postinc2,f,c
 27167  014116  22DE               	addwfc	postinc2,f,c
 27168                           
 27169                           ;stkvar	_b @ sp[(-4)+-4]
 27170  014118  0EFB               	movlw	-5
 27171  01411A  A0E3               	btfss	plusw1,0,c
 27172  01411C  D01C               	goto	l7749
 27173  01411E  0E01               	movlw	1
 27174  014120  6E31               	movwf	(btemp+11)^0,c
 27175                           
 27176                           ;stkvar	_b @ sp[(-4)+-4]
 27177  014122  50E1               	movf	fsr1l,w,c
 27178  014124  0FF8               	addlw	-8
 27179  014126  6ED9               	movwf	fsr2l,c
 27180  014128  50E2               	movf	fsr1h,w,c
 27181  01412A  6EDA               	movwf	fsr2h,c
 27182  01412C  0EFF               	movlw	255
 27183  01412E  22DA               	addwfc	fsr2h,f,c
 27184  014130  2831               	incf	(btemp+11)^0,w,c
 27185  014132  52DE               	movf	postinc2,f,c
 27186  014134  D008               	goto	u5670
 27187  014136                     u5675:
 27188  014136  52DE               	movf	postinc2,f,c
 27189  014138  90D8               	bcf	status,0,c
 27190  01413A  BEDC               	btfsc	preinc2,7,c
 27191  01413C  80D8               	bsf	status,0,c
 27192  01413E  32DD               	rrcf	postdec2,f,c
 27193  014140  32DD               	rrcf	postdec2,f,c
 27194  014142  32DD               	rrcf	postdec2,f,c
 27195  014144  32DE               	rrcf	postinc2,f,c
 27196  014146                     u5670:
 27197  014146  2EE8               	decfsz	wreg,f,c
 27198  014148  D7F6               	goto	u5675
 27199                           
 27200                           ;stkvar	_bexp @ sp[(-4)+1]
 27201  01414A  0EFD               	movlw	-3
 27202  01414C  28E3               	incf	plusw1,w,c
 27203  01414E  B4D8               	btfsc	status,2,c
 27204  014150  D002               	goto	l7749
 27205                           
 27206                           ;stkvar	_bexp @ sp[(-4)+1]
 27207  014152  0EFD               	movlw	-3
 27208  014154  2AE3               	incf	plusw1,f,c
 27209  014156                     l7749:
 27210                           
 27211                           ;stkvar	_bexp @ sp[(-4)+1]
 27212  014156  0EFD               	movlw	-3
 27213  014158  28E3               	incf	plusw1,w,c
 27214  01415A  B4D8               	btfsc	status,2,c
 27215  01415C  D004               	goto	u5700
 27216                           
 27217                           ;stkvar	_bexp @ sp[(-4)+1]
 27218  01415E  0EFD               	movlw	-3
 27219  014160  50E3               	movf	plusw1,w,c
 27220  014162  A4D8               	btfss	status,2,c
 27221  014164  D00E               	goto	l7759
 27222  014166                     u5700:
 27223                           
 27224                           ;stkvar	_b @ sp[(-4)+-4]
 27225  014166  0EF8               	movlw	-8
 27226  014168  6AE3               	clrf	plusw1,c
 27227  01416A  0EF9               	movlw	-7
 27228  01416C  6AE3               	clrf	plusw1,c
 27229  01416E  0EFA               	movlw	-6
 27230  014170  6AE3               	clrf	plusw1,c
 27231  014172  0EFB               	movlw	-5
 27232  014174  6AE3               	clrf	plusw1,c
 27233                           
 27234                           ;stkvar	_bexp @ sp[(-4)+1]
 27235  014176  0EFD               	movlw	-3
 27236  014178  50E3               	movf	plusw1,w,c
 27237  01417A  A4D8               	btfss	status,2,c
 27238  01417C  D002               	goto	l7759
 27239                           
 27240                           ;stkvar	_signs @ sp[(-4)+3]
 27241  01417E  0EFF               	movlw	-1
 27242  014180  6AE3               	clrf	plusw1,c
 27243  014182                     l7759:
 27244                           
 27245                           ;stkvar	_bexp @ sp[(-4)+1]
 27246  014182  0EFD               	movlw	-3
 27247  014184  A0E3               	btfss	plusw1,0,c
 27248  014186  D009               	goto	l7763
 27249                           
 27250                           ;stkvar	_b @ sp[(-4)+-4]
 27251  014188  0EFA               	movlw	250
 27252  01418A  24E1               	addwf	fsr1l,w,c
 27253  01418C  6ED9               	movwf	fsr2l,c
 27254  01418E  0EFF               	movlw	255
 27255  014190  20E2               	addwfc	fsr1h,w,c
 27256  014192  6EDA               	movwf	fsr2h,c
 27257  014194  0E00               	movlw	0
 27258  014196  8EDB               	bsf	plusw2,7,c
 27259  014198  D008               	goto	l7765
 27260  01419A                     l7763:
 27261                           
 27262                           ;stkvar	_b @ sp[(-4)+-4]
 27263  01419A  0EFA               	movlw	250
 27264  01419C  24E1               	addwf	fsr1l,w,c
 27265  01419E  6ED9               	movwf	fsr2l,c
 27266  0141A0  0EFF               	movlw	255
 27267  0141A2  20E2               	addwfc	fsr1h,w,c
 27268  0141A4  6EDA               	movwf	fsr2h,c
 27269  0141A6  0E7F               	movlw	127
 27270  0141A8  16DF               	andwf	indf2,f,c
 27271  0141AA                     l7765:
 27272                           
 27273                           ;stkvar	_b @ sp[(-4)+-4]
 27274  0141AA  0EFB               	movlw	251
 27275  0141AC  24E1               	addwf	fsr1l,w,c
 27276  0141AE  6ED9               	movwf	fsr2l,c
 27277  0141B0  0EFF               	movlw	255
 27278  0141B2  20E2               	addwfc	fsr1h,w,c
 27279  0141B4  6EDA               	movwf	fsr2h,c
 27280                           
 27281                           ;stkvar	_bexp @ sp[(-4)+1]
 27282  0141B6  0EFD               	movlw	-3
 27283  0141B8  006F FF8C  F031    	movff	plusw1,btemp+11
 27284  0141BE  90D8               	bcf	status,0,c
 27285  0141C0  3031               	rrcf	(btemp+11)^0,w,c
 27286  0141C2  6EDF               	movwf	indf2,c
 27287                           
 27288                           ;stkvar	_signs @ sp[(-4)+3]
 27289  0141C4  0EFF               	movlw	-1
 27290  0141C6  AEE3               	btfss	plusw1,7,c
 27291  0141C8  D008               	goto	l7771
 27292                           
 27293                           ;stkvar	_b @ sp[(-4)+-4]
 27294  0141CA  0EFB               	movlw	251
 27295  0141CC  24E1               	addwf	fsr1l,w,c
 27296  0141CE  6ED9               	movwf	fsr2l,c
 27297  0141D0  0EFF               	movlw	255
 27298  0141D2  20E2               	addwfc	fsr1h,w,c
 27299  0141D4  6EDA               	movwf	fsr2h,c
 27300  0141D6  0E00               	movlw	0
 27301  0141D8  8EDB               	bsf	plusw2,7,c
 27302  0141DA                     l7771:
 27303                           
 27304                           ;stkvar	_b @ sp[(-4)+-4]
 27305  0141DA  0EF8               	movlw	-8
 27306  0141DC  006F FF8C  F026    	movff	plusw1,btemp
 27307  0141E2  0EF9               	movlw	-7
 27308  0141E4  006F FF8C  F027    	movff	plusw1,btemp+1
 27309  0141EA  0EFA               	movlw	-6
 27310  0141EC  006F FF8C  F028    	movff	plusw1,btemp+2
 27311  0141F2  0EFB               	movlw	-5
 27312  0141F4  006F FF8C  F029    	movff	plusw1,btemp+3
 27313  0141FA                     l2917:
 27314                           
 27315                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 27316  0141FA  0EF4               	movlw	244
 27317  0141FC  26E1               	addwf	fsr1l,f,c
 27318  0141FE  0EFF               	movlw	255
 27319  014200  22E2               	addwfc	fsr1h,f,c
 27320  014202  0012               	return		;funcret
 27321  014204                     __end_of___fladd:
 27322                           	opt callstack 0
 27323                           
 27324 ;; *************** function ___flmul *****************
 27325 ;; Defined at:
 27326 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 27327 ;; Parameters:    Size  Location     Type
 27328 ;;  b               4  [STACK] unsigned char 
 27329 ;;  a               4  [STACK] unsigned char 
 27330 ;; Auto vars:     Size  Location     Type
 27331 ;;  prod            4  [STACK] struct .
 27332 ;;  grs             4  [STACK] unsigned long 
 27333 ;;  temp            2  [STACK] struct .
 27334 ;;  bexp            1  [STACK] unsigned char 
 27335 ;;  aexp            1  [STACK] unsigned char 
 27336 ;;  sign            1  [STACK] unsigned char 
 27337 ;; Return value:  Size  Location     Type
 27338 ;;                  4  [STACK] unsigned char 
 27339 ;; Registers used:
 27340 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27341 ;; Tracked objects:
 27342 ;;		On entry : 0/1
 27343 ;;		On exit  : 0/0
 27344 ;;		Unchanged: 0/0
 27345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27350 ;;Total ram usage:        0 bytes
 27351 ;; Hardware stack levels used:    1
 27352 ;; Hardware stack levels required when called:   15
 27353 ;; This function calls:
 27354 ;;		Nothing
 27355 ;; This function is called by:
 27356 ;;		_conv_raw_result
 27357 ;;		_lp_filter
 27358 ;;		_calc_model_data
 27359 ;;		_calc_bsoc
 27360 ;;		_init_bsoc
 27361 ;;		_efgtoa
 27362 ;; This function uses a reentrant model
 27363 ;;
 27364                           
 27365                           	psect	text106
 27366  01321E                     __ptext106:
 27367                           	opt callstack 0
 27368  01321E                     ___flmul:
 27369                           	opt callstack 0
 27370                           
 27371                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 27372  01321E  0E0D               	movlw	13
 27373  013220  26E1               	addwf	fsr1l,f,c
 27374  013222  0E00               	movlw	0
 27375  013224  22E2               	addwfc	fsr1h,f,c
 27376                           
 27377                           ;stkvar	_b @ sp[(-13)+-4]
 27378                           
 27379                           ;incstack = 0
 27380 ;; hardware stack exceeded
 27381  013226  0EF2               	movlw	242
 27382  013228  24E1               	addwf	fsr1l,w,c
 27383  01322A  6ED9               	movwf	fsr2l,c
 27384  01322C  0EFF               	movlw	255
 27385  01322E  20E2               	addwfc	fsr1h,w,c
 27386  013230  6EDA               	movwf	fsr2h,c
 27387  013232  50DF               	movf	indf2,w,c
 27388  013234  6E31               	movwf	(btemp+11)^0,c
 27389  013236  0E80               	movlw	128
 27390  013238  1631               	andwf	(btemp+11)^0,f,c
 27391                           
 27392                           ;stkvar	_sign @ sp[(-13)+12]
 27393  01323A  0EFF               	movlw	-1
 27394  01323C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 27395                           
 27396                           ;stkvar	_b @ sp[(-13)+-4]
 27397  013242  0EF2               	movlw	242
 27398  013244  24E1               	addwf	fsr1l,w,c
 27399  013246  6ED9               	movwf	fsr2l,c
 27400  013248  0EFF               	movlw	255
 27401  01324A  20E2               	addwfc	fsr1h,w,c
 27402  01324C  6EDA               	movwf	fsr2h,c
 27403  01324E  50DF               	movf	indf2,w,c
 27404  013250  6E31               	movwf	(btemp+11)^0,c
 27405  013252  90D8               	bcf	status,0,c
 27406  013254  3431               	rlcf	(btemp+11)^0,w,c
 27407  013256  6E30               	movwf	(btemp+10)^0,c
 27408                           
 27409                           ;stkvar	_bexp @ sp[(-13)+10]
 27410  013258  0EFD               	movlw	-3
 27411  01325A  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 27412                           
 27413                           ;stkvar	_b @ sp[(-13)+-4]
 27414  013260  0EF1               	movlw	241
 27415  013262  24E1               	addwf	fsr1l,w,c
 27416  013264  6ED9               	movwf	fsr2l,c
 27417  013266  0EFF               	movlw	255
 27418  013268  20E2               	addwfc	fsr1h,w,c
 27419  01326A  6EDA               	movwf	fsr2h,c
 27420  01326C  AEDF               	btfss	indf2,7,c
 27421  01326E  D002               	goto	l8155
 27422                           
 27423                           ;stkvar	_bexp @ sp[(-13)+10]
 27424  013270  0EFD               	movlw	-3
 27425  013272  80E3               	bsf	plusw1,0,c
 27426  013274                     l8155:
 27427                           
 27428                           ;stkvar	_bexp @ sp[(-13)+10]
 27429  013274  0EFD               	movlw	-3
 27430  013276  50E3               	movf	plusw1,w,c
 27431  013278  B4D8               	btfsc	status,2,c
 27432  01327A  D01F               	goto	l8163
 27433                           
 27434                           ;stkvar	_bexp @ sp[(-13)+10]
 27435  01327C  0EFD               	movlw	-3
 27436  01327E  28E3               	incf	plusw1,w,c
 27437  013280  A4D8               	btfss	status,2,c
 27438  013282  D018               	goto	l8161
 27439  013284  0E00               	movlw	0
 27440  013286  6E2E               	movwf	(btemp+8)^0,c
 27441  013288  0E00               	movlw	0
 27442  01328A  6E2F               	movwf	(btemp+9)^0,c
 27443  01328C  0E00               	movlw	0
 27444  01328E  6E30               	movwf	(btemp+10)^0,c
 27445  013290  0E00               	movlw	0
 27446  013292  6E31               	movwf	(btemp+11)^0,c
 27447                           
 27448                           ;stkvar	_b @ sp[(-13)+-4]
 27449  013294  0EEF               	movlw	-17
 27450  013296  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 27451  01329C  0EF0               	movlw	-16
 27452  01329E  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 27453  0132A4  0EF1               	movlw	-15
 27454  0132A6  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 27455  0132AC  0EF2               	movlw	-14
 27456  0132AE  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 27457  0132B4                     l8161:
 27458                           
 27459                           ;stkvar	_b @ sp[(-13)+-4]
 27460  0132B4  0EF1               	movlw	-15
 27461  0132B6  8EE3               	bsf	plusw1,7,c
 27462  0132B8  D018               	goto	l8165
 27463  0132BA                     l8163:
 27464  0132BA  0E00               	movlw	0
 27465  0132BC  6E2E               	movwf	(btemp+8)^0,c
 27466  0132BE  0E00               	movlw	0
 27467  0132C0  6E2F               	movwf	(btemp+9)^0,c
 27468  0132C2  0E00               	movlw	0
 27469  0132C4  6E30               	movwf	(btemp+10)^0,c
 27470  0132C6  0E00               	movlw	0
 27471  0132C8  6E31               	movwf	(btemp+11)^0,c
 27472                           
 27473                           ;stkvar	_b @ sp[(-13)+-4]
 27474  0132CA  0EEF               	movlw	-17
 27475  0132CC  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 27476  0132D2  0EF0               	movlw	-16
 27477  0132D4  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 27478  0132DA  0EF1               	movlw	-15
 27479  0132DC  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 27480  0132E2  0EF2               	movlw	-14
 27481  0132E4  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 27482  0132EA                     l8165:
 27483                           
 27484                           ;stkvar	_a @ sp[(-13)+-8]
 27485  0132EA  0EEE               	movlw	238
 27486  0132EC  24E1               	addwf	fsr1l,w,c
 27487  0132EE  6ED9               	movwf	fsr2l,c
 27488  0132F0  0EFF               	movlw	255
 27489  0132F2  20E2               	addwfc	fsr1h,w,c
 27490  0132F4  6EDA               	movwf	fsr2h,c
 27491  0132F6  50DF               	movf	indf2,w,c
 27492  0132F8  6E31               	movwf	(btemp+11)^0,c
 27493  0132FA  0E80               	movlw	128
 27494  0132FC  1631               	andwf	(btemp+11)^0,f,c
 27495                           
 27496                           ;stkvar	_sign @ sp[(-13)+12]
 27497  0132FE  50E1               	movf	fsr1l,w,c
 27498  013300  0FFF               	addlw	-1
 27499  013302  6ED9               	movwf	fsr2l,c
 27500  013304  50E2               	movf	fsr1h,w,c
 27501  013306  6EDA               	movwf	fsr2h,c
 27502  013308  0EFF               	movlw	255
 27503  01330A  22DA               	addwfc	fsr2h,f,c
 27504  01330C  5031               	movf	(btemp+11)^0,w,c
 27505  01330E  1ADF               	xorwf	indf2,f,c
 27506                           
 27507                           ;stkvar	_a @ sp[(-13)+-8]
 27508  013310  0EEE               	movlw	238
 27509  013312  24E1               	addwf	fsr1l,w,c
 27510  013314  6ED9               	movwf	fsr2l,c
 27511  013316  0EFF               	movlw	255
 27512  013318  20E2               	addwfc	fsr1h,w,c
 27513  01331A  6EDA               	movwf	fsr2h,c
 27514  01331C  50DF               	movf	indf2,w,c
 27515  01331E  6E31               	movwf	(btemp+11)^0,c
 27516  013320  90D8               	bcf	status,0,c
 27517  013322  3431               	rlcf	(btemp+11)^0,w,c
 27518  013324  6E30               	movwf	(btemp+10)^0,c
 27519                           
 27520                           ;stkvar	_aexp @ sp[(-13)+11]
 27521  013326  0EFE               	movlw	-2
 27522  013328  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 27523                           
 27524                           ;stkvar	_a @ sp[(-13)+-8]
 27525  01332E  0EED               	movlw	237
 27526  013330  24E1               	addwf	fsr1l,w,c
 27527  013332  6ED9               	movwf	fsr2l,c
 27528  013334  0EFF               	movlw	255
 27529  013336  20E2               	addwfc	fsr1h,w,c
 27530  013338  6EDA               	movwf	fsr2h,c
 27531  01333A  AEDF               	btfss	indf2,7,c
 27532  01333C  D002               	goto	l8173
 27533                           
 27534                           ;stkvar	_aexp @ sp[(-13)+11]
 27535  01333E  0EFE               	movlw	-2
 27536  013340  80E3               	bsf	plusw1,0,c
 27537  013342                     l8173:
 27538                           
 27539                           ;stkvar	_aexp @ sp[(-13)+11]
 27540  013342  0EFE               	movlw	-2
 27541  013344  50E3               	movf	plusw1,w,c
 27542  013346  B4D8               	btfsc	status,2,c
 27543  013348  D01F               	goto	l8181
 27544                           
 27545                           ;stkvar	_aexp @ sp[(-13)+11]
 27546  01334A  0EFE               	movlw	-2
 27547  01334C  28E3               	incf	plusw1,w,c
 27548  01334E  A4D8               	btfss	status,2,c
 27549  013350  D018               	goto	l8179
 27550  013352  0E00               	movlw	0
 27551  013354  6E2E               	movwf	(btemp+8)^0,c
 27552  013356  0E00               	movlw	0
 27553  013358  6E2F               	movwf	(btemp+9)^0,c
 27554  01335A  0E00               	movlw	0
 27555  01335C  6E30               	movwf	(btemp+10)^0,c
 27556  01335E  0E00               	movlw	0
 27557  013360  6E31               	movwf	(btemp+11)^0,c
 27558                           
 27559                           ;stkvar	_a @ sp[(-13)+-8]
 27560  013362  0EEB               	movlw	-21
 27561  013364  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 27562  01336A  0EEC               	movlw	-20
 27563  01336C  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 27564  013372  0EED               	movlw	-19
 27565  013374  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 27566  01337A  0EEE               	movlw	-18
 27567  01337C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 27568  013382                     l8179:
 27569                           
 27570                           ;stkvar	_a @ sp[(-13)+-8]
 27571  013382  0EED               	movlw	-19
 27572  013384  8EE3               	bsf	plusw1,7,c
 27573  013386  D018               	goto	l8183
 27574  013388                     l8181:
 27575  013388  0E00               	movlw	0
 27576  01338A  6E2E               	movwf	(btemp+8)^0,c
 27577  01338C  0E00               	movlw	0
 27578  01338E  6E2F               	movwf	(btemp+9)^0,c
 27579  013390  0E00               	movlw	0
 27580  013392  6E30               	movwf	(btemp+10)^0,c
 27581  013394  0E00               	movlw	0
 27582  013396  6E31               	movwf	(btemp+11)^0,c
 27583                           
 27584                           ;stkvar	_a @ sp[(-13)+-8]
 27585  013398  0EEB               	movlw	-21
 27586  01339A  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 27587  0133A0  0EEC               	movlw	-20
 27588  0133A2  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 27589  0133A8  0EED               	movlw	-19
 27590  0133AA  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 27591  0133B0  0EEE               	movlw	-18
 27592  0133B2  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 27593  0133B8                     l8183:
 27594                           
 27595                           ;stkvar	_aexp @ sp[(-13)+11]
 27596  0133B8  0EFE               	movlw	-2
 27597  0133BA  50E3               	movf	plusw1,w,c
 27598  0133BC  B4D8               	btfsc	status,2,c
 27599  0133BE  D004               	goto	u6640
 27600                           
 27601                           ;stkvar	_bexp @ sp[(-13)+10]
 27602  0133C0  0EFD               	movlw	-3
 27603  0133C2  50E3               	movf	plusw1,w,c
 27604  0133C4  A4D8               	btfss	status,2,c
 27605  0133C6  D009               	goto	l8191
 27606  0133C8                     u6640:
 27607  0133C8  0E00               	movlw	0
 27608  0133CA  6E26               	movwf	btemp^0,c
 27609  0133CC  0E00               	movlw	0
 27610  0133CE  6E27               	movwf	(btemp+1)^0,c
 27611  0133D0  0E00               	movlw	0
 27612  0133D2  6E28               	movwf	(btemp+2)^0,c
 27613  0133D4  0E00               	movlw	0
 27614  0133D6  6E29               	movwf	(btemp+3)^0,c
 27615  0133D8  D332               	goto	l2998
 27616  0133DA                     l8191:
 27617                           
 27618                           ;stkvar	_b @ sp[(-13)+-4]
 27619  0133DA  0EEF               	movlw	-17
 27620  0133DC  006F FF8C  F031    	movff	plusw1,btemp+11
 27621                           
 27622                           ;stkvar	_a @ sp[(-13)+-8]
 27623  0133E2  0EED               	movlw	237
 27624  0133E4  24E1               	addwf	fsr1l,w,c
 27625  0133E6  6ED9               	movwf	fsr2l,c
 27626  0133E8  0EFF               	movlw	255
 27627  0133EA  20E2               	addwfc	fsr1h,w,c
 27628  0133EC  6EDA               	movwf	fsr2h,c
 27629  0133EE  50DF               	movf	indf2,w,c
 27630  0133F0  0231               	mulwf	(btemp+11)^0,c
 27631                           
 27632                           ;stkvar	_temp @ sp[(-13)+8]
 27633  0133F2  0EFB               	movlw	-5
 27634  0133F4  006F FFCF FFE3     	movff	prodl,plusw1
 27635  0133FA  0EFC               	movlw	-4
 27636  0133FC  006F FFD3 FFE3     	movff	prodh,plusw1
 27637                           
 27638                           ;stkvar	_temp @ sp[(-13)+8]
 27639  013402  0EFB               	movlw	-5
 27640  013404  006F FF8C  F031    	movff	plusw1,btemp+11
 27641  01340A  0060  F0C4  F02A   	movff	btemp+11,btemp+4
 27642  013410  6A2B               	clrf	(btemp+5)^0,c
 27643  013412  6A2C               	clrf	(btemp+6)^0,c
 27644  013414  6A2D               	clrf	(btemp+7)^0,c
 27645                           
 27646                           ;stkvar	_grs @ sp[(-13)+4]
 27647  013416  0EF7               	movlw	-9
 27648  013418  0060  F0AB  FFE3   	movff	btemp+4,plusw1
 27649  01341E  0EF8               	movlw	-8
 27650  013420  0060  F0AF  FFE3   	movff	btemp+5,plusw1
 27651  013426  0EF9               	movlw	-7
 27652  013428  0060  F0B3  FFE3   	movff	btemp+6,plusw1
 27653  01342E  0EFA               	movlw	-6
 27654  013430  0060  F0B7  FFE3   	movff	btemp+7,plusw1
 27655                           
 27656                           ;stkvar	_temp @ sp[(-13)+8]
 27657  013436  0EFC               	movlw	252
 27658  013438  24E1               	addwf	fsr1l,w,c
 27659  01343A  6ED9               	movwf	fsr2l,c
 27660  01343C  0EFF               	movlw	255
 27661  01343E  20E2               	addwfc	fsr1h,w,c
 27662  013440  6EDA               	movwf	fsr2h,c
 27663  013442  50DF               	movf	indf2,w,c
 27664  013444  6E31               	movwf	(btemp+11)^0,c
 27665  013446  0060  F0C4  F02A   	movff	btemp+11,btemp+4
 27666  01344C  6A2B               	clrf	(btemp+5)^0,c
 27667  01344E  6A2C               	clrf	(btemp+6)^0,c
 27668  013450  6A2D               	clrf	(btemp+7)^0,c
 27669                           
 27670                           ;stkvar	_prod @ sp[(-13)+0]
 27671  013452  0EF3               	movlw	-13
 27672  013454  0060  F0AB  FFE3   	movff	btemp+4,plusw1
 27673  01345A  0EF4               	movlw	-12
 27674  01345C  0060  F0AF  FFE3   	movff	btemp+5,plusw1
 27675  013462  0EF5               	movlw	-11
 27676  013464  0060  F0B3  FFE3   	movff	btemp+6,plusw1
 27677  01346A  0EF6               	movlw	-10
 27678  01346C  0060  F0B7  FFE3   	movff	btemp+7,plusw1
 27679                           
 27680                           ;stkvar	_b @ sp[(-13)+-4]
 27681  013472  0EF0               	movlw	240
 27682  013474  24E1               	addwf	fsr1l,w,c
 27683  013476  6ED9               	movwf	fsr2l,c
 27684  013478  0EFF               	movlw	255
 27685  01347A  20E2               	addwfc	fsr1h,w,c
 27686  01347C  6EDA               	movwf	fsr2h,c
 27687  01347E  50DF               	movf	indf2,w,c
 27688  013480  6E31               	movwf	(btemp+11)^0,c
 27689                           
 27690                           ;stkvar	_a @ sp[(-13)+-8]
 27691  013482  0EEC               	movlw	236
 27692  013484  24E1               	addwf	fsr1l,w,c
 27693  013486  6ED9               	movwf	fsr2l,c
 27694  013488  0EFF               	movlw	255
 27695  01348A  20E2               	addwfc	fsr1h,w,c
 27696  01348C  6EDA               	movwf	fsr2h,c
 27697  01348E  50DF               	movf	indf2,w,c
 27698  013490  0231               	mulwf	(btemp+11)^0,c
 27699                           
 27700                           ;stkvar	_temp @ sp[(-13)+8]
 27701  013492  0EFB               	movlw	-5
 27702  013494  006F FFCF FFE3     	movff	prodl,plusw1
 27703  01349A  0EFC               	movlw	-4
 27704  01349C  006F FFD3 FFE3     	movff	prodh,plusw1
 27705                           
 27706                           ;stkvar	_grs @ sp[(-13)+4]
 27707  0134A2  50E1               	movf	fsr1l,w,c
 27708  0134A4  0FF7               	addlw	-9
 27709  0134A6  6ED9               	movwf	fsr2l,c
 27710  0134A8  50E2               	movf	fsr1h,w,c
 27711  0134AA  6EDA               	movwf	fsr2h,c
 27712  0134AC  0EFF               	movlw	255
 27713  0134AE  22DA               	addwfc	fsr2h,f,c
 27714                           
 27715                           ;stkvar	_temp @ sp[(-13)+8]
 27716  0134B0  0EFB               	movlw	-5
 27717  0134B2  50E3               	movf	plusw1,w,c
 27718  0134B4  26DE               	addwf	postinc2,f,c
 27719  0134B6  0E00               	movlw	0
 27720  0134B8  22DE               	addwfc	postinc2,f,c
 27721  0134BA  22DE               	addwfc	postinc2,f,c
 27722  0134BC  22DE               	addwfc	postinc2,f,c
 27723                           
 27724                           ;stkvar	_prod @ sp[(-13)+0]
 27725  0134BE  50E1               	movf	fsr1l,w,c
 27726  0134C0  0FF3               	addlw	-13
 27727  0134C2  6ED9               	movwf	fsr2l,c
 27728  0134C4  50E2               	movf	fsr1h,w,c
 27729  0134C6  6EDA               	movwf	fsr2h,c
 27730  0134C8  0EFF               	movlw	255
 27731  0134CA  22DA               	addwfc	fsr2h,f,c
 27732                           
 27733                           ;stkvar	_temp @ sp[(-13)+8]
 27734  0134CC  0EFC               	movlw	252
 27735  0134CE  24E1               	addwf	fsr1l,w,c
 27736  0134D0  6EE9               	movwf	fsr0l,c
 27737  0134D2  0EFF               	movlw	255
 27738  0134D4  20E2               	addwfc	fsr1h,w,c
 27739  0134D6  6EEA               	movwf	fsr0h,c
 27740  0134D8  50EF               	movf	indf0,w,c
 27741  0134DA  26DE               	addwf	postinc2,f,c
 27742  0134DC  0E00               	movlw	0
 27743  0134DE  22DE               	addwfc	postinc2,f,c
 27744  0134E0  22DE               	addwfc	postinc2,f,c
 27745  0134E2  22DE               	addwfc	postinc2,f,c
 27746                           
 27747                           ;stkvar	_b @ sp[(-13)+-4]
 27748  0134E4  0EF1               	movlw	241
 27749  0134E6  24E1               	addwf	fsr1l,w,c
 27750  0134E8  6ED9               	movwf	fsr2l,c
 27751  0134EA  0EFF               	movlw	255
 27752  0134EC  20E2               	addwfc	fsr1h,w,c
 27753  0134EE  6EDA               	movwf	fsr2h,c
 27754  0134F0  50DF               	movf	indf2,w,c
 27755  0134F2  6E31               	movwf	(btemp+11)^0,c
 27756                           
 27757                           ;stkvar	_a @ sp[(-13)+-8]
 27758  0134F4  0EEB               	movlw	-21
 27759  0134F6  50E3               	movf	plusw1,w,c
 27760  0134F8  0231               	mulwf	(btemp+11)^0,c
 27761                           
 27762                           ;stkvar	_temp @ sp[(-13)+8]
 27763  0134FA  0EFB               	movlw	-5
 27764  0134FC  006F FFCF FFE3     	movff	prodl,plusw1
 27765  013502  0EFC               	movlw	-4
 27766  013504  006F FFD3 FFE3     	movff	prodh,plusw1
 27767                           
 27768                           ;stkvar	_grs @ sp[(-13)+4]
 27769  01350A  50E1               	movf	fsr1l,w,c
 27770  01350C  0FF7               	addlw	-9
 27771  01350E  6ED9               	movwf	fsr2l,c
 27772  013510  50E2               	movf	fsr1h,w,c
 27773  013512  6EDA               	movwf	fsr2h,c
 27774  013514  0EFF               	movlw	255
 27775  013516  22DA               	addwfc	fsr2h,f,c
 27776                           
 27777                           ;stkvar	_temp @ sp[(-13)+8]
 27778  013518  0EFB               	movlw	-5
 27779  01351A  50E3               	movf	plusw1,w,c
 27780  01351C  26DE               	addwf	postinc2,f,c
 27781  01351E  0E00               	movlw	0
 27782  013520  22DE               	addwfc	postinc2,f,c
 27783  013522  22DE               	addwfc	postinc2,f,c
 27784  013524  22DE               	addwfc	postinc2,f,c
 27785                           
 27786                           ;stkvar	_prod @ sp[(-13)+0]
 27787  013526  50E1               	movf	fsr1l,w,c
 27788  013528  0FF3               	addlw	-13
 27789  01352A  6ED9               	movwf	fsr2l,c
 27790  01352C  50E2               	movf	fsr1h,w,c
 27791  01352E  6EDA               	movwf	fsr2h,c
 27792  013530  0EFF               	movlw	255
 27793  013532  22DA               	addwfc	fsr2h,f,c
 27794                           
 27795                           ;stkvar	_temp @ sp[(-13)+8]
 27796  013534  0EFC               	movlw	252
 27797  013536  24E1               	addwf	fsr1l,w,c
 27798  013538  6EE9               	movwf	fsr0l,c
 27799  01353A  0EFF               	movlw	255
 27800  01353C  20E2               	addwfc	fsr1h,w,c
 27801  01353E  6EEA               	movwf	fsr0h,c
 27802  013540  50EF               	movf	indf0,w,c
 27803  013542  26DE               	addwf	postinc2,f,c
 27804  013544  0E00               	movlw	0
 27805  013546  22DE               	addwfc	postinc2,f,c
 27806  013548  22DE               	addwfc	postinc2,f,c
 27807  01354A  22DE               	addwfc	postinc2,f,c
 27808                           
 27809                           ;stkvar	_grs @ sp[(-13)+4]
 27810  01354C  50E1               	movf	fsr1l,w,c
 27811  01354E  0FF7               	addlw	-9
 27812  013550  6ED9               	movwf	fsr2l,c
 27813  013552  50E2               	movf	fsr1h,w,c
 27814  013554  6EDA               	movwf	fsr2h,c
 27815  013556  0EFF               	movlw	255
 27816  013558  22DA               	addwfc	fsr2h,f,c
 27817  01355A  0E08               	movlw	8
 27818  01355C                     u6655:
 27819  01355C  90D8               	bcf	status,0,c
 27820  01355E  36DE               	rlcf	postinc2,f,c
 27821  013560  36DE               	rlcf	postinc2,f,c
 27822  013562  36DE               	rlcf	postinc2,f,c
 27823  013564  36DD               	rlcf	postdec2,f,c
 27824  013566  52DD               	movf	postdec2,f,c
 27825  013568  52DD               	movf	postdec2,f,c
 27826  01356A  2EE8               	decfsz	wreg,f,c
 27827  01356C  D7F7               	goto	u6655
 27828                           
 27829                           ;stkvar	_b @ sp[(-13)+-4]
 27830  01356E  0EF0               	movlw	240
 27831  013570  24E1               	addwf	fsr1l,w,c
 27832  013572  6ED9               	movwf	fsr2l,c
 27833  013574  0EFF               	movlw	255
 27834  013576  20E2               	addwfc	fsr1h,w,c
 27835  013578  6EDA               	movwf	fsr2h,c
 27836  01357A  50DF               	movf	indf2,w,c
 27837  01357C  6E31               	movwf	(btemp+11)^0,c
 27838                           
 27839                           ;stkvar	_a @ sp[(-13)+-8]
 27840  01357E  0EEB               	movlw	-21
 27841  013580  50E3               	movf	plusw1,w,c
 27842  013582  0231               	mulwf	(btemp+11)^0,c
 27843                           
 27844                           ;stkvar	_temp @ sp[(-13)+8]
 27845  013584  0EFB               	movlw	-5
 27846  013586  006F FFCF FFE3     	movff	prodl,plusw1
 27847  01358C  0EFC               	movlw	-4
 27848  01358E  006F FFD3 FFE3     	movff	prodh,plusw1
 27849                           
 27850                           ;stkvar	_temp @ sp[(-13)+8]
 27851  013594  0EFB               	movlw	-5
 27852  013596  006F FF8C  F030    	movff	plusw1,btemp+10
 27853  01359C  0EFC               	movlw	-4
 27854  01359E  006F FF8C  F031    	movff	plusw1,btemp+11
 27855                           
 27856                           ;stkvar	_grs @ sp[(-13)+4]
 27857  0135A4  50E1               	movf	fsr1l,w,c
 27858  0135A6  0FF7               	addlw	-9
 27859  0135A8  6ED9               	movwf	fsr2l,c
 27860  0135AA  50E2               	movf	fsr1h,w,c
 27861  0135AC  6EDA               	movwf	fsr2h,c
 27862  0135AE  0EFF               	movlw	255
 27863  0135B0  22DA               	addwfc	fsr2h,f,c
 27864  0135B2  5030               	movf	(btemp+10)^0,w,c
 27865  0135B4  26DE               	addwf	postinc2,f,c
 27866  0135B6  5031               	movf	(btemp+11)^0,w,c
 27867  0135B8  22DE               	addwfc	postinc2,f,c
 27868  0135BA  0E00               	movlw	0
 27869  0135BC  22DE               	addwfc	postinc2,f,c
 27870  0135BE  22DE               	addwfc	postinc2,f,c
 27871                           
 27872                           ;stkvar	_b @ sp[(-13)+-4]
 27873  0135C0  0EEF               	movlw	-17
 27874  0135C2  006F FF8C  F031    	movff	plusw1,btemp+11
 27875                           
 27876                           ;stkvar	_a @ sp[(-13)+-8]
 27877  0135C8  0EEC               	movlw	236
 27878  0135CA  24E1               	addwf	fsr1l,w,c
 27879  0135CC  6ED9               	movwf	fsr2l,c
 27880  0135CE  0EFF               	movlw	255
 27881  0135D0  20E2               	addwfc	fsr1h,w,c
 27882  0135D2  6EDA               	movwf	fsr2h,c
 27883  0135D4  50DF               	movf	indf2,w,c
 27884  0135D6  0231               	mulwf	(btemp+11)^0,c
 27885                           
 27886                           ;stkvar	_temp @ sp[(-13)+8]
 27887  0135D8  0EFB               	movlw	-5
 27888  0135DA  006F FFCF FFE3     	movff	prodl,plusw1
 27889  0135E0  0EFC               	movlw	-4
 27890  0135E2  006F FFD3 FFE3     	movff	prodh,plusw1
 27891                           
 27892                           ;stkvar	_temp @ sp[(-13)+8]
 27893  0135E8  0EFB               	movlw	-5
 27894  0135EA  006F FF8C  F030    	movff	plusw1,btemp+10
 27895  0135F0  0EFC               	movlw	-4
 27896  0135F2  006F FF8C  F031    	movff	plusw1,btemp+11
 27897                           
 27898                           ;stkvar	_grs @ sp[(-13)+4]
 27899  0135F8  50E1               	movf	fsr1l,w,c
 27900  0135FA  0FF7               	addlw	-9
 27901  0135FC  6ED9               	movwf	fsr2l,c
 27902  0135FE  50E2               	movf	fsr1h,w,c
 27903  013600  6EDA               	movwf	fsr2h,c
 27904  013602  0EFF               	movlw	255
 27905  013604  22DA               	addwfc	fsr2h,f,c
 27906  013606  5030               	movf	(btemp+10)^0,w,c
 27907  013608  26DE               	addwf	postinc2,f,c
 27908  01360A  5031               	movf	(btemp+11)^0,w,c
 27909  01360C  22DE               	addwfc	postinc2,f,c
 27910  01360E  0E00               	movlw	0
 27911  013610  22DE               	addwfc	postinc2,f,c
 27912  013612  22DE               	addwfc	postinc2,f,c
 27913                           
 27914                           ;stkvar	_grs @ sp[(-13)+4]
 27915  013614  50E1               	movf	fsr1l,w,c
 27916  013616  0FF7               	addlw	-9
 27917  013618  6ED9               	movwf	fsr2l,c
 27918  01361A  50E2               	movf	fsr1h,w,c
 27919  01361C  6EDA               	movwf	fsr2h,c
 27920  01361E  0EFF               	movlw	255
 27921  013620  22DA               	addwfc	fsr2h,f,c
 27922  013622  0E08               	movlw	8
 27923  013624                     u6665:
 27924  013624  90D8               	bcf	status,0,c
 27925  013626  36DE               	rlcf	postinc2,f,c
 27926  013628  36DE               	rlcf	postinc2,f,c
 27927  01362A  36DE               	rlcf	postinc2,f,c
 27928  01362C  36DD               	rlcf	postdec2,f,c
 27929  01362E  52DD               	movf	postdec2,f,c
 27930  013630  52DD               	movf	postdec2,f,c
 27931  013632  2EE8               	decfsz	wreg,f,c
 27932  013634  D7F7               	goto	u6665
 27933                           
 27934                           ;stkvar	_b @ sp[(-13)+-4]
 27935  013636  0EEF               	movlw	-17
 27936  013638  006F FF8C  F031    	movff	plusw1,btemp+11
 27937                           
 27938                           ;stkvar	_a @ sp[(-13)+-8]
 27939  01363E  0EEB               	movlw	-21
 27940  013640  50E3               	movf	plusw1,w,c
 27941  013642  0231               	mulwf	(btemp+11)^0,c
 27942                           
 27943                           ;stkvar	_temp @ sp[(-13)+8]
 27944  013644  0EFB               	movlw	-5
 27945  013646  006F FFCF FFE3     	movff	prodl,plusw1
 27946  01364C  0EFC               	movlw	-4
 27947  01364E  006F FFD3 FFE3     	movff	prodh,plusw1
 27948                           
 27949                           ;stkvar	_temp @ sp[(-13)+8]
 27950  013654  0EFB               	movlw	-5
 27951  013656  006F FF8C  F030    	movff	plusw1,btemp+10
 27952  01365C  0EFC               	movlw	-4
 27953  01365E  006F FF8C  F031    	movff	plusw1,btemp+11
 27954                           
 27955                           ;stkvar	_grs @ sp[(-13)+4]
 27956  013664  50E1               	movf	fsr1l,w,c
 27957  013666  0FF7               	addlw	-9
 27958  013668  6ED9               	movwf	fsr2l,c
 27959  01366A  50E2               	movf	fsr1h,w,c
 27960  01366C  6EDA               	movwf	fsr2h,c
 27961  01366E  0EFF               	movlw	255
 27962  013670  22DA               	addwfc	fsr2h,f,c
 27963  013672  5030               	movf	(btemp+10)^0,w,c
 27964  013674  26DE               	addwf	postinc2,f,c
 27965  013676  5031               	movf	(btemp+11)^0,w,c
 27966  013678  22DE               	addwfc	postinc2,f,c
 27967  01367A  0E00               	movlw	0
 27968  01367C  22DE               	addwfc	postinc2,f,c
 27969  01367E  22DE               	addwfc	postinc2,f,c
 27970                           
 27971                           ;stkvar	_b @ sp[(-13)+-4]
 27972  013680  0EF0               	movlw	240
 27973  013682  24E1               	addwf	fsr1l,w,c
 27974  013684  6ED9               	movwf	fsr2l,c
 27975  013686  0EFF               	movlw	255
 27976  013688  20E2               	addwfc	fsr1h,w,c
 27977  01368A  6EDA               	movwf	fsr2h,c
 27978  01368C  50DF               	movf	indf2,w,c
 27979  01368E  6E31               	movwf	(btemp+11)^0,c
 27980                           
 27981                           ;stkvar	_a @ sp[(-13)+-8]
 27982  013690  0EED               	movlw	237
 27983  013692  24E1               	addwf	fsr1l,w,c
 27984  013694  6ED9               	movwf	fsr2l,c
 27985  013696  0EFF               	movlw	255
 27986  013698  20E2               	addwfc	fsr1h,w,c
 27987  01369A  6EDA               	movwf	fsr2h,c
 27988  01369C  50DF               	movf	indf2,w,c
 27989  01369E  0231               	mulwf	(btemp+11)^0,c
 27990                           
 27991                           ;stkvar	_temp @ sp[(-13)+8]
 27992  0136A0  0EFB               	movlw	-5
 27993  0136A2  006F FFCF FFE3     	movff	prodl,plusw1
 27994  0136A8  0EFC               	movlw	-4
 27995  0136AA  006F FFD3 FFE3     	movff	prodh,plusw1
 27996                           
 27997                           ;stkvar	_temp @ sp[(-13)+8]
 27998  0136B0  0EFB               	movlw	-5
 27999  0136B2  006F FF8C  F030    	movff	plusw1,btemp+10
 28000  0136B8  0EFC               	movlw	-4
 28001  0136BA  006F FF8C  F031    	movff	plusw1,btemp+11
 28002                           
 28003                           ;stkvar	_prod @ sp[(-13)+0]
 28004  0136C0  50E1               	movf	fsr1l,w,c
 28005  0136C2  0FF3               	addlw	-13
 28006  0136C4  6ED9               	movwf	fsr2l,c
 28007  0136C6  50E2               	movf	fsr1h,w,c
 28008  0136C8  6EDA               	movwf	fsr2h,c
 28009  0136CA  0EFF               	movlw	255
 28010  0136CC  22DA               	addwfc	fsr2h,f,c
 28011  0136CE  5030               	movf	(btemp+10)^0,w,c
 28012  0136D0  26DE               	addwf	postinc2,f,c
 28013  0136D2  5031               	movf	(btemp+11)^0,w,c
 28014  0136D4  22DE               	addwfc	postinc2,f,c
 28015  0136D6  0E00               	movlw	0
 28016  0136D8  22DE               	addwfc	postinc2,f,c
 28017  0136DA  22DE               	addwfc	postinc2,f,c
 28018                           
 28019                           ;stkvar	_b @ sp[(-13)+-4]
 28020  0136DC  0EF1               	movlw	241
 28021  0136DE  24E1               	addwf	fsr1l,w,c
 28022  0136E0  6ED9               	movwf	fsr2l,c
 28023  0136E2  0EFF               	movlw	255
 28024  0136E4  20E2               	addwfc	fsr1h,w,c
 28025  0136E6  6EDA               	movwf	fsr2h,c
 28026  0136E8  50DF               	movf	indf2,w,c
 28027  0136EA  6E31               	movwf	(btemp+11)^0,c
 28028                           
 28029                           ;stkvar	_a @ sp[(-13)+-8]
 28030  0136EC  0EEC               	movlw	236
 28031  0136EE  24E1               	addwf	fsr1l,w,c
 28032  0136F0  6ED9               	movwf	fsr2l,c
 28033  0136F2  0EFF               	movlw	255
 28034  0136F4  20E2               	addwfc	fsr1h,w,c
 28035  0136F6  6EDA               	movwf	fsr2h,c
 28036  0136F8  50DF               	movf	indf2,w,c
 28037  0136FA  0231               	mulwf	(btemp+11)^0,c
 28038                           
 28039                           ;stkvar	_temp @ sp[(-13)+8]
 28040  0136FC  0EFB               	movlw	-5
 28041  0136FE  006F FFCF FFE3     	movff	prodl,plusw1
 28042  013704  0EFC               	movlw	-4
 28043  013706  006F FFD3 FFE3     	movff	prodh,plusw1
 28044                           
 28045                           ;stkvar	_temp @ sp[(-13)+8]
 28046  01370C  0EFB               	movlw	-5
 28047  01370E  006F FF8C  F030    	movff	plusw1,btemp+10
 28048  013714  0EFC               	movlw	-4
 28049  013716  006F FF8C  F031    	movff	plusw1,btemp+11
 28050                           
 28051                           ;stkvar	_prod @ sp[(-13)+0]
 28052  01371C  50E1               	movf	fsr1l,w,c
 28053  01371E  0FF3               	addlw	-13
 28054  013720  6ED9               	movwf	fsr2l,c
 28055  013722  50E2               	movf	fsr1h,w,c
 28056  013724  6EDA               	movwf	fsr2h,c
 28057  013726  0EFF               	movlw	255
 28058  013728  22DA               	addwfc	fsr2h,f,c
 28059  01372A  5030               	movf	(btemp+10)^0,w,c
 28060  01372C  26DE               	addwf	postinc2,f,c
 28061  01372E  5031               	movf	(btemp+11)^0,w,c
 28062  013730  22DE               	addwfc	postinc2,f,c
 28063  013732  0E00               	movlw	0
 28064  013734  22DE               	addwfc	postinc2,f,c
 28065  013736  22DE               	addwfc	postinc2,f,c
 28066                           
 28067                           ;stkvar	_b @ sp[(-13)+-4]
 28068  013738  0EF1               	movlw	241
 28069  01373A  24E1               	addwf	fsr1l,w,c
 28070  01373C  6ED9               	movwf	fsr2l,c
 28071  01373E  0EFF               	movlw	255
 28072  013740  20E2               	addwfc	fsr1h,w,c
 28073  013742  6EDA               	movwf	fsr2h,c
 28074  013744  50DF               	movf	indf2,w,c
 28075  013746  6E31               	movwf	(btemp+11)^0,c
 28076                           
 28077                           ;stkvar	_a @ sp[(-13)+-8]
 28078  013748  0EED               	movlw	237
 28079  01374A  24E1               	addwf	fsr1l,w,c
 28080  01374C  6ED9               	movwf	fsr2l,c
 28081  01374E  0EFF               	movlw	255
 28082  013750  20E2               	addwfc	fsr1h,w,c
 28083  013752  6EDA               	movwf	fsr2h,c
 28084  013754  50DF               	movf	indf2,w,c
 28085  013756  0231               	mulwf	(btemp+11)^0,c
 28086                           
 28087                           ;stkvar	_temp @ sp[(-13)+8]
 28088  013758  0EFB               	movlw	-5
 28089  01375A  006F FFCF FFE3     	movff	prodl,plusw1
 28090  013760  0EFC               	movlw	-4
 28091  013762  006F FFD3 FFE3     	movff	prodh,plusw1
 28092                           
 28093                           ;stkvar	_temp @ sp[(-13)+8]
 28094  013768  0EFB               	movlw	-5
 28095  01376A  006F FF8C  F030    	movff	plusw1,btemp+10
 28096  013770  0EFC               	movlw	-4
 28097  013772  006F FF8C  F031    	movff	plusw1,btemp+11
 28098  013778  5030               	movf	(btemp+10)^0,w,c
 28099  01377A  6E2A               	movwf	(btemp+4)^0,c
 28100  01377C  5031               	movf	(btemp+11)^0,w,c
 28101  01377E  6E2B               	movwf	(btemp+5)^0,c
 28102  013780  6A2C               	clrf	(btemp+6)^0,c
 28103  013782  6A2D               	clrf	(btemp+7)^0,c
 28104  013784  0060  F0B0  F02D   	movff	btemp+6,btemp+7
 28105  01378A  0060  F0AC  F02C   	movff	btemp+5,btemp+6
 28106  013790  0060  F0A8  F02B   	movff	btemp+4,btemp+5
 28107  013796  6A2A               	clrf	(btemp+4)^0,c
 28108                           
 28109                           ;stkvar	_prod @ sp[(-13)+0]
 28110  013798  50E1               	movf	fsr1l,w,c
 28111  01379A  0FF3               	addlw	-13
 28112  01379C  6ED9               	movwf	fsr2l,c
 28113  01379E  50E2               	movf	fsr1h,w,c
 28114  0137A0  6EDA               	movwf	fsr2h,c
 28115  0137A2  0EFF               	movlw	255
 28116  0137A4  22DA               	addwfc	fsr2h,f,c
 28117  0137A6  502A               	movf	(btemp+4)^0,w,c
 28118  0137A8  26DE               	addwf	postinc2,f,c
 28119  0137AA  502B               	movf	(btemp+5)^0,w,c
 28120  0137AC  22DE               	addwfc	postinc2,f,c
 28121  0137AE  502C               	movf	(btemp+6)^0,w,c
 28122  0137B0  22DE               	addwfc	postinc2,f,c
 28123  0137B2  502D               	movf	(btemp+7)^0,w,c
 28124  0137B4  22DE               	addwfc	postinc2,f,c
 28125                           
 28126                           ;stkvar	_prod @ sp[(-13)+0]
 28127  0137B6  50E1               	movf	fsr1l,w,c
 28128  0137B8  0FF3               	addlw	-13
 28129  0137BA  6ED9               	movwf	fsr2l,c
 28130  0137BC  50E2               	movf	fsr1h,w,c
 28131  0137BE  6EDA               	movwf	fsr2h,c
 28132  0137C0  0EFF               	movlw	255
 28133  0137C2  22DA               	addwfc	fsr2h,f,c
 28134                           
 28135                           ;stkvar	_grs @ sp[(-13)+4]
 28136  0137C4  0EFA               	movlw	250
 28137  0137C6  24E1               	addwf	fsr1l,w,c
 28138  0137C8  6EE9               	movwf	fsr0l,c
 28139  0137CA  0EFF               	movlw	255
 28140  0137CC  20E2               	addwfc	fsr1h,w,c
 28141  0137CE  6EEA               	movwf	fsr0h,c
 28142  0137D0  50EF               	movf	indf0,w,c
 28143  0137D2  26DE               	addwf	postinc2,f,c
 28144  0137D4  0E00               	movlw	0
 28145  0137D6  22DE               	addwfc	postinc2,f,c
 28146  0137D8  22DE               	addwfc	postinc2,f,c
 28147  0137DA  22DE               	addwfc	postinc2,f,c
 28148                           
 28149                           ;stkvar	_grs @ sp[(-13)+4]
 28150  0137DC  50E1               	movf	fsr1l,w,c
 28151  0137DE  0FF7               	addlw	-9
 28152  0137E0  6ED9               	movwf	fsr2l,c
 28153  0137E2  50E2               	movf	fsr1h,w,c
 28154  0137E4  6EDA               	movwf	fsr2h,c
 28155  0137E6  0EFF               	movlw	255
 28156  0137E8  22DA               	addwfc	fsr2h,f,c
 28157  0137EA  0E08               	movlw	8
 28158  0137EC                     u6675:
 28159  0137EC  90D8               	bcf	status,0,c
 28160  0137EE  36DE               	rlcf	postinc2,f,c
 28161  0137F0  36DE               	rlcf	postinc2,f,c
 28162  0137F2  36DE               	rlcf	postinc2,f,c
 28163  0137F4  36DD               	rlcf	postdec2,f,c
 28164  0137F6  52DD               	movf	postdec2,f,c
 28165  0137F8  52DD               	movf	postdec2,f,c
 28166  0137FA  2EE8               	decfsz	wreg,f,c
 28167  0137FC  D7F7               	goto	u6675
 28168  0137FE  0E82               	movlw	130
 28169  013800  6E30               	movwf	(btemp+10)^0,c
 28170  013802  0EFF               	movlw	255
 28171  013804  6E31               	movwf	(btemp+11)^0,c
 28172                           
 28173                           ;stkvar	_bexp @ sp[(-13)+10]
 28174  013806  0EFD               	movlw	-3
 28175  013808  50E3               	movf	plusw1,w,c
 28176  01380A  6E2E               	movwf	(btemp+8)^0,c
 28177  01380C  6A2F               	clrf	(btemp+9)^0,c
 28178                           
 28179                           ;stkvar	_aexp @ sp[(-13)+11]
 28180  01380E  0EFE               	movlw	-2
 28181  013810  50E3               	movf	plusw1,w,c
 28182  013812  262E               	addwf	(btemp+8)^0,f,c
 28183  013814  0E00               	movlw	0
 28184  013816  222F               	addwfc	(btemp+9)^0,f,c
 28185  013818  5030               	movf	(btemp+10)^0,w,c
 28186  01381A  262E               	addwf	(btemp+8)^0,f,c
 28187  01381C  5031               	movf	(btemp+11)^0,w,c
 28188  01381E  222F               	addwfc	(btemp+9)^0,f,c
 28189                           
 28190                           ;stkvar	_temp @ sp[(-13)+8]
 28191  013820  0EFB               	movlw	-5
 28192  013822  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 28193  013828  0EFC               	movlw	-4
 28194  01382A  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 28195  013830  D021               	goto	l8253
 28196  013832                     l8243:
 28197                           
 28198                           ;stkvar	_prod @ sp[(-13)+0]
 28199  013832  90D8               	bcf	status,0,c
 28200  013834  0EF3               	movlw	-13
 28201  013836  36E3               	rlcf	plusw1,f,c
 28202  013838  0EF4               	movlw	-12
 28203  01383A  36E3               	rlcf	plusw1,f,c
 28204  01383C  0EF5               	movlw	-11
 28205  01383E  36E3               	rlcf	plusw1,f,c
 28206  013840  0EF6               	movlw	-10
 28207  013842  36E3               	rlcf	plusw1,f,c
 28208                           
 28209                           ;stkvar	_grs @ sp[(-13)+4]
 28210  013844  0EFA               	movlw	-6
 28211  013846  AEE3               	btfss	plusw1,7,c
 28212  013848  D002               	goto	l8249
 28213                           
 28214                           ;stkvar	_prod @ sp[(-13)+0]
 28215  01384A  0EF3               	movlw	-13
 28216  01384C  80E3               	bsf	plusw1,0,c
 28217  01384E                     l8249:
 28218                           
 28219                           ;stkvar	_grs @ sp[(-13)+4]
 28220  01384E  90D8               	bcf	status,0,c
 28221  013850  0EF7               	movlw	-9
 28222  013852  36E3               	rlcf	plusw1,f,c
 28223  013854  0EF8               	movlw	-8
 28224  013856  36E3               	rlcf	plusw1,f,c
 28225  013858  0EF9               	movlw	-7
 28226  01385A  36E3               	rlcf	plusw1,f,c
 28227  01385C  0EFA               	movlw	-6
 28228  01385E  36E3               	rlcf	plusw1,f,c
 28229                           
 28230                           ;stkvar	_temp @ sp[(-13)+8]
 28231  013860  50E1               	movf	fsr1l,w,c
 28232  013862  0FFB               	addlw	-5
 28233  013864  6ED9               	movwf	fsr2l,c
 28234  013866  50E2               	movf	fsr1h,w,c
 28235  013868  6EDA               	movwf	fsr2h,c
 28236  01386A  0EFF               	movlw	255
 28237  01386C  22DA               	addwfc	fsr2h,f,c
 28238  01386E  06DE               	decf	postinc2,f,c
 28239  013870  0E00               	movlw	0
 28240  013872  5ADD               	subwfb	postdec2,f,c
 28241  013874                     l8253:
 28242                           
 28243                           ;stkvar	_prod @ sp[(-13)+0]
 28244  013874  0EF5               	movlw	-11
 28245  013876  AEE3               	btfss	plusw1,7,c
 28246  013878  D7DC               	goto	l8243
 28247                           
 28248                           ;stkvar	_aexp @ sp[(-13)+11]
 28249  01387A  0EFE               	movlw	-2
 28250  01387C  6AE3               	clrf	plusw1,c
 28251                           
 28252                           ;stkvar	_grs @ sp[(-13)+4]
 28253  01387E  0EFA               	movlw	-6
 28254  013880  AEE3               	btfss	plusw1,7,c
 28255  013882  D020               	goto	l8267
 28256                           
 28257                           ;stkvar	_grs @ sp[(-13)+4]
 28258  013884  50E1               	movf	fsr1l,w,c
 28259  013886  0FF7               	addlw	-9
 28260  013888  6ED9               	movwf	fsr2l,c
 28261  01388A  50E2               	movf	fsr1h,w,c
 28262  01388C  6EDA               	movwf	fsr2h,c
 28263  01388E  0EFF               	movlw	255
 28264  013890  22DA               	addwfc	fsr2h,f,c
 28265  013892  0EFF               	movlw	255
 28266  013894  14DE               	andwf	postinc2,w,c
 28267  013896  6E2E               	movwf	(btemp+8)^0,c
 28268  013898  0EFF               	movlw	255
 28269  01389A  14DE               	andwf	postinc2,w,c
 28270  01389C  6E2F               	movwf	(btemp+9)^0,c
 28271  01389E  0EFF               	movlw	255
 28272  0138A0  14DE               	andwf	postinc2,w,c
 28273  0138A2  6E30               	movwf	(btemp+10)^0,c
 28274  0138A4  0E7F               	movlw	127
 28275  0138A6  14DE               	andwf	postinc2,w,c
 28276  0138A8  6E31               	movwf	(btemp+11)^0,c
 28277  0138AA  502E               	movf	(btemp+8)^0,w,c
 28278  0138AC  102F               	iorwf	(btemp+9)^0,w,c
 28279  0138AE  1030               	iorwf	(btemp+10)^0,w,c
 28280  0138B0  1031               	iorwf	(btemp+11)^0,w,c
 28281  0138B2  B4D8               	btfsc	status,2,c
 28282  0138B4  D004               	goto	l8263
 28283  0138B6                     u6710:
 28284                           
 28285                           ;stkvar	_aexp @ sp[(-13)+11]
 28286  0138B6  0EFE               	movlw	-2
 28287  0138B8  6AE3               	clrf	plusw1,c
 28288  0138BA  2AE3               	incf	plusw1,f,c
 28289  0138BC  D003               	goto	l8267
 28290  0138BE                     l8263:
 28291                           
 28292                           ;stkvar	_prod @ sp[(-13)+0]
 28293  0138BE  0EF3               	movlw	-13
 28294  0138C0  B0E3               	btfsc	plusw1,0,c
 28295  0138C2  D7F9               	goto	u6710
 28296  0138C4                     l8267:
 28297                           
 28298                           ;stkvar	_aexp @ sp[(-13)+11]
 28299  0138C4  0EFE               	movlw	-2
 28300  0138C6  50E3               	movf	plusw1,w,c
 28301  0138C8  B4D8               	btfsc	status,2,c
 28302  0138CA  D036               	goto	l8277
 28303                           
 28304                           ;stkvar	_prod @ sp[(-13)+0]
 28305  0138CC  50E1               	movf	fsr1l,w,c
 28306  0138CE  0FF3               	addlw	-13
 28307  0138D0  6ED9               	movwf	fsr2l,c
 28308  0138D2  50E2               	movf	fsr1h,w,c
 28309  0138D4  6EDA               	movwf	fsr2h,c
 28310  0138D6  0EFF               	movlw	255
 28311  0138D8  22DA               	addwfc	fsr2h,f,c
 28312  0138DA  2ADE               	incf	postinc2,f,c
 28313  0138DC  0E00               	movlw	0
 28314  0138DE  22DE               	addwfc	postinc2,f,c
 28315  0138E0  22DE               	addwfc	postinc2,f,c
 28316  0138E2  22DE               	addwfc	postinc2,f,c
 28317                           
 28318                           ;stkvar	_prod @ sp[(-13)+0]
 28319  0138E4  0EF6               	movlw	-10
 28320  0138E6  A0E3               	btfss	plusw1,0,c
 28321  0138E8  D027               	goto	l8277
 28322  0138EA  0E01               	movlw	1
 28323  0138EC  6E31               	movwf	(btemp+11)^0,c
 28324                           
 28325                           ;stkvar	_prod @ sp[(-13)+0]
 28326  0138EE  50E1               	movf	fsr1l,w,c
 28327  0138F0  0FF3               	addlw	-13
 28328  0138F2  6ED9               	movwf	fsr2l,c
 28329  0138F4  50E2               	movf	fsr1h,w,c
 28330  0138F6  6EDA               	movwf	fsr2h,c
 28331  0138F8  0EFF               	movlw	255
 28332  0138FA  22DA               	addwfc	fsr2h,f,c
 28333  0138FC  2831               	incf	(btemp+11)^0,w,c
 28334  0138FE  52DE               	movf	postinc2,f,c
 28335  013900  D008               	goto	u6750
 28336  013902                     u6755:
 28337  013902  52DE               	movf	postinc2,f,c
 28338  013904  90D8               	bcf	status,0,c
 28339  013906  BEDC               	btfsc	preinc2,7,c
 28340  013908  80D8               	bsf	status,0,c
 28341  01390A  32DD               	rrcf	postdec2,f,c
 28342  01390C  32DD               	rrcf	postdec2,f,c
 28343  01390E  32DD               	rrcf	postdec2,f,c
 28344  013910  32DE               	rrcf	postinc2,f,c
 28345  013912                     u6750:
 28346  013912  2EE8               	decfsz	wreg,f,c
 28347  013914  D7F6               	goto	u6755
 28348                           
 28349                           ;stkvar	_temp @ sp[(-13)+8]
 28350  013916  0EFB               	movlw	-5
 28351  013918  50E3               	movf	plusw1,w,c
 28352  01391A  0F01               	addlw	1
 28353  01391C  6E26               	movwf	btemp^0,c
 28354  01391E  0EFB               	movlw	-5
 28355  013920  0060  F09B  FFE3   	movff	btemp,plusw1
 28356  013926  6A26               	clrf	btemp^0,c
 28357  013928  0EFC               	movlw	-4
 28358  01392A  50E3               	movf	plusw1,w,c
 28359  01392C  2026               	addwfc	btemp^0,w,c
 28360  01392E  6E26               	movwf	btemp^0,c
 28361  013930  0EFC               	movlw	-4
 28362  013932  0060  F09B  FFE3   	movff	btemp,plusw1
 28363  013938                     l8277:
 28364                           
 28365                           ;stkvar	_temp @ sp[(-13)+8]
 28366  013938  0EFC               	movlw	-4
 28367  01393A  BEE3               	btfsc	plusw1,7,c
 28368  01393C  D020               	goto	l8281
 28369  01393E  0EFC               	movlw	-4
 28370  013940  50E3               	movf	plusw1,w,c
 28371  013942  E104               	bnz	u6760
 28372  013944  0EFB               	movlw	-5
 28373  013946  28E3               	incf	plusw1,w,c
 28374  013948  A0D8               	btfss	status,0,c
 28375  01394A  D019               	goto	l8281
 28376  01394C                     u6760:
 28377  01394C  0E00               	movlw	0
 28378  01394E  6E2E               	movwf	(btemp+8)^0,c
 28379  013950  0E00               	movlw	0
 28380  013952  6E2F               	movwf	(btemp+9)^0,c
 28381  013954  0E80               	movlw	128
 28382  013956  6E30               	movwf	(btemp+10)^0,c
 28383  013958  0E7F               	movlw	127
 28384  01395A  6E31               	movwf	(btemp+11)^0,c
 28385                           
 28386                           ;stkvar	_prod @ sp[(-13)+0]
 28387  01395C  0EF3               	movlw	-13
 28388  01395E  0060  F0BB  FFE3   	movff	btemp+8,plusw1
 28389  013964  0EF4               	movlw	-12
 28390  013966  0060  F0BF  FFE3   	movff	btemp+9,plusw1
 28391  01396C  0EF5               	movlw	-11
 28392  01396E  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 28393  013974  0EF6               	movlw	-10
 28394  013976  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 28395  01397C  D044               	goto	l8297
 28396  01397E                     l8281:
 28397                           
 28398                           ;stkvar	_temp @ sp[(-13)+8]
 28399  01397E  0EFC               	movlw	-4
 28400  013980  BEE3               	btfsc	plusw1,7,c
 28401  013982  D007               	goto	u6770
 28402  013984  0EFC               	movlw	-4
 28403  013986  50E3               	movf	plusw1,w,c
 28404  013988  E10F               	bnz	l8287
 28405  01398A  0EFB               	movlw	-5
 28406  01398C  04E3               	decf	plusw1,w,c
 28407  01398E  B0D8               	btfsc	status,0,c
 28408  013990  D00B               	goto	l8287
 28409  013992                     u6770:
 28410                           
 28411                           ;stkvar	_prod @ sp[(-13)+0]
 28412  013992  0EF3               	movlw	-13
 28413  013994  6AE3               	clrf	plusw1,c
 28414  013996  0EF4               	movlw	-12
 28415  013998  6AE3               	clrf	plusw1,c
 28416  01399A  0EF5               	movlw	-11
 28417  01399C  6AE3               	clrf	plusw1,c
 28418  01399E  0EF6               	movlw	-10
 28419  0139A0  6AE3               	clrf	plusw1,c
 28420                           
 28421                           ;stkvar	_sign @ sp[(-13)+12]
 28422  0139A2  0EFF               	movlw	-1
 28423  0139A4  6AE3               	clrf	plusw1,c
 28424  0139A6  D02F               	goto	l8297
 28425  0139A8                     l8287:
 28426                           
 28427                           ;stkvar	_temp @ sp[(-13)+8]
 28428                           ;stkvar	_bexp @ sp[(-13)+10]
 28429  0139A8  0EFB               	movlw	-5
 28430  0139AA  006F FF8C  F026    	movff	plusw1,btemp
 28431  0139B0  0EFD               	movlw	-3
 28432  0139B2  0060  F09B  FFE3   	movff	btemp,plusw1
 28433                           
 28434                           ;stkvar	_prod @ sp[(-13)+0]
 28435  0139B8  50E1               	movf	fsr1l,w,c
 28436  0139BA  0FF3               	addlw	-13
 28437  0139BC  6ED9               	movwf	fsr2l,c
 28438  0139BE  50E2               	movf	fsr1h,w,c
 28439  0139C0  6EDA               	movwf	fsr2h,c
 28440  0139C2  0EFF               	movlw	255
 28441  0139C4  22DA               	addwfc	fsr2h,f,c
 28442  0139C6  0EFF               	movlw	255
 28443  0139C8  16DE               	andwf	postinc2,f,c
 28444  0139CA  0EFF               	movlw	255
 28445  0139CC  16DE               	andwf	postinc2,f,c
 28446  0139CE  0E7F               	movlw	127
 28447  0139D0  16DE               	andwf	postinc2,f,c
 28448  0139D2  0E00               	movlw	0
 28449  0139D4  16DE               	andwf	postinc2,f,c
 28450                           
 28451                           ;stkvar	_bexp @ sp[(-13)+10]
 28452  0139D6  0EFD               	movlw	-3
 28453  0139D8  A0E3               	btfss	plusw1,0,c
 28454  0139DA  D008               	goto	l8295
 28455                           
 28456                           ;stkvar	_prod @ sp[(-13)+0]
 28457  0139DC  0EF5               	movlw	245
 28458  0139DE  24E1               	addwf	fsr1l,w,c
 28459  0139E0  6ED9               	movwf	fsr2l,c
 28460  0139E2  0EFF               	movlw	255
 28461  0139E4  20E2               	addwfc	fsr1h,w,c
 28462  0139E6  6EDA               	movwf	fsr2h,c
 28463  0139E8  0E00               	movlw	0
 28464  0139EA  8EDB               	bsf	plusw2,7,c
 28465  0139EC                     l8295:
 28466                           
 28467                           ;stkvar	_prod @ sp[(-13)+0]
 28468  0139EC  0EF6               	movlw	246
 28469  0139EE  24E1               	addwf	fsr1l,w,c
 28470  0139F0  6ED9               	movwf	fsr2l,c
 28471  0139F2  0EFF               	movlw	255
 28472  0139F4  20E2               	addwfc	fsr1h,w,c
 28473  0139F6  6EDA               	movwf	fsr2h,c
 28474                           
 28475                           ;stkvar	_bexp @ sp[(-13)+10]
 28476  0139F8  0EFD               	movlw	-3
 28477  0139FA  006F FF8C  F031    	movff	plusw1,btemp+11
 28478  013A00  90D8               	bcf	status,0,c
 28479  013A02  3031               	rrcf	(btemp+11)^0,w,c
 28480  013A04  6EDF               	movwf	indf2,c
 28481  013A06                     l8297:
 28482                           
 28483                           ;stkvar	_sign @ sp[(-13)+12]
 28484  013A06  0EFF               	movlw	-1
 28485  013A08  006F FF8C  F031    	movff	plusw1,btemp+11
 28486                           
 28487                           ;stkvar	_prod @ sp[(-13)+0]
 28488  013A0E  0EF6               	movlw	246
 28489  013A10  24E1               	addwf	fsr1l,w,c
 28490  013A12  6ED9               	movwf	fsr2l,c
 28491  013A14  0EFF               	movlw	255
 28492  013A16  20E2               	addwfc	fsr1h,w,c
 28493  013A18  6EDA               	movwf	fsr2h,c
 28494  013A1A  5031               	movf	(btemp+11)^0,w,c
 28495  013A1C  12DF               	iorwf	indf2,f,c
 28496                           
 28497                           ;stkvar	_prod @ sp[(-13)+0]
 28498  013A1E  0EF3               	movlw	-13
 28499  013A20  006F FF8C  F026    	movff	plusw1,btemp
 28500  013A26  0EF4               	movlw	-12
 28501  013A28  006F FF8C  F027    	movff	plusw1,btemp+1
 28502  013A2E  0EF5               	movlw	-11
 28503  013A30  006F FF8C  F028    	movff	plusw1,btemp+2
 28504  013A36  0EF6               	movlw	-10
 28505  013A38  006F FF8C  F029    	movff	plusw1,btemp+3
 28506  013A3E                     l2998:
 28507                           
 28508                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 28509  013A3E  0EEB               	movlw	235
 28510  013A40  26E1               	addwf	fsr1l,f,c
 28511  013A42  0EFF               	movlw	255
 28512  013A44  22E2               	addwfc	fsr1h,f,c
 28513  013A46  0012               	return		;funcret
 28514  013A48                     __end_of___flmul:
 28515                           	opt callstack 0
 28516                           
 28517 ;; *************** function _SYSTEM_Initialize *****************
 28518 ;; Defined at:
 28519 ;;		line 50 in file "mcc_generated_files/mcc.c"
 28520 ;; Parameters:    Size  Location     Type
 28521 ;;		None
 28522 ;; Auto vars:     Size  Location     Type
 28523 ;;		None
 28524 ;; Return value:  Size  Location     Type
 28525 ;;                  1  [STACK] void 
 28526 ;; Registers used:
 28527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 28528 ;; Tracked objects:
 28529 ;;		On entry : 0/0
 28530 ;;		On exit  : 3F/3C
 28531 ;;		Unchanged: 0/0
 28532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28537 ;;Total ram usage:        0 bytes
 28538 ;; Hardware stack levels used:    1
 28539 ;; Hardware stack levels required when called:   17
 28540 ;; This function calls:
 28541 ;;		_ADCC_Initialize
 28542 ;;		_CLKREF_Initialize
 28543 ;;		_DMA1_Initialize
 28544 ;;		_DMA2_Initialize
 28545 ;;		_EXT_INT_Initialize
 28546 ;;		_FVR_Initialize
 28547 ;;		_INTERRUPT_Initialize
 28548 ;;		_OSCILLATOR_Initialize
 28549 ;;		_PIN_MANAGER_Initialize
 28550 ;;		_PMD_Initialize
 28551 ;;		_PWM8_Initialize
 28552 ;;		_SPI1_Initialize
 28553 ;;		_TMR2_Initialize
 28554 ;;		_TMR3_Initialize
 28555 ;;		_TMR5_Initialize
 28556 ;;		_TMR6_Initialize
 28557 ;;		_UART1_Initialize
 28558 ;;		_UART2_Initialize
 28559 ;; This function is called by:
 28560 ;;		_main
 28561 ;; This function uses a reentrant model
 28562 ;;
 28563                           
 28564                           	psect	text107
 28565  01AB02                     __ptext107:
 28566                           	opt callstack 0
 28567  01AB02                     _SYSTEM_Initialize:
 28568                           	opt callstack 13
 28569                           
 28570                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 28571                           
 28572                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28573                           ;incstack = 0
 28574  01AB02  EC8F  F0D3         	call	_INTERRUPT_Initialize	;wreg free
 28575                           
 28576                           ; BSR set to: 57
 28577                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 28578  01AB06  ECAE  F0DB         	call	_PMD_Initialize	;wreg free
 28579                           
 28580                           ; BSR set to: 57
 28581                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 28582  01AB0A  ECC4  F0D0         	call	_PIN_MANAGER_Initialize	;wreg free
 28583                           
 28584                           ; BSR set to: 58
 28585                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 28586  01AB0E  ECA3  F0DB         	call	_OSCILLATOR_Initialize	;wreg free
 28587                           
 28588                           ; BSR set to: 57
 28589                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 28590  01AB12  EC23  F0DC         	call	_FVR_Initialize	;wreg free
 28591                           
 28592                           ; BSR set to: 62
 28593                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 28594  01AB16  EC24  F0D3         	call	_ADCC_Initialize	;wreg free
 28595                           
 28596                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 28597  01AB1A  EC81  F0DB         	call	_TMR2_Initialize	;wreg free
 28598                           
 28599                           ; BSR set to: 57
 28600                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 28601  01AB1E  EC98  F0DB         	call	_PWM8_Initialize	;wreg free
 28602                           
 28603                           ; BSR set to: 63
 28604                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 28605  01AB22  EC00  F0D8         	call	_EXT_INT_Initialize	;wreg free
 28606                           
 28607                           ; BSR set to: 57
 28608                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 28609  01AB26  ECEC  F0D8         	call	_TMR6_Initialize	;wreg free
 28610                           
 28611                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 28612  01AB2A  EC56  F0D6         	call	_TMR3_Initialize	;wreg free
 28613                           
 28614                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 28615  01AB2E  EC33  F0D6         	call	_TMR5_Initialize	;wreg free
 28616                           
 28617                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 28618  01AB32  EC10  F0D6         	call	_UART1_Initialize	;wreg free
 28619                           
 28620                           ; BSR set to: 57
 28621                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 28622  01AB36  EC56  F0D4         	call	_UART2_Initialize	;wreg free
 28623                           
 28624                           ; BSR set to: 57
 28625                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 28626  01AB3A  EC8D  F0DB         	call	_SPI1_Initialize	;wreg free
 28627                           
 28628                           ; BSR set to: 61
 28629                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 28630  01AB3E  ECB2  F0D4         	call	_DMA2_Initialize	;wreg free
 28631                           
 28632                           ; BSR set to: 59
 28633                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 28634  01AB42  ECEF  F0D2         	call	_DMA1_Initialize	;wreg free
 28635                           
 28636                           ; BSR set to: 59
 28637                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 28638  01AB46  ECF7  F0DB         	call	_CLKREF_Initialize	;wreg free
 28639                           
 28640                           ; BSR set to: 60
 28641                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28642  01AB4A  0012               	return		;funcret
 28643  01AB4C                     __end_of_SYSTEM_Initialize:
 28644                           	opt callstack 0
 28645                           
 28646 ;; *************** function _UART2_Initialize *****************
 28647 ;; Defined at:
 28648 ;;		line 78 in file "mcc_generated_files/uart2.c"
 28649 ;; Parameters:    Size  Location     Type
 28650 ;;		None
 28651 ;; Auto vars:     Size  Location     Type
 28652 ;;		None
 28653 ;; Return value:  Size  Location     Type
 28654 ;;                  1  [STACK] void 
 28655 ;; Registers used:
 28656 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28657 ;; Tracked objects:
 28658 ;;		On entry : 3F/39
 28659 ;;		On exit  : 3F/39
 28660 ;;		Unchanged: 0/0
 28661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28666 ;;Total ram usage:        0 bytes
 28667 ;; Hardware stack levels used:    1
 28668 ;; Hardware stack levels required when called:   16
 28669 ;; This function calls:
 28670 ;;		_UART2_SetRxInterruptHandler
 28671 ;;		_UART2_SetTxInterruptHandler
 28672 ;; This function is called by:
 28673 ;;		_SYSTEM_Initialize
 28674 ;; This function uses a reentrant model
 28675 ;;
 28676                           
 28677                           	psect	text108
 28678  01A8AC                     __ptext108:
 28679                           	opt callstack 0
 28680  01A8AC                     _UART2_Initialize:
 28681                           	opt callstack 13
 28682                           
 28683                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 28684                           
 28685                           ; BSR set to: 60
 28686                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28687                           ;incstack = 0
 28688  01A8AC  0139               	movlb	57	; () banked
 28689  01A8AE  9596               	bcf	150,2,b	;volatile
 28690                           
 28691                           ; BSR set to: 57
 28692                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 28693  01A8B0  0E7C               	movlw	low _UART2_Receive_ISR
 28694  01A8B2  6EE6               	movwf	postinc1,c
 28695  01A8B4  0EB6               	movlw	high _UART2_Receive_ISR
 28696  01A8B6  6EE6               	movwf	postinc1,c
 28697  01A8B8  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 28698  01A8BA  6EE6               	movwf	postinc1,c
 28699  01A8BC  EC65  F0D9         	call	_UART2_SetRxInterruptHandler	;wreg free
 28700                           
 28701                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 28702  01A8C0  0139               	movlb	57	; () banked
 28703  01A8C2  9796               	bcf	150,3,b	;volatile
 28704                           
 28705                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 28706  01A8C4  0EAC               	movlw	low _UART2_Transmit_ISR
 28707  01A8C6  6EE6               	movwf	postinc1,c
 28708  01A8C8  0EB1               	movlw	high _UART2_Transmit_ISR
 28709  01A8CA  6EE6               	movwf	postinc1,c
 28710  01A8CC  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 28711  01A8CE  6EE6               	movwf	postinc1,c
 28712  01A8D0  EC51  F0D9         	call	_UART2_SetTxInterruptHandler	;wreg free
 28713                           
 28714                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 28715  01A8D4  013D               	movlb	61	; () banked
 28716  01A8D6  6BD4               	clrf	212,b	;volatile
 28717                           
 28718                           ; BSR set to: 61
 28719                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 28720  01A8D8  6BD6               	clrf	214,b	;volatile
 28721                           
 28722                           ; BSR set to: 61
 28723                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 28724  01A8DA  6BD8               	clrf	216,b	;volatile
 28725                           
 28726                           ; BSR set to: 61
 28727                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 28728  01A8DC  0EB0               	movlw	176
 28729  01A8DE  6FDA               	movwf	218,b	;volatile
 28730                           
 28731                           ; BSR set to: 61
 28732                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 28733  01A8E0  0E80               	movlw	128
 28734  01A8E2  6FDB               	movwf	219,b	;volatile
 28735                           
 28736                           ; BSR set to: 61
 28737                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 28738  01A8E4  6BDC               	clrf	220,b	;volatile
 28739                           
 28740                           ; BSR set to: 61
 28741                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 28742  01A8E6  0E82               	movlw	130
 28743  01A8E8  6FDD               	movwf	221,b	;volatile
 28744                           
 28745                           ; BSR set to: 61
 28746                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 28747  01A8EA  0E06               	movlw	6
 28748  01A8EC  6FDE               	movwf	222,b	;volatile
 28749                           
 28750                           ; BSR set to: 61
 28751                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 28752  01A8EE  6BDF               	clrf	223,b	;volatile
 28753                           
 28754                           ; BSR set to: 61
 28755                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 28756  01A8F0  6BE0               	clrf	224,b	;volatile
 28757                           
 28758                           ; BSR set to: 61
 28759                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 28760  01A8F2  6BE1               	clrf	225,b	;volatile
 28761                           
 28762                           ; BSR set to: 61
 28763                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 28764  01A8F4  6BE2               	clrf	226,b	;volatile
 28765                           
 28766                           ; BSR set to: 61
 28767                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 28768  01A8F6  6A22               	clrf	_uart2TxHead^0,c	;volatile
 28769                           
 28770                           ; BSR set to: 61
 28771                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 28772  01A8F8  6A21               	clrf	_uart2TxTail^0,c	;volatile
 28773                           
 28774                           ; BSR set to: 61
 28775                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 28776  01A8FA  0E40               	movlw	64
 28777  01A8FC  6E20               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 28778                           
 28779                           ; BSR set to: 61
 28780                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 28781  01A8FE  6A1F               	clrf	_uart2RxHead^0,c	;volatile
 28782                           
 28783                           ; BSR set to: 61
 28784                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 28785  01A900  6A1E               	clrf	_uart2RxTail^0,c	;volatile
 28786                           
 28787                           ; BSR set to: 61
 28788                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 28789  01A902  6A1D               	clrf	_uart2RxCount^0,c	;volatile
 28790                           
 28791                           ; BSR set to: 61
 28792                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 28793  01A904  0139               	movlb	57	; () banked
 28794  01A906  8596               	bsf	150,2,b	;volatile
 28795                           
 28796                           ; BSR set to: 57
 28797                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 28798  01A908  0012               	return		;funcret
 28799  01A90A                     __end_of_UART2_Initialize:
 28800                           	opt callstack 0
 28801                           
 28802 ;; *************** function _UART2_SetTxInterruptHandler *****************
 28803 ;; Defined at:
 28804 ;;		line 252 in file "mcc_generated_files/uart2.c"
 28805 ;; Parameters:    Size  Location     Type
 28806 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28807 ;;		 -> UART2_Transmit_ISR(1), 
 28808 ;; Auto vars:     Size  Location     Type
 28809 ;;		None
 28810 ;; Return value:  Size  Location     Type
 28811 ;;                  1  [STACK] void 
 28812 ;; Registers used:
 28813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28814 ;; Tracked objects:
 28815 ;;		On entry : 3F/39
 28816 ;;		On exit  : 0/0
 28817 ;;		Unchanged: 0/0
 28818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28823 ;;Total ram usage:        0 bytes
 28824 ;; Hardware stack levels used:    1
 28825 ;; Hardware stack levels required when called:   15
 28826 ;; This function calls:
 28827 ;;		Nothing
 28828 ;; This function is called by:
 28829 ;;		_UART2_Initialize
 28830 ;; This function uses a reentrant model
 28831 ;;
 28832                           
 28833                           	psect	text109
 28834  01B2A2                     __ptext109:
 28835                           	opt callstack 0
 28836  01B2A2                     _UART2_SetTxInterruptHandler:
 28837                           	opt callstack 13
 28838                           
 28839                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 28840                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28841                           
 28842                           ; BSR set to: 57
 28843                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28844                           ;incstack = 0
 28845  01B2A2  50E1               	movf	fsr1l,w,c
 28846  01B2A4  0FFD               	addlw	-3
 28847  01B2A6  6ED9               	movwf	fsr2l,c
 28848  01B2A8  50E2               	movf	fsr1h,w,c
 28849  01B2AA  6EDA               	movwf	fsr2h,c
 28850  01B2AC  0EFF               	movlw	255
 28851  01B2AE  22DA               	addwfc	fsr2h,f,c
 28852  01B2B0  006F FF78  F0AC    	movff	postinc2,_UART2_TxInterruptHandler
 28853  01B2B6  006F FF78  F0AD    	movff	postinc2,_UART2_TxInterruptHandler+1
 28854  01B2BC  006F FF74  F0AE    	movff	postdec2,_UART2_TxInterruptHandler+2
 28855                           
 28856                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28857  01B2C2  52E5               	movf	postdec1,f,c
 28858  01B2C4  52E5               	movf	postdec1,f,c
 28859  01B2C6  52E5               	movf	postdec1,f,c
 28860  01B2C8  0012               	return		;funcret
 28861  01B2CA                     __end_of_UART2_SetTxInterruptHandler:
 28862                           	opt callstack 0
 28863                           
 28864 ;; *************** function _UART2_SetRxInterruptHandler *****************
 28865 ;; Defined at:
 28866 ;;		line 248 in file "mcc_generated_files/uart2.c"
 28867 ;; Parameters:    Size  Location     Type
 28868 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28869 ;;		 -> UART2_Receive_ISR(1), 
 28870 ;; Auto vars:     Size  Location     Type
 28871 ;;		None
 28872 ;; Return value:  Size  Location     Type
 28873 ;;                  1  [STACK] void 
 28874 ;; Registers used:
 28875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28876 ;; Tracked objects:
 28877 ;;		On entry : 3F/39
 28878 ;;		On exit  : 0/0
 28879 ;;		Unchanged: 0/0
 28880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28885 ;;Total ram usage:        0 bytes
 28886 ;; Hardware stack levels used:    1
 28887 ;; Hardware stack levels required when called:   15
 28888 ;; This function calls:
 28889 ;;		Nothing
 28890 ;; This function is called by:
 28891 ;;		_UART2_Initialize
 28892 ;; This function uses a reentrant model
 28893 ;;
 28894                           
 28895                           	psect	text110
 28896  01B2CA                     __ptext110:
 28897                           	opt callstack 0
 28898  01B2CA                     _UART2_SetRxInterruptHandler:
 28899                           	opt callstack 13
 28900                           
 28901                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 28902                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28903                           
 28904                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28905                           ;incstack = 0
 28906  01B2CA  50E1               	movf	fsr1l,w,c
 28907  01B2CC  0FFD               	addlw	-3
 28908  01B2CE  6ED9               	movwf	fsr2l,c
 28909  01B2D0  50E2               	movf	fsr1h,w,c
 28910  01B2D2  6EDA               	movwf	fsr2h,c
 28911  01B2D4  0EFF               	movlw	255
 28912  01B2D6  22DA               	addwfc	fsr2h,f,c
 28913  01B2D8  006F FF78  F001    	movff	postinc2,_UART2_RxInterruptHandler
 28914  01B2DE  006F FF78  F002    	movff	postinc2,_UART2_RxInterruptHandler+1
 28915  01B2E4  006F FF74  F003    	movff	postdec2,_UART2_RxInterruptHandler+2
 28916                           
 28917                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28918  01B2EA  52E5               	movf	postdec1,f,c
 28919  01B2EC  52E5               	movf	postdec1,f,c
 28920  01B2EE  52E5               	movf	postdec1,f,c
 28921  01B2F0  0012               	return		;funcret
 28922  01B2F2                     __end_of_UART2_SetRxInterruptHandler:
 28923                           	opt callstack 0
 28924                           
 28925 ;; *************** function _UART1_Initialize *****************
 28926 ;; Defined at:
 28927 ;;		line 75 in file "mcc_generated_files/uart1.c"
 28928 ;; Parameters:    Size  Location     Type
 28929 ;;		None
 28930 ;; Auto vars:     Size  Location     Type
 28931 ;;		None
 28932 ;; Return value:  Size  Location     Type
 28933 ;;                  1  [STACK] void 
 28934 ;; Registers used:
 28935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28936 ;; Tracked objects:
 28937 ;;		On entry : 0/39
 28938 ;;		On exit  : 3F/39
 28939 ;;		Unchanged: 0/0
 28940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28945 ;;Total ram usage:        0 bytes
 28946 ;; Hardware stack levels used:    1
 28947 ;; Hardware stack levels required when called:   16
 28948 ;; This function calls:
 28949 ;;		_UART1_SetRxInterruptHandler
 28950 ;; This function is called by:
 28951 ;;		_SYSTEM_Initialize
 28952 ;; This function uses a reentrant model
 28953 ;;
 28954                           
 28955                           	psect	text111
 28956  01AC20                     __ptext111:
 28957                           	opt callstack 0
 28958  01AC20                     _UART1_Initialize:
 28959                           	opt callstack 13
 28960                           
 28961                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 28962                           
 28963                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28964                           ;incstack = 0
 28965  01AC20  0139               	movlb	57	; () banked
 28966  01AC22  9793               	bcf	147,3,b	;volatile
 28967                           
 28968                           ; BSR set to: 57
 28969                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 28970  01AC24  0EE4               	movlw	low _UART1_Receive_ISR
 28971  01AC26  6EE6               	movwf	postinc1,c
 28972  01AC28  0EB5               	movlw	high _UART1_Receive_ISR
 28973  01AC2A  6EE6               	movwf	postinc1,c
 28974  01AC2C  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 28975  01AC2E  6EE6               	movwf	postinc1,c
 28976  01AC30  EC79  F0D9         	call	_UART1_SetRxInterruptHandler	;wreg free
 28977                           
 28978                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 28979  01AC34  013D               	movlb	61	; () banked
 28980  01AC36  6BEC               	clrf	236,b	;volatile
 28981                           
 28982                           ; BSR set to: 61
 28983                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 28984  01AC38  6BED               	clrf	237,b	;volatile
 28985                           
 28986                           ; BSR set to: 61
 28987                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 28988  01AC3A  6BEE               	clrf	238,b	;volatile
 28989                           
 28990                           ; BSR set to: 61
 28991                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 28992  01AC3C  6BEF               	clrf	239,b	;volatile
 28993                           
 28994                           ; BSR set to: 61
 28995                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 28996  01AC3E  6BF0               	clrf	240,b	;volatile
 28997                           
 28998                           ; BSR set to: 61
 28999                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 29000  01AC40  6BF1               	clrf	241,b	;volatile
 29001                           
 29002                           ; BSR set to: 61
 29003                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 29004  01AC42  0EB0               	movlw	176
 29005  01AC44  6FF2               	movwf	242,b	;volatile
 29006                           
 29007                           ; BSR set to: 61
 29008                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 29009  01AC46  0E80               	movlw	128
 29010  01AC48  6FF3               	movwf	243,b	;volatile
 29011                           
 29012                           ; BSR set to: 61
 29013                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 29014  01AC4A  6BF4               	clrf	244,b	;volatile
 29015                           
 29016                           ; BSR set to: 61
 29017                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 29018  01AC4C  0E8A               	movlw	138
 29019  01AC4E  6FF5               	movwf	245,b	;volatile
 29020                           
 29021                           ; BSR set to: 61
 29022                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 29023  01AC50  6BF6               	clrf	246,b	;volatile
 29024                           
 29025                           ; BSR set to: 61
 29026                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 29027  01AC52  6BF7               	clrf	247,b	;volatile
 29028                           
 29029                           ; BSR set to: 61
 29030                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 29031  01AC54  6BF8               	clrf	248,b	;volatile
 29032                           
 29033                           ; BSR set to: 61
 29034                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 29035  01AC56  6BF9               	clrf	249,b	;volatile
 29036                           
 29037                           ; BSR set to: 61
 29038                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 29039  01AC58  6BFA               	clrf	250,b	;volatile
 29040                           
 29041                           ; BSR set to: 61
 29042                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 29043  01AC5A  6A25               	clrf	_uart1RxHead^0,c	;volatile
 29044                           
 29045                           ; BSR set to: 61
 29046                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 29047  01AC5C  6A24               	clrf	_uart1RxTail^0,c	;volatile
 29048                           
 29049                           ; BSR set to: 61
 29050                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 29051  01AC5E  6A23               	clrf	_uart1RxCount^0,c	;volatile
 29052                           
 29053                           ; BSR set to: 61
 29054                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 29055  01AC60  0139               	movlb	57	; () banked
 29056  01AC62  8793               	bsf	147,3,b	;volatile
 29057                           
 29058                           ; BSR set to: 57
 29059                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29060  01AC64  0012               	return		;funcret
 29061  01AC66                     __end_of_UART1_Initialize:
 29062                           	opt callstack 0
 29063                           
 29064 ;; *************** function _UART1_SetRxInterruptHandler *****************
 29065 ;; Defined at:
 29066 ;;		line 207 in file "mcc_generated_files/uart1.c"
 29067 ;; Parameters:    Size  Location     Type
 29068 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29069 ;;		 -> UART1_Receive_ISR(1), 
 29070 ;; Auto vars:     Size  Location     Type
 29071 ;;		None
 29072 ;; Return value:  Size  Location     Type
 29073 ;;                  1  [STACK] void 
 29074 ;; Registers used:
 29075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29076 ;; Tracked objects:
 29077 ;;		On entry : 3F/39
 29078 ;;		On exit  : 0/0
 29079 ;;		Unchanged: 0/0
 29080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29085 ;;Total ram usage:        0 bytes
 29086 ;; Hardware stack levels used:    1
 29087 ;; Hardware stack levels required when called:   15
 29088 ;; This function calls:
 29089 ;;		Nothing
 29090 ;; This function is called by:
 29091 ;;		_UART1_Initialize
 29092 ;; This function uses a reentrant model
 29093 ;;
 29094                           
 29095                           	psect	text112
 29096  01B2F2                     __ptext112:
 29097                           	opt callstack 0
 29098  01B2F2                     _UART1_SetRxInterruptHandler:
 29099                           	opt callstack 13
 29100                           
 29101                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 29102                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29103                           
 29104                           ; BSR set to: 57
 29105                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29106                           ;incstack = 0
 29107  01B2F2  50E1               	movf	fsr1l,w,c
 29108  01B2F4  0FFD               	addlw	-3
 29109  01B2F6  6ED9               	movwf	fsr2l,c
 29110  01B2F8  50E2               	movf	fsr1h,w,c
 29111  01B2FA  6EDA               	movwf	fsr2h,c
 29112  01B2FC  0EFF               	movlw	255
 29113  01B2FE  22DA               	addwfc	fsr2h,f,c
 29114  01B300  006F FF78  F0A9    	movff	postinc2,_UART1_RxInterruptHandler
 29115  01B306  006F FF78  F0AA    	movff	postinc2,_UART1_RxInterruptHandler+1
 29116  01B30C  006F FF74  F0AB    	movff	postdec2,_UART1_RxInterruptHandler+2
 29117                           
 29118                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29119  01B312  52E5               	movf	postdec1,f,c
 29120  01B314  52E5               	movf	postdec1,f,c
 29121  01B316  52E5               	movf	postdec1,f,c
 29122  01B318  0012               	return		;funcret
 29123  01B31A                     __end_of_UART1_SetRxInterruptHandler:
 29124                           	opt callstack 0
 29125                           
 29126 ;; *************** function _TMR6_Initialize *****************
 29127 ;; Defined at:
 29128 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 29129 ;; Parameters:    Size  Location     Type
 29130 ;;		None
 29131 ;; Auto vars:     Size  Location     Type
 29132 ;;		None
 29133 ;; Return value:  Size  Location     Type
 29134 ;;                  1  [STACK] void 
 29135 ;; Registers used:
 29136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29137 ;; Tracked objects:
 29138 ;;		On entry : 3F/39
 29139 ;;		On exit  : 0/0
 29140 ;;		Unchanged: 0/0
 29141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29146 ;;Total ram usage:        0 bytes
 29147 ;; Hardware stack levels used:    1
 29148 ;; Hardware stack levels required when called:   16
 29149 ;; This function calls:
 29150 ;;		_TMR6_SetInterruptHandler
 29151 ;; This function is called by:
 29152 ;;		_SYSTEM_Initialize
 29153 ;; This function uses a reentrant model
 29154 ;;
 29155                           
 29156                           	psect	text113
 29157  01B1D8                     __ptext113:
 29158                           	opt callstack 0
 29159  01B1D8                     _TMR6_Initialize:
 29160                           	opt callstack 13
 29161                           
 29162                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 29163                           
 29164                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29165                           ;incstack = 0
 29166  01B1D8  0E01               	movlw	1
 29167  01B1DA  6E96               	movwf	150,c	;volatile
 29168                           
 29169                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 29170  01B1DC  6A95               	clrf	149,c	;volatile
 29171                           
 29172                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 29173  01B1DE  6A97               	clrf	151,c	;volatile
 29174                           
 29175                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 29176  01B1E0  0E7C               	movlw	124
 29177  01B1E2  6E93               	movwf	147,c	;volatile
 29178                           
 29179                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 29180  01B1E4  6A92               	clrf	146,c	;volatile
 29181                           
 29182                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 29183  01B1E6  0139               	movlb	57	; () banked
 29184  01B1E8  91A9               	bcf	169,0,b	;volatile
 29185                           
 29186                           ; BSR set to: 57
 29187                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 29188  01B1EA  8199               	bsf	153,0,b	;volatile
 29189                           
 29190                           ; BSR set to: 57
 29191                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 29192  01B1EC  0EB4               	movlw	low _TMR6_DefaultInterruptHandler
 29193  01B1EE  6EE6               	movwf	postinc1,c
 29194  01B1F0  0EAA               	movlw	high _TMR6_DefaultInterruptHandler
 29195  01B1F2  6EE6               	movwf	postinc1,c
 29196  01B1F4  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 29197  01B1F6  6EE6               	movwf	postinc1,c
 29198  01B1F8  EC8D  F0D9         	call	_TMR6_SetInterruptHandler	;wreg free
 29199                           
 29200                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 29201  01B1FC  0EE0               	movlw	224
 29202  01B1FE  6E94               	movwf	148,c	;volatile
 29203                           
 29204                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29205  01B200  0012               	return		;funcret
 29206  01B202                     __end_of_TMR6_Initialize:
 29207                           	opt callstack 0
 29208                           
 29209 ;; *************** function _TMR6_SetInterruptHandler *****************
 29210 ;; Defined at:
 29211 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 29212 ;; Parameters:    Size  Location     Type
 29213 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29214 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 29215 ;; Auto vars:     Size  Location     Type
 29216 ;;		None
 29217 ;; Return value:  Size  Location     Type
 29218 ;;                  1  [STACK] void 
 29219 ;; Registers used:
 29220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29221 ;; Tracked objects:
 29222 ;;		On entry : 3F/39
 29223 ;;		On exit  : 0/0
 29224 ;;		Unchanged: 0/0
 29225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29230 ;;Total ram usage:        0 bytes
 29231 ;; Hardware stack levels used:    1
 29232 ;; Hardware stack levels required when called:   15
 29233 ;; This function calls:
 29234 ;;		Nothing
 29235 ;; This function is called by:
 29236 ;;		_TMR6_Initialize
 29237 ;; This function uses a reentrant model
 29238 ;;
 29239                           
 29240                           	psect	text114
 29241  01B31A                     __ptext114:
 29242                           	opt callstack 0
 29243  01B31A                     _TMR6_SetInterruptHandler:
 29244                           	opt callstack 13
 29245                           
 29246                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 29247                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29248                           
 29249                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29250                           ;incstack = 0
 29251  01B31A  50E1               	movf	fsr1l,w,c
 29252  01B31C  0FFD               	addlw	-3
 29253  01B31E  6ED9               	movwf	fsr2l,c
 29254  01B320  50E2               	movf	fsr1h,w,c
 29255  01B322  6EDA               	movwf	fsr2h,c
 29256  01B324  0EFF               	movlw	255
 29257  01B326  22DA               	addwfc	fsr2h,f,c
 29258  01B328  006F FF78  F0A0    	movff	postinc2,_TMR6_InterruptHandler
 29259  01B32E  006F FF78  F0A1    	movff	postinc2,_TMR6_InterruptHandler+1
 29260  01B334  006F FF74  F0A2    	movff	postdec2,_TMR6_InterruptHandler+2
 29261                           
 29262                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29263  01B33A  52E5               	movf	postdec1,f,c
 29264  01B33C  52E5               	movf	postdec1,f,c
 29265  01B33E  52E5               	movf	postdec1,f,c
 29266  01B340  0012               	return		;funcret
 29267  01B342                     __end_of_TMR6_SetInterruptHandler:
 29268                           	opt callstack 0
 29269                           
 29270 ;; *************** function _TMR5_Initialize *****************
 29271 ;; Defined at:
 29272 ;;		line 69 in file "mcc_generated_files/tmr5.c"
 29273 ;; Parameters:    Size  Location     Type
 29274 ;;		None
 29275 ;; Auto vars:     Size  Location     Type
 29276 ;;		None
 29277 ;; Return value:  Size  Location     Type
 29278 ;;                  1  [STACK] void 
 29279 ;; Registers used:
 29280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29281 ;; Tracked objects:
 29282 ;;		On entry : 0/39
 29283 ;;		On exit  : 0/0
 29284 ;;		Unchanged: 0/0
 29285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29290 ;;Total ram usage:        0 bytes
 29291 ;; Hardware stack levels used:    1
 29292 ;; Hardware stack levels required when called:   16
 29293 ;; This function calls:
 29294 ;;		_TMR5_SetInterruptHandler
 29295 ;; This function is called by:
 29296 ;;		_SYSTEM_Initialize
 29297 ;; This function uses a reentrant model
 29298 ;;
 29299                           
 29300                           	psect	text115
 29301  01AC66                     __ptext115:
 29302                           	opt callstack 0
 29303  01AC66                     _TMR5_Initialize:
 29304                           	opt callstack 13
 29305                           
 29306                           ;mcc_generated_files/tmr5.c: 74:  T5GCON = 0x00;
 29307                           
 29308                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29309                           ;incstack = 0
 29310  01AC66  6A9B               	clrf	155,c	;volatile
 29311                           
 29312                           ;mcc_generated_files/tmr5.c: 77:  T5GATE = 0x00;
 29313  01AC68  6A9C               	clrf	156,c	;volatile
 29314                           
 29315                           ;mcc_generated_files/tmr5.c: 80:  T5CLK = 0x01;
 29316  01AC6A  0E01               	movlw	1
 29317  01AC6C  6E9D               	movwf	157,c	;volatile
 29318                           
 29319                           ;mcc_generated_files/tmr5.c: 83:  TMR5H = 0x63;
 29320  01AC6E  0E63               	movlw	99
 29321  01AC70  6E99               	movwf	153,c	;volatile
 29322                           
 29323                           ;mcc_generated_files/tmr5.c: 86:  TMR5L = 0xC0;
 29324  01AC72  0EC0               	movlw	192
 29325  01AC74  6E98               	movwf	152,c	;volatile
 29326                           
 29327                           ;mcc_generated_files/tmr5.c: 89:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 29328  01AC76  5098               	movf	152,w,c	;volatile
 29329  01AC78  006F FE64  F026    	movff	16281,btemp	;volatile
 29330  01AC7E  6A27               	clrf	(btemp+1)^0,c
 29331  01AC80  0060  F098  F027   	movff	btemp,btemp+1
 29332  01AC86  6A26               	clrf	btemp^0,c
 29333  01AC88  1026               	iorwf	btemp^0,w,c
 29334  01AC8A  6E16               	movwf	_timer5ReloadVal^0,c	;volatile
 29335  01AC8C  5027               	movf	(btemp+1)^0,w,c
 29336  01AC8E  6E17               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 29337                           
 29338                           ;mcc_generated_files/tmr5.c: 92:  PIR8bits.TMR5IF = 0;
 29339  01AC90  0139               	movlb	57	; () banked
 29340  01AC92  9DA8               	bcf	168,6,b	;volatile
 29341                           
 29342                           ; BSR set to: 57
 29343                           ;mcc_generated_files/tmr5.c: 95:  PIE8bits.TMR5IE = 1;
 29344  01AC94  8D98               	bsf	152,6,b	;volatile
 29345                           
 29346                           ; BSR set to: 57
 29347                           ;mcc_generated_files/tmr5.c: 98:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 29348  01AC96  0E28               	movlw	low _TMR5_DefaultInterruptHandler
 29349  01AC98  6EE6               	movwf	postinc1,c
 29350  01AC9A  0EAF               	movlw	high _TMR5_DefaultInterruptHandler
 29351  01AC9C  6EE6               	movwf	postinc1,c
 29352  01AC9E  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 29353  01ACA0  6EE6               	movwf	postinc1,c
 29354  01ACA2  ECA1  F0D9         	call	_TMR5_SetInterruptHandler	;wreg free
 29355                           
 29356                           ;mcc_generated_files/tmr5.c: 101:  T5CON = 0x31;
 29357  01ACA6  0E31               	movlw	49
 29358  01ACA8  6E9A               	movwf	154,c	;volatile
 29359                           
 29360                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29361  01ACAA  0012               	return		;funcret
 29362  01ACAC                     __end_of_TMR5_Initialize:
 29363                           	opt callstack 0
 29364                           
 29365 ;; *************** function _TMR5_SetInterruptHandler *****************
 29366 ;; Defined at:
 29367 ;;		line 192 in file "mcc_generated_files/tmr5.c"
 29368 ;; Parameters:    Size  Location     Type
 29369 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29370 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 29371 ;; Auto vars:     Size  Location     Type
 29372 ;;		None
 29373 ;; Return value:  Size  Location     Type
 29374 ;;                  1  [STACK] void 
 29375 ;; Registers used:
 29376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29377 ;; Tracked objects:
 29378 ;;		On entry : 3F/39
 29379 ;;		On exit  : 0/0
 29380 ;;		Unchanged: 0/0
 29381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29386 ;;Total ram usage:        0 bytes
 29387 ;; Hardware stack levels used:    1
 29388 ;; Hardware stack levels required when called:   15
 29389 ;; This function calls:
 29390 ;;		Nothing
 29391 ;; This function is called by:
 29392 ;;		_TMR5_Initialize
 29393 ;; This function uses a reentrant model
 29394 ;;
 29395                           
 29396                           	psect	text116
 29397  01B342                     __ptext116:
 29398                           	opt callstack 0
 29399  01B342                     _TMR5_SetInterruptHandler:
 29400                           	opt callstack 13
 29401                           
 29402                           ;mcc_generated_files/tmr5.c: 192: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 193: {;mcc_generated_files/tmr5.c: 194:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 29403                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29404                           
 29405                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29406                           ;incstack = 0
 29407  01B342  50E1               	movf	fsr1l,w,c
 29408  01B344  0FFD               	addlw	-3
 29409  01B346  6ED9               	movwf	fsr2l,c
 29410  01B348  50E2               	movf	fsr1h,w,c
 29411  01B34A  6EDA               	movwf	fsr2h,c
 29412  01B34C  0EFF               	movlw	255
 29413  01B34E  22DA               	addwfc	fsr2h,f,c
 29414  01B350  006F FF78  F09D    	movff	postinc2,_TMR5_InterruptHandler
 29415  01B356  006F FF78  F09E    	movff	postinc2,_TMR5_InterruptHandler+1
 29416  01B35C  006F FF74  F09F    	movff	postdec2,_TMR5_InterruptHandler+2
 29417                           
 29418                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29419  01B362  52E5               	movf	postdec1,f,c
 29420  01B364  52E5               	movf	postdec1,f,c
 29421  01B366  52E5               	movf	postdec1,f,c
 29422  01B368  0012               	return		;funcret
 29423  01B36A                     __end_of_TMR5_SetInterruptHandler:
 29424                           	opt callstack 0
 29425                           
 29426 ;; *************** function _TMR3_Initialize *****************
 29427 ;; Defined at:
 29428 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 29429 ;; Parameters:    Size  Location     Type
 29430 ;;		None
 29431 ;; Auto vars:     Size  Location     Type
 29432 ;;		None
 29433 ;; Return value:  Size  Location     Type
 29434 ;;                  1  [STACK] void 
 29435 ;; Registers used:
 29436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29437 ;; Tracked objects:
 29438 ;;		On entry : 0/39
 29439 ;;		On exit  : 0/0
 29440 ;;		Unchanged: 0/0
 29441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29446 ;;Total ram usage:        0 bytes
 29447 ;; Hardware stack levels used:    1
 29448 ;; Hardware stack levels required when called:   16
 29449 ;; This function calls:
 29450 ;;		_TMR3_SetInterruptHandler
 29451 ;; This function is called by:
 29452 ;;		_SYSTEM_Initialize
 29453 ;; This function uses a reentrant model
 29454 ;;
 29455                           
 29456                           	psect	text117
 29457  01ACAC                     __ptext117:
 29458                           	opt callstack 0
 29459  01ACAC                     _TMR3_Initialize:
 29460                           	opt callstack 13
 29461                           
 29462                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 29463                           
 29464                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29465                           ;incstack = 0
 29466  01ACAC  6AA7               	clrf	167,c	;volatile
 29467                           
 29468                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 29469  01ACAE  6AA8               	clrf	168,c	;volatile
 29470                           
 29471                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 29472  01ACB0  0E01               	movlw	1
 29473  01ACB2  6EA9               	movwf	169,c	;volatile
 29474                           
 29475                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 29476  01ACB4  0E3C               	movlw	60
 29477  01ACB6  6EA5               	movwf	165,c	;volatile
 29478                           
 29479                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 29480  01ACB8  0EB0               	movlw	176
 29481  01ACBA  6EA4               	movwf	164,c	;volatile
 29482                           
 29483                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 29484  01ACBC  50A4               	movf	164,w,c	;volatile
 29485  01ACBE  006F FE94  F026    	movff	16293,btemp	;volatile
 29486  01ACC4  6A27               	clrf	(btemp+1)^0,c
 29487  01ACC6  0060  F098  F027   	movff	btemp,btemp+1
 29488  01ACCC  6A26               	clrf	btemp^0,c
 29489  01ACCE  1026               	iorwf	btemp^0,w,c
 29490  01ACD0  6E12               	movwf	_timer3ReloadVal^0,c	;volatile
 29491  01ACD2  5027               	movf	(btemp+1)^0,w,c
 29492  01ACD4  6E13               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 29493                           
 29494                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 29495  01ACD6  0139               	movlb	57	; () banked
 29496  01ACD8  9DA6               	bcf	166,6,b	;volatile
 29497                           
 29498                           ; BSR set to: 57
 29499                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 29500  01ACDA  8D96               	bsf	150,6,b	;volatile
 29501                           
 29502                           ; BSR set to: 57
 29503                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 29504  01ACDC  0E70               	movlw	low _TMR3_DefaultInterruptHandler
 29505  01ACDE  6EE6               	movwf	postinc1,c
 29506  01ACE0  0EB8               	movlw	high _TMR3_DefaultInterruptHandler
 29507  01ACE2  6EE6               	movwf	postinc1,c
 29508  01ACE4  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 29509  01ACE6  6EE6               	movwf	postinc1,c
 29510  01ACE8  ECB5  F0D9         	call	_TMR3_SetInterruptHandler	;wreg free
 29511                           
 29512                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 29513  01ACEC  0E31               	movlw	49
 29514  01ACEE  6EA6               	movwf	166,c	;volatile
 29515                           
 29516                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29517  01ACF0  0012               	return		;funcret
 29518  01ACF2                     __end_of_TMR3_Initialize:
 29519                           	opt callstack 0
 29520                           
 29521 ;; *************** function _TMR3_SetInterruptHandler *****************
 29522 ;; Defined at:
 29523 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 29524 ;; Parameters:    Size  Location     Type
 29525 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29526 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 29527 ;; Auto vars:     Size  Location     Type
 29528 ;;		None
 29529 ;; Return value:  Size  Location     Type
 29530 ;;                  1  [STACK] void 
 29531 ;; Registers used:
 29532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29533 ;; Tracked objects:
 29534 ;;		On entry : 0/1
 29535 ;;		On exit  : 0/0
 29536 ;;		Unchanged: 0/0
 29537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29542 ;;Total ram usage:        0 bytes
 29543 ;; Hardware stack levels used:    1
 29544 ;; Hardware stack levels required when called:   15
 29545 ;; This function calls:
 29546 ;;		Nothing
 29547 ;; This function is called by:
 29548 ;;		_TMR3_Initialize
 29549 ;;		_init_bsoc
 29550 ;; This function uses a reentrant model
 29551 ;;
 29552                           
 29553                           	psect	text118
 29554  01B36A                     __ptext118:
 29555                           	opt callstack 0
 29556  01B36A                     _TMR3_SetInterruptHandler:
 29557                           	opt callstack 14
 29558                           
 29559                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 29560                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29561                           
 29562                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29563                           ;incstack = 0
 29564  01B36A  50E1               	movf	fsr1l,w,c
 29565  01B36C  0FFD               	addlw	-3
 29566  01B36E  6ED9               	movwf	fsr2l,c
 29567  01B370  50E2               	movf	fsr1h,w,c
 29568  01B372  6EDA               	movwf	fsr2h,c
 29569  01B374  0EFF               	movlw	255
 29570  01B376  22DA               	addwfc	fsr2h,f,c
 29571  01B378  006F FF78  F09A    	movff	postinc2,_TMR3_InterruptHandler
 29572  01B37E  006F FF78  F09B    	movff	postinc2,_TMR3_InterruptHandler+1
 29573  01B384  006F FF74  F09C    	movff	postdec2,_TMR3_InterruptHandler+2
 29574                           
 29575                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29576  01B38A  52E5               	movf	postdec1,f,c
 29577  01B38C  52E5               	movf	postdec1,f,c
 29578  01B38E  52E5               	movf	postdec1,f,c
 29579  01B390  0012               	return		;funcret
 29580  01B392                     __end_of_TMR3_SetInterruptHandler:
 29581                           	opt callstack 0
 29582                           
 29583 ;; *************** function _TMR2_Initialize *****************
 29584 ;; Defined at:
 29585 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 29586 ;; Parameters:    Size  Location     Type
 29587 ;;		None
 29588 ;; Auto vars:     Size  Location     Type
 29589 ;;		None
 29590 ;; Return value:  Size  Location     Type
 29591 ;;                  1  [STACK] void 
 29592 ;; Registers used:
 29593 ;;		wreg, status,2
 29594 ;; Tracked objects:
 29595 ;;		On entry : 0/3E
 29596 ;;		On exit  : 3F/39
 29597 ;;		Unchanged: 0/0
 29598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29603 ;;Total ram usage:        0 bytes
 29604 ;; Hardware stack levels used:    1
 29605 ;; Hardware stack levels required when called:   15
 29606 ;; This function calls:
 29607 ;;		Nothing
 29608 ;; This function is called by:
 29609 ;;		_SYSTEM_Initialize
 29610 ;; This function uses a reentrant model
 29611 ;;
 29612                           
 29613                           	psect	text119
 29614  01B702                     __ptext119:
 29615                           	opt callstack 0
 29616  01B702                     _TMR2_Initialize:
 29617                           	opt callstack 14
 29618                           
 29619                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 29620                           
 29621                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29622                           ;incstack = 0
 29623  01B702  0E01               	movlw	1
 29624  01B704  6EAE               	movwf	174,c	;volatile
 29625                           
 29626                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 29627  01B706  6AAD               	clrf	173,c	;volatile
 29628                           
 29629                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 29630  01B708  6AAF               	clrf	175,c	;volatile
 29631                           
 29632                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 29633  01B70A  0E63               	movlw	99
 29634  01B70C  6EAB               	movwf	171,c	;volatile
 29635                           
 29636                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 29637  01B70E  6AAA               	clrf	170,c	;volatile
 29638                           
 29639                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 29640  01B710  0139               	movlb	57	; () banked
 29641  01B712  95A4               	bcf	164,2,b	;volatile
 29642                           
 29643                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 29644  01B714  0EC0               	movlw	192
 29645  01B716  6EAC               	movwf	172,c	;volatile
 29646                           
 29647                           ; BSR set to: 57
 29648                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29649  01B718  0012               	return		;funcret
 29650  01B71A                     __end_of_TMR2_Initialize:
 29651                           	opt callstack 0
 29652                           
 29653 ;; *************** function _SPI1_Initialize *****************
 29654 ;; Defined at:
 29655 ;;		line 64 in file "mcc_generated_files/spi1.c"
 29656 ;; Parameters:    Size  Location     Type
 29657 ;;		None
 29658 ;; Auto vars:     Size  Location     Type
 29659 ;;		None
 29660 ;; Return value:  Size  Location     Type
 29661 ;;                  1  [STACK] void 
 29662 ;; Registers used:
 29663 ;;		wreg, status,2
 29664 ;; Tracked objects:
 29665 ;;		On entry : 3F/39
 29666 ;;		On exit  : 3F/3D
 29667 ;;		Unchanged: 0/0
 29668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29673 ;;Total ram usage:        0 bytes
 29674 ;; Hardware stack levels used:    1
 29675 ;; Hardware stack levels required when called:   15
 29676 ;; This function calls:
 29677 ;;		Nothing
 29678 ;; This function is called by:
 29679 ;;		_SYSTEM_Initialize
 29680 ;; This function uses a reentrant model
 29681 ;;
 29682                           
 29683                           	psect	text120
 29684  01B71A                     __ptext120:
 29685                           	opt callstack 0
 29686  01B71A                     _SPI1_Initialize:
 29687                           	opt callstack 14
 29688                           
 29689                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 29690                           
 29691                           ; BSR set to: 57
 29692                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29693                           ;incstack = 0
 29694  01B71A  0E40               	movlw	64
 29695  01B71C  013D               	movlb	61	; () banked
 29696  01B71E  6F15               	movwf	21,b	;volatile
 29697                           
 29698                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 29699  01B720  0E03               	movlw	3
 29700  01B722  6F16               	movwf	22,b	;volatile
 29701                           
 29702                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 29703  01B724  0E4F               	movlw	79
 29704  01B726  6F19               	movwf	25,b	;volatile
 29705                           
 29706                           ; BSR set to: 61
 29707                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 29708  01B728  6B1C               	clrf	28,b	;volatile
 29709                           
 29710                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 29711  01B72A  0E83               	movlw	131
 29712  01B72C  6F14               	movwf	20,b	;volatile
 29713                           
 29714                           ; BSR set to: 61
 29715                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29716  01B72E  0012               	return		;funcret
 29717  01B730                     __end_of_SPI1_Initialize:
 29718                           	opt callstack 0
 29719                           
 29720 ;; *************** function _PWM8_Initialize *****************
 29721 ;; Defined at:
 29722 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 29723 ;; Parameters:    Size  Location     Type
 29724 ;;		None
 29725 ;; Auto vars:     Size  Location     Type
 29726 ;;		None
 29727 ;; Return value:  Size  Location     Type
 29728 ;;                  1  [STACK] void 
 29729 ;; Registers used:
 29730 ;;		wreg, status,2
 29731 ;; Tracked objects:
 29732 ;;		On entry : 3F/39
 29733 ;;		On exit  : 3F/3F
 29734 ;;		Unchanged: 0/0
 29735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29740 ;;Total ram usage:        0 bytes
 29741 ;; Hardware stack levels used:    1
 29742 ;; Hardware stack levels required when called:   15
 29743 ;; This function calls:
 29744 ;;		Nothing
 29745 ;; This function is called by:
 29746 ;;		_SYSTEM_Initialize
 29747 ;; This function uses a reentrant model
 29748 ;;
 29749                           
 29750                           	psect	text121
 29751  01B730                     __ptext121:
 29752                           	opt callstack 0
 29753  01B730                     _PWM8_Initialize:
 29754                           	opt callstack 14
 29755                           
 29756                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 29757                           
 29758                           ; BSR set to: 61
 29759                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29760                           ;incstack = 0
 29761  01B730  0E80               	movlw	128
 29762  01B732  6E62               	movwf	98,c	;volatile
 29763                           
 29764                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 29765  01B734  6A61               	clrf	97,c	;volatile
 29766                           
 29767                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 29768  01B736  0E40               	movlw	64
 29769  01B738  6E60               	movwf	96,c	;volatile
 29770                           
 29771                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 29772  01B73A  013F               	movlb	63	; () banked
 29773  01B73C  515F               	movf	95,w,b	;volatile
 29774  01B73E  0B3F               	andlw	-193
 29775  01B740  0940               	iorlw	64
 29776  01B742  6F5F               	movwf	95,b	;volatile
 29777                           
 29778                           ; BSR set to: 63
 29779                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29780  01B744  0012               	return		;funcret
 29781  01B746                     __end_of_PWM8_Initialize:
 29782                           	opt callstack 0
 29783                           
 29784 ;; *************** function _PMD_Initialize *****************
 29785 ;; Defined at:
 29786 ;;		line 90 in file "mcc_generated_files/mcc.c"
 29787 ;; Parameters:    Size  Location     Type
 29788 ;;		None
 29789 ;; Auto vars:     Size  Location     Type
 29790 ;;		None
 29791 ;; Return value:  Size  Location     Type
 29792 ;;                  1  [STACK] void 
 29793 ;; Registers used:
 29794 ;;		None
 29795 ;; Tracked objects:
 29796 ;;		On entry : 3F/39
 29797 ;;		On exit  : 3F/39
 29798 ;;		Unchanged: 0/0
 29799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29804 ;;Total ram usage:        0 bytes
 29805 ;; Hardware stack levels used:    1
 29806 ;; Hardware stack levels required when called:   15
 29807 ;; This function calls:
 29808 ;;		Nothing
 29809 ;; This function is called by:
 29810 ;;		_SYSTEM_Initialize
 29811 ;; This function uses a reentrant model
 29812 ;;
 29813                           
 29814                           	psect	text122
 29815  01B75C                     __ptext122:
 29816                           	opt callstack 0
 29817  01B75C                     _PMD_Initialize:
 29818                           	opt callstack 14
 29819                           
 29820                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 29821                           
 29822                           ; BSR set to: 63
 29823                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29824                           ;incstack = 0
 29825  01B75C  0139               	movlb	57	; () banked
 29826  01B75E  6BC0               	clrf	192,b	;volatile
 29827                           
 29828                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 29829  01B760  6BC1               	clrf	193,b	;volatile
 29830                           
 29831                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 29832  01B762  6BC2               	clrf	194,b	;volatile
 29833                           
 29834                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 29835  01B764  6BC3               	clrf	195,b	;volatile
 29836                           
 29837                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 29838  01B766  6BC4               	clrf	196,b	;volatile
 29839                           
 29840                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 29841  01B768  6BC5               	clrf	197,b	;volatile
 29842                           
 29843                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 29844  01B76A  6BC6               	clrf	198,b	;volatile
 29845                           
 29846                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 29847  01B76C  6BC7               	clrf	199,b	;volatile
 29848                           
 29849                           ; BSR set to: 57
 29850                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 29851  01B76E  0012               	return		;funcret
 29852  01B770                     __end_of_PMD_Initialize:
 29853                           	opt callstack 0
 29854                           
 29855 ;; *************** function _PIN_MANAGER_Initialize *****************
 29856 ;; Defined at:
 29857 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 29858 ;; Parameters:    Size  Location     Type
 29859 ;;		None
 29860 ;; Auto vars:     Size  Location     Type
 29861 ;;		None
 29862 ;; Return value:  Size  Location     Type
 29863 ;;                  1  [STACK] void 
 29864 ;; Registers used:
 29865 ;;		wreg, status,2
 29866 ;; Tracked objects:
 29867 ;;		On entry : 3F/39
 29868 ;;		On exit  : 3F/3A
 29869 ;;		Unchanged: 0/0
 29870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29875 ;;Total ram usage:        0 bytes
 29876 ;; Hardware stack levels used:    1
 29877 ;; Hardware stack levels required when called:   15
 29878 ;; This function calls:
 29879 ;;		Nothing
 29880 ;; This function is called by:
 29881 ;;		_SYSTEM_Initialize
 29882 ;; This function uses a reentrant model
 29883 ;;
 29884                           
 29885                           	psect	text123
 29886  01A188                     __ptext123:
 29887                           	opt callstack 0
 29888  01A188                     _PIN_MANAGER_Initialize:
 29889                           	opt callstack 14
 29890                           
 29891                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 29892                           
 29893                           ; BSR set to: 57
 29894                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29895                           ;incstack = 0
 29896  01A188  0E07               	movlw	7
 29897  01A18A  6EBE               	movwf	190,c	;volatile
 29898                           
 29899                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 29900  01A18C  0E80               	movlw	128
 29901  01A18E  6EBD               	movwf	189,c	;volatile
 29902                           
 29903                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 29904  01A190  6ABA               	clrf	186,c	;volatile
 29905                           
 29906                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x20;
 29907  01A192  0E20               	movlw	32
 29908  01A194  6EBF               	movwf	191,c	;volatile
 29909                           
 29910                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 29911  01A196  6ABB               	clrf	187,c	;volatile
 29912                           
 29913                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 29914  01A198  0E07               	movlw	7
 29915  01A19A  6EBC               	movwf	188,c	;volatile
 29916                           
 29917                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 29918  01A19C  6AC6               	clrf	198,c	;volatile
 29919                           
 29920                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 29921  01A19E  0E0F               	movlw	15
 29922  01A1A0  6EC7               	movwf	199,c	;volatile
 29923                           
 29924                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 29925  01A1A2  68C2               	setf	194,c	;volatile
 29926                           
 29927                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 29928  01A1A4  0EBF               	movlw	191
 29929  01A1A6  6EC3               	movwf	195,c	;volatile
 29930                           
 29931                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 29932  01A1A8  0E90               	movlw	144
 29933  01A1AA  6EC4               	movwf	196,c	;volatile
 29934                           
 29935                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 29936  01A1AC  0E0C               	movlw	12
 29937  01A1AE  6EC5               	movwf	197,c	;volatile
 29938                           
 29939                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 29940  01A1B0  013A               	movlb	58	; () banked
 29941  01A1B2  6B70               	clrf	112,b	;volatile
 29942                           
 29943                           ; BSR set to: 58
 29944                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 29945  01A1B4  6B60               	clrf	96,b	;volatile
 29946                           
 29947                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 29948  01A1B6  0E3C               	movlw	60
 29949  01A1B8  6F50               	movwf	80,b	;volatile
 29950                           
 29951                           ; BSR set to: 58
 29952                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 29953  01A1BA  6B80               	clrf	128,b	;volatile
 29954                           
 29955                           ; BSR set to: 58
 29956                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 29957  01A1BC  6B90               	clrf	144,b	;volatile
 29958                           
 29959                           ; BSR set to: 58
 29960                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 29961  01A1BE  6940               	setf	64,b	;volatile
 29962                           
 29963                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 29964  01A1C0  0E0C               	movlw	12
 29965  01A1C2  6F71               	movwf	113,b	;volatile
 29966                           
 29967                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 29968  01A1C4  0E0F               	movlw	15
 29969  01A1C6  6F91               	movwf	145,b	;volatile
 29970                           
 29971                           ; BSR set to: 58
 29972                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 29973  01A1C8  6B81               	clrf	129,b	;volatile
 29974                           
 29975                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 29976  01A1CA  0E83               	movlw	131
 29977  01A1CC  6F51               	movwf	81,b	;volatile
 29978                           
 29979                           ; BSR set to: 58
 29980                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 29981  01A1CE  6B41               	clrf	65,b	;volatile
 29982                           
 29983                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 29984  01A1D0  0E97               	movlw	151
 29985  01A1D2  6F61               	movwf	97,b	;volatile
 29986                           
 29987                           ; BSR set to: 58
 29988                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 29989  01A1D4  6B82               	clrf	130,b	;volatile
 29990                           
 29991                           ; BSR set to: 58
 29992                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 29993  01A1D6  6B92               	clrf	146,b	;volatile
 29994                           
 29995                           ; BSR set to: 58
 29996                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 29997  01A1D8  6B42               	clrf	66,b	;volatile
 29998                           
 29999                           ; BSR set to: 58
 30000                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 30001  01A1DA  6B52               	clrf	82,b	;volatile
 30002                           
 30003                           ; BSR set to: 58
 30004                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 30005  01A1DC  6B62               	clrf	98,b	;volatile
 30006                           
 30007                           ; BSR set to: 58
 30008                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 30009  01A1DE  6B72               	clrf	114,b	;volatile
 30010                           
 30011                           ; BSR set to: 58
 30012                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 30013  01A1E0  6943               	setf	67,b	;volatile
 30014                           
 30015                           ; BSR set to: 58
 30016                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 30017  01A1E2  6953               	setf	83,b	;volatile
 30018                           
 30019                           ; BSR set to: 58
 30020                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 30021  01A1E4  6963               	setf	99,b	;volatile
 30022                           
 30023                           ; BSR set to: 58
 30024                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 30025  01A1E6  6973               	setf	115,b	;volatile
 30026                           
 30027                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 30028  01A1E8  0E07               	movlw	7
 30029  01A1EA  6F83               	movwf	131,b	;volatile
 30030                           
 30031                           ; BSR set to: 58
 30032                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 30033  01A1EC  6993               	setf	147,b	;volatile
 30034                           
 30035                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 30036  01A1EE  0E0F               	movlw	15
 30037  01A1F0  6FE8               	movwf	232,b	;volatile
 30038                           
 30039                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 30040  01A1F2  0E13               	movlw	19
 30041  01A1F4  6FDE               	movwf	222,b	;volatile
 30042                           
 30043                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 30044  01A1F6  0E16               	movlw	22
 30045  01A1F8  6F0E               	movwf	14,b	;volatile
 30046                           
 30047                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 30048  01A1FA  0E1E               	movlw	30
 30049  01A1FC  6F13               	movwf	19,b	;volatile
 30050                           
 30051                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 30052  01A1FE  0E08               	movlw	8
 30053  01A200  6FC0               	movwf	192,b	;volatile
 30054                           
 30055                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 30056  01A202  0E10               	movlw	16
 30057  01A204  6F19               	movwf	25,b	;volatile
 30058                           
 30059                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 30060  01A206  0E09               	movlw	9
 30061  01A208  6FC1               	movwf	193,b	;volatile
 30062                           
 30063                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 30064  01A20A  0E1F               	movlw	31
 30065  01A20C  6F15               	movwf	21,b	;volatile
 30066                           
 30067                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 30068  01A20E  0E13               	movlw	19
 30069  01A210  6F16               	movwf	22,b	;volatile
 30070                           
 30071                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 30072  01A212  0E17               	movlw	23
 30073  01A214  6FE5               	movwf	229,b	;volatile
 30074                           
 30075                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 30076  01A216  0E14               	movlw	20
 30077  01A218  6FDF               	movwf	223,b	;volatile
 30078                           
 30079                           ; BSR set to: 58
 30080                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 30081  01A21A  0012               	return		;funcret
 30082  01A21C                     __end_of_PIN_MANAGER_Initialize:
 30083                           	opt callstack 0
 30084                           
 30085 ;; *************** function _OSCILLATOR_Initialize *****************
 30086 ;; Defined at:
 30087 ;;		line 72 in file "mcc_generated_files/mcc.c"
 30088 ;; Parameters:    Size  Location     Type
 30089 ;;		None
 30090 ;; Auto vars:     Size  Location     Type
 30091 ;;		None
 30092 ;; Return value:  Size  Location     Type
 30093 ;;                  1  [STACK] void 
 30094 ;; Registers used:
 30095 ;;		wreg, status,2
 30096 ;; Tracked objects:
 30097 ;;		On entry : 3F/3A
 30098 ;;		On exit  : 3F/39
 30099 ;;		Unchanged: 0/0
 30100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30105 ;;Total ram usage:        0 bytes
 30106 ;; Hardware stack levels used:    1
 30107 ;; Hardware stack levels required when called:   15
 30108 ;; This function calls:
 30109 ;;		Nothing
 30110 ;; This function is called by:
 30111 ;;		_SYSTEM_Initialize
 30112 ;; This function uses a reentrant model
 30113 ;;
 30114                           
 30115                           	psect	text124
 30116  01B746                     __ptext124:
 30117                           	opt callstack 0
 30118  01B746                     _OSCILLATOR_Initialize:
 30119                           	opt callstack 14
 30120                           
 30121                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 30122                           
 30123                           ; BSR set to: 58
 30124                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30125                           ;incstack = 0
 30126  01B746  0E20               	movlw	32
 30127  01B748  0139               	movlb	57	; () banked
 30128  01B74A  6FD9               	movwf	217,b	;volatile
 30129                           
 30130                           ; BSR set to: 57
 30131                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 30132  01B74C  6BDB               	clrf	219,b	;volatile
 30133                           
 30134                           ; BSR set to: 57
 30135                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 30136  01B74E  6BDD               	clrf	221,b	;volatile
 30137                           
 30138                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 30139  01B750  0E02               	movlw	2
 30140  01B752  6FDF               	movwf	223,b	;volatile
 30141                           
 30142                           ; BSR set to: 57
 30143                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 30144  01B754  6BDE               	clrf	222,b	;volatile
 30145  01B756                     l169:
 30146                           
 30147                           ; BSR set to: 57
 30148                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 30149  01B756  B1DC               	btfsc	220,0,b	;volatile
 30150  01B758  0012               	return	
 30151  01B75A  D7FD               	goto	l169
 30152  01B75C                     __end_of_OSCILLATOR_Initialize:
 30153                           	opt callstack 0
 30154                           
 30155 ;; *************** function _INTERRUPT_Initialize *****************
 30156 ;; Defined at:
 30157 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 30158 ;; Parameters:    Size  Location     Type
 30159 ;;		None
 30160 ;; Auto vars:     Size  Location     Type
 30161 ;;  state           1  [STACK] _Bool 
 30162 ;; Return value:  Size  Location     Type
 30163 ;;                  1  [STACK] void 
 30164 ;; Registers used:
 30165 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 30166 ;; Tracked objects:
 30167 ;;		On entry : 0/0
 30168 ;;		On exit  : 3F/39
 30169 ;;		Unchanged: 0/0
 30170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30175 ;;Total ram usage:        0 bytes
 30176 ;; Hardware stack levels used:    1
 30177 ;; Hardware stack levels required when called:   15
 30178 ;; This function calls:
 30179 ;;		Nothing
 30180 ;; This function is called by:
 30181 ;;		_SYSTEM_Initialize
 30182 ;; This function uses a reentrant model
 30183 ;;
 30184                           
 30185                           	psect	text125
 30186  01A71E                     __ptext125:
 30187                           	opt callstack 0
 30188  01A71E                     _INTERRUPT_Initialize:
 30189                           	opt callstack 0
 30190                           
 30191                           ; BSR set to: 57
 30192                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30193  01A71E  52E6               	movf	postinc1,f,c
 30194                           
 30195                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 30196                           
 30197                           ;incstack = 0
 30198  01A720  8AD2               	bsf	210,5,c	;volatile
 30199                           
 30200                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 30201  01A722  AED2               	btfss	16338,7,c	;volatile
 30202  01A724  D003               	goto	u9200
 30203  01A726  6A31               	clrf	(btemp+11)^0,c
 30204  01A728  2A31               	incf	(btemp+11)^0,f,c
 30205  01A72A  D001               	goto	u9218
 30206  01A72C                     u9200:
 30207  01A72C  6A31               	clrf	(btemp+11)^0,c
 30208  01A72E                     u9218:
 30209                           
 30210                           ;stkvar	_state @ sp[(-1)+0]
 30211  01A72E  0EFF               	movlw	-1
 30212  01A730  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 30213                           
 30214                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 30215  01A736  9ED2               	bcf	16338,7,c	;volatile
 30216                           
 30217                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 30218  01A738  0E55               	movlw	85
 30219  01A73A  6ED4               	movwf	212,c	;volatile
 30220                           
 30221                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 30222  01A73C  0EAA               	movlw	170
 30223  01A73E  6ED4               	movwf	212,c	;volatile
 30224                           
 30225                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 30226  01A740  90D4               	bcf	212,0,c	;volatile
 30227                           
 30228                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 30229  01A742  0138               	movlb	56	; () banked
 30230  01A744  6B9F               	clrf	159,b	;volatile
 30231                           
 30232                           ; BSR set to: 56
 30233                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 30234  01A746  6B9E               	clrf	158,b	;volatile
 30235                           
 30236                           ; BSR set to: 56
 30237                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 30238  01A748  0E08               	movlw	8
 30239  01A74A  6F9D               	movwf	157,b	;volatile
 30240                           
 30241                           ; BSR set to: 56
 30242                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 30243  01A74C  0E55               	movlw	85
 30244  01A74E  6ED4               	movwf	212,c	;volatile
 30245                           
 30246                           ; BSR set to: 56
 30247                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 30248  01A750  0EAA               	movlw	170
 30249  01A752  6ED4               	movwf	212,c	;volatile
 30250                           
 30251                           ; BSR set to: 56
 30252                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 30253  01A754  80D4               	bsf	212,0,c	;volatile
 30254                           
 30255                           ; BSR set to: 56
 30256                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 30257                           ;stkvar	_state @ sp[(-1)+0]
 30258  01A756  0EFF               	movlw	-1
 30259  01A758  B0E3               	btfsc	plusw1,0,c
 30260  01A75A  D002               	bra	u9225
 30261  01A75C  9ED2               	bcf	16338,7,c	;volatile
 30262  01A75E  D001               	bra	u9226
 30263  01A760                     u9225:
 30264  01A760  8ED2               	bsf	16338,7,c	;volatile
 30265  01A762                     u9226:
 30266                           
 30267                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 30268  01A762  0139               	movlb	57	; () banked
 30269  01A764  8782               	bsf	130,3,b	;volatile
 30270                           
 30271                           ; BSR set to: 57
 30272                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 30273  01A766  8382               	bsf	130,1,b	;volatile
 30274                           
 30275                           ; BSR set to: 57
 30276                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 30277  01A768  8182               	bsf	130,0,b	;volatile
 30278                           
 30279                           ; BSR set to: 57
 30280                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 30281  01A76A  8582               	bsf	130,2,b	;volatile
 30282                           
 30283                           ; BSR set to: 57
 30284                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 30285  01A76C  8786               	bsf	134,3,b	;volatile
 30286                           
 30287                           ; BSR set to: 57
 30288                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 30289  01A76E  8586               	bsf	134,2,b	;volatile
 30290                           
 30291                           ; BSR set to: 57
 30292                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 30293  01A770  8783               	bsf	131,3,b	;volatile
 30294                           
 30295                           ; BSR set to: 57
 30296                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 30297  01A772  8181               	bsf	129,0,b	;volatile
 30298                           
 30299                           ; BSR set to: 57
 30300                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 30301  01A774  9185               	bcf	133,0,b	;volatile
 30302                           
 30303                           ; BSR set to: 57
 30304                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 30305  01A776  8189               	bsf	137,0,b	;volatile
 30306                           
 30307                           ; BSR set to: 57
 30308                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 30309  01A778  9D88               	bcf	136,6,b	;volatile
 30310                           
 30311                           ; BSR set to: 57
 30312                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.ADIP = 1;
 30313  01A77A  8581               	bsf	129,2,b	;volatile
 30314                           
 30315                           ; BSR set to: 57
 30316                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADTIP = 1;
 30317  01A77C  8781               	bsf	129,3,b	;volatile
 30318                           
 30319                           ; BSR set to: 57
 30320                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR6bits.TMR3IP = 0;
 30321  01A77E  9D86               	bcf	134,6,b	;volatile
 30322                           
 30323                           ; BSR set to: 57
 30324                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 30325  01A780  52E5               	movf	postdec1,f,c
 30326  01A782  0012               	return		;funcret
 30327  01A784                     __end_of_INTERRUPT_Initialize:
 30328                           	opt callstack 0
 30329                           
 30330 ;; *************** function _FVR_Initialize *****************
 30331 ;; Defined at:
 30332 ;;		line 58 in file "mcc_generated_files/fvr.c"
 30333 ;; Parameters:    Size  Location     Type
 30334 ;;		None
 30335 ;; Auto vars:     Size  Location     Type
 30336 ;;		None
 30337 ;; Return value:  Size  Location     Type
 30338 ;;                  1  [STACK] void 
 30339 ;; Registers used:
 30340 ;;		wreg, status,2
 30341 ;; Tracked objects:
 30342 ;;		On entry : 3F/39
 30343 ;;		On exit  : 3F/3E
 30344 ;;		Unchanged: 0/0
 30345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30350 ;;Total ram usage:        0 bytes
 30351 ;; Hardware stack levels used:    1
 30352 ;; Hardware stack levels required when called:   15
 30353 ;; This function calls:
 30354 ;;		Nothing
 30355 ;; This function is called by:
 30356 ;;		_SYSTEM_Initialize
 30357 ;; This function uses a reentrant model
 30358 ;;
 30359                           
 30360                           	psect	text126
 30361  01B846                     __ptext126:
 30362                           	opt callstack 0
 30363  01B846                     _FVR_Initialize:
 30364                           	opt callstack 14
 30365                           
 30366                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 30367                           
 30368                           ; BSR set to: 57
 30369                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30370                           ;incstack = 0
 30371  01B846  0EAF               	movlw	175
 30372  01B848  013E               	movlb	62	; () banked
 30373  01B84A  6FC1               	movwf	193,b	;volatile
 30374                           
 30375                           ; BSR set to: 62
 30376                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30377  01B84C  0012               	return		;funcret
 30378  01B84E                     __end_of_FVR_Initialize:
 30379                           	opt callstack 0
 30380                           
 30381 ;; *************** function _EXT_INT_Initialize *****************
 30382 ;; Defined at:
 30383 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 30384 ;; Parameters:    Size  Location     Type
 30385 ;;		None
 30386 ;; Auto vars:     Size  Location     Type
 30387 ;;		None
 30388 ;; Return value:  Size  Location     Type
 30389 ;;                  1  [STACK] void 
 30390 ;; Registers used:
 30391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30392 ;; Tracked objects:
 30393 ;;		On entry : 3F/3F
 30394 ;;		On exit  : 3F/39
 30395 ;;		Unchanged: 0/0
 30396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30401 ;;Total ram usage:        0 bytes
 30402 ;; Hardware stack levels used:    1
 30403 ;; Hardware stack levels required when called:   16
 30404 ;; This function calls:
 30405 ;;		_INT0_SetInterruptHandler
 30406 ;;		_INT1_SetInterruptHandler
 30407 ;; This function is called by:
 30408 ;;		_SYSTEM_Initialize
 30409 ;; This function uses a reentrant model
 30410 ;;
 30411                           
 30412                           	psect	text127
 30413  01B000                     __ptext127:
 30414                           	opt callstack 0
 30415  01B000                     _EXT_INT_Initialize:
 30416                           	opt callstack 13
 30417                           
 30418                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 30419                           
 30420                           ; BSR set to: 62
 30421                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30422                           ;incstack = 0
 30423  01B000  0139               	movlb	57	; () banked
 30424  01B002  91A1               	bcf	161,0,b	;volatile
 30425                           
 30426                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 30427  01B004  90D2               	bcf	210,0,c	;volatile
 30428                           
 30429                           ; BSR set to: 57
 30430                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 30431  01B006  0E72               	movlw	low _INT0_DefaultInterruptHandler
 30432  01B008  6EE6               	movwf	postinc1,c
 30433  01B00A  0EB8               	movlw	high _INT0_DefaultInterruptHandler
 30434  01B00C  6EE6               	movwf	postinc1,c
 30435  01B00E  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 30436  01B010  6EE6               	movwf	postinc1,c
 30437  01B012  ECDD  F0D9         	call	_INT0_SetInterruptHandler	;wreg free
 30438                           
 30439                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 30440  01B016  0139               	movlb	57	; () banked
 30441  01B018  8191               	bsf	145,0,b	;volatile
 30442                           
 30443                           ; BSR set to: 57
 30444                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 30445  01B01A  91A5               	bcf	165,0,b	;volatile
 30446                           
 30447                           ; BSR set to: 57
 30448                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 30449  01B01C  92D2               	bcf	210,1,c	;volatile
 30450                           
 30451                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 30452  01B01E  0E6E               	movlw	low _INT1_DefaultInterruptHandler
 30453  01B020  6EE6               	movwf	postinc1,c
 30454  01B022  0EB8               	movlw	high _INT1_DefaultInterruptHandler
 30455  01B024  6EE6               	movwf	postinc1,c
 30456  01B026  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 30457  01B028  6EE6               	movwf	postinc1,c
 30458  01B02A  ECC9  F0D9         	call	_INT1_SetInterruptHandler	;wreg free
 30459                           
 30460                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 30461  01B02E  0139               	movlb	57	; () banked
 30462  01B030  8195               	bsf	149,0,b	;volatile
 30463                           
 30464                           ; BSR set to: 57
 30465                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 30466  01B032  0012               	return		;funcret
 30467  01B034                     __end_of_EXT_INT_Initialize:
 30468                           	opt callstack 0
 30469                           
 30470 ;; *************** function _INT1_SetInterruptHandler *****************
 30471 ;; Defined at:
 30472 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 30473 ;; Parameters:    Size  Location     Type
 30474 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30475 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 30476 ;; Auto vars:     Size  Location     Type
 30477 ;;		None
 30478 ;; Return value:  Size  Location     Type
 30479 ;;                  1  [STACK] void 
 30480 ;; Registers used:
 30481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30482 ;; Tracked objects:
 30483 ;;		On entry : 3F/39
 30484 ;;		On exit  : 0/0
 30485 ;;		Unchanged: 0/0
 30486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30491 ;;Total ram usage:        0 bytes
 30492 ;; Hardware stack levels used:    1
 30493 ;; Hardware stack levels required when called:   15
 30494 ;; This function calls:
 30495 ;;		Nothing
 30496 ;; This function is called by:
 30497 ;;		_EXT_INT_Initialize
 30498 ;;		_start_switch_handler
 30499 ;; This function uses a reentrant model
 30500 ;;
 30501                           
 30502                           	psect	text128
 30503  01B392                     __ptext128:
 30504                           	opt callstack 0
 30505  01B392                     _INT1_SetInterruptHandler:
 30506                           	opt callstack 14
 30507                           
 30508                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 30509                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30510                           
 30511                           ; BSR set to: 57
 30512                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30513                           ;incstack = 0
 30514  01B392  50E1               	movf	fsr1l,w,c
 30515  01B394  0FFD               	addlw	-3
 30516  01B396  6ED9               	movwf	fsr2l,c
 30517  01B398  50E2               	movf	fsr1h,w,c
 30518  01B39A  6EDA               	movwf	fsr2h,c
 30519  01B39C  0EFF               	movlw	255
 30520  01B39E  22DA               	addwfc	fsr2h,f,c
 30521  01B3A0  006F FF78  F004    	movff	postinc2,_INT1_InterruptHandler
 30522  01B3A6  006F FF78  F005    	movff	postinc2,_INT1_InterruptHandler+1
 30523  01B3AC  006F FF74  F006    	movff	postdec2,_INT1_InterruptHandler+2
 30524                           
 30525                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30526  01B3B2  52E5               	movf	postdec1,f,c
 30527  01B3B4  52E5               	movf	postdec1,f,c
 30528  01B3B6  52E5               	movf	postdec1,f,c
 30529  01B3B8  0012               	return		;funcret
 30530  01B3BA                     __end_of_INT1_SetInterruptHandler:
 30531                           	opt callstack 0
 30532                           
 30533 ;; *************** function _INT0_SetInterruptHandler *****************
 30534 ;; Defined at:
 30535 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 30536 ;; Parameters:    Size  Location     Type
 30537 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30538 ;;		 -> INT0_DefaultInterruptHandler(1), 
 30539 ;; Auto vars:     Size  Location     Type
 30540 ;;		None
 30541 ;; Return value:  Size  Location     Type
 30542 ;;                  1  [STACK] void 
 30543 ;; Registers used:
 30544 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30545 ;; Tracked objects:
 30546 ;;		On entry : 3F/39
 30547 ;;		On exit  : 0/0
 30548 ;;		Unchanged: 0/0
 30549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30554 ;;Total ram usage:        0 bytes
 30555 ;; Hardware stack levels used:    1
 30556 ;; Hardware stack levels required when called:   15
 30557 ;; This function calls:
 30558 ;;		Nothing
 30559 ;; This function is called by:
 30560 ;;		_EXT_INT_Initialize
 30561 ;; This function uses a reentrant model
 30562 ;;
 30563                           
 30564                           	psect	text129
 30565  01B3BA                     __ptext129:
 30566                           	opt callstack 0
 30567  01B3BA                     _INT0_SetInterruptHandler:
 30568                           	opt callstack 13
 30569                           
 30570                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 30571                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30572                           
 30573                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30574                           ;incstack = 0
 30575  01B3BA  50E1               	movf	fsr1l,w,c
 30576  01B3BC  0FFD               	addlw	-3
 30577  01B3BE  6ED9               	movwf	fsr2l,c
 30578  01B3C0  50E2               	movf	fsr1h,w,c
 30579  01B3C2  6EDA               	movwf	fsr2h,c
 30580  01B3C4  0EFF               	movlw	255
 30581  01B3C6  22DA               	addwfc	fsr2h,f,c
 30582  01B3C8  006F FF78  F007    	movff	postinc2,_INT0_InterruptHandler
 30583  01B3CE  006F FF78  F008    	movff	postinc2,_INT0_InterruptHandler+1
 30584  01B3D4  006F FF74  F009    	movff	postdec2,_INT0_InterruptHandler+2
 30585                           
 30586                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30587  01B3DA  52E5               	movf	postdec1,f,c
 30588  01B3DC  52E5               	movf	postdec1,f,c
 30589  01B3DE  52E5               	movf	postdec1,f,c
 30590  01B3E0  0012               	return		;funcret
 30591  01B3E2                     __end_of_INT0_SetInterruptHandler:
 30592                           	opt callstack 0
 30593                           
 30594 ;; *************** function _DMA2_Initialize *****************
 30595 ;; Defined at:
 30596 ;;		line 61 in file "mcc_generated_files/dma2.c"
 30597 ;; Parameters:    Size  Location     Type
 30598 ;;		None
 30599 ;; Auto vars:     Size  Location     Type
 30600 ;;		None
 30601 ;; Return value:  Size  Location     Type
 30602 ;;                  1  [STACK] void 
 30603 ;; Registers used:
 30604 ;;		wreg, status,2
 30605 ;; Tracked objects:
 30606 ;;		On entry : 3F/3D
 30607 ;;		On exit  : 3F/3B
 30608 ;;		Unchanged: 0/0
 30609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30614 ;;Total ram usage:        0 bytes
 30615 ;; Hardware stack levels used:    1
 30616 ;; Hardware stack levels required when called:   15
 30617 ;; This function calls:
 30618 ;;		Nothing
 30619 ;; This function is called by:
 30620 ;;		_SYSTEM_Initialize
 30621 ;; This function uses a reentrant model
 30622 ;;
 30623                           
 30624                           	psect	text130
 30625  01A964                     __ptext130:
 30626                           	opt callstack 0
 30627  01A964                     _DMA2_Initialize:
 30628                           	opt callstack 14
 30629                           
 30630                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 30631                           
 30632                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30633                           ;incstack = 0
 30634  01A964  0E00               	movlw	0
 30635  01A966  013B               	movlb	59	; () banked
 30636  01A968  6FD9               	movwf	217,b	;volatile
 30637  01A96A  0E10               	movlw	16
 30638  01A96C  6FDA               	movwf	218,b	;volatile
 30639  01A96E  0E00               	movlw	0
 30640  01A970  6FDB               	movwf	219,b	;volatile
 30641                           
 30642                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 30643  01A972  0E3F               	movlw	63
 30644  01A974  6FD1               	movwf	209,b	;volatile
 30645  01A976  0EBB               	movlw	187
 30646  01A978  6FD0               	movwf	208,b	;volatile
 30647                           
 30648                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 30649  01A97A  0E03               	movlw	3
 30650  01A97C  6FDD               	movwf	221,b	;volatile
 30651                           
 30652                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 30653  01A97E  0E00               	movlw	0
 30654  01A980  6FD8               	movwf	216,b	;volatile
 30655  01A982  0E01               	movlw	1
 30656  01A984  6FD7               	movwf	215,b	;volatile
 30657                           
 30658                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 30659  01A986  0E00               	movlw	0
 30660  01A988  6FCF               	movwf	207,b	;volatile
 30661  01A98A  0E01               	movlw	1
 30662  01A98C  6FCE               	movwf	206,b	;volatile
 30663                           
 30664                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 30665  01A98E  0E1C               	movlw	28
 30666  01A990  6FDF               	movwf	223,b	;volatile
 30667                           
 30668                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 30669  01A992  0E3D               	movlw	61
 30670  01A994  6FDE               	movwf	222,b	;volatile
 30671                           
 30672                           ; BSR set to: 59
 30673                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 30674  01A996  0139               	movlb	57	; () banked
 30675  01A998  97A5               	bcf	165,3,b	;volatile
 30676                           
 30677                           ; BSR set to: 57
 30678                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 30679  01A99A  95A5               	bcf	165,2,b	;volatile
 30680                           
 30681                           ; BSR set to: 57
 30682                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 30683  01A99C  9BA5               	bcf	165,5,b	;volatile
 30684                           
 30685                           ; BSR set to: 57
 30686                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 30687  01A99E  99A5               	bcf	165,4,b	;volatile
 30688                           
 30689                           ; BSR set to: 57
 30690                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 30691  01A9A0  9795               	bcf	149,3,b	;volatile
 30692                           
 30693                           ; BSR set to: 57
 30694                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 30695  01A9A2  9595               	bcf	149,2,b	;volatile
 30696                           
 30697                           ; BSR set to: 57
 30698                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 30699  01A9A4  9B95               	bcf	149,5,b	;volatile
 30700                           
 30701                           ; BSR set to: 57
 30702                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 30703  01A9A6  9995               	bcf	149,4,b	;volatile
 30704  01A9A8  9ED2               	bcf	16338,7,c	;# 
 30705  01A9AA  0139               	banksel	14831	;# 
 30706  01A9AC  0E55               	movlw	85	;# 
 30707  01A9AE  6FEF               	movwf	14831,b	;# 
 30708  01A9B0  0EAA               	movlw	170	;# 
 30709  01A9B2  6FEF               	movwf	14831,b	;# 
 30710  01A9B4  81EF               	bsf	14831,0,b	;# 
 30711  01A9B6  8ED2               	bsf	16338,7,c	;# 
 30712                           
 30713                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 30714  01A9B8  013B               	movlb	59	; () banked
 30715  01A9BA  6BDC               	clrf	220,b	;volatile
 30716                           
 30717                           ; BSR set to: 59
 30718                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30719  01A9BC  0012               	return		;funcret
 30720  01A9BE                     __end_of_DMA2_Initialize:
 30721                           	opt callstack 0
 30722                           
 30723 ;; *************** function _DMA1_Initialize *****************
 30724 ;; Defined at:
 30725 ;;		line 86 in file "mcc_generated_files/dma1.c"
 30726 ;; Parameters:    Size  Location     Type
 30727 ;;		None
 30728 ;; Auto vars:     Size  Location     Type
 30729 ;;		None
 30730 ;; Return value:  Size  Location     Type
 30731 ;;                  1  [STACK] void 
 30732 ;; Registers used:
 30733 ;;		wreg, status,2
 30734 ;; Tracked objects:
 30735 ;;		On entry : 3F/3B
 30736 ;;		On exit  : 3F/3B
 30737 ;;		Unchanged: 0/0
 30738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30743 ;;Total ram usage:        0 bytes
 30744 ;; Hardware stack levels used:    1
 30745 ;; Hardware stack levels required when called:   15
 30746 ;; This function calls:
 30747 ;;		Nothing
 30748 ;; This function is called by:
 30749 ;;		_SYSTEM_Initialize
 30750 ;; This function uses a reentrant model
 30751 ;;
 30752                           
 30753                           	psect	text131
 30754  01A5DE                     __ptext131:
 30755                           	opt callstack 0
 30756  01A5DE                     _DMA1_Initialize:
 30757                           	opt callstack 14
 30758                           
 30759                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 30760                           
 30761                           ; BSR set to: 59
 30762                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30763                           ;incstack = 0
 30764  01A5DE  0E00               	movlw	0
 30765  01A5E0  013B               	movlb	59	; () banked
 30766  01A5E2  6FF9               	movwf	249,b	;volatile
 30767  01A5E4  0E10               	movlw	16
 30768  01A5E6  6FFA               	movwf	250,b	;volatile
 30769  01A5E8  0E00               	movlw	0
 30770  01A5EA  6FFB               	movwf	251,b	;volatile
 30771                           
 30772                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 30773  01A5EC  0E3D               	movlw	61
 30774  01A5EE  6FF1               	movwf	241,b	;volatile
 30775  01A5F0  0E11               	movlw	17
 30776  01A5F2  6FF0               	movwf	240,b	;volatile
 30777                           
 30778                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 30779  01A5F4  0E03               	movlw	3
 30780  01A5F6  6FFD               	movwf	253,b	;volatile
 30781                           
 30782                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 30783  01A5F8  0E00               	movlw	0
 30784  01A5FA  6FF8               	movwf	248,b	;volatile
 30785  01A5FC  0E01               	movlw	1
 30786  01A5FE  6FF7               	movwf	247,b	;volatile
 30787                           
 30788                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 30789  01A600  0E00               	movlw	0
 30790  01A602  6FEF               	movwf	239,b	;volatile
 30791  01A604  0E01               	movlw	1
 30792  01A606  6FEE               	movwf	238,b	;volatile
 30793                           
 30794                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 30795  01A608  0E15               	movlw	21
 30796  01A60A  6FFF               	movwf	255,b	;volatile
 30797                           
 30798                           ; BSR set to: 59
 30799                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 30800  01A60C  6BFE               	clrf	254,b	;volatile
 30801                           
 30802                           ; BSR set to: 59
 30803                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 30804  01A60E  0139               	movlb	57	; () banked
 30805  01A610  93A2               	bcf	162,1,b	;volatile
 30806                           
 30807                           ; BSR set to: 57
 30808                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 30809  01A612  91A2               	bcf	162,0,b	;volatile
 30810                           
 30811                           ; BSR set to: 57
 30812                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 30813  01A614  97A2               	bcf	162,3,b	;volatile
 30814                           
 30815                           ; BSR set to: 57
 30816                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 30817  01A616  95A2               	bcf	162,2,b	;volatile
 30818                           
 30819                           ; BSR set to: 57
 30820                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 30821  01A618  8392               	bsf	146,1,b	;volatile
 30822                           
 30823                           ; BSR set to: 57
 30824                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 30825  01A61A  8192               	bsf	146,0,b	;volatile
 30826                           
 30827                           ; BSR set to: 57
 30828                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 30829  01A61C  8792               	bsf	146,3,b	;volatile
 30830                           
 30831                           ; BSR set to: 57
 30832                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 30833  01A61E  8592               	bsf	146,2,b	;volatile
 30834                           
 30835                           ; BSR set to: 57
 30836                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 30837  01A620  6BF1               	clrf	241,b	;volatile
 30838                           
 30839                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 30840  01A622  0E01               	movlw	1
 30841  01A624  6FF2               	movwf	242,b	;volatile
 30842                           
 30843                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 30844  01A626  0E04               	movlw	4
 30845  01A628  6FF3               	movwf	243,b	;volatile
 30846                           
 30847                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 30848  01A62A  0E02               	movlw	2
 30849  01A62C  6FF4               	movwf	244,b	;volatile
 30850                           
 30851                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 30852  01A62E  0E03               	movlw	3
 30853  01A630  6FF7               	movwf	247,b	;volatile
 30854  01A632  9ED2               	bcf	16338,7,c	;# 
 30855  01A634  0139               	banksel	14831	;# 
 30856  01A636  0E55               	movlw	85	;# 
 30857  01A638  6FEF               	movwf	14831,b	;# 
 30858  01A63A  0EAA               	movlw	170	;# 
 30859  01A63C  6FEF               	movwf	14831,b	;# 
 30860  01A63E  81EF               	bsf	14831,0,b	;# 
 30861  01A640  8ED2               	bsf	16338,7,c	;# 
 30862                           
 30863                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 30864  01A642  013B               	movlb	59	; () banked
 30865  01A644  6BFC               	clrf	252,b	;volatile
 30866                           
 30867                           ; BSR set to: 59
 30868                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30869  01A646  0012               	return		;funcret
 30870  01A648                     __end_of_DMA1_Initialize:
 30871                           	opt callstack 0
 30872                           
 30873 ;; *************** function _CLKREF_Initialize *****************
 30874 ;; Defined at:
 30875 ;;		line 58 in file "mcc_generated_files/clkref.c"
 30876 ;; Parameters:    Size  Location     Type
 30877 ;;		None
 30878 ;; Auto vars:     Size  Location     Type
 30879 ;;		None
 30880 ;; Return value:  Size  Location     Type
 30881 ;;                  1  [STACK] void 
 30882 ;; Registers used:
 30883 ;;		wreg, status,2
 30884 ;; Tracked objects:
 30885 ;;		On entry : 3F/3B
 30886 ;;		On exit  : 3F/3C
 30887 ;;		Unchanged: 0/0
 30888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30893 ;;Total ram usage:        0 bytes
 30894 ;; Hardware stack levels used:    1
 30895 ;; Hardware stack levels required when called:   15
 30896 ;; This function calls:
 30897 ;;		Nothing
 30898 ;; This function is called by:
 30899 ;;		_SYSTEM_Initialize
 30900 ;; This function uses a reentrant model
 30901 ;;
 30902                           
 30903                           	psect	text132
 30904  01B7EE                     __ptext132:
 30905                           	opt callstack 0
 30906  01B7EE                     _CLKREF_Initialize:
 30907                           	opt callstack 14
 30908                           
 30909                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 30910                           
 30911                           ; BSR set to: 59
 30912                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30913                           ;incstack = 0
 30914  01B7EE  013C               	movlb	60	; () banked
 30915  01B7F0  6BE6               	clrf	230,b	;volatile
 30916                           
 30917                           ; BSR set to: 60
 30918                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 30919  01B7F2  0E94               	movlw	148
 30920  01B7F4  6FE5               	movwf	229,b	;volatile
 30921                           
 30922                           ; BSR set to: 60
 30923                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30924  01B7F6  0012               	return		;funcret
 30925  01B7F8                     __end_of_CLKREF_Initialize:
 30926                           	opt callstack 0
 30927                           
 30928 ;; *************** function _ADCC_Initialize *****************
 30929 ;; Defined at:
 30930 ;;		line 65 in file "mcc_generated_files/adcc.c"
 30931 ;; Parameters:    Size  Location     Type
 30932 ;;		None
 30933 ;; Auto vars:     Size  Location     Type
 30934 ;;		None
 30935 ;; Return value:  Size  Location     Type
 30936 ;;                  1  [STACK] void 
 30937 ;; Registers used:
 30938 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30939 ;; Tracked objects:
 30940 ;;		On entry : 3F/3E
 30941 ;;		On exit  : 0/0
 30942 ;;		Unchanged: 0/0
 30943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30948 ;;Total ram usage:        0 bytes
 30949 ;; Hardware stack levels used:    1
 30950 ;; Hardware stack levels required when called:   16
 30951 ;; This function calls:
 30952 ;;		_ADCC_SetADIInterruptHandler
 30953 ;;		_ADCC_SetADTIInterruptHandler
 30954 ;; This function is called by:
 30955 ;;		_SYSTEM_Initialize
 30956 ;; This function uses a reentrant model
 30957 ;;
 30958                           
 30959                           	psect	text133
 30960  01A648                     __ptext133:
 30961                           	opt callstack 0
 30962  01A648                     _ADCC_Initialize:
 30963                           	opt callstack 13
 30964                           
 30965                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 30966                           
 30967                           ; BSR set to: 60
 30968                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30969                           ;incstack = 0
 30970  01A648  013E               	movlb	62	; () banked
 30971  01A64A  6BDE               	clrf	222,b	;volatile
 30972                           
 30973                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 30974  01A64C  6BDF               	clrf	223,b	;volatile
 30975                           
 30976                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 30977  01A64E  6BE0               	clrf	224,b	;volatile
 30978                           
 30979                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 30980  01A650  6BE1               	clrf	225,b	;volatile
 30981                           
 30982                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 30983  01A652  6BE4               	clrf	228,b	;volatile
 30984                           
 30985                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 30986  01A654  6BE5               	clrf	229,b	;volatile
 30987                           
 30988                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 30989  01A656  6BEA               	clrf	234,b	;volatile
 30990                           
 30991                           ; BSR set to: 62
 30992                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 30993  01A658  0E40               	movlw	64
 30994  01A65A  6FEC               	movwf	236,b	;volatile
 30995                           
 30996                           ; BSR set to: 62
 30997                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 30998  01A65C  6BF1               	clrf	241,b	;volatile
 30999                           
 31000                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 31001  01A65E  0E20               	movlw	32
 31002  01A660  6FF3               	movwf	243,b	;volatile
 31003                           
 31004                           ; BSR set to: 62
 31005                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 31006  01A662  6BF4               	clrf	244,b	;volatile
 31007                           
 31008                           ; BSR set to: 62
 31009                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 31010  01A664  6BF5               	clrf	245,b	;volatile
 31011                           
 31012                           ; BSR set to: 62
 31013                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 31014  01A666  6BF6               	clrf	246,b	;volatile
 31015                           
 31016                           ; BSR set to: 62
 31017                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 31018  01A668  6BF7               	clrf	247,b	;volatile
 31019                           
 31020                           ; BSR set to: 62
 31021                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 31022  01A66A  6BF9               	clrf	249,b	;volatile
 31023                           
 31024                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 31025  01A66C  0E5B               	movlw	91
 31026  01A66E  6FFA               	movwf	250,b	;volatile
 31027                           
 31028                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 31029  01A670  0E27               	movlw	39
 31030  01A672  6FFB               	movwf	251,b	;volatile
 31031                           
 31032                           ; BSR set to: 62
 31033                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 31034  01A674  6BFC               	clrf	252,b	;volatile
 31035                           
 31036                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 31037  01A676  0E02               	movlw	2
 31038  01A678  6FFD               	movwf	253,b	;volatile
 31039                           
 31040                           ; BSR set to: 62
 31041                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 31042  01A67A  6BFE               	clrf	254,b	;volatile
 31043                           
 31044                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 31045  01A67C  0E07               	movlw	7
 31046  01A67E  6FFF               	movwf	255,b	;volatile
 31047                           
 31048                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 31049  01A680  0E84               	movlw	132
 31050  01A682  6FF8               	movwf	248,b	;volatile
 31051                           
 31052                           ; BSR set to: 62
 31053                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 31054  01A684  0139               	movlb	57	; () banked
 31055  01A686  95A1               	bcf	161,2,b	;volatile
 31056                           
 31057                           ; BSR set to: 57
 31058                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 31059  01A688  8591               	bsf	145,2,b	;volatile
 31060                           
 31061                           ; BSR set to: 57
 31062                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 31063  01A68A  0E74               	movlw	low _ADCC_DefaultInterruptHandler
 31064  01A68C  6EE6               	movwf	postinc1,c
 31065  01A68E  0EB8               	movlw	high _ADCC_DefaultInterruptHandler
 31066  01A690  6EE6               	movwf	postinc1,c
 31067  01A692  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31068  01A694  6EE6               	movwf	postinc1,c
 31069  01A696  EC05  F0DA         	call	_ADCC_SetADIInterruptHandler	;wreg free
 31070                           
 31071                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 31072  01A69A  0139               	movlb	57	; () banked
 31073  01A69C  97A1               	bcf	161,3,b	;volatile
 31074                           
 31075                           ; BSR set to: 57
 31076                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 31077  01A69E  8791               	bsf	145,3,b	;volatile
 31078                           
 31079                           ; BSR set to: 57
 31080                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 31081  01A6A0  0E74               	movlw	low _ADCC_DefaultInterruptHandler
 31082  01A6A2  6EE6               	movwf	postinc1,c
 31083  01A6A4  0EB8               	movlw	high _ADCC_DefaultInterruptHandler
 31084  01A6A6  6EE6               	movwf	postinc1,c
 31085  01A6A8  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31086  01A6AA  6EE6               	movwf	postinc1,c
 31087  01A6AC  ECF1  F0D9         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 31088                           
 31089                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31090  01A6B0  0012               	return		;funcret
 31091  01A6B2                     __end_of_ADCC_Initialize:
 31092                           	opt callstack 0
 31093                           
 31094 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 31095 ;; Defined at:
 31096 ;;		line 336 in file "mcc_generated_files/adcc.c"
 31097 ;; Parameters:    Size  Location     Type
 31098 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31099 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 31100 ;; Auto vars:     Size  Location     Type
 31101 ;;		None
 31102 ;; Return value:  Size  Location     Type
 31103 ;;                  1  [STACK] void 
 31104 ;; Registers used:
 31105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31106 ;; Tracked objects:
 31107 ;;		On entry : 0/0
 31108 ;;		On exit  : 0/0
 31109 ;;		Unchanged: 0/0
 31110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31115 ;;Total ram usage:        0 bytes
 31116 ;; Hardware stack levels used:    1
 31117 ;; Hardware stack levels required when called:   15
 31118 ;; This function calls:
 31119 ;;		Nothing
 31120 ;; This function is called by:
 31121 ;;		_ADCC_Initialize
 31122 ;;		_start_adc_scan
 31123 ;; This function uses a reentrant model
 31124 ;;
 31125                           
 31126                           	psect	text134
 31127  01B3E2                     __ptext134:
 31128                           	opt callstack 0
 31129  01B3E2                     _ADCC_SetADTIInterruptHandler:
 31130                           	opt callstack 14
 31131                           
 31132                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 31133                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31134                           
 31135                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31136                           ;incstack = 0
 31137  01B3E2  50E1               	movf	fsr1l,w,c
 31138  01B3E4  0FFD               	addlw	-3
 31139  01B3E6  6ED9               	movwf	fsr2l,c
 31140  01B3E8  50E2               	movf	fsr1h,w,c
 31141  01B3EA  6EDA               	movwf	fsr2h,c
 31142  01B3EC  0EFF               	movlw	255
 31143  01B3EE  22DA               	addwfc	fsr2h,f,c
 31144  01B3F0  006F FF78  F0A3    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 31145  01B3F6  006F FF78  F0A4    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 31146  01B3FC  006F FF74  F0A5    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 31147                           
 31148                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 31149  01B402  52E5               	movf	postdec1,f,c
 31150  01B404  52E5               	movf	postdec1,f,c
 31151  01B406  52E5               	movf	postdec1,f,c
 31152  01B408  0012               	return		;funcret
 31153  01B40A                     __end_of_ADCC_SetADTIInterruptHandler:
 31154                           	opt callstack 0
 31155                           
 31156 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 31157 ;; Defined at:
 31158 ;;		line 323 in file "mcc_generated_files/adcc.c"
 31159 ;; Parameters:    Size  Location     Type
 31160 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31161 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 31162 ;; Auto vars:     Size  Location     Type
 31163 ;;		None
 31164 ;; Return value:  Size  Location     Type
 31165 ;;                  1  [STACK] void 
 31166 ;; Registers used:
 31167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31168 ;; Tracked objects:
 31169 ;;		On entry : 6/0
 31170 ;;		On exit  : 0/0
 31171 ;;		Unchanged: 0/0
 31172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31177 ;;Total ram usage:        0 bytes
 31178 ;; Hardware stack levels used:    1
 31179 ;; Hardware stack levels required when called:   15
 31180 ;; This function calls:
 31181 ;;		Nothing
 31182 ;; This function is called by:
 31183 ;;		_ADCC_Initialize
 31184 ;;		_start_adc_scan
 31185 ;; This function uses a reentrant model
 31186 ;;
 31187                           
 31188                           	psect	text135
 31189  01B40A                     __ptext135:
 31190                           	opt callstack 0
 31191  01B40A                     _ADCC_SetADIInterruptHandler:
 31192                           	opt callstack 14
 31193                           
 31194                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 31195                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31196                           
 31197                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31198                           ;incstack = 0
 31199  01B40A  50E1               	movf	fsr1l,w,c
 31200  01B40C  0FFD               	addlw	-3
 31201  01B40E  6ED9               	movwf	fsr2l,c
 31202  01B410  50E2               	movf	fsr1h,w,c
 31203  01B412  6EDA               	movwf	fsr2h,c
 31204  01B414  0EFF               	movlw	255
 31205  01B416  22DA               	addwfc	fsr2h,f,c
 31206  01B418  006F FF78  F0A6    	movff	postinc2,_ADCC_ADI_InterruptHandler
 31207  01B41E  006F FF78  F0A7    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 31208  01B424  006F FF74  F0A8    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 31209                           
 31210                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31211  01B42A  52E5               	movf	postdec1,f,c
 31212  01B42C  52E5               	movf	postdec1,f,c
 31213  01B42E  52E5               	movf	postdec1,f,c
 31214  01B430  0012               	return		;funcret
 31215  01B432                     __end_of_ADCC_SetADIInterruptHandler:
 31216                           	opt callstack 0
 31217                           
 31218 ;; *************** function _INT1_ISR *****************
 31219 ;; Defined at:
 31220 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 31221 ;; Parameters:    Size  Location     Type
 31222 ;;		None
 31223 ;; Auto vars:     Size  Location     Type
 31224 ;;		None
 31225 ;; Return value:  Size  Location     Type
 31226 ;;                  1    wreg      void 
 31227 ;; Registers used:
 31228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31229 ;; Tracked objects:
 31230 ;;		On entry : 0/0
 31231 ;;		On exit  : 0/0
 31232 ;;		Unchanged: 0/0
 31233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31236 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31237 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31238 ;;Total ram usage:        4 bytes
 31239 ;; Hardware stack levels used:    1
 31240 ;; Hardware stack levels required when called:    5
 31241 ;; This function calls:
 31242 ;;		_INT1_CallBack
 31243 ;; This function is called by:
 31244 ;;		Interrupt level 1
 31245 ;; This function uses a non-reentrant model
 31246 ;;
 31247                           
 31248                           	psect	text136
 31249  01AE78                     __ptext136:
 31250                           	opt callstack 0
 31251  01AE78                     _INT1_ISR:
 31252                           	opt callstack 12
 31253                           
 31254                           ;incstack = 0
 31255  01AE78  006F FF60  F04C    	movff	status,??_INT1_ISR
 31256  01AE7E  0060  F098  F04D   	movff	btemp,??_INT1_ISR+1
 31257  01AE84  0060  F0C0  F04E   	movff	btemp+10,??_INT1_ISR+2
 31258  01AE8A  0060  F0C4  F04F   	movff	btemp+11,??_INT1_ISR+3
 31259  01AE90  EE16  F0A1         	lfsr	1,___intlo_sp
 31260                           
 31261                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 31262  01AE94  0139               	movlb	57	; () banked
 31263  01AE96  91A5               	bcf	165,0,b	;volatile
 31264                           
 31265                           ; BSR set to: 57
 31266                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 31267  01AE98  ECC0  F0DA         	call	_INT1_CallBack	;wreg free
 31268  01AE9C  0060  F13C  F031   	movff	??_INT1_ISR+3,btemp+11
 31269  01AEA2  0060  F138  F030   	movff	??_INT1_ISR+2,btemp+10
 31270  01AEA8  0060  F134  F026   	movff	??_INT1_ISR+1,btemp
 31271  01AEAE  0060  F133  FFD8   	movff	??_INT1_ISR,status
 31272  01AEB4  0011               	retfie		f
 31273  01AEB6                     __end_of_INT1_ISR:
 31274                           	opt callstack 0
 31275                           
 31276 ;; *************** function _INT1_CallBack *****************
 31277 ;; Defined at:
 31278 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 31279 ;; Parameters:    Size  Location     Type
 31280 ;;		None
 31281 ;; Auto vars:     Size  Location     Type
 31282 ;;		None
 31283 ;; Return value:  Size  Location     Type
 31284 ;;                  1  [STACK] void 
 31285 ;; Registers used:
 31286 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31287 ;; Tracked objects:
 31288 ;;		On entry : 3F/39
 31289 ;;		On exit  : 0/0
 31290 ;;		Unchanged: 0/0
 31291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31296 ;;Total ram usage:        0 bytes
 31297 ;; Hardware stack levels used:    1
 31298 ;; Hardware stack levels required when called:    4
 31299 ;; This function calls:
 31300 ;;		Absolute function
 31301 ;;		_INT1_DefaultInterruptHandler
 31302 ;;		_switch_handler
 31303 ;; This function is called by:
 31304 ;;		_INT1_ISR
 31305 ;; This function uses a reentrant model
 31306 ;;
 31307                           
 31308                           	psect	text137
 31309  01B580                     __ptext137:
 31310                           	opt callstack 0
 31311  01B580                     _INT1_CallBack:
 31312                           	opt callstack 12
 31313                           
 31314                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 31315                           
 31316                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31317                           ;incstack = 0
 31318  01B580  5004               	movf	_INT1_InterruptHandler^0,w,c
 31319  01B582  1005               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 31320  01B584  1006               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 31321  01B586  B4D8               	btfsc	status,2,c
 31322  01B588  0012               	return	
 31323                           
 31324                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 31325  01B58A  D801               	call	u969_28
 31326  01B58C  0012               	return	
 31327  01B58E                     u969_28:
 31328  01B58E  0005               	push	
 31329  01B590  6EFA               	movwf	pclath,c
 31330  01B592  5004               	movf	_INT1_InterruptHandler^0,w,c
 31331  01B594  6EFD               	movwf	tosl,c
 31332  01B596  5005               	movf	(_INT1_InterruptHandler+1)^0,w,c
 31333  01B598  6EFE               	movwf	tosh,c
 31334  01B59A  5006               	movf	(_INT1_InterruptHandler+2)^0,w,c
 31335  01B59C  6EFF               	movwf	tosu,c
 31336  01B59E  50FA               	movf	pclath,w,c
 31337  01B5A0  0012               	return		;indir
 31338  01B5A2                     __end_of_INT1_CallBack:
 31339                           	opt callstack 0
 31340                           
 31341 ;; *************** function _INT1_DefaultInterruptHandler *****************
 31342 ;; Defined at:
 31343 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 31344 ;; Parameters:    Size  Location     Type
 31345 ;;		None
 31346 ;; Auto vars:     Size  Location     Type
 31347 ;;		None
 31348 ;; Return value:  Size  Location     Type
 31349 ;;                  1  [STACK] void 
 31350 ;; Registers used:
 31351 ;;		None
 31352 ;; Tracked objects:
 31353 ;;		On entry : 0/39
 31354 ;;		On exit  : 0/0
 31355 ;;		Unchanged: 0/0
 31356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31361 ;;Total ram usage:        0 bytes
 31362 ;; Hardware stack levels used:    1
 31363 ;; Hardware stack levels required when called:    3
 31364 ;; This function calls:
 31365 ;;		Nothing
 31366 ;; This function is called by:
 31367 ;;		_EXT_INT_Initialize
 31368 ;;		_INT1_CallBack
 31369 ;; This function uses a reentrant model
 31370 ;;
 31371                           
 31372                           	psect	text138
 31373  01B86E                     __ptext138:
 31374                           	opt callstack 0
 31375  01B86E                     _INT1_DefaultInterruptHandler:
 31376                           	opt callstack 12
 31377                           
 31378                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31379                           
 31380                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31381                           ;incstack = 0
 31382  01B86E  0012               	return		;funcret
 31383  01B870                     __end_of_INT1_DefaultInterruptHandler:
 31384                           	opt callstack 0
 31385                           
 31386 ;; *************** function _switch_handler *****************
 31387 ;; Defined at:
 31388 ;;		line 58 in file "dio.c"
 31389 ;; Parameters:    Size  Location     Type
 31390 ;;		None
 31391 ;; Auto vars:     Size  Location     Type
 31392 ;;  i               1  [STACK] unsigned char 
 31393 ;;  sw_value        1  [STACK] unsigned char 
 31394 ;; Return value:  Size  Location     Type
 31395 ;;                  1  [STACK] void 
 31396 ;; Registers used:
 31397 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 31398 ;; Tracked objects:
 31399 ;;		On entry : 0/39
 31400 ;;		On exit  : 0/0
 31401 ;;		Unchanged: 0/0
 31402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31407 ;;Total ram usage:        0 bytes
 31408 ;; Hardware stack levels used:    1
 31409 ;; Hardware stack levels required when called:    3
 31410 ;; This function calls:
 31411 ;;		Nothing
 31412 ;; This function is called by:
 31413 ;;		_start_switch_handler
 31414 ;;		_INT1_CallBack
 31415 ;; This function uses a reentrant model
 31416 ;;
 31417                           
 31418                           	psect	text139
 31419  018C40                     __ptext139:
 31420                           	opt callstack 0
 31421  018C40                     _switch_handler:
 31422                           	opt callstack 0
 31423                           
 31424                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31425  018C40  52E6               	movf	postinc1,f,c
 31426  018C42  52E6               	movf	postinc1,f,c
 31427                           
 31428                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 31429                           ;stkvar	_i @ sp[(-2)+0]
 31430                           
 31431                           ;incstack = 0
 31432  018C44  0EFE               	movlw	-2
 31433  018C46  6AE3               	clrf	plusw1,c
 31434  018C48  9EBD               	bcf	189,7,c	;volatile
 31435  018C4A  9ABF               	bcf	191,5,c	;volatile
 31436                           
 31437                           ;dio.c: 73:  __nop();
 31438  018C4C  F000               	nop	
 31439                           
 31440                           ;dio.c: 74:  __nop();
 31441  018C4E  F000               	nop	
 31442                           
 31443                           ;dio.c: 75:  __nop();
 31444  018C50  F000               	nop	
 31445  018C52  D019               	goto	l10321
 31446  018C54                     l10309:
 31447                           
 31448                           ;dio.c: 80:    sw_value = PORTFbits.RF3;
 31449  018C54  A6CF               	btfss	207,3,c	;volatile
 31450  018C56  D011               	goto	u945_20
 31451  018C58  D00D               	goto	u945_21
 31452  018C5A                     u942_28:
 31453                           
 31454                           ;stkvar	_sw_value @ sp[(-2)+1]
 31455  018C5A  0EFF               	movlw	-1
 31456  018C5C  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 31457                           
 31458                           ;dio.c: 81:    break;
 31459  018C62  D027               	goto	l10323
 31460  018C64                     l10311:
 31461                           
 31462                           ;dio.c: 83:    sw_value = PORTFbits.RF2;
 31463  018C64  A4CF               	btfss	207,2,c	;volatile
 31464  018C66  D009               	goto	u945_20
 31465  018C68  D005               	goto	u945_21
 31466  018C6A                     l10313:
 31467                           
 31468                           ;dio.c: 86:    sw_value = PORTFbits.RF1;
 31469  018C6A  A2CF               	btfss	207,1,c	;volatile
 31470  018C6C  D006               	goto	u945_20
 31471  018C6E  D002               	goto	u945_21
 31472  018C70                     l10315:
 31473                           
 31474                           ;dio.c: 89:    sw_value = PORTFbits.RF0;
 31475  018C70  A0CF               	btfss	207,0,c	;volatile
 31476  018C72  D003               	goto	u945_20
 31477  018C74                     u945_21:
 31478  018C74  6A31               	clrf	(btemp+11)^0,c
 31479  018C76  2A31               	incf	(btemp+11)^0,f,c
 31480  018C78  D7F0               	goto	u942_28
 31481  018C7A                     u945_20:
 31482  018C7A  6A31               	clrf	(btemp+11)^0,c
 31483  018C7C  D7EE               	goto	u942_28
 31484  018C7E                     l10317:
 31485                           
 31486                           ;dio.c: 92:    sw_value = 1;
 31487                           ;stkvar	_sw_value @ sp[(-2)+1]
 31488  018C7E  0EFF               	movlw	-1
 31489  018C80  6AE3               	clrf	plusw1,c
 31490  018C82  2AE3               	incf	plusw1,f,c
 31491                           
 31492                           ;dio.c: 93:    break;
 31493  018C84  D016               	goto	l10323
 31494  018C86                     l10321:
 31495                           
 31496                           ;stkvar	_i @ sp[(-2)+0]
 31497  018C86  0EFE               	movlw	-2
 31498  018C88  50E3               	movf	plusw1,w,c
 31499  018C8A  6E30               	movwf	(btemp+10)^0,c
 31500  018C8C  6A31               	clrf	(btemp+11)^0,c
 31501                           
 31502                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31503                           ; Switch size 1, requested type "simple"
 31504                           ; Number of cases is 1, Range of values is 0 to 0
 31505                           ; switch strategies available:
 31506                           ; Name         Instructions Cycles
 31507                           ; simple_byte            4     3 (average)
 31508                           ;	Chosen strategy is simple_byte
 31509  018C8E  5031               	movf	(btemp+11)^0,w,c
 31510  018C90  0A00               	xorlw	0	; case 0
 31511  018C92  A4D8               	btfss	status,2,c
 31512  018C94  D7F4               	goto	l10317
 31513                           
 31514                           ; Switch size 1, requested type "simple"
 31515                           ; Number of cases is 4, Range of values is 0 to 3
 31516                           ; switch strategies available:
 31517                           ; Name         Instructions Cycles
 31518                           ; simple_byte           13     7 (average)
 31519                           ;	Chosen strategy is simple_byte
 31520  018C96  5030               	movf	(btemp+10)^0,w,c
 31521  018C98  0A00               	xorlw	0	; case 0
 31522  018C9A  B4D8               	btfsc	status,2,c
 31523  018C9C  D7E9               	goto	l10315
 31524  018C9E  0A01               	xorlw	1	; case 1
 31525  018CA0  B4D8               	btfsc	status,2,c
 31526  018CA2  D7E3               	goto	l10313
 31527  018CA4  0A03               	xorlw	3	; case 2
 31528  018CA6  B4D8               	btfsc	status,2,c
 31529  018CA8  D7DD               	goto	l10311
 31530  018CAA  0A01               	xorlw	1	; case 3
 31531  018CAC  B4D8               	btfsc	status,2,c
 31532  018CAE  D7D2               	goto	l10309
 31533  018CB0  D7E6               	goto	l10317
 31534  018CB2                     l10323:
 31535                           
 31536                           ;dio.c: 97:   if (sw_value) {
 31537                           ;stkvar	_sw_value @ sp[(-2)+1]
 31538  018CB2  0EFF               	movlw	-1
 31539  018CB4  50E3               	movf	plusw1,w,c
 31540  018CB6  B4D8               	btfsc	status,2,c
 31541  018CB8  D018               	goto	l10329
 31542                           
 31543                           ;dio.c: 98:    if (S.button[i].sw == SW_ON) {
 31544                           ;stkvar	_i @ sp[(-2)+0]
 31545  018CBA  0EFE               	movlw	-2
 31546  018CBC  50E3               	movf	plusw1,w,c
 31547  018CBE  0D05               	mullw	5
 31548  018CC0  0EC5               	movlw	low _S
 31549  018CC2  24F3               	addwf	243,w,c
 31550  018CC4  6ED9               	movwf	fsr2l,c
 31551  018CC6  0E02               	movlw	high _S
 31552  018CC8  20F4               	addwfc	prodh,w,c
 31553  018CCA  6EDA               	movwf	fsr2h,c
 31554  018CCC  04DE               	decf	postinc2,w,c
 31555  018CCE  A4D8               	btfss	status,2,c
 31556  018CD0  D049               	goto	l10337
 31557                           
 31558                           ;dio.c: 99:     S.button[i].sw = SW_OFF;
 31559                           ;stkvar	_i @ sp[(-2)+0]
 31560  018CD2  0EFE               	movlw	-2
 31561  018CD4  50E3               	movf	plusw1,w,c
 31562  018CD6  0D05               	mullw	5
 31563  018CD8  0EC5               	movlw	low _S
 31564  018CDA  24F3               	addwf	243,w,c
 31565  018CDC  6ED9               	movwf	fsr2l,c
 31566  018CDE  0E02               	movlw	high _S
 31567  018CE0  20F4               	addwfc	prodh,w,c
 31568  018CE2  6EDA               	movwf	fsr2h,c
 31569  018CE4  0E00               	movlw	0
 31570  018CE6  6EDF               	movwf	indf2,c
 31571  018CE8  D03D               	goto	l10337
 31572  018CEA                     l10329:
 31573                           
 31574                           ;dio.c: 102:    if (S.button[i].sw == SW_OFF) {
 31575                           ;stkvar	_i @ sp[(-2)+0]
 31576  018CEA  0EFE               	movlw	-2
 31577  018CEC  50E3               	movf	plusw1,w,c
 31578  018CEE  0D05               	mullw	5
 31579  018CF0  0EC5               	movlw	low _S
 31580  018CF2  24F3               	addwf	243,w,c
 31581  018CF4  6ED9               	movwf	fsr2l,c
 31582  018CF6  0E02               	movlw	high _S
 31583  018CF8  20F4               	addwfc	prodh,w,c
 31584  018CFA  6EDA               	movwf	fsr2h,c
 31585  018CFC  50DF               	movf	indf2,w,c
 31586  018CFE  A4D8               	btfss	status,2,c
 31587  018D00  D031               	goto	l10337
 31588                           
 31589                           ;dio.c: 103:     S.button[i].sw = SW_ON;
 31590                           ;stkvar	_i @ sp[(-2)+0]
 31591  018D02  0EFE               	movlw	-2
 31592  018D04  50E3               	movf	plusw1,w,c
 31593  018D06  0D05               	mullw	5
 31594  018D08  0EC5               	movlw	low _S
 31595  018D0A  24F3               	addwf	243,w,c
 31596  018D0C  6ED9               	movwf	fsr2l,c
 31597  018D0E  0E02               	movlw	high _S
 31598  018D10  20F4               	addwfc	prodh,w,c
 31599  018D12  6EDA               	movwf	fsr2h,c
 31600  018D14  0E01               	movlw	1
 31601  018D16  6EDF               	movwf	indf2,c
 31602                           
 31603                           ;dio.c: 104:     S.button[i].count = V.timerint_count;
 31604  018D18  EE20  F2C1         	lfsr	2,_V+186	;volatile
 31605                           
 31606                           ;stkvar	_i @ sp[(-2)+0]
 31607  018D1C  0EFE               	movlw	-2
 31608  018D1E  50E3               	movf	plusw1,w,c
 31609  018D20  0D05               	mullw	5
 31610  018D22  0EC6               	movlw	low (_S+1)
 31611  018D24  24F3               	addwf	243,w,c
 31612  018D26  6EE9               	movwf	fsr0l,c
 31613  018D28  0E02               	movlw	high (_S+1)
 31614  018D2A  20F4               	addwfc	prodh,w,c
 31615  018D2C  6EEA               	movwf	fsr0h,c
 31616  018D2E  006F FF7B FFEE     	movff	postinc2,postinc0
 31617  018D34  006F FF7B FFEE     	movff	postinc2,postinc0
 31618  018D3A  006F FF7B FFEE     	movff	postinc2,postinc0
 31619  018D40  006F FF7B FFEE     	movff	postinc2,postinc0
 31620                           
 31621                           ;dio.c: 105:     S.sw_bitmap |= 1 << i;
 31622                           ;stkvar	_i @ sp[(-2)+0]
 31623  018D46  0EFE               	movlw	-2
 31624  018D48  006F FF8C  F031    	movff	plusw1,btemp+11
 31625  018D4E  0E01               	movlw	1
 31626  018D50  6E30               	movwf	(btemp+10)^0,c
 31627  018D52  2A31               	incf	(btemp+11)^0,f,c
 31628  018D54  D002               	goto	u949_24
 31629  018D56                     u949_25:
 31630  018D56  90D8               	bcf	status,0,c
 31631  018D58  3630               	rlcf	(btemp+10)^0,f,c
 31632  018D5A                     u949_24:
 31633  018D5A  2E31               	decfsz	(btemp+11)^0,f,c
 31634  018D5C  D7FC               	goto	u949_25
 31635  018D5E  5030               	movf	(btemp+10)^0,w,c
 31636  018D60  0102               	movlb	2	; () banked
 31637  018D62  13ED               	iorwf	(_S+40)& (0+255),f,b	;volatile
 31638  018D64                     l10337:
 31639                           
 31640                           ;dio.c: 108:  } while (++i < 4);
 31641                           ;stkvar	_i @ sp[(-2)+0]
 31642  018D64  0EFE               	movlw	-2
 31643  018D66  2AE3               	incf	plusw1,f,c
 31644  018D68  0EFE               	movlw	-2
 31645  018D6A  006F FF8C  F026    	movff	plusw1,btemp
 31646  018D70  0E03               	movlw	3
 31647  018D72  6426               	cpfsgt	btemp^0,c
 31648  018D74  D788               	goto	l10321
 31649                           
 31650                           ;dio.c: 117:  do { LATDbits.LATD7 = 1; } while(0);
 31651  018D76  8EBD               	bsf	189,7,c	;volatile
 31652                           
 31653                           ;dio.c: 118:  do { LATFbits.LATF5 = 1; } while(0);
 31654  018D78  8ABF               	bsf	191,5,c	;volatile
 31655                           
 31656                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31657  018D7A  52E5               	movf	postdec1,f,c
 31658  018D7C  52E5               	movf	postdec1,f,c
 31659  018D7E  0012               	return		;funcret
 31660  018D80                     __end_of_switch_handler:
 31661                           	opt callstack 0
 31662                           
 31663 ;; *************** function _TMR5_ISR *****************
 31664 ;; Defined at:
 31665 ;;		line 166 in file "mcc_generated_files/tmr5.c"
 31666 ;; Parameters:    Size  Location     Type
 31667 ;;		None
 31668 ;; Auto vars:     Size  Location     Type
 31669 ;;		None
 31670 ;; Return value:  Size  Location     Type
 31671 ;;                  1    wreg      void 
 31672 ;; Registers used:
 31673 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 31674 ;; Tracked objects:
 31675 ;;		On entry : 0/0
 31676 ;;		On exit  : 0/0
 31677 ;;		Unchanged: 0/0
 31678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31681 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31682 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31683 ;;Total ram usage:       15 bytes
 31684 ;; Hardware stack levels used:    1
 31685 ;; Hardware stack levels required when called:    9
 31686 ;; This function calls:
 31687 ;;		_TMR5_CallBack
 31688 ;;		_TMR5_WriteTimer
 31689 ;; This function is called by:
 31690 ;;		Interrupt level 1
 31691 ;; This function uses a non-reentrant model
 31692 ;;
 31693                           
 31694                           	psect	text140
 31695  0198F0                     __ptext140:
 31696                           	opt callstack 0
 31697  0198F0                     _TMR5_ISR:
 31698                           	opt callstack 8
 31699                           
 31700                           ;incstack = 0
 31701  0198F0  006F FF60  F052    	movff	status,??_TMR5_ISR+2
 31702  0198F6  0060  F098  F053   	movff	btemp,??_TMR5_ISR+3
 31703  0198FC  0060  F09C  F054   	movff	btemp+1,??_TMR5_ISR+4
 31704  019902  0060  F0A0  F055   	movff	btemp+2,??_TMR5_ISR+5
 31705  019908  0060  F0A4  F056   	movff	btemp+3,??_TMR5_ISR+6
 31706  01990E  0060  F0A8  F057   	movff	btemp+4,??_TMR5_ISR+7
 31707  019914  0060  F0AC  F058   	movff	btemp+5,??_TMR5_ISR+8
 31708  01991A  0060  F0B0  F059   	movff	btemp+6,??_TMR5_ISR+9
 31709  019920  0060  F0B4  F05A   	movff	btemp+7,??_TMR5_ISR+10
 31710  019926  0060  F0B8  F05B   	movff	btemp+8,??_TMR5_ISR+11
 31711  01992C  0060  F0BC  F05C   	movff	btemp+9,??_TMR5_ISR+12
 31712  019932  0060  F0C0  F05D   	movff	btemp+10,??_TMR5_ISR+13
 31713  019938  0060  F0C4  F05E   	movff	btemp+11,??_TMR5_ISR+14
 31714  01993E  EE16  F0A1         	lfsr	1,___intlo_sp
 31715                           
 31716                           ;mcc_generated_files/tmr5.c: 168:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 171:  PIR8bits.TMR5IF = 0;
 31717  019942  0139               	movlb	57	; () banked
 31718  019944  9DA8               	bcf	168,6,b	;volatile
 31719                           
 31720                           ; BSR set to: 57
 31721                           ;mcc_generated_files/tmr5.c: 172:  TMR5_WriteTimer(timer5ReloadVal);
 31722  019946  0060  F05B  FFE6   	movff	_timer5ReloadVal,postinc1
 31723  01994C  0060  F05F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 31724  019952  ECFC  F0D6         	call	_TMR5_WriteTimer	;wreg free
 31725                           
 31726                           ;mcc_generated_files/tmr5.c: 175:  if (++CountCallBack >= (5 +V.ticker)) {
 31727  019956  0102               	movlb	2	; () banked
 31728  019958  51B1               	movf	(_V+170)& (0+255),w,b	;volatile
 31729  01995A  6E50               	movwf	??_TMR5_ISR^0,c
 31730  01995C  6A51               	clrf	(??_TMR5_ISR+1)^0,c
 31731  01995E  0E05               	movlw	5
 31732  019960  2650               	addwf	??_TMR5_ISR^0,f,c
 31733  019962  0E00               	movlw	0
 31734  019964  2251               	addwfc	(??_TMR5_ISR+1)^0,f,c
 31735  019966  4A14               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 31736  019968  2A15               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 31737  01996A  5050               	movf	??_TMR5_ISR^0,w,c
 31738  01996C  5C14               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 31739  01996E  5051               	movf	(??_TMR5_ISR+1)^0,w,c
 31740  019970  5815               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 31741  019972  A0D8               	btfss	status,0,c
 31742  019974  D004               	goto	i1l1019
 31743                           
 31744                           ; BSR set to: 2
 31745                           ;mcc_generated_files/tmr5.c: 177:   TMR5_CallBack();
 31746  019976  EC79  F0DA         	call	_TMR5_CallBack	;wreg free
 31747                           
 31748                           ;mcc_generated_files/tmr5.c: 180:   CountCallBack = 0;
 31749  01997A  6A14               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 31750  01997C  6A15               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 31751  01997E                     i1l1019:
 31752  01997E  0060  F178  F031   	movff	??_TMR5_ISR+14,btemp+11
 31753  019984  0060  F174  F030   	movff	??_TMR5_ISR+13,btemp+10
 31754  01998A  0060  F170  F02F   	movff	??_TMR5_ISR+12,btemp+9
 31755  019990  0060  F16C  F02E   	movff	??_TMR5_ISR+11,btemp+8
 31756  019996  0060  F168  F02D   	movff	??_TMR5_ISR+10,btemp+7
 31757  01999C  0060  F164  F02C   	movff	??_TMR5_ISR+9,btemp+6
 31758  0199A2  0060  F160  F02B   	movff	??_TMR5_ISR+8,btemp+5
 31759  0199A8  0060  F15C  F02A   	movff	??_TMR5_ISR+7,btemp+4
 31760  0199AE  0060  F158  F029   	movff	??_TMR5_ISR+6,btemp+3
 31761  0199B4  0060  F154  F028   	movff	??_TMR5_ISR+5,btemp+2
 31762  0199BA  0060  F150  F027   	movff	??_TMR5_ISR+4,btemp+1
 31763  0199C0  0060  F14C  F026   	movff	??_TMR5_ISR+3,btemp
 31764  0199C6  0060  F14B  FFD8   	movff	??_TMR5_ISR+2,status
 31765  0199CC  0011               	retfie		f
 31766  0199CE                     __end_of_TMR5_ISR:
 31767                           	opt callstack 0
 31768                           
 31769 ;; *************** function _TMR5_WriteTimer *****************
 31770 ;; Defined at:
 31771 ;;		line 132 in file "mcc_generated_files/tmr5.c"
 31772 ;; Parameters:    Size  Location     Type
 31773 ;;  timerVal        2  [STACK] unsigned short 
 31774 ;; Auto vars:     Size  Location     Type
 31775 ;;		None
 31776 ;; Return value:  Size  Location     Type
 31777 ;;                  1  [STACK] void 
 31778 ;; Registers used:
 31779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31780 ;; Tracked objects:
 31781 ;;		On entry : 3F/39
 31782 ;;		On exit  : 0/0
 31783 ;;		Unchanged: 0/0
 31784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31789 ;;Total ram usage:        0 bytes
 31790 ;; Hardware stack levels used:    1
 31791 ;; Hardware stack levels required when called:    3
 31792 ;; This function calls:
 31793 ;;		Nothing
 31794 ;; This function is called by:
 31795 ;;		_TMR5_ISR
 31796 ;; This function uses a reentrant model
 31797 ;;
 31798                           
 31799                           	psect	text141
 31800  01ADF8                     __ptext141:
 31801                           	opt callstack 0
 31802  01ADF8                     _TMR5_WriteTimer:
 31803                           	opt callstack 13
 31804                           
 31805                           ;mcc_generated_files/tmr5.c: 132: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 133: {;mcc_generated_files/tmr5.c: 134:  if (T5CONbits.NOT_SYNC == 1) {
 31806                           
 31807                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31808                           ;incstack = 0
 31809  01ADF8  A49A               	btfss	154,2,c	;volatile
 31810  01ADFA  D00F               	goto	l10519
 31811                           
 31812                           ;mcc_generated_files/tmr5.c: 136:   T5CONbits.TMR5ON = 0;
 31813  01ADFC  909A               	bcf	154,0,c	;volatile
 31814                           
 31815                           ;mcc_generated_files/tmr5.c: 139:   TMR5H = (timerVal >> 8);
 31816                           ;stkvar	_timerVal @ sp[(0)+-2]
 31817  01ADFE  0EFF               	movlw	255
 31818  01AE00  24E1               	addwf	fsr1l,w,c
 31819  01AE02  6ED9               	movwf	fsr2l,c
 31820  01AE04  0EFF               	movlw	255
 31821  01AE06  20E2               	addwfc	fsr1h,w,c
 31822  01AE08  6EDA               	movwf	fsr2h,c
 31823  01AE0A  50DF               	movf	indf2,w,c
 31824  01AE0C  6E99               	movwf	153,c	;volatile
 31825                           
 31826                           ;mcc_generated_files/tmr5.c: 140:   TMR5L = timerVal;
 31827                           ;stkvar	_timerVal @ sp[(0)+-2]
 31828  01AE0E  0EFE               	movlw	-2
 31829  01AE10  006F FF8F FF98     	movff	plusw1,16280	;volatile
 31830                           
 31831                           ;mcc_generated_files/tmr5.c: 143:   T5CONbits.TMR5ON = 1;
 31832  01AE16  809A               	bsf	154,0,c	;volatile
 31833                           
 31834                           ;mcc_generated_files/tmr5.c: 144:  } else {
 31835  01AE18  D00C               	goto	l1002
 31836  01AE1A                     l10519:
 31837                           
 31838                           ;mcc_generated_files/tmr5.c: 146:   TMR5H = (timerVal >> 8);
 31839                           ;stkvar	_timerVal @ sp[(0)+-2]
 31840  01AE1A  0EFF               	movlw	255
 31841  01AE1C  24E1               	addwf	fsr1l,w,c
 31842  01AE1E  6ED9               	movwf	fsr2l,c
 31843  01AE20  0EFF               	movlw	255
 31844  01AE22  20E2               	addwfc	fsr1h,w,c
 31845  01AE24  6EDA               	movwf	fsr2h,c
 31846  01AE26  50DF               	movf	indf2,w,c
 31847  01AE28  6E99               	movwf	153,c	;volatile
 31848                           
 31849                           ;mcc_generated_files/tmr5.c: 147:   TMR5L = timerVal;
 31850                           ;stkvar	_timerVal @ sp[(0)+-2]
 31851  01AE2A  0EFE               	movlw	-2
 31852  01AE2C  006F FF8F FF98     	movff	plusw1,16280	;volatile
 31853  01AE32                     l1002:
 31854                           
 31855                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 31856  01AE32  52E5               	movf	postdec1,f,c
 31857  01AE34  52E5               	movf	postdec1,f,c
 31858  01AE36  0012               	return		;funcret
 31859  01AE38                     __end_of_TMR5_WriteTimer:
 31860                           	opt callstack 0
 31861                           
 31862 ;; *************** function _TMR5_CallBack *****************
 31863 ;; Defined at:
 31864 ;;		line 184 in file "mcc_generated_files/tmr5.c"
 31865 ;; Parameters:    Size  Location     Type
 31866 ;;		None
 31867 ;; Auto vars:     Size  Location     Type
 31868 ;;		None
 31869 ;; Return value:  Size  Location     Type
 31870 ;;                  1  [STACK] void 
 31871 ;; Registers used:
 31872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prodh
 31873 ;; Tracked objects:
 31874 ;;		On entry : 3F/2
 31875 ;;		On exit  : 0/0
 31876 ;;		Unchanged: 0/0
 31877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31882 ;;Total ram usage:        0 bytes
 31883 ;; Hardware stack levels used:    1
 31884 ;; Hardware stack levels required when called:    8
 31885 ;; This function calls:
 31886 ;;		Absolute function
 31887 ;;		_TMR5_DefaultInterruptHandler
 31888 ;; This function is called by:
 31889 ;;		_TMR5_ISR
 31890 ;; This function uses a reentrant model
 31891 ;;
 31892                           
 31893                           	psect	text142
 31894  01B4F2                     __ptext142:
 31895                           	opt callstack 0
 31896  01B4F2                     _TMR5_CallBack:
 31897                           	opt callstack 8
 31898                           
 31899                           ;mcc_generated_files/tmr5.c: 187:  if (TMR5_InterruptHandler) {
 31900                           
 31901                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31902                           ;incstack = 0
 31903  01B4F2  0100               	movlb	0	; () banked
 31904  01B4F4  519D               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31905  01B4F6  119E               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31906  01B4F8  119F               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31907  01B4FA  B4D8               	btfsc	status,2,c
 31908  01B4FC  0012               	return	
 31909                           
 31910                           ; BSR set to: 0
 31911                           ;mcc_generated_files/tmr5.c: 188:   TMR5_InterruptHandler();
 31912  01B4FE  D801               	call	u978_28
 31913  01B500  0012               	return	
 31914  01B502                     u978_28:
 31915  01B502  0005               	push	
 31916  01B504  6EFA               	movwf	pclath,c
 31917  01B506  519D               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31918  01B508  6EFD               	movwf	tosl,c
 31919  01B50A  519E               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31920  01B50C  6EFE               	movwf	tosh,c
 31921  01B50E  519F               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31922  01B510  6EFF               	movwf	tosu,c
 31923  01B512  50FA               	movf	pclath,w,c
 31924  01B514  0012               	return		;indir
 31925  01B516                     __end_of_TMR5_CallBack:
 31926                           	opt callstack 0
 31927                           
 31928 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 31929 ;; Defined at:
 31930 ;;		line 197 in file "mcc_generated_files/tmr5.c"
 31931 ;; Parameters:    Size  Location     Type
 31932 ;;		None
 31933 ;; Auto vars:     Size  Location     Type
 31934 ;;		None
 31935 ;; Return value:  Size  Location     Type
 31936 ;;                  1  [STACK] void 
 31937 ;; Registers used:
 31938 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 31939 ;; Tracked objects:
 31940 ;;		On entry : 3F/0
 31941 ;;		On exit  : 0/0
 31942 ;;		Unchanged: 0/0
 31943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31948 ;;Total ram usage:        0 bytes
 31949 ;; Hardware stack levels used:    1
 31950 ;; Hardware stack levels required when called:    7
 31951 ;; This function calls:
 31952 ;;		_check_day_time
 31953 ;; This function is called by:
 31954 ;;		_TMR5_Initialize
 31955 ;;		_TMR5_CallBack
 31956 ;; This function uses a reentrant model
 31957 ;;
 31958                           
 31959                           	psect	text143
 31960  01AF28                     __ptext143:
 31961                           	opt callstack 0
 31962  01AF28                     _TMR5_DefaultInterruptHandler:
 31963                           	opt callstack 8
 31964                           
 31965                           ;mcc_generated_files/tmr5.c: 201:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 31966                           
 31967                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31968                           ;incstack = 0
 31969  01AF28  A0BE               	btfss	190,0,c	;volatile
 31970  01AF2A  D002               	goto	u926_20
 31971  01AF2C  0E01               	movlw	1
 31972  01AF2E  D001               	goto	u926_26
 31973  01AF30                     u926_20:
 31974  01AF30  0E00               	movlw	0
 31975  01AF32                     u926_26:
 31976  01AF32  0AFF               	xorlw	255
 31977  01AF34  6E31               	movwf	(btemp+11)^0,c
 31978  01AF36  50BE               	movf	190,w,c	;volatile
 31979  01AF38  1831               	xorwf	(btemp+11)^0,w,c
 31980  01AF3A  0BFE               	andlw	-2
 31981  01AF3C  1831               	xorwf	(btemp+11)^0,w,c
 31982  01AF3E  6EBE               	movwf	190,c	;volatile
 31983                           
 31984                           ;mcc_generated_files/tmr5.c: 202:  V.timerint_count++;
 31985  01AF40  0E01               	movlw	1
 31986  01AF42  0102               	movlb	2	; () banked
 31987  01AF44  27C1               	addwf	(_V+186)& (0+255),f,b	;volatile
 31988  01AF46  0E00               	movlw	0
 31989  01AF48  23C2               	addwfc	(_V+187)& (0+255),f,b	;volatile
 31990  01AF4A  23C3               	addwfc	(_V+188)& (0+255),f,b	;volatile
 31991  01AF4C  23C4               	addwfc	(_V+189)& (0+255),f,b	;volatile
 31992                           
 31993                           ; BSR set to: 2
 31994                           ;mcc_generated_files/tmr5.c: 203:  V.ticks++;
 31995  01AF4E  0E01               	movlw	1
 31996  01AF50  2788               	addwf	(_V+129)& (0+255),f,b	;volatile
 31997  01AF52  0E00               	movlw	0
 31998  01AF54  2389               	addwfc	(_V+130)& (0+255),f,b	;volatile
 31999  01AF56  238A               	addwfc	(_V+131)& (0+255),f,b	;volatile
 32000  01AF58  238B               	addwfc	(_V+132)& (0+255),f,b	;volatile
 32001                           
 32002                           ; BSR set to: 2
 32003                           ;mcc_generated_files/tmr5.c: 204:  check_day_time();
 32004  01AF5A  EC16  F0CE         	call	_check_day_time	;wreg free
 32005                           
 32006                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32007  01AF5E  0012               	return		;funcret
 32008  01AF60                     __end_of_TMR5_DefaultInterruptHandler:
 32009                           	opt callstack 0
 32010                           
 32011 ;; *************** function _check_day_time *****************
 32012 ;; Defined at:
 32013 ;;		line 153 in file "mbmc.c"
 32014 ;; Parameters:    Size  Location     Type
 32015 ;;		None
 32016 ;; Auto vars:     Size  Location     Type
 32017 ;;		None
 32018 ;; Return value:  Size  Location     Type
 32019 ;;                  1  [STACK] _Bool 
 32020 ;; Registers used:
 32021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 32022 ;; Tracked objects:
 32023 ;;		On entry : 3F/2
 32024 ;;		On exit  : 0/0
 32025 ;;		Unchanged: 0/0
 32026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32031 ;;Total ram usage:        0 bytes
 32032 ;; Hardware stack levels used:    1
 32033 ;; Hardware stack levels required when called:    6
 32034 ;; This function calls:
 32035 ;;		___flge
 32036 ;;		_conv_raw_result
 32037 ;; This function is called by:
 32038 ;;		_TMR5_DefaultInterruptHandler
 32039 ;; This function uses a reentrant model
 32040 ;;
 32041                           
 32042                           	psect	text144
 32043  019C2C                     __ptext144:
 32044                           	opt callstack 0
 32045  019C2C                     _check_day_time:
 32046                           	opt callstack 8
 32047                           
 32048                           ;mbmc.c: 155:  static uint8_t day_delay = 0;;mbmc.c: 157:  if (!day_delay++) {
 32049                           
 32050                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32051                           ;incstack = 0
 32052  019C2C  2A1B               	incf	check_day_time@day_delay^0,f,c
 32053  019C2E  041B               	decf	check_day_time@day_delay^0,w,c
 32054  019C30  A4D8               	btfss	status,2,c
 32055  019C32  D057               	goto	l9673
 32056                           
 32057                           ;mbmc.c: 158:   if (!C.day) {
 32058  019C34  0101               	movlb	1	; () banked
 32059  019C36  51F7               	movf	(_C+247)& (0+255),w,b	;volatile
 32060  019C38  A4D8               	btfss	status,2,c
 32061  019C3A  D02A               	goto	l9669
 32062                           
 32063                           ; BSR set to: 1
 32064                           ;mbmc.c: 159:    if (conv_raw_result(V_LIGHT_SENSOR, CONV) > 22.0) {
 32065  019C3C  0E00               	movlw	0
 32066  019C3E  6EE6               	movwf	postinc1,c
 32067  019C40  0E0D               	movlw	13
 32068  019C42  6EE6               	movwf	postinc1,c
 32069  019C44  EC60  F0A7         	call	_conv_raw_result	;wreg free
 32070  019C48  0060  F09B  FFE6   	movff	btemp,postinc1
 32071  019C4E  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32072  019C54  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32073  019C5A  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32074  019C60  0E00               	movlw	0
 32075  019C62  6EE6               	movwf	postinc1,c
 32076  019C64  0E00               	movlw	0
 32077  019C66  6EE6               	movwf	postinc1,c
 32078  019C68  0EB0               	movlw	176
 32079  019C6A  6EE6               	movwf	postinc1,c
 32080  019C6C  0E41               	movlw	65
 32081  019C6E  6EE6               	movwf	postinc1,c
 32082  019C70  EC78  F0C3         	call	___flge	;wreg free
 32083  019C74  B026               	btfsc	btemp& (0+255),0,c
 32084  019C76  D035               	goto	l9673
 32085                           
 32086                           ;mbmc.c: 160:     C.day = 1;
 32087  019C78  0E01               	movlw	1
 32088  019C7A  0101               	movlb	1	; () banked
 32089  019C7C  6FF7               	movwf	(_C+247)& (0+255),b	;volatile
 32090                           
 32091                           ; BSR set to: 1
 32092                           ;mbmc.c: 161:     C.day_start = V.ticks;
 32093  019C7E  C288  F1F8         	movff	_V+129,_C+248	;volatile
 32094  019C82  C289  F1F9         	movff	_V+130,_C+249	;volatile
 32095  019C86  C28A  F1FA         	movff	_V+131,_C+250	;volatile
 32096  019C8A  C28B  F1FB         	movff	_V+132,_C+251	;volatile
 32097  019C8E  0012               	return	
 32098  019C90                     l9669:
 32099                           
 32100                           ; BSR set to: 1
 32101                           ;mbmc.c: 165:    if (conv_raw_result(V_LIGHT_SENSOR, CONV) < 12.0) {
 32102  019C90  0E00               	movlw	0
 32103  019C92  6EE6               	movwf	postinc1,c
 32104  019C94  0E00               	movlw	0
 32105  019C96  6EE6               	movwf	postinc1,c
 32106  019C98  0E40               	movlw	64
 32107  019C9A  6EE6               	movwf	postinc1,c
 32108  019C9C  0E41               	movlw	65
 32109  019C9E  6EE6               	movwf	postinc1,c
 32110  019CA0  0E00               	movlw	0
 32111  019CA2  6EE6               	movwf	postinc1,c
 32112  019CA4  0E0D               	movlw	13
 32113  019CA6  6EE6               	movwf	postinc1,c
 32114  019CA8  EC60  F0A7         	call	_conv_raw_result	;wreg free
 32115  019CAC  0060  F09B  FFE6   	movff	btemp,postinc1
 32116  019CB2  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32117  019CB8  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32118  019CBE  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32119  019CC4  EC78  F0C3         	call	___flge	;wreg free
 32120  019CC8  B026               	btfsc	btemp& (0+255),0,c
 32121  019CCA  D00B               	goto	l9673
 32122                           
 32123                           ;mbmc.c: 166:     C.day = 0;
 32124  019CCC  0101               	movlb	1	; () banked
 32125  019CCE  6BF7               	clrf	(_C+247)& (0+255),b	;volatile
 32126                           
 32127                           ;mbmc.c: 167:     C.day_end = V.ticks;
 32128  019CD0  C288  F1FC         	movff	_V+129,_C+252	;volatile
 32129  019CD4  C289  F1FD         	movff	_V+130,_C+253	;volatile
 32130  019CD8  C28A  F1FE         	movff	_V+131,_C+254	;volatile
 32131  019CDC  C28B  F1FF         	movff	_V+132,_C+255	;volatile
 32132                           
 32133                           ;mbmc.c: 168:     return 1;;	Return value of _check_day_time is never used
 32134  019CE0  0012               	return	
 32135  019CE2                     l9673:
 32136                           
 32137                           ;mbmc.c: 172:  if (day_delay >= 250)
 32138  019CE2  0EF9               	movlw	249
 32139  019CE4  641B               	cpfsgt	check_day_time@day_delay^0,c
 32140  019CE6  0012               	return	
 32141                           
 32142                           ;mbmc.c: 173:   day_delay = 0;
 32143  019CE8  6A1B               	clrf	check_day_time@day_delay^0,c
 32144                           
 32145                           ; _check_day_time: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 32146  019CEA  0012               	return		;funcret
 32147  019CEC                     __end_of_check_day_time:
 32148                           	opt callstack 0
 32149                           
 32150 ;; *************** function _TMR3_ISR *****************
 32151 ;; Defined at:
 32152 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 32153 ;; Parameters:    Size  Location     Type
 32154 ;;		None
 32155 ;; Auto vars:     Size  Location     Type
 32156 ;;		None
 32157 ;; Return value:  Size  Location     Type
 32158 ;;                  1    wreg      void 
 32159 ;; Registers used:
 32160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32161 ;; Tracked objects:
 32162 ;;		On entry : 0/0
 32163 ;;		On exit  : 0/0
 32164 ;;		Unchanged: 0/0
 32165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32168 ;;      Temps:          0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32169 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32170 ;;Total ram usage:       25 bytes
 32171 ;; Hardware stack levels used:    1
 32172 ;; Hardware stack levels required when called:   14
 32173 ;; This function calls:
 32174 ;;		_TMR3_CallBack
 32175 ;;		_TMR3_WriteTimer
 32176 ;; This function is called by:
 32177 ;;		Interrupt level 1
 32178 ;; This function uses a non-reentrant model
 32179 ;;
 32180                           
 32181                           	psect	text145
 32182  018854                     __ptext145:
 32183                           	opt callstack 0
 32184  018854                     _TMR3_ISR:
 32185                           	opt callstack 3
 32186                           
 32187                           ;incstack = 0
 32188  018854  006F FF60  F0E0    	movff	status,??_TMR3_ISR
 32189  01885A  006F FFD8  F0E1    	movff	tblptrl,??_TMR3_ISR+1
 32190  018860  006F FFDC  F0E2    	movff	tblptrh,??_TMR3_ISR+2
 32191  018866  006F FFE0  F0E3    	movff	tblptru,??_TMR3_ISR+3
 32192  01886C  006F FFD4  F0E4    	movff	tablat,??_TMR3_ISR+4
 32193  018872  0060  F098  F0E5   	movff	btemp,??_TMR3_ISR+5
 32194  018878  0060  F09C  F0E6   	movff	btemp+1,??_TMR3_ISR+6
 32195  01887E  0060  F0A0  F0E7   	movff	btemp+2,??_TMR3_ISR+7
 32196  018884  0060  F0A4  F0E8   	movff	btemp+3,??_TMR3_ISR+8
 32197  01888A  0060  F0A8  F0E9   	movff	btemp+4,??_TMR3_ISR+9
 32198  018890  0060  F0AC  F0EA   	movff	btemp+5,??_TMR3_ISR+10
 32199  018896  0060  F0B0  F0EB   	movff	btemp+6,??_TMR3_ISR+11
 32200  01889C  0060  F0B4  F0EC   	movff	btemp+7,??_TMR3_ISR+12
 32201  0188A2  0060  F0B8  F0ED   	movff	btemp+8,??_TMR3_ISR+13
 32202  0188A8  0060  F0BC  F0EE   	movff	btemp+9,??_TMR3_ISR+14
 32203  0188AE  0060  F0C0  F0EF   	movff	btemp+10,??_TMR3_ISR+15
 32204  0188B4  0060  F0C4  F0F0   	movff	btemp+11,??_TMR3_ISR+16
 32205  0188BA  0060  F0D8  F0F1   	movff	btemp+16,??_TMR3_ISR+17
 32206  0188C0  0060  F0DC  F0F2   	movff	btemp+17,??_TMR3_ISR+18
 32207  0188C6  0060  F0E0  F0F3   	movff	btemp+18,??_TMR3_ISR+19
 32208  0188CC  0060  F0E4  F0F4   	movff	btemp+19,??_TMR3_ISR+20
 32209  0188D2  0060  F0E8  F0F5   	movff	btemp+20,??_TMR3_ISR+21
 32210  0188D8  0060  F0EC  F0F6   	movff	btemp+21,??_TMR3_ISR+22
 32211  0188DE  0060  F0F0  F0F7   	movff	btemp+22,??_TMR3_ISR+23
 32212  0188E4  0060  F0F4  F0F8   	movff	btemp+23,??_TMR3_ISR+24
 32213  0188EA  EE16  F0A1         	lfsr	1,___intlo_sp
 32214                           
 32215                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 32216  0188EE  0139               	movlb	57	; () banked
 32217  0188F0  9DA6               	bcf	166,6,b	;volatile
 32218                           
 32219                           ; BSR set to: 57
 32220                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 32221  0188F2  0060  F04B  FFE6   	movff	_timer3ReloadVal,postinc1
 32222  0188F8  0060  F04F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 32223  0188FE  EC1C  F0D7         	call	_TMR3_WriteTimer	;wreg free
 32224                           
 32225                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 32226  018902  4A10               	infsnz	TMR3_ISR@CountCallBack^0,f,c	;volatile
 32227  018904  2A11               	incf	(TMR3_ISR@CountCallBack+1)^0,f,c	;volatile
 32228  018906  5011               	movf	(TMR3_ISR@CountCallBack+1)^0,w,c	;volatile
 32229  018908  E104               	bnz	i1u1221_20
 32230  01890A  0E28               	movlw	40
 32231  01890C  5C10               	subwf	TMR3_ISR@CountCallBack^0,w,c	;volatile
 32232  01890E  A0D8               	btfss	status,0,c
 32233  018910  D004               	goto	i1l1207
 32234  018912                     i1u1221_20:
 32235                           
 32236                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 32237  018912  EC8B  F0DA         	call	_TMR3_CallBack	;wreg free
 32238                           
 32239                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 32240  018916  6A10               	clrf	TMR3_ISR@CountCallBack^0,c	;volatile
 32241  018918  6A11               	clrf	(TMR3_ISR@CountCallBack+1)^0,c	;volatile
 32242  01891A                     i1l1207:
 32243  01891A  0060  F3E0  F03D   	movff	??_TMR3_ISR+24,btemp+23
 32244  018920  0060  F3DC  F03C   	movff	??_TMR3_ISR+23,btemp+22
 32245  018926  0060  F3D8  F03B   	movff	??_TMR3_ISR+22,btemp+21
 32246  01892C  0060  F3D4  F03A   	movff	??_TMR3_ISR+21,btemp+20
 32247  018932  0060  F3D0  F039   	movff	??_TMR3_ISR+20,btemp+19
 32248  018938  0060  F3CC  F038   	movff	??_TMR3_ISR+19,btemp+18
 32249  01893E  0060  F3C8  F037   	movff	??_TMR3_ISR+18,btemp+17
 32250  018944  0060  F3C4  F036   	movff	??_TMR3_ISR+17,btemp+16
 32251  01894A  0060  F3C0  F031   	movff	??_TMR3_ISR+16,btemp+11
 32252  018950  0060  F3BC  F030   	movff	??_TMR3_ISR+15,btemp+10
 32253  018956  0060  F3B8  F02F   	movff	??_TMR3_ISR+14,btemp+9
 32254  01895C  0060  F3B4  F02E   	movff	??_TMR3_ISR+13,btemp+8
 32255  018962  0060  F3B0  F02D   	movff	??_TMR3_ISR+12,btemp+7
 32256  018968  0060  F3AC  F02C   	movff	??_TMR3_ISR+11,btemp+6
 32257  01896E  0060  F3A8  F02B   	movff	??_TMR3_ISR+10,btemp+5
 32258  018974  0060  F3A4  F02A   	movff	??_TMR3_ISR+9,btemp+4
 32259  01897A  0060  F3A0  F029   	movff	??_TMR3_ISR+8,btemp+3
 32260  018980  0060  F39C  F028   	movff	??_TMR3_ISR+7,btemp+2
 32261  018986  0060  F398  F027   	movff	??_TMR3_ISR+6,btemp+1
 32262  01898C  0060  F394  F026   	movff	??_TMR3_ISR+5,btemp
 32263  018992  0060  F393  FFF5   	movff	??_TMR3_ISR+4,tablat
 32264  018998  0060  F38F  FFF8   	movff	??_TMR3_ISR+3,tblptru
 32265  01899E  0060  F38B  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 32266  0189A4  0060  F387  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 32267  0189AA  0060  F383  FFD8   	movff	??_TMR3_ISR,status
 32268  0189B0  0011               	retfie		f
 32269  0189B2                     __end_of_TMR3_ISR:
 32270                           	opt callstack 0
 32271                           
 32272 ;; *************** function _TMR3_WriteTimer *****************
 32273 ;; Defined at:
 32274 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 32275 ;; Parameters:    Size  Location     Type
 32276 ;;  timerVal        2  [STACK] unsigned short 
 32277 ;; Auto vars:     Size  Location     Type
 32278 ;;		None
 32279 ;; Return value:  Size  Location     Type
 32280 ;;                  1  [STACK] void 
 32281 ;; Registers used:
 32282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32283 ;; Tracked objects:
 32284 ;;		On entry : 3F/39
 32285 ;;		On exit  : 0/0
 32286 ;;		Unchanged: 0/0
 32287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32292 ;;Total ram usage:        0 bytes
 32293 ;; Hardware stack levels used:    1
 32294 ;; Hardware stack levels required when called:    3
 32295 ;; This function calls:
 32296 ;;		Nothing
 32297 ;; This function is called by:
 32298 ;;		_TMR3_ISR
 32299 ;; This function uses a reentrant model
 32300 ;;
 32301                           
 32302                           	psect	text146
 32303  01AE38                     __ptext146:
 32304                           	opt callstack 0
 32305  01AE38                     _TMR3_WriteTimer:
 32306                           	opt callstack 13
 32307                           
 32308                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 32309                           
 32310                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32311                           ;incstack = 0
 32312  01AE38  A4A6               	btfss	166,2,c	;volatile
 32313  01AE3A  D00F               	goto	l6525
 32314                           
 32315                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 32316  01AE3C  90A6               	bcf	166,0,c	;volatile
 32317                           
 32318                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 32319                           ;stkvar	_timerVal @ sp[(0)+-2]
 32320  01AE3E  0EFF               	movlw	255
 32321  01AE40  24E1               	addwf	fsr1l,w,c
 32322  01AE42  6ED9               	movwf	fsr2l,c
 32323  01AE44  0EFF               	movlw	255
 32324  01AE46  20E2               	addwfc	fsr1h,w,c
 32325  01AE48  6EDA               	movwf	fsr2h,c
 32326  01AE4A  50DF               	movf	indf2,w,c
 32327  01AE4C  6EA5               	movwf	165,c	;volatile
 32328                           
 32329                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 32330                           ;stkvar	_timerVal @ sp[(0)+-2]
 32331  01AE4E  0EFE               	movlw	-2
 32332  01AE50  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32333                           
 32334                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 32335  01AE56  80A6               	bsf	166,0,c	;volatile
 32336                           
 32337                           ;mcc_generated_files/tmr3.c: 141:     }
 32338  01AE58  D00C               	goto	l1190
 32339  01AE5A                     l6525:
 32340                           
 32341                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 32342                           ;stkvar	_timerVal @ sp[(0)+-2]
 32343  01AE5A  0EFF               	movlw	255
 32344  01AE5C  24E1               	addwf	fsr1l,w,c
 32345  01AE5E  6ED9               	movwf	fsr2l,c
 32346  01AE60  0EFF               	movlw	255
 32347  01AE62  20E2               	addwfc	fsr1h,w,c
 32348  01AE64  6EDA               	movwf	fsr2h,c
 32349  01AE66  50DF               	movf	indf2,w,c
 32350  01AE68  6EA5               	movwf	165,c	;volatile
 32351                           
 32352                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 32353                           ;stkvar	_timerVal @ sp[(0)+-2]
 32354  01AE6A  0EFE               	movlw	-2
 32355  01AE6C  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32356  01AE72                     l1190:
 32357                           
 32358                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 32359  01AE72  52E5               	movf	postdec1,f,c
 32360  01AE74  52E5               	movf	postdec1,f,c
 32361  01AE76  0012               	return		;funcret
 32362  01AE78                     __end_of_TMR3_WriteTimer:
 32363                           	opt callstack 0
 32364                           
 32365 ;; *************** function _TMR3_CallBack *****************
 32366 ;; Defined at:
 32367 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 32368 ;; Parameters:    Size  Location     Type
 32369 ;;		None
 32370 ;; Auto vars:     Size  Location     Type
 32371 ;;		None
 32372 ;; Return value:  Size  Location     Type
 32373 ;;                  1  [STACK] void 
 32374 ;; Registers used:
 32375 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32376 ;; Tracked objects:
 32377 ;;		On entry : 0/39
 32378 ;;		On exit  : 0/0
 32379 ;;		Unchanged: 0/0
 32380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32385 ;;Total ram usage:        0 bytes
 32386 ;; Hardware stack levels used:    1
 32387 ;; Hardware stack levels required when called:   13
 32388 ;; This function calls:
 32389 ;;		Absolute function
 32390 ;;		_TMR3_DefaultInterruptHandler
 32391 ;;		_calc_bsoc
 32392 ;; This function is called by:
 32393 ;;		_TMR3_ISR
 32394 ;; This function uses a reentrant model
 32395 ;;
 32396                           
 32397                           	psect	text147
 32398  01B516                     __ptext147:
 32399                           	opt callstack 0
 32400  01B516                     _TMR3_CallBack:
 32401                           	opt callstack 3
 32402                           
 32403                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 32404                           
 32405                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32406                           ;incstack = 0
 32407  01B516  0100               	movlb	0	; () banked
 32408  01B518  519A               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32409  01B51A  119B               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32410  01B51C  119C               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32411  01B51E  B4D8               	btfsc	status,2,c
 32412  01B520  0012               	return	
 32413                           
 32414                           ; BSR set to: 0
 32415                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 32416  01B522  D801               	call	u1210_28
 32417  01B524  0012               	return	
 32418  01B526                     u1210_28:
 32419  01B526  0005               	push	
 32420  01B528  6EFA               	movwf	pclath,c
 32421  01B52A  519A               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32422  01B52C  6EFD               	movwf	tosl,c
 32423  01B52E  519B               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32424  01B530  6EFE               	movwf	tosh,c
 32425  01B532  519C               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32426  01B534  6EFF               	movwf	tosu,c
 32427  01B536  50FA               	movf	pclath,w,c
 32428  01B538  0012               	return		;indir
 32429  01B53A                     __end_of_TMR3_CallBack:
 32430                           	opt callstack 0
 32431                           
 32432 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 32433 ;; Defined at:
 32434 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 32435 ;; Parameters:    Size  Location     Type
 32436 ;;		None
 32437 ;; Auto vars:     Size  Location     Type
 32438 ;;		None
 32439 ;; Return value:  Size  Location     Type
 32440 ;;                  1  [STACK] void 
 32441 ;; Registers used:
 32442 ;;		None
 32443 ;; Tracked objects:
 32444 ;;		On entry : 3F/0
 32445 ;;		On exit  : 0/0
 32446 ;;		Unchanged: 0/0
 32447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32452 ;;Total ram usage:        0 bytes
 32453 ;; Hardware stack levels used:    1
 32454 ;; Hardware stack levels required when called:    3
 32455 ;; This function calls:
 32456 ;;		Nothing
 32457 ;; This function is called by:
 32458 ;;		_TMR3_Initialize
 32459 ;;		_TMR3_CallBack
 32460 ;; This function uses a reentrant model
 32461 ;;
 32462                           
 32463                           	psect	text148
 32464  01B870                     __ptext148:
 32465                           	opt callstack 0
 32466  01B870                     _TMR3_DefaultInterruptHandler:
 32467                           	opt callstack 12
 32468                           
 32469                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32470                           
 32471                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32472                           ;incstack = 0
 32473  01B870  0012               	return		;funcret
 32474  01B872                     __end_of_TMR3_DefaultInterruptHandler:
 32475                           	opt callstack 0
 32476                           
 32477 ;; *************** function _calc_bsoc *****************
 32478 ;; Defined at:
 32479 ;;		line 39 in file "bsoc.c"
 32480 ;; Parameters:    Size  Location     Type
 32481 ;;		None
 32482 ;; Auto vars:     Size  Location     Type
 32483 ;;  log_ptr         2  [STACK] PTR unsigned char 
 32484 ;;		 -> port_data(512), 
 32485 ;; Return value:  Size  Location     Type
 32486 ;;                  1  [STACK] void 
 32487 ;; Registers used:
 32488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 32489 ;; Tracked objects:
 32490 ;;		On entry : 3F/0
 32491 ;;		On exit  : 3F/1
 32492 ;;		Unchanged: 0/0
 32493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32498 ;;Total ram usage:        0 bytes
 32499 ;; Hardware stack levels used:    1
 32500 ;; Hardware stack levels required when called:   12
 32501 ;; This function calls:
 32502 ;;		_StartTimer
 32503 ;;		___fladd
 32504 ;;		___fldiv
 32505 ;;		___flge
 32506 ;;		___flmul
 32507 ;;		___flneg
 32508 ;;		___fltol
 32509 ;;		_fabsf
 32510 ;;		_port_data_dma_ptr
 32511 ;;		_send_port_data_dma
 32512 ;;		_sprintf
 32513 ;;		_strlen
 32514 ;; This function is called by:
 32515 ;;		_init_bsoc
 32516 ;;		_TMR3_CallBack
 32517 ;; This function uses a reentrant model
 32518 ;;
 32519                           
 32520                           	psect	text149
 32521  014204                     __ptext149:
 32522                           	opt callstack 0
 32523  014204                     _calc_bsoc:
 32524                           	opt callstack 0
 32525                           
 32526                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32527  014204  52E6               	movf	postinc1,f,c
 32528  014206  52E6               	movf	postinc1,f,c
 32529                           
 32530                           ;incstack = 0
 32531                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 42:  static uint8_t log_update_wait = 0;;bsoc.c
      +                          : 44:  do { LATEbits.LATE1 = 1; } while(0);
 32532  014208  82BE               	bsf	190,1,c	;volatile
 32533                           
 32534                           ;bsoc.c: 46:  C.dynamic_ah += (C.c_bat / 3600.0);
 32535  01420A  0E00               	movlw	0
 32536  01420C  6EE6               	movwf	postinc1,c
 32537  01420E  0E00               	movlw	0
 32538  014210  6EE6               	movwf	postinc1,c
 32539  014212  0E61               	movlw	97
 32540  014214  6EE6               	movwf	postinc1,c
 32541  014216  0E45               	movlw	69
 32542  014218  6EE6               	movwf	postinc1,c
 32543  01421A  0060  F513  FFE6   	movff	_C+68,postinc1
 32544  014220  0060  F517  FFE6   	movff	_C+69,postinc1
 32545  014226  0060  F51B  FFE6   	movff	_C+70,postinc1
 32546  01422C  0060  F51F  FFE6   	movff	_C+71,postinc1
 32547  014232  ECA3  F0A4         	call	___fldiv	;wreg free
 32548  014236  0060  F09B  FFE6   	movff	btemp,postinc1
 32549  01423C  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32550  014242  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32551  014248  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32552  01424E  0060  F633  FFE6   	movff	_C+140,postinc1
 32553  014254  0060  F637  FFE6   	movff	_C+141,postinc1
 32554  01425A  0060  F63B  FFE6   	movff	_C+142,postinc1
 32555  014260  0060  F63F  FFE6   	movff	_C+143,postinc1
 32556  014266  EC24  F09D         	call	___fladd	;wreg free
 32557  01426A  0060  F098  F18C   	movff	btemp,_C+140	;volatile
 32558  014270  0060  F09C  F18D   	movff	btemp+1,_C+141	;volatile
 32559  014276  0060  F0A0  F18E   	movff	btemp+2,_C+142	;volatile
 32560  01427C  0060  F0A4  F18F   	movff	btemp+3,_C+143	;volatile
 32561                           
 32562                           ;bsoc.c: 47:  if (C.dynamic_ah > (C.bank_ah))
 32563  014282  0060  F633  FFE6   	movff	_C+140,postinc1
 32564  014288  0060  F637  FFE6   	movff	_C+141,postinc1
 32565  01428E  0060  F63B  FFE6   	movff	_C+142,postinc1
 32566  014294  0060  F63F  FFE6   	movff	_C+143,postinc1
 32567  01429A  0060  F623  FFE6   	movff	_C+136,postinc1
 32568  0142A0  0060  F627  FFE6   	movff	_C+137,postinc1
 32569  0142A6  0060  F62B  FFE6   	movff	_C+138,postinc1
 32570  0142AC  0060  F62F  FFE6   	movff	_C+139,postinc1
 32571  0142B2  EC78  F0C3         	call	___flge	;wreg free
 32572  0142B6  B026               	btfsc	btemp& (0+255),0,c
 32573  0142B8  D008               	goto	l12485
 32574                           
 32575                           ;bsoc.c: 48:   C.dynamic_ah = C.bank_ah;
 32576  0142BA  C188  F18C         	movff	_C+136,_C+140	;volatile
 32577  0142BE  C189  F18D         	movff	_C+137,_C+141	;volatile
 32578  0142C2  C18A  F18E         	movff	_C+138,_C+142	;volatile
 32579  0142C6  C18B  F18F         	movff	_C+139,_C+143	;volatile
 32580  0142CA                     l12485:
 32581                           
 32582                           ;bsoc.c: 49:  if (C.dynamic_ah < 0.1)
 32583  0142CA  0ECD               	movlw	205
 32584  0142CC  6EE6               	movwf	postinc1,c
 32585  0142CE  0ECC               	movlw	204
 32586  0142D0  6EE6               	movwf	postinc1,c
 32587  0142D2  0ECC               	movlw	204
 32588  0142D4  6EE6               	movwf	postinc1,c
 32589  0142D6  0E3D               	movlw	61
 32590  0142D8  6EE6               	movwf	postinc1,c
 32591  0142DA  0060  F633  FFE6   	movff	_C+140,postinc1
 32592  0142E0  0060  F637  FFE6   	movff	_C+141,postinc1
 32593  0142E6  0060  F63B  FFE6   	movff	_C+142,postinc1
 32594  0142EC  0060  F63F  FFE6   	movff	_C+143,postinc1
 32595  0142F2  EC78  F0C3         	call	___flge	;wreg free
 32596  0142F6  B026               	btfsc	btemp& (0+255),0,c
 32597  0142F8  D009               	goto	l12489
 32598                           
 32599                           ;bsoc.c: 50:   C.dynamic_ah = 0.1;
 32600  0142FA  0ECD               	movlw	205
 32601  0142FC  0101               	movlb	1	; () banked
 32602  0142FE  6F8C               	movwf	(_C+140)& (0+255),b	;volatile
 32603  014300  0ECC               	movlw	204
 32604  014302  6F8D               	movwf	(_C+141)& (0+255),b	;volatile
 32605  014304  0ECC               	movlw	204
 32606  014306  6F8E               	movwf	(_C+142)& (0+255),b	;volatile
 32607  014308  0E3D               	movlw	61
 32608  01430A  6F8F               	movwf	(_C+143)& (0+255),b	;volatile
 32609  01430C                     l12489:
 32610                           
 32611                           ;bsoc.c: 52:  C.pv_ah += (C.c_pv / 3600.0);
 32612  01430C  0E00               	movlw	0
 32613  01430E  6EE6               	movwf	postinc1,c
 32614  014310  0E00               	movlw	0
 32615  014312  6EE6               	movwf	postinc1,c
 32616  014314  0E61               	movlw	97
 32617  014316  6EE6               	movwf	postinc1,c
 32618  014318  0E45               	movlw	69
 32619  01431A  6EE6               	movwf	postinc1,c
 32620  01431C  0060  F523  FFE6   	movff	_C+72,postinc1
 32621  014322  0060  F527  FFE6   	movff	_C+73,postinc1
 32622  014328  0060  F52B  FFE6   	movff	_C+74,postinc1
 32623  01432E  0060  F52F  FFE6   	movff	_C+75,postinc1
 32624  014334  ECA3  F0A4         	call	___fldiv	;wreg free
 32625  014338  0060  F09B  FFE6   	movff	btemp,postinc1
 32626  01433E  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32627  014344  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32628  01434A  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32629  014350  0060  F643  FFE6   	movff	_C+144,postinc1
 32630  014356  0060  F647  FFE6   	movff	_C+145,postinc1
 32631  01435C  0060  F64B  FFE6   	movff	_C+146,postinc1
 32632  014362  0060  F64F  FFE6   	movff	_C+147,postinc1
 32633  014368  EC24  F09D         	call	___fladd	;wreg free
 32634  01436C  0060  F098  F190   	movff	btemp,_C+144	;volatile
 32635  014372  0060  F09C  F191   	movff	btemp+1,_C+145	;volatile
 32636  014378  0060  F0A0  F192   	movff	btemp+2,_C+146	;volatile
 32637  01437E  0060  F0A4  F193   	movff	btemp+3,_C+147	;volatile
 32638                           
 32639                           ;bsoc.c: 53:  C.pvkw += (C.p_pv / 3600.0);
 32640  014384  0E00               	movlw	0
 32641  014386  6EE6               	movwf	postinc1,c
 32642  014388  0E00               	movlw	0
 32643  01438A  6EE6               	movwf	postinc1,c
 32644  01438C  0E61               	movlw	97
 32645  01438E  6EE6               	movwf	postinc1,c
 32646  014390  0E45               	movlw	69
 32647  014392  6EE6               	movwf	postinc1,c
 32648  014394  0060  F5E3  FFE6   	movff	_C+120,postinc1
 32649  01439A  0060  F5E7  FFE6   	movff	_C+121,postinc1
 32650  0143A0  0060  F5EB  FFE6   	movff	_C+122,postinc1
 32651  0143A6  0060  F5EF  FFE6   	movff	_C+123,postinc1
 32652  0143AC  ECA3  F0A4         	call	___fldiv	;wreg free
 32653  0143B0  0060  F09B  FFE6   	movff	btemp,postinc1
 32654  0143B6  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32655  0143BC  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32656  0143C2  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32657  0143C8  0060  F683  FFE6   	movff	_C+160,postinc1
 32658  0143CE  0060  F687  FFE6   	movff	_C+161,postinc1
 32659  0143D4  0060  F68B  FFE6   	movff	_C+162,postinc1
 32660  0143DA  0060  F68F  FFE6   	movff	_C+163,postinc1
 32661  0143E0  EC24  F09D         	call	___fladd	;wreg free
 32662  0143E4  0060  F098  F1A0   	movff	btemp,_C+160	;volatile
 32663  0143EA  0060  F09C  F1A1   	movff	btemp+1,_C+161	;volatile
 32664  0143F0  0060  F0A0  F1A2   	movff	btemp+2,_C+162	;volatile
 32665  0143F6  0060  F0A4  F1A3   	movff	btemp+3,_C+163	;volatile
 32666                           
 32667                           ;bsoc.c: 54:  C.invkw += (C.p_inverter / 3600.0);
 32668  0143FC  0E00               	movlw	0
 32669  0143FE  6EE6               	movwf	postinc1,c
 32670  014400  0E00               	movlw	0
 32671  014402  6EE6               	movwf	postinc1,c
 32672  014404  0E61               	movlw	97
 32673  014406  6EE6               	movwf	postinc1,c
 32674  014408  0E45               	movlw	69
 32675  01440A  6EE6               	movwf	postinc1,c
 32676  01440C  0060  F5D3  FFE6   	movff	_C+116,postinc1
 32677  014412  0060  F5D7  FFE6   	movff	_C+117,postinc1
 32678  014418  0060  F5DB  FFE6   	movff	_C+118,postinc1
 32679  01441E  0060  F5DF  FFE6   	movff	_C+119,postinc1
 32680  014424  ECA3  F0A4         	call	___fldiv	;wreg free
 32681  014428  0060  F09B  FFE6   	movff	btemp,postinc1
 32682  01442E  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32683  014434  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32684  01443A  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32685  014440  0060  F693  FFE6   	movff	_C+164,postinc1
 32686  014446  0060  F697  FFE6   	movff	_C+165,postinc1
 32687  01444C  0060  F69B  FFE6   	movff	_C+166,postinc1
 32688  014452  0060  F69F  FFE6   	movff	_C+167,postinc1
 32689  014458  EC24  F09D         	call	___fladd	;wreg free
 32690  01445C  0060  F098  F1A4   	movff	btemp,_C+164	;volatile
 32691  014462  0060  F09C  F1A5   	movff	btemp+1,_C+165	;volatile
 32692  014468  0060  F0A0  F1A6   	movff	btemp+2,_C+166	;volatile
 32693  01446E  0060  F0A4  F1A7   	movff	btemp+3,_C+167	;volatile
 32694                           
 32695                           ;bsoc.c: 55:  C.loadkw += (C.p_load / 3600.0);
 32696  014474  0E00               	movlw	0
 32697  014476  6EE6               	movwf	postinc1,c
 32698  014478  0E00               	movlw	0
 32699  01447A  6EE6               	movwf	postinc1,c
 32700  01447C  0E61               	movlw	97
 32701  01447E  6EE6               	movwf	postinc1,c
 32702  014480  0E45               	movlw	69
 32703  014482  6EE6               	movwf	postinc1,c
 32704  014484  0060  F5C3  FFE6   	movff	_C+112,postinc1
 32705  01448A  0060  F5C7  FFE6   	movff	_C+113,postinc1
 32706  014490  0060  F5CB  FFE6   	movff	_C+114,postinc1
 32707  014496  0060  F5CF  FFE6   	movff	_C+115,postinc1
 32708  01449C  ECA3  F0A4         	call	___fldiv	;wreg free
 32709  0144A0  0060  F09B  FFE6   	movff	btemp,postinc1
 32710  0144A6  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32711  0144AC  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32712  0144B2  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32713  0144B8  0060  F6A3  FFE6   	movff	_C+168,postinc1
 32714  0144BE  0060  F6A7  FFE6   	movff	_C+169,postinc1
 32715  0144C4  0060  F6AB  FFE6   	movff	_C+170,postinc1
 32716  0144CA  0060  F6AF  FFE6   	movff	_C+171,postinc1
 32717  0144D0  EC24  F09D         	call	___fladd	;wreg free
 32718  0144D4  0060  F098  F1A8   	movff	btemp,_C+168	;volatile
 32719  0144DA  0060  F09C  F1A9   	movff	btemp+1,_C+169	;volatile
 32720  0144E0  0060  F0A0  F1AA   	movff	btemp+2,_C+170	;volatile
 32721  0144E6  0060  F0A4  F1AB   	movff	btemp+3,_C+171	;volatile
 32722                           
 32723                           ;bsoc.c: 56:  if (C.p_bat > 0.0)
 32724  0144EC  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32725  0144F2  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32726  0144F8  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32727  0144FE  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32728  014504  0E00               	movlw	0
 32729  014506  6EE6               	movwf	postinc1,c
 32730  014508  0E00               	movlw	0
 32731  01450A  6EE6               	movwf	postinc1,c
 32732  01450C  0E00               	movlw	0
 32733  01450E  6EE6               	movwf	postinc1,c
 32734  014510  0E00               	movlw	0
 32735  014512  6EE6               	movwf	postinc1,c
 32736  014514  EC78  F0C3         	call	___flge	;wreg free
 32737  014518  B026               	btfsc	btemp& (0+255),0,c
 32738  01451A  D03C               	goto	l12501
 32739                           
 32740                           ;bsoc.c: 57:   C.bkwi += (C.p_bat / 3600.0);
 32741  01451C  0E00               	movlw	0
 32742  01451E  6EE6               	movwf	postinc1,c
 32743  014520  0E00               	movlw	0
 32744  014522  6EE6               	movwf	postinc1,c
 32745  014524  0E61               	movlw	97
 32746  014526  6EE6               	movwf	postinc1,c
 32747  014528  0E45               	movlw	69
 32748  01452A  6EE6               	movwf	postinc1,c
 32749  01452C  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32750  014532  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32751  014538  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32752  01453E  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32753  014544  ECA3  F0A4         	call	___fldiv	;wreg free
 32754  014548  0060  F09B  FFE6   	movff	btemp,postinc1
 32755  01454E  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32756  014554  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32757  01455A  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32758  014560  0060  F663  FFE6   	movff	_C+152,postinc1
 32759  014566  0060  F667  FFE6   	movff	_C+153,postinc1
 32760  01456C  0060  F66B  FFE6   	movff	_C+154,postinc1
 32761  014572  0060  F66F  FFE6   	movff	_C+155,postinc1
 32762  014578  EC24  F09D         	call	___fladd	;wreg free
 32763  01457C  0060  F098  F198   	movff	btemp,_C+152	;volatile
 32764  014582  0060  F09C  F199   	movff	btemp+1,_C+153	;volatile
 32765  014588  0060  F0A0  F19A   	movff	btemp+2,_C+154	;volatile
 32766  01458E  0060  F0A4  F19B   	movff	btemp+3,_C+155	;volatile
 32767  014594                     l12501:
 32768                           
 32769                           ;bsoc.c: 58:  if (C.p_bat < 0.0)
 32770  014594  0101               	movlb	1	; () banked
 32771  014596  AF7F               	btfss	(_C+127)& (0+255),7,b	;volatile
 32772  014598  D04A               	goto	l12505
 32773                           
 32774                           ; BSR set to: 1
 32775                           ;bsoc.c: 59:   C.bkwo += fabsf(C.p_bat / 3600.0);
 32776  01459A  0E00               	movlw	0
 32777  01459C  6EE6               	movwf	postinc1,c
 32778  01459E  0E00               	movlw	0
 32779  0145A0  6EE6               	movwf	postinc1,c
 32780  0145A2  0E61               	movlw	97
 32781  0145A4  6EE6               	movwf	postinc1,c
 32782  0145A6  0E45               	movlw	69
 32783  0145A8  6EE6               	movwf	postinc1,c
 32784  0145AA  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32785  0145B0  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32786  0145B6  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32787  0145BC  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32788  0145C2  ECA3  F0A4         	call	___fldiv	;wreg free
 32789  0145C6  0060  F09B  FFE6   	movff	btemp,postinc1
 32790  0145CC  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32791  0145D2  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32792  0145D8  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32793  0145DE  ECD2  F0CE         	call	_fabsf	;wreg free
 32794  0145E2  0060  F09B  FFE6   	movff	btemp,postinc1
 32795  0145E8  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32796  0145EE  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32797  0145F4  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32798  0145FA  0060  F673  FFE6   	movff	_C+156,postinc1
 32799  014600  0060  F677  FFE6   	movff	_C+157,postinc1
 32800  014606  0060  F67B  FFE6   	movff	_C+158,postinc1
 32801  01460C  0060  F67F  FFE6   	movff	_C+159,postinc1
 32802  014612  EC24  F09D         	call	___fladd	;wreg free
 32803  014616  0060  F098  F19C   	movff	btemp,_C+156	;volatile
 32804  01461C  0060  F09C  F19D   	movff	btemp+1,_C+157	;volatile
 32805  014622  0060  F0A0  F19E   	movff	btemp+2,_C+158	;volatile
 32806  014628  0060  F0A4  F19F   	movff	btemp+3,_C+159	;volatile
 32807  01462E                     l12505:
 32808                           
 32809                           ;bsoc.c: 61:  C.soc = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 32810  01462E  0E00               	movlw	0
 32811  014630  6EE6               	movwf	postinc1,c
 32812  014632  0E00               	movlw	0
 32813  014634  6EE6               	movwf	postinc1,c
 32814  014636  0EC8               	movlw	200
 32815  014638  6EE6               	movwf	postinc1,c
 32816  01463A  0E42               	movlw	66
 32817  01463C  6EE6               	movwf	postinc1,c
 32818  01463E  0060  F623  FFE6   	movff	_C+136,postinc1
 32819  014644  0060  F627  FFE6   	movff	_C+137,postinc1
 32820  01464A  0060  F62B  FFE6   	movff	_C+138,postinc1
 32821  014650  0060  F62F  FFE6   	movff	_C+139,postinc1
 32822  014656  0060  F633  FFE6   	movff	_C+140,postinc1
 32823  01465C  0060  F637  FFE6   	movff	_C+141,postinc1
 32824  014662  0060  F63B  FFE6   	movff	_C+142,postinc1
 32825  014668  0060  F63F  FFE6   	movff	_C+143,postinc1
 32826  01466E  ECA3  F0A4         	call	___fldiv	;wreg free
 32827  014672  0060  F09B  FFE6   	movff	btemp,postinc1
 32828  014678  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32829  01467E  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32830  014684  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32831  01468A  EC0F  F099         	call	___flmul	;wreg free
 32832  01468E  0060  F09B  FFE6   	movff	btemp,postinc1
 32833  014694  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32834  01469A  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32835  0146A0  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32836  0146A6  EC07  F0C2         	call	___fltol	;wreg free
 32837  0146AA  0060  F098  F030   	movff	btemp,btemp+10
 32838  0146B0  0060  F09C  F031   	movff	btemp+1,btemp+11
 32839  0146B6  0E01               	movlw	1
 32840  0146B8  2430               	addwf	(btemp+10)^0,w,c
 32841  0146BA  0101               	movlb	1	; () banked
 32842  0146BC  6FAE               	movwf	(_C+174)& (0+255),b	;volatile
 32843  0146BE  0E00               	movlw	0
 32844  0146C0  2031               	addwfc	(btemp+11)^0,w,c
 32845  0146C2  6FAF               	movwf	(_C+175)& (0+255),b	;volatile
 32846                           
 32847                           ; BSR set to: 1
 32848                           ;bsoc.c: 62:  if (C.soc > 100)
 32849  0146C4  51AF               	movf	(_C+175)& (0+255),w,b	;volatile
 32850  0146C6  E104               	bnz	u1203_20
 32851  0146C8  0E65               	movlw	101
 32852  0146CA  5DAE               	subwf	(_C+174)& (0+255),w,b	;volatile
 32853  0146CC  A0D8               	btfss	status,0,c
 32854  0146CE  D004               	goto	l12511
 32855  0146D0                     u1203_20:
 32856                           
 32857                           ; BSR set to: 1
 32858                           ;bsoc.c: 63:   C.soc = 100;
 32859  0146D0  0E00               	movlw	0
 32860  0146D2  6FAF               	movwf	(_C+175)& (0+255),b	;volatile
 32861  0146D4  0E64               	movlw	100
 32862  0146D6  6FAE               	movwf	(_C+174)& (0+255),b	;volatile
 32863  0146D8                     l12511:
 32864                           
 32865                           ; BSR set to: 1
 32866                           ;bsoc.c: 65:  if (C.c_bat < 0.0) {
 32867  0146D8  AF47               	btfss	(_C+71)& (0+255),7,b	;volatile
 32868  0146DA  D043               	goto	l12515
 32869                           
 32870                           ; BSR set to: 1
 32871                           ;bsoc.c: 66:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 32872  0146DC  0060  F513  FFE6   	movff	_C+68,postinc1
 32873  0146E2  0060  F517  FFE6   	movff	_C+69,postinc1
 32874  0146E8  0060  F51B  FFE6   	movff	_C+70,postinc1
 32875  0146EE  0060  F51F  FFE6   	movff	_C+71,postinc1
 32876  0146F4  0060  F633  FFE6   	movff	_C+140,postinc1
 32877  0146FA  0060  F637  FFE6   	movff	_C+141,postinc1
 32878  014700  0060  F63B  FFE6   	movff	_C+142,postinc1
 32879  014706  0060  F63F  FFE6   	movff	_C+143,postinc1
 32880  01470C  ECA3  F0A4         	call	___fldiv	;wreg free
 32881  014710  0060  F09B  FFE6   	movff	btemp,postinc1
 32882  014716  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32883  01471C  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32884  014722  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32885  014728  ECA6  F0D5         	call	___flneg	;wreg free
 32886  01472C  0060  F09B  FFE6   	movff	btemp,postinc1
 32887  014732  0060  F09F  FFE6   	movff	btemp+1,postinc1
 32888  014738  0060  F0A3  FFE6   	movff	btemp+2,postinc1
 32889  01473E  0060  F0A7  FFE6   	movff	btemp+3,postinc1
 32890  014744  EC07  F0C2         	call	___fltol	;wreg free
 32891  014748  0060  F098  F030   	movff	btemp,btemp+10
 32892  01474E  0060  F09C  F031   	movff	btemp+1,btemp+11
 32893  014754  0060  F0C0  F1AC   	movff	btemp+10,_C+172	;volatile
 32894  01475A  0060  F0C4  F1AD   	movff	btemp+11,_C+173	;volatile
 32895                           
 32896                           ;bsoc.c: 67:  } else {
 32897  014760  D004               	goto	l12517
 32898  014762                     l12515:
 32899                           
 32900                           ; BSR set to: 1
 32901                           ;bsoc.c: 68:   C.runtime = 120;
 32902  014762  0E00               	movlw	0
 32903  014764  6FAD               	movwf	(_C+173)& (0+255),b	;volatile
 32904  014766  0E78               	movlw	120
 32905  014768  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
 32906  01476A                     l12517:
 32907                           
 32908                           ;bsoc.c: 70:  if (C.runtime > 120)
 32909  01476A  0101               	movlb	1	; () banked
 32910  01476C  51AD               	movf	(_C+173)& (0+255),w,b	;volatile
 32911  01476E  E104               	bnz	u1205_20
 32912  014770  0E79               	movlw	121
 32913  014772  5DAC               	subwf	(_C+172)& (0+255),w,b	;volatile
 32914  014774  A0D8               	btfss	status,0,c
 32915  014776  D004               	goto	l12521
 32916  014778                     u1205_20:
 32917                           
 32918                           ; BSR set to: 1
 32919                           ;bsoc.c: 71:   C.runtime = 120;
 32920  014778  0E00               	movlw	0
 32921  01477A  6FAD               	movwf	(_C+173)& (0+255),b	;volatile
 32922  01477C  0E78               	movlw	120
 32923  01477E  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
 32924  014780                     l12521:
 32925                           
 32926                           ; BSR set to: 1
 32927                           ;bsoc.c: 73:  V.lowint_count++;
 32928  014780  0E01               	movlw	1
 32929  014782  0102               	movlb	2	; () banked
 32930  014784  27B9               	addwf	(_V+178)& (0+255),f,b	;volatile
 32931  014786  0E00               	movlw	0
 32932  014788  23BA               	addwfc	(_V+179)& (0+255),f,b	;volatile
 32933  01478A  23BB               	addwfc	(_V+180)& (0+255),f,b	;volatile
 32934  01478C  23BC               	addwfc	(_V+181)& (0+255),f,b	;volatile
 32935                           
 32936                           ; BSR set to: 2
 32937                           ;bsoc.c: 75:  if (!log_update_wait++) {
 32938  01478E  2A1A               	incf	calc_bsoc@log_update_wait^0,f,c
 32939  014790  041A               	decf	calc_bsoc@log_update_wait^0,w,c
 32940  014792  A4D8               	btfss	status,2,c
 32941  014794  D0CE               	goto	l12533
 32942                           
 32943                           ; BSR set to: 2
 32944                           ;bsoc.c: 76:   log_ptr = port_data_dma_ptr();
 32945  014796  ECFC  F0DB         	call	_port_data_dma_ptr	;wreg free
 32946                           
 32947                           ;stkvar	_log_ptr @ sp[(-2)+0]
 32948  01479A  0EFF               	movlw	-1
 32949  01479C  0060  F09F  FFE3   	movff	btemp+1,plusw1
 32950  0147A2  0EFE               	movlw	-2
 32951  0147A4  0060  F09B  FFE3   	movff	btemp,plusw1
 32952                           
 32953                           ;bsoc.c: 77:   sprintf((char*) log_ptr, " %lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4.3f,
      +                          %4.3f,%4.3f,%4.3f,%4.3d,%4.3d,%2.6f\r\n",
 32954  0147AA  0060  F613  FFE6   	movff	_C+132,postinc1
 32955  0147B0  0060  F617  FFE6   	movff	_C+133,postinc1
 32956  0147B6  0060  F61B  FFE6   	movff	_C+134,postinc1
 32957  0147BC  0060  F61F  FFE6   	movff	_C+135,postinc1
 32958  0147C2  0060  F6B3  FFE6   	movff	_C+172,postinc1
 32959  0147C8  0060  F6B7  FFE6   	movff	_C+173,postinc1
 32960  0147CE  0060  F6BB  FFE6   	movff	_C+174,postinc1
 32961  0147D4  0060  F6BF  FFE6   	movff	_C+175,postinc1
 32962  0147DA  0060  F643  FFE6   	movff	_C+144,postinc1
 32963  0147E0  0060  F647  FFE6   	movff	_C+145,postinc1
 32964  0147E6  0060  F64B  FFE6   	movff	_C+146,postinc1
 32965  0147EC  0060  F64F  FFE6   	movff	_C+147,postinc1
 32966  0147F2  0060  F633  FFE6   	movff	_C+140,postinc1
 32967  0147F8  0060  F637  FFE6   	movff	_C+141,postinc1
 32968  0147FE  0060  F63B  FFE6   	movff	_C+142,postinc1
 32969  014804  0060  F63F  FFE6   	movff	_C+143,postinc1
 32970  01480A  0060  F5D3  FFE6   	movff	_C+116,postinc1
 32971  014810  0060  F5D7  FFE6   	movff	_C+117,postinc1
 32972  014816  0060  F5DB  FFE6   	movff	_C+118,postinc1
 32973  01481C  0060  F5DF  FFE6   	movff	_C+119,postinc1
 32974  014822  0060  F5C3  FFE6   	movff	_C+112,postinc1
 32975  014828  0060  F5C7  FFE6   	movff	_C+113,postinc1
 32976  01482E  0060  F5CB  FFE6   	movff	_C+114,postinc1
 32977  014834  0060  F5CF  FFE6   	movff	_C+115,postinc1
 32978  01483A  0060  F5E3  FFE6   	movff	_C+120,postinc1
 32979  014840  0060  F5E7  FFE6   	movff	_C+121,postinc1
 32980  014846  0060  F5EB  FFE6   	movff	_C+122,postinc1
 32981  01484C  0060  F5EF  FFE6   	movff	_C+123,postinc1
 32982  014852  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32983  014858  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32984  01485E  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32985  014864  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32986  01486A  0060  F593  FFE6   	movff	_C+100,postinc1
 32987  014870  0060  F597  FFE6   	movff	_C+101,postinc1
 32988  014876  0060  F59B  FFE6   	movff	_C+102,postinc1
 32989  01487C  0060  F59F  FFE6   	movff	_C+103,postinc1
 32990  014882  0060  F533  FFE6   	movff	_C+76,postinc1
 32991  014888  0060  F537  FFE6   	movff	_C+77,postinc1
 32992  01488E  0060  F53B  FFE6   	movff	_C+78,postinc1
 32993  014894  0060  F53F  FFE6   	movff	_C+79,postinc1
 32994  01489A  0060  F543  FFE6   	movff	_C+80,postinc1
 32995  0148A0  0060  F547  FFE6   	movff	_C+81,postinc1
 32996  0148A6  0060  F54B  FFE6   	movff	_C+82,postinc1
 32997  0148AC  0060  F54F  FFE6   	movff	_C+83,postinc1
 32998  0148B2  0060  F553  FFE6   	movff	_C+84,postinc1
 32999  0148B8  0060  F557  FFE6   	movff	_C+85,postinc1
 33000  0148BE  0060  F55B  FFE6   	movff	_C+86,postinc1
 33001  0148C4  0060  F55F  FFE6   	movff	_C+87,postinc1
 33002  0148CA  0060  FA23  FFE6   	movff	_V+129,postinc1
 33003  0148D0  0060  FA27  FFE6   	movff	_V+130,postinc1
 33004  0148D6  0060  FA2B  FFE6   	movff	_V+131,postinc1
 33005  0148DC  0060  FA2F  FFE6   	movff	_V+132,postinc1
 33006  0148E2  0E67               	movlw	low STR_65
 33007  0148E4  6EE6               	movwf	postinc1,c
 33008  0148E6  0EFC               	movlw	high STR_65
 33009  0148E8  6EE6               	movwf	postinc1,c
 33010                           
 33011                           ;stkvar	_log_ptr @ sp[(-56)+0]
 33012  0148EA  0EC8               	movlw	-56
 33013  0148EC  006F FF8F FFE6     	movff	plusw1,postinc1
 33014  0148F2  006F FF8F FFE6     	movff	plusw1,postinc1
 33015  0148F8  0E38               	movlw	56
 33016  0148FA  6EE6               	movwf	postinc1,c
 33017  0148FC  EC87  F0C9         	call	_sprintf	;wreg free
 33018                           
 33019                           ; BSR set to: 0
 33020                           ;bsoc.c: 83:   StartTimer(TMR_DISPLAY, 125);
 33021  014900  0E7D               	movlw	125
 33022  014902  6EE6               	movwf	postinc1,c
 33023  014904  0E00               	movlw	0
 33024  014906  6EE6               	movwf	postinc1,c
 33025  014908  0E0A               	movlw	10
 33026  01490A  6EE6               	movwf	postinc1,c
 33027  01490C  ECBC  F0D6         	call	_StartTimer	;wreg free
 33028                           
 33029                           ;bsoc.c: 84:   send_port_data_dma(strlen((char*) log_ptr));
 33030                           ;stkvar	_log_ptr @ sp[(-2)+0]
 33031  014910  0EFE               	movlw	-2
 33032  014912  006F FF8F FFE6     	movff	plusw1,postinc1
 33033  014918  006F FF8F FFE6     	movff	plusw1,postinc1
 33034  01491E  EC27  F0D0         	call	_strlen	;wreg free
 33035  014922  0060  F09B  FFE6   	movff	btemp,postinc1
 33036  014928  0060  F09F  FFE6   	movff	btemp+1,postinc1
 33037  01492E  EC31  F0D5         	call	_send_port_data_dma	;wreg free
 33038  014932                     l12533:
 33039                           
 33040                           ;bsoc.c: 86:  if (log_update_wait >= 10)
 33041  014932  0E09               	movlw	9
 33042  014934  641A               	cpfsgt	calc_bsoc@log_update_wait^0,c
 33043  014936  D001               	goto	l2020
 33044                           
 33045                           ;bsoc.c: 87:   log_update_wait = 0;
 33046  014938  6A1A               	clrf	calc_bsoc@log_update_wait^0,c
 33047  01493A                     l2020:
 33048                           
 33049                           ;bsoc.c: 89:  C.update = 0;
 33050  01493A  0101               	movlb	1	; () banked
 33051  01493C  6BB0               	clrf	(_C+176)& (0+255),b	;volatile
 33052                           
 33053                           ; BSR set to: 1
 33054                           
 33055                           ;bsoc.c: 91:  do { LATEbits.LATE1 = 0; } while(0);
 33056  01493E  92BE               	bcf	190,1,c	;volatile
 33057                           
 33058                           ; BSR set to: 1
 33059                           ; _calc_bsoc: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 33060  014940  52E5               	movf	postdec1,f,c
 33061  014942  52E5               	movf	postdec1,f,c
 33062  014944  0012               	return		;funcret
 33063  014946                     __end_of_calc_bsoc:
 33064                           	opt callstack 0
 33065                           
 33066 ;; *************** function _send_port_data_dma *****************
 33067 ;; Defined at:
 33068 ;;		line 258 in file "eadog.c"
 33069 ;; Parameters:    Size  Location     Type
 33070 ;;  dsize           2  [STACK] unsigned short 
 33071 ;; Auto vars:     Size  Location     Type
 33072 ;;		None
 33073 ;; Return value:  Size  Location     Type
 33074 ;;                  1  [STACK] void 
 33075 ;; Registers used:
 33076 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 33077 ;; Tracked objects:
 33078 ;;		On entry : 0/0
 33079 ;;		On exit  : 3F/3B
 33080 ;;		Unchanged: 0/0
 33081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33086 ;;Total ram usage:        0 bytes
 33087 ;; Hardware stack levels used:    1
 33088 ;; Hardware stack levels required when called:    3
 33089 ;; This function calls:
 33090 ;;		Nothing
 33091 ;; This function is called by:
 33092 ;;		_calc_bsoc
 33093 ;; This function uses a reentrant model
 33094 ;;
 33095                           
 33096                           	psect	text150
 33097  01AA62                     __ptext150:
 33098                           	opt callstack 0
 33099  01AA62                     _send_port_data_dma:
 33100                           	opt callstack 11
 33101                           
 33102                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 33103                           ;stkvar	_dsize @ sp[(0)+-2]
 33104                           
 33105                           ; BSR set to: 1
 33106                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33107                           ;incstack = 0
 33108  01AA62  0EFE               	movlw	-2
 33109  01AA64  04E3               	decf	plusw1,w,c
 33110  01AA66  0EFF               	movlw	-1
 33111  01AA68  006F FF8C  F026    	movff	plusw1,btemp
 33112  01AA6E  0E02               	movlw	2
 33113  01AA70  5A26               	subwfb	btemp^0,f,c
 33114  01AA72  A0D8               	btfss	status,0,c
 33115  01AA74  D00C               	goto	l9751
 33116                           
 33117                           ;eadog.c: 261:   dsize = 512;
 33118  01AA76  0E00               	movlw	0
 33119  01AA78  6E30               	movwf	(btemp+10)^0,c
 33120  01AA7A  0E02               	movlw	2
 33121  01AA7C  6E31               	movwf	(btemp+11)^0,c
 33122                           
 33123                           ;stkvar	_dsize @ sp[(0)+-2]
 33124  01AA7E  0EFE               	movlw	-2
 33125  01AA80  0060  F0C3  FFE3   	movff	btemp+10,plusw1
 33126  01AA86  0EFF               	movlw	-1
 33127  01AA88  0060  F0C7  FFE3   	movff	btemp+11,plusw1
 33128  01AA8E                     l9751:
 33129                           
 33130                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 33131  01AA8E  013B               	movlb	59	; () banked
 33132  01AA90  9FDC               	bcf	220,7,b	;volatile
 33133                           
 33134                           ; BSR set to: 59
 33135                           ;eadog.c: 264:  DMA2SSZ = dsize;
 33136                           ;stkvar	_dsize @ sp[(0)+-2]
 33137  01AA92  0EFE               	movlw	-2
 33138  01AA94  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 33139  01AA9A  0EFF               	movlw	-1
 33140  01AA9C  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 33141                           
 33142                           ; BSR set to: 59
 33143                           ;eadog.c: 265:  DMA2DSZ = 1;
 33144  01AAA2  0E00               	movlw	0
 33145  01AAA4  6FCF               	movwf	207,b	;volatile
 33146  01AAA6  0E01               	movlw	1
 33147  01AAA8  6FCE               	movwf	206,b	;volatile
 33148                           
 33149                           ; BSR set to: 59
 33150                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 33151  01AAAA  8FDC               	bsf	220,7,b	;volatile
 33152                           
 33153                           ; BSR set to: 59
 33154                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 33155  01AAAC  8DDC               	bsf	220,6,b	;volatile
 33156                           
 33157                           ; BSR set to: 59
 33158                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 33159  01AAAE  52E5               	movf	postdec1,f,c
 33160  01AAB0  52E5               	movf	postdec1,f,c
 33161  01AAB2  0012               	return		;funcret
 33162  01AAB4                     __end_of_send_port_data_dma:
 33163                           	opt callstack 0
 33164                           
 33165 ;; *************** function _port_data_dma_ptr *****************
 33166 ;; Defined at:
 33167 ;;		line 273 in file "eadog.c"
 33168 ;; Parameters:    Size  Location     Type
 33169 ;;		None
 33170 ;; Auto vars:     Size  Location     Type
 33171 ;;		None
 33172 ;; Return value:  Size  Location     Type
 33173 ;;                  2  [STACK] PTR unsigned char 
 33174 ;; Registers used:
 33175 ;;		wreg, status,2, status,0, btemp, btemp+1
 33176 ;; Tracked objects:
 33177 ;;		On entry : 3F/2
 33178 ;;		On exit  : 0/0
 33179 ;;		Unchanged: 0/0
 33180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33185 ;;Total ram usage:        0 bytes
 33186 ;; Hardware stack levels used:    1
 33187 ;; Hardware stack levels required when called:    3
 33188 ;; This function calls:
 33189 ;;		Nothing
 33190 ;; This function is called by:
 33191 ;;		_calc_bsoc
 33192 ;; This function uses a reentrant model
 33193 ;;
 33194                           
 33195                           	psect	text151
 33196  01B7F8                     __ptext151:
 33197                           	opt callstack 0
 33198  01B7F8                     _port_data_dma_ptr:
 33199                           	opt callstack 11
 33200                           
 33201                           ;eadog.c: 275:  return port_data;
 33202                           
 33203                           ; BSR set to: 59
 33204                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33205                           ;incstack = 0
 33206  01B7F8  0EFF               	movlw	low _port_data
 33207  01B7FA  6E26               	movwf	btemp^0,c
 33208  01B7FC  0E05               	movlw	high _port_data
 33209  01B7FE  6E27               	movwf	(btemp+1)^0,c
 33210                           
 33211                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33212  01B800  0012               	return		;funcret
 33213  01B802                     __end_of_port_data_dma_ptr:
 33214                           	opt callstack 0
 33215                           
 33216 ;; *************** function _INT0_ISR *****************
 33217 ;; Defined at:
 33218 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 33219 ;; Parameters:    Size  Location     Type
 33220 ;;		None
 33221 ;; Auto vars:     Size  Location     Type
 33222 ;;		None
 33223 ;; Return value:  Size  Location     Type
 33224 ;;                  1    wreg      void 
 33225 ;; Registers used:
 33226 ;;		wreg, status,2, status,0, pclath, tosl
 33227 ;; Tracked objects:
 33228 ;;		On entry : 0/0
 33229 ;;		On exit  : 0/0
 33230 ;;		Unchanged: 0/0
 33231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33236 ;;Total ram usage:        0 bytes
 33237 ;; Hardware stack levels used:    1
 33238 ;; Hardware stack levels required when called:    2
 33239 ;; This function calls:
 33240 ;;		_INT0_CallBack
 33241 ;; This function is called by:
 33242 ;;		Interrupt level 2
 33243 ;; This function uses a non-reentrant model
 33244 ;;
 33245                           
 33246                           	psect	text152
 33247  01B7D0                     __ptext152:
 33248                           	opt callstack 0
 33249  01B7D0                     _INT0_ISR:
 33250                           	opt callstack 3
 33251                           
 33252                           ;incstack = 0
 33253  01B7D0  EE14  F142         	lfsr	1,___inthi_sp
 33254                           
 33255                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 33256  01B7D4  0139               	movlb	57	; () banked
 33257  01B7D6  91A1               	bcf	161,0,b	;volatile
 33258                           
 33259                           ; BSR set to: 57
 33260                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 33261  01B7D8  ECD1  F0DA         	call	_INT0_CallBack	;wreg free
 33262  01B7DC  0011               	retfie		f
 33263  01B7DE                     __end_of_INT0_ISR:
 33264                           	opt callstack 0
 33265                           
 33266 ;; *************** function _INT0_CallBack *****************
 33267 ;; Defined at:
 33268 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 33269 ;; Parameters:    Size  Location     Type
 33270 ;;		None
 33271 ;; Auto vars:     Size  Location     Type
 33272 ;;		None
 33273 ;; Return value:  Size  Location     Type
 33274 ;;                  1  [STACK] void 
 33275 ;; Registers used:
 33276 ;;		wreg, status,2, status,0, pclath, tosl
 33277 ;; Tracked objects:
 33278 ;;		On entry : 3F/39
 33279 ;;		On exit  : 0/0
 33280 ;;		Unchanged: 0/0
 33281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33286 ;;Total ram usage:        0 bytes
 33287 ;; Hardware stack levels used:    1
 33288 ;; Hardware stack levels required when called:    1
 33289 ;; This function calls:
 33290 ;;		Absolute function
 33291 ;;		_INT0_DefaultInterruptHandler
 33292 ;; This function is called by:
 33293 ;;		_INT0_ISR
 33294 ;; This function uses a reentrant model
 33295 ;;
 33296                           
 33297                           	psect	text153
 33298  01B5A2                     __ptext153:
 33299                           	opt callstack 0
 33300  01B5A2                     _INT0_CallBack:
 33301                           	opt callstack 3
 33302                           
 33303                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 33304                           
 33305                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33306                           ;incstack = 0
 33307  01B5A2  5007               	movf	_INT0_InterruptHandler^0,w,c
 33308  01B5A4  1008               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 33309  01B5A6  1009               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 33310  01B5A8  B4D8               	btfsc	status,2,c
 33311  01B5AA  0012               	return	
 33312                           
 33313                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 33314  01B5AC  D801               	call	u448_48
 33315  01B5AE  0012               	return	
 33316  01B5B0                     u448_48:
 33317  01B5B0  0005               	push	
 33318  01B5B2  6EFA               	movwf	pclath,c
 33319  01B5B4  5007               	movf	_INT0_InterruptHandler^0,w,c
 33320  01B5B6  6EFD               	movwf	tosl,c
 33321  01B5B8  5008               	movf	(_INT0_InterruptHandler+1)^0,w,c
 33322  01B5BA  6EFE               	movwf	tosh,c
 33323  01B5BC  5009               	movf	(_INT0_InterruptHandler+2)^0,w,c
 33324  01B5BE  6EFF               	movwf	tosu,c
 33325  01B5C0  50FA               	movf	pclath,w,c
 33326  01B5C2  0012               	return		;indir
 33327  01B5C4                     __end_of_INT0_CallBack:
 33328                           	opt callstack 0
 33329                           
 33330 ;; *************** function _INT0_DefaultInterruptHandler *****************
 33331 ;; Defined at:
 33332 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 33333 ;; Parameters:    Size  Location     Type
 33334 ;;		None
 33335 ;; Auto vars:     Size  Location     Type
 33336 ;;		None
 33337 ;; Return value:  Size  Location     Type
 33338 ;;                  1  [STACK] void 
 33339 ;; Registers used:
 33340 ;;		None
 33341 ;; Tracked objects:
 33342 ;;		On entry : 0/39
 33343 ;;		On exit  : 0/0
 33344 ;;		Unchanged: 0/0
 33345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33350 ;;Total ram usage:        0 bytes
 33351 ;; Hardware stack levels used:    1
 33352 ;; This function calls:
 33353 ;;		Nothing
 33354 ;; This function is called by:
 33355 ;;		_EXT_INT_Initialize
 33356 ;;		_INT0_CallBack
 33357 ;; This function uses a reentrant model
 33358 ;;
 33359                           
 33360                           	psect	text154
 33361  01B872                     __ptext154:
 33362                           	opt callstack 0
 33363  01B872                     _INT0_DefaultInterruptHandler:
 33364                           	opt callstack 3
 33365                           
 33366                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33367                           
 33368                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33369                           ;incstack = 0
 33370  01B872  0012               	return		;funcret
 33371  01B874                     __end_of_INT0_DefaultInterruptHandler:
 33372                           	opt callstack 0
 33373                           
 33374 ;; *************** function _Default_ISR *****************
 33375 ;; Defined at:
 33376 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 33377 ;; Parameters:    Size  Location     Type
 33378 ;;		None
 33379 ;; Auto vars:     Size  Location     Type
 33380 ;;		None
 33381 ;; Return value:  Size  Location     Type
 33382 ;;                  1    wreg      void 
 33383 ;; Registers used:
 33384 ;;		None
 33385 ;; Tracked objects:
 33386 ;;		On entry : 0/0
 33387 ;;		On exit  : 0/0
 33388 ;;		Unchanged: 0/0
 33389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33394 ;;Total ram usage:        0 bytes
 33395 ;; Hardware stack levels used:    1
 33396 ;; This function calls:
 33397 ;;		Nothing
 33398 ;; This function is called by:
 33399 ;;		Interrupt level 2
 33400 ;; This function uses a non-reentrant model
 33401 ;;
 33402                           
 33403                           	psect	text155
 33404  01B868                     __ptext155:
 33405                           	opt callstack 0
 33406  01B868                     _Default_ISR:
 33407                           	opt callstack 5
 33408                           
 33409                           ;incstack = 0
 33410  01B868  EE14  F142         	lfsr	1,___inthi_sp
 33411  01B86C  0011               	retfie		f
 33412  01B86E                     __end_of_Default_ISR:
 33413                           	opt callstack 0
 33414                           
 33415 ;; *************** function _ADCC_ISR *****************
 33416 ;; Defined at:
 33417 ;;		line 314 in file "mcc_generated_files/adcc.c"
 33418 ;; Parameters:    Size  Location     Type
 33419 ;;		None
 33420 ;; Auto vars:     Size  Location     Type
 33421 ;;		None
 33422 ;; Return value:  Size  Location     Type
 33423 ;;                  1    wreg      void 
 33424 ;; Registers used:
 33425 ;;		wreg, status,2, status,0, pclath, tosl
 33426 ;; Tracked objects:
 33427 ;;		On entry : 0/0
 33428 ;;		On exit  : 0/0
 33429 ;;		Unchanged: 0/0
 33430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33435 ;;Total ram usage:        0 bytes
 33436 ;; Hardware stack levels used:    1
 33437 ;; Hardware stack levels required when called:    1
 33438 ;; This function calls:
 33439 ;;		Absolute function
 33440 ;;		_ADCC_DefaultInterruptHandler
 33441 ;;		_adc_int_handler
 33442 ;; This function is called by:
 33443 ;;		Interrupt level 2
 33444 ;; This function uses a non-reentrant model
 33445 ;;
 33446                           
 33447                           	psect	text156
 33448  01B180                     __ptext156:
 33449                           	opt callstack 0
 33450  01B180                     _ADCC_ISR:
 33451                           	opt callstack 4
 33452                           
 33453                           ;incstack = 0
 33454  01B180  EE14  F142         	lfsr	1,___inthi_sp
 33455                           
 33456                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 33457  01B184  0139               	movlb	57	; () banked
 33458  01B186  95A1               	bcf	161,2,b	;volatile
 33459                           
 33460                           ; BSR set to: 57
 33461                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 33462  01B188  0100               	movlb	0	; () banked
 33463  01B18A  51A6               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 33464  01B18C  11A7               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 33465  01B18E  11A8               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 33466  01B190  B4D8               	btfsc	status,2,c
 33467  01B192  0011               	retfie		f
 33468                           
 33469                           ; BSR set to: 0
 33470                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 33471  01B194  D801               	call	i2u1009_48
 33472  01B196  0011               	retfie		f
 33473  01B198                     i2u1009_48:
 33474  01B198  0005               	push	
 33475  01B19A  6EFA               	movwf	pclath,c
 33476  01B19C  51A6               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 33477  01B19E  6EFD               	movwf	tosl,c
 33478  01B1A0  51A7               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 33479  01B1A2  6EFE               	movwf	tosh,c
 33480  01B1A4  51A8               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 33481  01B1A6  6EFF               	movwf	tosu,c
 33482  01B1A8  50FA               	movf	pclath,w,c
 33483  01B1AA  0012               	return		;indir
 33484  01B1AC                     __end_of_ADCC_ISR:
 33485                           	opt callstack 0
 33486                           
 33487 ;; *************** function _adc_int_t_handler *****************
 33488 ;; Defined at:
 33489 ;;		line 143 in file "daq.c"
 33490 ;; Parameters:    Size  Location     Type
 33491 ;;		None
 33492 ;; Auto vars:     Size  Location     Type
 33493 ;;		None
 33494 ;; Return value:  Size  Location     Type
 33495 ;;                  1  [STACK] void 
 33496 ;; Registers used:
 33497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 33498 ;; Tracked objects:
 33499 ;;		On entry : 3F/0
 33500 ;;		On exit  : 1/0
 33501 ;;		Unchanged: 0/0
 33502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33507 ;;Total ram usage:        0 bytes
 33508 ;; Hardware stack levels used:    1
 33509 ;; Hardware stack levels required when called:    1
 33510 ;; This function calls:
 33511 ;;		_ADCC_DischargeSampleCapacitor
 33512 ;;		_ADCC_StartConversion
 33513 ;; This function is called by:
 33514 ;;		_start_adc_scan
 33515 ;;		_ADCC_ThresholdISR
 33516 ;; This function uses a reentrant model
 33517 ;;
 33518                           
 33519                           	psect	text157
 33520  01A560                     __ptext157:
 33521                           	opt callstack 0
 33522  01A560                     _adc_int_t_handler:
 33523                           	opt callstack 3
 33524                           
 33525                           ;daq.c: 148:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 33526                           
 33527                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33528                           ;incstack = 0
 33529  01A560  013E               	movlb	62	; () banked
 33530  01A562  51E6               	movf	230,w,b	;volatile
 33531  01A564  006F FB9C  F026    	movff	16103,btemp	;volatile
 33532  01A56A  6A27               	clrf	(btemp+1)^0,c
 33533  01A56C  0060  F098  F027   	movff	btemp,btemp+1
 33534  01A572  6A26               	clrf	btemp^0,c
 33535  01A574  2626               	addwf	btemp^0,f,c
 33536  01A576  0E00               	movlw	0
 33537  01A578  2227               	addwfc	(btemp+1)^0,f,c
 33538  01A57A  0100               	movlb	0	; () banked
 33539  01A57C  51D5               	movf	(_R+36)& (0+255),w,b	;volatile
 33540  01A57E  0D02               	mullw	2
 33541  01A580  50F3               	movf	243,w,c
 33542  01A582  0FB1               	addlw	low _R
 33543  01A584  6ED9               	movwf	fsr2l,c
 33544  01A586  6ADA               	clrf	fsr2h,c
 33545  01A588  0060  F09B  FFDE   	movff	btemp,postinc2
 33546  01A58E  0060  F09F  FFDD   	movff	btemp+1,postdec2
 33547  01A594                     l10885:
 33548                           
 33549                           ;daq.c: 150:   if (++R.scan_index > 0XD) {
 33550  01A594  0100               	movlb	0	; () banked
 33551  01A596  2BD5               	incf	(_R+36)& (0+255),f,b	;volatile
 33552  01A598  0E0D               	movlw	13
 33553  01A59A  65D5               	cpfsgt	(_R+36)& (0+255),b	;volatile
 33554  01A59C  D003               	goto	l10891
 33555                           
 33556                           ; BSR set to: 0
 33557                           ;daq.c: 151:    R.done = 1;
 33558  01A59E  0E01               	movlw	1
 33559  01A5A0  6FD8               	movwf	(_R+39)& (0+255),b	;volatile
 33560  01A5A2  0012               	return	
 33561  01A5A4                     l10891:
 33562                           
 33563                           ; BSR set to: 0
 33564                           ;daq.c: 157:  } while (!((R.scan_select >> R.scan_index) &0x1));
 33565  01A5A4  0060  F354  F031   	movff	_R+36,btemp+11	;volatile
 33566  01A5AA  EE20  F0D6         	lfsr	2,_R+37	;volatile
 33567  01A5AE  006F FF78  F02E    	movff	postinc2,btemp+8
 33568  01A5B4  006F FF74  F02F    	movff	postdec2,btemp+9
 33569  01A5BA  2A31               	incf	(btemp+11)^0,f,c
 33570  01A5BC  D003               	goto	u1006_44
 33571  01A5BE                     u1006_45:
 33572  01A5BE  90D8               	bcf	status,0,c
 33573  01A5C0  322F               	rrcf	(btemp+9)^0,f,c
 33574  01A5C2  322E               	rrcf	(btemp+8)^0,f,c
 33575  01A5C4                     u1006_44:
 33576  01A5C4  2E31               	decfsz	(btemp+11)^0,f,c
 33577  01A5C6  D7FB               	goto	u1006_45
 33578  01A5C8  A02E               	btfss	(btemp+8)^0,0,c
 33579  01A5CA  D7E4               	goto	l10885
 33580                           
 33581                           ;daq.c: 158:  ADCC_DischargeSampleCapacitor();
 33582  01A5CC  EC13  F0DC         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 33583                           
 33584                           ; BSR set to: 62
 33585                           ;daq.c: 159:  ADCC_StartConversion(R.scan_index & 0xf);
 33586  01A5D0  0100               	movlb	0	; () banked
 33587  01A5D2  51D5               	movf	(_R+36)& (0+255),w,b	;volatile
 33588  01A5D4  0B0F               	andlw	15
 33589  01A5D6  6EE6               	movwf	postinc1,c
 33590  01A5D8  ECB8  F0DB         	call	_ADCC_StartConversion	;wreg free
 33591                           
 33592                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33593  01A5DC  0012               	return		;funcret
 33594  01A5DE                     __end_of_adc_int_t_handler:
 33595                           	opt callstack 0
 33596                           
 33597 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 33598 ;; Defined at:
 33599 ;;		line 339 in file "mcc_generated_files/adcc.c"
 33600 ;; Parameters:    Size  Location     Type
 33601 ;;		None
 33602 ;; Auto vars:     Size  Location     Type
 33603 ;;		None
 33604 ;; Return value:  Size  Location     Type
 33605 ;;                  1  [STACK] void 
 33606 ;; Registers used:
 33607 ;;		None
 33608 ;; Tracked objects:
 33609 ;;		On entry : 3F/0
 33610 ;;		On exit  : 0/0
 33611 ;;		Unchanged: 0/0
 33612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33617 ;;Total ram usage:        0 bytes
 33618 ;; Hardware stack levels used:    1
 33619 ;; This function calls:
 33620 ;;		Nothing
 33621 ;; This function is called by:
 33622 ;;		_ADCC_Initialize
 33623 ;;		_ADCC_ISR
 33624 ;;		_ADCC_ThresholdISR
 33625 ;; This function uses a reentrant model
 33626 ;;
 33627                           
 33628                           	psect	text158
 33629  01B874                     __ptext158:
 33630                           	opt callstack 0
 33631  01B874                     _ADCC_DefaultInterruptHandler:
 33632                           	opt callstack 4
 33633                           
 33634                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33635                           
 33636                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33637                           ;incstack = 0
 33638  01B874  0012               	return		;funcret
 33639  01B876                     __end_of_ADCC_DefaultInterruptHandler:
 33640                           	opt callstack 0
 33641                           
 33642 ;; *************** function _adc_int_handler *****************
 33643 ;; Defined at:
 33644 ;;		line 133 in file "daq.c"
 33645 ;; Parameters:    Size  Location     Type
 33646 ;;		None
 33647 ;; Auto vars:     Size  Location     Type
 33648 ;;		None
 33649 ;; Return value:  Size  Location     Type
 33650 ;;                  1  [STACK] void 
 33651 ;; Registers used:
 33652 ;;		None
 33653 ;; Tracked objects:
 33654 ;;		On entry : 3F/0
 33655 ;;		On exit  : 0/0
 33656 ;;		Unchanged: 0/0
 33657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33662 ;;Total ram usage:        0 bytes
 33663 ;; Hardware stack levels used:    1
 33664 ;; This function calls:
 33665 ;;		Nothing
 33666 ;; This function is called by:
 33667 ;;		_start_adc_scan
 33668 ;;		_ADCC_ISR
 33669 ;; This function uses a reentrant model
 33670 ;;
 33671                           
 33672                           	psect	text159
 33673  01B876                     __ptext159:
 33674                           	opt callstack 0
 33675  01B876                     _adc_int_handler:
 33676                           	opt callstack 4
 33677                           
 33678                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33679                           
 33680                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33681                           ;incstack = 0
 33682  01B876  0012               	return		;funcret
 33683  01B878                     __end_of_adc_int_handler:
 33684                           	opt callstack 0
 33685                           
 33686 ;; *************** function _ADCC_ThresholdISR *****************
 33687 ;; Defined at:
 33688 ;;		line 327 in file "mcc_generated_files/adcc.c"
 33689 ;; Parameters:    Size  Location     Type
 33690 ;;		None
 33691 ;; Auto vars:     Size  Location     Type
 33692 ;;		None
 33693 ;; Return value:  Size  Location     Type
 33694 ;;                  1    wreg      void 
 33695 ;; Registers used:
 33696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 33697 ;; Tracked objects:
 33698 ;;		On entry : 0/0
 33699 ;;		On exit  : 0/0
 33700 ;;		Unchanged: 0/0
 33701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33704 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33705 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33706 ;;Total ram usage:        5 bytes
 33707 ;; Hardware stack levels used:    1
 33708 ;; Hardware stack levels required when called:    2
 33709 ;; This function calls:
 33710 ;;		Absolute function
 33711 ;;		_ADCC_DefaultInterruptHandler
 33712 ;;		_adc_int_t_handler
 33713 ;; This function is called by:
 33714 ;;		Interrupt level 2
 33715 ;; This function uses a non-reentrant model
 33716 ;;
 33717                           
 33718                           	psect	text160
 33719  01A6B4                     __ptext160:
 33720                           	opt callstack 0
 33721  01A6B4                     _ADCC_ThresholdISR:
 33722                           	opt callstack 3
 33723                           
 33724                           ;incstack = 0
 33725  01A6B4  0060  F098  F046   	movff	btemp,??_ADCC_ThresholdISR
 33726  01A6BA  0060  F09C  F047   	movff	btemp+1,??_ADCC_ThresholdISR+1
 33727  01A6C0  0060  F0B8  F048   	movff	btemp+8,??_ADCC_ThresholdISR+2
 33728  01A6C6  0060  F0BC  F049   	movff	btemp+9,??_ADCC_ThresholdISR+3
 33729  01A6CC  0060  F0C4  F04A   	movff	btemp+11,??_ADCC_ThresholdISR+4
 33730  01A6D2  EE14  F142         	lfsr	1,___inthi_sp
 33731                           
 33732                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 33733  01A6D6  0139               	movlb	57	; () banked
 33734  01A6D8  97A1               	bcf	161,3,b	;volatile
 33735                           
 33736                           ; BSR set to: 57
 33737                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 33738  01A6DA  0100               	movlb	0	; () banked
 33739  01A6DC  51A3               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 33740  01A6DE  11A4               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 33741  01A6E0  11A5               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 33742  01A6E2  B4D8               	btfsc	status,2,c
 33743  01A6E4  D00C               	goto	i2u1011_49
 33744                           
 33745                           ; BSR set to: 0
 33746                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 33747  01A6E6  D801               	call	i2u1011_48
 33748  01A6E8  D00A               	goto	i2u1011_49
 33749  01A6EA                     i2u1011_48:
 33750  01A6EA  0005               	push	
 33751  01A6EC  6EFA               	movwf	pclath,c
 33752  01A6EE  51A3               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 33753  01A6F0  6EFD               	movwf	tosl,c
 33754  01A6F2  51A4               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 33755  01A6F4  6EFE               	movwf	tosh,c
 33756  01A6F6  51A5               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 33757  01A6F8  6EFF               	movwf	tosu,c
 33758  01A6FA  50FA               	movf	pclath,w,c
 33759  01A6FC  0012               	return		;indir
 33760  01A6FE                     i2u1011_49:
 33761  01A6FE  0060  F128  F031   	movff	??_ADCC_ThresholdISR+4,btemp+11
 33762  01A704  0060  F124  F02F   	movff	??_ADCC_ThresholdISR+3,btemp+9
 33763  01A70A  0060  F120  F02E   	movff	??_ADCC_ThresholdISR+2,btemp+8
 33764  01A710  0060  F11C  F027   	movff	??_ADCC_ThresholdISR+1,btemp+1
 33765  01A716  0060  F118  F026   	movff	??_ADCC_ThresholdISR,btemp
 33766  01A71C  0011               	retfie		f
 33767  01A71E                     __end_of_ADCC_ThresholdISR:
 33768                           	opt callstack 0
 33769                           
 33770 ;; *************** function _UART1_rx_vect_isr *****************
 33771 ;; Defined at:
 33772 ;;		line 181 in file "mcc_generated_files/uart1.c"
 33773 ;; Parameters:    Size  Location     Type
 33774 ;;		None
 33775 ;; Auto vars:     Size  Location     Type
 33776 ;;		None
 33777 ;; Return value:  Size  Location     Type
 33778 ;;                  1    wreg      void 
 33779 ;; Registers used:
 33780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33781 ;; Tracked objects:
 33782 ;;		On entry : 0/0
 33783 ;;		On exit  : 0/0
 33784 ;;		Unchanged: 0/0
 33785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33790 ;;Total ram usage:        0 bytes
 33791 ;; Hardware stack levels used:    1
 33792 ;; Hardware stack levels required when called:    1
 33793 ;; This function calls:
 33794 ;;		Absolute function
 33795 ;;		_UART1_Receive_ISR
 33796 ;; This function is called by:
 33797 ;;		Interrupt level 2
 33798 ;; This function uses a non-reentrant model
 33799 ;;
 33800                           
 33801                           	psect	text161
 33802  01B434                     __ptext161:
 33803                           	opt callstack 0
 33804  01B434                     _UART1_rx_vect_isr:
 33805                           	opt callstack 4
 33806                           
 33807                           ;incstack = 0
 33808  01B434  EE14  F142         	lfsr	1,___inthi_sp
 33809                           
 33810                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 33811  01B438  0100               	movlb	0	; () banked
 33812  01B43A  51A9               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 33813  01B43C  11AA               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 33814  01B43E  11AB               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 33815  01B440  B4D8               	btfsc	status,2,c
 33816  01B442  0011               	retfie		f
 33817                           
 33818                           ; BSR set to: 0
 33819                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 33820  01B444  D801               	call	i2u1220_48
 33821  01B446  0011               	retfie		f
 33822  01B448                     i2u1220_48:
 33823  01B448  0005               	push	
 33824  01B44A  6EFA               	movwf	pclath,c
 33825  01B44C  51A9               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 33826  01B44E  6EFD               	movwf	tosl,c
 33827  01B450  51AA               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 33828  01B452  6EFE               	movwf	tosh,c
 33829  01B454  51AB               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 33830  01B456  6EFF               	movwf	tosu,c
 33831  01B458  50FA               	movf	pclath,w,c
 33832  01B45A  0012               	return		;indir
 33833  01B45C                     __end_of_UART1_rx_vect_isr:
 33834                           	opt callstack 0
 33835                           
 33836 ;; *************** function _UART1_Receive_ISR *****************
 33837 ;; Defined at:
 33838 ;;		line 192 in file "mcc_generated_files/uart1.c"
 33839 ;; Parameters:    Size  Location     Type
 33840 ;;		None
 33841 ;; Auto vars:     Size  Location     Type
 33842 ;;		None
 33843 ;; Return value:  Size  Location     Type
 33844 ;;                  1  [STACK] void 
 33845 ;; Registers used:
 33846 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33847 ;; Tracked objects:
 33848 ;;		On entry : 3F/0
 33849 ;;		On exit  : 0/0
 33850 ;;		Unchanged: 0/0
 33851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33856 ;;Total ram usage:        0 bytes
 33857 ;; Hardware stack levels used:    1
 33858 ;; This function calls:
 33859 ;;		Nothing
 33860 ;; This function is called by:
 33861 ;;		_UART1_Initialize
 33862 ;;		_UART1_rx_vect_isr
 33863 ;; This function uses a reentrant model
 33864 ;;
 33865                           
 33866                           	psect	text162
 33867  01B5E4                     __ptext162:
 33868                           	opt callstack 0
 33869  01B5E4                     _UART1_Receive_ISR:
 33870                           	opt callstack 4
 33871                           
 33872                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 33873                           
 33874                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33875                           ;incstack = 0
 33876  01B5E4  0EEE               	movlw	low _uart1RxBuffer
 33877  01B5E6  2425               	addwf	_uart1RxHead^0,w,c	;volatile
 33878  01B5E8  6ED9               	movwf	fsr2l,c
 33879  01B5EA  6ADA               	clrf	fsr2h,c
 33880  01B5EC  0E02               	movlw	high _uart1RxBuffer
 33881  01B5EE  22DA               	addwfc	fsr2h,f,c
 33882  01B5F0  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 33883  01B5F6  2A25               	incf	_uart1RxHead^0,f,c	;volatile
 33884                           
 33885                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 33886  01B5F8  0E07               	movlw	7
 33887  01B5FA  6425               	cpfsgt	_uart1RxHead^0,c
 33888  01B5FC  D001               	goto	l12581
 33889                           
 33890                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 33891  01B5FE  6A25               	clrf	_uart1RxHead^0,c	;volatile
 33892  01B600                     l12581:
 33893                           
 33894                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 33895  01B600  2A23               	incf	_uart1RxCount^0,f,c	;volatile
 33896                           
 33897                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33898  01B602  0012               	return		;funcret
 33899  01B604                     __end_of_UART1_Receive_ISR:
 33900                           	opt callstack 0
 33901                           
 33902 ;; *************** function _UART2_tx_vect_isr *****************
 33903 ;; Defined at:
 33904 ;;		line 195 in file "mcc_generated_files/uart2.c"
 33905 ;; Parameters:    Size  Location     Type
 33906 ;;		None
 33907 ;; Auto vars:     Size  Location     Type
 33908 ;;		None
 33909 ;; Return value:  Size  Location     Type
 33910 ;;                  1    wreg      void 
 33911 ;; Registers used:
 33912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33913 ;; Tracked objects:
 33914 ;;		On entry : 0/0
 33915 ;;		On exit  : 0/0
 33916 ;;		Unchanged: 0/0
 33917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33922 ;;Total ram usage:        0 bytes
 33923 ;; Hardware stack levels used:    1
 33924 ;; Hardware stack levels required when called:    1
 33925 ;; This function calls:
 33926 ;;		Absolute function
 33927 ;;		_UART2_Transmit_ISR
 33928 ;; This function is called by:
 33929 ;;		Interrupt level 2
 33930 ;; This function uses a non-reentrant model
 33931 ;;
 33932                           
 33933                           	psect	text163
 33934  01B45C                     __ptext163:
 33935                           	opt callstack 0
 33936  01B45C                     _UART2_tx_vect_isr:
 33937                           	opt callstack 4
 33938                           
 33939                           ;incstack = 0
 33940  01B45C  EE14  F142         	lfsr	1,___inthi_sp
 33941                           
 33942                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 33943  01B460  0100               	movlb	0	; () banked
 33944  01B462  51AC               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 33945  01B464  11AD               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 33946  01B466  11AE               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 33947  01B468  B4D8               	btfsc	status,2,c
 33948  01B46A  0011               	retfie		f
 33949                           
 33950                           ; BSR set to: 0
 33951                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 33952  01B46C  D801               	call	i2u1015_48
 33953  01B46E  0011               	retfie		f
 33954  01B470                     i2u1015_48:
 33955  01B470  0005               	push	
 33956  01B472  6EFA               	movwf	pclath,c
 33957  01B474  51AC               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 33958  01B476  6EFD               	movwf	tosl,c
 33959  01B478  51AD               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 33960  01B47A  6EFE               	movwf	tosh,c
 33961  01B47C  51AE               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 33962  01B47E  6EFF               	movwf	tosu,c
 33963  01B480  50FA               	movf	pclath,w,c
 33964  01B482  0012               	return		;indir
 33965  01B484                     __end_of_UART2_tx_vect_isr:
 33966                           	opt callstack 0
 33967                           
 33968 ;; *************** function _UART2_Transmit_ISR *****************
 33969 ;; Defined at:
 33970 ;;		line 213 in file "mcc_generated_files/uart2.c"
 33971 ;; Parameters:    Size  Location     Type
 33972 ;;		None
 33973 ;; Auto vars:     Size  Location     Type
 33974 ;;		None
 33975 ;; Return value:  Size  Location     Type
 33976 ;;                  1  [STACK] void 
 33977 ;; Registers used:
 33978 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33979 ;; Tracked objects:
 33980 ;;		On entry : 3F/0
 33981 ;;		On exit  : 3B/39
 33982 ;;		Unchanged: 0/0
 33983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33988 ;;Total ram usage:        0 bytes
 33989 ;; Hardware stack levels used:    1
 33990 ;; This function calls:
 33991 ;;		Nothing
 33992 ;; This function is called by:
 33993 ;;		_UART2_Initialize
 33994 ;;		_UART2_tx_vect_isr
 33995 ;; This function uses a reentrant model
 33996 ;;
 33997                           
 33998                           	psect	text164
 33999  01B1AC                     __ptext164:
 34000                           	opt callstack 0
 34001  01B1AC                     _UART2_Transmit_ISR:
 34002                           	opt callstack 4
 34003                           
 34004                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 34005                           
 34006                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34007                           ;incstack = 0
 34008  01B1AC  0E40               	movlw	64
 34009  01B1AE  6020               	cpfslt	_uart2TxBufferRemaining^0,c
 34010  01B1B0  D010               	goto	l673
 34011                           
 34012                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 34013  01B1B2  0E54               	movlw	low _uart2TxBuffer
 34014  01B1B4  2421               	addwf	_uart2TxTail^0,w,c	;volatile
 34015  01B1B6  6ED9               	movwf	fsr2l,c
 34016  01B1B8  6ADA               	clrf	fsr2h,c
 34017  01B1BA  0E03               	movlw	high _uart2TxBuffer
 34018  01B1BC  22DA               	addwfc	fsr2h,f,c
 34019  01B1BE  50DF               	movf	indf2,w,c
 34020  01B1C0  013D               	movlb	61	; () banked
 34021  01B1C2  6FD2               	movwf	210,b	;volatile
 34022                           
 34023                           ; BSR set to: 61
 34024  01B1C4  2A21               	incf	_uart2TxTail^0,f,c	;volatile
 34025                           
 34026                           ; BSR set to: 61
 34027                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 34028  01B1C6  0E3F               	movlw	63
 34029  01B1C8  6421               	cpfsgt	_uart2TxTail^0,c
 34030  01B1CA  D001               	goto	l10493
 34031                           
 34032                           ; BSR set to: 61
 34033                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 34034  01B1CC  6A21               	clrf	_uart2TxTail^0,c	;volatile
 34035  01B1CE                     l10493:
 34036                           
 34037                           ; BSR set to: 61
 34038                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 34039  01B1CE  2A20               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 34040                           
 34041                           ;mcc_generated_files/uart2.c: 224:     }
 34042  01B1D0  0012               	return	
 34043  01B1D2                     l673:
 34044                           
 34045                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 34046  01B1D2  0139               	movlb	57	; () banked
 34047  01B1D4  9796               	bcf	150,3,b	;volatile
 34048                           
 34049                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 34050  01B1D6  0012               	return		;funcret
 34051  01B1D8                     __end_of_UART2_Transmit_ISR:
 34052                           	opt callstack 0
 34053                           
 34054 ;; *************** function _UART2_rx_vect_isr *****************
 34055 ;; Defined at:
 34056 ;;		line 203 in file "mcc_generated_files/uart2.c"
 34057 ;; Parameters:    Size  Location     Type
 34058 ;;		None
 34059 ;; Auto vars:     Size  Location     Type
 34060 ;;		None
 34061 ;; Return value:  Size  Location     Type
 34062 ;;                  1    wreg      void 
 34063 ;; Registers used:
 34064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 34065 ;; Tracked objects:
 34066 ;;		On entry : 0/0
 34067 ;;		On exit  : 0/0
 34068 ;;		Unchanged: 0/0
 34069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34074 ;;Total ram usage:        0 bytes
 34075 ;; Hardware stack levels used:    1
 34076 ;; Hardware stack levels required when called:    1
 34077 ;; This function calls:
 34078 ;;		Absolute function
 34079 ;;		_UART2_Receive_ISR
 34080 ;; This function is called by:
 34081 ;;		Interrupt level 2
 34082 ;; This function uses a non-reentrant model
 34083 ;;
 34084                           
 34085                           	psect	text165
 34086  01B484                     __ptext165:
 34087                           	opt callstack 0
 34088  01B484                     _UART2_rx_vect_isr:
 34089                           	opt callstack 4
 34090                           
 34091                           ;incstack = 0
 34092  01B484  EE14  F142         	lfsr	1,___inthi_sp
 34093                           
 34094                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 34095  01B488  5001               	movf	_UART2_RxInterruptHandler^0,w,c
 34096  01B48A  1002               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 34097  01B48C  1003               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 34098  01B48E  B4D8               	btfsc	status,2,c
 34099  01B490  0011               	retfie		f
 34100                           
 34101                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 34102  01B492  D801               	call	i2u1017_48
 34103  01B494  0011               	retfie		f
 34104  01B496                     i2u1017_48:
 34105  01B496  0005               	push	
 34106  01B498  6EFA               	movwf	pclath,c
 34107  01B49A  5001               	movf	_UART2_RxInterruptHandler^0,w,c
 34108  01B49C  6EFD               	movwf	tosl,c
 34109  01B49E  5002               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 34110  01B4A0  6EFE               	movwf	tosh,c
 34111  01B4A2  5003               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 34112  01B4A4  6EFF               	movwf	tosu,c
 34113  01B4A6  50FA               	movf	pclath,w,c
 34114  01B4A8  0012               	return		;indir
 34115  01B4AA                     __end_of_UART2_rx_vect_isr:
 34116                           	opt callstack 0
 34117                           
 34118 ;; *************** function _UART2_Receive_ISR *****************
 34119 ;; Defined at:
 34120 ;;		line 233 in file "mcc_generated_files/uart2.c"
 34121 ;; Parameters:    Size  Location     Type
 34122 ;;		None
 34123 ;; Auto vars:     Size  Location     Type
 34124 ;;		None
 34125 ;; Return value:  Size  Location     Type
 34126 ;;                  1  [STACK] void 
 34127 ;; Registers used:
 34128 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34129 ;; Tracked objects:
 34130 ;;		On entry : 0/0
 34131 ;;		On exit  : 0/0
 34132 ;;		Unchanged: 0/0
 34133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34138 ;;Total ram usage:        0 bytes
 34139 ;; Hardware stack levels used:    1
 34140 ;; This function calls:
 34141 ;;		Nothing
 34142 ;; This function is called by:
 34143 ;;		_UART2_Initialize
 34144 ;;		_UART2_rx_vect_isr
 34145 ;; This function uses a reentrant model
 34146 ;;
 34147                           
 34148                           	psect	text166
 34149  01B67C                     __ptext166:
 34150                           	opt callstack 0
 34151  01B67C                     _UART2_Receive_ISR:
 34152                           	opt callstack 4
 34153                           
 34154                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 34155                           
 34156                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34157                           ;incstack = 0
 34158  01B67C  0E00               	movlw	low _uart2RxBuffer
 34159  01B67E  241F               	addwf	_uart2RxHead^0,w,c	;volatile
 34160  01B680  6ED9               	movwf	fsr2l,c
 34161  01B682  6ADA               	clrf	fsr2h,c
 34162  01B684  0E05               	movlw	high _uart2RxBuffer
 34163  01B686  22DA               	addwfc	fsr2h,f,c
 34164  01B688  006F F743 FFDF     	movff	15824,indf2	;volatile
 34165  01B68E  2A1F               	incf	_uart2RxHead^0,f,c	;volatile
 34166                           
 34167                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 34168  01B690  281F               	incf	_uart2RxHead^0,w,c
 34169  01B692  B4D8               	btfsc	status,2,c
 34170                           
 34171                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 34172  01B694  6A1F               	clrf	_uart2RxHead^0,c	;volatile
 34173                           
 34174                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 34175  01B696  2A1D               	incf	_uart2RxCount^0,f,c	;volatile
 34176                           
 34177                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34178  01B698  0012               	return		;funcret
 34179  01B69A                     __end_of_UART2_Receive_ISR:
 34180                           	opt callstack 0
 34181                           
 34182 ;; *************** function _TMR6_ISR *****************
 34183 ;; Defined at:
 34184 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 34185 ;; Parameters:    Size  Location     Type
 34186 ;;		None
 34187 ;; Auto vars:     Size  Location     Type
 34188 ;;		None
 34189 ;; Return value:  Size  Location     Type
 34190 ;;                  1    wreg      void 
 34191 ;; Registers used:
 34192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 34193 ;; Tracked objects:
 34194 ;;		On entry : 0/0
 34195 ;;		On exit  : 0/0
 34196 ;;		Unchanged: 0/0
 34197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34200 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34201 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34202 ;;Total ram usage:        1 bytes
 34203 ;; Hardware stack levels used:    1
 34204 ;; Hardware stack levels required when called:    2
 34205 ;; This function calls:
 34206 ;;		_TMR6_CallBack
 34207 ;; This function is called by:
 34208 ;;		Interrupt level 2
 34209 ;; This function uses a non-reentrant model
 34210 ;;
 34211                           
 34212                           	psect	text167
 34213  01B6D0                     __ptext167:
 34214                           	opt callstack 0
 34215  01B6D0                     _TMR6_ISR:
 34216                           	opt callstack 3
 34217                           
 34218                           ;incstack = 0
 34219  01B6D0  0060  F098  F04B   	movff	btemp,??_TMR6_ISR
 34220  01B6D6  EE14  F142         	lfsr	1,___inthi_sp
 34221                           
 34222                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 34223  01B6DA  0139               	movlb	57	; () banked
 34224  01B6DC  91A9               	bcf	169,0,b	;volatile
 34225                           
 34226                           ; BSR set to: 57
 34227                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 34228  01B6DE  EC9D  F0DA         	call	_TMR6_CallBack	;wreg free
 34229  01B6E2  0060  F12C  F026   	movff	??_TMR6_ISR,btemp
 34230  01B6E8  0011               	retfie		f
 34231  01B6EA                     __end_of_TMR6_ISR:
 34232                           	opt callstack 0
 34233                           
 34234 ;; *************** function _TMR6_CallBack *****************
 34235 ;; Defined at:
 34236 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 34237 ;; Parameters:    Size  Location     Type
 34238 ;;		None
 34239 ;; Auto vars:     Size  Location     Type
 34240 ;;		None
 34241 ;; Return value:  Size  Location     Type
 34242 ;;                  1  [STACK] void 
 34243 ;; Registers used:
 34244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 34245 ;; Tracked objects:
 34246 ;;		On entry : 3F/39
 34247 ;;		On exit  : 0/0
 34248 ;;		Unchanged: 0/0
 34249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34254 ;;Total ram usage:        0 bytes
 34255 ;; Hardware stack levels used:    1
 34256 ;; Hardware stack levels required when called:    1
 34257 ;; This function calls:
 34258 ;;		Absolute function
 34259 ;;		_TMR6_DefaultInterruptHandler
 34260 ;; This function is called by:
 34261 ;;		_TMR6_ISR
 34262 ;; This function uses a reentrant model
 34263 ;;
 34264                           
 34265                           	psect	text168
 34266  01B53A                     __ptext168:
 34267                           	opt callstack 0
 34268  01B53A                     _TMR6_CallBack:
 34269                           	opt callstack 3
 34270                           
 34271                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 34272                           
 34273                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34274                           ;incstack = 0
 34275  01B53A  0100               	movlb	0	; () banked
 34276  01B53C  51A0               	movf	_TMR6_InterruptHandler& (0+255),w,b
 34277  01B53E  11A1               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 34278  01B540  11A2               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 34279  01B542  B4D8               	btfsc	status,2,c
 34280  01B544  0012               	return	
 34281                           
 34282                           ; BSR set to: 0
 34283                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 34284  01B546  D801               	call	u975_48
 34285  01B548  0012               	return	
 34286  01B54A                     u975_48:
 34287  01B54A  0005               	push	
 34288  01B54C  6EFA               	movwf	pclath,c
 34289  01B54E  51A0               	movf	_TMR6_InterruptHandler& (0+255),w,b
 34290  01B550  6EFD               	movwf	tosl,c
 34291  01B552  51A1               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 34292  01B554  6EFE               	movwf	tosh,c
 34293  01B556  51A2               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 34294  01B558  6EFF               	movwf	tosu,c
 34295  01B55A  50FA               	movf	pclath,w,c
 34296  01B55C  0012               	return		;indir
 34297  01B55E                     __end_of_TMR6_CallBack:
 34298                           	opt callstack 0
 34299                           
 34300 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 34301 ;; Defined at:
 34302 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 34303 ;; Parameters:    Size  Location     Type
 34304 ;;		None
 34305 ;; Auto vars:     Size  Location     Type
 34306 ;;  i               1  [STACK] unsigned char 
 34307 ;; Return value:  Size  Location     Type
 34308 ;;                  1  [STACK] void 
 34309 ;; Registers used:
 34310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 34311 ;; Tracked objects:
 34312 ;;		On entry : 3F/0
 34313 ;;		On exit  : 0/0
 34314 ;;		Unchanged: 0/0
 34315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34320 ;;Total ram usage:        0 bytes
 34321 ;; Hardware stack levels used:    1
 34322 ;; This function calls:
 34323 ;;		Nothing
 34324 ;; This function is called by:
 34325 ;;		_TMR6_Initialize
 34326 ;;		_TMR6_CallBack
 34327 ;; This function uses a reentrant model
 34328 ;;
 34329                           
 34330                           	psect	text169
 34331  01AAB4                     __ptext169:
 34332                           	opt callstack 0
 34333  01AAB4                     _TMR6_DefaultInterruptHandler:
 34334                           	opt callstack 0
 34335                           
 34336                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34337  01AAB4  52E6               	movf	postinc1,f,c
 34338                           
 34339                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 34340                           ;stkvar	_i @ sp[(-1)+0]
 34341                           
 34342                           ;incstack = 0
 34343  01AAB6  0EFF               	movlw	-1
 34344  01AAB8  6AE3               	clrf	plusw1,c
 34345  01AABA                     l10133:
 34346                           
 34347                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 34348                           ;stkvar	_i @ sp[(-1)+0]
 34349  01AABA  0EFF               	movlw	-1
 34350  01AABC  50E3               	movf	plusw1,w,c
 34351  01AABE  0D02               	mullw	2
 34352  01AAC0  0E94               	movlw	low _tickCount
 34353  01AAC2  24F3               	addwf	243,w,c
 34354  01AAC4  6ED9               	movwf	fsr2l,c
 34355  01AAC6  0E03               	movlw	high _tickCount
 34356  01AAC8  20F4               	addwfc	prodh,w,c
 34357  01AACA  6EDA               	movwf	fsr2h,c
 34358  01AACC  50DE               	movf	postinc2,w,c
 34359  01AACE  10DE               	iorwf	postinc2,w,c
 34360  01AAD0  B4D8               	btfsc	status,2,c
 34361  01AAD2  D00C               	goto	l10137
 34362                           
 34363                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 34364                           ;stkvar	_i @ sp[(-1)+0]
 34365  01AAD4  0EFF               	movlw	-1
 34366  01AAD6  50E3               	movf	plusw1,w,c
 34367  01AAD8  0D02               	mullw	2
 34368  01AADA  0E94               	movlw	low _tickCount
 34369  01AADC  24F3               	addwf	243,w,c
 34370  01AADE  6ED9               	movwf	fsr2l,c
 34371  01AAE0  0E03               	movlw	high _tickCount
 34372  01AAE2  20F4               	addwfc	prodh,w,c
 34373  01AAE4  6EDA               	movwf	fsr2h,c
 34374  01AAE6  06DE               	decf	postinc2,f,c
 34375  01AAE8  0E00               	movlw	0
 34376  01AAEA  5ADD               	subwfb	postdec2,f,c
 34377  01AAEC                     l10137:
 34378                           
 34379                           ;mcc_generated_files/tmr6.c: 207:  }
 34380                           ;stkvar	_i @ sp[(-1)+0]
 34381  01AAEC  0EFF               	movlw	-1
 34382  01AAEE  2AE3               	incf	plusw1,f,c
 34383                           
 34384                           ;stkvar	_i @ sp[(-1)+0]
 34385  01AAF0  0EFF               	movlw	-1
 34386  01AAF2  006F FF8C  F026    	movff	plusw1,btemp
 34387  01AAF8  0E0C               	movlw	12
 34388  01AAFA  6426               	cpfsgt	btemp^0,c
 34389  01AAFC  D7DE               	goto	l10133
 34390                           
 34391                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34392  01AAFE  52E5               	movf	postdec1,f,c
 34393  01AB00  0012               	return		;funcret
 34394  01AB02                     __end_of_TMR6_DefaultInterruptHandler:
 34395                           	opt callstack 0
 34396                           
 34397 ;; *************** function _DMA1_DMASCNT_ISR *****************
 34398 ;; Defined at:
 34399 ;;		line 126 in file "mcc_generated_files/dma1.c"
 34400 ;; Parameters:    Size  Location     Type
 34401 ;;		None
 34402 ;; Auto vars:     Size  Location     Type
 34403 ;;		None
 34404 ;; Return value:  Size  Location     Type
 34405 ;;                  1    wreg      void 
 34406 ;; Registers used:
 34407 ;;		None
 34408 ;; Tracked objects:
 34409 ;;		On entry : 0/0
 34410 ;;		On exit  : 3F/0
 34411 ;;		Unchanged: 0/0
 34412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34417 ;;Total ram usage:        0 bytes
 34418 ;; Hardware stack levels used:    1
 34419 ;; This function calls:
 34420 ;;		Nothing
 34421 ;; This function is called by:
 34422 ;;		Interrupt level 2
 34423 ;; This function uses a non-reentrant model
 34424 ;;
 34425                           
 34426                           	psect	text170
 34427  01B7E0                     __ptext170:
 34428                           	opt callstack 0
 34429  01B7E0                     _DMA1_DMASCNT_ISR:
 34430                           	opt callstack 5
 34431                           
 34432                           ;incstack = 0
 34433  01B7E0  EE14  F142         	lfsr	1,___inthi_sp
 34434                           
 34435                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 34436  01B7E4  0139               	movlb	57	; () banked
 34437  01B7E6  91A2               	bcf	162,0,b	;volatile
 34438                           
 34439                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 34440  01B7E8  0100               	movlb	0	; () banked
 34441  01B7EA  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 34442                           
 34443                           ; BSR set to: 0
 34444  01B7EC  0011               	retfie		f
 34445  01B7EE                     __end_of_DMA1_DMASCNT_ISR:
 34446                           	opt callstack 0
 34447                           
 34448 ;; *************** function _DMA1_DMADCNT_ISR *****************
 34449 ;; Defined at:
 34450 ;;		line 134 in file "mcc_generated_files/dma1.c"
 34451 ;; Parameters:    Size  Location     Type
 34452 ;;		None
 34453 ;; Auto vars:     Size  Location     Type
 34454 ;;		None
 34455 ;; Return value:  Size  Location     Type
 34456 ;;                  1    wreg      void 
 34457 ;; Registers used:
 34458 ;;		None
 34459 ;; Tracked objects:
 34460 ;;		On entry : 0/0
 34461 ;;		On exit  : 3F/39
 34462 ;;		Unchanged: 0/0
 34463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34468 ;;Total ram usage:        0 bytes
 34469 ;; Hardware stack levels used:    1
 34470 ;; This function calls:
 34471 ;;		Nothing
 34472 ;; This function is called by:
 34473 ;;		Interrupt level 2
 34474 ;; This function uses a non-reentrant model
 34475 ;;
 34476                           
 34477                           	psect	text171
 34478  01B804                     __ptext171:
 34479                           	opt callstack 0
 34480  01B804                     _DMA1_DMADCNT_ISR:
 34481                           	opt callstack 5
 34482                           
 34483                           ; BSR set to: 0
 34484                           ;incstack = 0
 34485  01B804  EE14  F142         	lfsr	1,___inthi_sp
 34486                           
 34487                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 34488  01B808  0139               	movlb	57	; () banked
 34489  01B80A  93A2               	bcf	162,1,b	;volatile
 34490                           
 34491                           ; BSR set to: 57
 34492  01B80C  0011               	retfie		f
 34493  01B80E                     __end_of_DMA1_DMADCNT_ISR:
 34494                           	opt callstack 0
 34495                           
 34496 ;; *************** function _DMA1_DMAA_ISR *****************
 34497 ;; Defined at:
 34498 ;;		line 144 in file "mcc_generated_files/dma1.c"
 34499 ;; Parameters:    Size  Location     Type
 34500 ;;		None
 34501 ;; Auto vars:     Size  Location     Type
 34502 ;;		None
 34503 ;; Return value:  Size  Location     Type
 34504 ;;                  1    wreg      void 
 34505 ;; Registers used:
 34506 ;;		None
 34507 ;; Tracked objects:
 34508 ;;		On entry : 0/0
 34509 ;;		On exit  : 3F/39
 34510 ;;		Unchanged: 0/0
 34511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34516 ;;Total ram usage:        0 bytes
 34517 ;; Hardware stack levels used:    1
 34518 ;; This function calls:
 34519 ;;		Nothing
 34520 ;; This function is called by:
 34521 ;;		Interrupt level 2
 34522 ;; This function uses a non-reentrant model
 34523 ;;
 34524                           
 34525                           	psect	text172
 34526  01B810                     __ptext172:
 34527                           	opt callstack 0
 34528  01B810                     _DMA1_DMAA_ISR:
 34529                           	opt callstack 5
 34530                           
 34531                           ; BSR set to: 57
 34532                           ;incstack = 0
 34533  01B810  EE14  F142         	lfsr	1,___inthi_sp
 34534                           
 34535                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 34536  01B814  0139               	movlb	57	; () banked
 34537  01B816  97A2               	bcf	162,3,b	;volatile
 34538                           
 34539                           ; BSR set to: 57
 34540  01B818  0011               	retfie		f
 34541  01B81A                     __end_of_DMA1_DMAA_ISR:
 34542                           	opt callstack 0
 34543                           
 34544 ;; *************** function _DMA1_DMAOR_ISR *****************
 34545 ;; Defined at:
 34546 ;;		line 155 in file "mcc_generated_files/dma1.c"
 34547 ;; Parameters:    Size  Location     Type
 34548 ;;		None
 34549 ;; Auto vars:     Size  Location     Type
 34550 ;;		None
 34551 ;; Return value:  Size  Location     Type
 34552 ;;                  1    wreg      void 
 34553 ;; Registers used:
 34554 ;;		None
 34555 ;; Tracked objects:
 34556 ;;		On entry : 0/0
 34557 ;;		On exit  : 3F/39
 34558 ;;		Unchanged: 0/0
 34559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34564 ;;Total ram usage:        0 bytes
 34565 ;; Hardware stack levels used:    1
 34566 ;; This function calls:
 34567 ;;		Nothing
 34568 ;; This function is called by:
 34569 ;;		Interrupt level 2
 34570 ;; This function uses a non-reentrant model
 34571 ;;
 34572                           
 34573                           	psect	text173
 34574  01B81C                     __ptext173:
 34575                           	opt callstack 0
 34576  01B81C                     _DMA1_DMAOR_ISR:
 34577                           	opt callstack 5
 34578                           
 34579                           ; BSR set to: 57
 34580                           ;incstack = 0
 34581  01B81C  EE14  F142         	lfsr	1,___inthi_sp
 34582                           
 34583                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 34584  01B820  0139               	movlb	57	; () banked
 34585  01B822  95A2               	bcf	162,2,b	;volatile
 34586                           
 34587                           ; BSR set to: 57
 34588  01B824  0011               	retfie		f
 34589  01B826                     __end_of_DMA1_DMAOR_ISR:
 34590                           	opt callstack 0
 34591                           
 34592                           ;
 34593                           ; Interrupt Vector Table @ 0x8
 34594                           ;
 34595                           
 34596                           	psect	ivt0x8
 34597  000008                     __pivt0x8:
 34598                           	opt callstack 0
 34599  000008                     ivt0x8_base:
 34600                           	opt callstack 0
 34601                           
 34602                           ; Vector 0 : SWINT
 34603  000008  6E1A               	dw	_Default_ISR shr (0+2)
 34604                           
 34605                           ; Vector 1 : HLVD
 34606  00000A  6E1A               	dw	_Default_ISR shr (0+2)
 34607                           
 34608                           ; Vector 2 : OSF
 34609  00000C  6E1A               	dw	_Default_ISR shr (0+2)
 34610                           
 34611                           ; Vector 3 : CSW
 34612  00000E  6E1A               	dw	_Default_ISR shr (0+2)
 34613                           
 34614                           ; Vector 4 : NVM
 34615  000010  6E1A               	dw	_Default_ISR shr (0+2)
 34616                           
 34617                           ; Vector 5 : SCAN
 34618  000012  6E1A               	dw	_Default_ISR shr (0+2)
 34619                           
 34620                           ; Vector 6 : CRC
 34621  000014  6E1A               	dw	_Default_ISR shr (0+2)
 34622                           
 34623                           ; Vector 7 : IOC
 34624  000016  6E1A               	dw	_Default_ISR shr (0+2)
 34625                           
 34626                           ; Vector 8 : INT0
 34627  000018  6DF4               	dw	_INT0_ISR shr (0+2)
 34628                           
 34629                           ; Vector 9 : ZCD
 34630  00001A  6E1A               	dw	_Default_ISR shr (0+2)
 34631                           
 34632                           ; Vector 10 : AD
 34633  00001C  6C60               	dw	_ADCC_ISR shr (0+2)
 34634                           
 34635                           ; Vector 11 : ADT
 34636  00001E  69AD               	dw	_ADCC_ThresholdISR shr (0+2)
 34637                           
 34638                           ; Vector 12 : CMP1
 34639  000020  6E1A               	dw	_Default_ISR shr (0+2)
 34640                           
 34641                           ; Vector 13 : SMT1
 34642  000022  6E1A               	dw	_Default_ISR shr (0+2)
 34643                           
 34644                           ; Vector 14 : SMT1PRA
 34645  000024  6E1A               	dw	_Default_ISR shr (0+2)
 34646                           
 34647                           ; Vector 15 : SMT1PRW
 34648  000026  6E1A               	dw	_Default_ISR shr (0+2)
 34649                           
 34650                           ; Vector 16 : DMA1SCNT
 34651  000028  6DF8               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 34652                           
 34653                           ; Vector 17 : DMA1DCNT
 34654  00002A  6E01               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 34655                           
 34656                           ; Vector 18 : DMA1OR
 34657  00002C  6E07               	dw	_DMA1_DMAOR_ISR shr (0+2)
 34658                           
 34659                           ; Vector 19 : DMA1A
 34660  00002E  6E04               	dw	_DMA1_DMAA_ISR shr (0+2)
 34661                           
 34662                           ; Vector 20 : SPI1RX
 34663  000030  6E1A               	dw	_Default_ISR shr (0+2)
 34664                           
 34665                           ; Vector 21 : SPI1TX
 34666  000032  6E1A               	dw	_Default_ISR shr (0+2)
 34667                           
 34668                           ; Vector 22 : SPI1
 34669  000034  6E1A               	dw	_Default_ISR shr (0+2)
 34670                           
 34671                           ; Vector 23 : I2C1RX
 34672  000036  6E1A               	dw	_Default_ISR shr (0+2)
 34673                           
 34674                           ; Vector 24 : I2C1TX
 34675  000038  6E1A               	dw	_Default_ISR shr (0+2)
 34676                           
 34677                           ; Vector 25 : I2C1
 34678  00003A  6E1A               	dw	_Default_ISR shr (0+2)
 34679                           
 34680                           ; Vector 26 : I2C1E
 34681  00003C  6E1A               	dw	_Default_ISR shr (0+2)
 34682                           
 34683                           ; Vector 27 : U1RX
 34684  00003E  6D0D               	dw	_UART1_rx_vect_isr shr (0+2)
 34685                           
 34686                           ; Vector 28 : U1TX
 34687  000040  6E1A               	dw	_Default_ISR shr (0+2)
 34688                           
 34689                           ; Vector 29 : U1E
 34690  000042  6E1A               	dw	_Default_ISR shr (0+2)
 34691                           
 34692                           ; Vector 30 : U1
 34693  000044  6E1A               	dw	_Default_ISR shr (0+2)
 34694                           
 34695                           ; Vector 31 : TMR0
 34696  000046  6E1A               	dw	_Default_ISR shr (0+2)
 34697                           
 34698                           ; Vector 32 : TMR1
 34699  000048  6E1A               	dw	_Default_ISR shr (0+2)
 34700                           
 34701                           ; Vector 33 : TMR1G
 34702  00004A  6E1A               	dw	_Default_ISR shr (0+2)
 34703                           
 34704                           ; Vector 34 : TMR2
 34705  00004C  6E1A               	dw	_Default_ISR shr (0+2)
 34706                           
 34707                           ; Vector 35 : CCP1
 34708  00004E  6E1A               	dw	_Default_ISR shr (0+2)
 34709                           
 34710                           ; Vector 36 : Undefined
 34711  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 34712                           
 34713                           ; Vector 37 : NCO1
 34714  000052  6E1A               	dw	_Default_ISR shr (0+2)
 34715                           
 34716                           ; Vector 38 : CWG1
 34717  000054  6E1A               	dw	_Default_ISR shr (0+2)
 34718                           
 34719                           ; Vector 39 : CLC1
 34720  000056  6E1A               	dw	_Default_ISR shr (0+2)
 34721                           
 34722                           ; Vector 40 : INT1
 34723  000058  6B9E               	dw	_INT1_ISR shr (0+2)
 34724                           
 34725                           ; Vector 41 : CMP2
 34726  00005A  6E1A               	dw	_Default_ISR shr (0+2)
 34727                           
 34728                           ; Vector 42 : DMA2SCNT
 34729  00005C  6E1A               	dw	_Default_ISR shr (0+2)
 34730                           
 34731                           ; Vector 43 : DMA2DCNT
 34732  00005E  6E1A               	dw	_Default_ISR shr (0+2)
 34733                           
 34734                           ; Vector 44 : DMA2OR
 34735  000060  6E1A               	dw	_Default_ISR shr (0+2)
 34736                           
 34737                           ; Vector 45 : DMA2A
 34738  000062  6E1A               	dw	_Default_ISR shr (0+2)
 34739                           
 34740                           ; Vector 46 : I2C2RX
 34741  000064  6E1A               	dw	_Default_ISR shr (0+2)
 34742                           
 34743                           ; Vector 47 : I2C2TX
 34744  000066  6E1A               	dw	_Default_ISR shr (0+2)
 34745                           
 34746                           ; Vector 48 : I2C2
 34747  000068  6E1A               	dw	_Default_ISR shr (0+2)
 34748                           
 34749                           ; Vector 49 : I2C2E
 34750  00006A  6E1A               	dw	_Default_ISR shr (0+2)
 34751                           
 34752                           ; Vector 50 : U2RX
 34753  00006C  6D21               	dw	_UART2_rx_vect_isr shr (0+2)
 34754                           
 34755                           ; Vector 51 : U2TX
 34756  00006E  6D17               	dw	_UART2_tx_vect_isr shr (0+2)
 34757                           
 34758                           ; Vector 52 : U2E
 34759  000070  6E1A               	dw	_Default_ISR shr (0+2)
 34760                           
 34761                           ; Vector 53 : U2
 34762  000072  6E1A               	dw	_Default_ISR shr (0+2)
 34763                           
 34764                           ; Vector 54 : TMR3
 34765  000074  6215               	dw	_TMR3_ISR shr (0+2)
 34766                           
 34767                           ; Vector 55 : TMR3G
 34768  000076  6E1A               	dw	_Default_ISR shr (0+2)
 34769                           
 34770                           ; Vector 56 : TMR4
 34771  000078  6E1A               	dw	_Default_ISR shr (0+2)
 34772                           
 34773                           ; Vector 57 : CCP2
 34774  00007A  6E1A               	dw	_Default_ISR shr (0+2)
 34775                           
 34776                           ; Vector 58 : Undefined
 34777  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 34778                           
 34779                           ; Vector 59 : CWG2
 34780  00007E  6E1A               	dw	_Default_ISR shr (0+2)
 34781                           
 34782                           ; Vector 60 : CLC2
 34783  000080  6E1A               	dw	_Default_ISR shr (0+2)
 34784                           
 34785                           ; Vector 61 : INT2
 34786  000082  6E1A               	dw	_Default_ISR shr (0+2)
 34787                           
 34788                           ; Vector 62 : Undefined
 34789  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 34790                           
 34791                           ; Vector 63 : Undefined
 34792  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 34793                           
 34794                           ; Vector 64 : Undefined
 34795  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 34796                           
 34797                           ; Vector 65 : Undefined
 34798  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 34799                           
 34800                           ; Vector 66 : Undefined
 34801  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 34802                           
 34803                           ; Vector 67 : Undefined
 34804  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 34805                           
 34806                           ; Vector 68 : Undefined
 34807  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 34808                           
 34809                           ; Vector 69 : Undefined
 34810  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 34811                           
 34812                           ; Vector 70 : TMR5
 34813  000094  663C               	dw	_TMR5_ISR shr (0+2)
 34814                           
 34815                           ; Vector 71 : TMR5G
 34816  000096  6E1A               	dw	_Default_ISR shr (0+2)
 34817                           
 34818                           ; Vector 72 : TMR6
 34819  000098  6DB4               	dw	_TMR6_ISR shr (0+2)
 34820                           
 34821                           ; Vector 73 : CCP3
 34822  00009A  6E1A               	dw	_Default_ISR shr (0+2)
 34823                           
 34824                           ; Vector 74 : CWG3
 34825  00009C  6E1A               	dw	_Default_ISR shr (0+2)
 34826                           
 34827                           ; Vector 75 : CLC3
 34828  00009E  6E1A               	dw	_Default_ISR shr (0+2)
 34829                           
 34830                           ; Vector 76 : Undefined
 34831  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 34832                           
 34833                           ; Vector 77 : Undefined
 34834  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 34835                           
 34836                           ; Vector 78 : Undefined
 34837  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 34838                           
 34839                           ; Vector 79 : Undefined
 34840  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 34841                           
 34842                           ; Vector 80 : CCP4
 34843  0000A8  6E1A               	dw	_Default_ISR shr (0+2)
 34844                           
 34845                           ; Vector 81 : CLC4
 34846  0000AA  6E1A               	dw	_Default_ISR shr (0+2)
 34847  0000AC                     ivt0x8_undefint:
 34848                           	opt callstack 0
 34849  0000AC  00FF               	reset	
 34850                           
 34851                           	psect	text174
 34852  000000                     __ptext174:
 34853                           	opt callstack 0
 34854                           
 34855                           	psect	rparam
 34856  0000                     
 34857                           	psect	temp
 34858  000026                     btemp:
 34859                           	opt callstack 0
 34860  000026                     	ds	32
 34861  0000                     wtemp0	set	btemp
 34862  0000                     wtemp1	set	btemp+2
 34863  0000                     wtemp2	set	btemp+4
 34864  0000                     wtemp3	set	btemp+6
 34865  0000                     wtemp4	set	btemp+8
 34866  0000                     wtemp5	set	btemp+10
 34867  0000                     wtemp8	set	btemp+1
 34868  0000                     ttemp0	set	btemp
 34869  0000                     ttemp1	set	btemp+3
 34870  0000                     ttemp2	set	btemp+6
 34871  0000                     ttemp3	set	btemp+9
 34872  0000                     ttemp5	set	btemp+1
 34873  0000                     ttemp6	set	btemp+4
 34874  0000                     ttemp7	set	btemp+8
 34875  0000                     ltemp0	set	btemp
 34876  0000                     ltemp1	set	btemp+4
 34877  0000                     ltemp2	set	btemp+8
 34878  0000                     lltemp0	set	btemp
 34879  0000                     lltemp1	set	btemp+8
 34880  0000                     lltemp2	set	btemp+16
 34881  0000                     lltemp3	set	btemp+24
 34882                           tosu	equ	0x3FFF
 34883                           tosh	equ	0x3FFE
 34884                           tosl	equ	0x3FFD
 34885                           stkptr	equ	0x3FFC
 34886                           pclatu	equ	0x3FFB
 34887                           pclath	equ	0x3FFA
 34888                           pcl	equ	0x3FF9
 34889                           tblptru	equ	0x3FF8
 34890                           tblptrh	equ	0x3FF7
 34891                           tblptrl	equ	0x3FF6
 34892                           tablat	equ	0x3FF5
 34893                           prodh	equ	0x3FF4
 34894                           prodl	equ	0x3FF3
 34895                           indf0	equ	0x3FEF
 34896                           postinc0	equ	0x3FEE
 34897                           postdec0	equ	0x3FED
 34898                           preinc0	equ	0x3FEC
 34899                           plusw0	equ	0x3FEB
 34900                           fsr0h	equ	0x3FEA
 34901                           fsr0l	equ	0x3FE9
 34902                           wreg	equ	0x3FE8
 34903                           indf1	equ	0x3FE7
 34904                           postinc1	equ	0x3FE6
 34905                           postdec1	equ	0x3FE5
 34906                           preinc1	equ	0x3FE4
 34907                           plusw1	equ	0x3FE3
 34908                           fsr1h	equ	0x3FE2
 34909                           fsr1l	equ	0x3FE1
 34910                           bsr	equ	0x3FE0
 34911                           indf2	equ	0x3FDF
 34912                           postinc2	equ	0x3FDE
 34913                           postdec2	equ	0x3FDD
 34914                           preinc2	equ	0x3FDC
 34915                           plusw2	equ	0x3FDB
 34916                           fsr2h	equ	0x3FDA
 34917                           fsr2l	equ	0x3FD9
 34918                           status	equ	0x3FD8


Data Sizes:
    Strings     919
    Constant    492
    Data        1012
    BSS         1300
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     25      62
    BANK0           160     25     153
    BANK1           256      0     256
    BANK2           256      0     254
    BANK3           256      0     254
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_102(CODE[1]), STR_64(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 85
		 -> ct(STACK[3]), STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 85
		 -> ct(STACK[3]), STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK2[190]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK2[190]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[190]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[190]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6045_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[190]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[190]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK2[190]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK2[190]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_47(CODE[9]), 
		 -> STR_46(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[6]), V(BANK2[190]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4508tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_47(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_46(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK2[190]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK2[190]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0  373854
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8321
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         4     0      4      22
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  186232
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            66    10     56   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                           15    15      0    5454
                                             10 COMRAM    15    15      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0    5364
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0    5364
                     _check_day_time
 ---------------------------------------------------------------------------------
 (17) _check_day_time                                      0     0      0    5364
                             ___flge
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (18) _conv_raw_result                                     2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (19) _nanf                                                6     4      2      23
 ---------------------------------------------------------------------------------
 (19) _get_raw_result                                      1     0      1      22
 ---------------------------------------------------------------------------------
 (19) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   35450
                                              0 BANK0     25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   35390
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           2     2      0   35390
                         _StartTimer
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            66    10     56   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
       _check_day_time
         ___flge
         _conv_raw_result
           ___fldiv
           ___flmul
           ___flsub
             ___fladd
           ___xxtofl
           _get_raw_result
           _nanf
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     3E2      69       12.1%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FE      11       99.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FE       9       99.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      99       5       95.6%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     19      3E       1       98.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     558      58        0.0%
DATA                 0      0     93A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Dec 21 03:28:27 2019

                     _SPI1_Exchange8bit B604                __end_of_set_display_info B65E  
                                     _C 0100                                       _D 07FF  
                                     _H 00D9                                       _P 0096  
                                     _R 00B1                                       _S 02C5  
                                     _T FB4B                                       _V 0207  
      __end_of_TMR5_SetInterruptHandler B36A            __end_of_start_switch_handler B5E4  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FC53                  __end_of_FVR_Initialize B84E  
                        _check_day_time 9C2C                             __CFG_LVP$ON 000000  
                                   l169 B756                                     l807 B612  
                                   l673 B1D2                                     _GIE 01FE97  
                                   _abs AB94                                     _pad 90EA  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize B702  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack B5A2  
                     _update_adc_result AEB6                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 0092                           _INT1_CallBack B580  
                          __CFG_ZCD$OFF 000000                                    l1002 AE32  
                                  l2020 493A                                    l2123 9146  
                                  l3100 7348                                    l1340 18D4  
                                  l1324 12A2                                    l1190 AE72  
                                  l1350 1974                                    l1342 18DA  
                                  l2143 544A                                    l2223 0B1A  
                                  l2208 066A                                    l2064 6B9C  
                                  l1352 1AFA                                    l1353 1CFC  
                       _timer3ReloadVal 0012                                    l3061 8110  
                                  l2261 6C8A                                    l3038 7BBE  
                                  l1358 2232                                    l1439 A914  
                                  l1714 B65A                                    l2282 62F8  
                                  l2179 123A                                    l2347 3214  
                                  l3069 ABD4                                    l1583 A338  
                                  l1657 AF0C                                    l3169 8FC8  
                                  l2297 5830                                    l2650 8848  
                                  l1674 930A                                    l1666 7864  
                                  l1827 7F7A                                    l2643 8774  
                                  l1579 9FA0                                    l3451 A556  
                                  l1667 79C0                                    l3436 77A8  
                                  l1598 AF78                    _ADCC_StartConversion B770  
                                  l2639 9C22                                    l1776 5366  
                                  l3464 A4D2                                    l1947 A3CC  
                                  l1956 961C                                    l1868 981E  
                                  l2917 41FA                                    l2677 8576  
                                  l2929 408A                                    l2962 4EB6  
                                  l8011 4A22                                    l8005 49DC  
                                  l8031 4B00                                    l8105 4D7C  
                                  l8025 4ABA                                    l8009 49F2  
                                  l8131 4E62                                    l8051 4B92  
                                  l8043 4B78                                    l8019 4A7A  
                                  l6525 AE5A                                    l8125 4E32  
                                  l8109 4D82                                    l8061 4C22  
                                  l8037 4B3E                                    l8029 4AD0  
                                  l2998 3A3E                                    l8119 4DF6  
                                  l8071 4C6A                                    l8161 32B4  
                                  l8137 4E8A                                    l8401 9BEC  
                                  l8243 3832                                    l8163 32BA  
                                  l8155 3274                                    l8139 4E9A  
                                  l8091 4D0C                                    l8323 89EC  
                                  l8253 3874                                    l8181 3388  
                                  l8173 3342                                    l8165 32EA  
                                  l7701 403A                                    l7605 3C36  
                                  l8413 8732                                    l8085 4CF0  
                                  l8077 4CBE                                    l8069 4C58  
                                  l8317 89D6                                    l8405 9C20  
                                  l8501 823A                                    l8263 38BE  
                                  l8191 33DA                                    l8183 33B8  
                                  l8431 8846                                    l8423 8810  
                                  l8095 4D32                                    l8079 4CC2  
                                  l9143 70F8                                    l7535 A074  
                                  l8351 8AE6                                    l8343 8AB2  
                                  l8281 397E                                    l8249 384E  
                                  l9161 71D2                                    l9153 718E  
                                  l9145 711A                                    l7537 A096  
                                  l8329 8A0C                                    l8521 8BE6  
                                  l8513 8B3A                                    l8267 38C4  
                                  l8179 3382                                    l7723 40CA  
                                  l7651 3E18                                    l7635 3D74  
                                  l7563 3A9E                                    l8419 87C2  
                                  l9163 71F6                                    l8371 901C  
                                  l8363 8FF2                                    l8277 3938  
                                  l7733 40F2                                    l7717 40AC  
                                  l7709 406E                                    l7645 3DE6  
                                  l7581 3B5C                                    l7573 3AF4  
                                  l9165 7234                                    l7805 ABC4  
                                  l8381 909C                                    l8295 39EC  
                                  l8287 39A8                                    l7719 40BE  
                                  l7655 3E22                                    l7575 3B24  
                                  l9511 4EF2                                    l9159 71BA  
                                  l8367 9004                                    l8439 AB6A  
                                  l7823 80B2                                    l7903 A4C2  
                                  l8297 3A06                                    l7737 40F8  
                                  l7649 3E06                                    l7593 3BCE  
                                  l7569 3ADE                                    l9521 5010  
                                  l9505 4EC2                                    l8537 AA52  
                                  l9169 729C                                    l8473 850E  
                                  l8465 84E2                                    l8449 8460  
                                  l7771 41DA                                    l7763 419A  
                                  l7683 3F0A                                    l7659 3E52  
                                  l7587 3B8E                                    l9179 7338  
                                  l7931 6F5A                                    l8475 8524  
                                  l8467 84FE                                    l7819 80AE  
                                  l9195 761A                                    l7765 41AA  
                                  l7749 4156                                    l7677 3EEE  
                                  l7597 3BE4                                    l9461 7A7A  
                                  l9453 7A0E                                    l9533 511C  
                                  l9525 50EA                                    l7925 6F14  
                                  l8389 90D0                                    l8397 9BAA  
                                  l7829 8108                                    l7861 6066  
                                  l9197 7686                                    l7759 4182  
                                  l7679 3F00                                    l7687 3F3C  
                                  l7599 3C14                                    l9463 7A88  
                                  l9551 5334                                    l7943 702C  
                                  l7919 6EC0                                    l7847 A546  
                                  l9473 7AEA                                    l9465 7A9E  
                                  l9545 5298                                    l9537 51B8  
                                  l7881 621C                                    l8489 8168  
                                  l7699 4014                                    l9475 7B08  
                                  l9467 7ABC                                    l7971 7438  
                                  l7963 73B0                                    l7875 6184  
                                  l9485 7B3C                                    l9477 7B1E  
                                  l7885 628A                                    l7877 61D4  
                                  l9751 AA8E                                    l9495 7B9E  
                                  l9559 5346                                    l9743 B164  
                                  l9673 9CE2                                    l9577 B29A  
                                  l7979 74E4                                    l9669 9C90  
                                  l9685 AF82                                    l7999 499C  
                                  STR_1 FF50                                    STR_2 FFA2  
                                  STR_3 FFD0                                    STR_4 FF1D  
                                  STR_5 FDF0                                    STR_6 FDF0  
                                  STR_7 FDF0                                    STR_8 FF0B  
                                  STR_9 FD08                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u6000 6202                                    u5300 B0B8  
                                  u6005 61F8                                    u6110 6EBA  
                                  u5310 B0BA                                    u6030 AD2A  
                                  u6200 70B6                                    u6040 AD2C  
                                  u5410 3D9A                                    u6130 6F10  
                                  u7010 AB66                                    u6050 A480  
                                  _T6PR 003F93                                    u5420 3DBA  
                                  u7020 8440                                    u6060 A482  
                                  _PMD0 0039C0                                    u5421 3DB4  
                                  u6141 6F1A                                    _PMD1 0039C1  
                                  u5270 A0C4                                    u6150 6F54  
                                  u6310 756E                                    u6230 73AA  
                                  u7110 8556                                    u7030 8454  
                                  _PMD2 0039C2                                    _PMD3 0039C3  
                                  u6080 B0E8                                    u6160 6F86  
                                  u7040 848E                                    _PMD4 0039C4  
                                  u7025 8436                                    u7121 8128  
                                  _PMD5 0039C5                                    u5610 40D0  
                                  u5530 3F32                                    u6090 B0EA  
                                  u6250 7400                                    u7130 8162  
                                  u7210 8C1E                                    _PMD6 0039C6  
                                  _PMD7 0039C7                                    u5700 4166  
                                  u5460 3E4A                                    u6180 7064  
                                  u6260 7432                                    u7140 8194  
                                  u5277 A0B6                                    u7045 8484  
                                  u5630 40EA                                    u5470 3E6A  
                                  u5438 3DBC                                    u7230 AA2E  
                                  u6270 7464                                    u5535 3F22  
                                  u7240 AA4E                                    u5800 ABA8  
                                  u7160 8272                                    u5465 3E3A  
                                  u5570 405C                                    u6530 4DD0  
                                  u6450 4CEA                                    u6290 751C  
                                  u7090 852C                                    u5810 8032  
                                  u6540 4E0A                                    u9004 5104  
                                  u5900 A504                                    u7180 8B34  
                                  u5740 B088                                    u9005 50FE  
                                  u6710 38B6                                    u5670 4146  
                                  u6550 4E46                                    u5910 A506  
                                  u7190 8B66                                    u5750 B08A  
                                  u6535 4DC0                                    u5815 8028  
                                  u9200 A72C                                    u6640 33C8  
                                  u9024 51D2                                    u8400 72E2  
                                  u9025 51CC                                    u6490 4D74  
                                  u9050 51FC                                    u8410 72E4  
                                  u5930 5FFE                                    u5675 4136  
                                  u9044 51F4                                    u6820 8A38  
                                  u5860 8100                                    u5940 604A  
                                  u8500 777C                                    u9045 51EE  
                                  u6750 3912                                    u6910 90BC  
                                  u5870 8102                                    u6655 355C  
                                  u5855 80E2                                    u5935 5FF4  
                                  u6760 394C                                    u9320 7DDE  
                                  u6840 8AD2                                    u9225 A760  
                                  u6665 3624                                    u9226 A762  
                                  u9218 A72E                                    u6770 3992  
                                  u9410 B56A                                    u8450 76B4  
                                  u6755 3902                                    u6675 37EC  
                                  u9155 AD66                                    u8507 776E  
                                  u8380 718A                                    u5980 612A  
                                  u5965 6084                                    u6950 9C1C  
                                  u5966 608A                                    u5967 6098  
                                  u9416 B56C                                    u9520 A372  
                                  u5985 6120                                    u8457 76A6  
                                  u6890 9048                                    u8490 774E  
                                  u9275 B79C                                    u8900 7B32  
                                  u9276 B79E                                    u9285 B78C  
                                  u9286 B78E                                    u9550 A3B8  
                                  u8495 7748                                    u8497 773A  
                                  u9538 A374                                    _PLLR 01CEE0  
                                  u8944 4EDC                                    u9568 A3BA  
                                  u8945 4ED6                                    u8964 4F0C  
                                  u8965 4F06                                    u8984 4F2E  
                                  u8985 4F28                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR B1AC  
                         __CFG_FCMEN$ON 000000                                    _dbuf 03AE  
                                  _cp_h FC63                                    _cp_l FC5F  
                                  _atoi 70DE                                    _ctoa A3D0  
                                  _main 1244                                    _dtoa 536C  
                                  _nanf A84A                                    _seed 02F6  
                                  _prec 000C                                    _nout 00AF  
                                  _spin FBDB                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 6BA0                                    btemp 0026  
                                  _utoa 62B4                                    _xtoa 57EC  
                __end_of_check_adc_scan B836                           ___fpclassifyf 7F84  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 0016  
             __end_of_SPI1_Exchange8bit B622               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize ACAC             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr B434                            ___param_bank 000000  
                __end_of_check_day_time 9CEC                      ?_UART1_rx_vect_isr 0046  
                      __end_of_INT0_ISR B7DE                        __end_of_INT1_ISR AEB6  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma 9FA8  
         __end_of_OSCILLATOR_Initialize B75C                                   l10133 AABA  
                                 l10205 7E2C                                   l10311 8C64  
                                 l10137 AAEC                                   l10313 8C6A  
                                 l10321 8C86                                   l10209 7E40  
                                 l12001 62E8                                   l10315 8C70  
                                 l10323 8CB2                                   l10243 AF22  
                                 l10317 8C7E                                   l10309 8C54  
                                 l12101 5B5C                                   l10421 A224  
                                 l10337 8D64                                   l10329 8CEA  
                                 l12009 6344                                   l12041 5820  
                                 l10425 A28C                                   l12019 653A  
                                 l12211 29BC                                   l10197 7E00  
                                 l12061 58F6                                   l12053 5896  
                                 l12301 3142                                   l10285 AED6  
                                 l10701 6A1C                                   l10349 A386  
                                 l10519 AE1A                                   l11503 918C  
                                 l12047 585A                                   l12311 31A0  
                                 l12223 2AA8                                   l12135 2354  
                                 l11513 9A16                                   l12161 2526  
                                 l12137 238E                                   l10633 98E0  
                                 l10619 83E8                                   l11507 91D6  
                                 l12307 319C                                   l12243 2C08  
                                 l12219 2A74                                   l12139 23A4  
                                 l10723 6B64                                   l10627 983A  
                                 l10493 B1CE                                   l12501 4594  
                                 l12077 59EC                                   l12085 5A72  
                                 l12253 2CB6                                   l12157 24D6  
                                 l12317 31C0                                   l11541 67B4  
                                 l10725 6B8C                                   l12511 46D8  
                                 l11471 8EDE                                   l11711 0396  
                                 l11703 032A                                   l12263 2DD8  
                                 l12159 2510                                   l11535 674A  
                                 l10735 9CF2                                   l10655 68FA  
                                 l10807 95F6                                   l12521 4780  
                                 l12505 462E                                   l10825 ADF0  
                                 l11561 A3EE                                   l11633 57A2  
                                 l11609 56B4                                   l11721 04D2  
                                 l12273 2E8E                                   l12177 268A  
                                 l11529 668C                                   l10681 699C  
                                 l10665 693E                                   l10657 690A  
                                 l12515 4762                                   l11483 A100  
                                 l11563 A41A                                   l11715 0406  
                                 l12195 280E                                   l12187 2722  
                                 l12371 9E7E                                   l10739 9D30  
                                 l10675 6974                                   l10659 690E  
                                 l12533 4932                                   l12517 476A  
                                 l11493 9116                                   l11629 5766  
                                 l11813 0B12                                   l11805 0A48  
                                 l11733 0554                                   l11717 0470  
                                 l12373 9EC0                                   l11549 6862  
                                 l12357 A000                                   l12445 9222  
                                 l10693 69F6                                   l10685 69A8  
                                 l10669 694A                                   PRLOCK 0039EF  
                                 l11487 A13E                                   l11903 1092  
                                 l11815 0B34                                   l11647 00AC  
                                 l12287 300A                                   l12199 2862  
                                 l11497 913E                                   l11913 10E2  
                                 l11841 0CBA                                   l11753 05F6  
                                 l11745 0594                                   l11737 057C  
                                 l11681 022C                                   l10785 952A  
                                 l12801 146E                                   l10891 A5A4  
                                 l10779 5F3C                                   l11499 9150  
                                 l11595 5484                                   l11587 543A  
                                 l11771 06B8                                   l11755 0602  
                                 l11739 058E                                   l11659 00F0  
                                 l11667 0146                                   l12581 B600  
                                 l10885 A594                                   l12485 42CA  
                                 l11829 0C32                                   l11781 077A  
                                 l11677 01EA                                   l11685 0258  
                                 l10797 9586                                   l11599 54A2  
                                 l11791 0926                                   l11775 06F0  
                                 l11695 02FC                                   l11679 0216  
                                 l12903 1EDE                                   l12751 12BC  
                                 l12743 1284                                   l12489 430C  
                                 l11929 119A                                   l11849 0D24  
                                 l11857 0D90                                   l11865 0EA2  
                                 l12745 128C                                   l11891 0FD6  
                                 l12691 795C                                   l12907 1F40  
                                 l11893 0FF0                                   l11877 0F3A  
                                 l11973 6D2C                                   l11965 6CC0  
                                 l11949 6C0C                                   l12677 7834  
                                 l12933 2138                                   l12917 20BC  
                                 l12861 17A0                                   l12749 12AA  
                                 l11983 6DE2                                   l12919 20E6  
                                 l12871 190C                                   l11969 6CFC  
                                 l12961 21E2                                   l12953 21AC  
                                 l12937 215C                                   l12849 16C6  
                                 l11987 6E1E                                   l11979 6DB6  
                                 l12955 21C4                                   l12947 219A  
                                 l12891 1966                                   l12883 1940  
                                 l12965 2208                                   l12869 18DE  
                                 l12975 225E                         __end_of___aodiv 70DE  
                          _Volts_to_SOC A21C                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 4204  
                                 _ADCLK 003EFF                         __end_of___aomod 7592  
                                 _ADPCH 003EF1                         __end_of___fldiv 4EC0  
                                 _ADREF 003EFD                         __end_of___awdiv 8B00  
                       __end_of___flneg AB94                                   STR_10 FD35  
                                 STR_11 FD4B                                   STR_12 FF2E  
                                 STR_21 FF61                                   STR_13 FF3F  
                                 STR_14 FF72                                   STR_30 FEE5  
                                 STR_22 FE99                                   STR_23 FEBF  
                                 STR_31 FE27                                   STR_15 FD61  
                                 STR_40 FF83                                   STR_24 FEAC  
                                 STR_32 FE3A                                   STR_16 FD1F  
                                 STR_41 FF83                                   STR_25 FE60  
                                 STR_33 FE4D                                   STR_17 FCBC  
                         __CFG_WDTE$OFF 000000                                   STR_42 FF61  
                                 STR_50 FFBD                                   STR_26 FE86  
                                 STR_34 FD9E                                   STR_18 FCD6  
                                 STR_51 FFBD                                   STR_43 FFFB  
                                 STR_19 FF83                                   STR_27 FE73  
                                 STR_35 FDDA                                   STR_44 FFF8  
                                 STR_52 FF93                                   STR_28 FEF8  
                                 STR_36 FD8A                         __end_of___awmod 90EA  
                                 STR_53 FF93                                   STR_29 FED2  
                                 STR_37 FD76                                   STR_54 FF93  
                                 STR_70 FFDA                                   STR_46 FFB1  
                                 STR_38 FDB2                                   STR_71 FFE2  
                                 STR_47 FFC7                                   STR_39 FDC6  
                                 STR_55 FCF0                                   STR_64 FCBB  
                                 STR_80 FFEF                                   STR_48 FE01  
                                 _ADRPT 003EEC                                   STR_49 FE01  
                                 STR_57 FE14                                   STR_65 FC67  
                                 STR_90 FFF2                                   STR_74 FFE9  
                                 STR_66 FFD6                                   STR_58 FDEE  
                                 STR_83 FFEC                                   STR_67 FFDE  
                                 STR_76 FFE9                                   STR_85 FFEC  
                                 STR_93 FFF5                                   STR_78 FFEF  
                                 STR_95 FFF5                                   STR_88 FFF2  
                       __end_of___flmul 3A48                                   STR_97 FFE6  
                                 STR_99 FFE6                         __end_of___flsub AC20  
                       __end_of___fltol 8580                                   u10420 8ED2  
                                 u10500 9A90                                   u11220 10B8  
                                 u11060 0A18                                   u10440 8F4E  
                                 u10600 539E                                   u11240 116E  
                                 u11160 0EE4                                   u11320 6D22  
                                 u11250 1170                                   u11330 6D68  
                                 u10507 9A82                         __end_of___lodiv 829A  
                                 u11411 657C                                   u10700 5722  
                                 u10620 540E                                   u11420 6592  
                                 u11500 5942                                   u11421 6590  
                                 u10710 5726                                   u11430 65A6  
                                 u11510 5944                                   u10640 5420  
                                 u10800 0194                                   u11360 6E44  
                                 u11440 65AA                                   u11600 5AE8  
                                 u10560 68D6                                   u11337 6D5A  
                                 u10730 573C                                   u10810 0196  
                                 u11610 5AEC                                   u11530 59A2  
                                 u12170 79AC                                   u12250 158C  
                                 _U1P1H 003DED                                   u10660 5470  
                                 u11380 62CE                                   u11540 59A4  
                                 u11460 5806                                   u12180 79AE  
                                 _U1P2H 003DEF                                   u10670 56C8  
                                 u10590 539C                                   u12350 2128  
                                 u12270 17CE                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   _T3CLK 003FA9  
                                 u10920 0562                                   u10840 02A6  
                                 u11560 5A6E                                   u11720 256E  
                                 u12360 2142                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u10681 56F8  
                                 u10690 570E                                   u10850 02A8  
                                 u10770 00DA                                   u11570 5A8E  
                                 u11490 58EE                                   u11810 28EA  
                                 u11730 2570                                   u12370 2154  
                                 _U1P3L 003DF0                                   u10691 570C  
                                 u11740 2596                                   u12356 212A  
                                 u11581 5ABE                                   u11565 5A50  
                                 u10950 05C6                                   u11590 5AD4  
                                 u11910 2EE2                                   u11670 23EC  
                                 u12366 2144                                   _U2P1L 003DD4  
                                 u11591 5AD2                                   u11840 2B62  
                                 u11680 23EE                                   u12376 2156  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 u10890 050E                                   u11930 3092  
                                 u11850 2B64                                   u11690 2414  
                                 _U2P3L 003DD8                                   u10990 0648  
                                 u11790 2776                                   u11950 9FE0  
                                 _T5CLK 003F9D                         __end_of___lomod 8C40  
                                 _T2HLT 003FAD                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 00A3  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 004B  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
             __end_of_update_adc_result AEF0                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR B868  
               __size_of_clear_adc_scan 0006       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 89B2                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR 99CE  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR B6EA  
                          _DMA1CON1bits 003BFD                                   _fabsf 9DA4  
                                 _flags 000E                __size_of_calc_model_data 03A2  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
                                 _fputc 8EAE              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha AD36                                   _fputs A0F0  
                       __end_of_isdigit B0F4                         __end_of_ivln2_h FC5F  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand AFCC  
                                 _width 000A                                   _putch B6B6  
                       __end_of_islower B094                         __end_of_isspace AA62  
              _INT1_SetInterruptHandler B392                         __end_of_isupper B0C4  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0026                                   ltemp1 002A  
                                 ltemp2 002E                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0026                                   ttemp1 0029  
                                 ttemp2 002C                                   ttemp3 002F  
                                 ttemp5 0027                                   ttemp6 002A  
                                 ttemp7 002E                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler B31A             _UART1_SetRxInterruptHandler B2F2  
                                 wtemp0 0026                                   wtemp1 0028  
                                 wtemp2 002A                                   wtemp3 002C  
                                 wtemp4 002E                                   wtemp5 0030  
                                 wtemp8 0027                         __end_of_sprintf 9418  
                       __end_of_tolower A560                         __end_of_strncmp 77B2  
                       __end_of_toupper A4DC               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr B45C                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize AC66                   __end_of_ringBufS_init B27A  
                       __initialization 9418                       _UART2_rx_vect_isr B484  
                          __end_of_cp_h FC67                            __end_of_cp_l FC63  
                          __end_of_atoi 7352                            __end_of_ctoa A458  
                          __end_of_main 2272                            __end_of_dtoa 57EC  
                          __end_of_nanf A8AC                            __end_of_spin FC53  
                          __end_of_stoa 6E5E                            __end_of_utoa 65F4  
                          __end_of_xtoa 5BA6                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0046                 __end_of_TMR2_Initialize B71A  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button ADF8  
              _TMR5_SetInterruptHandler B342                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 009A  
                     _port_data_dma_ptr B7F8                      esr_check@esr_state 0018  
                   ??_UART2_rx_vect_isr 004B                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize B1D8                         _PWM8_Initialize B730  
                      _UART1_Initialize AC20                       _UART2_tx_vect_isr B45C  
                    _UART2_Transmit_ISR B1AC                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan A784                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue AD36                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0046  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _T3GATE 003FA8  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _T3GCON 003FA7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  i1l1019 997E  
                                _RB6PPS 003A0E                                  i1l1207 891A  
                  _start_switch_handler B5C4                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                 __end_of_TMR3_Initialize ACF2  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright B7C0                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                u448_48 B5B0                                  _OSCFRQ 0039DF  
                                u926_20 AF30                                  u926_26 AF32  
                                u942_28 8C5A                                  u945_20 8C7A  
                                u945_21 8C74                    __size_of_hid_display 0102  
                                u949_24 8D5A                                  u949_25 8D56  
                                u975_48 B54A                                  u969_28 B58E  
                                u978_28 B502                        __end_of___xxtofl 7BC8  
 __end_of_ADCC_DischargeSampleCapacitor B82E  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor B826                __end_of_send_lcd_cmd_dma AA10  
                       _TMR3_WriteTimer AE38                     ??_UART2_tx_vect_isr 004B  
             __end_of_UART2_rx_vect_isr B4AA              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize B7EE                        _UART2_Initialize A8AC  
                                _WaitMs AF60                         _conv_raw_result 4EC0  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 86F0                                  ___fleq 9B68  
                     _ADCC_ThresholdISR A6B4                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush A2AE                                  _efgtoa 0000  
                                _floorf 5F48                      ?_ADCC_ThresholdISR 0046  
                                _memset 65F4                    __size_of_help_button 0038  
                                clear_0 94B0                                  clear_1 94C4  
                                clear_2 94D6                                  clear_3 94E2  
                                clear_4 94EE                                  clear_5 94FA  
                                clear_6 9506               __end_of_port_data_dma_ptr B802  
                                _printf A7E8                      _eaDogM_WriteString 9FA8  
                                _strcpy 99CE                               ?_ADCC_ISR 0046  
                                _strlen A04E                      __size_of_TimerDone 0028  
                          __pdataBIGRAM 05FF                         _ADCC_Initialize A648  
                        _PMD_Initialize B75C              __size_of_update_adc_result 003A  
             __end_of_UART2_tx_vect_isr B484                                  lltemp0 0026  
                                lltemp1 002E                                  lltemp2 0036  
                                lltemp3 003E                     ??_ADCC_ThresholdISR 0046  
                __end_of_start_adc_scan A7E8                            __mediumconst FA7A  
                                preinc2 003FDC                  __size_of_init_port_dma 0030  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay A964  
                      __end_of_spinners 98F0                        __end_of_vfprintf 9EFE  
                            _StartTimer AD78           __size_of_INTERRUPT_Initialize 0066  
               __end_of_TMR5_Initialize ACAC                       _SYSTEM_Initialize AB02  
                            __accesstop 0060                 __end_of__initialization 9518  
                             ?_INT0_ISR 0046                               ?_INT1_ISR 0046  
                  __end_of_display_help B846                    __end_of_display_info B83E  
             __end_of_CLKREF_Initialize B7F8                           ___rparam_used 000001  
            __size_of_UART1_rx_vect_isr 0028                         _TMR5_WriteTimer ADF8  
                 _set_temp_display_help B7A2                        _clear_hid_pflags B4CE  
                 __end_of_TMR3_CallBack B53A               __end_of_ADCC_ThresholdISR A71E  
                    __size_of_calc_bsoc 0742                  __end_of_ringBufS_flush A340  
                        __pcstackCOMRAM 0046                              ___inthi_sp 1142  
                            ___intlo_sp 18A1                            __pidataBANK0 B0F4  
                          __pidataBANK1 9620                            __pidataBANK2 9AA2  
           __size_of_send_port_data_dma 0052                           __end_of_fabsf 9E52  
                             ?_TMR3_ISR 0046                               ?_TMR5_ISR 0046  
                             ?_TMR6_ISR 0046                          ivt0x8_undefint 00AC  
                         __end_of_fputc 8FD2                           __end_of_fputs A188  
                         __end_of_srand B000                   __end_of_TMR5_CallBack B516  
                         __end_of_putch B6D0                 __end_of_PWM8_Initialize B746  
               __end_of_TMR6_Initialize B202                       _adc_int_t_handler A560  
                __end_of_PMD_Initialize B770                              __end_of_bp FC5B  
                            ??_ADCC_ISR 0046                   __end_of_TMR6_CallBack B55E  
           __size_of_EXT_INT_Initialize 0034                calc_bsoc@log_update_wait 001A  
                __size_of_calc_ror_data 0174                           _DMA1_DMAA_ISR B810  
                 TMR3_ISR@CountCallBack 0010                          _clear_adc_scan B84E  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0001               __end_of_SYSTEM_Initialize AB4C  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer AE78                              __pbssBANK0 0060  
                            __pbssBANK2 02C5                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            _check_help 77B2                 __end_of_conv_raw_result 536C  
                    __size_of_esr_check 02C0                   _INT0_InterruptHandler 0007  
                            ??_INT0_ISR 0046                              ??_INT1_ISR 004C  
                     __end_of_TimerDone B2A2                        _DMA1_DMADCNT_ISR B804  
                    __size_of_init_bsoc 0170              __size_of_UART2_rx_vect_isr 0026  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01BC  
                         _init_port_dma B034                   __end_of_wait_lcd_done B6B6  
      __end_of_TMR3_SetInterruptHandler B392                         __CFG_PPS1WAY$ON 000000  
      __end_of_TMR6_SetInterruptHandler B342                              ??_TMR3_ISR 00E0  
               __end_of_ADCC_Initialize A6B2                              ??_TMR5_ISR 0050  
             __end_of_adc_int_t_handler A5DE                              ??_TMR6_ISR 004B  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler B40A   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler B3E2                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7              __size_of_port_data_dma_ptr 000A  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR B5E4                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan B854  
                               u1006_44 A5C4                                 u1006_45 A5BE  
                               u1203_20 46D0                                 u1210_28 B526  
                               u1205_20 4778                          ?_DMA1_DMAA_ISR 0046  
                      _DMA1_DMASCNT_ISR B7E0                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001E                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0046  
            __size_of_UART2_tx_vect_isr 0028                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                       __end_of_calc_bsoc 4946  
                               _SPI1TXB 003D11                                 _OSCTUNE 0039DE  
                               _PWM8DCH 003F61                                 _PWM8DCL 003F60  
                               _PWM8CON 003F62                                 _SLRCONA 003A43  
                               _SLRCONB 003A53                                 _SLRCONC 003A63  
                               _SLRCOND 003A73                                 _SLRCONE 003A83  
                               _SLRCONF 003A93                              _get_switch B152  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer AE38  
               __size_of_switch_handler 0140                      __size_of_stop_bsoc 0006  
            __end_of_set_load_relay_one B7A2              __end_of_set_load_relay_two B792  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
                         _calc_ror_data 829A                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim B6EA                                 __Lparam 0000  
              __end_of_UART1_Initialize AC66                       __end_of_hid_input A3D0  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 6E5E  
                               ___fladd 3A48                                 ___aomod 7352  
                               ___fldiv 4946                                 ___awdiv 89B2  
                               ___flneg AB4C                                 ___awmod 8FD2  
                               ___flmul 321E                                 ___flsub ABDA  
                               ___fltol 840E                                 ___lodiv 811A  
                               ___lomod 8B00               __end_of_UART1_Receive_ISR B604  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 980A                                 __pcinit 9418  
              __end_of_mode_lamp_bright B7CE                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand B7B2  
                               __ramtop 2000                                 __ptext0 1244  
                               __ptext1 B4AA                                 __ptext2 B5C4  
                               __ptext3 AFCC                                 __ptext4 980A  
                               __ptext5 B034                                 __ptext6 9720  
                               __ptext7 B202                                 __ptext8 B22A  
                               __ptext9 B604                       __end_of_esr_check 6BA0  
                     _UART2_Receive_ISR B67C                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize B746  
                               us621999 70C8                            __size_of_abs 0046  
                               us632999 7580                                 us722999 8C30  
                          __size_of_pad 0114                                 us717999 8284  
                     __end_of_init_bsoc 86F0                                 _isalpha ACF2  
                               _isdigit B0C4                                 _ivln2_h FC5B  
                             _T3CONbits 003FA6                                 _mode_sw 001C  
                     __end_of_lp_filter 7F84                                 _islower B064  
                               _isspace AA10                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize A90A  
                               _isupper B094              __size_of_SYSTEM_Initialize 004A  
                               _sprintf 930E                                 _tolower A4DC  
                 __size_of_display_help 0008                                 _utctime 008E  
                 __size_of_display_info 0008                                 _strncmp 7592  
                               _toupper A458                    end_of_initialization 9518  
             __size_of_convert_adc_data 00B8                      _check_enter_button ADB8  
                             i1u1221_20 8912     __end_of_UART2_SetRxInterruptHandler B2F2  
           _UART2_SetRxInterruptHandler B2CA                               i2u1011_48 A6EA  
                             i2u1011_49 A6FE                               i2u1015_48 B470  
                             i2u1017_48 B496                               i2u1009_48 B198  
                             i2u1220_48 B448                 check_day_time@day_delay 001B  
                     __end_of_set_vterm B640                       __end_of_vfpfcnvrt 321E  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 0040                       __end_of_start_lcd B860  
             __end_of_UART2_Receive_ISR B69A                          wdtdelay@dcount 0092  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 004C  
                 _INT1_InterruptHandler 0004                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc B866                _TMR3_SetInterruptHandler B36A  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler B31A  
                          _display_help B83E                   _TMR5_InterruptHandler 009D  
                          _display_info B836    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags B4F2                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler B432             _ADCC_SetADIInterruptHandler B40A  
                            _update_lcd 91FE                         _calc_model_data 5BA6  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc B4AA                         _DMA1_Initialize A5DE  
                            _start_bsoc B55E                         _SPI1_Initialize B71A  
                 __end_of_get_vterm_ptr B152                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs AF96  
          __end_of_INTERRUPT_Initialize A784                              _vterm_dump 8D80  
                        __end_of___flge 8852                          __end_of___fleq 9C2C  
  __end_of_INT0_DefaultInterruptHandler B874   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler B872              __size_of_UART1_Receive_ISR 0020  
                       _DMA2_Initialize A964                           __pidataBIGRAM 7BC8  
                        __end_of_efgtoa 1244                       __size_of_TMR3_ISR 015E  
                     __size_of_TMR5_ISR 00DE                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 62B4  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 0072  
                        __end_of_memset 68E0                          __end_of_printf A84A  
              __end_of_DMA1_DMADCNT_ISR B80E             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack B5C4                          __end_of_strcpy 9AA2  
                        __end_of_strlen A0F0                     start_initialization 9418  
  __end_of_TMR5_DefaultInterruptHandler AF60   __size_of_TMR5_DefaultInterruptHandler 0038  
          _TMR5_DefaultInterruptHandler AF28         __size_of_PIN_MANAGER_Initialize 0094  
                           __end_of_abs ABDA                   __end_of_INT1_CallBack B5A2  
             __size_of_set_display_info 001E                             __end_of_pad 91FE  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd B252  
                        _switch_handler 8C40           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 02EE  
                 __end_of___fpclassifyf 811A                           _uart2RxBuffer 0500  
              __end_of_DMA1_DMASCNT_ISR B7EE                           _uart2TxBuffer 0354  
                        _DMA1_DMAOR_ISR B81C                     __end_of_hid_display 9620  
            __end_of_send_port_data_dma AAB4                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone B27A                           _ringBufS_init B252  
                           __pdataBANK0 00B1                             __pdataBANK1 0100  
                           __pdataBANK2 0200              __size_of_UART2_Receive_ISR 001E  
                   __size_of_get_switch 002C              __end_of_EXT_INT_Initialize B034  
               __end_of_calc_model_data 5F48                     __end_of_help_button AF28  
       __end_of_eaDogM_WriteStringAtPos AFCC                     __end_of_BVSOC_TABLE FB4B  
                  calc_model_data@bcror 0086                             __pbssBIGRAM 07FF  
               __end_of_DMA1_Initialize A648                    calc_model_data@bvror 008A  
                           __pbssCOMRAM 0001        __end_of_INT0_SetInterruptHandler B3E2  
                         __pcstackBANK0 00E0                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 8D80  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize B730  
              _UART1_RxInterruptHandler 00A9                _UART2_TxInterruptHandler 00AC  
                             __end_of_T FBDB                        _convert_adc_data 9CEC  
                             _calc_bsoc 4204               __size_of_ringBufS_put_dma 00AA  
                          _init_display 9720                  __end_of_DMA1_DMAOR_ISR B826  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00A0  
                    calc_ror_data@bcror 007E                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize A9BE                      calc_ror_data@bvror 0082  
                _PIN_MANAGER_Initialize A188                __size_of_TMR3_Initialize 0046  
                  __end_of_wait_lcd_set B85A                           __pmediumconst FA7A  
                             __ptext100 5BA6                               __ptext101 B860  
                             __ptext110 B2CA                               __ptext102 B55E  
                             __ptext111 AC20                               __ptext103 7DC8  
                             __ptext120 B71A                               __ptext112 B2F2  
                             __ptext104 ABDA                               __ptext121 B730  
                             __ptext113 B1D8                               __ptext105 3A48  
                             __ptext130 A964                               __ptext122 B75C  
                             __ptext114 B31A                               __ptext106 321E  
                             __ptext131 A5DE                               __ptext123 A188  
                             __ptext115 AC66                               __ptext107 AB02  
                             __ptext140 98F0                               __ptext132 B7EE  
                             __ptext124 B746                               __ptext116 B342  
                             __ptext108 A8AC                               __ptext141 ADF8  
                             __ptext133 A648                               __ptext125 A71E  
                             __ptext117 ACAC                               __ptext109 B2A2  
                             __ptext150 AA62                               __ptext142 B4F2  
                             __ptext134 B3E2                               __ptext126 B846  
                             __ptext118 B36A                               __ptext151 B7F8  
                             __ptext143 AF28                               __ptext135 B40A  
                             __ptext127 B000                               __ptext119 B702  
                             __ptext160 A6B4                               __ptext152 B7D0  
                             __ptext144 9C2C                               __ptext136 AE78  
                             __ptext128 B392                               __ptext161 B434  
                             __ptext153 B5A2                               __ptext145 8854  
                             __ptext137 B580                               __ptext129 B3BA  
                             __ptext170 B7E0                               __ptext162 B5E4  
                             __ptext154 B872                               __ptext146 AE38  
                             __ptext138 B86E                               __ptext171 B804  
                             __ptext163 B45C                               __ptext155 B868  
                             __ptext147 B516                               __ptext139 8C40  
                             __ptext172 B810                               __ptext164 B1AC  
                             __ptext156 B180                               __ptext148 B870  
                             __ptext173 B81C                               __ptext165 B484  
                             __ptext157 A560                               __ptext149 4204  
                             __ptext174 0000                               __ptext166 B67C  
                             __ptext158 B874                               __ptext167 B6D0  
                             __ptext159 B876                               __ptext168 B53A  
                             __ptext169 AAB4                               _hid_input A340  
                    __end_of_StartTimer ADB8                      _set_load_relay_one B792  
                    _set_load_relay_two B782                       __size_of_wdtdelay 005A  
                     __size_of_spinners 00E6                       __size_of_vfprintf 00AC  
                              _ADCC_ISR B180                  __CFG_BBSIZE$BBSIZE_512 000000  
                             fabsf@F463 0076                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                               _esr_check 68E0  
               __size_of_get_raw_result 001E                          __size_of_fabsf 00AE  
                             _init_bsoc 8580                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 7DC8  
                           _hid_display 951E                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize A71E  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0046                                _INT0_ISR B7D0  
                              _INT1_ISR AE78                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
                              _LATFbits 003FBF       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 0394  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0443                               _ring_buf2 0400  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack B516  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0046                               _set_vterm B622  
                   __size_of_update_lcd 0110                             _help_button AEF0  
                              _TMR3_ISR 8854                             _BVSOC_TABLE FA7B  
                              _TMR5_ISR 98F0                                _TMR6_ISR B6D0  
                             _port_data 05FF                     __size_of_static_soc 0024  
                             _vfpfcnvrt 2272                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack B4F2  
                            _ADCON0bits 003EF8                      __end_of_check_help 79C4  
                             _start_lcd B85A                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack B53A  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc B860                        _set_display_info B640  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 942C  
                             copy_data1 9452                               copy_data2 9474  
                             copy_data3 949A                _INT0_SetInterruptHandler B3BA  
                   __size_of_vterm_dump 012E     __end_of_UART2_SetTxInterruptHandler B2CA  
           _UART2_SetTxInterruptHandler B2A2                            _uart1RxCount 0023  
                          _uart2RxCount 001D                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 0036                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_TMR3_WriteTimer 0040                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04AC                           _wait_lcd_done B69A  
                          _send_lcd_cmd B22A                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler B876                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
                    __end_of_get_switch B17E                 __size_of_check_day_time 00C0  
                 __end_of_DMA1_DMAA_ISR B81A                      ___fpclassifyf@F463 007A  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0300  
                              ___xxtofl 79C4                       ?_DMA1_DMADCNT_ISR 0046  
           __size_of_check_enter_button 0040                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand B7C0                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 004C                                __ptext10 B252  
                              __ptext11 8580                                __ptext20 B826  
                              __ptext12 A21C                                __ptext21 B84E  
                              __ptext13 951E                                __ptext30 930E  
                              __ptext22 B82E                                __ptext14 A340  
                              __ptext31 B124                                __ptext23 B782  
                              __ptext15 B152                                __ptext40 B85A  
                              __ptext32 AF60                                __ptext24 B792  
                              __ptext16 68E0                                __ptext41 A2AE  
                              __ptext33 91FE                                __ptext25 B7B2  
                              __ptext17 AEB6                                __ptext50 62B4  
                              __ptext42 65F4                                __ptext34 AF96  
                              __ptext26 9CEC                                __ptext18 A784  
                              __ptext51 8B00                                __ptext43 A7E8  
                              __ptext35 A9BE                                __ptext27 B4CE  
                              __ptext19 B770                                __ptext60 7F84  
                              __ptext52 811A                                __ptext44 9E52  
                              __ptext36 B69A                                __ptext28 77B2  
                              __ptext61 840E                                __ptext53 7592  
                              __ptext45 2272                                __ptext37 A90A  
                              __ptext29 8D80                                __ptext70 A3D0  
                              __ptext62 AB4C                                __ptext54 6BA0  
                              __ptext46 57EC                                __ptext38 9FA8  
                              __ptext71 90EA                                __ptext63 9B68  
                              __ptext55 0000                                __ptext47 A458  
                              __ptext39 B854                                __ptext80 B622  
                              __ptext72 A04E                                __ptext64 8FD2  
                              __ptext56 A4DC                                __ptext48 B064  
                              __ptext81 B7A2                                __ptext73 A0F0  
                              __ptext65 89B2                                __ptext57 B094  
                              __ptext49 ACF2                                __ptext90 B83E  
                              __ptext82 B640                                __ptext74 8EAE  
                              __ptext66 536C                                __ptext58 99CE  
                              __ptext91 ADB8                                __ptext83 B6EA  
                              __ptext75 B6B6                                __ptext67 AB94  
                              __ptext59 5F48                                __ptext92 829A  
                              __ptext84 B7C0                                __ptext76 9EFE  
                              __ptext68 7352                                __ptext93 9DA4  
                              __ptext85 AD36                                __ptext77 70DE  
                              __ptext69 6E5E                                __ptext94 4EC0  
                              __ptext86 AEF0                                __ptext78 AA10  
                              __ptext95 A84A                                __ptext87 B27A  
                              __ptext79 B0C4                                __ptext96 B65E  
                              __ptext88 AD78                                __ptext97 79C4  
                              __ptext89 B836                                __ptext98 4946  
                              __ptext99 86F0                        __size_of_isupper 0030  
                              us1127999 6BB2                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                                us1058999 5386  
                              us1139999 631A                                us1148999 586C  
                      __size_of_strncmp 0220                        __size_of_toupper 0084  
                      _ringBufS_put_dma 9EFE                    __end_of_Volts_to_SOC A2AE  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 102E                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_utoa 0340  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0046                   __end_of_init_port_dma B064  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 00A6                               stoa@F1166 0200  
                    ??_DMA1_DMASCNT_ISR 004C            __end_of_ADCC_StartConversion B782  
                              _spi_link 0060                                _wdtdelay A90A  
            __end_of_UART2_Transmit_ISR B1D8                                _spinners 980A  
                              _vfprintf 9E52                __end_of_convert_adc_data 9DA4  
            __end_of_PWM8_LoadDutyValue AD78    __end_of_TMR3_DefaultInterruptHandler B872  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler B870  
  __end_of_INT1_DefaultInterruptHandler B870   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler B86E                      _send_port_data_dma AA62  
                         ??_Default_ISR 0046                             _uart1RxHead 0025  
                __size_of_get_vterm_ptr 002E                             _uart2RxHead 001F  
                           _uart1RxTail 0024                          _get_raw_result B65E  
                           _uart2TxHead 0022                             _uart2RxTail 001E  
                             spinners@s 006C                             _uart2TxTail 0021  
                          _wait_lcd_set B854                        Volts_to_SOC@slot 0019  
                    _EXT_INT_Initialize B000    __end_of_TMR6_DefaultInterruptHandler AB02  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler AAB4  
  __end_of_ADCC_DefaultInterruptHandler B876   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler B874                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long B202  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help B7B2  
                 __end_of_calc_ror_data 840E                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString A04E                   __end_of_mode_lamp_dim B702  
               __end_of_adc_int_handler B878                  __size_of_INT0_CallBack 0022  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0022                      __end_of_update_lcd 930E  
                _uart2TxBufferRemaining 0020                      __end_of_static_soc B4CE  
                    __end_of_start_bsoc B580                          _FVR_Initialize B846  
                __end_of_get_raw_result B67C                        _send_lcd_cmd_dma A9BE  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 0014  
      __end_of_INT1_SetInterruptHandler B3BA               __size_of_UART1_Initialize 0046  
                      ??_DMA1_DMAOR_ISR 004C               __end_of_send_lcd_cmd_long B22A  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR B86E  
        __end_of_PIN_MANAGER_Initialize A21C               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 8EAE                 _eaDogM_WriteStringAtPos AF96  
                         _get_vterm_ptr B124                          _check_adc_scan B82E  
             __size_of_UART2_Initialize 005E  
